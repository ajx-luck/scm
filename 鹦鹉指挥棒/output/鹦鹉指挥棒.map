Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

-W-9 \
  --edf=C:\¹¤¾ß\µ¥Æ¬»úÑ§Ï°×ÊÁÏ\SC8P\SCMCU_IDE_V2.00.07\data\dat\en_msgs.txt \
  -cs -h+ðÐðÄÖ¸»Ó°ô.sym --cmf=ðÐðÄÖ¸»Ó°ô.cmf -z -QSC8P1152A \
  -oC:\Users\hhmm6\AppData\Local\Temp\s7o.2 -MðÐðÄÖ¸»Ó°ô.map -E1 -ver=XC8 \
  -ASTACK=026h-03fh -pstack=STACK -ACODE=00h-03FFh -ASTRCODE=00h-03FFh \
  -ASTRING=00h-0FFhx4 -ACONST=00h-0FFhx4 -AENTRY=00h-0FFhx4 \
  -ACOMMON=040h-04Fh -ABANK0=020h-03Fh -ARAM=020h-03Fh -AABS1=020h-04Fh \
  -ASFR0=00h-01Fh -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE \
  -pcinit=CODE -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG \
  -DCONFIG=2 -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k startup.obj ðÐðÄÖ¸»Ó°ô.obj 

Object code version is 3.11

Machine type is SC8P1152A



                Name                               Link     Load   Length Selector   Space Scale
startup.obj     end_init                              A        A        1        8       0
                reset_vec                             0        0        1        0       0
ðÐðÄÖ¸»Ó°ô.obj  cinit                                 B        B       10        8       0
                intentry                              4        4        6        8       0
                text4                                AF       AF       1F        8       0
                text3                                CE       CE       12        8       0
                text2                                1B       1B       75        8       0
                text1                                90       90       1F        8       0
                maintext                             E0       E0        9        8       0
                cstackBANK0                          24       24        2       20       1
                cstackCOMMON                         49       49        2       40       1
                bssBANK0                             20       20        4       20       1
                bssCOMMON                            40       40        9       40       1
                bitbssCOMMON                        258       4B        1       40       1     8

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              A        A        1         0
                cinit                                 B        B       10         0
                intentry                              4        4        6         0
                reset_vec                             0        0        1         0
                text4                                AF       AF       1F         0
                text3                                CE       CE       12         0
                text2                                1B       1B       75         0
                text1                                90       90       1F         0
                maintext                             E0       E0        9         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         49       49        2         1
                bssCOMMON                            40       40        9         1
                bitbssCOMMON                        258       4B        1         1

        CLASS   BANK0          
                cstackBANK0                          24       24        2         1
                bssBANK0                             20       20        4         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               4E       4E        2         1

        CLASS   SFR0           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0000E5  0000E9         8       0  CODE        2
                bssBANK0                       000020  000006  000026        20       1  BANK0       1
                bssCOMMON                      000040  00000C  00004C        40       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            026-03F            1A           1
        CODE             001-003             3           2
                         0E9-3FF           317
        COMMON           04C-04D             2           1
        CONFIG           2007-2008             2           2
        CONST            001-003             3           2
                         0E9-3FF           100
        ENTRY            001-003             3           2
                         0E9-3FF           100
        IDLOC            2000-2003             4           2
        RAM              026-03F            1A           1
        SFR0             000-01F            20           1
        STACK            026-03F            1A           1
        STRCODE          001-003             3           2
                         0E9-3FF           317
        STRING           001-003             3           2
                         0E9-3FF           100

                                  Symbol Table

PL2                      text2        08B
_B_MainLoop              bitbssCOMMON 258
_INTCON                  (abs)        009
_Init_System             text3        0CE
_Isr_Timer               text4        0AF
_MainTime                bssCOMMON    042
_OPTION_REG              (abs)        007
_OSCCON                  (abs)        008
_PDCONB                  (abs)        00B
_PORTB                   (abs)        005
_T0IF                    (abs)        04A
_TMR0                    (abs)        001
_TRISB                   (abs)        006
_WPUB                    (abs)        00D
__Habs1                  abs1         000
__Hbank0                 bank0        000
__HbitbssCOMMON          bitbssCOMMON 000
__HbssBANK0              bssBANK0     000
__HbssCOMMON             bssCOMMON    000
__Hcinit                 cinit        01B
__Hclrtext               clrtext      000
__Hcode                  code         000
__Hcommon                common       000
__Hconfig                config       000
__HcstackBANK0           cstackBANK0  000
__HcstackCOMMON          cstackCOMMON 000
__Heeprom_data           eeprom_data  000
__Hend_init              end_init     00B
__Hfunctab               functab      000
__Hidloc                 idloc        000
__Hinit                  init         00A
__Hintentry              intentry     00A
__Hmaintext              maintext     000
__Hpa_nodes0             pa_nodes0    000
__Hpowerup               powerup      000
__Hram                   ram          000
__Hreset_vec             reset_vec    001
__Hsfr0                  sfr0         000
__Hspace_0               (abs)        0E9
__Hspace_1               (abs)        259
__Hspace_2               (abs)        000
__Hspace_3               (abs)        000
__Hstack                 stack        000
__Hstrings               strings      000
__Htext                  text         000
__Labs1                  abs1         000
__Lbank0                 bank0        000
__LbitbssCOMMON          bitbssCOMMON 000
__LbssBANK0              bssBANK0     000
__LbssCOMMON             bssCOMMON    000
__Lcinit                 cinit        00B
__Lclrtext               clrtext      000
__Lcode                  code         000
__Lcommon                common       000
__Lconfig                config       000
__LcstackBANK0           cstackBANK0  000
__LcstackCOMMON          cstackCOMMON 000
__Leeprom_data           eeprom_data  000
__Lend_init              end_init     00A
__Lfunctab               functab      000
__Lidloc                 idloc        000
__Linit                  init         00A
__Lintentry              intentry     004
__Lmaintext              maintext     000
__Lpa_nodes0             pa_nodes0    000
__Lpowerup               powerup      000
__Lram                   ram          000
__Lreset_vec             reset_vec    000
__Lsfr0                  sfr0         000
__Lspace_0               (abs)        000
__Lspace_1               (abs)        000
__Lspace_2               (abs)        000
__Lspace_3               (abs)        000
__Lstack                 stack        000
__Lstrings               strings      000
__Ltext                  text         000
__S0                     (abs)        0E9
__S1                     (abs)        04C
__S2                     (abs)        000
___int_sp                stack        000
___latbits               (abs)        000
___sp                    stack        000
__end_ofPL2              text2        090
__end_of_Init_System     text3        0E0
__end_of_Isr_Timer       text4        0CE
__end_of__initialization cinit        019
__end_of_checkIRKey      text2        08B
__end_of_main            maintext     0E9
__end_of_procesWork      text1        0AF
__initialization         cinit        00B
__pbitbssCOMMON          bitbssCOMMON 258
__pbssBANK0              bssBANK0     020
__pbssCOMMON             bssCOMMON    040
__pcstackBANK0           cstackBANK0  024
__pcstackCOMMON          cstackCOMMON 049
__pintentry              intentry     004
__pmaintext              maintext     0E0
__ptext0                 text0        000
__ptext1                 text1        090
__ptext2                 text2        01B
__ptext3                 text3        0CE
__ptext4                 text4        0AF
__size_of_Init_System    (abs)        000
__size_of_Isr_Timer      (abs)        000
__size_of_checkIRKey     (abs)        000
__size_of_main           (abs)        000
__size_of_procesWork     (abs)        000
_checkCount              bssBANK0     020
_checkIRKey              text2        01B
_irLeftStep              bssCOMMON    047
_irRightStep             bssCOMMON    046
_lowDealy                bssCOMMON    044
_main                    maintext     0E0
_procesWork              text1        090
_pwmTime                 bssCOMMON    043
_revLeftCount            bssCOMMON    045
_revLeftZeroCount        bssBANK0     022
_revRightCount           bssBANK0     023
_revRightZeroCount       bssBANK0     021
_waitTimeCount           bssCOMMON    040
_workStep                bssCOMMON    048
btemp                    (abs)        04E
end_of_initialization    cinit        019
interrupt_function       intentry     004
intlevel0                functab      000
intlevel1                functab      000
intlevel2                functab      000
intlevel3                functab      000
intlevel4                functab      000
intlevel5                functab      000
procesWork@tempC         cstackBANK0  025
reset_vec                reset_vec    000
saved_w                  (abs)        04E
stackhi                  (abs)        000
stacklo                  (abs)        000
start                    init         00A
start_initialization     cinit        00B
wtemp0                   (abs)        04E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 28 in file "C:\mcuproject\scm\ðÐðÄÖ¸»Ó°ô\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    2
 This function calls:
		_Init_System
		_checkIRKey
		_procesWork
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _procesWork *****************
 Defined at:
		line 44 in file "C:\mcuproject\scm\ðÐðÄÖ¸»Ó°ô\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tempC           1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       1
      Temps:          0       1
      Totals:         0       2
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _checkIRKey *****************
 Defined at:
		line 88 in file "C:\mcuproject\scm\ðÐðÄÖ¸»Ó°ô\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       1
      Totals:         0       1
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Init_System *****************
 Defined at:
		line 69 in file "C:\mcuproject\scm\ðÐðÄÖ¸»Ó°ô\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Isr_Timer *****************
 Defined at:
		line 190 in file "C:\mcuproject\scm\ðÐðÄÖ¸»Ó°ô\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          2       0
      Totals:         2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__initialization		CODE           	000B	0000	15
		PL2            		CODE           	008B	0000	6

shared estimated size: 21

C:\mcuproject\scm\ðÐðÄÖ¸»Ó°ô\main.c
		_checkIRKey    		CODE           	001B	0000	113
		_main          		CODE           	00E0	0000	10
		_procesWork    		CODE           	0090	0000	32
		_Init_System   		CODE           	00CE	0000	19
		_Isr_Timer     		CODE           	00AF	0000	32

C:\mcuproject\scm\ðÐðÄÖ¸»Ó°ô\main.c estimated size: 206

