Version 3.2 HI-TECH Software Intermediate Code
"26 C:\mcuproject\scm\D17_SC8F6790_tssop20\D17_SC8F6790_tssop20\Touch_Kscan_Library.h
[v _KeyFlag `Vuc ~T0 @X0 -> 0 `x e ]
"19
[v _SystemEnterSleep `(v ~T0 @X0 0 ef ]
[p mainexit ]
"18
[v _CheckTouchKey `(v ~T0 @X0 0 ef ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"16 C:\mcuproject\scm\SC8F67XX开发包\SC8F67XX开发包\SCMCU_IDE_V2.00.15\SCMCU_IDE_V2.00.15\data\include\sc8f679x.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;sc8f679x.h: 16: volatile unsigned char INDF @ 0x00;
"17
[v _TMR0 `Vuc ~T0 @X0 1 e@1 ]
[; ;sc8f679x.h: 17: volatile unsigned char TMR0 @ 0x01;
"18
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;sc8f679x.h: 18: volatile unsigned char PCL @ 0x02;
"19
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;sc8f679x.h: 19: volatile unsigned char STATUS @ 0x03;
"20
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;sc8f679x.h: 20: volatile unsigned char FSR @ 0x04;
"21
[v _PORTA `Vuc ~T0 @X0 1 e@5 ]
[; ;sc8f679x.h: 21: volatile unsigned char PORTA @ 0x05;
"22
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;sc8f679x.h: 22: volatile unsigned char PORTB @ 0x06;
"23
[v _WPUA `Vuc ~T0 @X0 1 e@7 ]
[; ;sc8f679x.h: 23: volatile unsigned char WPUA @ 0x07;
"24
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;sc8f679x.h: 24: volatile unsigned char WPUB @ 0x08;
"25
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;sc8f679x.h: 25: volatile unsigned char IOCB @ 0x09;
"26
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;sc8f679x.h: 26: volatile unsigned char PCLATH @ 0x0A;
"27
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;sc8f679x.h: 27: volatile unsigned char INTCON @ 0x0B;
"28
[v _PIR1 `Vuc ~T0 @X0 1 e@12 ]
[; ;sc8f679x.h: 28: volatile unsigned char PIR1 @ 0x0C;
"29
[v _PIE1 `Vuc ~T0 @X0 1 e@13 ]
[; ;sc8f679x.h: 29: volatile unsigned char PIE1 @ 0x0D;
"30
[v _PWMD23H `Vuc ~T0 @X0 1 e@14 ]
[; ;sc8f679x.h: 30: volatile unsigned char PWMD23H @ 0x0E;
"31
[v _PWM01DT `Vuc ~T0 @X0 1 e@15 ]
[; ;sc8f679x.h: 31: volatile unsigned char PWM01DT @ 0x0F;
"32
[v _PWM23DT `Vuc ~T0 @X0 1 e@16 ]
[; ;sc8f679x.h: 32: volatile unsigned char PWM23DT @ 0x10;
"33
[v _TMR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;sc8f679x.h: 33: volatile unsigned char TMR2 @ 0x11;
"34
[v _T2CON `Vuc ~T0 @X0 1 e@18 ]
[; ;sc8f679x.h: 34: volatile unsigned char T2CON @ 0x12;
"35
[v _PWMCON0 `Vuc ~T0 @X0 1 e@19 ]
[; ;sc8f679x.h: 35: volatile unsigned char PWMCON0 @ 0x13;
"36
[v _PWMCON1 `Vuc ~T0 @X0 1 e@20 ]
[; ;sc8f679x.h: 36: volatile unsigned char PWMCON1 @ 0x14;
"37
[v _PWMTL `Vuc ~T0 @X0 1 e@21 ]
[; ;sc8f679x.h: 37: volatile unsigned char PWMTL @ 0x15;
"38
[v _PWMTH `Vuc ~T0 @X0 1 e@22 ]
[; ;sc8f679x.h: 38: volatile unsigned char PWMTH @ 0x16;
"39
[v _PWMD0L `Vuc ~T0 @X0 1 e@23 ]
[; ;sc8f679x.h: 39: volatile unsigned char PWMD0L @ 0x17;
"40
[v _PWMD1L `Vuc ~T0 @X0 1 e@24 ]
[; ;sc8f679x.h: 40: volatile unsigned char PWMD1L @ 0x18;
"41
[v _PWMD2L `Vuc ~T0 @X0 1 e@25 ]
[; ;sc8f679x.h: 41: volatile unsigned char PWMD2L @ 0x19;
"42
[v _PWMD3L `Vuc ~T0 @X0 1 e@26 ]
[; ;sc8f679x.h: 42: volatile unsigned char PWMD3L @ 0x1A;
"43
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;sc8f679x.h: 43: volatile unsigned char PWMD4L @ 0x1B;
"44
[v _PWMD01H `Vuc ~T0 @X0 1 e@28 ]
[; ;sc8f679x.h: 44: volatile unsigned char PWMD01H @ 0x1C;
"45
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;sc8f679x.h: 45: volatile unsigned char PWMCON2 @ 0x1D;
"46
[v _PWM4TL `Vuc ~T0 @X0 1 e@30 ]
[; ;sc8f679x.h: 46: volatile unsigned char PWM4TL @ 0x1E;
"47
[v _OPTION_REG `Vuc ~T0 @X0 1 e@129 ]
[; ;sc8f679x.h: 47: volatile unsigned char OPTION_REG @ 0x81;
"48
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;sc8f679x.h: 48: volatile unsigned char TRISA @ 0x85;
"49
[v _TRISB `Vuc ~T0 @X0 1 e@134 ]
[; ;sc8f679x.h: 49: volatile unsigned char TRISB @ 0x86;
"50
[v _WPDB `Vuc ~T0 @X0 1 e@135 ]
[; ;sc8f679x.h: 50: volatile unsigned char WPDB @ 0x87;
"51
[v _OSCCON `Vuc ~T0 @X0 1 e@136 ]
[; ;sc8f679x.h: 51: volatile unsigned char OSCCON @ 0x88;
"52
[v _EECON1 `Vuc ~T0 @X0 1 e@140 ]
[; ;sc8f679x.h: 52: volatile unsigned char EECON1 @ 0x8C;
"53
[v _EECON2 `Vuc ~T0 @X0 1 e@141 ]
[; ;sc8f679x.h: 53: volatile unsigned char EECON2 @ 0x8D;
"54
[v _EEDAT `Vuc ~T0 @X0 1 e@142 ]
[; ;sc8f679x.h: 54: volatile unsigned char EEDAT @ 0x8E;
"55
[v _EEDATH `Vuc ~T0 @X0 1 e@143 ]
[; ;sc8f679x.h: 55: volatile unsigned char EEDATH @ 0x8F;
"56
[v _EEADR `Vuc ~T0 @X0 1 e@144 ]
[; ;sc8f679x.h: 56: volatile unsigned char EEADR @ 0x90;
"57
[v _PR2 `Vuc ~T0 @X0 1 e@145 ]
[; ;sc8f679x.h: 57: volatile unsigned char PR2 @ 0x91;
"58
[v _KEYCON0 `Vuc ~T0 @X0 1 e@146 ]
[; ;sc8f679x.h: 58: volatile unsigned char KEYCON0 @ 0x92;
"59
[v _KEYCON1 `Vuc ~T0 @X0 1 e@147 ]
[; ;sc8f679x.h: 59: volatile unsigned char KEYCON1 @ 0x93;
"60
[v _KEYDATAL `Vuc ~T0 @X0 1 e@148 ]
[; ;sc8f679x.h: 60: volatile unsigned char KEYDATAL @ 0x94;
"61
[v _KEYDATAH `Vuc ~T0 @X0 1 e@149 ]
[; ;sc8f679x.h: 61: volatile unsigned char KEYDATAH @ 0x95;
"62
[v _EEADRH `Vuc ~T0 @X0 1 e@150 ]
[; ;sc8f679x.h: 62: volatile unsigned char EEADRH @ 0x96;
"63
[v _KEYCON2 `Vuc ~T0 @X0 1 e@151 ]
[; ;sc8f679x.h: 63: volatile unsigned char KEYCON2 @ 0x97;
"64
[v _OPA0CON `Vuc ~T0 @X0 1 e@152 ]
[; ;sc8f679x.h: 64: volatile unsigned char OPA0CON @ 0x98;
"65
[v _OPA0ADJ `Vuc ~T0 @X0 1 e@153 ]
[; ;sc8f679x.h: 65: volatile unsigned char OPA0ADJ @ 0x99;
"66
[v _OPA1CON `Vuc ~T0 @X0 1 e@154 ]
[; ;sc8f679x.h: 66: volatile unsigned char OPA1CON @ 0x9A;
"67
[v _OPA1ADJ `Vuc ~T0 @X0 1 e@155 ]
[; ;sc8f679x.h: 67: volatile unsigned char OPA1ADJ @ 0x9B;
"68
[v _ADCON1 `Vuc ~T0 @X0 1 e@156 ]
[; ;sc8f679x.h: 68: volatile unsigned char ADCON1 @ 0x9C;
"69
[v _ADCON0 `Vuc ~T0 @X0 1 e@157 ]
[; ;sc8f679x.h: 69: volatile unsigned char ADCON0 @ 0x9D;
"70
[v _ADRESL `Vuc ~T0 @X0 1 e@158 ]
[; ;sc8f679x.h: 70: volatile unsigned char ADRESL @ 0x9E;
"71
[v _ADRESH `Vuc ~T0 @X0 1 e@159 ]
[; ;sc8f679x.h: 71: volatile unsigned char ADRESH @ 0x9F;
"72
[v _BUZCON `Vuc ~T0 @X0 1 e@261 ]
[; ;sc8f679x.h: 72: volatile unsigned char BUZCON @ 0x105;
"73
[v _PIR2 `Vuc ~T0 @X0 1 e@263 ]
[; ;sc8f679x.h: 73: volatile unsigned char PIR2 @ 0x107;
"74
[v _PIE2 `Vuc ~T0 @X0 1 e@264 ]
[; ;sc8f679x.h: 74: volatile unsigned char PIE2 @ 0x108;
"75
[v _IICADD `Vuc ~T0 @X0 1 e@265 ]
[; ;sc8f679x.h: 75: volatile unsigned char IICADD @ 0x109;
"76
[v _IICCON `Vuc ~T0 @X0 1 e@268 ]
[; ;sc8f679x.h: 76: volatile unsigned char IICCON @ 0x10C;
"77
[v _IICCON2 `Vuc ~T0 @X0 1 e@269 ]
[; ;sc8f679x.h: 77: volatile unsigned char IICCON2 @ 0x10D;
"78
[v _IICBUF `Vuc ~T0 @X0 1 e@270 ]
[; ;sc8f679x.h: 78: volatile unsigned char IICBUF @ 0x10E;
"79
[v _IICSTAT `Vuc ~T0 @X0 1 e@271 ]
[; ;sc8f679x.h: 79: volatile unsigned char IICSTAT @ 0x10F;
"80
[v _ANSEL0 `Vuc ~T0 @X0 1 e@272 ]
[; ;sc8f679x.h: 80: volatile unsigned char ANSEL0 @ 0x110;
"81
[v _ANSEL1 `Vuc ~T0 @X0 1 e@273 ]
[; ;sc8f679x.h: 81: volatile unsigned char ANSEL1 @ 0x111;
"82
[v _ANSEL2 `Vuc ~T0 @X0 1 e@274 ]
[; ;sc8f679x.h: 82: volatile unsigned char ANSEL2 @ 0x112;
"83
[v _WPDA `Vuc ~T0 @X0 1 e@275 ]
[; ;sc8f679x.h: 83: volatile unsigned char WPDA @ 0x113;
"84
[v _WPDC `Vuc ~T0 @X0 1 e@276 ]
[; ;sc8f679x.h: 84: volatile unsigned char WPDC @ 0x114;
"85
[v _WPUC `Vuc ~T0 @X0 1 e@277 ]
[; ;sc8f679x.h: 85: volatile unsigned char WPUC @ 0x115;
"86
[v _CMPCON `Vuc ~T0 @X0 1 e@278 ]
[; ;sc8f679x.h: 86: volatile unsigned char CMPCON @ 0x116;
"87
[v _TXSTA `Vuc ~T0 @X0 1 e@279 ]
[; ;sc8f679x.h: 87: volatile unsigned char TXSTA @ 0x117;
"88
[v _RCSTA `Vuc ~T0 @X0 1 e@280 ]
[; ;sc8f679x.h: 88: volatile unsigned char RCSTA @ 0x118;
"89
[v _SPBRG `Vuc ~T0 @X0 1 e@281 ]
[; ;sc8f679x.h: 89: volatile unsigned char SPBRG @ 0x119;
"90
[v _TXREG `Vuc ~T0 @X0 1 e@282 ]
[; ;sc8f679x.h: 90: volatile unsigned char TXREG @ 0x11A;
"91
[v _RCREG `Vuc ~T0 @X0 1 e@283 ]
[; ;sc8f679x.h: 91: volatile unsigned char RCREG @ 0x11B;
"92
[v _SPIBUF `Vuc ~T0 @X0 1 e@284 ]
[; ;sc8f679x.h: 92: volatile unsigned char SPIBUF @ 0x11C;
"93
[v _SPICON `Vuc ~T0 @X0 1 e@285 ]
[; ;sc8f679x.h: 93: volatile unsigned char SPICON @ 0x11D;
"94
[v _SPICON2 `Vuc ~T0 @X0 1 e@286 ]
[; ;sc8f679x.h: 94: volatile unsigned char SPICON2 @ 0x11E;
"95
[v _LVDCON `Vuc ~T0 @X0 1 e@287 ]
[; ;sc8f679x.h: 95: volatile unsigned char LVDCON @ 0x11F;
"96
[v _PORTC `Vuc ~T0 @X0 1 e@389 ]
[; ;sc8f679x.h: 96: volatile unsigned char PORTC @ 0x185;
"97
[v _TRISC `Vuc ~T0 @X0 1 e@390 ]
[; ;sc8f679x.h: 97: volatile unsigned char TRISC @ 0x186;
"98
[v _IOCC `Vuc ~T0 @X0 1 e@391 ]
[; ;sc8f679x.h: 98: volatile unsigned char IOCC @ 0x187;
"99
[v _IOCA `Vuc ~T0 @X0 1 e@392 ]
[; ;sc8f679x.h: 99: volatile unsigned char IOCA @ 0x188;
"100
[v _PWMIOS0 `Vuc ~T0 @X0 1 e@396 ]
[; ;sc8f679x.h: 100: volatile unsigned char PWMIOS0 @ 0x18C;
"101
[v _PWMIOS1 `Vuc ~T0 @X0 1 e@397 ]
[; ;sc8f679x.h: 101: volatile unsigned char PWMIOS1 @ 0x18D;
"102
[v _PWMIOS2 `Vuc ~T0 @X0 1 e@398 ]
[; ;sc8f679x.h: 102: volatile unsigned char PWMIOS2 @ 0x18E;
"103
[v _LCDCON `Vuc ~T0 @X0 1 e@399 ]
[; ;sc8f679x.h: 103: volatile unsigned char LCDCON @ 0x18F;
"104
[v _CSSEL0 `Vuc ~T0 @X0 1 e@400 ]
[; ;sc8f679x.h: 104: volatile unsigned char CSSEL0 @ 0x190;
"105
[v _CSSEL1 `Vuc ~T0 @X0 1 e@401 ]
[; ;sc8f679x.h: 105: volatile unsigned char CSSEL1 @ 0x191;
"106
[v _CSSEL2 `Vuc ~T0 @X0 1 e@402 ]
[; ;sc8f679x.h: 106: volatile unsigned char CSSEL2 @ 0x192;
"107
[v _CSEN0 `Vuc ~T0 @X0 1 e@403 ]
[; ;sc8f679x.h: 107: volatile unsigned char CSEN0 @ 0x193;
"108
[v _CSEN1 `Vuc ~T0 @X0 1 e@404 ]
[; ;sc8f679x.h: 108: volatile unsigned char CSEN1 @ 0x194;
"109
[v _CSEN2 `Vuc ~T0 @X0 1 e@405 ]
[; ;sc8f679x.h: 109: volatile unsigned char CSEN2 @ 0x195;
"110
[v _TABLE_SPL `Vuc ~T0 @X0 1 e@406 ]
[; ;sc8f679x.h: 110: volatile unsigned char TABLE_SPL @ 0x196;
"111
[v _TABLE_SPH `Vuc ~T0 @X0 1 e@407 ]
[; ;sc8f679x.h: 111: volatile unsigned char TABLE_SPH @ 0x197;
"112
[v _TABLE_DATAH `Vuc ~T0 @X0 1 e@408 ]
[; ;sc8f679x.h: 112: volatile unsigned char TABLE_DATAH @ 0x198;
"113
[v _TMR1L `Vuc ~T0 @X0 1 e@409 ]
[; ;sc8f679x.h: 113: volatile unsigned char TMR1L @ 0x199;
"114
[v _TMR1H `Vuc ~T0 @X0 1 e@410 ]
[; ;sc8f679x.h: 114: volatile unsigned char TMR1H @ 0x19A;
"115
[v _T1CON `Vuc ~T0 @X0 1 e@411 ]
[; ;sc8f679x.h: 115: volatile unsigned char T1CON @ 0x19B;
"119
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;sc8f679x.h: 119: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"120
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;sc8f679x.h: 120: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"121
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;sc8f679x.h: 121: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"122
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;sc8f679x.h: 122: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"123
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;sc8f679x.h: 123: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"124
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;sc8f679x.h: 124: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"125
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;sc8f679x.h: 125: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"126
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;sc8f679x.h: 126: volatile bit C @ ((unsigned)&STATUS*8)+0;
"129
[v _RA7 `Vb ~T0 @X0 1 e@47 ]
[; ;sc8f679x.h: 129: volatile bit RA7 @ ((unsigned)&PORTA*8)+7;
"130
[v _RA6 `Vb ~T0 @X0 1 e@46 ]
[; ;sc8f679x.h: 130: volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
"131
[v _RA5 `Vb ~T0 @X0 1 e@45 ]
[; ;sc8f679x.h: 131: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"132
[v _RA4 `Vb ~T0 @X0 1 e@44 ]
[; ;sc8f679x.h: 132: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"133
[v _RA3 `Vb ~T0 @X0 1 e@43 ]
[; ;sc8f679x.h: 133: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"134
[v _RA2 `Vb ~T0 @X0 1 e@42 ]
[; ;sc8f679x.h: 134: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"135
[v _RA1 `Vb ~T0 @X0 1 e@41 ]
[; ;sc8f679x.h: 135: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"136
[v _RA0 `Vb ~T0 @X0 1 e@40 ]
[; ;sc8f679x.h: 136: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"139
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;sc8f679x.h: 139: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"140
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;sc8f679x.h: 140: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"141
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;sc8f679x.h: 141: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"142
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;sc8f679x.h: 142: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"143
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;sc8f679x.h: 143: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"144
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;sc8f679x.h: 144: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"145
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;sc8f679x.h: 145: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"146
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;sc8f679x.h: 146: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"149
[v _WPUA7 `Vb ~T0 @X0 1 e@63 ]
[; ;sc8f679x.h: 149: volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;
"150
[v _WPUA6 `Vb ~T0 @X0 1 e@62 ]
[; ;sc8f679x.h: 150: volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
"151
[v _WPUA5 `Vb ~T0 @X0 1 e@61 ]
[; ;sc8f679x.h: 151: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"152
[v _WPUA4 `Vb ~T0 @X0 1 e@60 ]
[; ;sc8f679x.h: 152: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"153
[v _WPUA3 `Vb ~T0 @X0 1 e@59 ]
[; ;sc8f679x.h: 153: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"154
[v _WPUA2 `Vb ~T0 @X0 1 e@58 ]
[; ;sc8f679x.h: 154: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"155
[v _WPUA1 `Vb ~T0 @X0 1 e@57 ]
[; ;sc8f679x.h: 155: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"156
[v _WPUA0 `Vb ~T0 @X0 1 e@56 ]
[; ;sc8f679x.h: 156: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"159
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;sc8f679x.h: 159: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"160
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;sc8f679x.h: 160: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"161
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;sc8f679x.h: 161: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"162
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;sc8f679x.h: 162: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"163
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;sc8f679x.h: 163: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"164
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;sc8f679x.h: 164: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"165
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;sc8f679x.h: 165: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"166
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;sc8f679x.h: 166: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"169
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;sc8f679x.h: 169: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"170
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;sc8f679x.h: 170: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"171
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;sc8f679x.h: 171: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"172
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;sc8f679x.h: 172: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"173
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;sc8f679x.h: 173: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"174
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;sc8f679x.h: 174: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"175
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;sc8f679x.h: 175: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"176
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;sc8f679x.h: 176: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"179
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;sc8f679x.h: 179: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"180
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;sc8f679x.h: 180: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"181
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;sc8f679x.h: 181: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"182
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;sc8f679x.h: 182: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"183
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;sc8f679x.h: 183: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"184
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;sc8f679x.h: 184: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"185
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;sc8f679x.h: 185: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"186
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;sc8f679x.h: 186: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"189
[v _TMR1IF `Vb ~T0 @X0 1 e@103 ]
[; ;sc8f679x.h: 189: volatile bit TMR1IF @ ((unsigned)&PIR1*8)+7;
"190
[v _EEIF `Vb ~T0 @X0 1 e@102 ]
[; ;sc8f679x.h: 190: volatile bit EEIF @ ((unsigned)&PIR1*8)+6;
"191
[v _RCIF `Vb ~T0 @X0 1 e@101 ]
[; ;sc8f679x.h: 191: volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
"192
[v _TXIF `Vb ~T0 @X0 1 e@100 ]
[; ;sc8f679x.h: 192: volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
"193
[v _SPIIF `Vb ~T0 @X0 1 e@99 ]
[; ;sc8f679x.h: 193: volatile bit SPIIF @ ((unsigned)&PIR1*8)+3;
"194
[v _PWMIF `Vb ~T0 @X0 1 e@98 ]
[; ;sc8f679x.h: 194: volatile bit PWMIF @ ((unsigned)&PIR1*8)+2;
"195
[v _TMR2IF `Vb ~T0 @X0 1 e@97 ]
[; ;sc8f679x.h: 195: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"196
[v _ADIF `Vb ~T0 @X0 1 e@96 ]
[; ;sc8f679x.h: 196: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"199
[v _TMR1IE `Vb ~T0 @X0 1 e@111 ]
[; ;sc8f679x.h: 199: volatile bit TMR1IE @ ((unsigned)&PIE1*8)+7;
"200
[v _EEIE `Vb ~T0 @X0 1 e@110 ]
[; ;sc8f679x.h: 200: volatile bit EEIE @ ((unsigned)&PIE1*8)+6;
"201
[v _RCIE `Vb ~T0 @X0 1 e@109 ]
[; ;sc8f679x.h: 201: volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
"202
[v _TXIE `Vb ~T0 @X0 1 e@108 ]
[; ;sc8f679x.h: 202: volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
"203
[v _SPIIE `Vb ~T0 @X0 1 e@107 ]
[; ;sc8f679x.h: 203: volatile bit SPIIE @ ((unsigned)&PIE1*8)+3;
"204
[v _PWMIE `Vb ~T0 @X0 1 e@106 ]
[; ;sc8f679x.h: 204: volatile bit PWMIE @ ((unsigned)&PIE1*8)+2;
"205
[v _TMR2IE `Vb ~T0 @X0 1 e@105 ]
[; ;sc8f679x.h: 205: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"206
[v _ADIE `Vb ~T0 @X0 1 e@104 ]
[; ;sc8f679x.h: 206: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"209
[v _PWMD39 `Vb ~T0 @X0 1 e@117 ]
[; ;sc8f679x.h: 209: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"210
[v _PWMD38 `Vb ~T0 @X0 1 e@116 ]
[; ;sc8f679x.h: 210: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"211
[v _PWMD29 `Vb ~T0 @X0 1 e@113 ]
[; ;sc8f679x.h: 211: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"212
[v _PWMD28 `Vb ~T0 @X0 1 e@112 ]
[; ;sc8f679x.h: 212: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
"215
[v _CLK_SEL `Vb ~T0 @X0 1 e@151 ]
[; ;sc8f679x.h: 215: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"216
[v _TOUTPS3 `Vb ~T0 @X0 1 e@150 ]
[; ;sc8f679x.h: 216: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"217
[v _TOUTPS2 `Vb ~T0 @X0 1 e@149 ]
[; ;sc8f679x.h: 217: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"218
[v _TOUTPS1 `Vb ~T0 @X0 1 e@148 ]
[; ;sc8f679x.h: 218: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"219
[v _TOUTPS0 `Vb ~T0 @X0 1 e@147 ]
[; ;sc8f679x.h: 219: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"220
[v _TMR2ON `Vb ~T0 @X0 1 e@146 ]
[; ;sc8f679x.h: 220: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"221
[v _T2CKPS1 `Vb ~T0 @X0 1 e@145 ]
[; ;sc8f679x.h: 221: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"222
[v _T2CKPS0 `Vb ~T0 @X0 1 e@144 ]
[; ;sc8f679x.h: 222: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"225
[v _CLKDIV2 `Vb ~T0 @X0 1 e@159 ]
[; ;sc8f679x.h: 225: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"226
[v _CLKDIV1 `Vb ~T0 @X0 1 e@158 ]
[; ;sc8f679x.h: 226: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"227
[v _CLKDIV0 `Vb ~T0 @X0 1 e@157 ]
[; ;sc8f679x.h: 227: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"228
[v _PWM4EN `Vb ~T0 @X0 1 e@156 ]
[; ;sc8f679x.h: 228: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"229
[v _PWM3EN `Vb ~T0 @X0 1 e@155 ]
[; ;sc8f679x.h: 229: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"230
[v _PWM2EN `Vb ~T0 @X0 1 e@154 ]
[; ;sc8f679x.h: 230: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"231
[v _PWM1EN `Vb ~T0 @X0 1 e@153 ]
[; ;sc8f679x.h: 231: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"232
[v _PWM0EN `Vb ~T0 @X0 1 e@152 ]
[; ;sc8f679x.h: 232: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"235
[v _PWM2DTEN `Vb ~T0 @X0 1 e@165 ]
[; ;sc8f679x.h: 235: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"236
[v _PWM0DTEN `Vb ~T0 @X0 1 e@164 ]
[; ;sc8f679x.h: 236: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"237
[v _DT_DIV1 `Vb ~T0 @X0 1 e@161 ]
[; ;sc8f679x.h: 237: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"238
[v _DT_DIV0 `Vb ~T0 @X0 1 e@160 ]
[; ;sc8f679x.h: 238: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"241
[v _PWMD49 `Vb ~T0 @X0 1 e@181 ]
[; ;sc8f679x.h: 241: volatile bit PWMD49 @ ((unsigned)&PWMTH*8)+5;
"242
[v _PWMD48 `Vb ~T0 @X0 1 e@180 ]
[; ;sc8f679x.h: 242: volatile bit PWMD48 @ ((unsigned)&PWMTH*8)+4;
"243
[v _PWM4T9 `Vb ~T0 @X0 1 e@179 ]
[; ;sc8f679x.h: 243: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"244
[v _PWM4T8 `Vb ~T0 @X0 1 e@178 ]
[; ;sc8f679x.h: 244: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"245
[v _PWMT9 `Vb ~T0 @X0 1 e@177 ]
[; ;sc8f679x.h: 245: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"246
[v _PWMT8 `Vb ~T0 @X0 1 e@176 ]
[; ;sc8f679x.h: 246: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"249
[v _PWMD19 `Vb ~T0 @X0 1 e@229 ]
[; ;sc8f679x.h: 249: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"250
[v _PWMD18 `Vb ~T0 @X0 1 e@228 ]
[; ;sc8f679x.h: 250: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"251
[v _PWMD09 `Vb ~T0 @X0 1 e@225 ]
[; ;sc8f679x.h: 251: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"252
[v _PWMD08 `Vb ~T0 @X0 1 e@224 ]
[; ;sc8f679x.h: 252: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"255
[v _BUZEN `Vb ~T0 @X0 1 e@239 ]
[; ;sc8f679x.h: 255: volatile bit BUZEN @ ((unsigned)&PWMCON2*8)+7;
"256
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;sc8f679x.h: 256: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"257
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;sc8f679x.h: 257: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"258
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;sc8f679x.h: 258: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"259
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;sc8f679x.h: 259: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"260
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;sc8f679x.h: 260: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"263
[v _INTEDG `Vb ~T0 @X0 1 e@1038 ]
[; ;sc8f679x.h: 263: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"264
[v _T0CS `Vb ~T0 @X0 1 e@1037 ]
[; ;sc8f679x.h: 264: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"265
[v _T0SE `Vb ~T0 @X0 1 e@1036 ]
[; ;sc8f679x.h: 265: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"266
[v _PSA `Vb ~T0 @X0 1 e@1035 ]
[; ;sc8f679x.h: 266: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"267
[v _PS2 `Vb ~T0 @X0 1 e@1034 ]
[; ;sc8f679x.h: 267: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"268
[v _PS1 `Vb ~T0 @X0 1 e@1033 ]
[; ;sc8f679x.h: 268: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"269
[v _PS0 `Vb ~T0 @X0 1 e@1032 ]
[; ;sc8f679x.h: 269: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"272
[v _TRISA7 `Vb ~T0 @X0 1 e@1071 ]
[; ;sc8f679x.h: 272: volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
"273
[v _TRISA6 `Vb ~T0 @X0 1 e@1070 ]
[; ;sc8f679x.h: 273: volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
"274
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;sc8f679x.h: 274: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"275
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;sc8f679x.h: 275: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"276
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;sc8f679x.h: 276: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"277
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;sc8f679x.h: 277: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"278
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;sc8f679x.h: 278: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"279
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;sc8f679x.h: 279: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"282
[v _TRISB7 `Vb ~T0 @X0 1 e@1079 ]
[; ;sc8f679x.h: 282: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"283
[v _TRISB6 `Vb ~T0 @X0 1 e@1078 ]
[; ;sc8f679x.h: 283: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"284
[v _TRISB5 `Vb ~T0 @X0 1 e@1077 ]
[; ;sc8f679x.h: 284: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"285
[v _TRISB4 `Vb ~T0 @X0 1 e@1076 ]
[; ;sc8f679x.h: 285: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"286
[v _TRISB3 `Vb ~T0 @X0 1 e@1075 ]
[; ;sc8f679x.h: 286: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"287
[v _TRISB2 `Vb ~T0 @X0 1 e@1074 ]
[; ;sc8f679x.h: 287: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"288
[v _TRISB1 `Vb ~T0 @X0 1 e@1073 ]
[; ;sc8f679x.h: 288: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"289
[v _TRISB0 `Vb ~T0 @X0 1 e@1072 ]
[; ;sc8f679x.h: 289: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"292
[v _WPDB7 `Vb ~T0 @X0 1 e@1087 ]
[; ;sc8f679x.h: 292: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"293
[v _WPDB6 `Vb ~T0 @X0 1 e@1086 ]
[; ;sc8f679x.h: 293: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"294
[v _WPDB5 `Vb ~T0 @X0 1 e@1085 ]
[; ;sc8f679x.h: 294: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"295
[v _WPDB4 `Vb ~T0 @X0 1 e@1084 ]
[; ;sc8f679x.h: 295: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"296
[v _WPDB3 `Vb ~T0 @X0 1 e@1083 ]
[; ;sc8f679x.h: 296: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"297
[v _WPDB2 `Vb ~T0 @X0 1 e@1082 ]
[; ;sc8f679x.h: 297: volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
"298
[v _WPDB1 `Vb ~T0 @X0 1 e@1081 ]
[; ;sc8f679x.h: 298: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"299
[v _WPDB0 `Vb ~T0 @X0 1 e@1080 ]
[; ;sc8f679x.h: 299: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"302
[v _IRCF2 `Vb ~T0 @X0 1 e@1094 ]
[; ;sc8f679x.h: 302: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"303
[v _IRCF1 `Vb ~T0 @X0 1 e@1093 ]
[; ;sc8f679x.h: 303: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"304
[v _IRCF0 `Vb ~T0 @X0 1 e@1092 ]
[; ;sc8f679x.h: 304: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"305
[v _SWDTEN `Vb ~T0 @X0 1 e@1089 ]
[; ;sc8f679x.h: 305: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"308
[v _EEPGD `Vb ~T0 @X0 1 e@1127 ]
[; ;sc8f679x.h: 308: volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
"309
[v _WRERR `Vb ~T0 @X0 1 e@1123 ]
[; ;sc8f679x.h: 309: volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
"310
[v _WREN `Vb ~T0 @X0 1 e@1122 ]
[; ;sc8f679x.h: 310: volatile bit WREN @ ((unsigned)&EECON1*8)+2;
"311
[v _WR `Vb ~T0 @X0 1 e@1121 ]
[; ;sc8f679x.h: 311: volatile bit WR @ ((unsigned)&EECON1*8)+1;
"312
[v _RD `Vb ~T0 @X0 1 e@1120 ]
[; ;sc8f679x.h: 312: volatile bit RD @ ((unsigned)&EECON1*8)+0;
"315
[v _EEDAT7 `Vb ~T0 @X0 1 e@1143 ]
[; ;sc8f679x.h: 315: volatile bit EEDAT7 @ ((unsigned)&EEDAT*8)+7;
"316
[v _EEDAT6 `Vb ~T0 @X0 1 e@1142 ]
[; ;sc8f679x.h: 316: volatile bit EEDAT6 @ ((unsigned)&EEDAT*8)+6;
"317
[v _EEDAT5 `Vb ~T0 @X0 1 e@1141 ]
[; ;sc8f679x.h: 317: volatile bit EEDAT5 @ ((unsigned)&EEDAT*8)+5;
"318
[v _EEDAT4 `Vb ~T0 @X0 1 e@1140 ]
[; ;sc8f679x.h: 318: volatile bit EEDAT4 @ ((unsigned)&EEDAT*8)+4;
"319
[v _EEDAT3 `Vb ~T0 @X0 1 e@1139 ]
[; ;sc8f679x.h: 319: volatile bit EEDAT3 @ ((unsigned)&EEDAT*8)+3;
"320
[v _EEDAT2 `Vb ~T0 @X0 1 e@1138 ]
[; ;sc8f679x.h: 320: volatile bit EEDAT2 @ ((unsigned)&EEDAT*8)+2;
"321
[v _EEDAT1 `Vb ~T0 @X0 1 e@1137 ]
[; ;sc8f679x.h: 321: volatile bit EEDAT1 @ ((unsigned)&EEDAT*8)+1;
"322
[v _EEDAT0 `Vb ~T0 @X0 1 e@1136 ]
[; ;sc8f679x.h: 322: volatile bit EEDAT0 @ ((unsigned)&EEDAT*8)+0;
"325
[v _EEDATH7 `Vb ~T0 @X0 1 e@1151 ]
[; ;sc8f679x.h: 325: volatile bit EEDATH7 @ ((unsigned)&EEDATH*8)+7;
"326
[v _EEDATH6 `Vb ~T0 @X0 1 e@1150 ]
[; ;sc8f679x.h: 326: volatile bit EEDATH6 @ ((unsigned)&EEDATH*8)+6;
"327
[v _EEDATH5 `Vb ~T0 @X0 1 e@1149 ]
[; ;sc8f679x.h: 327: volatile bit EEDATH5 @ ((unsigned)&EEDATH*8)+5;
"328
[v _EEDATH4 `Vb ~T0 @X0 1 e@1148 ]
[; ;sc8f679x.h: 328: volatile bit EEDATH4 @ ((unsigned)&EEDATH*8)+4;
"329
[v _EEDATH3 `Vb ~T0 @X0 1 e@1147 ]
[; ;sc8f679x.h: 329: volatile bit EEDATH3 @ ((unsigned)&EEDATH*8)+3;
"330
[v _EEDATH2 `Vb ~T0 @X0 1 e@1146 ]
[; ;sc8f679x.h: 330: volatile bit EEDATH2 @ ((unsigned)&EEDATH*8)+2;
"331
[v _EEDATH1 `Vb ~T0 @X0 1 e@1145 ]
[; ;sc8f679x.h: 331: volatile bit EEDATH1 @ ((unsigned)&EEDATH*8)+1;
"332
[v _EEDATH0 `Vb ~T0 @X0 1 e@1144 ]
[; ;sc8f679x.h: 332: volatile bit EEDATH0 @ ((unsigned)&EEDATH*8)+0;
"335
[v _EEADR7 `Vb ~T0 @X0 1 e@1159 ]
[; ;sc8f679x.h: 335: volatile bit EEADR7 @ ((unsigned)&EEADR*8)+7;
"336
[v _EEADR6 `Vb ~T0 @X0 1 e@1158 ]
[; ;sc8f679x.h: 336: volatile bit EEADR6 @ ((unsigned)&EEADR*8)+6;
"337
[v _EEADR5 `Vb ~T0 @X0 1 e@1157 ]
[; ;sc8f679x.h: 337: volatile bit EEADR5 @ ((unsigned)&EEADR*8)+5;
"338
[v _EEADR4 `Vb ~T0 @X0 1 e@1156 ]
[; ;sc8f679x.h: 338: volatile bit EEADR4 @ ((unsigned)&EEADR*8)+4;
"339
[v _EEADR3 `Vb ~T0 @X0 1 e@1155 ]
[; ;sc8f679x.h: 339: volatile bit EEADR3 @ ((unsigned)&EEADR*8)+3;
"340
[v _EEADR2 `Vb ~T0 @X0 1 e@1154 ]
[; ;sc8f679x.h: 340: volatile bit EEADR2 @ ((unsigned)&EEADR*8)+2;
"341
[v _EEADR1 `Vb ~T0 @X0 1 e@1153 ]
[; ;sc8f679x.h: 341: volatile bit EEADR1 @ ((unsigned)&EEADR*8)+1;
"342
[v _EEADR0 `Vb ~T0 @X0 1 e@1152 ]
[; ;sc8f679x.h: 342: volatile bit EEADR0 @ ((unsigned)&EEADR*8)+0;
"345
[v _KDONE `Vb ~T0 @X0 1 e@1175 ]
[; ;sc8f679x.h: 345: volatile bit KDONE @ ((unsigned)&KEYCON0*8)+7;
"346
[v _KCAPK2 `Vb ~T0 @X0 1 e@1173 ]
[; ;sc8f679x.h: 346: volatile bit KCAPK2 @ ((unsigned)&KEYCON0*8)+5;
"347
[v _KCAPK1 `Vb ~T0 @X0 1 e@1172 ]
[; ;sc8f679x.h: 347: volatile bit KCAPK1 @ ((unsigned)&KEYCON0*8)+4;
"348
[v _KCAPK0 `Vb ~T0 @X0 1 e@1171 ]
[; ;sc8f679x.h: 348: volatile bit KCAPK0 @ ((unsigned)&KEYCON0*8)+3;
"349
[v _KOUT `Vb ~T0 @X0 1 e@1170 ]
[; ;sc8f679x.h: 349: volatile bit KOUT @ ((unsigned)&KEYCON0*8)+2;
"350
[v _KCAP `Vb ~T0 @X0 1 e@1169 ]
[; ;sc8f679x.h: 350: volatile bit KCAP @ ((unsigned)&KEYCON0*8)+1;
"351
[v _KEN `Vb ~T0 @X0 1 e@1168 ]
[; ;sc8f679x.h: 351: volatile bit KEN @ ((unsigned)&KEYCON0*8)+0;
"354
[v _KVREF1 `Vb ~T0 @X0 1 e@1183 ]
[; ;sc8f679x.h: 354: volatile bit KVREF1 @ ((unsigned)&KEYCON1*8)+7;
"355
[v _KVREF0 `Vb ~T0 @X0 1 e@1182 ]
[; ;sc8f679x.h: 355: volatile bit KVREF0 @ ((unsigned)&KEYCON1*8)+6;
"356
[v _KCLK1 `Vb ~T0 @X0 1 e@1181 ]
[; ;sc8f679x.h: 356: volatile bit KCLK1 @ ((unsigned)&KEYCON1*8)+5;
"357
[v _KCLK0 `Vb ~T0 @X0 1 e@1180 ]
[; ;sc8f679x.h: 357: volatile bit KCLK0 @ ((unsigned)&KEYCON1*8)+4;
"358
[v _KCHS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;sc8f679x.h: 358: volatile bit KCHS3 @ ((unsigned)&KEYCON1*8)+3;
"359
[v _KCHS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;sc8f679x.h: 359: volatile bit KCHS2 @ ((unsigned)&KEYCON1*8)+2;
"360
[v _KCHS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;sc8f679x.h: 360: volatile bit KCHS1 @ ((unsigned)&KEYCON1*8)+1;
"361
[v _KCHS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;sc8f679x.h: 361: volatile bit KCHS0 @ ((unsigned)&KEYCON1*8)+0;
"364
[v _EEADRH3 `Vb ~T0 @X0 1 e@1203 ]
[; ;sc8f679x.h: 364: volatile bit EEADRH3 @ ((unsigned)&EEADRH*8)+3;
"365
[v _EEADRH2 `Vb ~T0 @X0 1 e@1202 ]
[; ;sc8f679x.h: 365: volatile bit EEADRH2 @ ((unsigned)&EEADRH*8)+2;
"366
[v _EEADRH1 `Vb ~T0 @X0 1 e@1201 ]
[; ;sc8f679x.h: 366: volatile bit EEADRH1 @ ((unsigned)&EEADRH*8)+1;
"367
[v _EEADRH0 `Vb ~T0 @X0 1 e@1200 ]
[; ;sc8f679x.h: 367: volatile bit EEADRH0 @ ((unsigned)&EEADRH*8)+0;
"370
[v _CAP_LVBO2 `Vb ~T0 @X0 1 e@1215 ]
[; ;sc8f679x.h: 370: volatile bit CAP_LVBO2 @ ((unsigned)&KEYCON2*8)+7;
"371
[v _CAP_LVBO1 `Vb ~T0 @X0 1 e@1214 ]
[; ;sc8f679x.h: 371: volatile bit CAP_LVBO1 @ ((unsigned)&KEYCON2*8)+6;
"372
[v _CAP_LVBO0 `Vb ~T0 @X0 1 e@1213 ]
[; ;sc8f679x.h: 372: volatile bit CAP_LVBO0 @ ((unsigned)&KEYCON2*8)+5;
"373
[v _TKEN `Vb ~T0 @X0 1 e@1208 ]
[; ;sc8f679x.h: 373: volatile bit TKEN @ ((unsigned)&KEYCON2*8)+0;
"376
[v _OPA0EN `Vb ~T0 @X0 1 e@1223 ]
[; ;sc8f679x.h: 376: volatile bit OPA0EN @ ((unsigned)&OPA0CON*8)+7;
"377
[v _OPA0OEN `Vb ~T0 @X0 1 e@1222 ]
[; ;sc8f679x.h: 377: volatile bit OPA0OEN @ ((unsigned)&OPA0CON*8)+6;
"378
[v _CMP0MODE `Vb ~T0 @X0 1 e@1221 ]
[; ;sc8f679x.h: 378: volatile bit CMP0MODE @ ((unsigned)&OPA0CON*8)+5;
"379
[v _OPA0_ADC `Vb ~T0 @X0 1 e@1220 ]
[; ;sc8f679x.h: 379: volatile bit OPA0_ADC @ ((unsigned)&OPA0CON*8)+4;
"380
[v _OPA0FT `Vb ~T0 @X0 1 e@1216 ]
[; ;sc8f679x.h: 380: volatile bit OPA0FT @ ((unsigned)&OPA0CON*8)+0;
"383
[v _OPA0OUT `Vb ~T0 @X0 1 e@1231 ]
[; ;sc8f679x.h: 383: volatile bit OPA0OUT @ ((unsigned)&OPA0ADJ*8)+7;
"384
[v _OPA0COFM `Vb ~T0 @X0 1 e@1230 ]
[; ;sc8f679x.h: 384: volatile bit OPA0COFM @ ((unsigned)&OPA0ADJ*8)+6;
"385
[v _OPA0CRS `Vb ~T0 @X0 1 e@1229 ]
[; ;sc8f679x.h: 385: volatile bit OPA0CRS @ ((unsigned)&OPA0ADJ*8)+5;
"386
[v _OPA0_ADJ4 `Vb ~T0 @X0 1 e@1228 ]
[; ;sc8f679x.h: 386: volatile bit OPA0_ADJ4 @ ((unsigned)&OPA0ADJ*8)+4;
"387
[v _OPA0_ADJ3 `Vb ~T0 @X0 1 e@1227 ]
[; ;sc8f679x.h: 387: volatile bit OPA0_ADJ3 @ ((unsigned)&OPA0ADJ*8)+3;
"388
[v _OPA0_ADJ2 `Vb ~T0 @X0 1 e@1226 ]
[; ;sc8f679x.h: 388: volatile bit OPA0_ADJ2 @ ((unsigned)&OPA0ADJ*8)+2;
"389
[v _OPA0_ADJ1 `Vb ~T0 @X0 1 e@1225 ]
[; ;sc8f679x.h: 389: volatile bit OPA0_ADJ1 @ ((unsigned)&OPA0ADJ*8)+1;
"390
[v _OPA0_ADJ0 `Vb ~T0 @X0 1 e@1224 ]
[; ;sc8f679x.h: 390: volatile bit OPA0_ADJ0 @ ((unsigned)&OPA0ADJ*8)+0;
"393
[v _OPA1EN `Vb ~T0 @X0 1 e@1239 ]
[; ;sc8f679x.h: 393: volatile bit OPA1EN @ ((unsigned)&OPA1CON*8)+7;
"394
[v _OPA1OEN `Vb ~T0 @X0 1 e@1238 ]
[; ;sc8f679x.h: 394: volatile bit OPA1OEN @ ((unsigned)&OPA1CON*8)+6;
"395
[v _CMP1MODE `Vb ~T0 @X0 1 e@1237 ]
[; ;sc8f679x.h: 395: volatile bit CMP1MODE @ ((unsigned)&OPA1CON*8)+5;
"396
[v _OPA1_ADC `Vb ~T0 @X0 1 e@1236 ]
[; ;sc8f679x.h: 396: volatile bit OPA1_ADC @ ((unsigned)&OPA1CON*8)+4;
"397
[v _OPA1FT `Vb ~T0 @X0 1 e@1232 ]
[; ;sc8f679x.h: 397: volatile bit OPA1FT @ ((unsigned)&OPA1CON*8)+0;
"400
[v _OPA1OUT `Vb ~T0 @X0 1 e@1247 ]
[; ;sc8f679x.h: 400: volatile bit OPA1OUT @ ((unsigned)&OPA1ADJ*8)+7;
"401
[v _OPA1COFM `Vb ~T0 @X0 1 e@1246 ]
[; ;sc8f679x.h: 401: volatile bit OPA1COFM @ ((unsigned)&OPA1ADJ*8)+6;
"402
[v _OPA1CRS `Vb ~T0 @X0 1 e@1245 ]
[; ;sc8f679x.h: 402: volatile bit OPA1CRS @ ((unsigned)&OPA1ADJ*8)+5;
"403
[v _OPA1_ADJ4 `Vb ~T0 @X0 1 e@1244 ]
[; ;sc8f679x.h: 403: volatile bit OPA1_ADJ4 @ ((unsigned)&OPA1ADJ*8)+4;
"404
[v _OPA1_ADJ3 `Vb ~T0 @X0 1 e@1243 ]
[; ;sc8f679x.h: 404: volatile bit OPA1_ADJ3 @ ((unsigned)&OPA1ADJ*8)+3;
"405
[v _OPA1_ADJ2 `Vb ~T0 @X0 1 e@1242 ]
[; ;sc8f679x.h: 405: volatile bit OPA1_ADJ2 @ ((unsigned)&OPA1ADJ*8)+2;
"406
[v _OPA1_ADJ1 `Vb ~T0 @X0 1 e@1241 ]
[; ;sc8f679x.h: 406: volatile bit OPA1_ADJ1 @ ((unsigned)&OPA1ADJ*8)+1;
"407
[v _OPA1_ADJ0 `Vb ~T0 @X0 1 e@1240 ]
[; ;sc8f679x.h: 407: volatile bit OPA1_ADJ0 @ ((unsigned)&OPA1ADJ*8)+0;
"410
[v _ADFM `Vb ~T0 @X0 1 e@1255 ]
[; ;sc8f679x.h: 410: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"411
[v _CHS4 `Vb ~T0 @X0 1 e@1254 ]
[; ;sc8f679x.h: 411: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"412
[v _LDO_EN `Vb ~T0 @X0 1 e@1250 ]
[; ;sc8f679x.h: 412: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"413
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1249 ]
[; ;sc8f679x.h: 413: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"414
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1248 ]
[; ;sc8f679x.h: 414: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"417
[v _ADCS1 `Vb ~T0 @X0 1 e@1263 ]
[; ;sc8f679x.h: 417: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"418
[v _ADCS0 `Vb ~T0 @X0 1 e@1262 ]
[; ;sc8f679x.h: 418: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"419
[v _CHS3 `Vb ~T0 @X0 1 e@1261 ]
[; ;sc8f679x.h: 419: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"420
[v _CHS2 `Vb ~T0 @X0 1 e@1260 ]
[; ;sc8f679x.h: 420: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"421
[v _CHS1 `Vb ~T0 @X0 1 e@1259 ]
[; ;sc8f679x.h: 421: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"422
[v _CHS0 `Vb ~T0 @X0 1 e@1258 ]
[; ;sc8f679x.h: 422: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"423
[v _GODONE `Vb ~T0 @X0 1 e@1257 ]
[; ;sc8f679x.h: 423: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"424
[v _ADON `Vb ~T0 @X0 1 e@1256 ]
[; ;sc8f679x.h: 424: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"427
[v _BUZDIV1 `Vb ~T0 @X0 1 e@2095 ]
[; ;sc8f679x.h: 427: volatile bit BUZDIV1 @ ((unsigned)&BUZCON*8)+7;
"428
[v _BUZDIV0 `Vb ~T0 @X0 1 e@2094 ]
[; ;sc8f679x.h: 428: volatile bit BUZDIV0 @ ((unsigned)&BUZCON*8)+6;
"429
[v _BUZDATA5 `Vb ~T0 @X0 1 e@2093 ]
[; ;sc8f679x.h: 429: volatile bit BUZDATA5 @ ((unsigned)&BUZCON*8)+5;
"430
[v _BUZDATA4 `Vb ~T0 @X0 1 e@2092 ]
[; ;sc8f679x.h: 430: volatile bit BUZDATA4 @ ((unsigned)&BUZCON*8)+4;
"431
[v _BUZDATA3 `Vb ~T0 @X0 1 e@2091 ]
[; ;sc8f679x.h: 431: volatile bit BUZDATA3 @ ((unsigned)&BUZCON*8)+3;
"432
[v _BUZDATA2 `Vb ~T0 @X0 1 e@2090 ]
[; ;sc8f679x.h: 432: volatile bit BUZDATA2 @ ((unsigned)&BUZCON*8)+2;
"433
[v _BUZDATA1 `Vb ~T0 @X0 1 e@2089 ]
[; ;sc8f679x.h: 433: volatile bit BUZDATA1 @ ((unsigned)&BUZCON*8)+1;
"434
[v _BUZDATA0 `Vb ~T0 @X0 1 e@2088 ]
[; ;sc8f679x.h: 434: volatile bit BUZDATA0 @ ((unsigned)&BUZCON*8)+0;
"437
[v _TKIF `Vb ~T0 @X0 1 e@2110 ]
[; ;sc8f679x.h: 437: volatile bit TKIF @ ((unsigned)&PIR2*8)+6;
"438
[v _IICIF `Vb ~T0 @X0 1 e@2108 ]
[; ;sc8f679x.h: 438: volatile bit IICIF @ ((unsigned)&PIR2*8)+4;
"439
[v _BCLIF `Vb ~T0 @X0 1 e@2107 ]
[; ;sc8f679x.h: 439: volatile bit BCLIF @ ((unsigned)&PIR2*8)+3;
"440
[v _RCCIF `Vb ~T0 @X0 1 e@2106 ]
[; ;sc8f679x.h: 440: volatile bit RCCIF @ ((unsigned)&PIR2*8)+2;
"441
[v _RACIF `Vb ~T0 @X0 1 e@2105 ]
[; ;sc8f679x.h: 441: volatile bit RACIF @ ((unsigned)&PIR2*8)+1;
"442
[v _LVDIF `Vb ~T0 @X0 1 e@2104 ]
[; ;sc8f679x.h: 442: volatile bit LVDIF @ ((unsigned)&PIR2*8)+0;
"445
[v _TKIE `Vb ~T0 @X0 1 e@2118 ]
[; ;sc8f679x.h: 445: volatile bit TKIE @ ((unsigned)&PIE2*8)+6;
"446
[v _IICIE `Vb ~T0 @X0 1 e@2116 ]
[; ;sc8f679x.h: 446: volatile bit IICIE @ ((unsigned)&PIE2*8)+4;
"447
[v _BCLIE `Vb ~T0 @X0 1 e@2115 ]
[; ;sc8f679x.h: 447: volatile bit BCLIE @ ((unsigned)&PIE2*8)+3;
"448
[v _RCCIE `Vb ~T0 @X0 1 e@2114 ]
[; ;sc8f679x.h: 448: volatile bit RCCIE @ ((unsigned)&PIE2*8)+2;
"449
[v _RACIE `Vb ~T0 @X0 1 e@2113 ]
[; ;sc8f679x.h: 449: volatile bit RACIE @ ((unsigned)&PIE2*8)+1;
"450
[v _LVDIE `Vb ~T0 @X0 1 e@2112 ]
[; ;sc8f679x.h: 450: volatile bit LVDIE @ ((unsigned)&PIE2*8)+0;
"453
[v _IICWCOL `Vb ~T0 @X0 1 e@2151 ]
[; ;sc8f679x.h: 453: volatile bit IICWCOL @ ((unsigned)&IICCON*8)+7;
"454
[v _SSPOV `Vb ~T0 @X0 1 e@2150 ]
[; ;sc8f679x.h: 454: volatile bit SSPOV @ ((unsigned)&IICCON*8)+6;
"455
[v _IICEN `Vb ~T0 @X0 1 e@2149 ]
[; ;sc8f679x.h: 455: volatile bit IICEN @ ((unsigned)&IICCON*8)+5;
"456
[v _IICCKP `Vb ~T0 @X0 1 e@2148 ]
[; ;sc8f679x.h: 456: volatile bit IICCKP @ ((unsigned)&IICCON*8)+4;
"457
[v _IICTOS1 `Vb ~T0 @X0 1 e@2147 ]
[; ;sc8f679x.h: 457: volatile bit IICTOS1 @ ((unsigned)&IICCON*8)+3;
"458
[v _IICTOS0 `Vb ~T0 @X0 1 e@2146 ]
[; ;sc8f679x.h: 458: volatile bit IICTOS0 @ ((unsigned)&IICCON*8)+2;
"459
[v _IICM1 `Vb ~T0 @X0 1 e@2145 ]
[; ;sc8f679x.h: 459: volatile bit IICM1 @ ((unsigned)&IICCON*8)+1;
"460
[v _IICM0 `Vb ~T0 @X0 1 e@2144 ]
[; ;sc8f679x.h: 460: volatile bit IICM0 @ ((unsigned)&IICCON*8)+0;
"463
[v _GCEN `Vb ~T0 @X0 1 e@2159 ]
[; ;sc8f679x.h: 463: volatile bit GCEN @ ((unsigned)&IICCON2*8)+7;
"464
[v _ACKSTAT `Vb ~T0 @X0 1 e@2158 ]
[; ;sc8f679x.h: 464: volatile bit ACKSTAT @ ((unsigned)&IICCON2*8)+6;
"465
[v _ACKDT `Vb ~T0 @X0 1 e@2157 ]
[; ;sc8f679x.h: 465: volatile bit ACKDT @ ((unsigned)&IICCON2*8)+5;
"466
[v _ACKEN `Vb ~T0 @X0 1 e@2156 ]
[; ;sc8f679x.h: 466: volatile bit ACKEN @ ((unsigned)&IICCON2*8)+4;
"467
[v _RCEN `Vb ~T0 @X0 1 e@2155 ]
[; ;sc8f679x.h: 467: volatile bit RCEN @ ((unsigned)&IICCON2*8)+3;
"468
[v _PEN `Vb ~T0 @X0 1 e@2154 ]
[; ;sc8f679x.h: 468: volatile bit PEN @ ((unsigned)&IICCON2*8)+2;
"469
[v _RSEN `Vb ~T0 @X0 1 e@2153 ]
[; ;sc8f679x.h: 469: volatile bit RSEN @ ((unsigned)&IICCON2*8)+1;
"470
[v _SEN `Vb ~T0 @X0 1 e@2152 ]
[; ;sc8f679x.h: 470: volatile bit SEN @ ((unsigned)&IICCON2*8)+0;
"473
[v _IDLE `Vb ~T0 @X0 1 e@2174 ]
[; ;sc8f679x.h: 473: volatile bit IDLE @ ((unsigned)&IICSTAT*8)+6;
"474
[v _DA `Vb ~T0 @X0 1 e@2173 ]
[; ;sc8f679x.h: 474: volatile bit DA @ ((unsigned)&IICSTAT*8)+5;
"475
[v _P `Vb ~T0 @X0 1 e@2172 ]
[; ;sc8f679x.h: 475: volatile bit P @ ((unsigned)&IICSTAT*8)+4;
"476
[v _S `Vb ~T0 @X0 1 e@2171 ]
[; ;sc8f679x.h: 476: volatile bit S @ ((unsigned)&IICSTAT*8)+3;
"477
[v _RW `Vb ~T0 @X0 1 e@2170 ]
[; ;sc8f679x.h: 477: volatile bit RW @ ((unsigned)&IICSTAT*8)+2;
"478
[v _IICTOF `Vb ~T0 @X0 1 e@2169 ]
[; ;sc8f679x.h: 478: volatile bit IICTOF @ ((unsigned)&IICSTAT*8)+1;
"479
[v _BF `Vb ~T0 @X0 1 e@2168 ]
[; ;sc8f679x.h: 479: volatile bit BF @ ((unsigned)&IICSTAT*8)+0;
"482
[v _ANS7 `Vb ~T0 @X0 1 e@2183 ]
[; ;sc8f679x.h: 482: volatile bit ANS7 @ ((unsigned)&ANSEL0*8)+7;
"483
[v _ANS6 `Vb ~T0 @X0 1 e@2182 ]
[; ;sc8f679x.h: 483: volatile bit ANS6 @ ((unsigned)&ANSEL0*8)+6;
"484
[v _ANS5 `Vb ~T0 @X0 1 e@2181 ]
[; ;sc8f679x.h: 484: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"485
[v _ANS4 `Vb ~T0 @X0 1 e@2180 ]
[; ;sc8f679x.h: 485: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"486
[v _ANS3 `Vb ~T0 @X0 1 e@2179 ]
[; ;sc8f679x.h: 486: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"487
[v _ANS2 `Vb ~T0 @X0 1 e@2178 ]
[; ;sc8f679x.h: 487: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"488
[v _ANS1 `Vb ~T0 @X0 1 e@2177 ]
[; ;sc8f679x.h: 488: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"489
[v _ANS0 `Vb ~T0 @X0 1 e@2176 ]
[; ;sc8f679x.h: 489: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"492
[v _ANS13 `Vb ~T0 @X0 1 e@2189 ]
[; ;sc8f679x.h: 492: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"493
[v _ANS12 `Vb ~T0 @X0 1 e@2188 ]
[; ;sc8f679x.h: 493: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"494
[v _ANS11 `Vb ~T0 @X0 1 e@2187 ]
[; ;sc8f679x.h: 494: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"495
[v _ANS10 `Vb ~T0 @X0 1 e@2186 ]
[; ;sc8f679x.h: 495: volatile bit ANS10 @ ((unsigned)&ANSEL1*8)+2;
"496
[v _ANS9 `Vb ~T0 @X0 1 e@2185 ]
[; ;sc8f679x.h: 496: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"497
[v _ANS8 `Vb ~T0 @X0 1 e@2184 ]
[; ;sc8f679x.h: 497: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"500
[v _ANS19 `Vb ~T0 @X0 1 e@2195 ]
[; ;sc8f679x.h: 500: volatile bit ANS19 @ ((unsigned)&ANSEL2*8)+3;
"501
[v _ANS18 `Vb ~T0 @X0 1 e@2194 ]
[; ;sc8f679x.h: 501: volatile bit ANS18 @ ((unsigned)&ANSEL2*8)+2;
"502
[v _ANS17 `Vb ~T0 @X0 1 e@2193 ]
[; ;sc8f679x.h: 502: volatile bit ANS17 @ ((unsigned)&ANSEL2*8)+1;
"503
[v _ANS16 `Vb ~T0 @X0 1 e@2192 ]
[; ;sc8f679x.h: 503: volatile bit ANS16 @ ((unsigned)&ANSEL2*8)+0;
"506
[v _WPDA7 `Vb ~T0 @X0 1 e@2207 ]
[; ;sc8f679x.h: 506: volatile bit WPDA7 @ ((unsigned)&WPDA*8)+7;
"507
[v _WPDA6 `Vb ~T0 @X0 1 e@2206 ]
[; ;sc8f679x.h: 507: volatile bit WPDA6 @ ((unsigned)&WPDA*8)+6;
"508
[v _WPDA5 `Vb ~T0 @X0 1 e@2205 ]
[; ;sc8f679x.h: 508: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"509
[v _WPDA4 `Vb ~T0 @X0 1 e@2204 ]
[; ;sc8f679x.h: 509: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"510
[v _WPDA3 `Vb ~T0 @X0 1 e@2203 ]
[; ;sc8f679x.h: 510: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"511
[v _WPDA2 `Vb ~T0 @X0 1 e@2202 ]
[; ;sc8f679x.h: 511: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"512
[v _WPDA1 `Vb ~T0 @X0 1 e@2201 ]
[; ;sc8f679x.h: 512: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"513
[v _WPDA0 `Vb ~T0 @X0 1 e@2200 ]
[; ;sc8f679x.h: 513: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"516
[v _WPDC1 `Vb ~T0 @X0 1 e@2209 ]
[; ;sc8f679x.h: 516: volatile bit WPDC1 @ ((unsigned)&WPDC*8)+1;
"517
[v _WPDC0 `Vb ~T0 @X0 1 e@2208 ]
[; ;sc8f679x.h: 517: volatile bit WPDC0 @ ((unsigned)&WPDC*8)+0;
"520
[v _WPUC1 `Vb ~T0 @X0 1 e@2217 ]
[; ;sc8f679x.h: 520: volatile bit WPUC1 @ ((unsigned)&WPUC*8)+1;
"521
[v _WPUC0 `Vb ~T0 @X0 1 e@2216 ]
[; ;sc8f679x.h: 521: volatile bit WPUC0 @ ((unsigned)&WPUC*8)+0;
"524
[v _CMP1S_SEL `Vb ~T0 @X0 1 e@2231 ]
[; ;sc8f679x.h: 524: volatile bit CMP1S_SEL @ ((unsigned)&CMPCON*8)+7;
"525
[v _CMP1REF2 `Vb ~T0 @X0 1 e@2230 ]
[; ;sc8f679x.h: 525: volatile bit CMP1REF2 @ ((unsigned)&CMPCON*8)+6;
"526
[v _CMP1REF1 `Vb ~T0 @X0 1 e@2229 ]
[; ;sc8f679x.h: 526: volatile bit CMP1REF1 @ ((unsigned)&CMPCON*8)+5;
"527
[v _CMP1REF0 `Vb ~T0 @X0 1 e@2228 ]
[; ;sc8f679x.h: 527: volatile bit CMP1REF0 @ ((unsigned)&CMPCON*8)+4;
"528
[v _CMP0S_SEL `Vb ~T0 @X0 1 e@2227 ]
[; ;sc8f679x.h: 528: volatile bit CMP0S_SEL @ ((unsigned)&CMPCON*8)+3;
"529
[v _CMP0REF2 `Vb ~T0 @X0 1 e@2226 ]
[; ;sc8f679x.h: 529: volatile bit CMP0REF2 @ ((unsigned)&CMPCON*8)+2;
"530
[v _CMP0REF1 `Vb ~T0 @X0 1 e@2225 ]
[; ;sc8f679x.h: 530: volatile bit CMP0REF1 @ ((unsigned)&CMPCON*8)+1;
"531
[v _CMP0REF0 `Vb ~T0 @X0 1 e@2224 ]
[; ;sc8f679x.h: 531: volatile bit CMP0REF0 @ ((unsigned)&CMPCON*8)+0;
"534
[v _CSRC `Vb ~T0 @X0 1 e@2239 ]
[; ;sc8f679x.h: 534: volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
"535
[v _TX9EN `Vb ~T0 @X0 1 e@2238 ]
[; ;sc8f679x.h: 535: volatile bit TX9EN @ ((unsigned)&TXSTA*8)+6;
"536
[v _TXEN `Vb ~T0 @X0 1 e@2237 ]
[; ;sc8f679x.h: 536: volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
"537
[v _SYNC `Vb ~T0 @X0 1 e@2236 ]
[; ;sc8f679x.h: 537: volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
"538
[v _SCKP `Vb ~T0 @X0 1 e@2235 ]
[; ;sc8f679x.h: 538: volatile bit SCKP @ ((unsigned)&TXSTA*8)+3;
"539
[v _STOPBIT `Vb ~T0 @X0 1 e@2234 ]
[; ;sc8f679x.h: 539: volatile bit STOPBIT @ ((unsigned)&TXSTA*8)+2;
"540
[v _TRMT `Vb ~T0 @X0 1 e@2233 ]
[; ;sc8f679x.h: 540: volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
"541
[v _TX9D `Vb ~T0 @X0 1 e@2232 ]
[; ;sc8f679x.h: 541: volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
"544
[v _SPEN `Vb ~T0 @X0 1 e@2247 ]
[; ;sc8f679x.h: 544: volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
"545
[v _RX9EN `Vb ~T0 @X0 1 e@2246 ]
[; ;sc8f679x.h: 545: volatile bit RX9EN @ ((unsigned)&RCSTA*8)+6;
"546
[v _SREN `Vb ~T0 @X0 1 e@2245 ]
[; ;sc8f679x.h: 546: volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
"547
[v _CREN `Vb ~T0 @X0 1 e@2244 ]
[; ;sc8f679x.h: 547: volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
"548
[v _RCIDL `Vb ~T0 @X0 1 e@2243 ]
[; ;sc8f679x.h: 548: volatile bit RCIDL @ ((unsigned)&RCSTA*8)+3;
"549
[v _FERR `Vb ~T0 @X0 1 e@2242 ]
[; ;sc8f679x.h: 549: volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
"550
[v _OERR `Vb ~T0 @X0 1 e@2241 ]
[; ;sc8f679x.h: 550: volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
"551
[v _RX9D `Vb ~T0 @X0 1 e@2240 ]
[; ;sc8f679x.h: 551: volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
"554
[v _SPIWCOL `Vb ~T0 @X0 1 e@2287 ]
[; ;sc8f679x.h: 554: volatile bit SPIWCOL @ ((unsigned)&SPICON*8)+7;
"555
[v _SPIOV `Vb ~T0 @X0 1 e@2286 ]
[; ;sc8f679x.h: 555: volatile bit SPIOV @ ((unsigned)&SPICON*8)+6;
"556
[v _SPIEN `Vb ~T0 @X0 1 e@2285 ]
[; ;sc8f679x.h: 556: volatile bit SPIEN @ ((unsigned)&SPICON*8)+5;
"557
[v _SPICKP `Vb ~T0 @X0 1 e@2284 ]
[; ;sc8f679x.h: 557: volatile bit SPICKP @ ((unsigned)&SPICON*8)+4;
"558
[v _SPIM3 `Vb ~T0 @X0 1 e@2283 ]
[; ;sc8f679x.h: 558: volatile bit SPIM3 @ ((unsigned)&SPICON*8)+3;
"559
[v _SPIM2 `Vb ~T0 @X0 1 e@2282 ]
[; ;sc8f679x.h: 559: volatile bit SPIM2 @ ((unsigned)&SPICON*8)+2;
"560
[v _SPIM1 `Vb ~T0 @X0 1 e@2281 ]
[; ;sc8f679x.h: 560: volatile bit SPIM1 @ ((unsigned)&SPICON*8)+1;
"561
[v _SPIM0 `Vb ~T0 @X0 1 e@2280 ]
[; ;sc8f679x.h: 561: volatile bit SPIM0 @ ((unsigned)&SPICON*8)+0;
"564
[v _CKE `Vb ~T0 @X0 1 e@2294 ]
[; ;sc8f679x.h: 564: volatile bit CKE @ ((unsigned)&SPICON2*8)+6;
"565
[v _MODE `Vb ~T0 @X0 1 e@2293 ]
[; ;sc8f679x.h: 565: volatile bit MODE @ ((unsigned)&SPICON2*8)+5;
"566
[v _SPIBF `Vb ~T0 @X0 1 e@2288 ]
[; ;sc8f679x.h: 566: volatile bit SPIBF @ ((unsigned)&SPICON2*8)+0;
"569
[v _LVD_RES `Vb ~T0 @X0 1 e@2303 ]
[; ;sc8f679x.h: 569: volatile bit LVD_RES @ ((unsigned)&LVDCON*8)+7;
"570
[v _LVD_SEL2 `Vb ~T0 @X0 1 e@2299 ]
[; ;sc8f679x.h: 570: volatile bit LVD_SEL2 @ ((unsigned)&LVDCON*8)+3;
"571
[v _LVD_SEL1 `Vb ~T0 @X0 1 e@2298 ]
[; ;sc8f679x.h: 571: volatile bit LVD_SEL1 @ ((unsigned)&LVDCON*8)+2;
"572
[v _LVD_SEL0 `Vb ~T0 @X0 1 e@2297 ]
[; ;sc8f679x.h: 572: volatile bit LVD_SEL0 @ ((unsigned)&LVDCON*8)+1;
"573
[v _LVDEN `Vb ~T0 @X0 1 e@2296 ]
[; ;sc8f679x.h: 573: volatile bit LVDEN @ ((unsigned)&LVDCON*8)+0;
"576
[v _RC1 `Vb ~T0 @X0 1 e@3113 ]
[; ;sc8f679x.h: 576: volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
"577
[v _RC0 `Vb ~T0 @X0 1 e@3112 ]
[; ;sc8f679x.h: 577: volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
"580
[v _TRISC1 `Vb ~T0 @X0 1 e@3121 ]
[; ;sc8f679x.h: 580: volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
"581
[v _TRISC0 `Vb ~T0 @X0 1 e@3120 ]
[; ;sc8f679x.h: 581: volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
"584
[v _IOCC1 `Vb ~T0 @X0 1 e@3129 ]
[; ;sc8f679x.h: 584: volatile bit IOCC1 @ ((unsigned)&IOCC*8)+1;
"585
[v _IOCC0 `Vb ~T0 @X0 1 e@3128 ]
[; ;sc8f679x.h: 585: volatile bit IOCC0 @ ((unsigned)&IOCC*8)+0;
"588
[v _IOCA7 `Vb ~T0 @X0 1 e@3143 ]
[; ;sc8f679x.h: 588: volatile bit IOCA7 @ ((unsigned)&IOCA*8)+7;
"589
[v _IOCA6 `Vb ~T0 @X0 1 e@3142 ]
[; ;sc8f679x.h: 589: volatile bit IOCA6 @ ((unsigned)&IOCA*8)+6;
"590
[v _IOCA5 `Vb ~T0 @X0 1 e@3141 ]
[; ;sc8f679x.h: 590: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"591
[v _IOCA4 `Vb ~T0 @X0 1 e@3140 ]
[; ;sc8f679x.h: 591: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"592
[v _IOCA3 `Vb ~T0 @X0 1 e@3139 ]
[; ;sc8f679x.h: 592: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"593
[v _IOCA2 `Vb ~T0 @X0 1 e@3138 ]
[; ;sc8f679x.h: 593: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"594
[v _IOCA1 `Vb ~T0 @X0 1 e@3137 ]
[; ;sc8f679x.h: 594: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"595
[v _IOCA0 `Vb ~T0 @X0 1 e@3136 ]
[; ;sc8f679x.h: 595: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"598
[v _PWM1IOS2 `Vb ~T0 @X0 1 e@3174 ]
[; ;sc8f679x.h: 598: volatile bit PWM1IOS2 @ ((unsigned)&PWMIOS0*8)+6;
"599
[v _PWM1IOS1 `Vb ~T0 @X0 1 e@3173 ]
[; ;sc8f679x.h: 599: volatile bit PWM1IOS1 @ ((unsigned)&PWMIOS0*8)+5;
"600
[v _PWM1IOS0 `Vb ~T0 @X0 1 e@3172 ]
[; ;sc8f679x.h: 600: volatile bit PWM1IOS0 @ ((unsigned)&PWMIOS0*8)+4;
"601
[v _PWM0IOS2 `Vb ~T0 @X0 1 e@3170 ]
[; ;sc8f679x.h: 601: volatile bit PWM0IOS2 @ ((unsigned)&PWMIOS0*8)+2;
"602
[v _PWM0IOS1 `Vb ~T0 @X0 1 e@3169 ]
[; ;sc8f679x.h: 602: volatile bit PWM0IOS1 @ ((unsigned)&PWMIOS0*8)+1;
"603
[v _PWM0IOS0 `Vb ~T0 @X0 1 e@3168 ]
[; ;sc8f679x.h: 603: volatile bit PWM0IOS0 @ ((unsigned)&PWMIOS0*8)+0;
"606
[v _PWM3IOS2 `Vb ~T0 @X0 1 e@3182 ]
[; ;sc8f679x.h: 606: volatile bit PWM3IOS2 @ ((unsigned)&PWMIOS1*8)+6;
"607
[v _PWM3IOS1 `Vb ~T0 @X0 1 e@3181 ]
[; ;sc8f679x.h: 607: volatile bit PWM3IOS1 @ ((unsigned)&PWMIOS1*8)+5;
"608
[v _PWM3IOS0 `Vb ~T0 @X0 1 e@3180 ]
[; ;sc8f679x.h: 608: volatile bit PWM3IOS0 @ ((unsigned)&PWMIOS1*8)+4;
"609
[v _PWM2IOS2 `Vb ~T0 @X0 1 e@3178 ]
[; ;sc8f679x.h: 609: volatile bit PWM2IOS2 @ ((unsigned)&PWMIOS1*8)+2;
"610
[v _PWM2IOS1 `Vb ~T0 @X0 1 e@3177 ]
[; ;sc8f679x.h: 610: volatile bit PWM2IOS1 @ ((unsigned)&PWMIOS1*8)+1;
"611
[v _PWM2IOS0 `Vb ~T0 @X0 1 e@3176 ]
[; ;sc8f679x.h: 611: volatile bit PWM2IOS0 @ ((unsigned)&PWMIOS1*8)+0;
"614
[v _PWM4IOS2 `Vb ~T0 @X0 1 e@3186 ]
[; ;sc8f679x.h: 614: volatile bit PWM4IOS2 @ ((unsigned)&PWMIOS2*8)+2;
"615
[v _PWM4IOS1 `Vb ~T0 @X0 1 e@3185 ]
[; ;sc8f679x.h: 615: volatile bit PWM4IOS1 @ ((unsigned)&PWMIOS2*8)+1;
"616
[v _PWM4IOS0 `Vb ~T0 @X0 1 e@3184 ]
[; ;sc8f679x.h: 616: volatile bit PWM4IOS0 @ ((unsigned)&PWMIOS2*8)+0;
"619
[v _LCDEN `Vb ~T0 @X0 1 e@3199 ]
[; ;sc8f679x.h: 619: volatile bit LCDEN @ ((unsigned)&LCDCON*8)+7;
"620
[v _FRAME `Vb ~T0 @X0 1 e@3198 ]
[; ;sc8f679x.h: 620: volatile bit FRAME @ ((unsigned)&LCDCON*8)+6;
"621
[v _BIAS `Vb ~T0 @X0 1 e@3197 ]
[; ;sc8f679x.h: 621: volatile bit BIAS @ ((unsigned)&LCDCON*8)+5;
"622
[v _LCDISLE1 `Vb ~T0 @X0 1 e@3193 ]
[; ;sc8f679x.h: 622: volatile bit LCDISLE1 @ ((unsigned)&LCDCON*8)+1;
"623
[v _LCDISLE0 `Vb ~T0 @X0 1 e@3192 ]
[; ;sc8f679x.h: 623: volatile bit LCDISLE0 @ ((unsigned)&LCDCON*8)+0;
"626
[v _CS7SEL `Vb ~T0 @X0 1 e@3207 ]
[; ;sc8f679x.h: 626: volatile bit CS7SEL @ ((unsigned)&CSSEL0*8)+7;
"627
[v _CS6SEL `Vb ~T0 @X0 1 e@3206 ]
[; ;sc8f679x.h: 627: volatile bit CS6SEL @ ((unsigned)&CSSEL0*8)+6;
"628
[v _CS5SEL `Vb ~T0 @X0 1 e@3205 ]
[; ;sc8f679x.h: 628: volatile bit CS5SEL @ ((unsigned)&CSSEL0*8)+5;
"629
[v _CS4SEL `Vb ~T0 @X0 1 e@3204 ]
[; ;sc8f679x.h: 629: volatile bit CS4SEL @ ((unsigned)&CSSEL0*8)+4;
"630
[v _CS3SEL `Vb ~T0 @X0 1 e@3203 ]
[; ;sc8f679x.h: 630: volatile bit CS3SEL @ ((unsigned)&CSSEL0*8)+3;
"631
[v _CS2SEL `Vb ~T0 @X0 1 e@3202 ]
[; ;sc8f679x.h: 631: volatile bit CS2SEL @ ((unsigned)&CSSEL0*8)+2;
"632
[v _CS1SEL `Vb ~T0 @X0 1 e@3201 ]
[; ;sc8f679x.h: 632: volatile bit CS1SEL @ ((unsigned)&CSSEL0*8)+1;
"633
[v _CS0SEL `Vb ~T0 @X0 1 e@3200 ]
[; ;sc8f679x.h: 633: volatile bit CS0SEL @ ((unsigned)&CSSEL0*8)+0;
"636
[v _CS15SEL `Vb ~T0 @X0 1 e@3215 ]
[; ;sc8f679x.h: 636: volatile bit CS15SEL @ ((unsigned)&CSSEL1*8)+7;
"637
[v _CS14SEL `Vb ~T0 @X0 1 e@3214 ]
[; ;sc8f679x.h: 637: volatile bit CS14SEL @ ((unsigned)&CSSEL1*8)+6;
"638
[v _CS13SEL `Vb ~T0 @X0 1 e@3213 ]
[; ;sc8f679x.h: 638: volatile bit CS13SEL @ ((unsigned)&CSSEL1*8)+5;
"639
[v _CS12SEL `Vb ~T0 @X0 1 e@3212 ]
[; ;sc8f679x.h: 639: volatile bit CS12SEL @ ((unsigned)&CSSEL1*8)+4;
"640
[v _CS11SEL `Vb ~T0 @X0 1 e@3211 ]
[; ;sc8f679x.h: 640: volatile bit CS11SEL @ ((unsigned)&CSSEL1*8)+3;
"641
[v _CS10SEL `Vb ~T0 @X0 1 e@3210 ]
[; ;sc8f679x.h: 641: volatile bit CS10SEL @ ((unsigned)&CSSEL1*8)+2;
"642
[v _CS9SEL `Vb ~T0 @X0 1 e@3209 ]
[; ;sc8f679x.h: 642: volatile bit CS9SEL @ ((unsigned)&CSSEL1*8)+1;
"643
[v _CS8SEL `Vb ~T0 @X0 1 e@3208 ]
[; ;sc8f679x.h: 643: volatile bit CS8SEL @ ((unsigned)&CSSEL1*8)+0;
"646
[v _CS17SEL `Vb ~T0 @X0 1 e@3217 ]
[; ;sc8f679x.h: 646: volatile bit CS17SEL @ ((unsigned)&CSSEL2*8)+1;
"647
[v _CS16SEL `Vb ~T0 @X0 1 e@3216 ]
[; ;sc8f679x.h: 647: volatile bit CS16SEL @ ((unsigned)&CSSEL2*8)+0;
"650
[v _CS7EN `Vb ~T0 @X0 1 e@3231 ]
[; ;sc8f679x.h: 650: volatile bit CS7EN @ ((unsigned)&CSEN0*8)+7;
"651
[v _CS6EN `Vb ~T0 @X0 1 e@3230 ]
[; ;sc8f679x.h: 651: volatile bit CS6EN @ ((unsigned)&CSEN0*8)+6;
"652
[v _CS5EN `Vb ~T0 @X0 1 e@3229 ]
[; ;sc8f679x.h: 652: volatile bit CS5EN @ ((unsigned)&CSEN0*8)+5;
"653
[v _CS4EN `Vb ~T0 @X0 1 e@3228 ]
[; ;sc8f679x.h: 653: volatile bit CS4EN @ ((unsigned)&CSEN0*8)+4;
"654
[v _CS3EN `Vb ~T0 @X0 1 e@3227 ]
[; ;sc8f679x.h: 654: volatile bit CS3EN @ ((unsigned)&CSEN0*8)+3;
"655
[v _CS2EN `Vb ~T0 @X0 1 e@3226 ]
[; ;sc8f679x.h: 655: volatile bit CS2EN @ ((unsigned)&CSEN0*8)+2;
"656
[v _CS1EN `Vb ~T0 @X0 1 e@3225 ]
[; ;sc8f679x.h: 656: volatile bit CS1EN @ ((unsigned)&CSEN0*8)+1;
"657
[v _CS0EN `Vb ~T0 @X0 1 e@3224 ]
[; ;sc8f679x.h: 657: volatile bit CS0EN @ ((unsigned)&CSEN0*8)+0;
"660
[v _CS15EN `Vb ~T0 @X0 1 e@3239 ]
[; ;sc8f679x.h: 660: volatile bit CS15EN @ ((unsigned)&CSEN1*8)+7;
"661
[v _CS14EN `Vb ~T0 @X0 1 e@3238 ]
[; ;sc8f679x.h: 661: volatile bit CS14EN @ ((unsigned)&CSEN1*8)+6;
"662
[v _CS13EN `Vb ~T0 @X0 1 e@3237 ]
[; ;sc8f679x.h: 662: volatile bit CS13EN @ ((unsigned)&CSEN1*8)+5;
"663
[v _CS12EN `Vb ~T0 @X0 1 e@3236 ]
[; ;sc8f679x.h: 663: volatile bit CS12EN @ ((unsigned)&CSEN1*8)+4;
"664
[v _CS11EN `Vb ~T0 @X0 1 e@3235 ]
[; ;sc8f679x.h: 664: volatile bit CS11EN @ ((unsigned)&CSEN1*8)+3;
"665
[v _CS10EN `Vb ~T0 @X0 1 e@3234 ]
[; ;sc8f679x.h: 665: volatile bit CS10EN @ ((unsigned)&CSEN1*8)+2;
"666
[v _CS9EN `Vb ~T0 @X0 1 e@3233 ]
[; ;sc8f679x.h: 666: volatile bit CS9EN @ ((unsigned)&CSEN1*8)+1;
"667
[v _CS8EN `Vb ~T0 @X0 1 e@3232 ]
[; ;sc8f679x.h: 667: volatile bit CS8EN @ ((unsigned)&CSEN1*8)+0;
"670
[v _CS17EN `Vb ~T0 @X0 1 e@3241 ]
[; ;sc8f679x.h: 670: volatile bit CS17EN @ ((unsigned)&CSEN2*8)+1;
"671
[v _CS16EN `Vb ~T0 @X0 1 e@3240 ]
[; ;sc8f679x.h: 671: volatile bit CS16EN @ ((unsigned)&CSEN2*8)+0;
"674
[v _T1GINV `Vb ~T0 @X0 1 e@3295 ]
[; ;sc8f679x.h: 674: volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
"675
[v _TMR1GE `Vb ~T0 @X0 1 e@3294 ]
[; ;sc8f679x.h: 675: volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
"676
[v _T1CKPS1 `Vb ~T0 @X0 1 e@3293 ]
[; ;sc8f679x.h: 676: volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
"677
[v _T1CKPS0 `Vb ~T0 @X0 1 e@3292 ]
[; ;sc8f679x.h: 677: volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
"678
[v _T0OSCEN `Vb ~T0 @X0 1 e@3291 ]
[; ;sc8f679x.h: 678: volatile bit T0OSCEN @ ((unsigned)&T1CON*8)+3;
"679
[v _T1SYNC `Vb ~T0 @X0 1 e@3290 ]
[; ;sc8f679x.h: 679: volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
"680
[v _TMR1CS `Vb ~T0 @X0 1 e@3289 ]
[; ;sc8f679x.h: 680: volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
"681
[v _TMR1ON `Vb ~T0 @X0 1 e@3288 ]
[; ;sc8f679x.h: 681: volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"12 C:\mcuproject\scm\D17_SC8F6790_tssop20\D17_SC8F6790_tssop20\Touch_Kscan_Library.h
[p n 752,759 ]
"5 C:\mcuproject\scm\D17_SC8F6790_tssop20\D17_SC8F6790_tssop20\TouchKeyConst.h
[v _C_OPTION_REG_ `Cuc ~T0 @X0 1 e ]
[i _C_OPTION_REG_
-> -> 10 `i `uc
]
[; ;TouchKeyConst.h: 5: const unsigned char C_OPTION_REG_ = 0x0A;
[; ;Touch_Kscan_Library.h: 18: extern void CheckTouchKey(void);
[; ;Touch_Kscan_Library.h: 19: extern void SystemEnterSleep();
[; ;Touch_Kscan_Library.h: 20: extern volatile bit b_kerr;
[; ;Touch_Kscan_Library.h: 26: extern volatile unsigned char KeyFlag[2];
"63 C:\mcuproject\scm\D17_SC8F6790_tssop20\D17_SC8F6790_tssop20\Touch_Kscan_Library.h
[v _Table_KeyChannel `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyChannel
:U ..
"64
-> | | -> 64 `i -> 16 `i -> 8 `i `uc
"65
-> | | -> 64 `i -> 16 `i -> 9 `i `uc
"67
-> | | -> 64 `i -> 16 `i -> 10 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 63: const unsigned char Table_KeyChannel[] = {
[; ;Touch_Kscan_Library.h: 64: 0x40|0x10|0x08,
[; ;Touch_Kscan_Library.h: 65: 0x40|0x10|0x09,
[; ;Touch_Kscan_Library.h: 66: 0x40|0x10|0x0A
[; ;Touch_Kscan_Library.h: 67: };
"70
[v _Table_KeyCap `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyCap
:U ..
"71
-> | -> 56 `i -> 2 `i `uc
"72
-> | -> 24 `i -> 2 `i `uc
"74
-> | -> 0 `i -> 2 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 70: const unsigned char Table_KeyCap[] = {
[; ;Touch_Kscan_Library.h: 71: 0x38 | 0x2,
[; ;Touch_Kscan_Library.h: 72: 0x18 | 0x2,
[; ;Touch_Kscan_Library.h: 73: 0x00 | 0x2
[; ;Touch_Kscan_Library.h: 74: };
"77
[v _Table_KeyDown `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyDown
:U ..
"78
-> -> 10 `i `uc
"79
-> -> 10 `i `uc
"81
-> -> 10 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 77: const unsigned char Table_KeyDown[] = {
[; ;Touch_Kscan_Library.h: 78: 10,
[; ;Touch_Kscan_Library.h: 79: 10,
[; ;Touch_Kscan_Library.h: 80: 10
[; ;Touch_Kscan_Library.h: 81: };
"91
[v _KeyResSum `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 91: unsigned int KeyResSum[3];
"92
[v _KeyOldValue0 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 92: unsigned int KeyOldValue0[3];
"93
[v _KeyOldValue1 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 93: unsigned int KeyOldValue1[3];
"94
[v _KeyOldValue2 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 94: unsigned int KeyOldValue2[3];
"95
[v _KeyReference `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 95: unsigned int KeyReference[3];
"96
[v _KeyUpShake `uc ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 96: unsigned char KeyUpShake[3];
"98
[v _KeyValidTime `Cui ~T0 @X0 1 e ]
[i _KeyValidTime
-> * -> 60 `i / -> 1000 `i -> 4 `i `ui
]
[; ;Touch_Kscan_Library.h: 98: const unsigned int KeyValidTime = 60*(1000/4);
"99
[v _KeyTotalNumber `Cuc ~T0 @X0 1 e ]
[i _KeyTotalNumber
-> -> 3 `i `uc
]
[; ;Touch_Kscan_Library.h: 99: const unsigned char KeyTotalNumber = 3;
"100
[v _KeyShakeCounter `Cuc ~T0 @X0 1 e ]
[i _KeyShakeCounter
-> -> 1 `i `uc
]
[; ;Touch_Kscan_Library.h: 100: const unsigned char KeyShakeCounter = 1;
"101
[v _KeyValidNumber `Cuc ~T0 @X0 1 e ]
[i _KeyValidNumber
-> -> 3 `i `uc
]
[; ;Touch_Kscan_Library.h: 101: const unsigned char KeyValidNumber = 3;
"103
[v _KeyWakeUpEn `Cui ~T0 @X0 1 e ]
[i _KeyWakeUpEn
-> -> 7 `i `ui
]
[; ;Touch_Kscan_Library.h: 103: const unsigned int KeyWakeUpEn = 0x0007;
"106
[v _WaterModeSel `Cuc ~T0 @X0 1 e ]
[i _WaterModeSel
-> -> 1 `i `uc
]
[; ;Touch_Kscan_Library.h: 106: const unsigned char WaterModeSel = 1;
"17 C:\mcuproject\scm\D17_SC8F6790_tssop20\D17_SC8F6790_tssop20\main.c
[v _numArray `Cuc ~T0 @X0 -> 0 `x s ]
[i _numArray
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 113 `i `uc
-> -> 121 `i `uc
-> -> 80 `i `uc
-> -> 115 `i `uc
..
]
[; ;main.c: 17: const static unsigned char numArray[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x71,0x79,0x50,0x73};
"19
[v _MainTime `Vuc ~T0 @X0 1 e ]
[; ;main.c: 19: volatile unsigned char MainTime;
"20
[v _B_MainLoop `Vb ~T0 @X0 1 e ]
[v _B_OnOff `Vb ~T0 @X0 1 e ]
[; ;main.c: 20: volatile bit B_MainLoop, B_OnOff;
"21
[v _firstTime `ui ~T0 @X0 1 e ]
[i _firstTime
-> -> 0 `i `ui
]
[; ;main.c: 21: unsigned int firstTime = 0;
"22
[v _keyCount1 `ui ~T0 @X0 1 e ]
[i _keyCount1
-> -> 0 `i `ui
]
[; ;main.c: 22: unsigned int keyCount1 = 0;
"23
[v _keyCount2 `ui ~T0 @X0 1 e ]
[i _keyCount2
-> -> 0 `i `ui
]
[; ;main.c: 23: unsigned int keyCount2 = 0;
"24
[v _keyCount3 `ui ~T0 @X0 1 e ]
[i _keyCount3
-> -> 0 `i `ui
]
[; ;main.c: 24: unsigned int keyCount3 = 0;
"25
[v _longKeyFalg `uc ~T0 @X0 1 e ]
[i _longKeyFalg
-> -> 0 `i `uc
]
[; ;main.c: 25: unsigned char longKeyFalg = 0;
"26
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 26: unsigned char workStep = 0;
"27
[v _zeroStep `uc ~T0 @X0 1 e ]
[i _zeroStep
-> -> 0 `i `uc
]
[; ;main.c: 27: unsigned char zeroStep = 0;
"28
[v _ledLightTime `ui ~T0 @X0 1 e ]
[i _ledLightTime
-> -> 0 `i `ui
]
[; ;main.c: 28: unsigned int ledLightTime = 0;
"29
[v _shanShuoTime `uc ~T0 @X0 1 e ]
[i _shanShuoTime
-> -> 0 `i `uc
]
[; ;main.c: 29: unsigned char shanShuoTime = 0;
"30
[v _lowBatLockFlag `uc ~T0 @X0 1 e ]
[i _lowBatLockFlag
-> -> 0 `i `uc
]
[; ;main.c: 30: unsigned char lowBatLockFlag = 0;
"31
[v _showFlag `uc ~T0 @X0 1 e ]
[i _showFlag
-> -> 0 `i `uc
]
[; ;main.c: 31: unsigned char showFlag = 0;
"32
[v _showShiWei `uc ~T0 @X0 1 e ]
[i _showShiWei
-> -> 0 `i `uc
]
[; ;main.c: 32: unsigned char showShiWei = 0;
"33
[v _showGeWei `uc ~T0 @X0 1 e ]
[i _showGeWei
-> -> 0 `i `uc
]
[; ;main.c: 33: unsigned char showGeWei = 0;
"34
[v _showLed1 `uc ~T0 @X0 1 e ]
[i _showLed1
-> -> 0 `i `uc
]
[; ;main.c: 34: unsigned char showLed1 = 0;
"35
[v _showLed2 `uc ~T0 @X0 1 e ]
[i _showLed2
-> -> 0 `i `uc
]
[; ;main.c: 35: unsigned char showLed2 = 0;
"36
[v _count64ms `uc ~T0 @X0 1 e ]
[i _count64ms
-> -> 0 `i `uc
]
[; ;main.c: 36: unsigned char count64ms = 0;
"37
[v _count1s `uc ~T0 @X0 1 e ]
[i _count1s
-> -> 0 `i `uc
]
[; ;main.c: 37: unsigned char count1s = 0;
"38
[v _chrgFlag `uc ~T0 @X0 1 e ]
[i _chrgFlag
-> -> 0 `i `uc
]
[; ;main.c: 38: unsigned char chrgFlag = 0;
"39
[v _batValue `uc ~T0 @X0 1 e ]
[i _batValue
-> -> 0 `i `uc
]
[; ;main.c: 39: unsigned char batValue = 0;
"40
[v _batResult `ui ~T0 @X0 1 e ]
[i _batResult
-> -> 0 `i `ui
]
[; ;main.c: 40: unsigned int batResult = 0;
"41
[v _preBatValue `uc ~T0 @X0 1 e ]
[i _preBatValue
-> -> 0 `i `uc
]
[; ;main.c: 41: unsigned char preBatValue = 0;
"42
[v _chrgResult `ui ~T0 @X0 1 e ]
[i _chrgResult
-> -> 0 `i `ui
]
[; ;main.c: 42: unsigned int chrgResult = 0;
"43
[v _NoTouchTime `uc ~T0 @X0 1 e ]
[i _NoTouchTime
-> -> 0 `i `uc
]
[; ;main.c: 43: unsigned char NoTouchTime = 0;
"44
[v _count50 `uc ~T0 @X0 1 e ]
[i _count50
-> -> 0 `i `uc
]
[; ;main.c: 44: unsigned char count50 = 0;
"45
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[i _chrgFullFlag
-> -> 0 `i `uc
]
[; ;main.c: 45: unsigned char chrgFullFlag = 0;
"46
[v _chrgDuty `uc ~T0 @X0 1 e ]
[i _chrgDuty
-> -> 0 `i `uc
]
[; ;main.c: 46: unsigned char chrgDuty = 0;
"47
[v _addTime `uc ~T0 @X0 1 e ]
[i _addTime
-> -> 0 `i `uc
]
[; ;main.c: 47: unsigned char addTime = 0;
"48
[v _subTime `uc ~T0 @X0 1 e ]
[i _subTime
-> -> 0 `i `uc
]
[; ;main.c: 48: unsigned char subTime = 0;
"49
[v _count15s `uc ~T0 @X0 1 e ]
[i _count15s
-> -> 0 `i `uc
]
[; ;main.c: 49: unsigned char count15s = 0;
"50
[v _chrgLockFlag `uc ~T0 @X0 1 e ]
[i _chrgLockFlag
-> -> 0 `i `uc
]
[; ;main.c: 50: unsigned char chrgLockFlag = 0;
"51
[v _chrgFullTime `ui ~T0 @X0 1 e ]
[i _chrgFullTime
-> -> 0 `i `ui
]
[; ;main.c: 51: unsigned int chrgFullTime = 0;
"52
[v _count900s `ui ~T0 @X0 1 e ]
[i _count900s
-> -> 0 `i `ui
]
[; ;main.c: 52: unsigned int count900s = 0;
"53
[v _sleepTime `ui ~T0 @X0 1 e ]
[i _sleepTime
-> -> 0 `i `ui
]
[; ;main.c: 53: unsigned int sleepTime = 0;
"54
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 54: unsigned char lowBatFlag = 0;
"55
[v _lowBatTime `uc ~T0 @X0 1 e ]
[i _lowBatTime
-> -> 0 `i `uc
]
[; ;main.c: 55: unsigned char lowBatTime = 0;
"56
[v _tempResult `ui ~T0 @X0 1 e ]
[i _tempResult
-> -> 0 `i `ui
]
[; ;main.c: 56: unsigned int tempResult = 0;
"57
[v _checkTempTime `uc ~T0 @X0 1 e ]
[i _checkTempTime
-> -> 0 `i `uc
]
[; ;main.c: 57: unsigned char checkTempTime = 0;
"58
[v _chrgBatStep `uc ~T0 @X0 1 e ]
[i _chrgBatStep
-> -> 0 `i `uc
]
[; ;main.c: 58: unsigned char chrgBatStep = 0;
"59
[v _chrgBatStepTime `uc ~T0 @X0 1 e ]
[i _chrgBatStepTime
-> -> 0 `i `uc
]
[; ;main.c: 59: unsigned char chrgBatStepTime = 0;
"60
[v _key1ProtectTime `uc ~T0 @X0 1 e ]
[i _key1ProtectTime
-> -> 0 `i `uc
]
[; ;main.c: 60: unsigned char key1ProtectTime = 0;
"61
[v _key2ProtectTime `uc ~T0 @X0 1 e ]
[i _key2ProtectTime
-> -> 0 `i `uc
]
[; ;main.c: 61: unsigned char key2ProtectTime = 0;
"62
[v _key3ProtectTime `uc ~T0 @X0 1 e ]
[i _key3ProtectTime
-> -> 0 `i `uc
]
[; ;main.c: 62: unsigned char key3ProtectTime = 0;
"63
[v _keyCancelTime `uc ~T0 @X0 1 e ]
[i _keyCancelTime
-> -> 0 `i `uc
]
[; ;main.c: 63: unsigned char keyCancelTime = 0;
"64
[v _preZero `uc ~T0 @X0 1 e ]
[i _preZero
-> -> 0 `i `uc
]
[; ;main.c: 64: unsigned char preZero = 0;
[; ;main.c: 67: void initTM1650();
[; ;main.c: 68: unsigned int Read_ADC(unsigned char ADCchannel,unsigned char ADCLDORef);
[; ;main.c: 69: void checkChrgAD();
[; ;main.c: 70: void gotoSleep();
[; ;main.c: 71: void checkTempAD();
[; ;main.c: 72: void tm1650cmd(unsigned char digAddr,unsigned char seg_data);
[; ;main.c: 73: unsigned char TM1650_read();
"76
[v _Init_System `(v ~T0 @X0 1 ef ]
"77
{
[; ;main.c: 76: void Init_System()
[; ;main.c: 77: {
[e :U _Init_System ]
[f ]
[; ;main.c: 78: asm("nop");
"78
[; <" nop ;# ">
[; ;main.c: 79: asm("clrwdt");
"79
[; <" clrwdt ;# ">
[; ;main.c: 80: INTCON = 0;
"80
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 81: OSCCON = 0X71;
"81
[e = _OSCCON -> -> 113 `i `uc ]
[; ;main.c: 82: OPTION_REG = 0;
"82
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 83: SWDTEN = 1;
"83
[e = _SWDTEN -> -> 1 `i `b ]
[; ;main.c: 84: asm("clrwdt");
"84
[; <" clrwdt ;# ">
[; ;main.c: 88: TRISA = 0x22;
"88
[e = _TRISA -> -> 34 `i `uc ]
[; ;main.c: 89: PORTA = 0;
"89
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 90: TRISB = 0x18;
"90
[e = _TRISB -> -> 24 `i `uc ]
[; ;main.c: 91: PORTB = 0;
"91
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 92: WPUB = 0x00;
"92
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 93: TRISC = 0;
"93
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 94: PORTC = 0;
"94
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 95: WPUC = 0x00;
"95
[e = _WPUC -> -> 0 `i `uc ]
[; ;main.c: 97: PIE1 = 2;
"97
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 98: PR2 = 250;
"98
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 99: T2CON = 4;
"99
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 101: INTCON = 0XC0;
"101
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 102: ADCON0 = 0XC1;
"102
[e = _ADCON0 -> -> 193 `i `uc ]
[; ;main.c: 103: ADON = 1;
"103
[e = _ADON -> -> 1 `i `b ]
[; ;main.c: 104: }
"104
[e :UE 1 ]
}
"114
[v _Refurbish_Sfr `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 114: void Refurbish_Sfr() {
[e :U _Refurbish_Sfr ]
[f ]
[; ;main.c: 116: PIE1 = 2;
"116
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 117: PR2 = 250;
"117
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 118: INTCON = 0XC0;
"118
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 119: if (4 != T2CON)
"119
[e $ ! != -> 4 `i -> _T2CON `i 3  ]
[; ;main.c: 120: T2CON = 4;
"120
[e = _T2CON -> -> 4 `i `uc ]
[e :U 3 ]
[; ;main.c: 121: }
"121
[e :UE 2 ]
}
"124
[v _KeyServer `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 124: void KeyServer() {
[e :U _KeyServer ]
[f ]
[; ;main.c: 125: if(key1ProtectTime > 0)
"125
[e $ ! > -> _key1ProtectTime `i -> 0 `i 5  ]
[; ;main.c: 126: {
"126
{
[; ;main.c: 127: key1ProtectTime--;
"127
[e -- _key1ProtectTime -> -> 1 `i `uc ]
"128
}
[e :U 5 ]
[; ;main.c: 128: }
[; ;main.c: 129: if(key2ProtectTime > 0)
"129
[e $ ! > -> _key2ProtectTime `i -> 0 `i 6  ]
[; ;main.c: 130: {
"130
{
[; ;main.c: 131: key2ProtectTime--;
"131
[e -- _key2ProtectTime -> -> 1 `i `uc ]
"132
}
[e :U 6 ]
[; ;main.c: 132: }
[; ;main.c: 133: if(key3ProtectTime > 0)
"133
[e $ ! > -> _key3ProtectTime `i -> 0 `i 7  ]
[; ;main.c: 134: {
"134
{
[; ;main.c: 135: key3ProtectTime--;
"135
[e -- _key3ProtectTime -> -> 1 `i `uc ]
"136
}
[e :U 7 ]
"137
[v F1057 `uc ~T0 @X0 1 s KeyOldFlag ]
[i F1057
-> -> 0 `i `uc
]
[; ;main.c: 136: }
[; ;main.c: 137: static unsigned char KeyOldFlag = 0;
[; ;main.c: 138: if (KeyFlag[0]) {
"138
[e $ ! != -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> -> -> 0 `i `Vuc `i 8  ]
{
[; ;main.c: 139: NoTouchTime = 0;
"139
[e = _NoTouchTime -> -> 0 `i `uc ]
[; ;main.c: 140: sleepTime = 0;
"140
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 141: if ((KeyFlag[0] & 0x2) && key2ProtectTime == 0 && key3ProtectTime == 0) {
"141
[e $ ! && && != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 2 `i -> 0 `i == -> _key2ProtectTime `i -> 0 `i == -> _key3ProtectTime `i -> 0 `i 9  ]
{
[; ;main.c: 143: key1ProtectTime = 5;
"143
[e = _key1ProtectTime -> -> 5 `i `uc ]
[; ;main.c: 144: if(++keyCount1 > 45)
"144
[e $ ! > =+ _keyCount1 -> -> 1 `i `ui -> -> 45 `i `ui 10  ]
[; ;main.c: 145: {
"145
{
[; ;main.c: 146: keyCount1 = 45;
"146
[e = _keyCount1 -> -> 45 `i `ui ]
[; ;main.c: 147: if(workStep > 1 && ++count50 > 25)
"147
[e $ ! && > -> _workStep `i -> 1 `i > -> =+ _count50 -> -> 1 `i `uc `i -> 25 `i 11  ]
[; ;main.c: 148: {
"148
{
[; ;main.c: 149: workStep--;
"149
[e -- _workStep -> -> 1 `i `uc ]
[; ;main.c: 150: count50 = 0;
"150
[e = _count50 -> -> 0 `i `uc ]
"151
}
[e :U 11 ]
"152
}
[e :U 10 ]
"153
}
[e :U 9 ]
[; ;main.c: 151: }
[; ;main.c: 152: }
[; ;main.c: 153: }
[; ;main.c: 154: if ((KeyFlag[0] & 0x1) && key1ProtectTime == 0 && key3ProtectTime == 0) {
"154
[e $ ! && && != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 1 `i -> 0 `i == -> _key1ProtectTime `i -> 0 `i == -> _key3ProtectTime `i -> 0 `i 12  ]
{
[; ;main.c: 156: key2ProtectTime = 5;
"156
[e = _key2ProtectTime -> -> 5 `i `uc ]
[; ;main.c: 157: if(++keyCount2 > 45)
"157
[e $ ! > =+ _keyCount2 -> -> 1 `i `ui -> -> 45 `i `ui 13  ]
[; ;main.c: 158: {
"158
{
[; ;main.c: 159: keyCount2 = 45;
"159
[e = _keyCount2 -> -> 45 `i `ui ]
[; ;main.c: 160: if(workStep < 20 && (workStep > 0 || ledLightTime > 0) && ++count50 > 25)
"160
[e $ ! && && < -> _workStep `i -> 20 `i || > -> _workStep `i -> 0 `i > _ledLightTime -> -> 0 `i `ui > -> =+ _count50 -> -> 1 `i `uc `i -> 25 `i 14  ]
[; ;main.c: 161: {
"161
{
[; ;main.c: 162: workStep++;
"162
[e ++ _workStep -> -> 1 `i `uc ]
[; ;main.c: 163: count50 = 0;
"163
[e = _count50 -> -> 0 `i `uc ]
"164
}
[e :U 14 ]
"165
}
[e :U 13 ]
"166
}
[e :U 12 ]
[; ;main.c: 164: }
[; ;main.c: 165: }
[; ;main.c: 166: }
[; ;main.c: 167: if ((KeyFlag[0] & 0x4) && key2ProtectTime == 0 && key1ProtectTime == 0) {
"167
[e $ ! && && != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 4 `i -> 0 `i == -> _key2ProtectTime `i -> 0 `i == -> _key1ProtectTime `i -> 0 `i 15  ]
{
[; ;main.c: 169: key3ProtectTime = 5;
"169
[e = _key3ProtectTime -> -> 5 `i `uc ]
[; ;main.c: 170: if(++keyCount3 > 200)
"170
[e $ ! > =+ _keyCount3 -> -> 1 `i `ui -> -> 200 `i `ui 16  ]
[; ;main.c: 171: {
"171
{
[; ;main.c: 172: keyCount3 = 200;
"172
[e = _keyCount3 -> -> 200 `i `ui ]
[; ;main.c: 173: if(longKeyFalg == 0)
"173
[e $ ! == -> _longKeyFalg `i -> 0 `i 17  ]
[; ;main.c: 174: {
"174
{
[; ;main.c: 175: longKeyFalg = 1;
"175
[e = _longKeyFalg -> -> 1 `i `uc ]
[; ;main.c: 176: if(workStep > 0 || ledLightTime > 0)
"176
[e $ ! || > -> _workStep `i -> 0 `i > _ledLightTime -> -> 0 `i `ui 18  ]
[; ;main.c: 177: {
"177
{
[; ;main.c: 178: workStep = 0;
"178
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 179: zeroStep = 12;
"179
[e = _zeroStep -> -> 12 `i `uc ]
[; ;main.c: 180: ledLightTime = 0;
"180
[e = _ledLightTime -> -> 0 `i `ui ]
"181
}
[; ;main.c: 181: }
[e $U 19  ]
"182
[e :U 18 ]
[; ;main.c: 182: else if(lowBatFlag == 0)
[e $ ! == -> _lowBatFlag `i -> 0 `i 20  ]
[; ;main.c: 183: {
"183
{
[; ;main.c: 184: workStep = 0;
"184
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 185: zeroStep = 0;
"185
[e = _zeroStep -> -> 0 `i `uc ]
[; ;main.c: 186: ledLightTime = 300;
"186
[e = _ledLightTime -> -> 300 `i `ui ]
[; ;main.c: 187: if(lowBatLockFlag)
"187
[e $ ! != -> _lowBatLockFlag `i -> -> -> 0 `i `uc `i 21  ]
[; ;main.c: 188: {
"188
{
[; ;main.c: 189: shanShuoTime = 250;
"189
[e = _shanShuoTime -> -> 250 `i `uc ]
"190
}
[e :U 21 ]
"191
}
[e :U 20 ]
"192
[e :U 19 ]
}
[; ;main.c: 190: }
[; ;main.c: 191: }
[; ;main.c: 192: }
[e $U 22  ]
"193
[e :U 17 ]
[; ;main.c: 193: else if(zeroStep > 0 && ++count64ms >= 12)
[e $ ! && > -> _zeroStep `i -> 0 `i >= -> =+ _count64ms -> -> 1 `i `uc `i -> 12 `i 23  ]
[; ;main.c: 194: {
"194
{
[; ;main.c: 195: zeroStep--;
"195
[e -- _zeroStep -> -> 1 `i `uc ]
[; ;main.c: 196: count64ms = 0;
"196
[e = _count64ms -> -> 0 `i `uc ]
"197
}
[e :U 23 ]
"198
[e :U 22 ]
}
[e :U 16 ]
[; ;main.c: 197: }
[; ;main.c: 198: }
[; ;main.c: 199: if(lowBatFlag == 0 && ledLightTime == 0 && longKeyFalg == 0 && keyCount3 % 16 == 0)
"199
[e $ ! && && && == -> _lowBatFlag `i -> 0 `i == _ledLightTime -> -> 0 `i `ui == -> _longKeyFalg `i -> 0 `i == % _keyCount3 -> -> 16 `i `ui -> -> 0 `i `ui 24  ]
[; ;main.c: 200: {
"200
{
[; ;main.c: 201: zeroStep++;
"201
[e ++ _zeroStep -> -> 1 `i `uc ]
[; ;main.c: 202: preZero = zeroStep;
"202
[e = _preZero _zeroStep ]
"203
}
[e :U 24 ]
"204
}
[e :U 15 ]
[; ;main.c: 203: }
[; ;main.c: 204: }
[; ;main.c: 205: keyCancelTime = 0;
"205
[e = _keyCancelTime -> -> 0 `i `uc ]
"206
}
[; ;main.c: 206: }
[e $U 25  ]
"207
[e :U 8 ]
[; ;main.c: 207: else
[; ;main.c: 208: {
"208
{
[; ;main.c: 209: if(++keyCancelTime > 5)
"209
[e $ ! > -> =+ _keyCancelTime -> -> 1 `i `uc `i -> 5 `i 26  ]
[; ;main.c: 210: {
"210
{
[; ;main.c: 211: keyCancelTime = 0;
"211
[e = _keyCancelTime -> -> 0 `i `uc ]
[; ;main.c: 212: if(keyCount1 > 5 && workStep > 1)
"212
[e $ ! && > _keyCount1 -> -> 5 `i `ui > -> _workStep `i -> 1 `i 27  ]
[; ;main.c: 213: {
"213
{
[; ;main.c: 214: workStep--;
"214
[e -- _workStep -> -> 1 `i `uc ]
"215
}
[e :U 27 ]
[; ;main.c: 215: }
[; ;main.c: 216: keyCount1 = 0;
"216
[e = _keyCount1 -> -> 0 `i `ui ]
[; ;main.c: 218: if(keyCount2 > 5 && workStep < 20 && (workStep > 0 || ledLightTime > 0))
"218
[e $ ! && && > _keyCount2 -> -> 5 `i `ui < -> _workStep `i -> 20 `i || > -> _workStep `i -> 0 `i > _ledLightTime -> -> 0 `i `ui 28  ]
[; ;main.c: 219: {
"219
{
[; ;main.c: 220: workStep++;
"220
[e ++ _workStep -> -> 1 `i `uc ]
"221
}
[e :U 28 ]
[; ;main.c: 221: }
[; ;main.c: 222: keyCount2 = 0;
"222
[e = _keyCount2 -> -> 0 `i `ui ]
"223
}
[e :U 26 ]
[; ;main.c: 223: }
[; ;main.c: 230: if(preZero == 1 || preZero == 2)
"230
[e $ ! || == -> _preZero `i -> 1 `i == -> _preZero `i -> 2 `i 29  ]
[; ;main.c: 231: {
"231
{
[; ;main.c: 232: preZero = 0;
"232
[e = _preZero -> -> 0 `i `uc ]
[; ;main.c: 233: zeroStep = 3;
"233
[e = _zeroStep -> -> 3 `i `uc ]
"234
}
[e :U 29 ]
[; ;main.c: 234: }
[; ;main.c: 235: longKeyFalg = 0;
"235
[e = _longKeyFalg -> -> 0 `i `uc ]
[; ;main.c: 236: keyCount3 = 0;
"236
[e = _keyCount3 -> -> 0 `i `ui ]
[; ;main.c: 237: if(zeroStep > 0 && ++count64ms >= 12)
"237
[e $ ! && > -> _zeroStep `i -> 0 `i >= -> =+ _count64ms -> -> 1 `i `uc `i -> 12 `i 30  ]
[; ;main.c: 238: {
"238
{
[; ;main.c: 239: zeroStep--;
"239
[e -- _zeroStep -> -> 1 `i `uc ]
[; ;main.c: 240: count64ms = 0;
"240
[e = _count64ms -> -> 0 `i `uc ]
"241
}
[e :U 30 ]
"242
}
[e :U 25 ]
[; ;main.c: 241: }
[; ;main.c: 242: }
[; ;main.c: 243: }
"243
[e :UE 4 ]
}
"256
[v _Read_ADC `(ui ~T0 @X0 1 ef2`uc`uc ]
"257
{
[; ;main.c: 256: unsigned int Read_ADC(unsigned char ADCchannel,unsigned char ADCLDORef)
[; ;main.c: 257: {
[e :U _Read_ADC ]
"256
[v _ADCchannel `uc ~T0 @X0 1 r1 ]
[v _ADCLDORef `uc ~T0 @X0 1 r2 ]
"257
[f ]
"258
[v _Adc_Result `ui ~T0 @X0 1 a ]
"259
[v _Adc_ResultSum `ui ~T0 @X0 1 a ]
[; ;main.c: 258: unsigned int Adc_Result;
[; ;main.c: 259: unsigned int Adc_ResultSum = 0;
[e = _Adc_ResultSum -> -> 0 `i `ui ]
"260
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 260: unsigned char i=200;
[e = _i -> -> 200 `i `uc ]
[; ;main.c: 262: if(ADCLDORef==0)
"262
[e $ ! == -> _ADCLDORef `i -> 0 `i 32  ]
[; ;main.c: 263: {
"263
{
[; ;main.c: 264: ADCON1 = 0B00000000;
"264
[e = _ADCON1 -> -> 0 `i `uc ]
"265
}
[; ;main.c: 265: }
[e $U 33  ]
"266
[e :U 32 ]
[; ;main.c: 266: else if(ADCLDORef==1)
[e $ ! == -> _ADCLDORef `i -> 1 `i 34  ]
[; ;main.c: 267: {
"267
{
[; ;main.c: 268: ADCON1 = 0B00000101;
"268
[e = _ADCON1 -> -> 5 `i `uc ]
"269
}
[; ;main.c: 269: }
[e $U 35  ]
"270
[e :U 34 ]
[; ;main.c: 270: else
[; ;main.c: 271: {
"271
{
[; ;main.c: 272: ADCON1 = 0B00000110;
"272
[e = _ADCON1 -> -> 6 `i `uc ]
"273
}
[e :U 35 ]
[e :U 33 ]
[; ;main.c: 273: }
[; ;main.c: 275: CHS4 = 0;
"275
[e = _CHS4 -> -> 0 `i `b ]
[; ;main.c: 276: if(ADCchannel >=16)
"276
[e $ ! >= -> _ADCchannel `i -> 16 `i 36  ]
[; ;main.c: 277: {
"277
{
[; ;main.c: 278: ADCchannel -= 16;
"278
[e =- _ADCchannel -> -> 16 `i `uc ]
[; ;main.c: 279: CHS4 = 1;
"279
[e = _CHS4 -> -> 1 `i `b ]
"280
}
[e :U 36 ]
[; ;main.c: 280: }
[; ;main.c: 282: ADCON0 &= 0b11000011;
"282
[e =& _ADCON0 -> -> 195 `i `uc ]
[; ;main.c: 283: ADCON0 |= ADCchannel<<2;
"283
[e =| _ADCON0 -> << -> _ADCchannel `i -> 2 `i `uc ]
[; ;main.c: 284: asm("nop");
"284
[; <" nop ;# ">
[; ;main.c: 285: GODONE = 1;
"285
[e = _GODONE -> -> 1 `i `b ]
[; ;main.c: 286: while(GODONE==1&&i>0)
"286
[e $U 37  ]
[e :U 38 ]
[; ;main.c: 287: {
"287
{
[; ;main.c: 288: i--;
"288
[e -- _i -> -> 1 `i `uc ]
[; ;main.c: 289: asm("nop");
"289
[; <" nop ;# ">
"290
}
[e :U 37 ]
"286
[e $ && == -> _GODONE `i -> 1 `i > -> _i `i -> 0 `i 38  ]
[e :U 39 ]
[; ;main.c: 290: }
[; ;main.c: 291: Adc_Result = ADRESH<<4;
"291
[e = _Adc_Result -> << -> _ADRESH `i -> 4 `i `ui ]
[; ;main.c: 292: Adc_Result += ADRESL>>4;
"292
[e =+ _Adc_Result -> >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 293: return Adc_Result;
"293
[e ) _Adc_Result ]
[e $UE 31  ]
[; ;main.c: 295: }
"295
[e :UE 31 ]
}
"297
[v _checkChrgAD `(v ~T0 @X0 1 ef ]
"298
{
[; ;main.c: 297: void checkChrgAD()
[; ;main.c: 298: {
[e :U _checkChrgAD ]
[f ]
[; ;main.c: 299: chrgResult = Read_ADC(16,1);
"299
[e = _chrgResult ( _Read_ADC (2 , -> -> 16 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 300: }
"300
[e :UE 40 ]
}
"302
[v _checkTempAD `(v ~T0 @X0 1 ef ]
"303
{
[; ;main.c: 302: void checkTempAD()
[; ;main.c: 303: {
[e :U _checkTempAD ]
[f ]
[; ;main.c: 304: PORTA |= 0x01;
"304
[e =| _PORTA -> -> 1 `i `uc ]
[; ;main.c: 305: tempResult = Read_ADC(1,1);
"305
[e = _tempResult ( _Read_ADC (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 306: if(tempResult < 130)
"306
[e $ ! < _tempResult -> -> 130 `i `ui 42  ]
[; ;main.c: 307: {
"307
{
[; ;main.c: 309: if(++checkTempTime > 200)
"309
[e $ ! > -> =+ _checkTempTime -> -> 1 `i `uc `i -> 200 `i 43  ]
[; ;main.c: 310: {
"310
{
[; ;main.c: 311: checkTempTime = 0;
"311
[e = _checkTempTime -> -> 0 `i `uc ]
[; ;main.c: 312: workStep = 0;
"312
[e = _workStep -> -> 0 `i `uc ]
"314
}
[e :U 43 ]
"315
}
[; ;main.c: 314: }
[; ;main.c: 315: }
[e $U 44  ]
"316
[e :U 42 ]
[; ;main.c: 316: else
[; ;main.c: 317: {
"317
{
[; ;main.c: 318: checkTempTime = 0;
"318
[e = _checkTempTime -> -> 0 `i `uc ]
"319
}
[e :U 44 ]
[; ;main.c: 319: }
[; ;main.c: 320: }
"320
[e :UE 41 ]
}
"322
[v _checkBat `(v ~T0 @X0 1 ef ]
"323
{
[; ;main.c: 322: void checkBat()
[; ;main.c: 323: {
[e :U _checkBat ]
[f ]
[; ;main.c: 324: batResult = Read_ADC(10,1);
"324
[e = _batResult ( _Read_ADC (2 , -> -> 10 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 325: if(batResult < 1118)
"325
[e $ ! < _batResult -> -> 1118 `i `ui 46  ]
[; ;main.c: 326: {
"326
{
[; ;main.c: 327: batValue = 0;
"327
[e = _batValue -> -> 0 `i `uc ]
[; ;main.c: 328: if(workStep > 0 && ++lowBatTime > 200)
"328
[e $ ! && > -> _workStep `i -> 0 `i > -> =+ _lowBatTime -> -> 1 `i `uc `i -> 200 `i 47  ]
[; ;main.c: 329: {
"329
{
[; ;main.c: 330: lowBatTime = 0;
"330
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 331: lowBatFlag = 1;
"331
[e = _lowBatFlag -> -> 1 `i `uc ]
[; ;main.c: 332: workStep = 0;
"332
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 333: zeroStep = 12;
"333
[e = _zeroStep -> -> 12 `i `uc ]
[; ;main.c: 334: ledLightTime = 0;
"334
[e = _ledLightTime -> -> 0 `i `ui ]
"335
}
[e :U 47 ]
"336
}
[; ;main.c: 335: }
[; ;main.c: 336: }
[e $U 48  ]
"337
[e :U 46 ]
[; ;main.c: 337: else
[; ;main.c: 338: {
"338
{
[; ;main.c: 339: lowBatTime = 0;
"339
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 340: if(batResult >= 1376)
"340
[e $ ! >= _batResult -> -> 1376 `i `ui 49  ]
[; ;main.c: 341: {
"341
{
[; ;main.c: 342: batValue = ((batResult - 1376) /2) + 16;
"342
[e = _batValue -> + / - _batResult -> -> 1376 `i `ui -> -> 2 `i `ui -> -> 16 `i `ui `uc ]
"343
}
[; ;main.c: 343: }
[e $U 50  ]
"344
[e :U 49 ]
[; ;main.c: 344: else
[; ;main.c: 345: {
"345
{
[; ;main.c: 346: batValue = (batResult - 1118) / 16;
"346
[e = _batValue -> / - _batResult -> -> 1118 `i `ui -> -> 16 `i `ui `uc ]
"347
}
[e :U 50 ]
[; ;main.c: 347: }
[; ;main.c: 349: if(batValue > 99)
"349
[e $ ! > -> _batValue `i -> 99 `i 51  ]
[; ;main.c: 350: batValue = 99;
"350
[e = _batValue -> -> 99 `i `uc ]
[e :U 51 ]
"351
}
[e :U 48 ]
[; ;main.c: 351: }
[; ;main.c: 352: }
"352
[e :UE 45 ]
}
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F1065 `(v ~T0 @X0 1 tf ]
"358
[v _Isr_Timer `IF1065 ~T0 @X0 1 e ]
"359
{
[; ;main.c: 358: void interrupt Isr_Timer()
[; ;main.c: 359: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 360: if(TMR2IF)
"360
[e $ ! _TMR2IF 53  ]
[; ;main.c: 361: {
"361
{
[; ;main.c: 362: TMR2IF = 0;
"362
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 363: if(++MainTime >= 32)
"363
[e $ ! >= -> =+ _MainTime -> -> 1 `i `uc `i -> 32 `i 54  ]
[; ;main.c: 364: {
"364
{
[; ;main.c: 365: MainTime = 0;
"365
[e = _MainTime -> -> 0 `i `uc ]
[; ;main.c: 366: B_MainLoop = 1;
"366
[e = _B_MainLoop -> -> 1 `i `b ]
"367
}
[e :U 54 ]
"368
}
[; ;main.c: 367: }
[; ;main.c: 368: }
[e $U 55  ]
"369
[e :U 53 ]
[; ;main.c: 369: else
[; ;main.c: 370: {
"370
{
[; ;main.c: 371: PIR1 = 0;
"371
[e = _PIR1 -> -> 0 `i `uc ]
"372
}
[e :U 55 ]
[; ;main.c: 372: }
[; ;main.c: 374: if(RACIF)
"374
[e $ ! _RACIF 56  ]
[; ;main.c: 375: {
"375
{
[; ;main.c: 376: RACIF = 0;
"376
[e = _RACIF -> -> 0 `i `b ]
[; ;main.c: 377: PORTA;
"377
[e _PORTA ]
"379
}
[e :U 56 ]
[; ;main.c: 379: }
[; ;main.c: 382: if(RCCIF)
"382
[e $ ! _RCCIF 57  ]
[; ;main.c: 383: {
"383
{
[; ;main.c: 384: RCCIF = 0;
"384
[e = _RCCIF -> -> 0 `i `b ]
[; ;main.c: 385: PORTC;
"385
[e _PORTC ]
"387
}
[e :U 57 ]
[; ;main.c: 387: }
[; ;main.c: 388: }
"388
[e :UE 52 ]
}
"390
[v _WorkSleep `(v ~T0 @X0 1 ef ]
"391
{
[; ;main.c: 390: void WorkSleep()
[; ;main.c: 391: {
[e :U _WorkSleep ]
[f ]
"394
[v F1067 `uc ~T0 @X0 1 s time ]
[; ;main.c: 394: static unsigned char time;
[; ;main.c: 396: if(B_OnOff)time = 0;
"396
[e $ ! _B_OnOff 59  ]
[e = F1067 -> -> 0 `i `uc ]
[e :U 59 ]
[; ;main.c: 401: time = 0;
"401
[e = F1067 -> -> 0 `i `uc ]
[; ;main.c: 402: INTCON = 0;
"402
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 403: PIE1 = 0;
"403
[e = _PIE1 -> -> 0 `i `uc ]
[; ;main.c: 404: PIE2 = 0;
"404
[e = _PIE2 -> -> 0 `i `uc ]
[; ;main.c: 405: PIR1 = 0;
"405
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 406: PIR2 = 0;
"406
[e = _PIR2 -> -> 0 `i `uc ]
[; ;main.c: 407: T2CON = 0;
"407
[e = _T2CON -> -> 0 `i `uc ]
[; ;main.c: 408: ADCON1 = 0;
"408
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 409: SWDTEN = 0;
"409
[e = _SWDTEN -> -> 0 `i `b ]
[; ;main.c: 410: asm("clrwdt");
"410
[; <" clrwdt ;# ">
[; ;main.c: 412: ADCON0 = 0;
"412
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 415: TRISA = 0x22;
"415
[e = _TRISA -> -> 34 `i `uc ]
[; ;main.c: 416: PORTA = 0;
"416
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 417: TRISB = 0x18;
"417
[e = _TRISB -> -> 24 `i `uc ]
[; ;main.c: 418: TRISC = 0x00;
"418
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 419: PORTC = 0x01;
"419
[e = _PORTC -> -> 1 `i `uc ]
[; ;main.c: 420: PORTB = 0x80;
"420
[e = _PORTB -> -> 128 `i `uc ]
[; ;main.c: 421: RACIF = 0;
"421
[e = _RACIF -> -> 0 `i `b ]
[; ;main.c: 422: IOCA = 0x20;
"422
[e = _IOCA -> -> 32 `i `uc ]
[; ;main.c: 423: RACIE = 1;
"423
[e = _RACIE -> -> 1 `i `b ]
[; ;main.c: 424: PORTA;
"424
[e _PORTA ]
[; ;main.c: 436: SystemEnterSleep();
"436
[e ( _SystemEnterSleep ..  ]
[; ;main.c: 437: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"437
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 438: if(RACIF)
"438
[e $ ! _RACIF 60  ]
[; ;main.c: 439: {
"439
{
[; ;main.c: 440: RACIF = 0;
"440
[e = _RACIF -> -> 0 `i `b ]
[; ;main.c: 441: PORTA;
"441
[e _PORTA ]
"442
}
[e :U 60 ]
[; ;main.c: 442: }
[; ;main.c: 443: if(RCCIF)
"443
[e $ ! _RCCIF 61  ]
[; ;main.c: 444: {
"444
{
[; ;main.c: 445: RCCIF = 0;
"445
[e = _RCCIF -> -> 0 `i `b ]
[; ;main.c: 446: PORTC;
"446
[e _PORTC ]
"447
}
[e :U 61 ]
[; ;main.c: 447: }
[; ;main.c: 449: Refurbish_Sfr();
"449
[e ( _Refurbish_Sfr ..  ]
[; ;main.c: 450: Init_System();
"450
[e ( _Init_System ..  ]
[; ;main.c: 453: }
"453
[e :UE 58 ]
}
"458
[v _TM1650_START `(v ~T0 @X0 1 ef ]
"459
{
[; ;main.c: 458: void TM1650_START()
[; ;main.c: 459: {
[e :U _TM1650_START ]
[f ]
[; ;main.c: 460: RC0=1;
"460
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 461: RB7=1;
"461
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 462: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"462
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 463: RB7=0;
"463
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 464: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"464
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 465: RC0=0;
"465
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 466: }
"466
[e :UE 62 ]
}
"469
[v _TM1650_STOP `(v ~T0 @X0 1 ef ]
"470
{
[; ;main.c: 469: void TM1650_STOP()
[; ;main.c: 470: {
[e :U _TM1650_STOP ]
[f ]
[; ;main.c: 471: RB7=0;
"471
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 472: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"472
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 473: RC0=1;
"473
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 474: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"474
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 475: RB7=1;
"475
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 476: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"476
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 477: RC0=0;
"477
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 478: RB7=0;
"478
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 479: }
"479
[e :UE 63 ]
}
"483
[v _write_8bit `(v ~T0 @X0 1 ef1`uc ]
"484
{
[; ;main.c: 483: void write_8bit( unsigned char dat)
[; ;main.c: 484: {
[e :U _write_8bit ]
"483
[v _dat `uc ~T0 @X0 1 r1 ]
"484
[f ]
"485
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 485: unsigned char i;
[; ;main.c: 486: RC0=0;
"486
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 487: for(i=0;i<8;i++)
"487
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 65  ]
[e $U 66  ]
"488
[e :U 65 ]
[; ;main.c: 488: {
{
[; ;main.c: 489: if(dat&0x80)
"489
[e $ ! != & -> _dat `i -> 128 `i -> 0 `i 68  ]
[; ;main.c: 490: {
"490
{
[; ;main.c: 491: RB7=1;
"491
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 492: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"492
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 493: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"493
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 494: RC0=1;
"494
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 495: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"495
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 496: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"496
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 497: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"497
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 498: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"498
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 499: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"499
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 500: RC0=0;
"500
[e = _RC0 -> -> 0 `i `b ]
"501
}
[; ;main.c: 501: }
[e $U 69  ]
"502
[e :U 68 ]
[; ;main.c: 502: else
[; ;main.c: 503: {
"503
{
[; ;main.c: 504: RB7=0;
"504
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 505: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"505
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 506: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"506
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 507: RC0=1;
"507
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 508: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"508
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 509: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"509
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 510: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"510
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 511: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"511
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 512: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"512
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 513: RC0=0;
"513
[e = _RC0 -> -> 0 `i `b ]
"514
}
[e :U 69 ]
[; ;main.c: 514: }
[; ;main.c: 515: dat<<=1;
"515
[e =<< _dat -> 1 `i ]
"516
}
"487
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 65  ]
[e :U 66 ]
"516
}
[; ;main.c: 516: }
[; ;main.c: 517: RB7=1;
"517
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 518: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"518
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 519: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"519
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 520: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"520
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 521: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"521
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 522: RC0=1;
"522
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 523: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"523
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 524: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"524
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 525: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"525
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 526: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"526
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 527: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"527
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 528: RC0=0;
"528
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 529: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"529
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 530: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"530
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 531: }
"531
[e :UE 64 ]
}
"540
[v _read_8bit `(uc ~T0 @X0 1 ef ]
"541
{
[; ;main.c: 540: unsigned char read_8bit()
[; ;main.c: 541: {
[e :U _read_8bit ]
[f ]
"542
[v _dat `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 542: unsigned char dat,i;
[; ;main.c: 543: RB7=1;
"543
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 544: dat=0;
"544
[e = _dat -> -> 0 `i `uc ]
[; ;main.c: 545: for(i=0;i<8;i++)
"545
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 71  ]
[e $U 72  ]
"546
[e :U 71 ]
[; ;main.c: 546: {
{
[; ;main.c: 547: RC0=1;
"547
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 548: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"548
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 549: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"549
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 550: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"550
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 551: dat<<=1;
"551
[e =<< _dat -> 1 `i ]
[; ;main.c: 552: if(RB7)
"552
[e $ ! _RB7 74  ]
[; ;main.c: 553: dat++;
"553
[e ++ _dat -> -> 1 `i `uc ]
[e :U 74 ]
[; ;main.c: 554: RC0=0;
"554
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 555: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"555
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 556: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"556
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 557: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"557
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 558: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"558
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
"559
}
"545
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 71  ]
[e :U 72 ]
"559
}
[; ;main.c: 559: }
[; ;main.c: 560: RB7=0;
"560
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 561: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"561
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 562: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"562
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 563: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"563
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 564: RC0=1;
"564
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 565: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"565
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 566: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"566
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 567: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"567
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 568: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"568
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 569: RC0=0;
"569
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 570: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"570
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 572: return dat ;
"572
[e ) _dat ]
[e $UE 70  ]
[; ;main.c: 573: }
"573
[e :UE 70 ]
}
"575
[v _TM1650_read `(uc ~T0 @X0 1 ef ]
"576
{
[; ;main.c: 575: unsigned char TM1650_read()
[; ;main.c: 576: {
[e :U _TM1650_read ]
[f ]
"577
[v _key `uc ~T0 @X0 1 a ]
[; ;main.c: 577: unsigned char key;
[; ;main.c: 578: TM1650_START();
"578
[e ( _TM1650_START ..  ]
[; ;main.c: 579: write_8bit(0x48);
"579
[e ( _write_8bit (1 -> -> 72 `i `uc ]
[; ;main.c: 580: key=read_8bit();
"580
[e = _key ( _read_8bit ..  ]
[; ;main.c: 581: TM1650_STOP();
"581
[e ( _TM1650_STOP ..  ]
[; ;main.c: 582: return key;
"582
[e ) _key ]
[e $UE 75  ]
[; ;main.c: 583: }
"583
[e :UE 75 ]
}
"585
[v _tm1650cmd `(v ~T0 @X0 1 ef2`uc`uc ]
"586
{
[; ;main.c: 585: void tm1650cmd(unsigned char digAddr,unsigned char seg_data)
[; ;main.c: 586: {
[e :U _tm1650cmd ]
"585
[v _digAddr `uc ~T0 @X0 1 r1 ]
[v _seg_data `uc ~T0 @X0 1 r2 ]
"586
[f ]
[; ;main.c: 587: TM1650_START();
"587
[e ( _TM1650_START ..  ]
[; ;main.c: 588: write_8bit(digAddr);
"588
[e ( _write_8bit (1 _digAddr ]
[; ;main.c: 589: write_8bit(seg_data);
"589
[e ( _write_8bit (1 _seg_data ]
[; ;main.c: 590: TM1650_STOP();
"590
[e ( _TM1650_STOP ..  ]
[; ;main.c: 591: }
"591
[e :UE 76 ]
}
"594
[v _initTM1650 `(v ~T0 @X0 1 ef ]
"595
{
[; ;main.c: 594: void initTM1650()
[; ;main.c: 595: {
[e :U _initTM1650 ]
[f ]
[; ;main.c: 596: tm1650cmd(0X48,0x11);
"596
[e ( _tm1650cmd (2 , -> -> 72 `i `uc -> -> 17 `i `uc ]
[; ;main.c: 597: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"597
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 598: tm1650cmd(0X68,0xFF);
"598
[e ( _tm1650cmd (2 , -> -> 104 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 599: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"599
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 600: tm1650cmd(0X6A,0xFF);
"600
[e ( _tm1650cmd (2 , -> -> 106 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 601: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"601
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 602: tm1650cmd(0X6C,0xFF);
"602
[e ( _tm1650cmd (2 , -> -> 108 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 603: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"603
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 604: tm1650cmd(0X6E,0xFF);
"604
[e ( _tm1650cmd (2 , -> -> 110 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 607: }
"607
[e :UE 77 ]
}
"609
[v _refreshTM1650 `(v ~T0 @X0 1 ef ]
"610
{
[; ;main.c: 609: void refreshTM1650()
[; ;main.c: 610: {
[e :U _refreshTM1650 ]
[f ]
[; ;main.c: 611: if(showFlag)
"611
[e $ ! != -> _showFlag `i -> -> -> 0 `i `uc `i 79  ]
[; ;main.c: 612: {
"612
{
[; ;main.c: 613: tm1650cmd(0X48,0x21);
"613
[e ( _tm1650cmd (2 , -> -> 72 `i `uc -> -> 33 `i `uc ]
[; ;main.c: 614: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"614
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 615: tm1650cmd(0X68,showLed2);
"615
[e ( _tm1650cmd (2 , -> -> 104 `i `uc _showLed2 ]
[; ;main.c: 616: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"616
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 617: tm1650cmd(0X6A,showShiWei);
"617
[e ( _tm1650cmd (2 , -> -> 106 `i `uc _showShiWei ]
[; ;main.c: 618: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"618
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 619: tm1650cmd(0X6C,showGeWei);
"619
[e ( _tm1650cmd (2 , -> -> 108 `i `uc _showGeWei ]
[; ;main.c: 620: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"620
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 621: tm1650cmd(0X6E,showLed1);
"621
[e ( _tm1650cmd (2 , -> -> 110 `i `uc _showLed1 ]
"622
}
[; ;main.c: 622: }
[e $U 80  ]
"623
[e :U 79 ]
[; ;main.c: 623: else if(sleepTime < 10)
[e $ ! < _sleepTime -> -> 10 `i `ui 81  ]
[; ;main.c: 624: {
"624
{
[; ;main.c: 625: tm1650cmd(0X68,0);
"625
[e ( _tm1650cmd (2 , -> -> 104 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 626: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"626
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 627: tm1650cmd(0X6A,0);
"627
[e ( _tm1650cmd (2 , -> -> 106 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 628: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"628
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 629: tm1650cmd(0X6C,0);
"629
[e ( _tm1650cmd (2 , -> -> 108 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 630: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"630
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 631: tm1650cmd(0X6E,0);
"631
[e ( _tm1650cmd (2 , -> -> 110 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 632: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"632
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 633: tm1650cmd(0X48,0x00);
"633
[e ( _tm1650cmd (2 , -> -> 72 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 634: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"634
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 635: showShiWei = 0x00;
"635
[e = _showShiWei -> -> 0 `i `uc ]
[; ;main.c: 636: showGeWei = 0x00;
"636
[e = _showGeWei -> -> 0 `i `uc ]
[; ;main.c: 637: showLed1 = 0x00;
"637
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 638: showLed2 = 0x00;
"638
[e = _showLed2 -> -> 0 `i `uc ]
"639
}
[e :U 81 ]
"640
[e :U 80 ]
[; ;main.c: 639: }
[; ;main.c: 640: }
[e :UE 78 ]
}
"643
[v _setZeroStep `(v ~T0 @X0 1 ef ]
"644
{
[; ;main.c: 643: void setZeroStep()
[; ;main.c: 644: {
[e :U _setZeroStep ]
[f ]
[; ;main.c: 645: if(zeroStep == 0)
"645
[e $ ! == -> _zeroStep `i -> 0 `i 83  ]
[; ;main.c: 646: {
"646
{
[; ;main.c: 647: showLed1 = 0x00;
"647
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 648: showLed2 = 0x00;
"648
[e = _showLed2 -> -> 0 `i `uc ]
"649
}
[; ;main.c: 649: }
[e $U 84  ]
"650
[e :U 83 ]
[; ;main.c: 650: else if(zeroStep == 1)
[e $ ! == -> _zeroStep `i -> 1 `i 85  ]
[; ;main.c: 651: {
"651
{
[; ;main.c: 652: showLed1 = 0xE1;
"652
[e = _showLed1 -> -> 225 `i `uc ]
[; ;main.c: 653: showLed2 = 0x00;
"653
[e = _showLed2 -> -> 0 `i `uc ]
"654
}
[; ;main.c: 654: }
[e $U 86  ]
"655
[e :U 85 ]
[; ;main.c: 655: else if(zeroStep == 2)
[e $ ! == -> _zeroStep `i -> 2 `i 87  ]
[; ;main.c: 656: {
"656
{
[; ;main.c: 657: showLed1 = 0xE3;
"657
[e = _showLed1 -> -> 227 `i `uc ]
[; ;main.c: 658: showLed2 = 0x00;
"658
[e = _showLed2 -> -> 0 `i `uc ]
"659
}
[; ;main.c: 659: }
[e $U 88  ]
"660
[e :U 87 ]
[; ;main.c: 660: else if(zeroStep == 3)
[e $ ! == -> _zeroStep `i -> 3 `i 89  ]
[; ;main.c: 661: {
"661
{
[; ;main.c: 662: showLed1 = 0xE7;
"662
[e = _showLed1 -> -> 231 `i `uc ]
[; ;main.c: 663: showLed2 = 0x00;
"663
[e = _showLed2 -> -> 0 `i `uc ]
"664
}
[; ;main.c: 664: }
[e $U 90  ]
"665
[e :U 89 ]
[; ;main.c: 665: else if(zeroStep == 4)
[e $ ! == -> _zeroStep `i -> 4 `i 91  ]
[; ;main.c: 666: {
"666
{
[; ;main.c: 667: showLed1 = 0xFF;
"667
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 668: showLed2 = 0x00;
"668
[e = _showLed2 -> -> 0 `i `uc ]
"669
}
[; ;main.c: 669: }
[e $U 92  ]
"670
[e :U 91 ]
[; ;main.c: 670: else if(zeroStep == 5)
[e $ ! == -> _zeroStep `i -> 5 `i 93  ]
[; ;main.c: 671: {
"671
{
[; ;main.c: 672: showLed1 = 0xFF;
"672
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 673: showLed2 = 0x01;
"673
[e = _showLed2 -> -> 1 `i `uc ]
"674
}
[; ;main.c: 674: }
[e $U 94  ]
"675
[e :U 93 ]
[; ;main.c: 675: else if(zeroStep == 6)
[e $ ! == -> _zeroStep `i -> 6 `i 95  ]
[; ;main.c: 676: {
"676
{
[; ;main.c: 677: showLed1 = 0xFF;
"677
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 678: showLed2 = 0x03;
"678
[e = _showLed2 -> -> 3 `i `uc ]
"679
}
[; ;main.c: 679: }
[e $U 96  ]
"680
[e :U 95 ]
[; ;main.c: 680: else if(zeroStep == 7)
[e $ ! == -> _zeroStep `i -> 7 `i 97  ]
[; ;main.c: 681: {
"681
{
[; ;main.c: 682: showLed1 = 0xFF;
"682
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 683: showLed2 = 0x07;
"683
[e = _showLed2 -> -> 7 `i `uc ]
"684
}
[; ;main.c: 684: }
[e $U 98  ]
"685
[e :U 97 ]
[; ;main.c: 685: else if(zeroStep == 8)
[e $ ! == -> _zeroStep `i -> 8 `i 99  ]
[; ;main.c: 686: {
"686
{
[; ;main.c: 687: showLed1 = 0xFF;
"687
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 688: showLed2 = 0x0F;
"688
[e = _showLed2 -> -> 15 `i `uc ]
"689
}
[; ;main.c: 689: }
[e $U 100  ]
"690
[e :U 99 ]
[; ;main.c: 690: else if(zeroStep == 9)
[e $ ! == -> _zeroStep `i -> 9 `i 101  ]
[; ;main.c: 691: {
"691
{
[; ;main.c: 692: showLed1 = 0xFF;
"692
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 693: showLed2 = 0x2F;
"693
[e = _showLed2 -> -> 47 `i `uc ]
"694
}
[; ;main.c: 694: }
[e $U 102  ]
"695
[e :U 101 ]
[; ;main.c: 695: else if(zeroStep == 10)
[e $ ! == -> _zeroStep `i -> 10 `i 103  ]
[; ;main.c: 696: {
"696
{
[; ;main.c: 697: showLed1 = 0xFF;
"697
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 698: showLed2 = 0x6F;
"698
[e = _showLed2 -> -> 111 `i `uc ]
"699
}
[; ;main.c: 699: }
[e $U 104  ]
"700
[e :U 103 ]
[; ;main.c: 700: else if(zeroStep == 11)
[e $ ! == -> _zeroStep `i -> 11 `i 105  ]
[; ;main.c: 701: {
"701
{
[; ;main.c: 702: showLed1 = 0xFF;
"702
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 703: showLed2 = 0xEF;
"703
[e = _showLed2 -> -> 239 `i `uc ]
"704
}
[; ;main.c: 704: }
[e $U 106  ]
"705
[e :U 105 ]
[; ;main.c: 705: else if(zeroStep == 12)
[e $ ! == -> _zeroStep `i -> 12 `i 107  ]
[; ;main.c: 706: {
"706
{
[; ;main.c: 707: showLed1 = 0xFF;
"707
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 708: showLed2 = 0xEF;
"708
[e = _showLed2 -> -> 239 `i `uc ]
"709
}
[e :U 107 ]
"710
[e :U 106 ]
[e :U 104 ]
[e :U 102 ]
[e :U 100 ]
[e :U 98 ]
[e :U 96 ]
[e :U 94 ]
[e :U 92 ]
[e :U 90 ]
[e :U 88 ]
[e :U 86 ]
[e :U 84 ]
[; ;main.c: 709: }
[; ;main.c: 710: }
[e :UE 82 ]
}
"713
[v _setZeroStep2 `(v ~T0 @X0 1 ef ]
"714
{
[; ;main.c: 713: void setZeroStep2()
[; ;main.c: 714: {
[e :U _setZeroStep2 ]
[f ]
[; ;main.c: 715: if(zeroStep == 0)
"715
[e $ ! == -> _zeroStep `i -> 0 `i 109  ]
[; ;main.c: 716: {
"716
{
[; ;main.c: 717: showLed1 = 0x00;
"717
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 718: showLed2 = 0x00;
"718
[e = _showLed2 -> -> 0 `i `uc ]
"719
}
[; ;main.c: 719: }
[e $U 110  ]
"720
[e :U 109 ]
[; ;main.c: 720: else if(zeroStep == 1)
[e $ ! == -> _zeroStep `i -> 1 `i 111  ]
[; ;main.c: 721: {
"721
{
[; ;main.c: 722: showLed1 = 0x01;
"722
[e = _showLed1 -> -> 1 `i `uc ]
[; ;main.c: 723: showLed2 = 0x00;
"723
[e = _showLed2 -> -> 0 `i `uc ]
"724
}
[; ;main.c: 724: }
[e $U 112  ]
"725
[e :U 111 ]
[; ;main.c: 725: else if(zeroStep == 2)
[e $ ! == -> _zeroStep `i -> 2 `i 113  ]
[; ;main.c: 726: {
"726
{
[; ;main.c: 727: showLed1 = 0x02;
"727
[e = _showLed1 -> -> 2 `i `uc ]
[; ;main.c: 728: showLed2 = 0x00;
"728
[e = _showLed2 -> -> 0 `i `uc ]
"729
}
[; ;main.c: 729: }
[e $U 114  ]
"730
[e :U 113 ]
[; ;main.c: 730: else if(zeroStep == 3)
[e $ ! == -> _zeroStep `i -> 3 `i 115  ]
[; ;main.c: 731: {
"731
{
[; ;main.c: 732: showLed1 = 0x04;
"732
[e = _showLed1 -> -> 4 `i `uc ]
[; ;main.c: 733: showLed2 = 0x00;
"733
[e = _showLed2 -> -> 0 `i `uc ]
"734
}
[; ;main.c: 734: }
[e $U 116  ]
"735
[e :U 115 ]
[; ;main.c: 735: else if(zeroStep == 4)
[e $ ! == -> _zeroStep `i -> 4 `i 117  ]
[; ;main.c: 736: {
"736
{
[; ;main.c: 737: showLed1 = 0x10;
"737
[e = _showLed1 -> -> 16 `i `uc ]
[; ;main.c: 738: showLed2 = 0x00;
"738
[e = _showLed2 -> -> 0 `i `uc ]
"739
}
[; ;main.c: 739: }
[e $U 118  ]
"740
[e :U 117 ]
[; ;main.c: 740: else if(zeroStep == 5)
[e $ ! == -> _zeroStep `i -> 5 `i 119  ]
[; ;main.c: 741: {
"741
{
[; ;main.c: 742: showLed1 = 0x00;
"742
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 743: showLed2 = 0x01;
"743
[e = _showLed2 -> -> 1 `i `uc ]
"744
}
[; ;main.c: 744: }
[e $U 120  ]
"745
[e :U 119 ]
[; ;main.c: 745: else if(zeroStep == 6)
[e $ ! == -> _zeroStep `i -> 6 `i 121  ]
[; ;main.c: 746: {
"746
{
[; ;main.c: 747: showLed1 = 0x00;
"747
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 748: showLed2 = 0x02;
"748
[e = _showLed2 -> -> 2 `i `uc ]
"749
}
[; ;main.c: 749: }
[e $U 122  ]
"750
[e :U 121 ]
[; ;main.c: 750: else if(zeroStep == 7)
[e $ ! == -> _zeroStep `i -> 7 `i 123  ]
[; ;main.c: 751: {
"751
{
[; ;main.c: 752: showLed1 = 0x00;
"752
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 753: showLed2 = 0x04;
"753
[e = _showLed2 -> -> 4 `i `uc ]
"754
}
[; ;main.c: 754: }
[e $U 124  ]
"755
[e :U 123 ]
[; ;main.c: 755: else if(zeroStep == 8)
[e $ ! == -> _zeroStep `i -> 8 `i 125  ]
[; ;main.c: 756: {
"756
{
[; ;main.c: 757: showLed1 = 0x00;
"757
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 758: showLed2 = 0x08;
"758
[e = _showLed2 -> -> 8 `i `uc ]
"759
}
[; ;main.c: 759: }
[e $U 126  ]
"760
[e :U 125 ]
[; ;main.c: 760: else if(zeroStep == 9)
[e $ ! == -> _zeroStep `i -> 9 `i 127  ]
[; ;main.c: 761: {
"761
{
[; ;main.c: 762: showLed1 = 0x00;
"762
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 763: showLed2 = 0x20;
"763
[e = _showLed2 -> -> 32 `i `uc ]
"764
}
[; ;main.c: 764: }
[e $U 128  ]
"765
[e :U 127 ]
[; ;main.c: 765: else if(zeroStep == 10)
[e $ ! == -> _zeroStep `i -> 10 `i 129  ]
[; ;main.c: 766: {
"766
{
[; ;main.c: 767: showLed1 = 0x00;
"767
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 768: showLed2 = 0x40;
"768
[e = _showLed2 -> -> 64 `i `uc ]
"769
}
[; ;main.c: 769: }
[e $U 130  ]
"770
[e :U 129 ]
[; ;main.c: 770: else if(zeroStep == 11)
[e $ ! == -> _zeroStep `i -> 11 `i 131  ]
[; ;main.c: 771: {
"771
{
[; ;main.c: 772: showLed1 = 0x00;
"772
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 773: showLed2 = 0x80;
"773
[e = _showLed2 -> -> 128 `i `uc ]
"774
}
[; ;main.c: 774: }
[e $U 132  ]
"775
[e :U 131 ]
[; ;main.c: 775: else if(zeroStep == 12)
[e $ ! == -> _zeroStep `i -> 12 `i 133  ]
[; ;main.c: 776: {
"776
{
[; ;main.c: 777: showLed1 = 0x00;
"777
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 778: showLed2 = 0x10;
"778
[e = _showLed2 -> -> 16 `i `uc ]
"779
}
[e :U 133 ]
"780
[e :U 132 ]
[e :U 130 ]
[e :U 128 ]
[e :U 126 ]
[e :U 124 ]
[e :U 122 ]
[e :U 120 ]
[e :U 118 ]
[e :U 116 ]
[e :U 114 ]
[e :U 112 ]
[e :U 110 ]
[; ;main.c: 779: }
[; ;main.c: 780: }
[e :UE 108 ]
}
"782
[v _showCtr `(v ~T0 @X0 1 ef ]
"783
{
[; ;main.c: 782: void showCtr()
[; ;main.c: 783: {
[e :U _showCtr ]
[f ]
[; ;main.c: 784: if(firstTime > 0)
"784
[e $ ! > _firstTime -> -> 0 `i `ui 135  ]
[; ;main.c: 785: {
"785
{
[; ;main.c: 786: showFlag = 1;
"786
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 787: sleepTime = 0;
"787
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 788: initTM1650();
"788
[e ( _initTM1650 ..  ]
"789
}
[; ;main.c: 789: }
[e $U 136  ]
"790
[e :U 135 ]
[; ;main.c: 790: else if(workStep > 0)
[e $ ! > -> _workStep `i -> 0 `i 137  ]
[; ;main.c: 791: {
"791
{
[; ;main.c: 792: showFlag = 1;
"792
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 793: sleepTime = 0;
"793
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 794: showLed1 = 0xFF;
"794
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 795: showLed2 = 0xFF;
"795
[e = _showLed2 -> -> 255 `i `uc ]
[; ;main.c: 796: showShiWei = numArray[workStep / 10];
"796
[e = _showShiWei *U + &U _numArray * -> -> / -> _workStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 797: showGeWei = numArray[workStep % 10];
"797
[e = _showGeWei *U + &U _numArray * -> -> % -> _workStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"798
}
[; ;main.c: 798: }
[e $U 138  ]
"799
[e :U 137 ]
[; ;main.c: 799: else if(ledLightTime > 0)
[e $ ! > _ledLightTime -> -> 0 `i `ui 139  ]
[; ;main.c: 800: {
"800
{
[; ;main.c: 801: showFlag = 1;
"801
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 802: sleepTime = 0;
"802
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 803: if(preBatValue >= 85)
"803
[e $ ! >= -> _preBatValue `i -> 85 `i 140  ]
[; ;main.c: 804: {
"804
{
[; ;main.c: 805: showShiWei = numArray[9];
"805
[e = _showShiWei *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 806: showGeWei = numArray[9];
"806
[e = _showGeWei *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"807
}
[; ;main.c: 807: }
[e $U 141  ]
"808
[e :U 140 ]
[; ;main.c: 808: else if(preBatValue > 60)
[e $ ! > -> _preBatValue `i -> 60 `i 142  ]
[; ;main.c: 809: {
"809
{
[; ;main.c: 810: showShiWei = numArray[8];
"810
[e = _showShiWei *U + &U _numArray * -> -> -> 8 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 811: showGeWei = numArray[0];
"811
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"812
}
[; ;main.c: 812: }
[e $U 143  ]
"813
[e :U 142 ]
[; ;main.c: 813: else if(preBatValue > 40)
[e $ ! > -> _preBatValue `i -> 40 `i 144  ]
[; ;main.c: 814: {
"814
{
[; ;main.c: 815: showShiWei = numArray[6];
"815
[e = _showShiWei *U + &U _numArray * -> -> -> 6 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 816: showGeWei = numArray[0];
"816
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"817
}
[; ;main.c: 817: }
[e $U 145  ]
"818
[e :U 144 ]
[; ;main.c: 818: else if(preBatValue > 20)
[e $ ! > -> _preBatValue `i -> 20 `i 146  ]
[; ;main.c: 819: {
"819
{
[; ;main.c: 820: showShiWei = numArray[4];
"820
[e = _showShiWei *U + &U _numArray * -> -> -> 4 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 821: showGeWei = numArray[0];
"821
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"822
}
[; ;main.c: 822: }
[e $U 147  ]
"823
[e :U 146 ]
[; ;main.c: 823: else if(preBatValue > 0)
[e $ ! > -> _preBatValue `i -> 0 `i 148  ]
[; ;main.c: 824: {
"824
{
[; ;main.c: 825: showShiWei = numArray[2];
"825
[e = _showShiWei *U + &U _numArray * -> -> -> 2 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 826: showGeWei = numArray[0];
"826
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"827
}
[; ;main.c: 827: }
[e $U 149  ]
"828
[e :U 148 ]
[; ;main.c: 828: else
[; ;main.c: 829: {
"829
{
[; ;main.c: 830: showShiWei = numArray[0];
"830
[e = _showShiWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 831: showGeWei = numArray[0];
"831
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"832
}
[e :U 149 ]
[e :U 147 ]
[e :U 145 ]
[e :U 143 ]
[e :U 141 ]
[; ;main.c: 832: }
[; ;main.c: 833: showLed1 = 0xFF;
"833
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 834: showLed2 = 0xFF;
"834
[e = _showLed2 -> -> 255 `i `uc ]
"835
}
[; ;main.c: 835: }
[e $U 150  ]
"836
[e :U 139 ]
[; ;main.c: 836: else if(chrgFlag)
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 151  ]
[; ;main.c: 837: {
"837
{
[; ;main.c: 838: showFlag = 1;
"838
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 839: sleepTime = 0;
"839
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 840: if(++chrgBatStepTime > 63)
"840
[e $ ! > -> =+ _chrgBatStepTime -> -> 1 `i `uc `i -> 63 `i 152  ]
[; ;main.c: 841: {
"841
{
[; ;main.c: 842: chrgBatStepTime = 0;
"842
[e = _chrgBatStepTime -> -> 0 `i `uc ]
[; ;main.c: 843: if(preBatValue >= 99)
"843
[e $ ! >= -> _preBatValue `i -> 99 `i 153  ]
[; ;main.c: 844: {
"844
{
[; ;main.c: 845: zeroStep = 0;
"845
[e = _zeroStep -> -> 0 `i `uc ]
[; ;main.c: 846: showShiWei = numArray[9];
"846
[e = _showShiWei *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 847: showGeWei = numArray[9];
"847
[e = _showGeWei *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"848
}
[; ;main.c: 848: }
[e $U 154  ]
"849
[e :U 153 ]
[; ;main.c: 849: else
[; ;main.c: 850: {
"850
{
[; ;main.c: 851: if(++zeroStep > 12)
"851
[e $ ! > -> =+ _zeroStep -> -> 1 `i `uc `i -> 12 `i 155  ]
[; ;main.c: 852: {
"852
{
[; ;main.c: 853: zeroStep = 1;
"853
[e = _zeroStep -> -> 1 `i `uc ]
"854
}
[e :U 155 ]
[; ;main.c: 854: }
[; ;main.c: 855: showShiWei = 0x00;
"855
[e = _showShiWei -> -> 0 `i `uc ]
[; ;main.c: 856: showGeWei = 0x00;
"856
[e = _showGeWei -> -> 0 `i `uc ]
"857
}
[e :U 154 ]
"858
}
[e :U 152 ]
[; ;main.c: 857: }
[; ;main.c: 858: }
[; ;main.c: 859: setZeroStep2();
"859
[e ( _setZeroStep2 ..  ]
"861
}
[; ;main.c: 861: }
[e $U 156  ]
"862
[e :U 151 ]
[; ;main.c: 862: else if(zeroStep > 0)
[e $ ! > -> _zeroStep `i -> 0 `i 157  ]
[; ;main.c: 863: {
"863
{
[; ;main.c: 864: showFlag = 1;
"864
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 865: sleepTime = 0;
"865
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 866: showShiWei = showGeWei = 0;
"866
[e = _showShiWei = _showGeWei -> -> 0 `i `uc ]
[; ;main.c: 867: setZeroStep();
"867
[e ( _setZeroStep ..  ]
"868
}
[; ;main.c: 868: }
[e $U 158  ]
"869
[e :U 157 ]
[; ;main.c: 869: else
[; ;main.c: 870: {
"870
{
[; ;main.c: 871: if(sleepTime > 10 && sleepTime % 20 == 0)
"871
[e $ ! && > _sleepTime -> -> 10 `i `ui == % _sleepTime -> -> 20 `i `ui -> -> 0 `i `ui 159  ]
[; ;main.c: 872: {
"872
{
[; ;main.c: 873: showFlag = 0;
"873
[e = _showFlag -> -> 0 `i `uc ]
[; ;main.c: 874: tm1650cmd(0X48,0x04);
"874
[e ( _tm1650cmd (2 , -> -> 72 `i `uc -> -> 4 `i `uc ]
[; ;main.c: 875: PORTC |= 0x01;
"875
[e =| _PORTC -> -> 1 `i `uc ]
[; ;main.c: 876: PORTB |= 0x80;
"876
[e =| _PORTB -> -> 128 `i `uc ]
"877
}
[e :U 159 ]
[; ;main.c: 877: }
[; ;main.c: 878: if(++sleepTime > 40)
"878
[e $ ! > =+ _sleepTime -> -> 1 `i `ui -> -> 40 `i `ui 160  ]
[; ;main.c: 879: {
"879
{
[; ;main.c: 880: sleepTime = 0;
"880
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 881: WorkSleep();
"881
[e ( _WorkSleep ..  ]
"882
}
[e :U 160 ]
"884
}
[e :U 158 ]
[e :U 156 ]
[e :U 150 ]
[e :U 138 ]
[e :U 136 ]
[; ;main.c: 882: }
[; ;main.c: 884: }
[; ;main.c: 885: }
"885
[e :UE 134 ]
}
"887
[v _workCtr `(v ~T0 @X0 1 ef ]
"888
{
[; ;main.c: 887: void workCtr()
[; ;main.c: 888: {
[e :U _workCtr ]
[f ]
[; ;main.c: 889: if(workStep > 0)
"889
[e $ ! > -> _workStep `i -> 0 `i 162  ]
[; ;main.c: 890: {
"890
{
[; ;main.c: 891: checkTempAD();
"891
[e ( _checkTempAD ..  ]
[; ;main.c: 892: PWMIOS0 = 0x01;
"892
[e = _PWMIOS0 -> -> 1 `i `uc ]
[; ;main.c: 893: PWMTH = 0x00;
"893
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 894: PWMTL = 100;
"894
[e = _PWMTL -> -> 100 `i `uc ]
[; ;main.c: 895: PWMD01H = 0x00;
"895
[e = _PWMD01H -> -> 0 `i `uc ]
[; ;main.c: 896: if(workStep <= 10)
"896
[e $ ! <= -> _workStep `i -> 10 `i 163  ]
[; ;main.c: 897: {
"897
{
[; ;main.c: 898: PWMD0L = 50 + workStep;
"898
[e = _PWMD0L -> + -> 50 `i -> _workStep `i `uc ]
"899
}
[; ;main.c: 899: }
[e $U 164  ]
"900
[e :U 163 ]
[; ;main.c: 900: else
[; ;main.c: 901: {
"901
{
[; ;main.c: 902: PWMD0L = 40 + (workStep*2);
"902
[e = _PWMD0L -> + -> 40 `i * -> _workStep `i -> 2 `i `uc ]
"903
}
[e :U 164 ]
[; ;main.c: 903: }
[; ;main.c: 904: PWMCON1 = 0x00;
"904
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 905: PWMCON2 = 0x00;
"905
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 906: PWMCON0 = 0x41;
"906
[e = _PWMCON0 -> -> 65 `i `uc ]
"907
}
[; ;main.c: 907: }
[e $U 165  ]
"908
[e :U 162 ]
[; ;main.c: 908: else if(chrgFlag && chrgFullFlag == 0 && chrgLockFlag == 0)
[e $ ! && && != -> _chrgFlag `i -> -> -> 0 `i `uc `i == -> _chrgFullFlag `i -> 0 `i == -> _chrgLockFlag `i -> 0 `i 166  ]
[; ;main.c: 909: {
"909
{
[; ;main.c: 910: if(chrgResult < 70 && batResult <= 1555)
"910
[e $ ! && < _chrgResult -> -> 70 `i `ui <= _batResult -> -> 1555 `i `ui 167  ]
[; ;main.c: 911: {
"911
{
[; ;main.c: 912: if(++addTime > 10 && chrgDuty < 35)
"912
[e $ ! && > -> =+ _addTime -> -> 1 `i `uc `i -> 10 `i < -> _chrgDuty `i -> 35 `i 168  ]
[; ;main.c: 913: {
"913
{
[; ;main.c: 914: addTime = 0;
"914
[e = _addTime -> -> 0 `i `uc ]
[; ;main.c: 915: chrgDuty++;
"915
[e ++ _chrgDuty -> -> 1 `i `uc ]
"916
}
[e :U 168 ]
"917
}
[; ;main.c: 916: }
[; ;main.c: 917: }
[e $U 169  ]
"918
[e :U 167 ]
[; ;main.c: 918: else
[; ;main.c: 919: {
"919
{
[; ;main.c: 920: addTime = 0;
"920
[e = _addTime -> -> 0 `i `uc ]
"921
}
[e :U 169 ]
[; ;main.c: 921: }
[; ;main.c: 922: if(chrgResult > 80 || batResult > 1555)
"922
[e $ ! || > _chrgResult -> -> 80 `i `ui > _batResult -> -> 1555 `i `ui 170  ]
[; ;main.c: 923: {
"923
{
[; ;main.c: 924: if(++subTime > 10 && chrgDuty > 10)
"924
[e $ ! && > -> =+ _subTime -> -> 1 `i `uc `i -> 10 `i > -> _chrgDuty `i -> 10 `i 171  ]
[; ;main.c: 925: {
"925
{
[; ;main.c: 926: subTime = 0;
"926
[e = _subTime -> -> 0 `i `uc ]
[; ;main.c: 927: chrgDuty--;
"927
[e -- _chrgDuty -> -> 1 `i `uc ]
"928
}
[e :U 171 ]
"929
}
[; ;main.c: 928: }
[; ;main.c: 929: }
[e $U 172  ]
"930
[e :U 170 ]
[; ;main.c: 930: else
[; ;main.c: 931: {
"931
{
[; ;main.c: 932: subTime = 0;
"932
[e = _subTime -> -> 0 `i `uc ]
"933
}
[e :U 172 ]
[; ;main.c: 933: }
[; ;main.c: 934: PWMIOS1 = 0x20;
"934
[e = _PWMIOS1 -> -> 32 `i `uc ]
[; ;main.c: 935: PWMTH = 0x00;
"935
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 936: PWMTL = 70;
"936
[e = _PWMTL -> -> 70 `i `uc ]
[; ;main.c: 937: PWMD23H = 0x00;
"937
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 938: PWMD3L = chrgDuty;
"938
[e = _PWMD3L _chrgDuty ]
[; ;main.c: 939: PWMCON1 = 0x00;
"939
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 940: PWMCON2 = 0x00;
"940
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 941: PWMCON0 = 0x08;
"941
[e = _PWMCON0 -> -> 8 `i `uc ]
"942
}
[; ;main.c: 942: }
[e $U 173  ]
"943
[e :U 166 ]
[; ;main.c: 943: else
[; ;main.c: 944: {
"944
{
[; ;main.c: 945: PWMCON0 = 0x00;
"945
[e = _PWMCON0 -> -> 0 `i `uc ]
"946
}
[e :U 173 ]
[e :U 165 ]
[; ;main.c: 946: }
[; ;main.c: 947: }
"947
[e :UE 161 ]
}
"949
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"950
{
[; ;main.c: 949: void chrgCtr()
[; ;main.c: 950: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 951: if(0x20 & PORTA)
"951
[e $ ! != & -> 32 `i -> _PORTA `i -> 0 `i 175  ]
[; ;main.c: 952: {
"952
{
[; ;main.c: 953: checkChrgAD();
"953
[e ( _checkChrgAD ..  ]
[; ;main.c: 954: chrgFlag = 1;
"954
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 955: workStep = 0;
"955
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 956: lowBatFlag = 0;
"956
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 957: ledLightTime = 0;
"957
[e = _ledLightTime -> -> 0 `i `ui ]
[; ;main.c: 958: if(batResult > 1555)
"958
[e $ ! > _batResult -> -> 1555 `i `ui 176  ]
[; ;main.c: 959: {
"959
{
[; ;main.c: 960: if(++chrgFullTime > 2500)
"960
[e $ ! > =+ _chrgFullTime -> -> 1 `i `ui -> -> 2500 `i `ui 177  ]
[; ;main.c: 961: {
"961
{
[; ;main.c: 962: chrgFullTime = 0;
"962
[e = _chrgFullTime -> -> 0 `i `ui ]
[; ;main.c: 963: chrgFullFlag = 1;
"963
[e = _chrgFullFlag -> -> 1 `i `uc ]
"964
}
[e :U 177 ]
"965
}
[; ;main.c: 964: }
[; ;main.c: 965: }
[e $U 178  ]
"966
[e :U 176 ]
[; ;main.c: 966: else
[; ;main.c: 967: {
"967
{
[; ;main.c: 968: chrgFullTime = 0;
"968
[e = _chrgFullTime -> -> 0 `i `ui ]
"969
}
[e :U 178 ]
"970
}
[; ;main.c: 969: }
[; ;main.c: 970: }
[e $U 179  ]
"971
[e :U 175 ]
[; ;main.c: 971: else
[; ;main.c: 972: {
"972
{
[; ;main.c: 973: if(chrgFlag)
"973
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 180  ]
[; ;main.c: 974: {
"974
{
[; ;main.c: 975: zeroStep = 0;
"975
[e = _zeroStep -> -> 0 `i `uc ]
"976
}
[e :U 180 ]
[; ;main.c: 976: }
[; ;main.c: 977: chrgFlag = 0;
"977
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 978: chrgFullFlag = 0;
"978
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 979: chrgFullTime = 0;
"979
[e = _chrgFullTime -> -> 0 `i `ui ]
[; ;main.c: 980: chrgDuty = 0;
"980
[e = _chrgDuty -> -> 0 `i `uc ]
[; ;main.c: 981: chrgLockFlag = 0;
"981
[e = _chrgLockFlag -> -> 0 `i `uc ]
"982
}
[e :U 179 ]
[; ;main.c: 982: }
[; ;main.c: 983: }
"983
[e :UE 174 ]
}
"985
[v _task1 `(v ~T0 @X0 1 ef ]
"986
{
[; ;main.c: 985: void task1()
[; ;main.c: 986: {
[e :U _task1 ]
[f ]
[; ;main.c: 987: if(firstTime > 0)
"987
[e $ ! > _firstTime -> -> 0 `i `ui 182  ]
[; ;main.c: 988: {
"988
{
[; ;main.c: 989: firstTime--;
"989
[e -- _firstTime -> -> 1 `i `ui ]
[; ;main.c: 990: if(preBatValue < batValue)
"990
[e $ ! < -> _preBatValue `i -> _batValue `i 183  ]
[; ;main.c: 991: {
"991
{
[; ;main.c: 992: preBatValue = batValue;
"992
[e = _preBatValue _batValue ]
"993
}
[e :U 183 ]
"994
}
[; ;main.c: 993: }
[; ;main.c: 994: }
[e $U 184  ]
"995
[e :U 182 ]
[; ;main.c: 995: else
[; ;main.c: 996: {
"996
{
[; ;main.c: 997: refreshTM1650();
"997
[e ( _refreshTM1650 ..  ]
"998
}
[e :U 184 ]
[; ;main.c: 998: }
[; ;main.c: 999: if(++count1s >= 250)
"999
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 250 `i 185  ]
[; ;main.c: 1000: {
"1000
{
[; ;main.c: 1001: count1s = 0;
"1001
[e = _count1s -> -> 0 `i `uc ]
[; ;main.c: 1002: if(workStep > 0)
"1002
[e $ ! > -> _workStep `i -> 0 `i 186  ]
[; ;main.c: 1003: {
"1003
{
[; ;main.c: 1004: if(++count900s > 675)
"1004
[e $ ! > =+ _count900s -> -> 1 `i `ui -> -> 675 `i `ui 187  ]
[; ;main.c: 1005: {
"1005
{
[; ;main.c: 1006: count900s = 0;
"1006
[e = _count900s -> -> 0 `i `ui ]
[; ;main.c: 1007: workStep = 0;
"1007
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 1008: zeroStep = 0;
"1008
[e = _zeroStep -> -> 0 `i `uc ]
[; ;main.c: 1009: ledLightTime = 0;
"1009
[e = _ledLightTime -> -> 0 `i `ui ]
"1010
}
[e :U 187 ]
"1011
}
[; ;main.c: 1010: }
[; ;main.c: 1011: }
[e $U 188  ]
"1012
[e :U 186 ]
[; ;main.c: 1012: else
[; ;main.c: 1013: {
"1013
{
[; ;main.c: 1014: count900s = 0;
"1014
[e = _count900s -> -> 0 `i `ui ]
"1015
}
[e :U 188 ]
[; ;main.c: 1015: }
[; ;main.c: 1016: if(ledLightTime > 0)
"1016
[e $ ! > _ledLightTime -> -> 0 `i `ui 189  ]
[; ;main.c: 1017: {
"1017
{
[; ;main.c: 1018: ledLightTime--;
"1018
[e -- _ledLightTime -> -> 1 `i `ui ]
"1019
}
[e :U 189 ]
[; ;main.c: 1019: }
[; ;main.c: 1020: if(chrgFlag)
"1020
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 190  ]
[; ;main.c: 1021: {
"1021
{
[; ;main.c: 1022: if(preBatValue < 99 && preBatValue < batValue)
"1022
[e $ ! && < -> _preBatValue `i -> 99 `i < -> _preBatValue `i -> _batValue `i 191  ]
[; ;main.c: 1023: {
"1023
{
[; ;main.c: 1024: if(++count15s >= 15)
"1024
[e $ ! >= -> =+ _count15s -> -> 1 `i `uc `i -> 15 `i 192  ]
[; ;main.c: 1025: {
"1025
{
[; ;main.c: 1026: count15s = 0;
"1026
[e = _count15s -> -> 0 `i `uc ]
[; ;main.c: 1027: preBatValue++;
"1027
[e ++ _preBatValue -> -> 1 `i `uc ]
"1028
}
[e :U 192 ]
"1029
}
[; ;main.c: 1028: }
[; ;main.c: 1029: }
[e $U 193  ]
"1030
[e :U 191 ]
[; ;main.c: 1030: else
[; ;main.c: 1031: {
"1031
{
[; ;main.c: 1032: count15s = 0;
"1032
[e = _count15s -> -> 0 `i `uc ]
"1033
}
[e :U 193 ]
"1034
}
[; ;main.c: 1033: }
[; ;main.c: 1034: }
[e $U 194  ]
"1035
[e :U 190 ]
[; ;main.c: 1035: else
[; ;main.c: 1036: {
"1036
{
[; ;main.c: 1037: if(preBatValue > 0 && preBatValue > batValue)
"1037
[e $ ! && > -> _preBatValue `i -> 0 `i > -> _preBatValue `i -> _batValue `i 195  ]
[; ;main.c: 1038: {
"1038
{
[; ;main.c: 1039: if(++count15s >= 15)
"1039
[e $ ! >= -> =+ _count15s -> -> 1 `i `uc `i -> 15 `i 196  ]
[; ;main.c: 1040: {
"1040
{
[; ;main.c: 1041: count15s = 0;
"1041
[e = _count15s -> -> 0 `i `uc ]
[; ;main.c: 1042: preBatValue--;
"1042
[e -- _preBatValue -> -> 1 `i `uc ]
"1043
}
[e :U 196 ]
"1044
}
[; ;main.c: 1043: }
[; ;main.c: 1044: }
[e $U 197  ]
"1045
[e :U 195 ]
[; ;main.c: 1045: else
[; ;main.c: 1046: {
"1046
{
[; ;main.c: 1047: count15s = 0;
"1047
[e = _count15s -> -> 0 `i `uc ]
"1048
}
[e :U 197 ]
"1049
}
[e :U 194 ]
"1050
}
[e :U 185 ]
[; ;main.c: 1048: }
[; ;main.c: 1049: }
[; ;main.c: 1050: }
[; ;main.c: 1052: }
"1052
[e :UE 181 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"1058
[v _main `(v ~T0 @X0 1 ef ]
"1059
{
[; ;main.c: 1058: void main()
[; ;main.c: 1059: {
[e :U _main ]
[f ]
[; ;main.c: 1060: Init_System();
"1060
[e ( _Init_System ..  ]
[; ;main.c: 1061: initTM1650();
"1061
[e ( _initTM1650 ..  ]
[; ;main.c: 1062: firstTime = 250;
"1062
[e = _firstTime -> -> 250 `i `ui ]
[; ;main.c: 1063: while(1)
"1063
[e :U 200 ]
[; ;main.c: 1064: {
"1064
{
[; ;main.c: 1065: if(B_MainLoop)
"1065
[e $ ! _B_MainLoop 202  ]
[; ;main.c: 1066: {
"1066
{
[; ;main.c: 1067: B_MainLoop = 0;
"1067
[e = _B_MainLoop -> -> 0 `i `b ]
[; ;main.c: 1068: asm("clrwdt");
"1068
[; <" clrwdt ;# ">
[; ;main.c: 1070: CheckTouchKey();
"1070
[e ( _CheckTouchKey ..  ]
[; ;main.c: 1072: Refurbish_Sfr();
"1072
[e ( _Refurbish_Sfr ..  ]
[; ;main.c: 1073: if(chrgFlag == 0)
"1073
[e $ ! == -> _chrgFlag `i -> 0 `i 203  ]
[; ;main.c: 1074: KeyServer();
"1074
[e ( _KeyServer ..  ]
[e :U 203 ]
[; ;main.c: 1075: showCtr();
"1075
[e ( _showCtr ..  ]
[; ;main.c: 1076: workCtr();
"1076
[e ( _workCtr ..  ]
[; ;main.c: 1077: checkBat();
"1077
[e ( _checkBat ..  ]
[; ;main.c: 1078: chrgCtr();
"1078
[e ( _chrgCtr ..  ]
[; ;main.c: 1079: task1();
"1079
[e ( _task1 ..  ]
"1081
}
[e :U 202 ]
"1082
}
[e :U 199 ]
"1063
[e $U 200  ]
[e :U 201 ]
[; ;main.c: 1081: }
[; ;main.c: 1082: }
[; ;main.c: 1083: }
"1083
[e :UE 198 ]
}
