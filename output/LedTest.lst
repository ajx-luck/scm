

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 01 13:20:08 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1711C
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	swtext1,local,class=CONST,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	pa_nodes0,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	text0
    55  0000                     __ptext0:	
    56  000B                     _INTCON	set	11
    57  0007                     _PORTC	set	7
    58  0005                     _PORTA	set	5
    59  008F                     _OSCCON	set	143
    60  0087                     _TRISC	set	135
    61  0085                     _TRISA	set	133
    62  018F                     _WPUC	set	399
    63                           
    64                           	psect	cinit
    65  07FE                     start_initialization:	
    66                           ; #config settings
    67                           
    68  07FE                     __initialization:	
    69  07FE                     end_of_initialization:	
    70                           ;End of C runtime variable initialization code
    71                           
    72  07FE                     __end_of__initialization:	
    73  07FE  0183               	clrf	3
    74  07FF  2F98               	ljmp	_main	;jump to C main() function
    75                           
    76                           	psect	cstackCOMMON
    77  0070                     __pcstackCOMMON:	
    78  0070                     ?_delay_ms:	
    79  0070                     ?_setLedOn:	
    80                           ; 1 bytes @ 0x0
    81                           
    82  0070                     ??_setLedOn:	
    83                           ; 1 bytes @ 0x0
    84                           
    85  0070                     ?_main:	
    86                           ; 1 bytes @ 0x0
    87                           
    88  0070                     ?_delay_3us:	
    89                           ; 1 bytes @ 0x0
    90                           
    91  0070                     ??_delay_3us:	
    92                           ; 1 bytes @ 0x0
    93                           
    94  0070                     ?_delay_10us:	
    95                           ; 1 bytes @ 0x0
    96                           
    97  0070                     ??_delay_10us:	
    98                           ; 1 bytes @ 0x0
    99                           
   100  0070                     ?_delay_50us:	
   101                           ; 1 bytes @ 0x0
   102                           
   103  0070                     ??_delay_50us:	
   104                           ; 1 bytes @ 0x0
   105                           
   106  0070                     ?_delay_100us:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  0070                     ??_delay_100us:	
   110                           ; 1 bytes @ 0x0
   111                           
   112  0070                     ?_delay_1ms:	
   113                           ; 1 bytes @ 0x0
   114                           
   115  0070                     ??_delay_1ms:	
   116                           ; 1 bytes @ 0x0
   117                           
   118  0070                     setLedOn@ledIndex:	
   119                           ; 1 bytes @ 0x0
   120                           
   121  0070                     delay_ms@ms:	
   122                           ; 1 bytes @ 0x0
   123                           
   124                           
   125                           ; 2 bytes @ 0x0
   126  0070                     	ds	2
   127  0072                     ??_delay_ms:	
   128  0072                     ??_main:	
   129                           ; 1 bytes @ 0x2
   130                           
   131                           
   132                           	psect	maintext
   133  0798                     __pmaintext:	
   134                           ; 1 bytes @ 0x2
   135 ;;
   136 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   137 ;;
   138 ;; *************** function _main *****************
   139 ;; Defined at:
   140 ;;		line 60 in file "C:\SCMCU WorkSpace\led.c"
   141 ;; Parameters:    Size  Location     Type
   142 ;;		None
   143 ;; Auto vars:     Size  Location     Type
   144 ;;		None
   145 ;; Return value:  Size  Location     Type
   146 ;;                  1    wreg      void 
   147 ;; Registers used:
   148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   149 ;; Tracked objects:
   150 ;;		On entry : B00/0
   151 ;;		On exit  : 0/0
   152 ;;		Unchanged: 0/0
   153 ;; Data sizes:     COMMON   BANK0   BANK1
   154 ;;      Params:         0       0       0
   155 ;;      Locals:         0       0       0
   156 ;;      Temps:          0       0       0
   157 ;;      Totals:         0       0       0
   158 ;;Total ram usage:        0 bytes
   159 ;; Hardware stack levels required when called:    6
   160 ;; This function calls:
   161 ;;		_delay_ms
   162 ;;		_setLedOn
   163 ;; This function is called by:
   164 ;;		Startup code after reset
   165 ;; This function uses a non-reentrant model
   166 ;;
   167                           
   168                           
   169                           ;psect for function _main
   170  0798                     _main:	
   171                           
   172                           ;incstack = 0
   173                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   174  0798  0000               	nop	;# 
   175  0799  0064               	clrwdt	;# 
   176                           
   177                           ;led.c: 64: INTCON = 0;
   178  079A  018B               	clrf	11	;volatile
   179                           
   180                           ;led.c: 65: OSCCON = 0X71;
   181  079B  3071               	movlw	113
   182  079C  1683               	bsf	3,5	;RP0=1, select bank1
   183  079D  1303               	bcf	3,6	;RP1=0, select bank1
   184  079E  008F               	movwf	15	;volatile
   185                           
   186                           ;led.c: 67: TRISC = 0;
   187  079F  0187               	clrf	7	;volatile
   188                           
   189                           ;led.c: 68: TRISA = 0xFF;
   190  07A0  30FF               	movlw	255
   191  07A1  0085               	movwf	5	;volatile
   192                           
   193                           ;led.c: 69: WPUC = 0xFF;
   194  07A2  1703               	bsf	3,6	;RP1=1, select bank3
   195  07A3  008F               	movwf	15	;volatile
   196                           
   197                           ;led.c: 70: PORTA = 0;
   198  07A4  1283               	bcf	3,5	;RP0=0, select bank0
   199  07A5  1303               	bcf	3,6	;RP1=0, select bank0
   200  07A6  0185               	clrf	5	;volatile
   201                           
   202                           ;led.c: 71: PORTC = 0x00;
   203  07A7  0187               	clrf	7	;volatile
   204  07A8                     l1588:	
   205                           
   206                           ;led.c: 74: {
   207                           ;led.c: 75: setLedOn(2);
   208  07A8  3002               	movlw	2
   209  07A9  27C2               	fcall	_setLedOn
   210                           
   211                           ;led.c: 76: delay_ms(1000);
   212  07AA  27BD               	fcall	PL6	;call to abstracted procedure
   213  07AB  278B               	fcall	_delay_ms
   214                           
   215                           ;led.c: 77: setLedOn(1);
   216  07AC  3001               	movlw	1
   217  07AD  27C2               	fcall	_setLedOn
   218                           
   219                           ;led.c: 78: delay_ms(1000);
   220  07AE  27BD               	fcall	PL6	;call to abstracted procedure
   221  07AF  278B               	fcall	_delay_ms
   222                           
   223                           ;led.c: 79: setLedOn(3);
   224  07B0  3003               	movlw	3
   225  07B1  27C2               	fcall	_setLedOn
   226                           
   227                           ;led.c: 80: delay_ms(1000);
   228  07B2  27BD               	fcall	PL6	;call to abstracted procedure
   229  07B3  278B               	fcall	_delay_ms
   230                           
   231                           ;led.c: 81: setLedOn(4);
   232  07B4  3004               	movlw	4
   233  07B5  27C2               	fcall	_setLedOn
   234                           
   235                           ;led.c: 82: delay_ms(1000);
   236  07B6  27BD               	fcall	PL6	;call to abstracted procedure
   237  07B7  278B               	fcall	_delay_ms
   238                           
   239                           ;led.c: 83: setLedOn(5);
   240  07B8  3005               	movlw	5
   241  07B9  27C2               	fcall	_setLedOn
   242                           
   243                           ;led.c: 84: delay_ms(1000);
   244  07BA  27BD               	fcall	PL6	;call to abstracted procedure
   245  07BB  278B               	fcall	_delay_ms
   246  07BC  2FA8               	goto	l1588
   247  07BD                     __end_of_main:	
   248  07BD                     PL6:	
   249  07BD  30E8               	movlw	232
   250  07BE  00F0               	movwf	delay_ms@ms
   251  07BF  3003               	movlw	3
   252  07C0  00F1               	movwf	delay_ms@ms+1
   253  07C1  0008               	return
   254  07C2                     __end_ofPL6:	
   255                           
   256                           	psect	text1
   257  07C2                     __ptext1:	
   258 ;; *************** function _setLedOn *****************
   259 ;; Defined at:
   260 ;;		line 12 in file "C:\SCMCU WorkSpace\led.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;  ledIndex        1    wreg     unsigned char 
   263 ;; Auto vars:     Size  Location     Type
   264 ;;  ledIndex        1    0[COMMON] unsigned char 
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMMON   BANK0   BANK1
   274 ;;      Params:         0       0       0
   275 ;;      Locals:         1       0       0
   276 ;;      Temps:          0       0       0
   277 ;;      Totals:         1       0       0
   278 ;;Total ram usage:        1 bytes
   279 ;; Hardware stack levels used:    1
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           
   288                           ;psect for function _setLedOn
   289  07C2                     _setLedOn:	
   290                           
   291                           ;incstack = 0
   292                           ; Regs used in _setLedOn: [wreg-fsr0h+status,2+status,0]
   293                           ;setLedOn@ledIndex stored from wreg
   294  07C2  00F0               	movwf	setLedOn@ledIndex
   295                           
   296                           ;led.c: 13: switch(ledIndex) {
   297  07C3  2FE1               	goto	l1506
   298  07C4                     l542:	
   299                           ;led.c: 14: case 1:
   300                           
   301                           
   302                           ;led.c: 16: TRISC&=~(1<<1);
   303                           
   304                           ;led.c: 17: TRISA|=(1<<7);
   305                           
   306                           ;led.c: 18: TRISC&=~(1<<0);
   307                           
   308                           ;led.c: 19: PORTA&=~(1<<7);
   309  07C4  27F7               	fcall	PL4	;call to abstracted procedure
   310  07C5  1385               	bcf	5,7	;volatile
   311                           
   312                           ;led.c: 20: PORTC|=(1<<0);
   313  07C6  1407               	bsf	7,0	;volatile
   314                           
   315                           ;led.c: 21: PORTC&=~(1<<1);
   316  07C7  1087               	bcf	7,1	;volatile
   317                           
   318                           ;led.c: 22: break;
   319  07C8  0008               	return
   320  07C9                     l544:	
   321                           ;led.c: 23: case 2:
   322                           
   323                           
   324                           ;led.c: 24: TRISC&=~(1<<1);
   325                           
   326                           ;led.c: 25: TRISA|=(1<<7);
   327                           
   328                           ;led.c: 26: TRISC&=~(1<<0);
   329                           
   330                           ;led.c: 27: PORTC&=~(1<<0);
   331  07C9  27F7               	fcall	PL4	;call to abstracted procedure
   332  07CA  1007               	bcf	7,0	;volatile
   333                           
   334                           ;led.c: 28: PORTC|=(1<<1);
   335  07CB  1487               	bsf	7,1	;volatile
   336                           
   337                           ;led.c: 29: break;
   338  07CC  0008               	return
   339  07CD                     l545:	
   340                           ;led.c: 30: case 3:
   341                           
   342                           
   343                           ;led.c: 32: TRISC|=(1<<0);
   344                           
   345                           ;led.c: 33: TRISA&=~(1<<7);
   346                           
   347                           ;led.c: 34: TRISC&=~(1<<1);
   348                           
   349                           ;led.c: 35: PORTA|=(1<<7);
   350  07CD  27F0               	fcall	PL2	;call to abstracted procedure
   351  07CE  1785               	bsf	5,7	;volatile
   352                           
   353                           ;led.c: 36: PORTC&=~(1<<0);
   354  07CF  1007               	bcf	7,0	;volatile
   355                           
   356                           ;led.c: 37: PORTC&=~(1<<1);
   357  07D0  1087               	bcf	7,1	;volatile
   358                           
   359                           ;led.c: 38: break;
   360  07D1  0008               	return
   361  07D2                     l546:	
   362                           ;led.c: 39: case 4:
   363                           
   364                           
   365                           ;led.c: 40: TRISC|=(1<<0);
   366                           
   367                           ;led.c: 41: TRISA&=~(1<<7);
   368                           
   369                           ;led.c: 42: TRISC&=~(1<<1);
   370                           
   371                           ;led.c: 43: PORTA&=~(1<<7);
   372  07D2  27F0               	fcall	PL2	;call to abstracted procedure
   373  07D3  1385               	bcf	5,7	;volatile
   374                           
   375                           ;led.c: 44: PORTC|=(1<<0);
   376  07D4  1407               	bsf	7,0	;volatile
   377                           
   378                           ;led.c: 45: PORTC|=(1<<1);
   379  07D5  1487               	bsf	7,1	;volatile
   380                           
   381                           ;led.c: 46: break;
   382  07D6  0008               	return
   383  07D7                     l547:	
   384                           ;led.c: 47: case 5:
   385                           
   386                           
   387                           ;led.c: 49: TRISC|=(1<<0);
   388  07D7  1683               	bsf	3,5	;RP0=1, select bank1
   389  07D8  1303               	bcf	3,6	;RP1=0, select bank1
   390  07D9  1407               	bsf	7,0	;volatile
   391                           
   392                           ;led.c: 50: TRISA|=(1<<7);
   393  07DA  1785               	bsf	5,7	;volatile
   394                           
   395                           ;led.c: 51: TRISC|=(1<<1);
   396  07DB  1487               	bsf	7,1	;volatile
   397                           
   398                           ;led.c: 52: PORTC&=~(1<<0);
   399  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   400  07DD  1007               	bcf	7,0	;volatile
   401                           
   402                           ;led.c: 53: PORTA&=~(1<<7);
   403  07DE  1385               	bcf	5,7	;volatile
   404                           
   405                           ;led.c: 54: PORTC&=~(1<<1);
   406  07DF  1087               	bcf	7,1	;volatile
   407                           
   408                           ;led.c: 55: break;
   409  07E0  0008               	return
   410  07E1                     l1506:	
   411  07E1  0870               	movf	setLedOn@ledIndex,w
   412                           
   413                           ; Switch size 1, requested type "space"
   414                           ; Number of cases is 5, Range of values is 1 to 5
   415                           ; switch strategies available:
   416                           ; Name         Instructions Cycles
   417                           ; direct_byte           14     9 (fixed)
   418                           ; simple_byte           16     9 (average)
   419                           ; jumptable            263     9 (fixed)
   420                           ;	Chosen strategy is direct_byte
   421  07E2  3EFF               	addlw	-1
   422  07E3  1C03               	skipc
   423  07E4  0008               	return
   424  07E5  0084               	movwf	4
   425  07E6  3005               	movlw	5
   426  07E7  0204               	subwf	4,w
   427  07E8  1803               	skipnc
   428  07E9  0008               	return
   429  07EA  3000               	movlw	high S1628
   430  07EB  008A               	movwf	10
   431  07EC  3001               	movlw	low S1628
   432  07ED  0704               	addwf	4,w
   433  07EE  0082               	movwf	2
   434  07EF  0008               	return
   435  07F0                     __end_of_setLedOn:	
   436  07F0                     PL2:	
   437  07F0  1683               	bsf	3,5	;RP0=1, select bank1
   438  07F1  1303               	bcf	3,6	;RP1=0, select bank1
   439  07F2  1407               	bsf	7,0	;volatile
   440  07F3  1385               	bcf	5,7	;volatile
   441  07F4  1087               	bcf	7,1	;volatile
   442  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   443  07F6  0008               	return
   444  07F7                     __end_ofPL2:	
   445  07F7                     PL4:	
   446  07F7  1683               	bsf	3,5	;RP0=1, select bank1
   447  07F8  1303               	bcf	3,6	;RP1=0, select bank1
   448  07F9  1087               	bcf	7,1	;volatile
   449  07FA  1785               	bsf	5,7	;volatile
   450  07FB  1007               	bcf	7,0	;volatile
   451  07FC  1283               	bcf	3,5	;RP0=0, select bank0
   452  07FD  0008               	return
   453  07FE                     __end_ofPL4:	
   454                           
   455                           	psect	swtext1
   456  0001                     __pswtext1:	
   457  0001                     S1628:	
   458  0001  2FC4               	ljmp	l542
   459  0002  2FC9               	ljmp	l544
   460  0003  2FCD               	ljmp	l545
   461  0004  2FD2               	ljmp	l546
   462  0005  2FD7               	ljmp	l547
   463                           
   464                           	psect	text2
   465  078B                     __ptext2:	
   466 ;; *************** function _delay_ms *****************
   467 ;; Defined at:
   468 ;;		line 52 in file "C:\SCMCU WorkSpace\delay.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  ms              2    0[COMMON] unsigned int 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg, status,2, status,0, pclath, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1
   482 ;;      Params:         2       0       0
   483 ;;      Locals:         0       0       0
   484 ;;      Temps:          0       0       0
   485 ;;      Totals:         2       0       0
   486 ;;Total ram usage:        2 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; Hardware stack levels required when called:    5
   489 ;; This function calls:
   490 ;;		_delay_1ms
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           
   497                           ;psect for function _delay_ms
   498  078B                     _delay_ms:	
   499  078B                     l1574:	
   500                           ;delay.c: 54: while(ms--)
   501                           
   502                           ;incstack = 0
   503                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
   504                           
   505  078B  3001               	movlw	1
   506  078C  02F0               	subwf	delay_ms@ms,f
   507  078D  3000               	movlw	0
   508  078E  1C03               	skipc
   509  078F  03F1               	decf	delay_ms@ms+1,f
   510  0790  02F1               	subwf	delay_ms@ms+1,f
   511  0791  0F70               	incfsz	delay_ms@ms,w
   512  0792  2F96               	goto	l1572
   513  0793  0A71               	incf	delay_ms@ms+1,w
   514  0794  1903               	btfsc	3,2
   515  0795  0008               	return
   516  0796                     l1572:	
   517                           
   518                           ;delay.c: 55: delay_1ms();
   519  0796  2781               	fcall	_delay_1ms
   520  0797  2F8B               	goto	l1574
   521  0798                     __end_of_delay_ms:	
   522                           
   523                           	psect	text3
   524  0781                     __ptext3:	
   525 ;; *************** function _delay_1ms *****************
   526 ;; Defined at:
   527 ;;		line 39 in file "C:\SCMCU WorkSpace\delay.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		status,2, status,0, pclath, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1
   541 ;;      Params:         0       0       0
   542 ;;      Locals:         0       0       0
   543 ;;      Temps:          0       0       0
   544 ;;      Totals:         0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    4
   548 ;; This function calls:
   549 ;;		_delay_100us
   550 ;; This function is called by:
   551 ;;		_delay_ms
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           
   556                           ;psect for function _delay_1ms
   557  0781                     _delay_1ms:	
   558                           
   559                           ;delay.c: 41: delay_100us();
   560                           
   561                           ;incstack = 0
   562                           ; Regs used in _delay_1ms: [status,2+status,0+pclath+cstack]
   563  0781  2772               	fcall	_delay_100us
   564                           
   565                           ;delay.c: 42: delay_100us();
   566  0782  2772               	fcall	_delay_100us
   567                           
   568                           ;delay.c: 43: delay_100us();
   569  0783  2772               	fcall	_delay_100us
   570                           
   571                           ;delay.c: 44: delay_100us();
   572  0784  2772               	fcall	_delay_100us
   573                           
   574                           ;delay.c: 45: delay_100us();
   575  0785  2772               	fcall	_delay_100us
   576                           
   577                           ;delay.c: 46: delay_100us();
   578  0786  2772               	fcall	_delay_100us
   579                           
   580                           ;delay.c: 47: delay_100us();
   581  0787  2772               	fcall	_delay_100us
   582                           
   583                           ;delay.c: 48: delay_100us();
   584  0788  2772               	fcall	_delay_100us
   585                           
   586                           ;delay.c: 49: delay_100us();
   587  0789  2772               	fcall	_delay_100us
   588                           
   589                           ;delay.c: 50: delay_100us();
   590  078A  2F72               	ljmp	l1498
   591  078B                     __end_of_delay_1ms:	
   592                           
   593                           	psect	text4
   594  0772                     __ptext4:	
   595 ;; *************** function _delay_100us *****************
   596 ;; Defined at:
   597 ;;		line 32 in file "C:\SCMCU WorkSpace\delay.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;		None
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		status,2, status,0, pclath, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1
   611 ;;      Params:         0       0       0
   612 ;;      Locals:         0       0       0
   613 ;;      Temps:          0       0       0
   614 ;;      Totals:         0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; Hardware stack levels required when called:    3
   618 ;; This function calls:
   619 ;;		_delay_3us
   620 ;;		_delay_50us
   621 ;; This function is called by:
   622 ;;		_delay_1ms
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626                           
   627                           ;psect for function _delay_100us
   628  0772                     _delay_100us:	
   629  0772                     l1498:	
   630                           ;incstack = 0
   631                           ; Regs used in _delay_100us: [status,2+status,0+pclath+cstack]
   632                           
   633                           
   634                           ;delay.c: 34: delay_50us();
   635  0772  2775               	fcall	_delay_50us
   636                           
   637                           ;delay.c: 35: delay_50us();
   638  0773  2775               	fcall	_delay_50us
   639                           
   640                           ;delay.c: 36: delay_3us();
   641  0774  2F7A               	ljmp	l1492
   642  0775                     __end_of_delay_100us:	
   643                           
   644                           	psect	text5
   645  0775                     __ptext5:	
   646 ;; *************** function _delay_50us *****************
   647 ;; Defined at:
   648 ;;		line 24 in file "C:\SCMCU WorkSpace\delay.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		status,2, status,0, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1
   662 ;;      Params:         0       0       0
   663 ;;      Locals:         0       0       0
   664 ;;      Temps:          0       0       0
   665 ;;      Totals:         0       0       0
   666 ;;Total ram usage:        0 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    2
   669 ;; This function calls:
   670 ;;		_delay_10us
   671 ;; This function is called by:
   672 ;;		_delay_100us
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _delay_50us
   678  0775                     _delay_50us:	
   679                           
   680                           ;delay.c: 26: delay_10us();
   681                           
   682                           ;incstack = 0
   683                           ; Regs used in _delay_50us: [status,2+status,0+pclath+cstack]
   684  0775  276F               	fcall	_delay_10us
   685                           
   686                           ;delay.c: 27: delay_10us();
   687  0776  276F               	fcall	_delay_10us
   688                           
   689                           ;delay.c: 28: delay_10us();
   690  0777  276F               	fcall	_delay_10us
   691                           
   692                           ;delay.c: 29: delay_10us();
   693  0778  276F               	fcall	_delay_10us
   694                           
   695                           ;delay.c: 30: delay_10us();
   696  0779  2F6F               	ljmp	l1494
   697  077A                     __end_of_delay_50us:	
   698                           
   699                           	psect	text6
   700  076F                     __ptext6:	
   701 ;; *************** function _delay_10us *****************
   702 ;; Defined at:
   703 ;;		line 18 in file "C:\SCMCU WorkSpace\delay.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;                  1    wreg      void 
   710 ;; Registers used:
   711 ;;		status,2, status,0, pclath, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMMON   BANK0   BANK1
   717 ;;      Params:         0       0       0
   718 ;;      Locals:         0       0       0
   719 ;;      Temps:          0       0       0
   720 ;;      Totals:         0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    1
   724 ;; This function calls:
   725 ;;		_delay_3us
   726 ;; This function is called by:
   727 ;;		_delay_50us
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           
   732                           ;psect for function _delay_10us
   733  076F                     _delay_10us:	
   734  076F                     l1494:	
   735                           ;incstack = 0
   736                           ; Regs used in _delay_10us: [status,2+status,0+pclath+cstack]
   737                           
   738                           
   739                           ;delay.c: 20: delay_3us();
   740  076F  277A               	fcall	_delay_3us
   741                           
   742                           ;delay.c: 21: delay_3us();
   743  0770  277A               	fcall	_delay_3us
   744                           
   745                           ;delay.c: 22: delay_3us();
   746  0771  2F7A               	ljmp	l1492
   747  0772                     __end_of_delay_10us:	
   748                           
   749                           	psect	text7
   750  077A                     __ptext7:	
   751 ;; *************** function _delay_3us *****************
   752 ;; Defined at:
   753 ;;		line 8 in file "C:\SCMCU WorkSpace\delay.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		None
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1
   767 ;;      Params:         0       0       0
   768 ;;      Locals:         0       0       0
   769 ;;      Temps:          0       0       0
   770 ;;      Totals:         0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_delay_10us
   777 ;;		_delay_100us
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _delay_3us
   783  077A                     _delay_3us:	
   784  077A                     l1492:	
   785                           ;incstack = 0
   786                           ; Regs used in _delay_3us: []
   787                           
   788  077A  0000               	nop	;# 
   789  077B  0000               	nop	;# 
   790  077C  0000               	nop	;# 
   791  077D  0000               	nop	;# 
   792  077E  0000               	nop	;# 
   793  077F  0000               	nop	;# 
   794  0780  0008               	return
   795  0781                     __end_of_delay_3us:	
   796  007E                     btemp	set	126	;btemp
   797  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     252
                           _delay_ms
                           _setLedOn
 ---------------------------------------------------------------------------------
 (1) _setLedOn                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     237
                                              0 COMMON     2     0      2
                          _delay_1ms
 ---------------------------------------------------------------------------------
 (2) _delay_1ms                                            0     0      0       0
                        _delay_100us
 ---------------------------------------------------------------------------------
 (3) _delay_100us                                          0     0      0       0
                          _delay_3us
                         _delay_50us
 ---------------------------------------------------------------------------------
 (4) _delay_50us                                           0     0      0       0
                         _delay_10us
 ---------------------------------------------------------------------------------
 (5) _delay_10us                                           0     0      0       0
                          _delay_3us
 ---------------------------------------------------------------------------------
 (6) _delay_3us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
     _delay_1ms
       _delay_100us
         _delay_3us
         _delay_50us
           _delay_10us
             _delay_3us
   _setLedOn

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 01 13:20:08 2020

                      pc 0002                       PL2 07F0                       PL4 07F7  
                     PL6 07BD                       fsr 0004                      l542 07C4  
                    l544 07C9                      l545 07CD                      l546 07D2  
                    l547 07D7                     S1628 0001                     l1506 07E1  
                   l1492 077A                     l1572 0796                     l1494 076F  
                   l1574 078B                     l1498 0772                     l1588 07A8  
                   _WPUC 018F                     _main 0798                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTA 0005  
                  _PORTC 0007                    _TRISA 0085                    _TRISC 0087  
   __size_of_delay_100us 0003                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FE             __end_of_main 07BD  
                 ??_main 0072                   _INTCON 000B                   _OSCCON 008F  
       __end_of_delay_ms 0798         setLedOn@ledIndex 0070         __end_of_setLedOn 07F0  
__end_of__initialization 07FE           __pcstackCOMMON 0070       __size_of_delay_1ms 000A  
     __size_of_delay_3us 0007               __end_ofPL2 07F7               __end_ofPL4 07FE  
             __end_ofPL6 07C2               _delay_10us 076F               _delay_50us 0775  
             __pmaintext 0798                ?_delay_ms 0070        __end_of_delay_1ms 078B  
      __end_of_delay_3us 0781                ?_setLedOn 0070                  __ptext0 0000  
                __ptext1 07C2                  __ptext2 078B                  __ptext3 0781  
                __ptext4 0772                  __ptext5 0775                  __ptext6 076F  
                __ptext7 077A            ??_delay_100us 0070               ??_delay_ms 0072  
             delay_ms@ms 0070     end_of_initialization 07FE              ?_delay_10us 0070  
            ?_delay_50us 0070               ??_setLedOn 0070      __end_of_delay_100us 0775  
    __size_of_delay_10us 0003      __size_of_delay_50us 0005      start_initialization 07FE  
              ___latbits 0000              _delay_100us 0772        __size_of_delay_ms 000D  
              _delay_1ms 0781                _delay_3us 077A        __size_of_setLedOn 002E  
              __pswtext1 0001             ??_delay_10us 0070             ??_delay_50us 0070  
             ?_delay_1ms 0070               ?_delay_3us 0070       __end_of_delay_10us 0772  
     __end_of_delay_50us 077A                 _delay_ms 078B            __size_of_main 0025  
               _setLedOn 07C2              ??_delay_1ms 0070              ??_delay_3us 0070  
           ?_delay_100us 0070  
