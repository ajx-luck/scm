Version 3.2 HI-TECH Software Intermediate Code
[; ;scankey.h: 11: unsigned char key_read(unsigned char key_input);
[; ;scankey.h: 12: static unsigned char key_driver(unsigned char key_input);
[; ;scankey.h: 13: unsigned char getSimpleKeyInput(unsigned char key_input);
"3 C:\SCMCU WorkSpace\scankey.c
[v _getSimpleKeyInput `(uc ~T0 @X0 1 ef1`uc ]
"4
{
[; ;scankey.c: 3: unsigned char getSimpleKeyInput(unsigned char key_input)
[; ;scankey.c: 4: {
[e :U _getSimpleKeyInput ]
"3
[v _key_input `uc ~T0 @X0 1 r1 ]
"4
[f ]
"5
[v _result `uc ~T0 @X0 1 a ]
[; ;scankey.c: 5: unsigned char result = key_input & 0x04 == 0?0 : 1;
[e = _result -> ? != & -> _key_input `i -> == -> 4 `i -> 0 `i `i -> 0 `i : -> 0 `i -> 1 `i `uc ]
[; ;scankey.c: 6: return result;
"6
[e ) _result ]
[e $UE 1  ]
[; ;scankey.c: 7: }
"7
[e :UE 1 ]
}
"10
[v _key_driver `(uc ~T0 @X0 1 sf1`uc ]
"11
{
[; ;scankey.c: 10: static unsigned char key_driver(unsigned char key_input)
[; ;scankey.c: 11: {
[e :U _key_driver ]
"10
[v _key_input `uc ~T0 @X0 1 r1 ]
"11
[f ]
"12
[v F10 `uc ~T0 @X0 1 s key_state_buffer1 ]
[i F10
-> -> 0 `i `uc
]
"13
[v F11 `uc ~T0 @X0 1 s key_timer_cnt1 ]
[i F11
-> -> 0 `i `uc
]
"14
[v _key_return `uc ~T0 @X0 1 a ]
[; ;scankey.c: 12: static unsigned char key_state_buffer1 = 0;
[; ;scankey.c: 13: static unsigned char key_timer_cnt1 = 0;
[; ;scankey.c: 14: unsigned char key_return = 0;
[e = _key_return -> -> 0 `i `uc ]
"15
[v _key `uc ~T0 @X0 1 a ]
[; ;scankey.c: 15: unsigned char key;
[; ;scankey.c: 17: key = key_input;
"17
[e = _key _key_input ]
[; ;scankey.c: 19: switch(key_state_buffer1)
"19
[e $U 4  ]
[; ;scankey.c: 20: {
"20
{
[; ;scankey.c: 21: case 0:
"21
[e :U 5 ]
[; ;scankey.c: 22: if(key == 0)
"22
[e $ ! == -> _key `i -> 0 `i 6  ]
[; ;scankey.c: 23: {
"23
{
[; ;scankey.c: 24: key_state_buffer1 = 1;
"24
[e = F10 -> -> 1 `i `uc ]
"25
}
[e :U 6 ]
[; ;scankey.c: 25: }
[; ;scankey.c: 28: break;
"28
[e $U 3  ]
[; ;scankey.c: 30: case 1:
"30
[e :U 7 ]
[; ;scankey.c: 31: if(key == 0)
"31
[e $ ! == -> _key `i -> 0 `i 8  ]
[; ;scankey.c: 32: {
"32
{
[; ;scankey.c: 33: key_timer_cnt1 = 0;
"33
[e = F11 -> -> 0 `i `uc ]
[; ;scankey.c: 34: key_state_buffer1 = 2;
"34
[e = F10 -> -> 2 `i `uc ]
"38
}
[; ;scankey.c: 38: }
[e $U 9  ]
"39
[e :U 8 ]
[; ;scankey.c: 39: else
[; ;scankey.c: 40: {
"40
{
[; ;scankey.c: 41: key_state_buffer1 = 0;
"41
[e = F10 -> -> 0 `i `uc ]
"42
}
[e :U 9 ]
[; ;scankey.c: 42: }
[; ;scankey.c: 45: break;
"45
[e $U 3  ]
[; ;scankey.c: 47: case 2:
"47
[e :U 10 ]
[; ;scankey.c: 48: if(key == 1)
"48
[e $ ! == -> _key `i -> 1 `i 11  ]
[; ;scankey.c: 49: {
"49
{
[; ;scankey.c: 50: key_return = 1;
"50
[e = _key_return -> -> 1 `i `uc ]
[; ;scankey.c: 51: key_state_buffer1 = 0;
"51
[e = F10 -> -> 0 `i `uc ]
"52
}
[; ;scankey.c: 52: }
[e $U 12  ]
"53
[e :U 11 ]
[; ;scankey.c: 53: else if(++key_timer_cnt1 >= 100)
[e $ ! >= -> =+ F11 -> -> 1 `i `uc `i -> 100 `i 13  ]
[; ;scankey.c: 54: {
"54
{
[; ;scankey.c: 55: key_return = 3;
"55
[e = _key_return -> -> 3 `i `uc ]
[; ;scankey.c: 56: key_state_buffer1 = 3;
"56
[e = F10 -> -> 3 `i `uc ]
"58
}
[e :U 13 ]
"59
[e :U 12 ]
[; ;scankey.c: 58: }
[; ;scankey.c: 59: break;
[e $U 3  ]
[; ;scankey.c: 61: case 3:
"61
[e :U 14 ]
[; ;scankey.c: 62: if(key == 1)
"62
[e $ ! == -> _key `i -> 1 `i 15  ]
[; ;scankey.c: 63: {
"63
{
[; ;scankey.c: 64: key_state_buffer1 = 0;
"64
[e = F10 -> -> 0 `i `uc ]
"65
}
[e :U 15 ]
[; ;scankey.c: 65: }
[; ;scankey.c: 67: break;
"67
[e $U 3  ]
"68
}
[; ;scankey.c: 68: }
[e $U 3  ]
"19
[e :U 4 ]
[e [\ F10 , $ -> -> 0 `i `uc 5
 , $ -> -> 1 `i `uc 7
 , $ -> -> 2 `i `uc 10
 , $ -> -> 3 `i `uc 14
 3 ]
"68
[e :U 3 ]
[; ;scankey.c: 69: return key_return;
"69
[e ) _key_return ]
[e $UE 2  ]
[; ;scankey.c: 70: }
"70
[e :UE 2 ]
}
"77
[v _key_read `(uc ~T0 @X0 1 ef1`uc ]
"78
{
[; ;scankey.c: 77: unsigned char key_read(unsigned char key_input)
[; ;scankey.c: 78: {
[e :U _key_read ]
"77
[v _key_input `uc ~T0 @X0 1 r1 ]
"78
[f ]
"79
[v F15 `uc ~T0 @X0 1 s key_state_buffer2 ]
[i F15
-> -> 0 `i `uc
]
"80
[v F16 `uc ~T0 @X0 1 s key_timer_cnt2 ]
[i F16
-> -> 0 `i `uc
]
"81
[v _key_return `uc ~T0 @X0 1 a ]
[; ;scankey.c: 79: static unsigned char key_state_buffer2 = 0;
[; ;scankey.c: 80: static unsigned char key_timer_cnt2 = 0;
[; ;scankey.c: 81: unsigned char key_return = 0;
[e = _key_return -> -> 0 `i `uc ]
"82
[v _key `uc ~T0 @X0 1 a ]
[; ;scankey.c: 82: unsigned char key;
[; ;scankey.c: 84: key = key_driver(key_input);
"84
[e = _key ( _key_driver (1 _key_input ]
[; ;scankey.c: 86: switch(key_state_buffer2)
"86
[e $U 18  ]
[; ;scankey.c: 87: {
"87
{
[; ;scankey.c: 88: case 0:
"88
[e :U 19 ]
[; ;scankey.c: 89: if(key == 1)
"89
[e $ ! == -> _key `i -> 1 `i 20  ]
[; ;scankey.c: 90: {
"90
{
[; ;scankey.c: 91: key_timer_cnt2 = 0;
"91
[e = F16 -> -> 0 `i `uc ]
[; ;scankey.c: 92: key_state_buffer2 = 1;
"92
[e = F15 -> -> 1 `i `uc ]
"93
}
[; ;scankey.c: 93: }
[e $U 21  ]
"94
[e :U 20 ]
[; ;scankey.c: 94: else
[; ;scankey.c: 95: key_return = key;
"95
[e = _key_return _key ]
[e :U 21 ]
[; ;scankey.c: 96: break;
"96
[e $U 17  ]
[; ;scankey.c: 98: case 1:
"98
[e :U 22 ]
[; ;scankey.c: 99: if(key == 1)
"99
[e $ ! == -> _key `i -> 1 `i 23  ]
[; ;scankey.c: 100: {
"100
{
[; ;scankey.c: 101: key_return = 2;
"101
[e = _key_return -> -> 2 `i `uc ]
[; ;scankey.c: 102: key_state_buffer2 = 0;
"102
[e = F15 -> -> 0 `i `uc ]
"103
}
[; ;scankey.c: 103: }
[e $U 24  ]
"104
[e :U 23 ]
[; ;scankey.c: 104: else if(++key_timer_cnt2 >= 50)
[e $ ! >= -> =+ F16 -> -> 1 `i `uc `i -> 50 `i 25  ]
[; ;scankey.c: 105: {
"105
{
[; ;scankey.c: 109: key_return = 1;
"109
[e = _key_return -> -> 1 `i `uc ]
[; ;scankey.c: 110: key_state_buffer2 = 0;
"110
[e = F15 -> -> 0 `i `uc ]
"112
}
[e :U 25 ]
"113
[e :U 24 ]
[; ;scankey.c: 112: }
[; ;scankey.c: 113: break;
[e $U 17  ]
"114
}
[; ;scankey.c: 114: }
[e $U 17  ]
"86
[e :U 18 ]
[e [\ F15 , $ -> -> 0 `i `uc 19
 , $ -> -> 1 `i `uc 22
 17 ]
"114
[e :U 17 ]
[; ;scankey.c: 116: return key_return;
"116
[e ) _key_return ]
[e $UE 16  ]
[; ;scankey.c: 117: }
"117
[e :UE 16 ]
}
