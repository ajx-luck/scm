---- Z:\应用开发\Demo程序汇总\CMS89F5118_5139程序\External_Int_Demo\INT_Interrupt_Demo.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                
3:                程序名称：INT外部中断程序
4:                日期版本：2018/6/15 <V1.1>
5:                
6:                备注：
7:                
8:                *本程序由 中微半导体有限公司 &应用支持部& 编写整理
9:                *公司网址 www.mcu.com.cn
10:               *技术支持QQ 3001082102  罗工
11:                           3001085706	陈工
12:               -------------------------------------------*/
13:               
14:               #include <cms.h>
15:               
16:               
17:               void main()
  0023    0000    NOP
  0024    0064    CLRWDT
18:               {
19:               	asm("nop");
20:               	asm("clrwdt");
21:               	
22:               	OSCCON = 0x71;			//8MHZ,内部振荡器用作系统时钟
  0025    3071    LDIA	0x71
  0026    1683    SETB	0x3,5
  0027    1303    CLRB	0x3,6
  0028    008F    LD	0xF,A
23:               	OPTION_REG = 0;
  0029    0181    CLR	0x1
24:               
25:               //---------------------------------------	
26:               	INTEDG = 0;				//INT引脚下降沿触发
  002A    1301    CLRB	0x1,6
27:               	INTCON = 0x90;			//允许所有未被屏蔽的中断、禁止外设中断，使能INT外部中断
  002B    3090    LDIA	0x90
  002C    008B    LD	0xB,A
28:               //---------------------------------------		
29:               
30:               	while(1)			
  002D    0064    CLRWDT
  002E    282D    JP	0x2D
31:               	{
32:               		asm("clrwdt");
33:               	}
34:               }
35:               
36:               
37:               /***********************************************
38:               函数名称：INT_Isr
39:               函数功能：INT中断服务
40:               入口参数：无
41:               出口参数：无
42:               备注：
43:               ************************************************/
44:               void interrupt INT_Isr()
45:               {
46:               	if(INTF)
  0016    188B    SZB	0xB,1
47:               	{
48:               		INTF = 0;			//清中断标志
  0017    108B    CLRB	0xB,1
  0018    0873    LD	A,0x73
  0019    00FF    LD	0x7F,A
  001A    0872    LD	A,0x72
  001B    008A    LD	0xA,A
  001C    0871    LD	A,0x71
  001D    0084    LD	0x4,A
  001E    0E70    SWAPA	0x70
  001F    0083    LD	0x3,A
  0020    0EFE    SWAPR	0x7E
  0021    0E7E    SWAPA	0x7E
  0022    0009    RETI
49:               		
50:               	}
51:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    2811    JP	0x11
  0011    118A    CLRB	0xA,3
  0012    2813    JP	0x13
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    0804    LD	A,0x4
  0008    00F1    LD	0x71,A
  0009    080A    LD	A,0xA
  000A    00F2    LD	0x72,A
  000B    1283    CLRB	0x3,5
  000C    1303    CLRB	0x3,6
  000D    087F    LD	A,0x7F
  000E    00F3    LD	0x73,A
  000F    118A    CLRB	0xA,3
  0010    2816    JP	0x16
---- common_function ------------------------------------------------------------------
  0013    0183    CLR	0x3
  0014    118A    CLRB	0xA,3
  0015    2823    JP	0x23
