---- C:\Users\edwar\Desktop\CMS79F5118_5139程序\IO_Demo\IO.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                
3:                程序名称：IO设置示例程序
4:                日期版本：2019/12/27 <V1.1>
5:                
6:                备注：RA0做上拉输入,RA1做输入口, RB口全做输出，其余口全为输出
7:                      RA2根据RA1状态输出，为高：输出高，为低：输出低
8:                      RB口根据RA0口状态，为高：高低50%占空比输出 为低：输出低
9:                
10:               *本程序由 中微半导体有限公司 &应用支持部& 编写整理
11:               *公司网址 www.mcu.com.cn
12:               *技术支持QQ 3001082102  罗工
13:                           3001085706	陈工
14:               -------------------------------------------*/
15:               
16:               #include <cms.h>					//芯片头文件，会根据工程选项自动寻找对应型号头文件
17:               
18:               
19:               #define		Pout	RA2				//定义RA2口 取名Pout
20:               #define 	Pin0	RA0				//定义RA0口 取名Pin0
21:               #define 	Pin1	RA1				//定义RA1口 取名Pin1
22:               
23:               
24:               void main(void)
  07DF    0000    NOP
  07E0    0064    CLRWDT
25:               {
26:               	asm("nop");
27:               	asm("clrwdt");
28:               	
29:               	OPTION_REG =0;					//预分频给TMR0  
  07E1    1683    SETB	0x3,5
  07E2    1303    CLRB	0x3,6
  07E3    0181    CLR	0x1
30:               	OSCCON = 0X71;					//内部振荡器8M
  07E4    3071    LDIA	0x71
  07E5    008F    LD	0xF,A
31:               	
32:               	WPUA = 0B00000001;				//配置上拉情况
  07E6    3001    LDIA	0x1
  07E7    1703    SETB	0x3,6
  07E8    008E    LD	0xE,A
33:               	WPUB = 0B00000000;
  07E9    1303    CLRB	0x3,6
  07EA    0195    CLR	0x15
34:               	
35:               	TRISA = 0B00000011;				//配置IO状态
  07EB    3003    LDIA	0x3
  07EC    0085    LD	0x5,A
36:               	TRISB = 0B00000000;
  07ED    0186    CLR	0x6
37:               	
38:               	while(1)
  07EE    0064    CLRWDT
39:               	{
40:               		asm("clrwdt");
41:               		
42:               		if(Pin0)
  07EF    1283    CLRB	0x3,5
  07F0    1303    CLRB	0x3,6
  07F1    1C05    SNZB	0x5,0
  07F2    2FF6    JP	0x7F6
43:               			PORTB ^= 0xff;
  07F3    30FF    LDIA	0xFF
  07F4    0686    XORR	0x6
  07F5    2FF7    JP	0x7F7
44:               		else
45:               			PORTB =0;
  07F6    0186    CLR	0x6
46:               			
47:               		if(Pin1)
  07F7    1C85    SNZB	0x5,1
  07F8    2FFB    JP	0x7FB
48:               			Pout =1;
  07F9    1505    SETB	0x5,2
  07FA    2FEE    JP	0x7EE
49:               		else
50:               			Pout =0;			
  07FB    1105    CLRB	0x5,2
  07FC    2FEE    JP	0x7EE
51:               	}
52:               }
53:               
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    2FFD    JP	0x7FD
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
---- common_function ------------------------------------------------------------------
  07FD    0183    CLR	0x3
  07FE    118A    CLRB	0xA,3
  07FF    2FDF    JP	0x7DF
