Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

-W-9 \
  --edf=C:\Edward_work_FILE\work_file\开发文件\中微开发工具\CMS_IDE_V2.03.18_Beta3\data\dat\en_msgs.txt \
  -cs -h+UART.sym --cmf=UART.cmf -z -Q79F5139 \
  -oC:\Users\edwar\AppData\Local\Temp\s5g0.2 -MUART.map -E1 -ver=XC8 \
  -ASTACK=0198h-01efh -pstack=STACK -ACODE=00h-07FFhx2 -ASTRCODE=00h-0FFFh \
  -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 -AENTRY=00h-0FFhx16 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0120h-016Fh -ABANK3=0198h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh,0198h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh,0198h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-011Fh -ASFR3=0180h-0197h \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k startup.obj UART.obj 

Object code version is 3.11

Machine type is 79F5139



                Name                               Link     Load   Length Selector   Space Scale
startup.obj     end_init                              D        D        2        8       0
                reset_vec                             0        0        2        0       0
UART.obj        cinit                                 F        F        D        8       0
                intentry                              4        4        9        8       0
                text2                                4C       4C       1F        8       0
                text1                                6B       6B       13        8       0
                maintext                             1C       1C       30        8       0
                cstackCOMMON                         7A       7A        3       70       1
                bssCOMMON                            70       70        A       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              D        D        2         0
                cinit                                 F        F        D         0
                intentry                              4        4        9         0
                reset_vec                             0        0        2         0
                text2                                4C       4C       1F         0
                text1                                6B       6B       13         0
                maintext                             1C       1C       30         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         7A       7A        3         1
                bssCOMMON                            70       70        A         1

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  00007A  00007E         8       0  CODE        2
                bssCOMMON                      000070  00000D  00007D        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            020-06F            50           1
        BANK1            0A0-0EF            50           1
        BANK2            120-16F            50           1
        BANK3            198-1EF            58           1
        CODE             002-003             2           2
                         07E-FFF           782
        COMMON           07D-07D             1           1
        CONFIG           2007-2008             2           2
        CONST            002-003             2           2
                         07E-FFF           100
        ENTRY            002-003             2           2
                         07E-FFF           100
        IDLOC            2000-2003             4           2
        RAM              020-06F            50           1
                         0A0-0EF            50
                         120-16F            50
                         198-1EF            58
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        SFR2             100-11F            20           1
        SFR3             180-197            18           1
        STACK            198-1EF            58           1
        STRCODE          002-003             2           2
                         07E-FFF           F82
        STRING           002-003             2           2
                         07E-FFF           100

                                  Symbol Table

_CREN                     (abs)        0C4
_FERR                     (abs)        0C2
_INTCON                   (abs)        00B
_OERR                     (abs)        0C1
_OSCCON                   (abs)        08F
_PIE1                     (abs)        08C
_PIE2                     (abs)        08D
_PIR1                     (abs)        00C
_PIR2                     (abs)        00D
_PORTA                    (abs)        005
_RCIE                     (abs)        465
_RCIF                     (abs)        065
_RCREG                    (abs)        01A
_RX9EN                    (abs)        0C6
_Recebuffer               bssCOMMON    074
_SCKP                     (abs)        4C3
_SPBRG                    (abs)        099
_SPEN                     (abs)        0C7
_SYNC                     (abs)        4C4
_Sendbuffer               bssCOMMON    070
_Set_Usart_Async          text1        06B
_TRISA                    (abs)        085
_TRMT                     (abs)        4C1
_TX9EN                    (abs)        4C6
_TXEN                     (abs)        4C5
_TXIE                     (abs)        464
_TXREG                    (abs)        019
_Usart_Isr                text2        04C
__Habs1                   abs1         000
__Hbank0                  bank0        000
__Hbank1                  bank1        000
__Hbank2                  bank2        000
__Hbank3                  bank3        000
__HbssCOMMON              bssCOMMON    000
__Hcinit                  cinit        01C
__Hclrtext                clrtext      000
__Hcode                   code         000
__Hcommon                 common       000
__Hconfig                 config       000
__HcstackCOMMON           cstackCOMMON 000
__Heeprom_data            eeprom_data  000
__Hend_init               end_init     00F
__Hfunctab                functab      000
__Hidloc                  idloc        000
__Hinit                   init         00D
__Hintentry               intentry     00D
__Hmaintext               maintext     000
__Hpa_nodes0              pa_nodes0    000
__Hpowerup                powerup      000
__Hram                    ram          000
__Hreset_vec              reset_vec    002
__Hsfr0                   sfr0         000
__Hsfr1                   sfr1         000
__Hsfr2                   sfr2         000
__Hsfr3                   sfr3         000
__Hspace_0                (abs)        07E
__Hspace_1                (abs)        07D
__Hspace_2                (abs)        000
__Hspace_3                (abs)        000
__Hstack                  stack        000
__Hstrings                strings      000
__Htext                   text         000
__Labs1                   abs1         000
__Lbank0                  bank0        000
__Lbank1                  bank1        000
__Lbank2                  bank2        000
__Lbank3                  bank3        000
__LbssCOMMON              bssCOMMON    000
__Lcinit                  cinit        00F
__Lclrtext                clrtext      000
__Lcode                   code         000
__Lcommon                 common       000
__Lconfig                 config       000
__LcstackCOMMON           cstackCOMMON 000
__Leeprom_data            eeprom_data  000
__Lend_init               end_init     00D
__Lfunctab                functab      000
__Lidloc                  idloc        000
__Linit                   init         00D
__Lintentry               intentry     004
__Lmaintext               maintext     000
__Lpa_nodes0              pa_nodes0    000
__Lpowerup                powerup      000
__Lram                    ram          000
__Lreset_vec              reset_vec    000
__Lsfr0                   sfr0         000
__Lsfr1                   sfr1         000
__Lsfr2                   sfr2         000
__Lsfr3                   sfr3         000
__Lspace_0                (abs)        000
__Lspace_1                (abs)        000
__Lspace_2                (abs)        000
__Lspace_3                (abs)        000
__Lstack                  stack        000
__Lstrings                strings      000
__Ltext                   text         000
__S0                      (abs)        07E
__S1                      (abs)        07D
__S2                      (abs)        000
___int_sp                 stack        000
___latbits                (abs)        001
___sp                     stack        000
__end_of_Set_Usart_Async  text1        07E
__end_of_Usart_Isr        text2        06B
__end_of__initialization  cinit        019
__end_of_main             maintext     04C
__initialization          cinit        00F
__pbssCOMMON              bssCOMMON    070
__pcstackCOMMON           cstackCOMMON 07A
__pintentry               intentry     004
__pmaintext               maintext     01C
__ptext0                  text0        000
__ptext1                  text1        06B
__ptext2                  text2        04C
__size_of_Set_Usart_Async (abs)        000
__size_of_Usart_Isr       (abs)        000
__size_of_main            (abs)        000
_main                     maintext     01C
_rececount                bssCOMMON    078
_sendcount                bssCOMMON    079
btemp                     (abs)        07E
end_of_initialization     cinit        019
interrupt_function        intentry     004
intlevel0                 functab      000
intlevel1                 functab      000
intlevel2                 functab      000
intlevel3                 functab      000
intlevel4                 functab      000
intlevel5                 functab      000
reset_vec                 reset_vec    000
saved_w                   (abs)        07E
stackhi                   (abs)        000
stacklo                   (abs)        000
start                     init         00D
start_initialization      cinit        00F
wtemp0                    (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 36 in file "C:\Users\edwar\Desktop\CMS79F5118_5139程序\Usart_Demo\Async_Usart_Demo.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    2
 This function calls:
		_Set_Usart_Async
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Set_Usart_Async *****************
 Defined at:
		line 134 in file "C:\Users\edwar\Desktop\CMS79F5118_5139程序\Usart_Demo\Async_Usart_Demo.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Usart_Isr *****************
 Defined at:
		line 86 in file "C:\Users\edwar\Desktop\CMS79F5118_5139程序\Usart_Demo\Async_Usart_Demo.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Users\edwar\Desktop\CMS79F5118_5139程序\Usart_Demo\Async_Usart_Demo.c
		_Usart_Isr     		CODE           	004C	0000	32
		_main          		CODE           	001C	0000	49
		_Set_Usart_Async		CODE           	006B	0000	20

C:\Users\edwar\Desktop\CMS79F5118_5139程序\Usart_Demo\Async_Usart_Demo.c estimated size: 101

shared
		__initialization		CODE           	000F	0000	11

shared estimated size: 11

