---- C:\mcuproject\scm\CMS79F5118_5139程序\PWM_Demo\PWM.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                
3:                程序名称：PWM模式程序
4:                日期版本：2019/12/27 <V1.0>
5:                
6:                备注：
7:                
8:                *本程序由 中微半导体有限公司 &应用支持部& 编写整理
9:                *公司网址 www.mcu.com.cn
10:               *技术支持QQ 3001082102  罗工
11:                           3001085706	陈工
12:               -------------------------------------------*/
13:               
14:               
15:               
16:               
17:               #include <cms.h>
18:               
19:               
20:               void Set_CCP_PWM();
21:               
22:               
23:               void main()
  07CF    0000    NOP
  07D0    0064    CLRWDT
24:               {
25:               	asm("nop");
26:               	asm("clrwdt");
27:               	
28:               	OSCCON = 0X70;				//8M内部时钟
  07D1    3070    LDIA	0x70
  07D2    1683    SETB	0x3,5
  07D3    1303    CLRB	0x3,6
  07D4    008F    LD	0xF,A
29:               	
30:               	TRISA = 0;					//配置PWM引脚为输出脚
  07D5    0185    CLR	0x5
31:               	
32:               	Set_CCP_PWM();				//设置PWM周期100us，占空比PWM0-20%、PWM1-40%、PWM2-60%、PWM3-80%、PWM4-50%
  07D6    118A    CLRB	0xA,3
  07D7    27DB    CALL	0x7DB
  07D8    118A    CLRB	0xA,3
33:               	
34:               	while(1)
  07D9    0064    CLRWDT
  07DA    2FD9    JP	0x7D9
35:               	{
36:               		asm("clrwdt");
37:               	}
38:               }
39:               
40:               /***********************************************
41:               函数名称：Set_CCP_PWM
42:               函数功能：CCP PWM模式初始化
43:               入口参数：无
44:               出口参数：无
45:               备注：	//PWM周期 = [PWMTH<1:0>:PWMTL + 1]*Tosc*(CLKDIV分频)
46:               		//脉冲宽度 = (PWMDx[9:0]+1)*TOSC*(CLKDIV分频值)
47:               		//占空比 = (PWMDx[9:0]+1)/(PWMT[9:0]+1)
48:               ************************************************/
49:               void Set_CCP_PWM()
50:               {
51:               	PWMTL = 0x8f;
  07DB    308F    LDIA	0x8F
  07DC    1703    SETB	0x3,6
  07DD    008F    LD	0xF,A
52:               	PWMTH = 0x05;					//周期T = 400*(1/8)us*2 = 100us
  07DE    3005    LDIA	0x5
  07DF    0090    LD	0x10,A
53:               	PWMT4L = 0x8f;
  07E0    308F    LDIA	0x8F
  07E1    0091    LD	0x11,A
54:               	
55:               	//PWM0 占空比设置为20%
56:               	PWMD0L = 0x4f;					//(79+1)/(399+1) = 20%
  07E2    304F    LDIA	0x4F
  07E3    0093    LD	0x13,A
57:               	//PWM1 占空比设置为40%
58:               	PWMD1L = 0x9f;					//(159+1)/(399+1) = 40%
  07E4    309F    LDIA	0x9F
  07E5    0094    LD	0x14,A
59:               	PWMD01H = 0x00;
  07E6    1283    CLRB	0x3,5
  07E7    019C    CLR	0x1C
60:               	//PWM2 占空比设置为60%
61:               	PWMD2L = 0xef;					//(239+1)/(399+1) = 60%
  07E8    30EF    LDIA	0xEF
  07E9    1683    SETB	0x3,5
  07EA    0095    LD	0x15,A
62:               	//PWM3 占空比设置为80%
63:               	PWMD3L = 0x3f;					//(319+1)/(399+1) = 80%
  07EB    303F    LDIA	0x3F
  07EC    0096    LD	0x16,A
64:               	PWMD23H = 0x10;
  07ED    3010    LDIA	0x10
  07EE    1283    CLRB	0x3,5
  07EF    009D    LD	0x1D,A
65:               	//PWM4 占空比设置为50%
66:               	PWMD4L = 0xc7;					//(199+1)/(399+1) = 50%
  07F0    30C7    LDIA	0xC7
  07F1    1683    SETB	0x3,5
  07F2    0097    LD	0x17,A
67:               	
68:               	
69:               	PWM01DT = 0;
  07F3    1303    CLRB	0x3,6
  07F4    0193    CLR	0x13
70:               	PWM23DT = 0;
  07F5    0194    CLR	0x14
71:               	
72:               	PWMCON2 = 0B00000000;			//正常输出
  07F6    1283    CLRB	0x3,5
  07F7    1703    SETB	0x3,6
  07F8    0189    CLR	0x9
73:               	PWMCON1 = 0B00000000;			//禁止死区
  07F9    0188    CLR	0x8
74:               	PWMCON0 = 0B00111111;			//PWM分频Fosc/2，使能PWM0、PWM1、PWM2、PWM3、PWM4
  07FA    303F    LDIA	0x3F
  07FB    0087    LD	0x7,A
  07FC    0008    RET
75:               
76:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    2FFD    JP	0x7FD
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
---- common_function ------------------------------------------------------------------
  07FD    0183    CLR	0x3
  07FE    118A    CLRB	0xA,3
  07FF    2FCF    JP	0x7CF
