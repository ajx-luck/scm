

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 07 15:56:58 2023

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	79F5139
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	pa_nodes0,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.45
    13                           ; Generated 16/11/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     
    47                           	psect	text0
    48  0000                     __ptext0:	
    49  0094                     _PWM23DT	set	148
    50  0093                     _PWM01DT	set	147
    51  008F                     _OSCCON	set	143
    52  0085                     _TRISA	set	133
    53  011D                     _PWMD23H	set	285
    54  011C                     _PWMD01H	set	284
    55  0109                     _PWMCON2	set	265
    56  0108                     _PWMCON1	set	264
    57  0107                     _PWMCON0	set	263
    58  0197                     _PWMD4L	set	407
    59  0196                     _PWMD3L	set	406
    60  0195                     _PWMD2L	set	405
    61  0194                     _PWMD1L	set	404
    62  0193                     _PWMD0L	set	403
    63  0191                     _PWMT4L	set	401
    64  0190                     _PWMTH	set	400
    65  018F                     _PWMTL	set	399
    66                           
    67                           	psect	cinit
    68  07FD                     start_initialization:	
    69                           ; #config settings
    70                           
    71  07FD                     __initialization:	
    72  07FD                     end_of_initialization:	
    73                           ;End of C runtime variable initialization code
    74                           
    75  07FD                     __end_of__initialization:	
    76  07FD  0183               	clrf	3
    77  07FE  118A  2FCF         	ljmp	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMMON
    80  0000                     __pcstackCOMMON:	
    81  0000                     ?_Set_CCP_PWM:	
    82  0000                     ??_Set_CCP_PWM:	
    83                           ; 1 bytes @ 0x0
    84                           
    85  0000                     ?_main:	
    86                           ; 1 bytes @ 0x0
    87                           
    88  0000                     ??_main:	
    89                           ; 1 bytes @ 0x0
    90                           
    91                           
    92                           	psect	maintext
    93  07CF                     __pmaintext:	
    94                           ; 1 bytes @ 0x0
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 23 in file "C:\mcuproject\scm\CMS79F5118_5139³ÌÐò\PWM_Demo\PWM.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2, status,0, pclath, cstack
   109 ;; Tracked objects:
   110 ;;		On entry : B00/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   114 ;;      Params:         0       0       0       0       0
   115 ;;      Locals:         0       0       0       0       0
   116 ;;      Temps:          0       0       0       0       0
   117 ;;      Totals:         0       0       0       0       0
   118 ;;Total ram usage:        0 bytes
   119 ;; Hardware stack levels required when called:    1
   120 ;; This function calls:
   121 ;;		_Set_CCP_PWM
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           
   128                           ;psect for function _main
   129  07CF                     _main:	
   130                           
   131                           ;incstack = 0
   132                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   133  07CF  0000               	nop	;# 
   134  07D0  0064               	clrwdt	;# 
   135                           
   136                           ;PWM.c: 28: OSCCON = 0X70;
   137  07D1  3070               	movlw	112
   138  07D2  1683               	bsf	3,5	;RP0=1, select bank1
   139  07D3  1303               	bcf	3,6	;RP1=0, select bank1
   140  07D4  008F               	movwf	15	;volatile
   141                           
   142                           ;PWM.c: 30: TRISA = 0;
   143  07D5  0185               	clrf	5	;volatile
   144                           
   145                           ;PWM.c: 32: Set_CCP_PWM();
   146  07D6  118A  27DB  118A   	fcall	_Set_CCP_PWM
   147  07D9                     l737:	
   148                           ;PWM.c: 34: while(1)
   149                           
   150  07D9  0064               	clrwdt	;# 
   151  07DA  2FD9               	goto	l737
   152  07DB                     __end_of_main:	
   153                           
   154                           	psect	text1
   155  07DB                     __ptext1:	
   156 ;; *************** function _Set_CCP_PWM *****************
   157 ;; Defined at:
   158 ;;		line 49 in file "C:\mcuproject\scm\CMS79F5118_5139³ÌÐò\PWM_Demo\PWM.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;		None
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		wreg, status,2
   167 ;; Tracked objects:
   168 ;;		On entry : 300/100
   169 ;;		On exit  : 300/200
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   172 ;;      Params:         0       0       0       0       0
   173 ;;      Locals:         0       0       0       0       0
   174 ;;      Temps:          0       0       0       0       0
   175 ;;      Totals:         0       0       0       0       0
   176 ;;Total ram usage:        0 bytes
   177 ;; Hardware stack levels used:    1
   178 ;; This function calls:
   179 ;;		Nothing
   180 ;; This function is called by:
   181 ;;		_main
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           
   186                           ;psect for function _Set_CCP_PWM
   187  07DB                     _Set_CCP_PWM:	
   188                           
   189                           ;PWM.c: 51: PWMTL = 0x8f;
   190                           
   191                           ;incstack = 0
   192                           ; Regs used in _Set_CCP_PWM: [wreg+status,2]
   193  07DB  308F               	movlw	143
   194  07DC  1703               	bsf	3,6	;RP1=1, select bank3
   195  07DD  008F               	movwf	15	;volatile
   196                           
   197                           ;PWM.c: 52: PWMTH = 0x05;
   198  07DE  3005               	movlw	5
   199  07DF  0090               	movwf	16	;volatile
   200                           
   201                           ;PWM.c: 53: PWMT4L = 0x8f;
   202  07E0  308F               	movlw	143
   203  07E1  0091               	movwf	17	;volatile
   204                           
   205                           ;PWM.c: 56: PWMD0L = 0x4f;
   206  07E2  304F               	movlw	79
   207  07E3  0093               	movwf	19	;volatile
   208                           
   209                           ;PWM.c: 58: PWMD1L = 0x9f;
   210  07E4  309F               	movlw	159
   211  07E5  0094               	movwf	20	;volatile
   212                           
   213                           ;PWM.c: 59: PWMD01H = 0x00;
   214  07E6  1283               	bcf	3,5	;RP0=0, select bank2
   215  07E7  019C               	clrf	28	;volatile
   216                           
   217                           ;PWM.c: 61: PWMD2L = 0xef;
   218  07E8  30EF               	movlw	239
   219  07E9  1683               	bsf	3,5	;RP0=1, select bank3
   220  07EA  0095               	movwf	21	;volatile
   221                           
   222                           ;PWM.c: 63: PWMD3L = 0x3f;
   223  07EB  303F               	movlw	63
   224  07EC  0096               	movwf	22	;volatile
   225                           
   226                           ;PWM.c: 64: PWMD23H = 0x10;
   227  07ED  3010               	movlw	16
   228  07EE  1283               	bcf	3,5	;RP0=0, select bank2
   229  07EF  009D               	movwf	29	;volatile
   230                           
   231                           ;PWM.c: 66: PWMD4L = 0xc7;
   232  07F0  30C7               	movlw	199
   233  07F1  1683               	bsf	3,5	;RP0=1, select bank3
   234  07F2  0097               	movwf	23	;volatile
   235                           
   236                           ;PWM.c: 69: PWM01DT = 0;
   237  07F3  1303               	bcf	3,6	;RP1=0, select bank1
   238  07F4  0193               	clrf	19	;volatile
   239                           
   240                           ;PWM.c: 70: PWM23DT = 0;
   241  07F5  0194               	clrf	20	;volatile
   242                           
   243                           ;PWM.c: 72: PWMCON2 = 0B00000000;
   244  07F6  1283               	bcf	3,5	;RP0=0, select bank2
   245  07F7  1703               	bsf	3,6	;RP1=1, select bank2
   246  07F8  0189               	clrf	9	;volatile
   247                           
   248                           ;PWM.c: 73: PWMCON1 = 0B00000000;
   249  07F9  0188               	clrf	8	;volatile
   250                           
   251                           ;PWM.c: 74: PWMCON0 = 0B00111111;
   252  07FA  303F               	movlw	63
   253  07FB  0087               	movwf	7	;volatile
   254  07FC  0008               	return
   255  07FD                     __end_of_Set_CCP_PWM:	
   256  007E                     btemp	set	126	;btemp
   257  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       0
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            88      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Set_CCP_PWM
 ---------------------------------------------------------------------------------
 (1) _Set_CCP_PWM                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Set_CCP_PWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            58      0       0       8        0.0%
BANK3               58      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%
BANK2               50      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 07 15:56:58 2023

                    l737 07D9                     _main 07CF                     btemp 007E  
                   start 0000                    ?_main 0000                    _TRISA 0085  
                  _PWMTH 0190                    _PWMTL 018F            ??_Set_CCP_PWM 0000  
                  status 0003                    wtemp0 007E          __initialization 07FD  
           __end_of_main 07DB                   ??_main 0000                   _OSCCON 008F  
                 _PWMD0L 0193                   _PWMD1L 0194                   _PWMD2L 0195  
                 _PWMD3L 0196                   _PWMD4L 0197                   _PWMT4L 0191  
    __end_of_Set_CCP_PWM 07FD  __end_of__initialization 07FD           __pcstackCOMMON 0000  
            _Set_CCP_PWM 07DB               __pmaintext 07CF                  _PWM01DT 0093  
                _PWM23DT 0094                  _PWMD01H 011C                  _PWMD23H 011D  
                _PWMCON0 0107                  _PWMCON1 0108                  _PWMCON2 0109  
                __ptext0 0000                  __ptext1 07DB     end_of_initialization 07FD  
    start_initialization 07FD             ?_Set_CCP_PWM 0000                ___latbits 0001  
   __size_of_Set_CCP_PWM 0022            __size_of_main 000C  
