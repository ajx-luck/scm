

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 14 18:31:53 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1711C
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	swtext1,local,class=CONST,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	pa_nodes0,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMMON
    80  0000                     __pidataCOMMON:	
    81  001F                     _ADCON0	set	31
    82  001E                     _ADRESH	set	30
    83  0017                     _CCP1CON	set	23
    84  0015                     _CCPR1L	set	21
    85  0012                     _T2CON	set	18
    86  000B                     _INTCON	set	11
    87  0007                     _PORTC	set	7
    88  0006                     _PORTB	set	6
    89  0005                     _PORTA	set	5
    90  0001                     _TMR0	set	1
    91  00F9                     _GODONE	set	249
    92  0061                     _TMR2IF	set	97
    93  005F                     _GIE	set	95
    94  005B                     _RBIE	set	91
    95  005A                     _T0IF	set	90
    96  0058                     _RBIF	set	88
    97  001C                     _TO	set	28
    98  009F                     _ADCON1	set	159
    99  009E                     _ADRESL	set	158
   100  0096                     _IOCB	set	150
   101  0095                     _WPUB	set	149
   102  0092                     _PR2	set	146
   103  008F                     _OSCCON	set	143
   104  0087                     _TRISC	set	135
   105  0086                     _TRISB	set	134
   106  0085                     _TRISA	set	133
   107  0081                     _OPTION_REG	set	129
   108  018F                     _WPUC	set	399
   109  018E                     _WPUA	set	398
   110                           
   111                           	psect	cinit
   112  000D                     start_initialization:	
   113                           ; #config settings
   114                           
   115  000D                     __initialization:	
   116                           
   117                           ;initializer for _FAN_STATUS
   118  000D  3001               	movlw	1
   119  000E  00F8               	movwf	__pdataCOMMON& (0+127)
   120                           
   121                           ;initializer for _currentLevel
   122  000F  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   123  0010  3020               	movlw	low __pbssBANK0
   124                           
   125                           ; Clear objects allocated to BANK0
   126  0011  1383               	bcf	3,7	;select IRP bank0
   127  0012  0084               	movwf	4
   128  0013  3036               	movlw	low (__pbssBANK0+22)
   129  0014  22D5               	fcall	clear_ram0
   130                           
   131                           ; Clear objects allocated to COMMON
   132  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   133  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   134  0017                     end_of_initialization:	
   135                           ;End of C runtime variable initialization code
   136                           
   137  0017                     __end_of__initialization:	
   138  0017  0183               	clrf	3
   139  0018  29C6               	ljmp	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMMON
   142  0076                     __pbssCOMMON:	
   143  0076                     _lowVTime:	
   144  0076                     	ds	1
   145  0077                     _time0Flag:	
   146  0077                     	ds	1
   147                           
   148                           	psect	dataCOMMON
   149  0078                     __pdataCOMMON:	
   150  0078                     _FAN_STATUS:	
   151  0078                     	ds	1
   152  0079                     _currentLevel:	
   153  0079                     	ds	1
   154                           
   155                           	psect	bssBANK0
   156  0020                     __pbssBANK0:	
   157  0020                     ADC_Sample@adsum:	
   158  0020                     	ds	4
   159  0024                     ADC_Sample@admax:	
   160  0024                     	ds	2
   161  0026                     ADC_Sample@admin:	
   162  0026                     	ds	2
   163  0028                     _count10Ms:	
   164  0028                     	ds	2
   165  002A                     _countTime:	
   166  002A                     	ds	2
   167  002C                     _adresult:	
   168  002C                     	ds	2
   169  002E                     ADC_Sample@adtimes:	
   170  002E                     	ds	1
   171  002F                     _key1:	
   172  002F                     	ds	7
   173                           
   174                           	psect	clrtext
   175  02D5                     clear_ram0:	
   176                           ;	Called with FSR containing the base address, and
   177                           ;	W with the last address+1
   178                           
   179  02D5  0064               	clrwdt	;clear the watchdog before getting into this loop
   180  02D6                     clrloop0:	
   181  02D6  0180               	clrf	0	;clear RAM location pointed to by FSR
   182  02D7  0A84               	incf	4,f	;increment pointer
   183  02D8  0604               	xorwf	4,w	;XOR with final address
   184  02D9  1903               	btfsc	3,2	;have we reached the end yet?
   185  02DA  3400               	retlw	0	;all done for this memory range, return
   186  02DB  0604               	xorwf	4,w	;XOR again to restore value
   187  02DC  2AD6               	goto	clrloop0	;do the next byte
   188                           
   189                           	psect	cstackCOMMON
   190  0070                     __pcstackCOMMON:	
   191  0070                     ?_closeFan:	
   192  0070                     ?_Sleep_Mode:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ?_sacnKeyInput:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0070                     ?_key_driver:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_Init_Config:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_resetKey:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_Init_System:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_Init_GPIO:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_Init_Interupt:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_checkUsbStatus:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_Init_PWM:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_setFanLevel:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_checkFan:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_scanKeys:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_checkKeys:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_main:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_Timer0_Isr:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_ADC_Sample:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_DelayXms:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?i1_Init_System:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ??i1_Init_System:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?i1_Init_GPIO:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??i1_Init_GPIO:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?i1_Init_Interupt:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??i1_Init_Interupt:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?i1_Init_PWM:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ??i1_Init_PWM:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?i1_Init_Config:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?i1_resetKey:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??i1_resetKey:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_readVrefADC:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     i1resetKey@key:	
   283                           ; 2 bytes @ 0x0
   284                           
   285                           
   286                           ; 1 bytes @ 0x0
   287  0070                     	ds	1
   288  0071                     ??_Timer0_Isr:	
   289  0071                     ??i1_Init_Config:	
   290                           ; 1 bytes @ 0x1
   291                           
   292                           
   293                           ; 1 bytes @ 0x1
   294  0071                     	ds	3
   295  0074                     ??_closeFan:	
   296  0074                     ??_Sleep_Mode:	
   297                           ; 1 bytes @ 0x4
   298                           
   299  0074                     ??_sacnKeyInput:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     ??_key_driver:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0074                     ??_readVrefADC:	
   306                           ; 1 bytes @ 0x4
   307                           
   308  0074                     ??_resetKey:	
   309                           ; 1 bytes @ 0x4
   310                           
   311  0074                     ??_Init_System:	
   312                           ; 1 bytes @ 0x4
   313                           
   314  0074                     ??_Init_GPIO:	
   315                           ; 1 bytes @ 0x4
   316                           
   317  0074                     ??_Init_Interupt:	
   318                           ; 1 bytes @ 0x4
   319                           
   320  0074                     ??_checkUsbStatus:	
   321                           ; 1 bytes @ 0x4
   322                           
   323  0074                     ??_Init_PWM:	
   324                           ; 1 bytes @ 0x4
   325                           
   326  0074                     ??_setFanLevel:	
   327                           ; 1 bytes @ 0x4
   328                           
   329  0074                     ??_checkFan:	
   330                           ; 1 bytes @ 0x4
   331                           
   332  0074                     ??_DelayXms:	
   333                           ; 1 bytes @ 0x4
   334                           
   335  0074                     ??___awdiv:	
   336                           ; 1 bytes @ 0x4
   337                           
   338  0074                     setFanLevel@level:	
   339                           ; 1 bytes @ 0x4
   340                           
   341  0074                     resetKey@key:	
   342                           ; 1 bytes @ 0x4
   343                           
   344                           
   345                           ; 1 bytes @ 0x4
   346  0074                     	ds	1
   347  0075                     ??_Init_Config:	
   348  0075                     setFanLevel@tempLevel:	
   349                           ; 1 bytes @ 0x5
   350                           
   351                           
   352                           ; 1 bytes @ 0x5
   353  0075                     	ds	1
   354  0076                     ??_scanKeys:	
   355  0076                     ??_checkKeys:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     ??_main:	
   359                           ; 1 bytes @ 0x6
   360                           
   361                           
   362                           	psect	cstackBANK0
   363  0036                     __pcstackBANK0:	
   364                           ; 1 bytes @ 0x6
   365                           
   366  0036                     ??_ADC_Sample:	
   367  0036                     ?___awdiv:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0036                     DelayXms@x:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0036                     sacnKeyInput@key:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0036                     key_driver@key_return:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0036                     ___awdiv@divisor:	
   380                           ; 1 bytes @ 0x0
   381                           
   382                           
   383                           ; 2 bytes @ 0x0
   384  0036                     	ds	1
   385  0037                     DelayXms@i:	
   386  0037                     key_driver@key_read:	
   387                           ; 1 bytes @ 0x1
   388                           
   389                           
   390                           ; 1 bytes @ 0x1
   391  0037                     	ds	1
   392  0038                     DelayXms@j:	
   393  0038                     key_driver@key:	
   394                           ; 1 bytes @ 0x2
   395                           
   396  0038                     ___awdiv@dividend:	
   397                           ; 1 bytes @ 0x2
   398                           
   399                           
   400                           ; 2 bytes @ 0x2
   401  0038                     	ds	2
   402  003A                     ADC_Sample@adch:	
   403  003A                     ___awdiv@counter:	
   404                           ; 1 bytes @ 0x4
   405                           
   406                           
   407                           ; 1 bytes @ 0x4
   408  003A                     	ds	1
   409  003B                     ADC_Sample@i:	
   410  003B                     ___awdiv@sign:	
   411                           ; 1 bytes @ 0x5
   412                           
   413                           
   414                           ; 1 bytes @ 0x5
   415  003B                     	ds	1
   416  003C                     ADC_Sample@ad_temp:	
   417  003C                     ___awdiv@quotient:	
   418                           ; 2 bytes @ 0x6
   419                           
   420                           
   421                           ; 2 bytes @ 0x6
   422  003C                     	ds	2
   423                           
   424                           	psect	maintext
   425  01C6                     __pmaintext:	
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 200 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      void 
   438 ;; Registers used:
   439 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : B00/0
   442 ;;		On exit  : 300/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMMON   BANK0   BANK1
   445 ;;      Params:         0       0       0
   446 ;;      Locals:         0       0       0
   447 ;;      Temps:          0       0       0
   448 ;;      Totals:         0       0       0
   449 ;;Total ram usage:        0 bytes
   450 ;; Hardware stack levels required when called:    7
   451 ;; This function calls:
   452 ;;		_Init_Config
   453 ;;		_checkKeys
   454 ;;		_checkUsbStatus
   455 ;;		_readVrefADC
   456 ;;		_scanKeys
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _main
   464  01C6                     _main:	
   465                           
   466                           ;main.c: 202: Init_Config();
   467                           
   468                           ;incstack = 0
   469                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   470  01C6  2221               	fcall	_Init_Config
   471  01C7                     l3278:	
   472                           
   473                           ;main.c: 205: if (time0Flag) {
   474  01C7  0877               	movf	_time0Flag,w
   475  01C8  1903               	btfsc	3,2
   476  01C9  29D0               	goto	l3288
   477  01CA  0064               	clrwdt	;# 
   478                           
   479                           ;main.c: 207: time0Flag = 0;
   480  01CB  01F7               	clrf	_time0Flag
   481                           
   482                           ;main.c: 208: scanKeys();
   483  01CC  22B8               	fcall	_scanKeys
   484                           
   485                           ;main.c: 209: count10Ms++;
   486  01CD  0AA8               	incf	_count10Ms,f
   487  01CE  1903               	skipnz
   488  01CF  0AA9               	incf	_count10Ms+1,f
   489  01D0                     l3288:	
   490                           
   491                           ;main.c: 210: }
   492                           ;main.c: 213: if (count10Ms == 100) {
   493  01D0  3064               	movlw	100
   494  01D1  1283               	bcf	3,5	;RP0=0, select bank0
   495  01D2  0628               	xorwf	_count10Ms,w
   496  01D3  0429               	iorwf	_count10Ms+1,w
   497  01D4  1D03               	btfss	3,2
   498  01D5  29DD               	goto	l3298
   499                           
   500                           ;main.c: 214: checkKeys();
   501  01D6  224D               	fcall	_checkKeys
   502                           
   503                           ;main.c: 215: count10Ms = 0;
   504  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   505  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   506  01D9  01A8               	clrf	_count10Ms
   507  01DA  01A9               	clrf	_count10Ms+1
   508                           
   509                           ;main.c: 217: checkUsbStatus();
   510  01DB  2108               	fcall	_checkUsbStatus
   511                           
   512                           ;main.c: 219: readVrefADC();
   513  01DC  22EB               	fcall	_readVrefADC
   514  01DD                     l3298:	
   515                           
   516                           ;main.c: 220: }
   517                           ;main.c: 222: if (countTime == 101) {
   518  01DD  3065               	movlw	101
   519  01DE  062A               	xorwf	_countTime,w
   520  01DF  042B               	iorwf	_countTime+1,w
   521  01E0  1D03               	btfss	3,2
   522  01E1  29C7               	goto	l3278
   523                           
   524                           ;main.c: 223: countTime = 0;
   525  01E2  01AA               	clrf	_countTime
   526  01E3  01AB               	clrf	_countTime+1
   527  01E4  29C7               	goto	l3278
   528  01E5                     __end_of_main:	
   529                           
   530                           	psect	text1
   531  02B8                     __ptext1:	
   532 ;; *************** function _scanKeys *****************
   533 ;; Defined at:
   534 ;;		line 170 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   543 ;; Tracked objects:
   544 ;;		On entry : 0/100
   545 ;;		On exit  : B00/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1
   548 ;;      Params:         0       0       0
   549 ;;      Locals:         0       0       0
   550 ;;      Temps:          0       0       0
   551 ;;      Totals:         0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    4
   555 ;; This function calls:
   556 ;;		_sacnKeyInput
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _scanKeys
   564  02B8                     _scanKeys:	
   565                           
   566                           ;main.c: 171: key1.key_addr_result = PORTB;
   567                           
   568                           ;incstack = 0
   569                           ; Regs used in _scanKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   570  02B8  1283               	bcf	3,5	;RP0=0, select bank0
   571  02B9  1303               	bcf	3,6	;RP1=0, select bank0
   572  02BA  0806               	movf	6,w	;volatile
   573  02BB  00B4               	movwf	_key1+5
   574                           
   575                           ;main.c: 172: sacnKeyInput(&key1);
   576  02BC  302F               	movlw	(low (_key1| 0))& (0+255)
   577  02BD  2204               	fcall	_sacnKeyInput
   578                           
   579                           ;main.c: 173: countTime++;
   580  02BE  0AAA               	incf	_countTime,f
   581  02BF  1903               	skipnz
   582  02C0  0AAB               	incf	_countTime+1,f
   583  02C1  0008               	return
   584  02C2                     __end_of_scanKeys:	
   585                           
   586                           	psect	text2
   587  0204                     __ptext2:	
   588 ;; *************** function _sacnKeyInput *****************
   589 ;; Defined at:
   590 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;  key             1    wreg     PTR struct Keys
   593 ;;		 -> key1(7), 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  key             1    0[BANK0 ] PTR struct Keys
   596 ;;		 -> key1(7), 
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   601 ;; Tracked objects:
   602 ;;		On entry : 300/0
   603 ;;		On exit  : B00/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1
   606 ;;      Params:         0       0       0
   607 ;;      Locals:         0       1       0
   608 ;;      Temps:          2       0       0
   609 ;;      Totals:         2       1       0
   610 ;;Total ram usage:        3 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    3
   613 ;; This function calls:
   614 ;;		Nothing
   615 ;; This function is called by:
   616 ;;		_scanKeys
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _sacnKeyInput
   622  0204                     _sacnKeyInput:	
   623                           
   624                           ;incstack = 0
   625                           ; Regs used in _sacnKeyInput: [wreg-fsr0h+status,2+status,0]
   626                           ;sacnKeyInput@key stored from wreg
   627  0204  00B6               	movwf	sacnKeyInput@key
   628                           
   629                           ;scankey.c: 4: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
   630  0205  3E05               	addlw	5
   631  0206  0084               	movwf	4
   632  0207  1383               	bcf	3,7	;select IRP bank0
   633  0208  0800               	movf	0,w
   634  0209  00F4               	movwf	??_sacnKeyInput
   635  020A  0836               	movf	sacnKeyInput@key,w
   636  020B  3E06               	addlw	6
   637  020C  0084               	movwf	4
   638  020D  0A00               	incf	0,w
   639  020E  2A11               	goto	u994
   640  020F                     u995:	
   641  020F  1003               	clrc
   642  0210  0CF4               	rrf	??_sacnKeyInput,f
   643  0211                     u994:	
   644  0211  3EFF               	addlw	-1
   645  0212  1D03               	skipz
   646  0213  2A0F               	goto	u995
   647  0214  0874               	movf	??_sacnKeyInput,w
   648  0215  00F5               	movwf	??_sacnKeyInput+1
   649  0216  0836               	movf	sacnKeyInput@key,w
   650  0217  3E04               	addlw	4
   651  0218  0084               	movwf	4
   652  0219  0875               	movf	??_sacnKeyInput+1,w
   653  021A  0080               	movwf	0
   654  021B  0836               	movf	sacnKeyInput@key,w
   655  021C  3E04               	addlw	4
   656  021D  0084               	movwf	4
   657  021E  3001               	movlw	1
   658  021F  0580               	andwf	0,f
   659  0220  0008               	return
   660  0221                     __end_of_sacnKeyInput:	
   661                           
   662                           	psect	text3
   663  02EB                     __ptext3:	
   664 ;; *************** function _readVrefADC *****************
   665 ;; Defined at:
   666 ;;		line 90 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;		None
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2  557[None  ] unsigned int 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0, pclath, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 300/0
   677 ;;		On exit  : 300/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1
   680 ;;      Params:         0       0       0
   681 ;;      Locals:         0       0       0
   682 ;;      Temps:          0       0       0
   683 ;;      Totals:         0       0       0
   684 ;;Total ram usage:        0 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    4
   687 ;; This function calls:
   688 ;;		_ADC_Sample
   689 ;;		_DelayXms
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _readVrefADC
   697  02EB                     _readVrefADC:	
   698                           
   699                           ;adc.c: 92: DelayXms(1);
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _readVrefADC: [wreg+status,2+status,0+pclath+cstack]
   703  02EB  3001               	movlw	1
   704  02EC  22AD               	fcall	_DelayXms
   705                           
   706                           ;adc.c: 93: ADC_Sample(15);
   707  02ED  300F               	movlw	15
   708  02EE  2819               	ljmp	_ADC_Sample
   709  02EF                     __end_of_readVrefADC:	
   710                           
   711                           	psect	text4
   712  02AD                     __ptext4:	
   713 ;; *************** function _DelayXms *****************
   714 ;; Defined at:
   715 ;;		line 82 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  x               1    wreg     unsigned char 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  x               1    0[BANK0 ] unsigned char 
   720 ;;  j               1    2[BANK0 ] unsigned char 
   721 ;;  i               1    1[BANK0 ] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0
   726 ;; Tracked objects:
   727 ;;		On entry : 300/0
   728 ;;		On exit  : 300/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMMON   BANK0   BANK1
   731 ;;      Params:         0       0       0
   732 ;;      Locals:         0       3       0
   733 ;;      Temps:          0       0       0
   734 ;;      Totals:         0       3       0
   735 ;;Total ram usage:        3 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    3
   738 ;; This function calls:
   739 ;;		Nothing
   740 ;; This function is called by:
   741 ;;		_readVrefADC
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           
   746                           ;psect for function _DelayXms
   747  02AD                     _DelayXms:	
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   751                           ;DelayXms@x stored from wreg
   752  02AD  00B6               	movwf	DelayXms@x
   753                           
   754                           ;adc.c: 84: unsigned char i,j;
   755                           ;adc.c: 85: for(i=x;i>0;i--)
   756  02AE  00B7               	movwf	DelayXms@i
   757  02AF                     l3230:	
   758  02AF  0837               	movf	DelayXms@i,w
   759  02B0  1903               	btfsc	3,2
   760  02B1  0008               	return
   761                           
   762                           ;adc.c: 86: for(j=153;j>0;j--);
   763  02B2  3099               	movlw	153
   764  02B3  00B8               	movwf	DelayXms@j
   765  02B4                     l3240:	
   766  02B4  0BB8               	decfsz	DelayXms@j,f
   767  02B5  2AB4               	goto	l3240
   768  02B6  03B7               	decf	DelayXms@i,f
   769  02B7  2AAF               	goto	l3230
   770  02B8                     __end_of_DelayXms:	
   771                           
   772                           	psect	text5
   773  0019                     __ptext5:	
   774 ;; *************** function _ADC_Sample *****************
   775 ;; Defined at:
   776 ;;		line 11 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;  adch            1    wreg     unsigned char 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  adch            1    4[BANK0 ] unsigned char 
   781 ;;  ad_temp         2    6[BANK0 ] volatile unsigned int 
   782 ;;  i               1    5[BANK0 ] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0
   787 ;; Tracked objects:
   788 ;;		On entry : 300/0
   789 ;;		On exit  : 300/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1
   792 ;;      Params:         0       0       0
   793 ;;      Locals:         0       4       0
   794 ;;      Temps:          0       4       0
   795 ;;      Totals:         0       8       0
   796 ;;Total ram usage:        8 bytes
   797 ;; Hardware stack levels used:    1
   798 ;; Hardware stack levels required when called:    3
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_readVrefADC
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           
   807                           ;psect for function _ADC_Sample
   808  0019                     _ADC_Sample:	
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _ADC_Sample: [wreg+status,2+status,0]
   812                           ;ADC_Sample@adch stored from wreg
   813  0019  00BA               	movwf	ADC_Sample@adch
   814                           
   815                           ;adc.c: 13: static unsigned long adsum = 0;
   816                           ;adc.c: 14: static unsigned int admin = 0,admax = 0;
   817                           ;adc.c: 15: static unsigned char adtimes = 0;
   818                           ;adc.c: 16: volatile unsigned int ad_temp;
   819                           ;adc.c: 17: ADCON1 = 0;
   820  001A  1683               	bsf	3,5	;RP0=1, select bank1
   821  001B  019F               	clrf	31	;volatile
   822                           
   823                           ;adc.c: 18: ADCON0 = 0X41 | (adch << 2);
   824  001C  1283               	bcf	3,5	;RP0=0, select bank0
   825  001D  083A               	movf	ADC_Sample@adch,w
   826  001E  00B6               	movwf	??_ADC_Sample
   827  001F  3001               	movlw	1
   828  0020  1003               	clrc
   829  0021                     L1:	
   830  0021  0DB6               	rlf	??_ADC_Sample,f
   831  0022  3EFF               	addlw	-1
   832  0023  1003               	clrc
   833  0024  1D03               	skipz
   834  0025  2821               	goto	L1
   835  0026  0D36               	rlf	??_ADC_Sample,w
   836  0027  3841               	iorlw	65
   837  0028  009F               	movwf	31	;volatile
   838  0029  0000               	nop	;# 
   839  002A  0000               	nop	;# 
   840                           
   841                           ;adc.c: 21: GODONE = 1;
   842  002B  1283               	bcf	3,5	;RP0=0, select bank0
   843  002C  1303               	bcf	3,6	;RP1=0, select bank0
   844  002D  149F               	bsf	31,1	;volatile
   845                           
   846                           ;adc.c: 23: unsigned char i = 0;
   847  002E  01BB               	clrf	ADC_Sample@i
   848  002F                     l1735:	
   849                           ;adc.c: 24: while(GODONE)
   850                           
   851  002F  1C9F               	btfss	31,1	;volatile
   852  0030  2834               	goto	l3198
   853                           
   854                           ;adc.c: 25: {
   855                           ;adc.c: 26: if(0 == (--i))
   856  0031  0BBB               	decfsz	ADC_Sample@i,f
   857  0032  282F               	goto	l1735
   858  0033  0008               	return
   859  0034                     l3198:	
   860                           
   861                           ;adc.c: 28: }
   862                           ;adc.c: 30: ad_temp=(ADRESH<<4)+(ADRESL>>4);
   863  0034  081E               	movf	30,w	;volatile
   864  0035  00BC               	movwf	ADC_Sample@ad_temp	;volatile
   865  0036  01BD               	clrf	ADC_Sample@ad_temp+1	;volatile
   866  0037  0EBC               	swapf	ADC_Sample@ad_temp,f	;volatile
   867  0038  0EBD               	swapf	ADC_Sample@ad_temp+1,f	;volatile
   868  0039  30F0               	movlw	240
   869  003A  05BD               	andwf	ADC_Sample@ad_temp+1,f	;volatile
   870  003B  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   871  003C  390F               	andlw	15
   872  003D  04BD               	iorwf	ADC_Sample@ad_temp+1,f	;volatile
   873  003E  30F0               	movlw	240
   874  003F  05BC               	andwf	ADC_Sample@ad_temp,f	;volatile
   875  0040  1683               	bsf	3,5	;RP0=1, select bank1
   876  0041  0E1E               	swapf	30,w	;volatile
   877  0042  390F               	andlw	15
   878  0043  1283               	bcf	3,5	;RP0=0, select bank0
   879  0044  07BC               	addwf	ADC_Sample@ad_temp,f	;volatile
   880  0045  1803               	skipnc
   881  0046  0ABD               	incf	ADC_Sample@ad_temp+1,f	;volatile
   882                           
   883                           ;adc.c: 32: if(0 == admax)
   884  0047  0824               	movf	ADC_Sample@admax,w
   885  0048  0425               	iorwf	ADC_Sample@admax+1,w
   886  0049  1D03               	btfss	3,2
   887  004A  284D               	goto	l3206
   888                           
   889                           ;adc.c: 33: {
   890                           ;adc.c: 34: admax = ad_temp;
   891  004B  20BE               	fcall	PL16	;call to abstracted procedure
   892  004C  285F               	goto	l3212
   893  004D                     l3206:	
   894                           ;adc.c: 36: }
   895                           
   896                           ;adc.c: 35: admin = ad_temp;
   897                           
   898                           
   899                           ;adc.c: 37: else if(ad_temp > admax)
   900  004D  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   901  004E  0225               	subwf	ADC_Sample@admax+1,w
   902  004F  1D03               	skipz
   903  0050  2853               	goto	u1095
   904  0051  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   905  0052  0224               	subwf	ADC_Sample@admax,w
   906  0053                     u1095:	
   907  0053  1803               	skipnc
   908  0054  2857               	goto	l3210
   909                           
   910                           ;adc.c: 38: admax = ad_temp;
   911  0055  20BE               	fcall	PL16	;call to abstracted procedure
   912  0056  2863               	goto	l1741
   913  0057                     l3210:	
   914                           
   915                           ;adc.c: 39: else if(ad_temp < admin)
   916  0057  0827               	movf	ADC_Sample@admin+1,w
   917  0058  023D               	subwf	ADC_Sample@ad_temp+1,w	;volatile
   918  0059  1D03               	skipz
   919  005A  285D               	goto	u1105
   920  005B  0826               	movf	ADC_Sample@admin,w
   921  005C  023C               	subwf	ADC_Sample@ad_temp,w	;volatile
   922  005D                     u1105:	
   923  005D  1803               	skipnc
   924  005E  2863               	goto	l1741
   925  005F                     l3212:	
   926                           
   927                           ;adc.c: 40: admin = ad_temp;
   928  005F  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   929  0060  00A7               	movwf	ADC_Sample@admin+1
   930  0061  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   931  0062  00A6               	movwf	ADC_Sample@admin
   932  0063                     l1741:	
   933                           
   934                           ;adc.c: 42: adsum += ad_temp;
   935  0063  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   936  0064  00B6               	movwf	??_ADC_Sample
   937  0065  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   938  0066  00B7               	movwf	??_ADC_Sample+1
   939  0067  01B8               	clrf	??_ADC_Sample+2
   940  0068  01B9               	clrf	??_ADC_Sample+3
   941  0069  0836               	movf	??_ADC_Sample,w
   942  006A  07A0               	addwf	ADC_Sample@adsum,f
   943  006B  0837               	movf	??_ADC_Sample+1,w
   944  006C  1103               	clrz
   945  006D  1803               	skipnc
   946  006E  3E01               	addlw	1
   947  006F  1D03               	btfss	3,2
   948  0070  07A1               	addwf	ADC_Sample@adsum+1,f
   949  0071  0838               	movf	??_ADC_Sample+2,w
   950  0072  1103               	clrz
   951  0073  1803               	skipnc
   952  0074  3E01               	addlw	1
   953  0075  1D03               	btfss	3,2
   954  0076  07A2               	addwf	ADC_Sample@adsum+2,f
   955  0077  0839               	movf	??_ADC_Sample+3,w
   956  0078  1103               	clrz
   957  0079  1803               	skipnc
   958  007A  3E01               	addlw	1
   959  007B  1D03               	btfss	3,2
   960  007C  07A3               	addwf	ADC_Sample@adsum+3,f
   961                           
   962                           ;adc.c: 43: if(++adtimes >= 10)
   963  007D  300A               	movlw	10
   964  007E  0AAE               	incf	ADC_Sample@adtimes,f
   965  007F  022E               	subwf	ADC_Sample@adtimes,w
   966  0080  1C03               	skipc
   967  0081  0008               	return
   968                           
   969                           ;adc.c: 44: {
   970                           ;adc.c: 45: adsum -= admax;
   971  0082  0824               	movf	ADC_Sample@admax,w
   972  0083  00B6               	movwf	??_ADC_Sample
   973  0084  0825               	movf	ADC_Sample@admax+1,w
   974  0085  20AF               	fcall	PL4	;call to abstracted procedure
   975  0086  1C03               	skipc
   976  0087  0F39               	incfsz	??_ADC_Sample+3,w
   977  0088  02A3               	subwf	ADC_Sample@adsum+3,f
   978                           
   979                           ;adc.c: 46: adsum -= admin;
   980  0089  0826               	movf	ADC_Sample@admin,w
   981  008A  00B6               	movwf	??_ADC_Sample
   982  008B  0827               	movf	ADC_Sample@admin+1,w
   983  008C  20AF               	fcall	PL4	;call to abstracted procedure
   984  008D  1C03               	skipc
   985  008E  0F39               	incfsz	??_ADC_Sample+3,w
   986  008F  02A3               	subwf	ADC_Sample@adsum+3,f
   987                           
   988                           ;adc.c: 48: adresult = adsum >> 3;
   989  0090  0820               	movf	ADC_Sample@adsum,w
   990  0091  00B6               	movwf	??_ADC_Sample
   991  0092  0821               	movf	ADC_Sample@adsum+1,w
   992  0093  00B7               	movwf	??_ADC_Sample+1
   993  0094  0822               	movf	ADC_Sample@adsum+2,w
   994  0095  00B8               	movwf	??_ADC_Sample+2
   995  0096  0823               	movf	ADC_Sample@adsum+3,w
   996  0097  00B9               	movwf	??_ADC_Sample+3
   997  0098  3003               	movlw	3
   998  0099                     u1155:	
   999  0099  1003               	clrc
  1000  009A  0CB9               	rrf	??_ADC_Sample+3,f
  1001  009B  0CB8               	rrf	??_ADC_Sample+2,f
  1002  009C  0CB7               	rrf	??_ADC_Sample+1,f
  1003  009D  0CB6               	rrf	??_ADC_Sample,f
  1004  009E  3EFF               	addlw	-1
  1005  009F  1D03               	skipz
  1006  00A0  2899               	goto	u1155
  1007  00A1  0837               	movf	??_ADC_Sample+1,w
  1008  00A2  00AD               	movwf	_adresult+1	;volatile
  1009  00A3  0836               	movf	??_ADC_Sample,w
  1010  00A4  00AC               	movwf	_adresult	;volatile
  1011                           
  1012                           ;adc.c: 50: adsum = 0;
  1013  00A5  01A0               	clrf	ADC_Sample@adsum
  1014  00A6  01A1               	clrf	ADC_Sample@adsum+1
  1015  00A7  01A2               	clrf	ADC_Sample@adsum+2
  1016  00A8  01A3               	clrf	ADC_Sample@adsum+3
  1017                           
  1018                           ;adc.c: 51: admin = 0;
  1019  00A9  01A6               	clrf	ADC_Sample@admin
  1020  00AA  01A7               	clrf	ADC_Sample@admin+1
  1021                           
  1022                           ;adc.c: 52: admax = 0;
  1023  00AB  01A4               	clrf	ADC_Sample@admax
  1024  00AC  01A5               	clrf	ADC_Sample@admax+1
  1025                           
  1026                           ;adc.c: 53: adtimes = 0;
  1027  00AD  01AE               	clrf	ADC_Sample@adtimes
  1028  00AE  0008               	return
  1029  00AF                     __end_of_ADC_Sample:	
  1030  00AF                     PL4:	
  1031  00AF  00B7               	movwf	??_ADC_Sample+1
  1032  00B0  01B8               	clrf	??_ADC_Sample+2
  1033  00B1  01B9               	clrf	??_ADC_Sample+3
  1034  00B2  0836               	movf	??_ADC_Sample,w
  1035  00B3  02A0               	subwf	ADC_Sample@adsum,f
  1036  00B4  0837               	movf	??_ADC_Sample+1,w
  1037  00B5  1C03               	skipc
  1038  00B6  0F37               	incfsz	??_ADC_Sample+1,w
  1039  00B7  02A1               	subwf	ADC_Sample@adsum+1,f
  1040  00B8  0838               	movf	??_ADC_Sample+2,w
  1041  00B9  1C03               	skipc
  1042  00BA  0F38               	incfsz	??_ADC_Sample+2,w
  1043  00BB  02A2               	subwf	ADC_Sample@adsum+2,f
  1044  00BC  0839               	movf	??_ADC_Sample+3,w
  1045  00BD  0008               	return
  1046  00BE                     __end_ofPL4:	
  1047  00BE                     PL16:	
  1048  00BE  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
  1049  00BF  00A5               	movwf	ADC_Sample@admax+1
  1050  00C0  083C               	movf	ADC_Sample@ad_temp,w	;volatile
  1051  00C1  00A4               	movwf	ADC_Sample@admax
  1052  00C2  0008               	return
  1053  00C3                     __end_ofPL16:	
  1054                           
  1055                           	psect	text6
  1056  0108                     __ptext6:	
  1057 ;; *************** function _checkUsbStatus *****************
  1058 ;; Defined at:
  1059 ;;		line 36 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;		None
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;		None
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0
  1068 ;; Tracked objects:
  1069 ;;		On entry : 300/0
  1070 ;;		On exit  : 300/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1
  1073 ;;      Params:         0       0       0
  1074 ;;      Locals:         0       0       0
  1075 ;;      Temps:          2       0       0
  1076 ;;      Totals:         2       0       0
  1077 ;;Total ram usage:        2 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    3
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           
  1088                           ;psect for function _checkUsbStatus
  1089  0108                     _checkUsbStatus:	
  1090                           
  1091                           ;main.c: 38: if(FAN_STATUS == 1)
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _checkUsbStatus: [wreg+status,2+status,0]
  1095  0108  0B78               	decfsz	_FAN_STATUS,w
  1096  0109  290D               	goto	l2910
  1097                           
  1098                           ;main.c: 39: {
  1099                           ;main.c: 40: PORTA|=(1<<0);
  1100  010A  1405               	bsf	5,0	;volatile
  1101                           
  1102                           ;main.c: 41: PORTC|=(1<<1);
  1103  010B  1487               	bsf	7,1	;volatile
  1104                           
  1105                           ;main.c: 42: return;
  1106  010C  0008               	return
  1107  010D                     l2910:	
  1108                           
  1109                           ;main.c: 43: }
  1110                           ;main.c: 45: if (((PORTB) >> (2)&1) == 1) {
  1111  010D  0806               	movf	6,w	;volatile
  1112  010E  00F4               	movwf	??_checkUsbStatus
  1113  010F  1003               	clrc
  1114  0110  0CF4               	rrf	??_checkUsbStatus,f
  1115  0111  1003               	clrc
  1116  0112  0CF4               	rrf	??_checkUsbStatus,f
  1117  0113  1C74               	btfss	??_checkUsbStatus,0
  1118  0114  2928               	goto	l1124
  1119                           
  1120                           ;main.c: 46: lowVTime = 0;
  1121  0115  01F6               	clrf	_lowVTime
  1122                           
  1123                           ;main.c: 47: if (((PORTB) >> (1)&1) == 1) {
  1124  0116  0806               	movf	6,w	;volatile
  1125  0117  00F4               	movwf	??_checkUsbStatus
  1126  0118  1003               	clrc
  1127  0119  0CF4               	rrf	??_checkUsbStatus,f
  1128  011A  1C74               	btfss	??_checkUsbStatus,0
  1129  011B  291F               	goto	l2918
  1130                           
  1131                           ;main.c: 49: PORTC&=~(1<<1);
  1132  011C  1087               	bcf	7,1	;volatile
  1133                           
  1134                           ;main.c: 50: PORTA|=(1<<0);
  1135  011D  1405               	bsf	5,0	;volatile
  1136                           
  1137                           ;main.c: 51: } else if (countTime == 100) {
  1138  011E  0008               	return
  1139  011F                     l2918:	
  1140  011F  3064               	movlw	100
  1141  0120  062A               	xorwf	_countTime,w
  1142  0121  042B               	iorwf	_countTime+1,w
  1143  0122  1D03               	btfss	3,2
  1144  0123  0008               	return
  1145                           
  1146                           ;main.c: 53: PORTA^=(1<<0);
  1147  0124  3001               	movlw	1
  1148  0125  0685               	xorwf	5,f	;volatile
  1149                           
  1150                           ;main.c: 54: PORTC|=(1<<1);
  1151  0126  1487               	bsf	7,1	;volatile
  1152  0127  0008               	return
  1153  0128                     l1124:	
  1154                           
  1155                           ;main.c: 58: PORTA|=(1<<0);
  1156  0128  1405               	bsf	5,0	;volatile
  1157                           
  1158                           ;main.c: 59: PORTC|=(1<<1);
  1159  0129  1487               	bsf	7,1	;volatile
  1160                           
  1161                           ;main.c: 62: if((adresult/8) > 0x63 && countTime == 100)
  1162  012A  082D               	movf	_adresult+1,w	;volatile
  1163  012B  00F5               	movwf	??_checkUsbStatus+1
  1164  012C  082C               	movf	_adresult,w	;volatile
  1165  012D  00F4               	movwf	??_checkUsbStatus
  1166  012E  3000               	movlw	0
  1167  012F  1003               	clrc
  1168  0130  0CF5               	rrf	??_checkUsbStatus+1,f
  1169  0131  0CF4               	rrf	??_checkUsbStatus,f
  1170  0132  1003               	clrc
  1171  0133  0CF5               	rrf	??_checkUsbStatus+1,f
  1172  0134  0CF4               	rrf	??_checkUsbStatus,f
  1173  0135  1003               	clrc
  1174  0136  0CF5               	rrf	??_checkUsbStatus+1,f
  1175  0137  0CF4               	rrf	??_checkUsbStatus,f
  1176  0138  0275               	subwf	??_checkUsbStatus+1,w
  1177  0139  3064               	movlw	100
  1178  013A  1903               	skipnz
  1179  013B  0274               	subwf	??_checkUsbStatus,w
  1180  013C  1C03               	skipc
  1181  013D  0008               	return
  1182  013E  3064               	movlw	100
  1183  013F  062A               	xorwf	_countTime,w
  1184  0140  042B               	iorwf	_countTime+1,w
  1185  0141  1D03               	btfss	3,2
  1186  0142  0008               	return
  1187                           
  1188                           ;main.c: 63: {
  1189                           ;main.c: 64: if(lowVTime < 10)
  1190  0143  300A               	movlw	10
  1191  0144  0276               	subwf	_lowVTime,w
  1192  0145  1803               	skipnc
  1193  0146  0008               	return
  1194  0147  3001               	movlw	1
  1195                           
  1196                           ;main.c: 65: {
  1197                           ;main.c: 66: lowVTime++;
  1198  0148  0AF6               	incf	_lowVTime,f
  1199                           
  1200                           ;main.c: 68: PORTA^=(1<<0);
  1201  0149  0685               	xorwf	5,f	;volatile
  1202  014A  0008               	return
  1203  014B                     __end_of_checkUsbStatus:	
  1204                           
  1205                           	psect	text7
  1206  024D                     __ptext7:	
  1207 ;; *************** function _checkKeys *****************
  1208 ;; Defined at:
  1209 ;;		line 178 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 300/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1
  1223 ;;      Params:         0       0       0
  1224 ;;      Locals:         0       0       0
  1225 ;;      Temps:          0       0       0
  1226 ;;      Totals:         0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    6
  1230 ;; This function calls:
  1231 ;;		_checkFan
  1232 ;;		_key_driver
  1233 ;;		_setFanLevel
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _checkKeys
  1241  024D                     _checkKeys:	
  1242                           
  1243                           ;main.c: 179: if (key_driver(&key1) == 1) {
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _checkKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1247  024D  302F               	movlw	(low (_key1| 0))& (0+255)
  1248  024E  214B               	fcall	_key_driver
  1249  024F  3A01               	xorlw	1
  1250  0250  1D03               	skipz
  1251  0251  2A5B               	goto	l3268
  1252                           
  1253                           ;main.c: 182: if (FAN_STATUS == 1) {
  1254  0252  0B78               	decfsz	_FAN_STATUS,w
  1255  0253  2A56               	goto	l1158
  1256                           
  1257                           ;main.c: 184: setFanLevel(1);
  1258  0254  3001               	movlw	1
  1259  0255  298D               	ljmp	_setFanLevel
  1260  0256                     l1158:	
  1261                           ;main.c: 186: } else {
  1262                           
  1263  0256  3000               	movlw	0
  1264                           
  1265                           ;main.c: 187: FAN_STATUS = 1;
  1266  0257  01F8               	clrf	_FAN_STATUS
  1267  0258  0AF8               	incf	_FAN_STATUS,f
  1268                           
  1269                           ;main.c: 188: setFanLevel(0);
  1270  0259  218D               	fcall	_setFanLevel
  1271  025A                     l3262:	
  1272                           
  1273                           ;main.c: 189: checkFan();
  1274  025A  2AA1               	ljmp	l2754
  1275  025B                     l3268:	
  1276  025B  3002               	movlw	2
  1277  025C  0678               	xorwf	_FAN_STATUS,w
  1278  025D  1D03               	btfss	3,2
  1279  025E  0008               	return
  1280  025F  2A5A               	goto	l3262
  1281  0260                     __end_of_checkKeys:	
  1282                           
  1283                           	psect	text8
  1284  018D                     __ptext8:	
  1285 ;; *************** function _setFanLevel *****************
  1286 ;; Defined at:
  1287 ;;		line 88 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  level           1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  level           1    4[COMMON] unsigned char 
  1292 ;;  levelWidth      2    0        unsigned int 
  1293 ;;  tempLevel       1    5[COMMON] unsigned char 
  1294 ;; Return value:  Size  Location     Type
  1295 ;;                  1    wreg      void 
  1296 ;; Registers used:
  1297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1298 ;; Tracked objects:
  1299 ;;		On entry : B00/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMMON   BANK0   BANK1
  1303 ;;      Params:         0       0       0
  1304 ;;      Locals:         2       0       0
  1305 ;;      Temps:          0       0       0
  1306 ;;      Totals:         2       0       0
  1307 ;;Total ram usage:        2 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    5
  1310 ;; This function calls:
  1311 ;;		___awdiv
  1312 ;;		_closeFan
  1313 ;; This function is called by:
  1314 ;;		_checkKeys
  1315 ;; This function uses a non-reentrant model
  1316 ;;
  1317                           
  1318                           
  1319                           ;psect for function _setFanLevel
  1320  018D                     _setFanLevel:	
  1321                           
  1322                           ;incstack = 0
  1323                           ; Regs used in _setFanLevel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1324                           ;setFanLevel@level stored from wreg
  1325  018D  00F4               	movwf	setFanLevel@level
  1326                           
  1327                           ;main.c: 89: if(level == 0)
  1328  018E  0874               	movf	setFanLevel@level,w
  1329  018F  1D03               	btfss	3,2
  1330  0190  2993               	goto	l3116
  1331                           
  1332                           ;main.c: 90: {
  1333                           ;main.c: 91: currentLevel = 2;
  1334  0191  3002               	movlw	2
  1335  0192  00F9               	movwf	_currentLevel
  1336  0193                     l3116:	
  1337                           
  1338                           ;main.c: 92: }
  1339                           ;main.c: 93: unsigned int levelWidth = (PR2 + 1) / 4;
  1340  0193  1683               	bsf	3,5	;RP0=1, select bank1
  1341  0194  0812               	movf	18,w	;volatile
  1342  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0196  00B8               	movwf	___awdiv@dividend
  1344  0197  01B9               	clrf	___awdiv@dividend+1
  1345  0198  0AB8               	incf	___awdiv@dividend,f
  1346  0199  1903               	skipnz
  1347  019A  0AB9               	incf	___awdiv@dividend+1,f
  1348  019B  3004               	movlw	4
  1349  019C  00B6               	movwf	___awdiv@divisor
  1350  019D  01B7               	clrf	___awdiv@divisor+1
  1351  019E  20C3               	fcall	___awdiv
  1352                           
  1353                           ;main.c: 94: char tempLevel = currentLevel + level;
  1354  019F  0874               	movf	setFanLevel@level,w
  1355  01A0  0779               	addwf	_currentLevel,w
  1356  01A1  00F5               	movwf	setFanLevel@tempLevel
  1357                           
  1358                           ;main.c: 95: if (tempLevel > 4) {
  1359  01A2  3005               	movlw	5
  1360  01A3  0275               	subwf	setFanLevel@tempLevel,w
  1361  01A4  1C03               	skipc
  1362  01A5  29A8               	goto	l3124
  1363                           
  1364                           ;main.c: 96: tempLevel = 1;
  1365  01A6  01F5               	clrf	setFanLevel@tempLevel
  1366  01A7  0AF5               	incf	setFanLevel@tempLevel,f
  1367  01A8                     l3124:	
  1368                           
  1369                           ;main.c: 97: }
  1370                           ;main.c: 100: if (FAN_STATUS == 1) {
  1371  01A8  0B78               	decfsz	_FAN_STATUS,w
  1372  01A9  0008               	return
  1373                           
  1374                           ;main.c: 101: currentLevel = tempLevel;
  1375  01AA  0875               	movf	setFanLevel@tempLevel,w
  1376  01AB  00F9               	movwf	_currentLevel
  1377                           
  1378                           ;main.c: 102: switch(currentLevel)
  1379  01AC  29B7               	goto	l3138
  1380  01AD                     l3128:	
  1381                           
  1382                           ;main.c: 105: closeFan();
  1383  01AD  2ACC               	ljmp	l2644
  1384  01AE                     l3130:	
  1385                           ;main.c: 106: break;
  1386                           
  1387                           
  1388                           ;main.c: 108: CCPR1L = 2;
  1389  01AE  3002               	movlw	2
  1390  01AF  0095               	movwf	21	;volatile
  1391                           
  1392                           ;main.c: 109: break;
  1393  01B0  0008               	return
  1394  01B1                     l3132:	
  1395                           
  1396                           ;main.c: 111: CCPR1L = 3;
  1397  01B1  3003               	movlw	3
  1398  01B2  0095               	movwf	21	;volatile
  1399                           
  1400                           ;main.c: 112: break;
  1401  01B3  0008               	return
  1402  01B4                     l3134:	
  1403                           
  1404                           ;main.c: 114: CCPR1L = 5;
  1405  01B4  3005               	movlw	5
  1406  01B5  0095               	movwf	21	;volatile
  1407                           
  1408                           ;main.c: 115: break;
  1409  01B6  0008               	return
  1410  01B7                     l3138:	
  1411  01B7  0879               	movf	_currentLevel,w
  1412                           
  1413                           ; Switch size 1, requested type "space"
  1414                           ; Number of cases is 4, Range of values is 1 to 4
  1415                           ; switch strategies available:
  1416                           ; Name         Instructions Cycles
  1417                           ; simple_byte           13     7 (average)
  1418                           ; direct_byte           13     9 (fixed)
  1419                           ; jumptable            263     9 (fixed)
  1420                           ;	Chosen strategy is simple_byte
  1421  01B8  3A01               	xorlw	1	; case 1
  1422  01B9  1903               	skipnz
  1423  01BA  29AD               	goto	l3128
  1424  01BB  3A03               	xorlw	3	; case 2
  1425  01BC  1903               	skipnz
  1426  01BD  29AE               	goto	l3130
  1427  01BE  3A01               	xorlw	1	; case 3
  1428  01BF  1903               	skipnz
  1429  01C0  29B1               	goto	l3132
  1430  01C1  3A07               	xorlw	7	; case 4
  1431  01C2  1903               	skipnz
  1432  01C3  29B4               	goto	l3134
  1433  01C4  29C5               	goto	l1145
  1434  01C5                     l1145:	
  1435  01C5  0008               	return
  1436  01C6                     __end_of_setFanLevel:	
  1437                           
  1438                           	psect	text9
  1439  02CC                     __ptext9:	
  1440 ;; *************** function _closeFan *****************
  1441 ;; Defined at:
  1442 ;;		line 125 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, pclath, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : B00/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1
  1456 ;;      Params:         0       0       0
  1457 ;;      Locals:         0       0       0
  1458 ;;      Temps:          0       0       0
  1459 ;;      Totals:         0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    4
  1463 ;; This function calls:
  1464 ;;		_Init_PWM
  1465 ;;		_Sleep_Mode
  1466 ;; This function is called by:
  1467 ;;		_setFanLevel
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           
  1472                           ;psect for function _closeFan
  1473  02CC                     _closeFan:	
  1474  02CC                     l2644:	
  1475                           ;incstack = 0
  1476                           ; Regs used in _closeFan: [wreg+status,2+status,0+pclath+cstack]
  1477                           
  1478                           
  1479                           ;main.c: 126: Init_PWM();
  1480  02CC  2293               	fcall	_Init_PWM
  1481                           
  1482                           ;main.c: 127: currentLevel = 1;
  1483  02CD  01F9               	clrf	_currentLevel
  1484  02CE  0AF9               	incf	_currentLevel,f
  1485                           
  1486                           ;main.c: 128: PORTA|=(1<<0);
  1487  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1488  02D0  1405               	bsf	5,0	;volatile
  1489                           
  1490                           ;main.c: 131: fan_check_time = 0;
  1491  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  1492  02D2  1507               	bsf	7,2	;volatile
  1493                           
  1494                           ;main.c: 132: FAN_STATUS = 0;
  1495  02D3  01F8               	clrf	_FAN_STATUS
  1496                           
  1497                           ;main.c: 133: Sleep_Mode();
  1498  02D4  29E5               	ljmp	l2626
  1499  02D5                     __end_of_closeFan:	
  1500                           
  1501                           	psect	text10
  1502  01E5                     __ptext10:	
  1503 ;; *************** function _Sleep_Mode *****************
  1504 ;; Defined at:
  1505 ;;		line 253 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2
  1514 ;; Tracked objects:
  1515 ;;		On entry : 300/100
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1
  1519 ;;      Params:         0       0       0
  1520 ;;      Locals:         0       0       0
  1521 ;;      Temps:          0       0       0
  1522 ;;      Totals:         0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    3
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_closeFan
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _Sleep_Mode
  1535  01E5                     _Sleep_Mode:	
  1536  01E5                     l2626:	
  1537                           ;incstack = 0
  1538                           ; Regs used in _Sleep_Mode: [wreg+status,2]
  1539                           
  1540                           
  1541                           ;main.c: 254: INTCON = 0;
  1542  01E5  018B               	clrf	11	;volatile
  1543                           
  1544                           ;main.c: 256: OPTION_REG = 0;
  1545  01E6  0181               	clrf	1	;volatile
  1546                           
  1547                           ;main.c: 258: TRISA = 0B00000000;
  1548  01E7  0185               	clrf	5	;volatile
  1549                           
  1550                           ;main.c: 259: PORTA = 0B00000000;
  1551  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1552  01E9  0185               	clrf	5	;volatile
  1553                           
  1554                           ;main.c: 260: WPUA = 0B00000000;
  1555  01EA  1683               	bsf	3,5	;RP0=1, select bank3
  1556  01EB  1703               	bsf	3,6	;RP1=1, select bank3
  1557  01EC  018E               	clrf	14	;volatile
  1558                           
  1559                           ;main.c: 262: TRISB = 0B00100000;
  1560  01ED  3020               	movlw	32
  1561  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  1562  01EF  0086               	movwf	6	;volatile
  1563                           
  1564                           ;main.c: 263: PORTB = 0B00000000;
  1565  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1566  01F1  0186               	clrf	6	;volatile
  1567                           
  1568                           ;main.c: 265: PORTB = 0;
  1569  01F2  0186               	clrf	6	;volatile
  1570                           
  1571                           ;main.c: 266: WPUB = 0B00100000;
  1572  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  1573  01F4  0095               	movwf	21	;volatile
  1574                           
  1575                           ;main.c: 268: IOCB = 0B00100100;
  1576  01F5  3024               	movlw	36
  1577  01F6  0096               	movwf	22	;volatile
  1578                           
  1579                           ;main.c: 269: RBIE = 1;
  1580  01F7  158B               	bsf	11,3	;volatile
  1581                           
  1582                           ;main.c: 270: GIE = 1;
  1583  01F8  178B               	bsf	11,7	;volatile
  1584                           
  1585                           ;main.c: 272: ADCON0 = 0;
  1586  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1587  01FA  019F               	clrf	31	;volatile
  1588                           
  1589                           ;main.c: 274: OSCCON = 0X70;
  1590  01FB  3070               	movlw	112
  1591  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  1592  01FD  008F               	movwf	15	;volatile
  1593                           
  1594                           ;main.c: 276: PORTB;
  1595  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1596  01FF  0806               	movf	6,w	;volatile
  1597  0200  0064               	clrwdt	;# 
  1598  0201  0063               	sleep	;# 
  1599  0202  0000               	nop	;# 
  1600  0203  0008               	return
  1601  0204                     __end_of_Sleep_Mode:	
  1602                           
  1603                           	psect	text11
  1604  00C3                     __ptext11:	
  1605 ;; *************** function ___awdiv *****************
  1606 ;; Defined at:
  1607 ;;		line 6 in file "E:\cms\SCMCU_IDE_V2.00.07\data\sources\common\awdiv.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  divisor         2    0[BANK0 ] int 
  1610 ;;  dividend        2    2[BANK0 ] int 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  quotient        2    6[BANK0 ] int 
  1613 ;;  sign            1    5[BANK0 ] unsigned char 
  1614 ;;  counter         1    4[BANK0 ] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  2    0[BANK0 ] int 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : B00/0
  1621 ;;		On exit  : B00/0
  1622 ;;		Unchanged: 800/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1
  1624 ;;      Params:         0       4       0
  1625 ;;      Locals:         0       4       0
  1626 ;;      Temps:          0       0       0
  1627 ;;      Totals:         0       8       0
  1628 ;;Total ram usage:        8 bytes
  1629 ;; Hardware stack levels used:    1
  1630 ;; Hardware stack levels required when called:    3
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_setFanLevel
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function ___awdiv
  1640  00C3                     ___awdiv:	
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1644  00C3  01BB               	clrf	___awdiv@sign
  1645  00C4  1FB7               	btfss	___awdiv@divisor+1,7
  1646  00C5  28CD               	goto	l3076
  1647  00C6  09B6               	comf	___awdiv@divisor,f
  1648  00C7  09B7               	comf	___awdiv@divisor+1,f
  1649  00C8  0AB6               	incf	___awdiv@divisor,f
  1650  00C9  1903               	skipnz
  1651  00CA  0AB7               	incf	___awdiv@divisor+1,f
  1652  00CB  01BB               	clrf	___awdiv@sign
  1653  00CC  0ABB               	incf	___awdiv@sign,f
  1654  00CD                     l3076:	
  1655  00CD  1FB9               	btfss	___awdiv@dividend+1,7
  1656  00CE  28D6               	goto	l3082
  1657  00CF  09B8               	comf	___awdiv@dividend,f
  1658  00D0  09B9               	comf	___awdiv@dividend+1,f
  1659  00D1  0AB8               	incf	___awdiv@dividend,f
  1660  00D2  1903               	skipnz
  1661  00D3  0AB9               	incf	___awdiv@dividend+1,f
  1662  00D4  3001               	movlw	1
  1663  00D5  06BB               	xorwf	___awdiv@sign,f
  1664  00D6                     l3082:	
  1665  00D6  01BC               	clrf	___awdiv@quotient
  1666  00D7  01BD               	clrf	___awdiv@quotient+1
  1667  00D8  0836               	movf	___awdiv@divisor,w
  1668  00D9  0437               	iorwf	___awdiv@divisor+1,w
  1669  00DA  1903               	btfsc	3,2
  1670  00DB  28FB               	goto	l3104
  1671  00DC  01BA               	clrf	___awdiv@counter
  1672  00DD                     L2:	
  1673  00DD  0ABA               	incf	___awdiv@counter,f
  1674  00DE  1BB7               	btfsc	___awdiv@divisor+1,7
  1675  00DF  28E4               	goto	l3092
  1676  00E0  1003               	clrc
  1677  00E1  0DB6               	rlf	___awdiv@divisor,f
  1678  00E2  0DB7               	rlf	___awdiv@divisor+1,f
  1679  00E3  28DD               	goto	L2
  1680  00E4                     l3092:	
  1681  00E4  1003               	clrc
  1682  00E5  0DBC               	rlf	___awdiv@quotient,f
  1683  00E6  0DBD               	rlf	___awdiv@quotient+1,f
  1684  00E7  0837               	movf	___awdiv@divisor+1,w
  1685  00E8  0239               	subwf	___awdiv@dividend+1,w
  1686  00E9  1D03               	skipz
  1687  00EA  28ED               	goto	u935
  1688  00EB  0836               	movf	___awdiv@divisor,w
  1689  00EC  0238               	subwf	___awdiv@dividend,w
  1690  00ED                     u935:	
  1691  00ED  1C03               	skipc
  1692  00EE  28F7               	goto	L3
  1693  00EF  0836               	movf	___awdiv@divisor,w
  1694  00F0  02B8               	subwf	___awdiv@dividend,f
  1695  00F1  0837               	movf	___awdiv@divisor+1,w
  1696  00F2  1C03               	skipc
  1697  00F3  03B9               	decf	___awdiv@dividend+1,f
  1698  00F4  02B9               	subwf	___awdiv@dividend+1,f
  1699  00F5  143C               	bsf	___awdiv@quotient,0
  1700  00F6  1003               	clrc
  1701  00F7                     L3:	
  1702  00F7  0CB7               	rrf	___awdiv@divisor+1,f
  1703  00F8  0CB6               	rrf	___awdiv@divisor,f
  1704  00F9  0BBA               	decfsz	___awdiv@counter,f
  1705  00FA  28E4               	goto	l3092
  1706  00FB                     l3104:	
  1707  00FB  083B               	movf	___awdiv@sign,w
  1708  00FC  1903               	btfsc	3,2
  1709  00FD  2903               	goto	l3108
  1710  00FE  09BC               	comf	___awdiv@quotient,f
  1711  00FF  09BD               	comf	___awdiv@quotient+1,f
  1712  0100  0ABC               	incf	___awdiv@quotient,f
  1713  0101  1903               	skipnz
  1714  0102  0ABD               	incf	___awdiv@quotient+1,f
  1715  0103                     l3108:	
  1716  0103  083D               	movf	___awdiv@quotient+1,w
  1717  0104  00B7               	movwf	?___awdiv+1
  1718  0105  083C               	movf	___awdiv@quotient,w
  1719  0106  00B6               	movwf	?___awdiv
  1720  0107  0008               	return
  1721  0108                     __end_of___awdiv:	
  1722                           
  1723                           	psect	text12
  1724  014B                     __ptext12:	
  1725 ;; *************** function _key_driver *****************
  1726 ;; Defined at:
  1727 ;;		line 9 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  key             1    wreg     PTR struct Keys
  1730 ;;		 -> key1(7), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  key             1    2[BANK0 ] PTR struct Keys
  1733 ;;		 -> key1(7), 
  1734 ;;  key_read        1    1[BANK0 ] unsigned char 
  1735 ;;  key_return      1    0[BANK0 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      unsigned char 
  1738 ;; Registers used:
  1739 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1740 ;; Tracked objects:
  1741 ;;		On entry : 300/0
  1742 ;;		On exit  : B00/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1
  1745 ;;      Params:         0       0       0
  1746 ;;      Locals:         0       3       0
  1747 ;;      Temps:          0       0       0
  1748 ;;      Totals:         0       3       0
  1749 ;;Total ram usage:        3 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    3
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_checkKeys
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function _key_driver
  1761  014B                     _key_driver:	
  1762                           
  1763                           ;incstack = 0
  1764                           ; Regs used in _key_driver: [wreg-fsr0h+status,2+status,0]
  1765                           ;key_driver@key stored from wreg
  1766  014B  00B8               	movwf	key_driver@key
  1767                           
  1768                           ;scankey.c: 12: unsigned char key_return = 0;
  1769  014C  01B6               	clrf	key_driver@key_return
  1770                           
  1771                           ;scankey.c: 13: unsigned char key_read = key->key_input;
  1772  014D  3E04               	addlw	4
  1773  014E  0084               	movwf	4
  1774  014F  1383               	bcf	3,7	;select IRP bank0
  1775  0150  0800               	movf	0,w
  1776  0151  00B7               	movwf	key_driver@key_read
  1777                           
  1778                           ;scankey.c: 15: switch (key->key_state_buffer1) {
  1779  0152  297E               	goto	l3176
  1780  0153                     l3146:	
  1781                           
  1782                           ;scankey.c: 17: if (key_read == 0) {
  1783  0153  0837               	movf	key_driver@key_read,w
  1784  0154  1D03               	btfss	3,2
  1785  0155  298B               	goto	l3178
  1786                           
  1787                           ;scankey.c: 18: key->key_state_buffer1 = 1;
  1788  0156  0A38               	incf	key_driver@key,w
  1789  0157  0084               	movwf	4
  1790  0158  0180               	clrf	0
  1791  0159  0A80               	incf	0,f
  1792  015A  298B               	goto	l3178
  1793  015B                     l3150:	
  1794                           
  1795                           ;scankey.c: 25: if (key_read == 0) {
  1796  015B  0837               	movf	key_driver@key_read,w
  1797  015C  1D03               	btfss	3,2
  1798  015D  297A               	goto	l3172
  1799                           
  1800                           ;scankey.c: 26: key->key_timer_cnt1 = 0;
  1801  015E  0838               	movf	key_driver@key,w
  1802  015F  0084               	movwf	4
  1803  0160  0180               	clrf	0
  1804                           
  1805                           ;scankey.c: 27: key->key_state_buffer1 = 2;
  1806  0161  0A38               	incf	key_driver@key,w
  1807  0162  0084               	movwf	4
  1808  0163  3002               	movlw	2
  1809  0164  2976               	goto	L4
  1810  0165                     l3158:	
  1811                           ;scankey.c: 32: key->key_state_buffer1 = 0;
  1812                           
  1813                           ;scankey.c: 31: } else {
  1814                           
  1815                           
  1816                           ;scankey.c: 39: if (key_read == 1) {
  1817  0165  0B37               	decfsz	key_driver@key_read,w
  1818  0166  296A               	goto	l3164
  1819                           
  1820                           ;scankey.c: 40: key_return = 1;
  1821  0167  01B6               	clrf	key_driver@key_return
  1822  0168  0AB6               	incf	key_driver@key_return,f
  1823  0169  297A               	goto	l3172
  1824  016A                     l3164:	
  1825                           ;scankey.c: 42: } else if (++(key->key_timer_cnt1) >= 100)
  1826                           
  1827                           ;scankey.c: 41: key->key_state_buffer1 = 0;
  1828                           
  1829  016A  0838               	movf	key_driver@key,w
  1830  016B  0084               	movwf	4
  1831  016C  3064               	movlw	100
  1832  016D  0A80               	incf	0,f
  1833  016E  0200               	subwf	0,w
  1834  016F  1C03               	skipc
  1835  0170  298B               	goto	l3178
  1836                           
  1837                           ;scankey.c: 43: {
  1838                           ;scankey.c: 44: key_return = 3;
  1839  0171  3003               	movlw	3
  1840  0172  00B6               	movwf	key_driver@key_return
  1841                           
  1842                           ;scankey.c: 45: key->key_state_buffer1 = 3;
  1843  0173  0A38               	incf	key_driver@key,w
  1844  0174  0084               	movwf	4
  1845  0175  3003               	movlw	3
  1846  0176                     L4:	
  1847  0176  0080               	movwf	0
  1848  0177  298B               	goto	l3178
  1849  0178                     l3170:	
  1850                           
  1851                           ;scankey.c: 51: if (key_read == 1)
  1852  0178  0B37               	decfsz	key_driver@key_read,w
  1853  0179  298B               	goto	l3178
  1854  017A                     l3172:	
  1855                           
  1856                           ;scankey.c: 52: {
  1857                           ;scankey.c: 53: key->key_state_buffer1 = 0;
  1858  017A  0A38               	incf	key_driver@key,w
  1859  017B  0084               	movwf	4
  1860  017C  0180               	clrf	0
  1861  017D  298B               	goto	l3178
  1862  017E                     l3176:	
  1863  017E  0A38               	incf	key_driver@key,w
  1864  017F  0084               	movwf	4
  1865  0180  0800               	movf	0,w
  1866                           
  1867                           ; Switch size 1, requested type "space"
  1868                           ; Number of cases is 4, Range of values is 0 to 3
  1869                           ; switch strategies available:
  1870                           ; Name         Instructions Cycles
  1871                           ; direct_byte           10     6 (fixed)
  1872                           ; simple_byte           13     7 (average)
  1873                           ; jumptable            260     6 (fixed)
  1874                           ;	Chosen strategy is direct_byte
  1875  0181  0084               	movwf	4
  1876  0182  3004               	movlw	4
  1877  0183  0204               	subwf	4,w
  1878  0184  1803               	skipnc
  1879  0185  298B               	goto	l3178
  1880  0186  3002               	movlw	high S3332
  1881  0187  008A               	movwf	10
  1882  0188  30EF               	movlw	low S3332
  1883  0189  0704               	addwf	4,w
  1884  018A  0082               	movwf	2
  1885  018B                     l3178:	
  1886                           
  1887                           ;scankey.c: 58: return key_return;
  1888  018B  0836               	movf	key_driver@key_return,w
  1889  018C  0008               	return
  1890  018D                     __end_of_key_driver:	
  1891                           
  1892                           	psect	swtext1
  1893  02EF                     __pswtext1:	
  1894  02EF                     S3332:	
  1895  02EF  2953               	ljmp	l3146
  1896  02F0  295B               	ljmp	l3150
  1897  02F1  2965               	ljmp	l3158
  1898  02F2  2978               	ljmp	l3170
  1899                           
  1900                           	psect	text13
  1901  02A1                     __ptext13:	
  1902 ;; *************** function _checkFan *****************
  1903 ;; Defined at:
  1904 ;;		line 138 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;		None
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 300/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1
  1918 ;;      Params:         0       0       0
  1919 ;;      Locals:         0       0       0
  1920 ;;      Temps:          0       0       0
  1921 ;;      Totals:         0       0       0
  1922 ;;Total ram usage:        0 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    3
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_checkKeys
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function _checkFan
  1934  02A1                     _checkFan:	
  1935  02A1                     l2754:	
  1936                           ;incstack = 0
  1937                           ; Regs used in _checkFan: [wreg]
  1938                           
  1939                           
  1940                           ;main.c: 139: TRISA&=~(1<<1);
  1941  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  1942  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  1943  02A3  1085               	bcf	5,1	;volatile
  1944                           
  1945                           ;main.c: 140: PORTA&=~(1<<1);
  1946  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1947  02A5  1085               	bcf	5,1	;volatile
  1948                           
  1949                           ;main.c: 142: TRISC&=~(1<<2);
  1950  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  1951  02A7  1107               	bcf	7,2	;volatile
  1952                           
  1953                           ;main.c: 143: PORTA|=(1<<2);
  1954  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1955  02A9  1505               	bsf	5,2	;volatile
  1956                           
  1957                           ;main.c: 144: T2CON = 0X04;
  1958  02AA  3004               	movlw	4
  1959  02AB  0092               	movwf	18	;volatile
  1960  02AC  0008               	return
  1961  02AD                     __end_of_checkFan:	
  1962                           
  1963                           	psect	text14
  1964  0221                     __ptext14:	
  1965 ;; *************** function _Init_Config *****************
  1966 ;; Defined at:
  1967 ;;		line 230 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : B00/0
  1978 ;;		On exit  : B00/100
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1
  1981 ;;      Params:         0       0       0
  1982 ;;      Locals:         0       0       0
  1983 ;;      Temps:          0       0       0
  1984 ;;      Totals:         0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    4
  1988 ;; This function calls:
  1989 ;;		_Init_GPIO
  1990 ;;		_Init_Interupt
  1991 ;;		_Init_PWM
  1992 ;;		_Init_System
  1993 ;;		_resetKey
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _Init_Config
  2001  0221                     _Init_Config:	
  2002                           
  2003                           ;main.c: 232: Init_System();
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2007  0221  22F3               	fcall	_Init_System
  2008                           
  2009                           ;main.c: 233: Init_GPIO();
  2010  0222  2260               	fcall	_Init_GPIO
  2011                           
  2012                           ;main.c: 234: Init_Interupt();
  2013  0223  22DD               	fcall	_Init_Interupt
  2014                           
  2015                           ;main.c: 235: Init_PWM();
  2016  0224  2293               	fcall	_Init_PWM
  2017                           
  2018                           ;main.c: 237: IOCB = 0x04;
  2019                           
  2020                           ;main.c: 238: TMR0 = 155;
  2021                           
  2022                           ;main.c: 239: TO = 0;
  2023                           
  2024                           ;main.c: 242: key1.key_index = 5;
  2025                           
  2026                           ;main.c: 244: resetKey(&key1);
  2027  0225  2228               	fcall	PL8	;call to abstracted procedure
  2028  0226  2273               	fcall	_resetKey
  2029                           
  2030                           ;main.c: 247: TRISA = 0;
  2031                           
  2032                           ;main.c: 248: TRISB = 0x7E;
  2033                           
  2034                           ;main.c: 249: TRISC = 0;
  2035  0227  2A31               	ljmp	PL14	;call to abstracted procedure
  2036  0228                     __end_of_Init_Config:	
  2037  0228                     PL8:	
  2038  0228  3004               	movlw	4
  2039  0229  0096               	movwf	22	;volatile
  2040  022A  309B               	movlw	155
  2041  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2042  022C  0081               	movwf	1	;volatile
  2043  022D  1203               	bcf	3,4	;volatile
  2044  022E  3005               	movlw	5
  2045  022F  00B5               	movwf	_key1+6
  2046  0230  342F               	retlw	(low (_key1| 0))& (0+255)
  2047  0231                     __end_ofPL8:	
  2048  0231                     PL14:	
  2049  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2050  0232  0185               	clrf	5	;volatile
  2051  0233  307E               	movlw	126
  2052  0234  0086               	movwf	6	;volatile
  2053  0235  0187               	clrf	7	;volatile
  2054  0236  0008               	return
  2055  0237                     __end_ofPL14:	
  2056                           
  2057                           	psect	text15
  2058  0273                     __ptext15:	
  2059 ;; *************** function _resetKey *****************
  2060 ;; Defined at:
  2061 ;;		line 100 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  key             1    wreg     PTR struct Keys
  2064 ;;		 -> key1(7), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  key             1    4[COMMON] PTR struct Keys
  2067 ;;		 -> key1(7), 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2072 ;; Tracked objects:
  2073 ;;		On entry : 300/0
  2074 ;;		On exit  : B00/0
  2075 ;;		Unchanged: 300/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1
  2077 ;;      Params:         0       0       0
  2078 ;;      Locals:         1       0       0
  2079 ;;      Temps:          0       0       0
  2080 ;;      Totals:         1       0       0
  2081 ;;Total ram usage:        1 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    3
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_Init_Config
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _resetKey
  2093  0273                     _resetKey:	
  2094                           
  2095                           ;incstack = 0
  2096                           ; Regs used in _resetKey: [wreg-fsr0h+status,2+status,0]
  2097                           ;resetKey@key stored from wreg
  2098  0273  00F4               	movwf	resetKey@key
  2099                           
  2100                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2101  0274  3E03               	addlw	3
  2102  0275  0084               	movwf	4
  2103  0276  1383               	bcf	3,7	;select IRP bank0
  2104  0277  0180               	clrf	0
  2105  0278  0A74               	incf	resetKey@key,w
  2106  0279  0084               	movwf	4
  2107  027A  0180               	clrf	0
  2108  027B  0874               	movf	resetKey@key,w
  2109  027C  3E02               	addlw	2
  2110  027D  0084               	movwf	4
  2111  027E  0180               	clrf	0
  2112  027F  0874               	movf	resetKey@key,w
  2113  0280  0084               	movwf	4
  2114  0281  0180               	clrf	0
  2115  0282  0008               	return
  2116  0283                     __end_of_resetKey:	
  2117                           
  2118                           	psect	text16
  2119  02F3                     __ptext16:	
  2120 ;; *************** function _Init_System *****************
  2121 ;; Defined at:
  2122 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2
  2131 ;; Tracked objects:
  2132 ;;		On entry : B00/0
  2133 ;;		On exit  : 300/100
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1
  2136 ;;      Params:         0       0       0
  2137 ;;      Locals:         0       0       0
  2138 ;;      Temps:          0       0       0
  2139 ;;      Totals:         0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    3
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_Init_Config
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function _Init_System
  2152  02F3                     _Init_System:	
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in _Init_System: [wreg+status,2]
  2156  02F3  0000               	nop	;# 
  2157  02F4  0064               	clrwdt	;# 
  2158                           
  2159                           ;init.c: 6: INTCON = 0;
  2160                           
  2161                           ;init.c: 7: OSCCON = 0X71;
  2162                           
  2163                           ;init.c: 8: OPTION_REG = 0x00;
  2164  02F5  2AC5               	ljmp	PL10	;call to abstracted procedure
  2165  02F6                     __end_of_Init_System:	
  2166                           
  2167                           	psect	text17
  2168  0293                     __ptext17:	
  2169 ;; *************** function _Init_PWM *****************
  2170 ;; Defined at:
  2171 ;;		line 74 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2
  2180 ;; Tracked objects:
  2181 ;;		On entry : 300/0
  2182 ;;		On exit  : 300/100
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1
  2185 ;;      Params:         0       0       0
  2186 ;;      Locals:         0       0       0
  2187 ;;      Temps:          0       0       0
  2188 ;;      Totals:         0       0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    3
  2192 ;; This function calls:
  2193 ;;		Nothing
  2194 ;; This function is called by:
  2195 ;;		_closeFan
  2196 ;;		_Init_Config
  2197 ;; This function uses a non-reentrant model
  2198 ;;
  2199                           
  2200                           
  2201                           ;psect for function _Init_PWM
  2202  0293                     _Init_PWM:	
  2203                           
  2204                           ;main.c: 75: CCP1CON = 0x0F;
  2205                           
  2206                           ;incstack = 0
  2207                           ; Regs used in _Init_PWM: [wreg+status,2]
  2208                           
  2209                           ;main.c: 76: T2CON = 0;
  2210                           
  2211                           ;main.c: 77: PR2 = 7;
  2212                           
  2213                           ;main.c: 79: CCPR1L = 0;
  2214                           
  2215                           ;main.c: 80: TMR2IF = 0;
  2216                           
  2217                           ;main.c: 81: T2CON = 0;
  2218                           
  2219                           ;main.c: 83: TRISC&=~(1<<2);
  2220  0293  2A94               	ljmp	PL6	;call to abstracted procedure
  2221  0294                     __end_of_Init_PWM:	
  2222  0294                     PL6:	
  2223  0294  300F               	movlw	15
  2224  0295  0097               	movwf	23	;volatile
  2225  0296  0192               	clrf	18	;volatile
  2226  0297  3007               	movlw	7
  2227  0298  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0299  0092               	movwf	18	;volatile
  2229  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2230  029B  0195               	clrf	21	;volatile
  2231  029C  108C               	bcf	12,1	;volatile
  2232  029D  0192               	clrf	18	;volatile
  2233  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2234  029F  1107               	bcf	7,2	;volatile
  2235  02A0  0008               	return
  2236  02A1                     __end_ofPL6:	
  2237                           
  2238                           	psect	text18
  2239  02DD                     __ptext18:	
  2240 ;; *************** function _Init_Interupt *****************
  2241 ;; Defined at:
  2242 ;;		line 27 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      void 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2
  2251 ;; Tracked objects:
  2252 ;;		On entry : 300/100
  2253 ;;		On exit  : 300/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1
  2256 ;;      Params:         0       0       0
  2257 ;;      Locals:         0       0       0
  2258 ;;      Temps:          0       0       0
  2259 ;;      Totals:         0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    3
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_Init_Config
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _Init_Interupt
  2272  02DD                     _Init_Interupt:	
  2273                           
  2274                           ;init.c: 28: OPTION_REG = 0x00;
  2275                           
  2276                           ;incstack = 0
  2277                           ; Regs used in _Init_Interupt: [wreg+status,2]
  2278                           
  2279                           ;init.c: 29: TMR0 = 0;
  2280                           
  2281                           ;init.c: 30: INTCON = 0xE0;
  2282  02DD  2ADE               	ljmp	PL12	;call to abstracted procedure
  2283  02DE                     __end_of_Init_Interupt:	
  2284  02DE                     PL12:	
  2285  02DE  0181               	clrf	1	;volatile
  2286  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2287  02E0  0181               	clrf	1	;volatile
  2288  02E1  30E0               	movlw	224
  2289  02E2  008B               	movwf	11	;volatile
  2290  02E3  0008               	return
  2291  02E4                     __end_ofPL12:	
  2292                           
  2293                           	psect	text19
  2294  0260                     __ptext19:	
  2295 ;; *************** function _Init_GPIO *****************
  2296 ;; Defined at:
  2297 ;;		line 13 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2
  2306 ;; Tracked objects:
  2307 ;;		On entry : 300/100
  2308 ;;		On exit  : 300/100
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1
  2311 ;;      Params:         0       0       0
  2312 ;;      Locals:         0       0       0
  2313 ;;      Temps:          0       0       0
  2314 ;;      Totals:         0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    3
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_Init_Config
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _Init_GPIO
  2327  0260                     _Init_GPIO:	
  2328                           
  2329                           ;init.c: 14: TRISA = 0;
  2330                           
  2331                           ;incstack = 0
  2332                           ; Regs used in _Init_GPIO: [wreg+status,2]
  2333                           
  2334                           ;init.c: 15: TRISB = 0;
  2335                           
  2336                           ;init.c: 16: TRISC = 0;
  2337                           
  2338                           ;init.c: 17: WPUA = 0xFF;
  2339                           
  2340                           ;init.c: 18: WPUB = 0xFF;
  2341                           
  2342                           ;init.c: 19: WPUC = 0xFF;
  2343                           
  2344                           ;init.c: 20: PORTA = 0xFF;
  2345                           
  2346                           ;init.c: 21: PORTB = 0xFF;
  2347                           
  2348                           ;init.c: 22: PORTC = 0xFF;
  2349                           
  2350                           ;init.c: 23: IOCB = 0x00;
  2351  0260  2A61               	ljmp	PL2	;call to abstracted procedure
  2352  0261                     __end_of_Init_GPIO:	
  2353  0261                     PL2:	
  2354  0261  0185               	clrf	5	;volatile
  2355  0262  0186               	clrf	6	;volatile
  2356  0263  0187               	clrf	7	;volatile
  2357  0264  30FF               	movlw	255
  2358  0265  1703               	bsf	3,6	;RP1=1, select bank3
  2359  0266  008E               	movwf	14	;volatile
  2360  0267  1303               	bcf	3,6	;RP1=0, select bank1
  2361  0268  0095               	movwf	21	;volatile
  2362  0269  1703               	bsf	3,6	;RP1=1, select bank3
  2363  026A  008F               	movwf	15	;volatile
  2364  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2365  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2366  026D  0085               	movwf	5	;volatile
  2367  026E  0086               	movwf	6	;volatile
  2368  026F  0087               	movwf	7	;volatile
  2369  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2370  0271  0196               	clrf	22	;volatile
  2371  0272  0008               	return
  2372  0273                     __end_ofPL2:	
  2373                           
  2374                           	psect	text20
  2375  0237                     __ptext20:	
  2376 ;; *************** function _Timer0_Isr *****************
  2377 ;; Defined at:
  2378 ;;		line 297 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1
  2392 ;;      Params:         0       0       0
  2393 ;;      Locals:         0       0       0
  2394 ;;      Temps:          3       0       0
  2395 ;;      Totals:         3       0       0
  2396 ;;Total ram usage:        3 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    2
  2399 ;; This function calls:
  2400 ;;		i1_Init_Config
  2401 ;; This function is called by:
  2402 ;;		Interrupt level 1
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _Timer0_Isr
  2408  0237                     _Timer0_Isr:	
  2409                           
  2410                           ;main.c: 298: if (T0IF) {
  2411  0237  1D0B               	btfss	11,2	;volatile
  2412  0238  2A40               	goto	i1l3032
  2413                           
  2414                           ;main.c: 300: TMR0 += 155;
  2415  0239  309B               	movlw	155
  2416  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2417  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2418  023C  0781               	addwf	1,f	;volatile
  2419                           
  2420                           ;main.c: 303: T0IF = 0;
  2421  023D  110B               	bcf	11,2	;volatile
  2422                           
  2423                           ;main.c: 304: time0Flag = 1;
  2424  023E  01F7               	clrf	_time0Flag
  2425  023F  0AF7               	incf	_time0Flag,f
  2426  0240                     i1l3032:	
  2427                           
  2428                           ;main.c: 306: }
  2429                           ;main.c: 308: if (RBIF) {
  2430  0240  1C0B               	btfss	11,0	;volatile
  2431  0241  2A44               	goto	i1l1186
  2432                           
  2433                           ;main.c: 309: RBIF = 0;
  2434  0242  100B               	bcf	11,0	;volatile
  2435                           
  2436                           ;main.c: 310: Init_Config();
  2437  0243  22E4               	fcall	i1_Init_Config
  2438  0244                     i1l1186:	
  2439  0244  0873               	movf	??_Timer0_Isr+2,w
  2440  0245  008A               	movwf	10
  2441  0246  0872               	movf	??_Timer0_Isr+1,w
  2442  0247  0084               	movwf	4
  2443  0248  0E71               	swapf	??_Timer0_Isr^(0+-128),w
  2444  0249  0083               	movwf	3
  2445  024A  0EFE               	swapf	126,f
  2446  024B  0E7E               	swapf	126,w
  2447  024C  0009               	retfie
  2448  024D                     __end_of_Timer0_Isr:	
  2449                           
  2450                           	psect	intentry
  2451  0004                     __pintentry:	
  2452                           ;incstack = 0
  2453                           ; Regs used in _Timer0_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2454                           
  2455  0004                     interrupt_function:	
  2456  007E                     saved_w	set	btemp
  2457  0004  00FE               	movwf	btemp
  2458  0005  0E03               	swapf	3,w
  2459  0006  00F1               	movwf	??_Timer0_Isr
  2460  0007  0804               	movf	4,w
  2461  0008  00F2               	movwf	??_Timer0_Isr+1
  2462  0009  080A               	movf	10,w
  2463  000A  00F3               	movwf	??_Timer0_Isr+2
  2464  000B  2A37               	ljmp	_Timer0_Isr
  2465                           
  2466                           	psect	text21
  2467  02E4                     __ptext21:	
  2468 ;; *************** function i1_Init_Config *****************
  2469 ;; Defined at:
  2470 ;;		line 230 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : B00/100
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1
  2484 ;;      Params:         0       0       0
  2485 ;;      Locals:         0       0       0
  2486 ;;      Temps:          0       0       0
  2487 ;;      Totals:         0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    1
  2491 ;; This function calls:
  2492 ;;		i1_Init_GPIO
  2493 ;;		i1_Init_Interupt
  2494 ;;		i1_Init_PWM
  2495 ;;		i1_Init_System
  2496 ;;		i1_resetKey
  2497 ;; This function is called by:
  2498 ;;		_Timer0_Isr
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function i1_Init_Config
  2504  02E4                     i1_Init_Config:	
  2505                           
  2506                           ;main.c: 232: Init_System();
  2507                           
  2508                           ;incstack = 0
  2509                           ; Regs used in i1_Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2510  02E4  22C2               	fcall	i1_Init_System
  2511                           
  2512                           ;main.c: 233: Init_GPIO();
  2513  02E5  22F8               	fcall	i1_Init_GPIO
  2514                           
  2515                           ;main.c: 234: Init_Interupt();
  2516  02E6  22F7               	fcall	i1_Init_Interupt
  2517                           
  2518                           ;main.c: 235: Init_PWM();
  2519  02E7  22F6               	fcall	i1_Init_PWM
  2520                           
  2521                           ;main.c: 237: IOCB = 0x04;
  2522                           
  2523                           ;main.c: 238: TMR0 = 155;
  2524                           
  2525                           ;main.c: 239: TO = 0;
  2526                           
  2527                           ;main.c: 242: key1.key_index = 5;
  2528                           
  2529                           ;main.c: 244: resetKey(&key1);
  2530  02E8  2228               	fcall	PL8	;call to abstracted procedure
  2531  02E9  2283               	fcall	i1_resetKey
  2532                           
  2533                           ;main.c: 247: TRISA = 0;
  2534                           
  2535                           ;main.c: 248: TRISB = 0x7E;
  2536                           
  2537                           ;main.c: 249: TRISC = 0;
  2538  02EA  2A31               	ljmp	PL14	;call to abstracted procedure
  2539  02EB                     __end_ofi1_Init_Config:	
  2540                           
  2541                           	psect	text22
  2542  0283                     __ptext22:	
  2543 ;; *************** function i1_resetKey *****************
  2544 ;; Defined at:
  2545 ;;		line 100 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  key             1    wreg     PTR struct Keys
  2548 ;;		 -> key1(7), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  key             1    0[COMMON] PTR struct Keys
  2551 ;;		 -> key1(7), 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 300/0
  2558 ;;		On exit  : B00/0
  2559 ;;		Unchanged: 300/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1
  2561 ;;      Params:         0       0       0
  2562 ;;      Locals:         1       0       0
  2563 ;;      Temps:          0       0       0
  2564 ;;      Totals:         1       0       0
  2565 ;;Total ram usage:        1 bytes
  2566 ;; Hardware stack levels used:    1
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		i1_Init_Config
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function i1_resetKey
  2576  0283                     i1_resetKey:	
  2577                           
  2578                           ;incstack = 0
  2579                           ; Regs used in i1_resetKey: [wreg-fsr0h+status,2+status,0]
  2580                           ;i1resetKey@key stored from wreg
  2581  0283  00F0               	movwf	i1resetKey@key
  2582                           
  2583                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2584  0284  3E03               	addlw	3
  2585  0285  0084               	movwf	4
  2586  0286  1383               	bcf	3,7	;select IRP bank0
  2587  0287  0180               	clrf	0
  2588  0288  0A70               	incf	i1resetKey@key,w
  2589  0289  0084               	movwf	4
  2590  028A  0180               	clrf	0
  2591  028B  0870               	movf	i1resetKey@key,w
  2592  028C  3E02               	addlw	2
  2593  028D  0084               	movwf	4
  2594  028E  0180               	clrf	0
  2595  028F  0870               	movf	i1resetKey@key,w
  2596  0290  0084               	movwf	4
  2597  0291  0180               	clrf	0
  2598  0292  0008               	return
  2599  0293                     __end_ofi1_resetKey:	
  2600                           
  2601                           	psect	text23
  2602  02C2                     __ptext23:	
  2603 ;; *************** function i1_Init_System *****************
  2604 ;; Defined at:
  2605 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 300/100
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1
  2619 ;;      Params:         0       0       0
  2620 ;;      Locals:         0       0       0
  2621 ;;      Temps:          0       0       0
  2622 ;;      Totals:         0       0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		i1_Init_Config
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function i1_Init_System
  2634  02C2                     i1_Init_System:	
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in i1_Init_System: [wreg+status,2]
  2638  02C2  0000               	nop	;# 
  2639  02C3  0064               	clrwdt	;# 
  2640                           
  2641                           ;init.c: 6: INTCON = 0;
  2642                           
  2643                           ;init.c: 7: OSCCON = 0X71;
  2644                           
  2645                           ;init.c: 8: OPTION_REG = 0x00;
  2646  02C4  2AC5               	ljmp	PL10	;call to abstracted procedure
  2647  02C5                     __end_ofi1_Init_System:	
  2648  02C5                     PL10:	
  2649  02C5  018B               	clrf	11	;volatile
  2650  02C6  3071               	movlw	113
  2651  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2652  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2653  02C9  008F               	movwf	15	;volatile
  2654  02CA  0181               	clrf	1	;volatile
  2655  02CB  0008               	return
  2656  02CC                     __end_ofPL10:	
  2657                           
  2658                           	psect	text24
  2659  02F6                     __ptext24:	
  2660 ;; *************** function i1_Init_PWM *****************
  2661 ;; Defined at:
  2662 ;;		line 74 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2
  2671 ;; Tracked objects:
  2672 ;;		On entry : 300/0
  2673 ;;		On exit  : 300/100
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1
  2676 ;;      Params:         0       0       0
  2677 ;;      Locals:         0       0       0
  2678 ;;      Temps:          0       0       0
  2679 ;;      Totals:         0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		i1_Init_Config
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function i1_Init_PWM
  2691  02F6                     i1_Init_PWM:	
  2692                           
  2693                           ;main.c: 75: CCP1CON = 0x0F;
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in i1_Init_PWM: [wreg+status,2]
  2697                           
  2698                           ;main.c: 76: T2CON = 0;
  2699                           
  2700                           ;main.c: 77: PR2 = 7;
  2701                           
  2702                           ;main.c: 79: CCPR1L = 0;
  2703                           
  2704                           ;main.c: 80: TMR2IF = 0;
  2705                           
  2706                           ;main.c: 81: T2CON = 0;
  2707                           
  2708                           ;main.c: 83: TRISC&=~(1<<2);
  2709  02F6  2A94               	ljmp	PL6	;call to abstracted procedure
  2710  02F7                     __end_ofi1_Init_PWM:	
  2711                           
  2712                           	psect	text25
  2713  02F7                     __ptext25:	
  2714 ;; *************** function i1_Init_Interupt *****************
  2715 ;; Defined at:
  2716 ;;		line 27 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;		None
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2
  2725 ;; Tracked objects:
  2726 ;;		On entry : 300/100
  2727 ;;		On exit  : 300/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1
  2730 ;;      Params:         0       0       0
  2731 ;;      Locals:         0       0       0
  2732 ;;      Temps:          0       0       0
  2733 ;;      Totals:         0       0       0
  2734 ;;Total ram usage:        0 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		i1_Init_Config
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           
  2744                           ;psect for function i1_Init_Interupt
  2745  02F7                     i1_Init_Interupt:	
  2746                           
  2747                           ;init.c: 28: OPTION_REG = 0x00;
  2748                           
  2749                           ;incstack = 0
  2750                           ; Regs used in i1_Init_Interupt: [wreg+status,2]
  2751                           
  2752                           ;init.c: 29: TMR0 = 0;
  2753                           
  2754                           ;init.c: 30: INTCON = 0xE0;
  2755  02F7  2ADE               	ljmp	PL12	;call to abstracted procedure
  2756  02F8                     __end_ofi1_Init_Interupt:	
  2757                           
  2758                           	psect	text26
  2759  02F8                     __ptext26:	
  2760 ;; *************** function i1_Init_GPIO *****************
  2761 ;; Defined at:
  2762 ;;		line 13 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2
  2771 ;; Tracked objects:
  2772 ;;		On entry : 300/100
  2773 ;;		On exit  : 300/100
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1
  2776 ;;      Params:         0       0       0
  2777 ;;      Locals:         0       0       0
  2778 ;;      Temps:          0       0       0
  2779 ;;      Totals:         0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		i1_Init_Config
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function i1_Init_GPIO
  2791  02F8                     i1_Init_GPIO:	
  2792                           
  2793                           ;init.c: 14: TRISA = 0;
  2794                           
  2795                           ;incstack = 0
  2796                           ; Regs used in i1_Init_GPIO: [wreg+status,2]
  2797                           
  2798                           ;init.c: 15: TRISB = 0;
  2799                           
  2800                           ;init.c: 16: TRISC = 0;
  2801                           
  2802                           ;init.c: 17: WPUA = 0xFF;
  2803                           
  2804                           ;init.c: 18: WPUB = 0xFF;
  2805                           
  2806                           ;init.c: 19: WPUC = 0xFF;
  2807                           
  2808                           ;init.c: 20: PORTA = 0xFF;
  2809                           
  2810                           ;init.c: 21: PORTB = 0xFF;
  2811                           
  2812                           ;init.c: 22: PORTC = 0xFF;
  2813                           
  2814                           ;init.c: 23: IOCB = 0x00;
  2815  02F8  2A61               	ljmp	PL2	;call to abstracted procedure
  2816  02F9                     __end_ofi1_Init_GPIO:	
  2817  007E                     btemp	set	126	;btemp
  2818  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      8      30
    BANK1            80      0       0

Pointer List with Targets:

    resetKey@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 

    key_driver@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 

    sacnKeyInput@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 


Critical Paths under _main in COMMON

    _main->_checkUsbStatus
    _scanKeys->_sacnKeyInput
    _checkKeys->_setFanLevel
    _Init_Config->_resetKey

Critical Paths under _Timer0_Isr in COMMON

    i1_Init_Config->i1_resetKey

Critical Paths under _main in BANK0

    _scanKeys->_sacnKeyInput
    _readVrefADC->_ADC_Sample
    _setFanLevel->___awdiv

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2000
                        _Init_Config
                          _checkKeys
                     _checkUsbStatus
                        _readVrefADC
                           _scanKeys
 ---------------------------------------------------------------------------------
 (1) _scanKeys                                             0     0      0     154
                       _sacnKeyInput
 ---------------------------------------------------------------------------------
 (2) _sacnKeyInput                                         3     3      0     154
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _readVrefADC                                          0     0      0     458
                         _ADC_Sample
                           _DelayXms
 ---------------------------------------------------------------------------------
 (2) _DelayXms                                             3     3      0     167
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Sample                                           8     8      0     291
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _checkUsbStatus                                       2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _checkKeys                                            0     0      0    1273
                           _checkFan
                         _key_driver
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _setFanLevel                                          4     4      0     736
                                              4 COMMON     2     2      0
                            ___awdiv
                           _closeFan
 ---------------------------------------------------------------------------------
 (3) _closeFan                                             0     0      0       0
                           _Init_PWM
                         _Sleep_Mode
 ---------------------------------------------------------------------------------
 (4) _Sleep_Mode                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     606
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _key_driver                                           3     3      0     537
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _checkFan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Config                                          0     0      0     115
                          _Init_GPIO
                      _Init_Interupt
                           _Init_PWM
                        _Init_System
                           _resetKey
 ---------------------------------------------------------------------------------
 (2) _resetKey                                             1     1      0     115
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Interupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_Isr                                           3     3      0      88
                                              1 COMMON     3     3      0
                      i1_Init_Config
 ---------------------------------------------------------------------------------
 (6) i1_Init_Config                                        0     0      0      88
                        i1_Init_GPIO
                    i1_Init_Interupt
                         i1_Init_PWM
                      i1_Init_System
                         i1_resetKey
 ---------------------------------------------------------------------------------
 (7) i1_resetKey                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_Init_System                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_PWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_Interupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_GPIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Config
     _Init_GPIO
     _Init_Interupt
     _Init_PWM
     _Init_System
     _resetKey
   _checkKeys
     _checkFan
     _key_driver
     _setFanLevel
       ___awdiv
       _closeFan
         _Init_PWM
         _Sleep_Mode
   _checkUsbStatus
   _readVrefADC
     _ADC_Sample
     _DelayXms
   _scanKeys
     _sacnKeyInput

 _Timer0_Isr (ROOT)
   i1_Init_Config
     i1_Init_GPIO
     i1_Init_Interupt
     i1_Init_PWM
     i1_Init_System
     i1_resetKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28       8        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 14 18:31:53 2020

         ??i1_Init_System 0070                         pc 0002                        PL2 0261  
                      PL4 00AF                        PL6 0294                        PL8 0228  
                      _TO 001C              ___awdiv@sign 003B                        fsr 0004  
                     PL10 02C5                       PL12 02DE                       PL14 0231  
                     PL16 00BE                       _GIE 005F                       _PR2 0092  
                     u935 00ED                       u994 0211                       u995 020F  
     __size_of_ADC_Sample 0096                       fsr0 0004                       indf 0000  
                    S3332 02EF                      l1124 0128                      l1145 01C5  
                    l1158 0256                      l3104 00FB                      l3130 01AE  
                    l3210 0057                      l3108 0103                      l3132 01B1  
                    l3124 01A8                      l3116 0193                      l3212 005F  
                    l3150 015B                      l3134 01B4                      l3206 004D  
                    l3230 02AF                      l3128 01AD                      l3240 02B4  
                    l3170 0178                      l3146 0153                      l3082 00D6  
                    l3138 01B7                      l3172 017A                      l3164 016A  
                    l3092 00E4                      l3076 00CD                      l1741 0063  
                    l3158 0165                      l3262 025A                      l1735 002F  
                    l3176 017E                      l3178 018B                      l2626 01E5  
                    l2644 02CC                      l3268 025B                      l2910 010D  
                    l3198 0034                      l3278 01C7                      l3288 01D0  
                    l2754 02A1                      l3298 01DD                      l2918 011F  
                    _T0IF 005A                      u1105 005D                      u1155 0099  
                    _IOCB 0096                      u1095 0053                      _RBIE 005B  
                    _RBIF 0058                      _TMR0 0001    __end_of_checkUsbStatus 014B  
                    _WPUA 018E                      _WPUB 0095                      _WPUC 018F  
                    _key1 002F                      _main 01C6                      btemp 007E  
              i1_resetKey 0283                      start 000C             ??_Init_Config 0075  
           ??_Init_System 0074             _Init_Interupt 02DD                     ?_main 0070  
         __end_of___awdiv 0108           ___awdiv@divisor 0036                     _T2CON 0012  
            ?_readVrefADC 0070        key_driver@key_read 0037           ___awdiv@counter 003A  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
             ?i1_Init_PWM 0070                     pclath 000A           ?_checkUsbStatus 0070  
                   status 0003                     wtemp0 007E          __end_of_DelayXms 02B8  
            ?_setFanLevel 0070           __initialization 000D              __end_of_main 01E5  
        __end_of_Init_PWM 0294            ?_Init_Interupt 0070       __end_of_Init_Config 0228  
                  ??_main 0076       __end_of_Init_System 02F6                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ADRESL 009E  
                  _CCPR1L 0015          ___awdiv@dividend 0038                    _GODONE 00F9  
                  i1l3032 0240                    i1l1186 0244                    _INTCON 000B  
           ?_sacnKeyInput 0070        __size_of_Init_GPIO 0001                    _OSCCON 008F  
                  _TMR2IF 0061              ??_ADC_Sample 0036          __end_of_checkFan 02AD  
             ?i1_resetKey 0070                _Sleep_Mode 01E5                _Timer0_Isr 0237  
        __end_of_closeFan 02D5                 ??___awdiv 0074       __size_ofi1_Init_PWM 0001  
            ?i1_Init_GPIO 0070          __end_of_scanKeys 02C2          ___awdiv@quotient 003C  
        __end_of_resetKey 0283              __pdataCOMMON 0078        __end_of_ADC_Sample 00AF  
         i1_Init_Interupt 02F7                    saved_w 007E            ??_sacnKeyInput 0074  
 __end_of__initialization 0017               _Init_Config 0221            __pcstackCOMMON 0070  
         ??_Init_Interupt 0074        __size_of_checkKeys 0013               _Init_System 02F3  
              __end_ofPL2 0273                __end_ofPL4 00BE                __end_ofPL6 02A1  
              __end_ofPL8 0231         __end_of_Init_GPIO 0261       __size_ofi1_resetKey 0010  
               ?_DelayXms 0070      __size_of_readVrefADC 0004                __pbssBANK0 0020  
               ?_Init_PWM 0070               ?_Sleep_Mode 0070               ?_Timer0_Isr 0070  
   __end_ofi1_Init_Config 02EB                __pmaintext 01C6      __size_of_setFanLevel 0039  
              __pintentry 0004                   _CCP1CON 0017     __end_ofi1_Init_System 02C5  
 __end_ofi1_Init_Interupt 02F8                 ?_checkFan 0070      key_driver@key_return 0036  
              ??_DelayXms 0074          ??_checkUsbStatus 0074                 ?_closeFan 0070  
            ??i1_Init_PWM 0070         __end_of_checkKeys 0260                ??_Init_PWM 0074  
               ?_scanKeys 0070                 ?_resetKey 0070               resetKey@key 0074  
         ADC_Sample@admax 0024           ADC_Sample@admin 0026           ADC_Sample@adsum 0020  
                 ___awdiv 00C3                _key_driver 014B      __end_of_sacnKeyInput 0221  
      __end_ofi1_Init_PWM 02F7                   __ptext1 02B8                   __ptext2 0204  
                 __ptext3 02EB                   __ptext4 02AD                   __ptext5 0019  
                 __ptext6 0108                   __ptext7 024D                   __ptext8 018D  
                 __ptext9 02CC      __size_ofi1_Init_GPIO 0001                ??_checkFan 0074  
     __size_of_Sleep_Mode 001F       __size_of_Timer0_Isr 0016                ??_closeFan 0074  
                 clrloop0 02D6      end_of_initialization 0017                 DelayXms@i 0037  
               DelayXms@j 0038                 DelayXms@x 0036                ??_scanKeys 0076  
            ??i1_resetKey 0070                ??_resetKey 0074           sacnKeyInput@key 0036  
        ?i1_Init_Interupt 0070        __end_ofi1_resetKey 0293              ?_Init_Config 0070  
             ?_key_driver 0070              ?_Init_System 0070          setFanLevel@level 0074  
           __pidataCOMMON 0000               __end_ofPL10 02CC               __end_ofPL12 02E4  
             __end_ofPL14 0237               __end_ofPL16 00C3       start_initialization 000D  
               _Init_GPIO 0260         __size_of_DelayXms 000B         __size_of_Init_PWM 0001  
            ??_Sleep_Mode 0074              ??_Timer0_Isr 0071     __size_of_sacnKeyInput 001D  
       ADC_Sample@ad_temp 003C     __end_of_Init_Interupt 02DE         ADC_Sample@adtimes 002E  
           ??_readVrefADC 0074               __pbssCOMMON 0076                ?_Init_GPIO 0070  
               ___latbits 0000             __pcstackBANK0 0036         __size_of_checkFan 000C  
      __end_of_Sleep_Mode 0204        __end_of_Timer0_Isr 024D       __size_of_key_driver 0042  
       __size_of_closeFan 0009              _sacnKeyInput 0204              _currentLevel 0079  
               _checkKeys 024D             ??_setFanLevel 0074         __size_of_scanKeys 000A  
                ?___awdiv 0036         __size_of_resetKey 0010                 __pswtext1 02EF  
               _count10Ms 0028                 _countTime 002A            ADC_Sample@adch 003A  
  __size_ofi1_Init_Config 0007       __end_of_readVrefADC 02EF               ADC_Sample@i 003B  
  __size_ofi1_Init_System 0003         interrupt_function 0004                ?_checkKeys 0070  
               _time0Flag 0077                 clear_ram0 02D5      __size_of_Init_Config 0007  
    setFanLevel@tempLevel 0075             ??i1_Init_GPIO 0070       __end_of_setFanLevel 01C6  
    __size_of_Init_System 0003               ??_Init_GPIO 0074                  _DelayXms 02AD  
                _Init_PWM 0293                _ADC_Sample 0019   __size_of_checkUsbStatus 0043  
           i1_Init_Config 02E4              ??_key_driver 0074          __size_of___awdiv 0045  
           key_driver@key 0038             i1_Init_System 02C2               _readVrefADC 02EB  
                _checkFan 02A1                _FAN_STATUS 0078       __end_ofi1_Init_GPIO 02F9  
                _adresult 002C  __size_ofi1_Init_Interupt 0001                  __ptext10 01E5  
                __ptext11 00C3                  __ptext20 0237                  __ptext12 014B  
                __ptext21 02E4                  __ptext13 02A1                  __ptext22 0283  
                __ptext14 0221                  __ptext23 02C2                  __ptext15 0273  
                __ptext24 02F6                  __ptext16 02F3                  __ptext25 02F7  
                __ptext17 0293                  __ptext26 02F8                  __ptext18 02DD  
                __ptext19 0260                  _closeFan 02CC        __end_of_key_driver 018D  
           __size_of_main 001F               ??_checkKeys 0076                  _scanKeys 02B8  
                _lowVTime 0076                  _resetKey 0273               _setFanLevel 018D  
          ?i1_Init_Config 0070            ?i1_Init_System 0070                  intlevel1 0000  
             ?_ADC_Sample 0070             i1resetKey@key 0070               i1_Init_GPIO 02F8  
              _OPTION_REG 0081                i1_Init_PWM 02F6    __size_of_Init_Interupt 0001  
       ??i1_Init_Interupt 0070            _checkUsbStatus 0108           ??i1_Init_Config 0071  
