

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 15 15:06:56 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1711C
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	swtext1,local,class=CONST,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	pa_nodes0,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMMON
    80  0000                     __pidataCOMMON:	
    81  001F                     _ADCON0	set	31
    82  001E                     _ADRESH	set	30
    83  0017                     _CCP1CON	set	23
    84  0015                     _CCPR1L	set	21
    85  0012                     _T2CON	set	18
    86  000B                     _INTCON	set	11
    87  0007                     _PORTC	set	7
    88  0006                     _PORTB	set	6
    89  0005                     _PORTA	set	5
    90  0001                     _TMR0	set	1
    91  00F9                     _GODONE	set	249
    92  0061                     _TMR2IF	set	97
    93  005F                     _GIE	set	95
    94  005B                     _RBIE	set	91
    95  005A                     _T0IF	set	90
    96  0058                     _RBIF	set	88
    97  001C                     _TO	set	28
    98  009F                     _ADCON1	set	159
    99  009E                     _ADRESL	set	158
   100  0096                     _IOCB	set	150
   101  0095                     _WPUB	set	149
   102  0092                     _PR2	set	146
   103  008F                     _OSCCON	set	143
   104  0087                     _TRISC	set	135
   105  0086                     _TRISB	set	134
   106  0085                     _TRISA	set	133
   107  0081                     _OPTION_REG	set	129
   108  018F                     _WPUC	set	399
   109  018E                     _WPUA	set	398
   110                           
   111                           	psect	cinit
   112  000D                     start_initialization:	
   113                           ; #config settings
   114                           
   115  000D                     __initialization:	
   116                           
   117                           ;initializer for _FAN_STATUS
   118  000D  3001               	movlw	1
   119  000E  00F8               	movwf	__pdataCOMMON& (0+127)
   120                           
   121                           ;initializer for _currentLevel
   122  000F  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   123  0010  3020               	movlw	low __pbssBANK0
   124                           
   125                           ; Clear objects allocated to BANK0
   126  0011  1383               	bcf	3,7	;select IRP bank0
   127  0012  0084               	movwf	4
   128  0013  3036               	movlw	low (__pbssBANK0+22)
   129  0014  22E0               	fcall	clear_ram0
   130                           
   131                           ; Clear objects allocated to COMMON
   132  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   133  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   134  0017                     end_of_initialization:	
   135                           ;End of C runtime variable initialization code
   136                           
   137  0017                     __end_of__initialization:	
   138  0017  0183               	clrf	3
   139  0018  29C2               	ljmp	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMMON
   142  0076                     __pbssCOMMON:	
   143  0076                     _lowVTime:	
   144  0076                     	ds	1
   145  0077                     _time0Flag:	
   146  0077                     	ds	1
   147                           
   148                           	psect	dataCOMMON
   149  0078                     __pdataCOMMON:	
   150  0078                     _FAN_STATUS:	
   151  0078                     	ds	1
   152  0079                     _currentLevel:	
   153  0079                     	ds	1
   154                           
   155                           	psect	bssBANK0
   156  0020                     __pbssBANK0:	
   157  0020                     ADC_Sample@adsum:	
   158  0020                     	ds	4
   159  0024                     ADC_Sample@admax:	
   160  0024                     	ds	2
   161  0026                     ADC_Sample@admin:	
   162  0026                     	ds	2
   163  0028                     _count10Ms:	
   164  0028                     	ds	2
   165  002A                     _countTime:	
   166  002A                     	ds	2
   167  002C                     _adresult:	
   168  002C                     	ds	2
   169  002E                     ADC_Sample@adtimes:	
   170  002E                     	ds	1
   171  002F                     _key1:	
   172  002F                     	ds	7
   173                           
   174                           	psect	clrtext
   175  02E0                     clear_ram0:	
   176                           ;	Called with FSR containing the base address, and
   177                           ;	W with the last address+1
   178                           
   179  02E0  0064               	clrwdt	;clear the watchdog before getting into this loop
   180  02E1                     clrloop0:	
   181  02E1  0180               	clrf	0	;clear RAM location pointed to by FSR
   182  02E2  0A84               	incf	4,f	;increment pointer
   183  02E3  0604               	xorwf	4,w	;XOR with final address
   184  02E4  1903               	btfsc	3,2	;have we reached the end yet?
   185  02E5  3400               	retlw	0	;all done for this memory range, return
   186  02E6  0604               	xorwf	4,w	;XOR again to restore value
   187  02E7  2AE1               	goto	clrloop0	;do the next byte
   188                           
   189                           	psect	cstackCOMMON
   190  0070                     __pcstackCOMMON:	
   191  0070                     ?_closeFan:	
   192  0070                     ?_Sleep_Mode:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ?_sacnKeyInput:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0070                     ?_key_driver:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_Init_Config:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_resetKey:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_Init_System:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_Init_GPIO:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_Init_Interupt:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_checkUsbStatus:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_Init_PWM:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_setFanLevel:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_checkFan:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_scanKeys:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_checkKeys:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_main:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_Timer0_Isr:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?_ADC_Sample:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ?_DelayXms:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?i1_Init_System:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ??i1_Init_System:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?i1_Init_GPIO:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??i1_Init_GPIO:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?i1_Init_Interupt:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??i1_Init_Interupt:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?i1_Init_PWM:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ??i1_Init_PWM:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?i1_Init_Config:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?i1_resetKey:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??i1_resetKey:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_readVrefADC:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     i1resetKey@key:	
   283                           ; 2 bytes @ 0x0
   284                           
   285                           
   286                           ; 1 bytes @ 0x0
   287  0070                     	ds	1
   288  0071                     ??_Timer0_Isr:	
   289  0071                     ??i1_Init_Config:	
   290                           ; 1 bytes @ 0x1
   291                           
   292                           
   293                           ; 1 bytes @ 0x1
   294  0071                     	ds	3
   295  0074                     ??_closeFan:	
   296  0074                     ??_Sleep_Mode:	
   297                           ; 1 bytes @ 0x4
   298                           
   299  0074                     ??_sacnKeyInput:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     ??_key_driver:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0074                     ??_readVrefADC:	
   306                           ; 1 bytes @ 0x4
   307                           
   308  0074                     ??_resetKey:	
   309                           ; 1 bytes @ 0x4
   310                           
   311  0074                     ??_Init_System:	
   312                           ; 1 bytes @ 0x4
   313                           
   314  0074                     ??_Init_GPIO:	
   315                           ; 1 bytes @ 0x4
   316                           
   317  0074                     ??_Init_Interupt:	
   318                           ; 1 bytes @ 0x4
   319                           
   320  0074                     ??_Init_PWM:	
   321                           ; 1 bytes @ 0x4
   322                           
   323  0074                     ??_checkFan:	
   324                           ; 1 bytes @ 0x4
   325                           
   326  0074                     ??_DelayXms:	
   327                           ; 1 bytes @ 0x4
   328                           
   329  0074                     ??___awdiv:	
   330                           ; 1 bytes @ 0x4
   331                           
   332  0074                     resetKey@key:	
   333                           ; 1 bytes @ 0x4
   334                           
   335                           
   336                           ; 1 bytes @ 0x4
   337  0074                     	ds	1
   338  0075                     ??_Init_Config:	
   339  0075                     ??_setFanLevel:	
   340                           ; 1 bytes @ 0x5
   341                           
   342  0075                     ??_checkKeys:	
   343                           ; 1 bytes @ 0x5
   344                           
   345                           
   346                           ; 1 bytes @ 0x5
   347  0075                     	ds	1
   348  0076                     ??_scanKeys:	
   349                           
   350                           	psect	cstackBANK0
   351  0036                     __pcstackBANK0:	
   352                           ; 1 bytes @ 0x6
   353                           
   354  0036                     ??_checkUsbStatus:	
   355  0036                     ??_ADC_Sample:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0036                     ?___awdiv:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0036                     DelayXms@x:	
   362                           ; 2 bytes @ 0x0
   363                           
   364  0036                     sacnKeyInput@key:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0036                     key_driver@key_return:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0036                     ___awdiv@divisor:	
   371                           ; 1 bytes @ 0x0
   372                           
   373                           
   374                           ; 2 bytes @ 0x0
   375  0036                     	ds	1
   376  0037                     DelayXms@i:	
   377  0037                     key_driver@key_read:	
   378                           ; 1 bytes @ 0x1
   379                           
   380                           
   381                           ; 1 bytes @ 0x1
   382  0037                     	ds	1
   383  0038                     DelayXms@j:	
   384  0038                     key_driver@key:	
   385                           ; 1 bytes @ 0x2
   386                           
   387  0038                     ___awdiv@dividend:	
   388                           ; 1 bytes @ 0x2
   389                           
   390                           
   391                           ; 2 bytes @ 0x2
   392  0038                     	ds	2
   393  003A                     ADC_Sample@adch:	
   394  003A                     ___awdiv@counter:	
   395                           ; 1 bytes @ 0x4
   396                           
   397                           
   398                           ; 1 bytes @ 0x4
   399  003A                     	ds	1
   400  003B                     ADC_Sample@i:	
   401  003B                     ___awdiv@sign:	
   402                           ; 1 bytes @ 0x5
   403                           
   404                           
   405                           ; 1 bytes @ 0x5
   406  003B                     	ds	1
   407  003C                     ADC_Sample@ad_temp:	
   408  003C                     ___awdiv@quotient:	
   409                           ; 2 bytes @ 0x6
   410                           
   411                           
   412                           ; 2 bytes @ 0x6
   413  003C                     	ds	2
   414  003E                     setFanLevel@level:	
   415                           
   416                           ; 1 bytes @ 0x8
   417  003E                     	ds	1
   418  003F                     setFanLevel@tempLevel:	
   419                           
   420                           ; 1 bytes @ 0x9
   421  003F                     	ds	1
   422  0040                     ??_main:	
   423                           
   424                           ; 1 bytes @ 0xA
   425  0040                     	ds	1
   426                           
   427                           	psect	maintext
   428  01C2                     __pmaintext:	
   429 ;;
   430 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   431 ;;
   432 ;; *************** function _main *****************
   433 ;; Defined at:
   434 ;;		line 209 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : B00/0
   445 ;;		On exit  : 300/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1
   448 ;;      Params:         0       0       0
   449 ;;      Locals:         0       0       0
   450 ;;      Temps:          0       1       0
   451 ;;      Totals:         0       1       0
   452 ;;Total ram usage:        1 bytes
   453 ;; Hardware stack levels required when called:    7
   454 ;; This function calls:
   455 ;;		_Init_Config
   456 ;;		_Sleep_Mode
   457 ;;		_checkKeys
   458 ;;		_checkUsbStatus
   459 ;;		_readVrefADC
   460 ;;		_scanKeys
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           
   467                           ;psect for function _main
   468  01C2                     _main:	
   469                           
   470                           ;main.c: 210: if (((PORTB) >> (2)&1) == 0) {
   471                           
   472                           ;incstack = 0
   473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   474  01C2  0806               	movf	6,w	;volatile
   475  01C3  00C0               	movwf	??_main
   476  01C4  1003               	clrc
   477  01C5  0CC0               	rrf	??_main,f
   478  01C6  1003               	clrc
   479  01C7  0CC0               	rrf	??_main,f
   480  01C8  1840               	btfsc	??_main,0
   481  01C9  29CB               	goto	l3387
   482                           
   483                           ;main.c: 211: Sleep_Mode();
   484  01CA  21ED               	fcall	_Sleep_Mode
   485  01CB                     l3387:	
   486                           
   487                           ;main.c: 212: }
   488                           ;main.c: 214: Init_Config();
   489  01CB  222A               	fcall	_Init_Config
   490  01CC                     l3389:	
   491                           
   492                           ;main.c: 217: if (time0Flag) {
   493  01CC  0877               	movf	_time0Flag,w
   494  01CD  1903               	btfsc	3,2
   495  01CE  29D5               	goto	l3399
   496  01CF  0064               	clrwdt	;# 
   497                           
   498                           ;main.c: 219: time0Flag = 0;
   499  01D0  01F7               	clrf	_time0Flag
   500                           
   501                           ;main.c: 220: scanKeys();
   502  01D1  22F6               	fcall	_scanKeys
   503                           
   504                           ;main.c: 221: count10Ms++;
   505  01D2  0AA8               	incf	_count10Ms,f
   506  01D3  1903               	skipnz
   507  01D4  0AA9               	incf	_count10Ms+1,f
   508  01D5                     l3399:	
   509                           
   510                           ;main.c: 222: }
   511                           ;main.c: 225: if (count10Ms == 100) {
   512  01D5  3064               	movlw	100
   513  01D6  1283               	bcf	3,5	;RP0=0, select bank0
   514  01D7  0628               	xorwf	_count10Ms,w
   515  01D8  0429               	iorwf	_count10Ms+1,w
   516  01D9  1D03               	btfss	3,2
   517  01DA  29E5               	goto	l3411
   518                           
   519                           ;main.c: 226: countTime++;
   520  01DB  0AAA               	incf	_countTime,f
   521  01DC  1903               	skipnz
   522  01DD  0AAB               	incf	_countTime+1,f
   523                           
   524                           ;main.c: 227: checkKeys();
   525  01DE  2256               	fcall	_checkKeys
   526                           
   527                           ;main.c: 228: count10Ms = 0;
   528  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   529  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   530  01E1  01A8               	clrf	_count10Ms
   531  01E2  01A9               	clrf	_count10Ms+1
   532                           
   533                           ;main.c: 230: checkUsbStatus();
   534  01E3  214A               	fcall	_checkUsbStatus
   535                           
   536                           ;main.c: 232: readVrefADC();
   537  01E4  22FC               	fcall	_readVrefADC
   538  01E5                     l3411:	
   539                           
   540                           ;main.c: 233: }
   541                           ;main.c: 235: if (countTime == 101) {
   542  01E5  3065               	movlw	101
   543  01E6  062A               	xorwf	_countTime,w
   544  01E7  042B               	iorwf	_countTime+1,w
   545  01E8  1D03               	btfss	3,2
   546  01E9  29CC               	goto	l3389
   547                           
   548                           ;main.c: 236: countTime = 0;
   549  01EA  01AA               	clrf	_countTime
   550  01EB  01AB               	clrf	_countTime+1
   551  01EC  29CC               	goto	l3389
   552  01ED                     __end_of_main:	
   553                           
   554                           	psect	text1
   555  02F6                     __ptext1:	
   556 ;; *************** function _scanKeys *****************
   557 ;; Defined at:
   558 ;;		line 179 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/100
   569 ;;		On exit  : B00/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1
   572 ;;      Params:         0       0       0
   573 ;;      Locals:         0       0       0
   574 ;;      Temps:          0       0       0
   575 ;;      Totals:         0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    4
   579 ;; This function calls:
   580 ;;		_sacnKeyInput
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _scanKeys
   588  02F6                     _scanKeys:	
   589                           
   590                           ;main.c: 180: key1.key_addr_result = PORTB;
   591                           
   592                           ;incstack = 0
   593                           ; Regs used in _scanKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   594  02F6  1283               	bcf	3,5	;RP0=0, select bank0
   595  02F7  1303               	bcf	3,6	;RP1=0, select bank0
   596  02F8  0806               	movf	6,w	;volatile
   597  02F9  00B4               	movwf	_key1+5
   598                           
   599                           ;main.c: 181: sacnKeyInput(&key1);
   600  02FA  302F               	movlw	(low (_key1| 0))& (0+255)
   601  02FB  2A0D               	ljmp	_sacnKeyInput
   602  02FC                     __end_of_scanKeys:	
   603                           
   604                           	psect	text2
   605  020D                     __ptext2:	
   606 ;; *************** function _sacnKeyInput *****************
   607 ;; Defined at:
   608 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  key             1    wreg     PTR struct Keys
   611 ;;		 -> key1(7), 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  key             1    0[BANK0 ] PTR struct Keys
   614 ;;		 -> key1(7), 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 300/0
   621 ;;		On exit  : B00/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1
   624 ;;      Params:         0       0       0
   625 ;;      Locals:         0       1       0
   626 ;;      Temps:          2       0       0
   627 ;;      Totals:         2       1       0
   628 ;;Total ram usage:        3 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    3
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_scanKeys
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           
   639                           ;psect for function _sacnKeyInput
   640  020D                     _sacnKeyInput:	
   641                           
   642                           ;incstack = 0
   643                           ; Regs used in _sacnKeyInput: [wreg-fsr0h+status,2+status,0]
   644                           ;sacnKeyInput@key stored from wreg
   645  020D  00B6               	movwf	sacnKeyInput@key
   646                           
   647                           ;scankey.c: 4: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
   648  020E  3E05               	addlw	5
   649  020F  0084               	movwf	4
   650  0210  1383               	bcf	3,7	;select IRP bank0
   651  0211  0800               	movf	0,w
   652  0212  00F4               	movwf	??_sacnKeyInput
   653  0213  0836               	movf	sacnKeyInput@key,w
   654  0214  3E06               	addlw	6
   655  0215  0084               	movwf	4
   656  0216  0A00               	incf	0,w
   657  0217  2A1A               	goto	u1044
   658  0218                     u1045:	
   659  0218  1003               	clrc
   660  0219  0CF4               	rrf	??_sacnKeyInput,f
   661  021A                     u1044:	
   662  021A  3EFF               	addlw	-1
   663  021B  1D03               	skipz
   664  021C  2A18               	goto	u1045
   665  021D  0874               	movf	??_sacnKeyInput,w
   666  021E  00F5               	movwf	??_sacnKeyInput+1
   667  021F  0836               	movf	sacnKeyInput@key,w
   668  0220  3E04               	addlw	4
   669  0221  0084               	movwf	4
   670  0222  0875               	movf	??_sacnKeyInput+1,w
   671  0223  0080               	movwf	0
   672  0224  0836               	movf	sacnKeyInput@key,w
   673  0225  3E04               	addlw	4
   674  0226  0084               	movwf	4
   675  0227  3001               	movlw	1
   676  0228  0580               	andwf	0,f
   677  0229  0008               	return
   678  022A                     __end_of_sacnKeyInput:	
   679                           
   680                           	psect	text3
   681  02FC                     __ptext3:	
   682 ;; *************** function _readVrefADC *****************
   683 ;; Defined at:
   684 ;;		line 90 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  2  557[None  ] unsigned int 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 300/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1
   698 ;;      Params:         0       0       0
   699 ;;      Locals:         0       0       0
   700 ;;      Temps:          0       0       0
   701 ;;      Totals:         0       0       0
   702 ;;Total ram usage:        0 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    4
   705 ;; This function calls:
   706 ;;		_ADC_Sample
   707 ;;		_DelayXms
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           
   714                           ;psect for function _readVrefADC
   715  02FC                     _readVrefADC:	
   716                           
   717                           ;adc.c: 92: DelayXms(1);
   718                           
   719                           ;incstack = 0
   720                           ; Regs used in _readVrefADC: [wreg+status,2+status,0+pclath+cstack]
   721  02FC  3001               	movlw	1
   722  02FD  22BD               	fcall	_DelayXms
   723                           
   724                           ;adc.c: 93: ADC_Sample(15);
   725  02FE  300F               	movlw	15
   726  02FF  2819               	ljmp	_ADC_Sample
   727  0300                     __end_of_readVrefADC:	
   728                           
   729                           	psect	text4
   730  02BD                     __ptext4:	
   731 ;; *************** function _DelayXms *****************
   732 ;; Defined at:
   733 ;;		line 82 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  x               1    wreg     unsigned char 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  x               1    0[BANK0 ] unsigned char 
   738 ;;  j               1    2[BANK0 ] unsigned char 
   739 ;;  i               1    1[BANK0 ] unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 300/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1
   749 ;;      Params:         0       0       0
   750 ;;      Locals:         0       3       0
   751 ;;      Temps:          0       0       0
   752 ;;      Totals:         0       3       0
   753 ;;Total ram usage:        3 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    3
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_readVrefADC
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _DelayXms
   765  02BD                     _DelayXms:	
   766                           
   767                           ;incstack = 0
   768                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   769                           ;DelayXms@x stored from wreg
   770  02BD  1283               	bcf	3,5	;RP0=0, select bank0
   771  02BE  1303               	bcf	3,6	;RP1=0, select bank0
   772  02BF  00B6               	movwf	DelayXms@x
   773                           
   774                           ;adc.c: 84: unsigned char i,j;
   775                           ;adc.c: 85: for(i=x;i>0;i--)
   776  02C0  00B7               	movwf	DelayXms@i
   777  02C1                     l3293:	
   778  02C1  0837               	movf	DelayXms@i,w
   779  02C2  1903               	btfsc	3,2
   780  02C3  0008               	return
   781                           
   782                           ;adc.c: 86: for(j=153;j>0;j--);
   783  02C4  3099               	movlw	153
   784  02C5  00B8               	movwf	DelayXms@j
   785  02C6                     l3303:	
   786  02C6  0BB8               	decfsz	DelayXms@j,f
   787  02C7  2AC6               	goto	l3303
   788  02C8  03B7               	decf	DelayXms@i,f
   789  02C9  2AC1               	goto	l3293
   790  02CA                     __end_of_DelayXms:	
   791                           
   792                           	psect	text5
   793  0019                     __ptext5:	
   794 ;; *************** function _ADC_Sample *****************
   795 ;; Defined at:
   796 ;;		line 11 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  adch            1    wreg     unsigned char 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  adch            1    4[BANK0 ] unsigned char 
   801 ;;  ad_temp         2    6[BANK0 ] volatile unsigned int 
   802 ;;  i               1    5[BANK0 ] unsigned char 
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg, status,2, status,0
   807 ;; Tracked objects:
   808 ;;		On entry : 300/0
   809 ;;		On exit  : 300/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1
   812 ;;      Params:         0       0       0
   813 ;;      Locals:         0       4       0
   814 ;;      Temps:          0       4       0
   815 ;;      Totals:         0       8       0
   816 ;;Total ram usage:        8 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    3
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_readVrefADC
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _ADC_Sample
   828  0019                     _ADC_Sample:	
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _ADC_Sample: [wreg+status,2+status,0]
   832                           ;ADC_Sample@adch stored from wreg
   833  0019  00BA               	movwf	ADC_Sample@adch
   834                           
   835                           ;adc.c: 13: static unsigned long adsum = 0;
   836                           ;adc.c: 14: static unsigned int admin = 0,admax = 0;
   837                           ;adc.c: 15: static unsigned char adtimes = 0;
   838                           ;adc.c: 16: volatile unsigned int ad_temp;
   839                           ;adc.c: 17: ADCON1 = 0;
   840  001A  1683               	bsf	3,5	;RP0=1, select bank1
   841  001B  019F               	clrf	31	;volatile
   842                           
   843                           ;adc.c: 18: ADCON0 = 0X41 | (adch << 2);
   844  001C  1283               	bcf	3,5	;RP0=0, select bank0
   845  001D  083A               	movf	ADC_Sample@adch,w
   846  001E  00B6               	movwf	??_ADC_Sample
   847  001F  3001               	movlw	1
   848  0020  1003               	clrc
   849  0021                     L1:	
   850  0021  0DB6               	rlf	??_ADC_Sample,f
   851  0022  3EFF               	addlw	-1
   852  0023  1003               	clrc
   853  0024  1D03               	skipz
   854  0025  2821               	goto	L1
   855  0026  0D36               	rlf	??_ADC_Sample,w
   856  0027  3841               	iorlw	65
   857  0028  009F               	movwf	31	;volatile
   858  0029  0000               	nop	;# 
   859  002A  0000               	nop	;# 
   860                           
   861                           ;adc.c: 21: GODONE = 1;
   862  002B  1283               	bcf	3,5	;RP0=0, select bank0
   863  002C  1303               	bcf	3,6	;RP1=0, select bank0
   864  002D  149F               	bsf	31,1	;volatile
   865                           
   866                           ;adc.c: 23: unsigned char i = 0;
   867  002E  01BB               	clrf	ADC_Sample@i
   868  002F                     l1738:	
   869                           ;adc.c: 24: while(GODONE)
   870                           
   871  002F  1C9F               	btfss	31,1	;volatile
   872  0030  2834               	goto	l3261
   873                           
   874                           ;adc.c: 25: {
   875                           ;adc.c: 26: if(0 == (--i))
   876  0031  0BBB               	decfsz	ADC_Sample@i,f
   877  0032  282F               	goto	l1738
   878  0033  0008               	return
   879  0034                     l3261:	
   880                           
   881                           ;adc.c: 28: }
   882                           ;adc.c: 30: ad_temp=(ADRESH<<4)+(ADRESL>>4);
   883  0034  081E               	movf	30,w	;volatile
   884  0035  00BC               	movwf	ADC_Sample@ad_temp	;volatile
   885  0036  01BD               	clrf	ADC_Sample@ad_temp+1	;volatile
   886  0037  0EBC               	swapf	ADC_Sample@ad_temp,f	;volatile
   887  0038  0EBD               	swapf	ADC_Sample@ad_temp+1,f	;volatile
   888  0039  30F0               	movlw	240
   889  003A  05BD               	andwf	ADC_Sample@ad_temp+1,f	;volatile
   890  003B  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   891  003C  390F               	andlw	15
   892  003D  04BD               	iorwf	ADC_Sample@ad_temp+1,f	;volatile
   893  003E  30F0               	movlw	240
   894  003F  05BC               	andwf	ADC_Sample@ad_temp,f	;volatile
   895  0040  1683               	bsf	3,5	;RP0=1, select bank1
   896  0041  0E1E               	swapf	30,w	;volatile
   897  0042  390F               	andlw	15
   898  0043  1283               	bcf	3,5	;RP0=0, select bank0
   899  0044  07BC               	addwf	ADC_Sample@ad_temp,f	;volatile
   900  0045  1803               	skipnc
   901  0046  0ABD               	incf	ADC_Sample@ad_temp+1,f	;volatile
   902                           
   903                           ;adc.c: 32: if(0 == admax)
   904  0047  0824               	movf	ADC_Sample@admax,w
   905  0048  0425               	iorwf	ADC_Sample@admax+1,w
   906  0049  1D03               	btfss	3,2
   907  004A  284D               	goto	l3269
   908                           
   909                           ;adc.c: 33: {
   910                           ;adc.c: 34: admax = ad_temp;
   911  004B  20BE               	fcall	PL16	;call to abstracted procedure
   912  004C  285F               	goto	l3275
   913  004D                     l3269:	
   914                           ;adc.c: 36: }
   915                           
   916                           ;adc.c: 35: admin = ad_temp;
   917                           
   918                           
   919                           ;adc.c: 37: else if(ad_temp > admax)
   920  004D  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   921  004E  0225               	subwf	ADC_Sample@admax+1,w
   922  004F  1D03               	skipz
   923  0050  2853               	goto	u1145
   924  0051  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   925  0052  0224               	subwf	ADC_Sample@admax,w
   926  0053                     u1145:	
   927  0053  1803               	skipnc
   928  0054  2857               	goto	l3273
   929                           
   930                           ;adc.c: 38: admax = ad_temp;
   931  0055  20BE               	fcall	PL16	;call to abstracted procedure
   932  0056  2863               	goto	l1744
   933  0057                     l3273:	
   934                           
   935                           ;adc.c: 39: else if(ad_temp < admin)
   936  0057  0827               	movf	ADC_Sample@admin+1,w
   937  0058  023D               	subwf	ADC_Sample@ad_temp+1,w	;volatile
   938  0059  1D03               	skipz
   939  005A  285D               	goto	u1155
   940  005B  0826               	movf	ADC_Sample@admin,w
   941  005C  023C               	subwf	ADC_Sample@ad_temp,w	;volatile
   942  005D                     u1155:	
   943  005D  1803               	skipnc
   944  005E  2863               	goto	l1744
   945  005F                     l3275:	
   946                           
   947                           ;adc.c: 40: admin = ad_temp;
   948  005F  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   949  0060  00A7               	movwf	ADC_Sample@admin+1
   950  0061  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   951  0062  00A6               	movwf	ADC_Sample@admin
   952  0063                     l1744:	
   953                           
   954                           ;adc.c: 42: adsum += ad_temp;
   955  0063  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   956  0064  00B6               	movwf	??_ADC_Sample
   957  0065  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   958  0066  00B7               	movwf	??_ADC_Sample+1
   959  0067  01B8               	clrf	??_ADC_Sample+2
   960  0068  01B9               	clrf	??_ADC_Sample+3
   961  0069  0836               	movf	??_ADC_Sample,w
   962  006A  07A0               	addwf	ADC_Sample@adsum,f
   963  006B  0837               	movf	??_ADC_Sample+1,w
   964  006C  1103               	clrz
   965  006D  1803               	skipnc
   966  006E  3E01               	addlw	1
   967  006F  1D03               	btfss	3,2
   968  0070  07A1               	addwf	ADC_Sample@adsum+1,f
   969  0071  0838               	movf	??_ADC_Sample+2,w
   970  0072  1103               	clrz
   971  0073  1803               	skipnc
   972  0074  3E01               	addlw	1
   973  0075  1D03               	btfss	3,2
   974  0076  07A2               	addwf	ADC_Sample@adsum+2,f
   975  0077  0839               	movf	??_ADC_Sample+3,w
   976  0078  1103               	clrz
   977  0079  1803               	skipnc
   978  007A  3E01               	addlw	1
   979  007B  1D03               	btfss	3,2
   980  007C  07A3               	addwf	ADC_Sample@adsum+3,f
   981                           
   982                           ;adc.c: 43: if(++adtimes >= 10)
   983  007D  300A               	movlw	10
   984  007E  0AAE               	incf	ADC_Sample@adtimes,f
   985  007F  022E               	subwf	ADC_Sample@adtimes,w
   986  0080  1C03               	skipc
   987  0081  0008               	return
   988                           
   989                           ;adc.c: 44: {
   990                           ;adc.c: 45: adsum -= admax;
   991  0082  0824               	movf	ADC_Sample@admax,w
   992  0083  00B6               	movwf	??_ADC_Sample
   993  0084  0825               	movf	ADC_Sample@admax+1,w
   994  0085  20AF               	fcall	PL4	;call to abstracted procedure
   995  0086  1C03               	skipc
   996  0087  0F39               	incfsz	??_ADC_Sample+3,w
   997  0088  02A3               	subwf	ADC_Sample@adsum+3,f
   998                           
   999                           ;adc.c: 46: adsum -= admin;
  1000  0089  0826               	movf	ADC_Sample@admin,w
  1001  008A  00B6               	movwf	??_ADC_Sample
  1002  008B  0827               	movf	ADC_Sample@admin+1,w
  1003  008C  20AF               	fcall	PL4	;call to abstracted procedure
  1004  008D  1C03               	skipc
  1005  008E  0F39               	incfsz	??_ADC_Sample+3,w
  1006  008F  02A3               	subwf	ADC_Sample@adsum+3,f
  1007                           
  1008                           ;adc.c: 48: adresult = adsum >> 3;
  1009  0090  0820               	movf	ADC_Sample@adsum,w
  1010  0091  00B6               	movwf	??_ADC_Sample
  1011  0092  0821               	movf	ADC_Sample@adsum+1,w
  1012  0093  00B7               	movwf	??_ADC_Sample+1
  1013  0094  0822               	movf	ADC_Sample@adsum+2,w
  1014  0095  00B8               	movwf	??_ADC_Sample+2
  1015  0096  0823               	movf	ADC_Sample@adsum+3,w
  1016  0097  00B9               	movwf	??_ADC_Sample+3
  1017  0098  3003               	movlw	3
  1018  0099                     u1205:	
  1019  0099  1003               	clrc
  1020  009A  0CB9               	rrf	??_ADC_Sample+3,f
  1021  009B  0CB8               	rrf	??_ADC_Sample+2,f
  1022  009C  0CB7               	rrf	??_ADC_Sample+1,f
  1023  009D  0CB6               	rrf	??_ADC_Sample,f
  1024  009E  3EFF               	addlw	-1
  1025  009F  1D03               	skipz
  1026  00A0  2899               	goto	u1205
  1027  00A1  0837               	movf	??_ADC_Sample+1,w
  1028  00A2  00AD               	movwf	_adresult+1	;volatile
  1029  00A3  0836               	movf	??_ADC_Sample,w
  1030  00A4  00AC               	movwf	_adresult	;volatile
  1031                           
  1032                           ;adc.c: 50: adsum = 0;
  1033  00A5  01A0               	clrf	ADC_Sample@adsum
  1034  00A6  01A1               	clrf	ADC_Sample@adsum+1
  1035  00A7  01A2               	clrf	ADC_Sample@adsum+2
  1036  00A8  01A3               	clrf	ADC_Sample@adsum+3
  1037                           
  1038                           ;adc.c: 51: admin = 0;
  1039  00A9  01A6               	clrf	ADC_Sample@admin
  1040  00AA  01A7               	clrf	ADC_Sample@admin+1
  1041                           
  1042                           ;adc.c: 52: admax = 0;
  1043  00AB  01A4               	clrf	ADC_Sample@admax
  1044  00AC  01A5               	clrf	ADC_Sample@admax+1
  1045                           
  1046                           ;adc.c: 53: adtimes = 0;
  1047  00AD  01AE               	clrf	ADC_Sample@adtimes
  1048  00AE  0008               	return
  1049  00AF                     __end_of_ADC_Sample:	
  1050  00AF                     PL4:	
  1051  00AF  00B7               	movwf	??_ADC_Sample+1
  1052  00B0  01B8               	clrf	??_ADC_Sample+2
  1053  00B1  01B9               	clrf	??_ADC_Sample+3
  1054  00B2  0836               	movf	??_ADC_Sample,w
  1055  00B3  02A0               	subwf	ADC_Sample@adsum,f
  1056  00B4  0837               	movf	??_ADC_Sample+1,w
  1057  00B5  1C03               	skipc
  1058  00B6  0F37               	incfsz	??_ADC_Sample+1,w
  1059  00B7  02A1               	subwf	ADC_Sample@adsum+1,f
  1060  00B8  0838               	movf	??_ADC_Sample+2,w
  1061  00B9  1C03               	skipc
  1062  00BA  0F38               	incfsz	??_ADC_Sample+2,w
  1063  00BB  02A2               	subwf	ADC_Sample@adsum+2,f
  1064  00BC  0839               	movf	??_ADC_Sample+3,w
  1065  00BD  0008               	return
  1066  00BE                     __end_ofPL4:	
  1067  00BE                     PL16:	
  1068  00BE  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
  1069  00BF  00A5               	movwf	ADC_Sample@admax+1
  1070  00C0  083C               	movf	ADC_Sample@ad_temp,w	;volatile
  1071  00C1  00A4               	movwf	ADC_Sample@admax
  1072  00C2  0008               	return
  1073  00C3                     __end_ofPL16:	
  1074                           
  1075                           	psect	text6
  1076  014A                     __ptext6:	
  1077 ;; *************** function _checkUsbStatus *****************
  1078 ;; Defined at:
  1079 ;;		line 36 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 300/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1
  1093 ;;      Params:         0       0       0
  1094 ;;      Locals:         0       0       0
  1095 ;;      Temps:          0       2       0
  1096 ;;      Totals:         0       2       0
  1097 ;;Total ram usage:        2 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    5
  1100 ;; This function calls:
  1101 ;;		_closeFan
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _checkUsbStatus
  1109  014A                     _checkUsbStatus:	
  1110                           
  1111                           ;main.c: 38: if(FAN_STATUS == 1)
  1112                           
  1113                           ;incstack = 0
  1114                           ; Regs used in _checkUsbStatus: [wreg+status,2+status,0+pclath+cstack]
  1115  014A  0B78               	decfsz	_FAN_STATUS,w
  1116  014B  294D               	goto	l3315
  1117                           
  1118                           ;main.c: 39: {
  1119                           ;main.c: 41: PORTC&=~(1<<1);
  1120  014C  1087               	bcf	7,1	;volatile
  1121  014D                     l3315:	
  1122                           
  1123                           ;main.c: 42: }
  1124                           ;main.c: 44: if (((PORTB) >> (2)&1) == 1) {
  1125  014D  0806               	movf	6,w	;volatile
  1126  014E  00B6               	movwf	??_checkUsbStatus
  1127  014F  1003               	clrc
  1128  0150  0CB6               	rrf	??_checkUsbStatus,f
  1129  0151  1003               	clrc
  1130  0152  0CB6               	rrf	??_checkUsbStatus,f
  1131  0153  1C36               	btfss	??_checkUsbStatus,0
  1132  0154  2969               	goto	l1123
  1133                           
  1134                           ;main.c: 46: lowVTime = 0;
  1135  0155  01F6               	clrf	_lowVTime
  1136                           
  1137                           ;main.c: 47: if (((PORTB) >> (1)&1) == 1) {
  1138  0156  0806               	movf	6,w	;volatile
  1139  0157  00B6               	movwf	??_checkUsbStatus
  1140  0158  1003               	clrc
  1141  0159  0CB6               	rrf	??_checkUsbStatus,f
  1142  015A  1C36               	btfss	??_checkUsbStatus,0
  1143  015B  295F               	goto	l3323
  1144                           
  1145                           ;main.c: 49: PORTC&=~(1<<1);
  1146  015C  1087               	bcf	7,1	;volatile
  1147                           
  1148                           ;main.c: 50: PORTA|=(1<<0);
  1149  015D  1405               	bsf	5,0	;volatile
  1150                           
  1151                           ;main.c: 51: } else if (countTime == 10) {
  1152  015E  0008               	return
  1153  015F                     l3323:	
  1154  015F  300A               	movlw	10
  1155  0160  062A               	xorwf	_countTime,w
  1156  0161  042B               	iorwf	_countTime+1,w
  1157  0162  1D03               	btfss	3,2
  1158  0163  0008               	return
  1159  0164  2966               	goto	l3325
  1160  0165                     l3333:	
  1161                           
  1162                           ;main.c: 65: {
  1163                           ;main.c: 66: lowVTime++;
  1164  0165  0AF6               	incf	_lowVTime,f
  1165  0166                     l3325:	
  1166                           
  1167                           ;main.c: 53: PORTA^=(1<<0);
  1168  0166  3001               	movlw	1
  1169  0167  0685               	xorwf	5,f	;volatile
  1170  0168  0008               	return
  1171  0169                     l1123:	
  1172                           
  1173                           ;main.c: 58: PORTA|=(1<<0);
  1174  0169  1405               	bsf	5,0	;volatile
  1175                           
  1176                           ;main.c: 59: PORTC|=(1<<1);
  1177  016A  1487               	bsf	7,1	;volatile
  1178                           
  1179                           ;main.c: 62: if((adresult/8) > 0x63 && countTime == 100)
  1180  016B  082D               	movf	_adresult+1,w	;volatile
  1181  016C  00B7               	movwf	??_checkUsbStatus+1
  1182  016D  082C               	movf	_adresult,w	;volatile
  1183  016E  00B6               	movwf	??_checkUsbStatus
  1184  016F  3000               	movlw	0
  1185  0170  1003               	clrc
  1186  0171  0CB7               	rrf	??_checkUsbStatus+1,f
  1187  0172  0CB6               	rrf	??_checkUsbStatus,f
  1188  0173  1003               	clrc
  1189  0174  0CB7               	rrf	??_checkUsbStatus+1,f
  1190  0175  0CB6               	rrf	??_checkUsbStatus,f
  1191  0176  1003               	clrc
  1192  0177  0CB7               	rrf	??_checkUsbStatus+1,f
  1193  0178  0CB6               	rrf	??_checkUsbStatus,f
  1194  0179  0237               	subwf	??_checkUsbStatus+1,w
  1195  017A  3064               	movlw	100
  1196  017B  1903               	skipnz
  1197  017C  0236               	subwf	??_checkUsbStatus,w
  1198  017D  1C03               	skipc
  1199  017E  0008               	return
  1200  017F  3064               	movlw	100
  1201  0180  062A               	xorwf	_countTime,w
  1202  0181  042B               	iorwf	_countTime+1,w
  1203  0182  1D03               	btfss	3,2
  1204  0183  0008               	return
  1205                           
  1206                           ;main.c: 63: {
  1207                           ;main.c: 64: if(lowVTime < 10)
  1208  0184  300A               	movlw	10
  1209  0185  0276               	subwf	_lowVTime,w
  1210  0186  1C03               	btfss	3,0
  1211  0187  2965               	goto	l3333
  1212                           
  1213                           ;main.c: 70: {
  1214                           ;main.c: 72: closeFan();
  1215  0188  2A69               	ljmp	l3115
  1216  0189                     __end_of_checkUsbStatus:	
  1217                           
  1218                           	psect	text7
  1219  0256                     __ptext7:	
  1220 ;; *************** function _checkKeys *****************
  1221 ;; Defined at:
  1222 ;;		line 187 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  1    wreg      void 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 300/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0   BANK1
  1236 ;;      Params:         0       0       0
  1237 ;;      Locals:         0       0       0
  1238 ;;      Temps:          0       0       0
  1239 ;;      Totals:         0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    6
  1243 ;; This function calls:
  1244 ;;		_checkFan
  1245 ;;		_key_driver
  1246 ;;		_setFanLevel
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _checkKeys
  1254  0256                     _checkKeys:	
  1255                           
  1256                           ;main.c: 188: if (key_driver(&key1) == 1) {
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in _checkKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1260  0256  302F               	movlw	(low (_key1| 0))& (0+255)
  1261  0257  2108               	fcall	_key_driver
  1262  0258  3A01               	xorlw	1
  1263  0259  1D03               	skipz
  1264  025A  2A64               	goto	l3357
  1265                           
  1266                           ;main.c: 191: if (FAN_STATUS == 1) {
  1267  025B  0B78               	decfsz	_FAN_STATUS,w
  1268  025C  2A5F               	goto	l1160
  1269                           
  1270                           ;main.c: 193: setFanLevel(1);
  1271  025D  3001               	movlw	1
  1272  025E  2989               	ljmp	_setFanLevel
  1273  025F                     l1160:	
  1274                           ;main.c: 195: } else {
  1275                           
  1276  025F  3000               	movlw	0
  1277                           
  1278                           ;main.c: 196: FAN_STATUS = 1;
  1279  0260  01F8               	clrf	_FAN_STATUS
  1280  0261  0AF8               	incf	_FAN_STATUS,f
  1281                           
  1282                           ;main.c: 197: setFanLevel(0);
  1283  0262  2189               	fcall	_setFanLevel
  1284  0263                     l3351:	
  1285                           
  1286                           ;main.c: 198: checkFan();
  1287  0263  2ACA               	ljmp	l2769
  1288  0264                     l3357:	
  1289  0264  3002               	movlw	2
  1290  0265  0678               	xorwf	_FAN_STATUS,w
  1291  0266  1D03               	btfss	3,2
  1292  0267  0008               	return
  1293  0268  2A63               	goto	l3351
  1294  0269                     __end_of_checkKeys:	
  1295                           
  1296                           	psect	text8
  1297  0189                     __ptext8:	
  1298 ;; *************** function _setFanLevel *****************
  1299 ;; Defined at:
  1300 ;;		line 92 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  level           1    wreg     unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  level           1    8[BANK0 ] unsigned char 
  1305 ;;  levelWidth      2    0        unsigned int 
  1306 ;;  tempLevel       1    9[BANK0 ] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : B00/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMMON   BANK0   BANK1
  1316 ;;      Params:         0       0       0
  1317 ;;      Locals:         0       2       0
  1318 ;;      Temps:          0       0       0
  1319 ;;      Totals:         0       2       0
  1320 ;;Total ram usage:        2 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    5
  1323 ;; This function calls:
  1324 ;;		___awdiv
  1325 ;;		_closeFan
  1326 ;; This function is called by:
  1327 ;;		_checkKeys
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           
  1332                           ;psect for function _setFanLevel
  1333  0189                     _setFanLevel:	
  1334                           
  1335                           ;incstack = 0
  1336                           ; Regs used in _setFanLevel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1337                           ;setFanLevel@level stored from wreg
  1338  0189  00BE               	movwf	setFanLevel@level
  1339                           
  1340                           ;main.c: 93: if(level == 0)
  1341  018A  083E               	movf	setFanLevel@level,w
  1342  018B  1D03               	btfss	3,2
  1343  018C  298F               	goto	l3179
  1344                           
  1345                           ;main.c: 94: {
  1346                           ;main.c: 95: currentLevel = 2;
  1347  018D  3002               	movlw	2
  1348  018E  00F9               	movwf	_currentLevel
  1349  018F                     l3179:	
  1350                           
  1351                           ;main.c: 96: }
  1352                           ;main.c: 97: unsigned int levelWidth = (PR2 + 1) / 4;
  1353  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1354  0190  0812               	movf	18,w	;volatile
  1355  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0192  00B8               	movwf	___awdiv@dividend
  1357  0193  01B9               	clrf	___awdiv@dividend+1
  1358  0194  0AB8               	incf	___awdiv@dividend,f
  1359  0195  1903               	skipnz
  1360  0196  0AB9               	incf	___awdiv@dividend+1,f
  1361  0197  3004               	movlw	4
  1362  0198  00B6               	movwf	___awdiv@divisor
  1363  0199  01B7               	clrf	___awdiv@divisor+1
  1364  019A  20C3               	fcall	___awdiv
  1365                           
  1366                           ;main.c: 98: char tempLevel = currentLevel + level;
  1367  019B  083E               	movf	setFanLevel@level,w
  1368  019C  0779               	addwf	_currentLevel,w
  1369  019D  00BF               	movwf	setFanLevel@tempLevel
  1370                           
  1371                           ;main.c: 99: if (tempLevel > 4) {
  1372  019E  3005               	movlw	5
  1373  019F  023F               	subwf	setFanLevel@tempLevel,w
  1374  01A0  1C03               	skipc
  1375  01A1  29A4               	goto	l3187
  1376                           
  1377                           ;main.c: 100: tempLevel = 1;
  1378  01A2  01BF               	clrf	setFanLevel@tempLevel
  1379  01A3  0ABF               	incf	setFanLevel@tempLevel,f
  1380  01A4                     l3187:	
  1381                           
  1382                           ;main.c: 101: }
  1383                           ;main.c: 104: if (FAN_STATUS == 1) {
  1384  01A4  0B78               	decfsz	_FAN_STATUS,w
  1385  01A5  0008               	return
  1386                           
  1387                           ;main.c: 105: currentLevel = tempLevel;
  1388  01A6  083F               	movf	setFanLevel@tempLevel,w
  1389  01A7  00F9               	movwf	_currentLevel
  1390                           
  1391                           ;main.c: 106: switch(currentLevel)
  1392  01A8  29B3               	goto	l3201
  1393  01A9                     l3191:	
  1394                           
  1395                           ;main.c: 109: closeFan();
  1396  01A9  2A69               	ljmp	l3115
  1397  01AA                     l3193:	
  1398                           ;main.c: 110: break;
  1399                           
  1400                           
  1401                           ;main.c: 112: CCPR1L = 2;
  1402  01AA  3002               	movlw	2
  1403  01AB  0095               	movwf	21	;volatile
  1404                           
  1405                           ;main.c: 113: break;
  1406  01AC  0008               	return
  1407  01AD                     l3195:	
  1408                           
  1409                           ;main.c: 115: CCPR1L = 3;
  1410  01AD  3003               	movlw	3
  1411  01AE  0095               	movwf	21	;volatile
  1412                           
  1413                           ;main.c: 116: break;
  1414  01AF  0008               	return
  1415  01B0                     l3197:	
  1416                           
  1417                           ;main.c: 118: CCPR1L = 5;
  1418  01B0  3005               	movlw	5
  1419  01B1  0095               	movwf	21	;volatile
  1420                           
  1421                           ;main.c: 119: break;
  1422  01B2  0008               	return
  1423  01B3                     l3201:	
  1424  01B3  0879               	movf	_currentLevel,w
  1425                           
  1426                           ; Switch size 1, requested type "space"
  1427                           ; Number of cases is 4, Range of values is 1 to 4
  1428                           ; switch strategies available:
  1429                           ; Name         Instructions Cycles
  1430                           ; simple_byte           13     7 (average)
  1431                           ; direct_byte           13     9 (fixed)
  1432                           ; jumptable            263     9 (fixed)
  1433                           ;	Chosen strategy is simple_byte
  1434  01B4  3A01               	xorlw	1	; case 1
  1435  01B5  1903               	skipnz
  1436  01B6  29A9               	goto	l3191
  1437  01B7  3A03               	xorlw	3	; case 2
  1438  01B8  1903               	skipnz
  1439  01B9  29AA               	goto	l3193
  1440  01BA  3A01               	xorlw	1	; case 3
  1441  01BB  1903               	skipnz
  1442  01BC  29AD               	goto	l3195
  1443  01BD  3A07               	xorlw	7	; case 4
  1444  01BE  1903               	skipnz
  1445  01BF  29B0               	goto	l3197
  1446  01C0  29C1               	goto	l1146
  1447  01C1                     l1146:	
  1448  01C1  0008               	return
  1449  01C2                     __end_of_setFanLevel:	
  1450                           
  1451                           	psect	text9
  1452  0269                     __ptext9:	
  1453 ;; *************** function _closeFan *****************
  1454 ;; Defined at:
  1455 ;;		line 129 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0, pclath, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 300/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMMON   BANK0   BANK1
  1469 ;;      Params:         0       0       0
  1470 ;;      Locals:         0       0       0
  1471 ;;      Temps:          1       0       0
  1472 ;;      Totals:         1       0       0
  1473 ;;Total ram usage:        1 bytes
  1474 ;; Hardware stack levels used:    1
  1475 ;; Hardware stack levels required when called:    4
  1476 ;; This function calls:
  1477 ;;		_Init_PWM
  1478 ;;		_Sleep_Mode
  1479 ;; This function is called by:
  1480 ;;		_checkUsbStatus
  1481 ;;		_setFanLevel
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           
  1486                           ;psect for function _closeFan
  1487  0269                     _closeFan:	
  1488  0269                     l3115:	
  1489                           ;incstack = 0
  1490                           ; Regs used in _closeFan: [wreg+status,2+status,0+pclath+cstack]
  1491                           
  1492                           
  1493                           ;main.c: 130: Init_PWM();
  1494  0269  22AF               	fcall	_Init_PWM
  1495                           
  1496                           ;main.c: 131: currentLevel = 1;
  1497  026A  01F9               	clrf	_currentLevel
  1498  026B  0AF9               	incf	_currentLevel,f
  1499                           
  1500                           ;main.c: 132: PORTA|=(1<<0);
  1501  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1502  026D  1405               	bsf	5,0	;volatile
  1503                           
  1504                           ;main.c: 135: fan_check_time = 0;
  1505  026E  1683               	bsf	3,5	;RP0=1, select bank1
  1506  026F  1507               	bsf	7,2	;volatile
  1507                           
  1508                           ;main.c: 136: FAN_STATUS = 0;
  1509  0270  01F8               	clrf	_FAN_STATUS
  1510                           
  1511                           ;main.c: 138: lowVTime = 0;
  1512  0271  01F6               	clrf	_lowVTime
  1513                           
  1514                           ;main.c: 139: if (((PORTB) >> (2)&1) == 0) {
  1515  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0273  0806               	movf	6,w	;volatile
  1517  0274  00F4               	movwf	??_closeFan
  1518  0275  1003               	clrc
  1519  0276  0CF4               	rrf	??_closeFan,f
  1520  0277  1003               	clrc
  1521  0278  0CF4               	rrf	??_closeFan,f
  1522  0279  1874               	btfsc	??_closeFan,0
  1523  027A  0008               	return
  1524                           
  1525                           ;main.c: 140: Sleep_Mode();
  1526  027B  29ED               	ljmp	l3097
  1527  027C                     __end_of_closeFan:	
  1528                           
  1529                           	psect	text10
  1530  01ED                     __ptext10:	
  1531 ;; *************** function _Sleep_Mode *****************
  1532 ;; Defined at:
  1533 ;;		line 266 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      void 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2
  1542 ;; Tracked objects:
  1543 ;;		On entry : 300/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1
  1547 ;;      Params:         0       0       0
  1548 ;;      Locals:         0       0       0
  1549 ;;      Temps:          0       0       0
  1550 ;;      Totals:         0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    3
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_closeFan
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           
  1563                           ;psect for function _Sleep_Mode
  1564  01ED                     _Sleep_Mode:	
  1565  01ED                     l3097:	
  1566                           ;incstack = 0
  1567                           ; Regs used in _Sleep_Mode: [wreg+status,2]
  1568                           
  1569                           
  1570                           ;main.c: 267: INTCON = 0;
  1571  01ED  018B               	clrf	11	;volatile
  1572                           
  1573                           ;main.c: 269: OPTION_REG = 0;
  1574  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1575  01EF  0181               	clrf	1	;volatile
  1576                           
  1577                           ;main.c: 271: TRISA = 0B00000000;
  1578  01F0  0185               	clrf	5	;volatile
  1579                           
  1580                           ;main.c: 272: PORTA = 0B00000000;
  1581  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1582  01F2  0185               	clrf	5	;volatile
  1583                           
  1584                           ;main.c: 273: WPUA = 0B00000000;
  1585  01F3  1683               	bsf	3,5	;RP0=1, select bank3
  1586  01F4  1703               	bsf	3,6	;RP1=1, select bank3
  1587  01F5  018E               	clrf	14	;volatile
  1588                           
  1589                           ;main.c: 275: TRISB = 0B00100000;
  1590  01F6  3020               	movlw	32
  1591  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  1592  01F8  0086               	movwf	6	;volatile
  1593                           
  1594                           ;main.c: 276: PORTB = 0B00000000;
  1595  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1596  01FA  0186               	clrf	6	;volatile
  1597                           
  1598                           ;main.c: 278: PORTB = 0;
  1599  01FB  0186               	clrf	6	;volatile
  1600                           
  1601                           ;main.c: 279: WPUB = 0B00100000;
  1602  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  1603  01FD  0095               	movwf	21	;volatile
  1604                           
  1605                           ;main.c: 281: IOCB = 0B00100100;
  1606  01FE  3024               	movlw	36
  1607  01FF  0096               	movwf	22	;volatile
  1608                           
  1609                           ;main.c: 282: RBIE = 1;
  1610  0200  158B               	bsf	11,3	;volatile
  1611                           
  1612                           ;main.c: 283: GIE = 1;
  1613  0201  178B               	bsf	11,7	;volatile
  1614                           
  1615                           ;main.c: 285: ADCON0 = 0;
  1616  0202  1283               	bcf	3,5	;RP0=0, select bank0
  1617  0203  019F               	clrf	31	;volatile
  1618                           
  1619                           ;main.c: 287: OSCCON = 0X70;
  1620  0204  3070               	movlw	112
  1621  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1622  0206  008F               	movwf	15	;volatile
  1623                           
  1624                           ;main.c: 289: PORTB;
  1625  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0208  0806               	movf	6,w	;volatile
  1627  0209  0064               	clrwdt	;# 
  1628  020A  0063               	sleep	;# 
  1629  020B  0000               	nop	;# 
  1630  020C  0008               	return
  1631  020D                     __end_of_Sleep_Mode:	
  1632                           
  1633                           	psect	text11
  1634  00C3                     __ptext11:	
  1635 ;; *************** function ___awdiv *****************
  1636 ;; Defined at:
  1637 ;;		line 6 in file "E:\cms\SCMCU_IDE_V2.00.07\data\sources\common\awdiv.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  divisor         2    0[BANK0 ] int 
  1640 ;;  dividend        2    2[BANK0 ] int 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  quotient        2    6[BANK0 ] int 
  1643 ;;  sign            1    5[BANK0 ] unsigned char 
  1644 ;;  counter         1    4[BANK0 ] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  2    0[BANK0 ] int 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0
  1649 ;; Tracked objects:
  1650 ;;		On entry : B00/0
  1651 ;;		On exit  : B00/0
  1652 ;;		Unchanged: 800/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1
  1654 ;;      Params:         0       4       0
  1655 ;;      Locals:         0       4       0
  1656 ;;      Temps:          0       0       0
  1657 ;;      Totals:         0       8       0
  1658 ;;Total ram usage:        8 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; Hardware stack levels required when called:    3
  1661 ;; This function calls:
  1662 ;;		Nothing
  1663 ;; This function is called by:
  1664 ;;		_setFanLevel
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function ___awdiv
  1670  00C3                     ___awdiv:	
  1671                           
  1672                           ;incstack = 0
  1673                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1674  00C3  01BB               	clrf	___awdiv@sign
  1675  00C4  1FB7               	btfss	___awdiv@divisor+1,7
  1676  00C5  28CD               	goto	l3139
  1677  00C6  09B6               	comf	___awdiv@divisor,f
  1678  00C7  09B7               	comf	___awdiv@divisor+1,f
  1679  00C8  0AB6               	incf	___awdiv@divisor,f
  1680  00C9  1903               	skipnz
  1681  00CA  0AB7               	incf	___awdiv@divisor+1,f
  1682  00CB  01BB               	clrf	___awdiv@sign
  1683  00CC  0ABB               	incf	___awdiv@sign,f
  1684  00CD                     l3139:	
  1685  00CD  1FB9               	btfss	___awdiv@dividend+1,7
  1686  00CE  28D6               	goto	l3145
  1687  00CF  09B8               	comf	___awdiv@dividend,f
  1688  00D0  09B9               	comf	___awdiv@dividend+1,f
  1689  00D1  0AB8               	incf	___awdiv@dividend,f
  1690  00D2  1903               	skipnz
  1691  00D3  0AB9               	incf	___awdiv@dividend+1,f
  1692  00D4  3001               	movlw	1
  1693  00D5  06BB               	xorwf	___awdiv@sign,f
  1694  00D6                     l3145:	
  1695  00D6  01BC               	clrf	___awdiv@quotient
  1696  00D7  01BD               	clrf	___awdiv@quotient+1
  1697  00D8  0836               	movf	___awdiv@divisor,w
  1698  00D9  0437               	iorwf	___awdiv@divisor+1,w
  1699  00DA  1903               	btfsc	3,2
  1700  00DB  28FB               	goto	l3167
  1701  00DC  01BA               	clrf	___awdiv@counter
  1702  00DD                     L2:	
  1703  00DD  0ABA               	incf	___awdiv@counter,f
  1704  00DE  1BB7               	btfsc	___awdiv@divisor+1,7
  1705  00DF  28E4               	goto	l3155
  1706  00E0  1003               	clrc
  1707  00E1  0DB6               	rlf	___awdiv@divisor,f
  1708  00E2  0DB7               	rlf	___awdiv@divisor+1,f
  1709  00E3  28DD               	goto	L2
  1710  00E4                     l3155:	
  1711  00E4  1003               	clrc
  1712  00E5  0DBC               	rlf	___awdiv@quotient,f
  1713  00E6  0DBD               	rlf	___awdiv@quotient+1,f
  1714  00E7  0837               	movf	___awdiv@divisor+1,w
  1715  00E8  0239               	subwf	___awdiv@dividend+1,w
  1716  00E9  1D03               	skipz
  1717  00EA  28ED               	goto	u985
  1718  00EB  0836               	movf	___awdiv@divisor,w
  1719  00EC  0238               	subwf	___awdiv@dividend,w
  1720  00ED                     u985:	
  1721  00ED  1C03               	skipc
  1722  00EE  28F7               	goto	L3
  1723  00EF  0836               	movf	___awdiv@divisor,w
  1724  00F0  02B8               	subwf	___awdiv@dividend,f
  1725  00F1  0837               	movf	___awdiv@divisor+1,w
  1726  00F2  1C03               	skipc
  1727  00F3  03B9               	decf	___awdiv@dividend+1,f
  1728  00F4  02B9               	subwf	___awdiv@dividend+1,f
  1729  00F5  143C               	bsf	___awdiv@quotient,0
  1730  00F6  1003               	clrc
  1731  00F7                     L3:	
  1732  00F7  0CB7               	rrf	___awdiv@divisor+1,f
  1733  00F8  0CB6               	rrf	___awdiv@divisor,f
  1734  00F9  0BBA               	decfsz	___awdiv@counter,f
  1735  00FA  28E4               	goto	l3155
  1736  00FB                     l3167:	
  1737  00FB  083B               	movf	___awdiv@sign,w
  1738  00FC  1903               	btfsc	3,2
  1739  00FD  2903               	goto	l3171
  1740  00FE  09BC               	comf	___awdiv@quotient,f
  1741  00FF  09BD               	comf	___awdiv@quotient+1,f
  1742  0100  0ABC               	incf	___awdiv@quotient,f
  1743  0101  1903               	skipnz
  1744  0102  0ABD               	incf	___awdiv@quotient+1,f
  1745  0103                     l3171:	
  1746  0103  083D               	movf	___awdiv@quotient+1,w
  1747  0104  00B7               	movwf	?___awdiv+1
  1748  0105  083C               	movf	___awdiv@quotient,w
  1749  0106  00B6               	movwf	?___awdiv
  1750  0107  0008               	return
  1751  0108                     __end_of___awdiv:	
  1752                           
  1753                           	psect	text12
  1754  0108                     __ptext12:	
  1755 ;; *************** function _key_driver *****************
  1756 ;; Defined at:
  1757 ;;		line 9 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  key             1    wreg     PTR struct Keys
  1760 ;;		 -> key1(7), 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  key             1    2[BANK0 ] PTR struct Keys
  1763 ;;		 -> key1(7), 
  1764 ;;  key_read        1    1[BANK0 ] unsigned char 
  1765 ;;  key_return      1    0[BANK0 ] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      unsigned char 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1770 ;; Tracked objects:
  1771 ;;		On entry : 300/0
  1772 ;;		On exit  : B00/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1
  1775 ;;      Params:         0       0       0
  1776 ;;      Locals:         0       3       0
  1777 ;;      Temps:          0       0       0
  1778 ;;      Totals:         0       3       0
  1779 ;;Total ram usage:        3 bytes
  1780 ;; Hardware stack levels used:    1
  1781 ;; Hardware stack levels required when called:    3
  1782 ;; This function calls:
  1783 ;;		Nothing
  1784 ;; This function is called by:
  1785 ;;		_checkKeys
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _key_driver
  1791  0108                     _key_driver:	
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _key_driver: [wreg-fsr0h+status,2+status,0]
  1795                           ;key_driver@key stored from wreg
  1796  0108  00B8               	movwf	key_driver@key
  1797                           
  1798                           ;scankey.c: 12: unsigned char key_return = 0;
  1799  0109  01B6               	clrf	key_driver@key_return
  1800                           
  1801                           ;scankey.c: 13: unsigned char key_read = key->key_input;
  1802  010A  3E04               	addlw	4
  1803  010B  0084               	movwf	4
  1804  010C  1383               	bcf	3,7	;select IRP bank0
  1805  010D  0800               	movf	0,w
  1806  010E  00B7               	movwf	key_driver@key_read
  1807                           
  1808                           ;scankey.c: 15: switch (key->key_state_buffer1) {
  1809  010F  293B               	goto	l3239
  1810  0110                     l3209:	
  1811                           
  1812                           ;scankey.c: 17: if (key_read == 0) {
  1813  0110  0837               	movf	key_driver@key_read,w
  1814  0111  1D03               	btfss	3,2
  1815  0112  2948               	goto	l3241
  1816                           
  1817                           ;scankey.c: 18: key->key_state_buffer1 = 1;
  1818  0113  0A38               	incf	key_driver@key,w
  1819  0114  0084               	movwf	4
  1820  0115  0180               	clrf	0
  1821  0116  0A80               	incf	0,f
  1822  0117  2948               	goto	l3241
  1823  0118                     l3213:	
  1824                           
  1825                           ;scankey.c: 25: if (key_read == 0) {
  1826  0118  0837               	movf	key_driver@key_read,w
  1827  0119  1D03               	btfss	3,2
  1828  011A  2937               	goto	l3235
  1829                           
  1830                           ;scankey.c: 26: key->key_timer_cnt1 = 0;
  1831  011B  0838               	movf	key_driver@key,w
  1832  011C  0084               	movwf	4
  1833  011D  0180               	clrf	0
  1834                           
  1835                           ;scankey.c: 27: key->key_state_buffer1 = 2;
  1836  011E  0A38               	incf	key_driver@key,w
  1837  011F  0084               	movwf	4
  1838  0120  3002               	movlw	2
  1839  0121  2933               	goto	L4
  1840  0122                     l3221:	
  1841                           ;scankey.c: 32: key->key_state_buffer1 = 0;
  1842                           
  1843                           ;scankey.c: 31: } else {
  1844                           
  1845                           
  1846                           ;scankey.c: 39: if (key_read == 1) {
  1847  0122  0B37               	decfsz	key_driver@key_read,w
  1848  0123  2927               	goto	l3227
  1849                           
  1850                           ;scankey.c: 40: key_return = 1;
  1851  0124  01B6               	clrf	key_driver@key_return
  1852  0125  0AB6               	incf	key_driver@key_return,f
  1853  0126  2937               	goto	l3235
  1854  0127                     l3227:	
  1855                           ;scankey.c: 42: } else if (++(key->key_timer_cnt1) >= 100)
  1856                           
  1857                           ;scankey.c: 41: key->key_state_buffer1 = 0;
  1858                           
  1859  0127  0838               	movf	key_driver@key,w
  1860  0128  0084               	movwf	4
  1861  0129  3064               	movlw	100
  1862  012A  0A80               	incf	0,f
  1863  012B  0200               	subwf	0,w
  1864  012C  1C03               	skipc
  1865  012D  2948               	goto	l3241
  1866                           
  1867                           ;scankey.c: 43: {
  1868                           ;scankey.c: 44: key_return = 3;
  1869  012E  3003               	movlw	3
  1870  012F  00B6               	movwf	key_driver@key_return
  1871                           
  1872                           ;scankey.c: 45: key->key_state_buffer1 = 3;
  1873  0130  0A38               	incf	key_driver@key,w
  1874  0131  0084               	movwf	4
  1875  0132  3003               	movlw	3
  1876  0133                     L4:	
  1877  0133  0080               	movwf	0
  1878  0134  2948               	goto	l3241
  1879  0135                     l3233:	
  1880                           
  1881                           ;scankey.c: 51: if (key_read == 1)
  1882  0135  0B37               	decfsz	key_driver@key_read,w
  1883  0136  2948               	goto	l3241
  1884  0137                     l3235:	
  1885                           
  1886                           ;scankey.c: 52: {
  1887                           ;scankey.c: 53: key->key_state_buffer1 = 0;
  1888  0137  0A38               	incf	key_driver@key,w
  1889  0138  0084               	movwf	4
  1890  0139  0180               	clrf	0
  1891  013A  2948               	goto	l3241
  1892  013B                     l3239:	
  1893  013B  0A38               	incf	key_driver@key,w
  1894  013C  0084               	movwf	4
  1895  013D  0800               	movf	0,w
  1896                           
  1897                           ; Switch size 1, requested type "space"
  1898                           ; Number of cases is 4, Range of values is 0 to 3
  1899                           ; switch strategies available:
  1900                           ; Name         Instructions Cycles
  1901                           ; direct_byte           10     6 (fixed)
  1902                           ; simple_byte           13     7 (average)
  1903                           ; jumptable            260     6 (fixed)
  1904                           ;	Chosen strategy is direct_byte
  1905  013E  0084               	movwf	4
  1906  013F  3004               	movlw	4
  1907  0140  0204               	subwf	4,w
  1908  0141  1803               	skipnc
  1909  0142  2948               	goto	l3241
  1910  0143  3003               	movlw	high S3445
  1911  0144  008A               	movwf	10
  1912  0145  3000               	movlw	low S3445
  1913  0146  0704               	addwf	4,w
  1914  0147  0082               	movwf	2
  1915  0148                     l3241:	
  1916                           
  1917                           ;scankey.c: 58: return key_return;
  1918  0148  0836               	movf	key_driver@key_return,w
  1919  0149  0008               	return
  1920  014A                     __end_of_key_driver:	
  1921                           
  1922                           	psect	swtext1
  1923  0300                     __pswtext1:	
  1924  0300                     S3445:	
  1925  0300  2910               	ljmp	l3209
  1926  0301  2918               	ljmp	l3213
  1927  0302  2922               	ljmp	l3221
  1928  0303  2935               	ljmp	l3233
  1929                           
  1930                           	psect	text13
  1931  02CA                     __ptext13:	
  1932 ;; *************** function _checkFan *****************
  1933 ;; Defined at:
  1934 ;;		line 147 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;		None
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;		None
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      void 
  1941 ;; Registers used:
  1942 ;;		wreg
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 300/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMMON   BANK0   BANK1
  1948 ;;      Params:         0       0       0
  1949 ;;      Locals:         0       0       0
  1950 ;;      Temps:          0       0       0
  1951 ;;      Totals:         0       0       0
  1952 ;;Total ram usage:        0 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    3
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_checkKeys
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function _checkFan
  1964  02CA                     _checkFan:	
  1965  02CA                     l2769:	
  1966                           ;incstack = 0
  1967                           ; Regs used in _checkFan: [wreg]
  1968                           
  1969                           
  1970                           ;main.c: 148: TRISA&=~(1<<1);
  1971  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1972  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1973  02CC  1085               	bcf	5,1	;volatile
  1974                           
  1975                           ;main.c: 149: PORTA&=~(1<<1);
  1976  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1977  02CE  1085               	bcf	5,1	;volatile
  1978                           
  1979                           ;main.c: 151: TRISC&=~(1<<2);
  1980  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  1981  02D0  1107               	bcf	7,2	;volatile
  1982                           
  1983                           ;main.c: 152: PORTA|=(1<<2);
  1984  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1985  02D2  1505               	bsf	5,2	;volatile
  1986                           
  1987                           ;main.c: 153: T2CON = 0X04;
  1988  02D3  3004               	movlw	4
  1989  02D4  0092               	movwf	18	;volatile
  1990  02D5  0008               	return
  1991  02D6                     __end_of_checkFan:	
  1992                           
  1993                           	psect	text14
  1994  022A                     __ptext14:	
  1995 ;; *************** function _Init_Config *****************
  1996 ;; Defined at:
  1997 ;;		line 243 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : B00/100
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1
  2011 ;;      Params:         0       0       0
  2012 ;;      Locals:         0       0       0
  2013 ;;      Temps:          0       0       0
  2014 ;;      Totals:         0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    4
  2018 ;; This function calls:
  2019 ;;		_Init_GPIO
  2020 ;;		_Init_Interupt
  2021 ;;		_Init_PWM
  2022 ;;		_Init_System
  2023 ;;		_resetKey
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _Init_Config
  2031  022A                     _Init_Config:	
  2032                           
  2033                           ;main.c: 245: Init_System();
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2037  022A  2304               	fcall	_Init_System
  2038                           
  2039                           ;main.c: 246: Init_GPIO();
  2040  022B  227C               	fcall	_Init_GPIO
  2041                           
  2042                           ;main.c: 247: Init_Interupt();
  2043  022C  22E8               	fcall	_Init_Interupt
  2044                           
  2045                           ;main.c: 248: Init_PWM();
  2046  022D  22AF               	fcall	_Init_PWM
  2047                           
  2048                           ;main.c: 250: IOCB = 0x04;
  2049                           
  2050                           ;main.c: 251: TMR0 = 155;
  2051                           
  2052                           ;main.c: 252: TO = 0;
  2053                           
  2054                           ;main.c: 255: key1.key_index = 5;
  2055                           
  2056                           ;main.c: 257: resetKey(&key1);
  2057  022E  2231               	fcall	PL8	;call to abstracted procedure
  2058  022F  228F               	fcall	_resetKey
  2059                           
  2060                           ;main.c: 260: TRISA = 0;
  2061                           
  2062                           ;main.c: 261: TRISB = 0x7E;
  2063                           
  2064                           ;main.c: 262: TRISC = 0;
  2065  0230  2A3A               	ljmp	PL14	;call to abstracted procedure
  2066  0231                     __end_of_Init_Config:	
  2067  0231                     PL8:	
  2068  0231  3004               	movlw	4
  2069  0232  0096               	movwf	22	;volatile
  2070  0233  309B               	movlw	155
  2071  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0235  0081               	movwf	1	;volatile
  2073  0236  1203               	bcf	3,4	;volatile
  2074  0237  3005               	movlw	5
  2075  0238  00B5               	movwf	_key1+6
  2076  0239  342F               	retlw	(low (_key1| 0))& (0+255)
  2077  023A                     __end_ofPL8:	
  2078  023A                     PL14:	
  2079  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2080  023B  0185               	clrf	5	;volatile
  2081  023C  307E               	movlw	126
  2082  023D  0086               	movwf	6	;volatile
  2083  023E  0187               	clrf	7	;volatile
  2084  023F  0008               	return
  2085  0240                     __end_ofPL14:	
  2086                           
  2087                           	psect	text15
  2088  028F                     __ptext15:	
  2089 ;; *************** function _resetKey *****************
  2090 ;; Defined at:
  2091 ;;		line 100 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  key             1    wreg     PTR struct Keys
  2094 ;;		 -> key1(7), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  key             1    4[COMMON] PTR struct Keys
  2097 ;;		 -> key1(7), 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 300/0
  2104 ;;		On exit  : B00/0
  2105 ;;		Unchanged: 300/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1
  2107 ;;      Params:         0       0       0
  2108 ;;      Locals:         1       0       0
  2109 ;;      Temps:          0       0       0
  2110 ;;      Totals:         1       0       0
  2111 ;;Total ram usage:        1 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    3
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_Init_Config
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _resetKey
  2123  028F                     _resetKey:	
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in _resetKey: [wreg-fsr0h+status,2+status,0]
  2127                           ;resetKey@key stored from wreg
  2128  028F  00F4               	movwf	resetKey@key
  2129                           
  2130                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2131  0290  3E03               	addlw	3
  2132  0291  0084               	movwf	4
  2133  0292  1383               	bcf	3,7	;select IRP bank0
  2134  0293  0180               	clrf	0
  2135  0294  0A74               	incf	resetKey@key,w
  2136  0295  0084               	movwf	4
  2137  0296  0180               	clrf	0
  2138  0297  0874               	movf	resetKey@key,w
  2139  0298  3E02               	addlw	2
  2140  0299  0084               	movwf	4
  2141  029A  0180               	clrf	0
  2142  029B  0874               	movf	resetKey@key,w
  2143  029C  0084               	movwf	4
  2144  029D  0180               	clrf	0
  2145  029E  0008               	return
  2146  029F                     __end_of_resetKey:	
  2147                           
  2148                           	psect	text16
  2149  0304                     __ptext16:	
  2150 ;; *************** function _Init_System *****************
  2151 ;; Defined at:
  2152 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 300/100
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1
  2166 ;;      Params:         0       0       0
  2167 ;;      Locals:         0       0       0
  2168 ;;      Temps:          0       0       0
  2169 ;;      Totals:         0       0       0
  2170 ;;Total ram usage:        0 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    3
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_Init_Config
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _Init_System
  2182  0304                     _Init_System:	
  2183                           
  2184                           ;incstack = 0
  2185                           ; Regs used in _Init_System: [wreg+status,2]
  2186  0304  0000               	nop	;# 
  2187  0305  0064               	clrwdt	;# 
  2188                           
  2189                           ;init.c: 6: INTCON = 0;
  2190                           
  2191                           ;init.c: 7: OSCCON = 0X71;
  2192                           
  2193                           ;init.c: 8: OPTION_REG = 0x00;
  2194  0306  2AD9               	ljmp	PL10	;call to abstracted procedure
  2195  0307                     __end_of_Init_System:	
  2196                           
  2197                           	psect	text17
  2198  02AF                     __ptext17:	
  2199 ;; *************** function _Init_PWM *****************
  2200 ;; Defined at:
  2201 ;;		line 78 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2
  2210 ;; Tracked objects:
  2211 ;;		On entry : 300/0
  2212 ;;		On exit  : 300/100
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMMON   BANK0   BANK1
  2215 ;;      Params:         0       0       0
  2216 ;;      Locals:         0       0       0
  2217 ;;      Temps:          0       0       0
  2218 ;;      Totals:         0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    3
  2222 ;; This function calls:
  2223 ;;		Nothing
  2224 ;; This function is called by:
  2225 ;;		_closeFan
  2226 ;;		_Init_Config
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _Init_PWM
  2232  02AF                     _Init_PWM:	
  2233                           
  2234                           ;main.c: 79: CCP1CON = 0x0F;
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _Init_PWM: [wreg+status,2]
  2238                           
  2239                           ;main.c: 80: T2CON = 0;
  2240                           
  2241                           ;main.c: 81: PR2 = 7;
  2242                           
  2243                           ;main.c: 83: CCPR1L = 0;
  2244                           
  2245                           ;main.c: 84: TMR2IF = 0;
  2246                           
  2247                           ;main.c: 85: T2CON = 0;
  2248                           
  2249                           ;main.c: 87: TRISC&=~(1<<2);
  2250  02AF  2AB0               	ljmp	PL6	;call to abstracted procedure
  2251  02B0                     __end_of_Init_PWM:	
  2252  02B0                     PL6:	
  2253  02B0  300F               	movlw	15
  2254  02B1  0097               	movwf	23	;volatile
  2255  02B2  0192               	clrf	18	;volatile
  2256  02B3  3007               	movlw	7
  2257  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  2258  02B5  0092               	movwf	18	;volatile
  2259  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2260  02B7  0195               	clrf	21	;volatile
  2261  02B8  108C               	bcf	12,1	;volatile
  2262  02B9  0192               	clrf	18	;volatile
  2263  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2264  02BB  1107               	bcf	7,2	;volatile
  2265  02BC  0008               	return
  2266  02BD                     __end_ofPL6:	
  2267                           
  2268                           	psect	text18
  2269  02E8                     __ptext18:	
  2270 ;; *************** function _Init_Interupt *****************
  2271 ;; Defined at:
  2272 ;;		line 27 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;		None
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;		None
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  1    wreg      void 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2
  2281 ;; Tracked objects:
  2282 ;;		On entry : 300/100
  2283 ;;		On exit  : 300/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1
  2286 ;;      Params:         0       0       0
  2287 ;;      Locals:         0       0       0
  2288 ;;      Temps:          0       0       0
  2289 ;;      Totals:         0       0       0
  2290 ;;Total ram usage:        0 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    3
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_Init_Config
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function _Init_Interupt
  2302  02E8                     _Init_Interupt:	
  2303                           
  2304                           ;init.c: 28: OPTION_REG = 0x00;
  2305                           
  2306                           ;incstack = 0
  2307                           ; Regs used in _Init_Interupt: [wreg+status,2]
  2308                           
  2309                           ;init.c: 29: TMR0 = 0;
  2310                           
  2311                           ;init.c: 30: INTCON = 0xE0;
  2312  02E8  2AE9               	ljmp	PL12	;call to abstracted procedure
  2313  02E9                     __end_of_Init_Interupt:	
  2314  02E9                     PL12:	
  2315  02E9  0181               	clrf	1	;volatile
  2316  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2317  02EB  0181               	clrf	1	;volatile
  2318  02EC  30E0               	movlw	224
  2319  02ED  008B               	movwf	11	;volatile
  2320  02EE  0008               	return
  2321  02EF                     __end_ofPL12:	
  2322                           
  2323                           	psect	text19
  2324  027C                     __ptext19:	
  2325 ;; *************** function _Init_GPIO *****************
  2326 ;; Defined at:
  2327 ;;		line 13 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2
  2336 ;; Tracked objects:
  2337 ;;		On entry : 300/100
  2338 ;;		On exit  : 300/100
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1
  2341 ;;      Params:         0       0       0
  2342 ;;      Locals:         0       0       0
  2343 ;;      Temps:          0       0       0
  2344 ;;      Totals:         0       0       0
  2345 ;;Total ram usage:        0 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:    3
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_Init_Config
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           
  2356                           ;psect for function _Init_GPIO
  2357  027C                     _Init_GPIO:	
  2358                           
  2359                           ;init.c: 14: TRISA = 0;
  2360                           
  2361                           ;incstack = 0
  2362                           ; Regs used in _Init_GPIO: [wreg+status,2]
  2363                           
  2364                           ;init.c: 15: TRISB = 0;
  2365                           
  2366                           ;init.c: 16: TRISC = 0;
  2367                           
  2368                           ;init.c: 17: WPUA = 0xFF;
  2369                           
  2370                           ;init.c: 18: WPUB = 0xFF;
  2371                           
  2372                           ;init.c: 19: WPUC = 0xFF;
  2373                           
  2374                           ;init.c: 20: PORTA = 0xFF;
  2375                           
  2376                           ;init.c: 21: PORTB = 0xFF;
  2377                           
  2378                           ;init.c: 22: PORTC = 0xFF;
  2379                           
  2380                           ;init.c: 23: IOCB = 0x00;
  2381  027C  2A7D               	ljmp	PL2	;call to abstracted procedure
  2382  027D                     __end_of_Init_GPIO:	
  2383  027D                     PL2:	
  2384  027D  0185               	clrf	5	;volatile
  2385  027E  0186               	clrf	6	;volatile
  2386  027F  0187               	clrf	7	;volatile
  2387  0280  30FF               	movlw	255
  2388  0281  1703               	bsf	3,6	;RP1=1, select bank3
  2389  0282  008E               	movwf	14	;volatile
  2390  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2391  0284  0095               	movwf	21	;volatile
  2392  0285  1703               	bsf	3,6	;RP1=1, select bank3
  2393  0286  008F               	movwf	15	;volatile
  2394  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0289  0085               	movwf	5	;volatile
  2397  028A  0086               	movwf	6	;volatile
  2398  028B  0087               	movwf	7	;volatile
  2399  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2400  028D  0196               	clrf	22	;volatile
  2401  028E  0008               	return
  2402  028F                     __end_ofPL2:	
  2403                           
  2404                           	psect	text20
  2405  0240                     __ptext20:	
  2406 ;; *************** function _Timer0_Isr *****************
  2407 ;; Defined at:
  2408 ;;		line 310 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1
  2422 ;;      Params:         0       0       0
  2423 ;;      Locals:         0       0       0
  2424 ;;      Temps:          3       0       0
  2425 ;;      Totals:         3       0       0
  2426 ;;Total ram usage:        3 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    2
  2429 ;; This function calls:
  2430 ;;		i1_Init_Config
  2431 ;; This function is called by:
  2432 ;;		Interrupt level 1
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _Timer0_Isr
  2438  0240                     _Timer0_Isr:	
  2439                           
  2440                           ;main.c: 311: if (T0IF) {
  2441  0240  1D0B               	btfss	11,2	;volatile
  2442  0241  2A49               	goto	i1l3051
  2443                           
  2444                           ;main.c: 313: TMR0 += 155;
  2445  0242  309B               	movlw	155
  2446  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0245  0781               	addwf	1,f	;volatile
  2449                           
  2450                           ;main.c: 316: T0IF = 0;
  2451  0246  110B               	bcf	11,2	;volatile
  2452                           
  2453                           ;main.c: 317: time0Flag = 1;
  2454  0247  01F7               	clrf	_time0Flag
  2455  0248  0AF7               	incf	_time0Flag,f
  2456  0249                     i1l3051:	
  2457                           
  2458                           ;main.c: 319: }
  2459                           ;main.c: 321: if (RBIF) {
  2460  0249  1C0B               	btfss	11,0	;volatile
  2461  024A  2A4D               	goto	i1l1189
  2462                           
  2463                           ;main.c: 322: RBIF = 0;
  2464  024B  100B               	bcf	11,0	;volatile
  2465                           
  2466                           ;main.c: 323: Init_Config();
  2467  024C  22EF               	fcall	i1_Init_Config
  2468  024D                     i1l1189:	
  2469  024D  0873               	movf	??_Timer0_Isr+2,w
  2470  024E  008A               	movwf	10
  2471  024F  0872               	movf	??_Timer0_Isr+1,w
  2472  0250  0084               	movwf	4
  2473  0251  0E71               	swapf	??_Timer0_Isr^(0+-128),w
  2474  0252  0083               	movwf	3
  2475  0253  0EFE               	swapf	126,f
  2476  0254  0E7E               	swapf	126,w
  2477  0255  0009               	retfie
  2478  0256                     __end_of_Timer0_Isr:	
  2479                           
  2480                           	psect	intentry
  2481  0004                     __pintentry:	
  2482                           ;incstack = 0
  2483                           ; Regs used in _Timer0_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2484                           
  2485  0004                     interrupt_function:	
  2486  007E                     saved_w	set	btemp
  2487  0004  00FE               	movwf	btemp
  2488  0005  0E03               	swapf	3,w
  2489  0006  00F1               	movwf	??_Timer0_Isr
  2490  0007  0804               	movf	4,w
  2491  0008  00F2               	movwf	??_Timer0_Isr+1
  2492  0009  080A               	movf	10,w
  2493  000A  00F3               	movwf	??_Timer0_Isr+2
  2494  000B  2A40               	ljmp	_Timer0_Isr
  2495                           
  2496                           	psect	text21
  2497  02EF                     __ptext21:	
  2498 ;; *************** function i1_Init_Config *****************
  2499 ;; Defined at:
  2500 ;;		line 243 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : B00/100
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1
  2514 ;;      Params:         0       0       0
  2515 ;;      Locals:         0       0       0
  2516 ;;      Temps:          0       0       0
  2517 ;;      Totals:         0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    1
  2521 ;; This function calls:
  2522 ;;		i1_Init_GPIO
  2523 ;;		i1_Init_Interupt
  2524 ;;		i1_Init_PWM
  2525 ;;		i1_Init_System
  2526 ;;		i1_resetKey
  2527 ;; This function is called by:
  2528 ;;		_Timer0_Isr
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function i1_Init_Config
  2534  02EF                     i1_Init_Config:	
  2535                           
  2536                           ;main.c: 245: Init_System();
  2537                           
  2538                           ;incstack = 0
  2539                           ; Regs used in i1_Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2540  02EF  22D6               	fcall	i1_Init_System
  2541                           
  2542                           ;main.c: 246: Init_GPIO();
  2543  02F0  2309               	fcall	i1_Init_GPIO
  2544                           
  2545                           ;main.c: 247: Init_Interupt();
  2546  02F1  2308               	fcall	i1_Init_Interupt
  2547                           
  2548                           ;main.c: 248: Init_PWM();
  2549  02F2  2307               	fcall	i1_Init_PWM
  2550                           
  2551                           ;main.c: 250: IOCB = 0x04;
  2552                           
  2553                           ;main.c: 251: TMR0 = 155;
  2554                           
  2555                           ;main.c: 252: TO = 0;
  2556                           
  2557                           ;main.c: 255: key1.key_index = 5;
  2558                           
  2559                           ;main.c: 257: resetKey(&key1);
  2560  02F3  2231               	fcall	PL8	;call to abstracted procedure
  2561  02F4  229F               	fcall	i1_resetKey
  2562                           
  2563                           ;main.c: 260: TRISA = 0;
  2564                           
  2565                           ;main.c: 261: TRISB = 0x7E;
  2566                           
  2567                           ;main.c: 262: TRISC = 0;
  2568  02F5  2A3A               	ljmp	PL14	;call to abstracted procedure
  2569  02F6                     __end_ofi1_Init_Config:	
  2570                           
  2571                           	psect	text22
  2572  029F                     __ptext22:	
  2573 ;; *************** function i1_resetKey *****************
  2574 ;; Defined at:
  2575 ;;		line 100 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  key             1    wreg     PTR struct Keys
  2578 ;;		 -> key1(7), 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  key             1    0[COMMON] PTR struct Keys
  2581 ;;		 -> key1(7), 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 300/0
  2588 ;;		On exit  : B00/0
  2589 ;;		Unchanged: 300/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1
  2591 ;;      Params:         0       0       0
  2592 ;;      Locals:         1       0       0
  2593 ;;      Temps:          0       0       0
  2594 ;;      Totals:         1       0       0
  2595 ;;Total ram usage:        1 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		i1_Init_Config
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           
  2605                           ;psect for function i1_resetKey
  2606  029F                     i1_resetKey:	
  2607                           
  2608                           ;incstack = 0
  2609                           ; Regs used in i1_resetKey: [wreg-fsr0h+status,2+status,0]
  2610                           ;i1resetKey@key stored from wreg
  2611  029F  00F0               	movwf	i1resetKey@key
  2612                           
  2613                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2614  02A0  3E03               	addlw	3
  2615  02A1  0084               	movwf	4
  2616  02A2  1383               	bcf	3,7	;select IRP bank0
  2617  02A3  0180               	clrf	0
  2618  02A4  0A70               	incf	i1resetKey@key,w
  2619  02A5  0084               	movwf	4
  2620  02A6  0180               	clrf	0
  2621  02A7  0870               	movf	i1resetKey@key,w
  2622  02A8  3E02               	addlw	2
  2623  02A9  0084               	movwf	4
  2624  02AA  0180               	clrf	0
  2625  02AB  0870               	movf	i1resetKey@key,w
  2626  02AC  0084               	movwf	4
  2627  02AD  0180               	clrf	0
  2628  02AE  0008               	return
  2629  02AF                     __end_ofi1_resetKey:	
  2630                           
  2631                           	psect	text23
  2632  02D6                     __ptext23:	
  2633 ;; *************** function i1_Init_System *****************
  2634 ;; Defined at:
  2635 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, status,2
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 300/100
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1
  2649 ;;      Params:         0       0       0
  2650 ;;      Locals:         0       0       0
  2651 ;;      Temps:          0       0       0
  2652 ;;      Totals:         0       0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		i1_Init_Config
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function i1_Init_System
  2664  02D6                     i1_Init_System:	
  2665                           
  2666                           ;incstack = 0
  2667                           ; Regs used in i1_Init_System: [wreg+status,2]
  2668  02D6  0000               	nop	;# 
  2669  02D7  0064               	clrwdt	;# 
  2670                           
  2671                           ;init.c: 6: INTCON = 0;
  2672                           
  2673                           ;init.c: 7: OSCCON = 0X71;
  2674                           
  2675                           ;init.c: 8: OPTION_REG = 0x00;
  2676  02D8  2AD9               	ljmp	PL10	;call to abstracted procedure
  2677  02D9                     __end_ofi1_Init_System:	
  2678  02D9                     PL10:	
  2679  02D9  018B               	clrf	11	;volatile
  2680  02DA  3071               	movlw	113
  2681  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2682  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2683  02DD  008F               	movwf	15	;volatile
  2684  02DE  0181               	clrf	1	;volatile
  2685  02DF  0008               	return
  2686  02E0                     __end_ofPL10:	
  2687                           
  2688                           	psect	text24
  2689  0307                     __ptext24:	
  2690 ;; *************** function i1_Init_PWM *****************
  2691 ;; Defined at:
  2692 ;;		line 78 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;		None
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2
  2701 ;; Tracked objects:
  2702 ;;		On entry : 300/0
  2703 ;;		On exit  : 300/100
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMMON   BANK0   BANK1
  2706 ;;      Params:         0       0       0
  2707 ;;      Locals:         0       0       0
  2708 ;;      Temps:          0       0       0
  2709 ;;      Totals:         0       0       0
  2710 ;;Total ram usage:        0 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		i1_Init_Config
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function i1_Init_PWM
  2721  0307                     i1_Init_PWM:	
  2722                           
  2723                           ;main.c: 79: CCP1CON = 0x0F;
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in i1_Init_PWM: [wreg+status,2]
  2727                           
  2728                           ;main.c: 80: T2CON = 0;
  2729                           
  2730                           ;main.c: 81: PR2 = 7;
  2731                           
  2732                           ;main.c: 83: CCPR1L = 0;
  2733                           
  2734                           ;main.c: 84: TMR2IF = 0;
  2735                           
  2736                           ;main.c: 85: T2CON = 0;
  2737                           
  2738                           ;main.c: 87: TRISC&=~(1<<2);
  2739  0307  2AB0               	ljmp	PL6	;call to abstracted procedure
  2740  0308                     __end_ofi1_Init_PWM:	
  2741                           
  2742                           	psect	text25
  2743  0308                     __ptext25:	
  2744 ;; *************** function i1_Init_Interupt *****************
  2745 ;; Defined at:
  2746 ;;		line 27 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2
  2755 ;; Tracked objects:
  2756 ;;		On entry : 300/100
  2757 ;;		On exit  : 300/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1
  2760 ;;      Params:         0       0       0
  2761 ;;      Locals:         0       0       0
  2762 ;;      Temps:          0       0       0
  2763 ;;      Totals:         0       0       0
  2764 ;;Total ram usage:        0 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		i1_Init_Config
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function i1_Init_Interupt
  2775  0308                     i1_Init_Interupt:	
  2776                           
  2777                           ;init.c: 28: OPTION_REG = 0x00;
  2778                           
  2779                           ;incstack = 0
  2780                           ; Regs used in i1_Init_Interupt: [wreg+status,2]
  2781                           
  2782                           ;init.c: 29: TMR0 = 0;
  2783                           
  2784                           ;init.c: 30: INTCON = 0xE0;
  2785  0308  2AE9               	ljmp	PL12	;call to abstracted procedure
  2786  0309                     __end_ofi1_Init_Interupt:	
  2787                           
  2788                           	psect	text26
  2789  0309                     __ptext26:	
  2790 ;; *************** function i1_Init_GPIO *****************
  2791 ;; Defined at:
  2792 ;;		line 13 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2793 ;; Parameters:    Size  Location     Type
  2794 ;;		None
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;		None
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  1    wreg      void 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2
  2801 ;; Tracked objects:
  2802 ;;		On entry : 300/100
  2803 ;;		On exit  : 300/100
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1
  2806 ;;      Params:         0       0       0
  2807 ;;      Locals:         0       0       0
  2808 ;;      Temps:          0       0       0
  2809 ;;      Totals:         0       0       0
  2810 ;;Total ram usage:        0 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		i1_Init_Config
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function i1_Init_GPIO
  2821  0309                     i1_Init_GPIO:	
  2822                           
  2823                           ;init.c: 14: TRISA = 0;
  2824                           
  2825                           ;incstack = 0
  2826                           ; Regs used in i1_Init_GPIO: [wreg+status,2]
  2827                           
  2828                           ;init.c: 15: TRISB = 0;
  2829                           
  2830                           ;init.c: 16: TRISC = 0;
  2831                           
  2832                           ;init.c: 17: WPUA = 0xFF;
  2833                           
  2834                           ;init.c: 18: WPUB = 0xFF;
  2835                           
  2836                           ;init.c: 19: WPUC = 0xFF;
  2837                           
  2838                           ;init.c: 20: PORTA = 0xFF;
  2839                           
  2840                           ;init.c: 21: PORTB = 0xFF;
  2841                           
  2842                           ;init.c: 22: PORTC = 0xFF;
  2843                           
  2844                           ;init.c: 23: IOCB = 0x00;
  2845  0309  2A7D               	ljmp	PL2	;call to abstracted procedure
  2846  030A                     __end_ofi1_Init_GPIO:	
  2847  007E                     btemp	set	126	;btemp
  2848  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      33
    BANK1            80      0       0

Pointer List with Targets:

    resetKey@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 

    key_driver@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 

    sacnKeyInput@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 


Critical Paths under _main in COMMON

    _scanKeys->_sacnKeyInput
    _checkUsbStatus->_closeFan
    _setFanLevel->_closeFan
    _Init_Config->_resetKey

Critical Paths under _Timer0_Isr in COMMON

    i1_Init_Config->i1_resetKey

Critical Paths under _main in BANK0

    _scanKeys->_sacnKeyInput
    _readVrefADC->_ADC_Sample
    _checkKeys->_setFanLevel
    _setFanLevel->___awdiv

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2000
                                             10 BANK0      1     1      0
                        _Init_Config
                         _Sleep_Mode
                          _checkKeys
                     _checkUsbStatus
                        _readVrefADC
                           _scanKeys
 ---------------------------------------------------------------------------------
 (1) _scanKeys                                             0     0      0     154
                       _sacnKeyInput
 ---------------------------------------------------------------------------------
 (2) _sacnKeyInput                                         3     3      0     154
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _readVrefADC                                          0     0      0     458
                         _ADC_Sample
                           _DelayXms
 ---------------------------------------------------------------------------------
 (2) _DelayXms                                             3     3      0     167
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Sample                                           8     8      0     291
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _checkUsbStatus                                       2     2      0       0
                                              0 BANK0      2     2      0
                           _closeFan
 ---------------------------------------------------------------------------------
 (1) _checkKeys                                            0     0      0    1273
                           _checkFan
                         _key_driver
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _setFanLevel                                          4     4      0     736
                                              8 BANK0      2     2      0
                            ___awdiv
                           _closeFan
 ---------------------------------------------------------------------------------
 (2) _closeFan                                             1     1      0       0
                                              4 COMMON     1     1      0
                           _Init_PWM
                         _Sleep_Mode
 ---------------------------------------------------------------------------------
 (3) _Sleep_Mode                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     606
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _key_driver                                           3     3      0     537
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _checkFan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Config                                          0     0      0     115
                          _Init_GPIO
                      _Init_Interupt
                           _Init_PWM
                        _Init_System
                           _resetKey
 ---------------------------------------------------------------------------------
 (2) _resetKey                                             1     1      0     115
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Interupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_Isr                                           3     3      0      88
                                              1 COMMON     3     3      0
                      i1_Init_Config
 ---------------------------------------------------------------------------------
 (6) i1_Init_Config                                        0     0      0      88
                        i1_Init_GPIO
                    i1_Init_Interupt
                         i1_Init_PWM
                      i1_Init_System
                         i1_resetKey
 ---------------------------------------------------------------------------------
 (7) i1_resetKey                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_Init_System                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_PWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_Interupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_GPIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Config
     _Init_GPIO
     _Init_Interupt
     _Init_PWM
     _Init_System
     _resetKey
   _Sleep_Mode
   _checkKeys
     _checkFan
     _key_driver
     _setFanLevel
       ___awdiv
       _closeFan
         _Init_PWM
         _Sleep_Mode
   _checkUsbStatus
     _closeFan
       _Init_PWM
       _Sleep_Mode
   _readVrefADC
     _ADC_Sample
     _DelayXms
   _scanKeys
     _sacnKeyInput

 _Timer0_Isr (ROOT)
   i1_Init_Config
     i1_Init_GPIO
     i1_Init_Interupt
     i1_Init_PWM
     i1_Init_System
     i1_resetKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      21       5       41.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B       8        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 15 15:06:56 2020

         ??i1_Init_System 0070                         pc 0002                        PL2 027D  
                      PL4 00AF                        PL6 02B0                        PL8 0231  
                      _TO 001C              ___awdiv@sign 003B                        fsr 0004  
                     PL10 02D9                       PL12 02E9                       PL14 023A  
                     PL16 00BE                       _GIE 005F                       _PR2 0092  
                     u985 00ED       __size_of_ADC_Sample 0096                       fsr0 0004  
                     indf 0000                      S3445 0300                      l1123 0169  
                    l1160 025F                      l1146 01C1                      l3201 01B3  
                    l3115 0269                      l3221 0122                      l3213 0118  
                    l3303 02C6                      l3233 0135                      l3241 0148  
                    l3209 0110                      l3145 00D6                      l3235 0137  
                    l3227 0127                      l3171 0103                      l3155 00E4  
                    l3139 00CD                      l3323 015F                      l3315 014D  
                    l3411 01E5                      l3333 0165                      l3325 0166  
                    l3261 0034                      l3239 013B                      l3167 00FB  
                    l3191 01A9                      l3351 0263                      l1744 0063  
                    l3097 01ED                      l3193 01AA                      l3273 0057  
                    l1738 002F                      l3195 01AD                      l3187 01A4  
                    l3179 018F                      l3275 005F                      l3197 01B0  
                    l3357 0264                      l3269 004D                      l3293 02C1  
                    l3387 01CB                      l3389 01CC                      l3399 01D5  
                    l2769 02CA                      _T0IF 005A                      u1044 021A  
                    u1205 0099                      u1045 0218                      u1145 0053  
                    u1155 005D                      _IOCB 0096                      _RBIE 005B  
                    _RBIF 0058                      _TMR0 0001    __end_of_checkUsbStatus 0189  
                    _WPUA 018E                      _WPUB 0095                      _WPUC 018F  
                    _key1 002F                      _main 01C2                      btemp 007E  
              i1_resetKey 029F                      start 000C             ??_Init_Config 0075  
           ??_Init_System 0074             _Init_Interupt 02E8                     ?_main 0070  
         __end_of___awdiv 0108           ___awdiv@divisor 0036                     _T2CON 0012  
            ?_readVrefADC 0070        key_driver@key_read 0037           ___awdiv@counter 003A  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
             ?i1_Init_PWM 0070                     pclath 000A           ?_checkUsbStatus 0070  
                   status 0003                     wtemp0 007E          __end_of_DelayXms 02CA  
            ?_setFanLevel 0070           __initialization 000D              __end_of_main 01ED  
        __end_of_Init_PWM 02B0            ?_Init_Interupt 0070       __end_of_Init_Config 0231  
                  ??_main 0040       __end_of_Init_System 0307                    _ADCON0 001F  
                  _ADCON1 009F                    _ADRESH 001E                    _ADRESL 009E  
                  _CCPR1L 0015          ___awdiv@dividend 0038                    _GODONE 00F9  
                  i1l3051 0249                    i1l1189 024D                    _INTCON 000B  
           ?_sacnKeyInput 0070        __size_of_Init_GPIO 0001                    _OSCCON 008F  
                  _TMR2IF 0061              ??_ADC_Sample 0036          __end_of_checkFan 02D6  
             ?i1_resetKey 0070                _Sleep_Mode 01ED                _Timer0_Isr 0240  
        __end_of_closeFan 027C                 ??___awdiv 0074       __size_ofi1_Init_PWM 0001  
            ?i1_Init_GPIO 0070          __end_of_scanKeys 02FC          ___awdiv@quotient 003C  
        __end_of_resetKey 029F              __pdataCOMMON 0078        __end_of_ADC_Sample 00AF  
         i1_Init_Interupt 0308                    saved_w 007E            ??_sacnKeyInput 0074  
 __end_of__initialization 0017               _Init_Config 022A            __pcstackCOMMON 0070  
         ??_Init_Interupt 0074        __size_of_checkKeys 0013               _Init_System 0304  
              __end_ofPL2 028F                __end_ofPL4 00BE                __end_ofPL6 02BD  
              __end_ofPL8 023A         __end_of_Init_GPIO 027D       __size_ofi1_resetKey 0010  
               ?_DelayXms 0070      __size_of_readVrefADC 0004                __pbssBANK0 0020  
               ?_Init_PWM 0070               ?_Sleep_Mode 0070               ?_Timer0_Isr 0070  
   __end_ofi1_Init_Config 02F6                __pmaintext 01C2      __size_of_setFanLevel 0039  
              __pintentry 0004                   _CCP1CON 0017     __end_ofi1_Init_System 02D9  
 __end_ofi1_Init_Interupt 0309                 ?_checkFan 0070      key_driver@key_return 0036  
              ??_DelayXms 0074          ??_checkUsbStatus 0036                 ?_closeFan 0070  
            ??i1_Init_PWM 0070         __end_of_checkKeys 0269                ??_Init_PWM 0074  
               ?_scanKeys 0070                 ?_resetKey 0070               resetKey@key 0074  
         ADC_Sample@admax 0024           ADC_Sample@admin 0026           ADC_Sample@adsum 0020  
                 ___awdiv 00C3                _key_driver 0108      __end_of_sacnKeyInput 022A  
      __end_ofi1_Init_PWM 0308                   __ptext1 02F6                   __ptext2 020D  
                 __ptext3 02FC                   __ptext4 02BD                   __ptext5 0019  
                 __ptext6 014A                   __ptext7 0256                   __ptext8 0189  
                 __ptext9 0269      __size_ofi1_Init_GPIO 0001                ??_checkFan 0074  
     __size_of_Sleep_Mode 0020       __size_of_Timer0_Isr 0016                ??_closeFan 0074  
                 clrloop0 02E1      end_of_initialization 0017                 DelayXms@i 0037  
               DelayXms@j 0038                 DelayXms@x 0036                ??_scanKeys 0076  
            ??i1_resetKey 0070                ??_resetKey 0074           sacnKeyInput@key 0036  
        ?i1_Init_Interupt 0070        __end_ofi1_resetKey 02AF              ?_Init_Config 0070  
             ?_key_driver 0070              ?_Init_System 0070          setFanLevel@level 003E  
           __pidataCOMMON 0000               __end_ofPL10 02E0               __end_ofPL12 02EF  
             __end_ofPL14 0240               __end_ofPL16 00C3       start_initialization 000D  
               _Init_GPIO 027C         __size_of_DelayXms 000D         __size_of_Init_PWM 0001  
            ??_Sleep_Mode 0074              ??_Timer0_Isr 0071     __size_of_sacnKeyInput 001D  
       ADC_Sample@ad_temp 003C     __end_of_Init_Interupt 02E9         ADC_Sample@adtimes 002E  
           ??_readVrefADC 0074               __pbssCOMMON 0076                ?_Init_GPIO 0070  
               ___latbits 0000             __pcstackBANK0 0036         __size_of_checkFan 000C  
      __end_of_Sleep_Mode 020D        __end_of_Timer0_Isr 0256       __size_of_key_driver 0042  
       __size_of_closeFan 0013              _sacnKeyInput 020D              _currentLevel 0079  
               _checkKeys 0256             ??_setFanLevel 0075         __size_of_scanKeys 0006  
                ?___awdiv 0036         __size_of_resetKey 0010                 __pswtext1 0300  
               _count10Ms 0028                 _countTime 002A            ADC_Sample@adch 003A  
  __size_ofi1_Init_Config 0007       __end_of_readVrefADC 0300               ADC_Sample@i 003B  
  __size_ofi1_Init_System 0003         interrupt_function 0004                ?_checkKeys 0070  
               _time0Flag 0077                 clear_ram0 02E0      __size_of_Init_Config 0007  
    setFanLevel@tempLevel 003F             ??i1_Init_GPIO 0070       __end_of_setFanLevel 01C2  
    __size_of_Init_System 0003               ??_Init_GPIO 0074                  _DelayXms 02BD  
                _Init_PWM 02AF                _ADC_Sample 0019   __size_of_checkUsbStatus 003F  
           i1_Init_Config 02EF              ??_key_driver 0074          __size_of___awdiv 0045  
           key_driver@key 0038             i1_Init_System 02D6               _readVrefADC 02FC  
                _checkFan 02CA                _FAN_STATUS 0078       __end_ofi1_Init_GPIO 030A  
                _adresult 002C  __size_ofi1_Init_Interupt 0001                  __ptext10 01ED  
                __ptext11 00C3                  __ptext20 0240                  __ptext12 0108  
                __ptext21 02EF                  __ptext13 02CA                  __ptext22 029F  
                __ptext14 022A                  __ptext23 02D6                  __ptext15 028F  
                __ptext24 0307                  __ptext16 0304                  __ptext25 0308  
                __ptext17 02AF                  __ptext26 0309                  __ptext18 02E8  
                __ptext19 027C                  _closeFan 0269        __end_of_key_driver 014A  
           __size_of_main 002B               ??_checkKeys 0075                  _scanKeys 02F6  
                _lowVTime 0076                  _resetKey 028F               _setFanLevel 0189  
          ?i1_Init_Config 0070            ?i1_Init_System 0070                  intlevel1 0000  
             ?_ADC_Sample 0070             i1resetKey@key 0070               i1_Init_GPIO 0309  
              _OPTION_REG 0081                i1_Init_PWM 0307    __size_of_Init_Interupt 0001  
       ??i1_Init_Interupt 0070            _checkUsbStatus 014A           ??i1_Init_Config 0071  
