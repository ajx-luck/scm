

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 12 18:02:25 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1713S
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	swtext1,local,class=CONST,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	pa_nodes0,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMMON
    80  0000                     __pidataCOMMON:	
    81  001F                     _ADCON0	set	31
    82  001E                     _ADRESH	set	30
    83  0017                     _CCP1CON	set	23
    84  0015                     _CCPR1L	set	21
    85  0012                     _T2CON	set	18
    86  000B                     _INTCON	set	11
    87  0007                     _PORTC	set	7
    88  0006                     _PORTB	set	6
    89  0005                     _PORTA	set	5
    90  0001                     _TMR0	set	1
    91  00F9                     _GODONE	set	249
    92  0061                     _TMR2IF	set	97
    93  005F                     _GIE	set	95
    94  005B                     _RBIE	set	91
    95  005A                     _T0IF	set	90
    96  0058                     _RBIF	set	88
    97  001C                     _TO	set	28
    98  009F                     _ADCON1	set	159
    99  009E                     _ADRESL	set	158
   100  0096                     _IOCB	set	150
   101  0095                     _WPUB	set	149
   102  0092                     _PR2	set	146
   103  008F                     _OSCCON	set	143
   104  0087                     _TRISC	set	135
   105  0086                     _TRISB	set	134
   106  0085                     _TRISA	set	133
   107  0081                     _OPTION_REG	set	129
   108  018F                     _WPUC	set	399
   109  018E                     _WPUA	set	398
   110                           
   111                           	psect	cinit
   112  000D                     start_initialization:	
   113                           ; #config settings
   114                           
   115  000D                     __initialization:	
   116                           
   117                           ;initializer for _FAN_STATUS
   118  000D  3001               	movlw	1
   119  000E  00F7               	movwf	__pdataCOMMON& (0+127)
   120                           
   121                           ;initializer for _currentLevel
   122  000F  3003               	movlw	3
   123  0010  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   124  0011  3020               	movlw	low __pbssBANK0
   125                           
   126                           ; Clear objects allocated to BANK0
   127  0012  1383               	bcf	3,7	;select IRP bank0
   128  0013  0084               	movwf	4
   129  0014  3036               	movlw	low (__pbssBANK0+22)
   130  0015  22B2               	fcall	clear_ram0
   131                           
   132                           ; Clear objects allocated to COMMON
   133  0016  01F9               	clrf	__pbssCOMMON& (0+127)
   134  0017                     end_of_initialization:	
   135                           ;End of C runtime variable initialization code
   136                           
   137  0017                     __end_of__initialization:	
   138  0017  0183               	clrf	3
   139  0018  2983               	ljmp	_main	;jump to C main() function
   140                           
   141                           	psect	bssCOMMON
   142  0079                     __pbssCOMMON:	
   143  0079                     _time0Flag:	
   144  0079                     	ds	1
   145                           
   146                           	psect	dataCOMMON
   147  0077                     __pdataCOMMON:	
   148  0077                     _FAN_STATUS:	
   149  0077                     	ds	1
   150  0078                     _currentLevel:	
   151  0078                     	ds	1
   152                           
   153                           	psect	bssBANK0
   154  0020                     __pbssBANK0:	
   155  0020                     ADC_Sample@adsum:	
   156  0020                     	ds	4
   157  0024                     ADC_Sample@admax:	
   158  0024                     	ds	2
   159  0026                     ADC_Sample@admin:	
   160  0026                     	ds	2
   161  0028                     _count10Ms:	
   162  0028                     	ds	2
   163  002A                     _countTime:	
   164  002A                     	ds	2
   165  002C                     _adresult:	
   166  002C                     	ds	2
   167  002E                     ADC_Sample@adtimes:	
   168  002E                     	ds	1
   169  002F                     _key1:	
   170  002F                     	ds	7
   171                           
   172                           	psect	clrtext
   173  02B2                     clear_ram0:	
   174                           ;	Called with FSR containing the base address, and
   175                           ;	W with the last address+1
   176                           
   177  02B2  0064               	clrwdt	;clear the watchdog before getting into this loop
   178  02B3                     clrloop0:	
   179  02B3  0180               	clrf	0	;clear RAM location pointed to by FSR
   180  02B4  0A84               	incf	4,f	;increment pointer
   181  02B5  0604               	xorwf	4,w	;XOR with final address
   182  02B6  1903               	btfsc	3,2	;have we reached the end yet?
   183  02B7  3400               	retlw	0	;all done for this memory range, return
   184  02B8  0604               	xorwf	4,w	;XOR again to restore value
   185  02B9  2AB3               	goto	clrloop0	;do the next byte
   186                           
   187                           	psect	cstackCOMMON
   188  0070                     __pcstackCOMMON:	
   189  0070                     ?_closeFan:	
   190  0070                     ?_sacnKeyInput:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ?_key_driver:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_Sleep_Mode:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ?_Init_Config:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_resetKey:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_Init_System:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ?_Init_GPIO:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0070                     ?_Init_Interupt:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0070                     ?_checkUsbStatus:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ?_Init_PWM:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ?_setFanLevel:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_checkFan:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ?_scanKeys:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_checkKeys:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_main:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_Timer0_Isr:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_ADC_Sample:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_DelayXms:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?i1_Init_System:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ??i1_Init_System:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ?i1_Init_GPIO:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ??i1_Init_GPIO:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?i1_Init_Interupt:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ??i1_Init_Interupt:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?i1_Init_PWM:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ??i1_Init_PWM:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?i1_Init_Config:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?i1_resetKey:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ??i1_resetKey:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_readVrefADC:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     i1resetKey@key:	
   281                           ; 2 bytes @ 0x0
   282                           
   283                           
   284                           ; 1 bytes @ 0x0
   285  0070                     	ds	1
   286  0071                     ??_Timer0_Isr:	
   287  0071                     ??i1_Init_Config:	
   288                           ; 1 bytes @ 0x1
   289                           
   290                           
   291                           ; 1 bytes @ 0x1
   292  0071                     	ds	3
   293  0074                     ??_closeFan:	
   294  0074                     ??_sacnKeyInput:	
   295                           ; 1 bytes @ 0x4
   296                           
   297  0074                     ??_key_driver:	
   298                           ; 1 bytes @ 0x4
   299                           
   300  0074                     ??_Sleep_Mode:	
   301                           ; 1 bytes @ 0x4
   302                           
   303  0074                     ??_resetKey:	
   304                           ; 1 bytes @ 0x4
   305                           
   306  0074                     ??_Init_System:	
   307                           ; 1 bytes @ 0x4
   308                           
   309  0074                     ??_Init_GPIO:	
   310                           ; 1 bytes @ 0x4
   311                           
   312  0074                     ??_Init_Interupt:	
   313                           ; 1 bytes @ 0x4
   314                           
   315  0074                     ??_checkUsbStatus:	
   316                           ; 1 bytes @ 0x4
   317                           
   318  0074                     ??_Init_PWM:	
   319                           ; 1 bytes @ 0x4
   320                           
   321  0074                     ??_setFanLevel:	
   322                           ; 1 bytes @ 0x4
   323                           
   324  0074                     ??_checkFan:	
   325                           ; 1 bytes @ 0x4
   326                           
   327  0074                     ??_DelayXms:	
   328                           ; 1 bytes @ 0x4
   329                           
   330  0074                     ??___awdiv:	
   331                           ; 1 bytes @ 0x4
   332                           
   333  0074                     setFanLevel@level:	
   334                           ; 1 bytes @ 0x4
   335                           
   336  0074                     DelayXms@x:	
   337                           ; 1 bytes @ 0x4
   338                           
   339  0074                     key_driver@key_return:	
   340                           ; 1 bytes @ 0x4
   341                           
   342  0074                     resetKey@key:	
   343                           ; 1 bytes @ 0x4
   344                           
   345                           
   346                           ; 1 bytes @ 0x4
   347  0074                     	ds	1
   348  0075                     ??_Init_Config:	
   349  0075                     setFanLevel@tempLevel:	
   350                           ; 1 bytes @ 0x5
   351                           
   352  0075                     DelayXms@i:	
   353                           ; 1 bytes @ 0x5
   354                           
   355  0075                     key_driver@key_read:	
   356                           ; 1 bytes @ 0x5
   357                           
   358                           
   359                           ; 1 bytes @ 0x5
   360  0075                     	ds	1
   361  0076                     DelayXms@j:	
   362  0076                     sacnKeyInput@key:	
   363                           ; 1 bytes @ 0x6
   364                           
   365  0076                     key_driver@key:	
   366                           ; 1 bytes @ 0x6
   367                           
   368                           
   369                           ; 1 bytes @ 0x6
   370  0076                     	ds	1
   371  0077                     ??_readVrefADC:	
   372  0077                     ??_scanKeys:	
   373                           ; 1 bytes @ 0x7
   374                           
   375  0077                     ??_checkKeys:	
   376                           ; 1 bytes @ 0x7
   377                           
   378  0077                     ??_main:	
   379                           ; 1 bytes @ 0x7
   380                           
   381                           
   382                           	psect	cstackBANK0
   383  0036                     __pcstackBANK0:	
   384                           ; 1 bytes @ 0x7
   385                           
   386  0036                     ??_ADC_Sample:	
   387  0036                     ?___awdiv:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0036                     ___awdiv@divisor:	
   391                           ; 2 bytes @ 0x0
   392                           
   393                           
   394                           ; 2 bytes @ 0x0
   395  0036                     	ds	2
   396  0038                     ___awdiv@dividend:	
   397                           
   398                           ; 2 bytes @ 0x2
   399  0038                     	ds	2
   400  003A                     ADC_Sample@adch:	
   401  003A                     ___awdiv@counter:	
   402                           ; 1 bytes @ 0x4
   403                           
   404                           
   405                           ; 1 bytes @ 0x4
   406  003A                     	ds	1
   407  003B                     ADC_Sample@i:	
   408  003B                     ___awdiv@sign:	
   409                           ; 1 bytes @ 0x5
   410                           
   411                           
   412                           ; 1 bytes @ 0x5
   413  003B                     	ds	1
   414  003C                     ADC_Sample@ad_temp:	
   415  003C                     ___awdiv@quotient:	
   416                           ; 2 bytes @ 0x6
   417                           
   418                           
   419                           ; 2 bytes @ 0x6
   420  003C                     	ds	2
   421                           
   422                           	psect	maintext
   423  0183                     __pmaintext:	
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 185 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : B00/0
   440 ;;		On exit  : 300/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMMON   BANK0   BANK1
   443 ;;      Params:         0       0       0
   444 ;;      Locals:         0       0       0
   445 ;;      Temps:          0       0       0
   446 ;;      Totals:         0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels required when called:    7
   449 ;; This function calls:
   450 ;;		_Init_Config
   451 ;;		_Sleep_Mode
   452 ;;		_checkKeys
   453 ;;		_checkUsbStatus
   454 ;;		_readVrefADC
   455 ;;		_scanKeys
   456 ;; This function is called by:
   457 ;;		Startup code after reset
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _main
   463  0183                     _main:	
   464                           
   465                           ;main.c: 186: Sleep_Mode();
   466                           
   467                           ;incstack = 0
   468                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   469  0183  21C3               	fcall	_Sleep_Mode
   470                           
   471                           ;main.c: 187: Init_Config();
   472  0184  22BA               	fcall	_Init_Config
   473  0185                     l3178:	
   474                           
   475                           ;main.c: 190: if (time0Flag) {
   476  0185  0879               	movf	_time0Flag,w
   477  0186  1903               	btfsc	3,2
   478  0187  298E               	goto	l3188
   479  0188  0064               	clrwdt	;# 
   480                           
   481                           ;main.c: 192: time0Flag = 0;
   482  0189  01F9               	clrf	_time0Flag
   483                           
   484                           ;main.c: 193: scanKeys();
   485  018A  2295               	fcall	_scanKeys
   486                           
   487                           ;main.c: 194: count10Ms++;
   488  018B  0AA8               	incf	_count10Ms,f
   489  018C  1903               	skipnz
   490  018D  0AA9               	incf	_count10Ms+1,f
   491  018E                     l3188:	
   492                           
   493                           ;main.c: 195: }
   494                           ;main.c: 198: if (count10Ms == 100) {
   495  018E  3064               	movlw	100
   496  018F  1283               	bcf	3,5	;RP0=0, select bank0
   497  0190  0628               	xorwf	_count10Ms,w
   498  0191  0429               	iorwf	_count10Ms+1,w
   499  0192  1D03               	btfss	3,2
   500  0193  299A               	goto	l3198
   501                           
   502                           ;main.c: 199: checkKeys();
   503  0194  222B               	fcall	_checkKeys
   504                           
   505                           ;main.c: 200: count10Ms = 0;
   506  0195  1283               	bcf	3,5	;RP0=0, select bank0
   507  0196  01A8               	clrf	_count10Ms
   508  0197  01A9               	clrf	_count10Ms+1
   509                           
   510                           ;main.c: 202: checkUsbStatus();
   511  0198  21A4               	fcall	_checkUsbStatus
   512                           
   513                           ;main.c: 204: readVrefADC();
   514  0199  22C8               	fcall	_readVrefADC
   515  019A                     l3198:	
   516                           
   517                           ;main.c: 205: }
   518                           ;main.c: 207: if (countTime == 1000) {
   519  019A  30E8               	movlw	232
   520  019B  062A               	xorwf	_countTime,w
   521  019C  3003               	movlw	3
   522  019D  1903               	skipnz
   523  019E  062B               	xorwf	_countTime+1,w
   524  019F  1D03               	btfss	3,2
   525  01A0  2985               	goto	l3178
   526                           
   527                           ;main.c: 208: countTime = 0;
   528  01A1  01AA               	clrf	_countTime
   529  01A2  01AB               	clrf	_countTime+1
   530  01A3  2985               	goto	l3178
   531  01A4                     __end_of_main:	
   532                           
   533                           	psect	text1
   534  0295                     __ptext1:	
   535 ;; *************** function _scanKeys *****************
   536 ;; Defined at:
   537 ;;		line 155 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;                  1    wreg      void 
   544 ;; Registers used:
   545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/100
   548 ;;		On exit  : B00/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMMON   BANK0   BANK1
   551 ;;      Params:         0       0       0
   552 ;;      Locals:         0       0       0
   553 ;;      Temps:          0       0       0
   554 ;;      Totals:         0       0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; Hardware stack levels required when called:    4
   558 ;; This function calls:
   559 ;;		_sacnKeyInput
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           
   566                           ;psect for function _scanKeys
   567  0295                     _scanKeys:	
   568                           
   569                           ;main.c: 156: key1.key_addr_result = PORTB;
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _scanKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   573  0295  1283               	bcf	3,5	;RP0=0, select bank0
   574  0296  1303               	bcf	3,6	;RP1=0, select bank0
   575  0297  0806               	movf	6,w	;volatile
   576  0298  00B4               	movwf	_key1+5
   577                           
   578                           ;main.c: 157: sacnKeyInput(&key1);
   579  0299  302F               	movlw	(low (_key1| 0))& (0+255)
   580  029A  21E2               	fcall	_sacnKeyInput
   581                           
   582                           ;main.c: 158: countTime++;
   583  029B  0AAA               	incf	_countTime,f
   584  029C  1903               	skipnz
   585  029D  0AAB               	incf	_countTime+1,f
   586  029E  0008               	return
   587  029F                     __end_of_scanKeys:	
   588                           
   589                           	psect	text2
   590  01E2                     __ptext2:	
   591 ;; *************** function _sacnKeyInput *****************
   592 ;; Defined at:
   593 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;  key             1    wreg     PTR struct Keys
   596 ;;		 -> key1(7), 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  key             1    6[COMMON] PTR struct Keys
   599 ;;		 -> key1(7), 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   604 ;; Tracked objects:
   605 ;;		On entry : 300/0
   606 ;;		On exit  : B00/0
   607 ;;		Unchanged: 300/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1
   609 ;;      Params:         0       0       0
   610 ;;      Locals:         1       0       0
   611 ;;      Temps:          2       0       0
   612 ;;      Totals:         3       0       0
   613 ;;Total ram usage:        3 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; Hardware stack levels required when called:    3
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_scanKeys
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           
   624                           ;psect for function _sacnKeyInput
   625  01E2                     _sacnKeyInput:	
   626                           
   627                           ;incstack = 0
   628                           ; Regs used in _sacnKeyInput: [wreg-fsr0h+status,2+status,0]
   629                           ;sacnKeyInput@key stored from wreg
   630  01E2  00F6               	movwf	sacnKeyInput@key
   631                           
   632                           ;scankey.c: 4: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
   633  01E3  3E05               	addlw	5
   634  01E4  0084               	movwf	4
   635  01E5  1383               	bcf	3,7	;select IRP bank0
   636  01E6  0800               	movf	0,w
   637  01E7  00F4               	movwf	??_sacnKeyInput
   638  01E8  0876               	movf	sacnKeyInput@key,w
   639  01E9  3E06               	addlw	6
   640  01EA  0084               	movwf	4
   641  01EB  0A00               	incf	0,w
   642  01EC  29EF               	goto	u524
   643  01ED                     u525:	
   644  01ED  1003               	clrc
   645  01EE  0CF4               	rrf	??_sacnKeyInput,f
   646  01EF                     u524:	
   647  01EF  3EFF               	addlw	-1
   648  01F0  1D03               	skipz
   649  01F1  29ED               	goto	u525
   650  01F2  0874               	movf	??_sacnKeyInput,w
   651  01F3  00F5               	movwf	??_sacnKeyInput+1
   652  01F4  0876               	movf	sacnKeyInput@key,w
   653  01F5  3E04               	addlw	4
   654  01F6  0084               	movwf	4
   655  01F7  0875               	movf	??_sacnKeyInput+1,w
   656  01F8  0080               	movwf	0
   657  01F9  0876               	movf	sacnKeyInput@key,w
   658  01FA  3E04               	addlw	4
   659  01FB  0084               	movwf	4
   660  01FC  3001               	movlw	1
   661  01FD  0580               	andwf	0,f
   662  01FE  0008               	return
   663  01FF                     __end_of_sacnKeyInput:	
   664                           
   665                           	psect	text3
   666  02C8                     __ptext3:	
   667 ;; *************** function _readVrefADC *****************
   668 ;; Defined at:
   669 ;;		line 90 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;                  2  557[None  ] unsigned int 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, pclath, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 300/0
   680 ;;		On exit  : 300/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1
   683 ;;      Params:         0       0       0
   684 ;;      Locals:         0       0       0
   685 ;;      Temps:          0       0       0
   686 ;;      Totals:         0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    4
   690 ;; This function calls:
   691 ;;		_ADC_Sample
   692 ;;		_DelayXms
   693 ;; This function is called by:
   694 ;;		_main
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _readVrefADC
   700  02C8                     _readVrefADC:	
   701                           
   702                           ;adc.c: 92: DelayXms(1);
   703                           
   704                           ;incstack = 0
   705                           ; Regs used in _readVrefADC: [wreg+status,2+status,0+pclath+cstack]
   706  02C8  3001               	movlw	1
   707  02C9  227F               	fcall	_DelayXms
   708                           
   709                           ;adc.c: 93: ADC_Sample(15);
   710  02CA  300F               	movlw	15
   711  02CB  2819               	ljmp	_ADC_Sample
   712  02CC                     __end_of_readVrefADC:	
   713                           
   714                           	psect	text4
   715  027F                     __ptext4:	
   716 ;; *************** function _DelayXms *****************
   717 ;; Defined at:
   718 ;;		line 82 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  x               1    wreg     unsigned char 
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  x               1    4[COMMON] unsigned char 
   723 ;;  j               1    6[COMMON] unsigned char 
   724 ;;  i               1    5[COMMON] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 300/0
   731 ;;		On exit  : 300/0
   732 ;;		Unchanged: 300/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1
   734 ;;      Params:         0       0       0
   735 ;;      Locals:         3       0       0
   736 ;;      Temps:          0       0       0
   737 ;;      Totals:         3       0       0
   738 ;;Total ram usage:        3 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; Hardware stack levels required when called:    3
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_readVrefADC
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _DelayXms
   750  027F                     _DelayXms:	
   751                           
   752                           ;incstack = 0
   753                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   754                           ;DelayXms@x stored from wreg
   755  027F  00F4               	movwf	DelayXms@x
   756                           
   757                           ;adc.c: 84: unsigned char i,j;
   758                           ;adc.c: 85: for(i=x;i>0;i--)
   759  0280  00F5               	movwf	DelayXms@i
   760  0281                     l2814:	
   761  0281  0875               	movf	DelayXms@i,w
   762  0282  1903               	btfsc	3,2
   763  0283  0008               	return
   764                           
   765                           ;adc.c: 86: for(j=153;j>0;j--);
   766  0284  3099               	movlw	153
   767  0285  00F6               	movwf	DelayXms@j
   768  0286                     l2824:	
   769  0286  0BF6               	decfsz	DelayXms@j,f
   770  0287  2A86               	goto	l2824
   771  0288  03F5               	decf	DelayXms@i,f
   772  0289  2A81               	goto	l2814
   773  028A                     __end_of_DelayXms:	
   774                           
   775                           	psect	text5
   776  0019                     __ptext5:	
   777 ;; *************** function _ADC_Sample *****************
   778 ;; Defined at:
   779 ;;		line 11 in file "E:\project\project0508\scm\n9_fan_no_led\adc.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  adch            1    wreg     unsigned char 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;  adch            1    4[BANK0 ] unsigned char 
   784 ;;  ad_temp         2    6[BANK0 ] volatile unsigned int 
   785 ;;  i               1    5[BANK0 ] unsigned char 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0
   790 ;; Tracked objects:
   791 ;;		On entry : 300/0
   792 ;;		On exit  : 300/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1
   795 ;;      Params:         0       0       0
   796 ;;      Locals:         0       4       0
   797 ;;      Temps:          0       4       0
   798 ;;      Totals:         0       8       0
   799 ;;Total ram usage:        8 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    3
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_readVrefADC
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _ADC_Sample
   811  0019                     _ADC_Sample:	
   812                           
   813                           ;incstack = 0
   814                           ; Regs used in _ADC_Sample: [wreg+status,2+status,0]
   815                           ;ADC_Sample@adch stored from wreg
   816  0019  00BA               	movwf	ADC_Sample@adch
   817                           
   818                           ;adc.c: 13: static unsigned long adsum = 0;
   819                           ;adc.c: 14: static unsigned int admin = 0,admax = 0;
   820                           ;adc.c: 15: static unsigned char adtimes = 0;
   821                           ;adc.c: 16: volatile unsigned int ad_temp;
   822                           ;adc.c: 17: ADCON1 = 0;
   823  001A  1683               	bsf	3,5	;RP0=1, select bank1
   824  001B  019F               	clrf	31	;volatile
   825                           
   826                           ;adc.c: 18: ADCON0 = 0X41 | (adch << 2);
   827  001C  1283               	bcf	3,5	;RP0=0, select bank0
   828  001D  083A               	movf	ADC_Sample@adch,w
   829  001E  00B6               	movwf	??_ADC_Sample
   830  001F  3001               	movlw	1
   831  0020  1003               	clrc
   832  0021                     L1:	
   833  0021  0DB6               	rlf	??_ADC_Sample,f
   834  0022  3EFF               	addlw	-1
   835  0023  1003               	clrc
   836  0024  1D03               	skipz
   837  0025  2821               	goto	L1
   838  0026  0D36               	rlf	??_ADC_Sample,w
   839  0027  3841               	iorlw	65
   840  0028  009F               	movwf	31	;volatile
   841  0029  0000               	nop	;# 
   842  002A  0000               	nop	;# 
   843                           
   844                           ;adc.c: 21: GODONE = 1;
   845  002B  1283               	bcf	3,5	;RP0=0, select bank0
   846  002C  1303               	bcf	3,6	;RP1=0, select bank0
   847  002D  149F               	bsf	31,1	;volatile
   848                           
   849                           ;adc.c: 23: unsigned char i = 0;
   850  002E  01BB               	clrf	ADC_Sample@i
   851  002F                     l1731:	
   852                           ;adc.c: 24: while(GODONE)
   853                           
   854  002F  1C9F               	btfss	31,1	;volatile
   855  0030  2834               	goto	l3122
   856                           
   857                           ;adc.c: 25: {
   858                           ;adc.c: 26: if(0 == (--i))
   859  0031  0BBB               	decfsz	ADC_Sample@i,f
   860  0032  282F               	goto	l1731
   861  0033  0008               	return
   862  0034                     l3122:	
   863                           
   864                           ;adc.c: 28: }
   865                           ;adc.c: 30: ad_temp=(ADRESH<<4)+(ADRESL>>4);
   866  0034  081E               	movf	30,w	;volatile
   867  0035  00BC               	movwf	ADC_Sample@ad_temp	;volatile
   868  0036  01BD               	clrf	ADC_Sample@ad_temp+1	;volatile
   869  0037  0EBC               	swapf	ADC_Sample@ad_temp,f	;volatile
   870  0038  0EBD               	swapf	ADC_Sample@ad_temp+1,f	;volatile
   871  0039  30F0               	movlw	240
   872  003A  05BD               	andwf	ADC_Sample@ad_temp+1,f	;volatile
   873  003B  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   874  003C  390F               	andlw	15
   875  003D  04BD               	iorwf	ADC_Sample@ad_temp+1,f	;volatile
   876  003E  30F0               	movlw	240
   877  003F  05BC               	andwf	ADC_Sample@ad_temp,f	;volatile
   878  0040  1683               	bsf	3,5	;RP0=1, select bank1
   879  0041  0E1E               	swapf	30,w	;volatile
   880  0042  390F               	andlw	15
   881  0043  1283               	bcf	3,5	;RP0=0, select bank0
   882  0044  07BC               	addwf	ADC_Sample@ad_temp,f	;volatile
   883  0045  1803               	skipnc
   884  0046  0ABD               	incf	ADC_Sample@ad_temp+1,f	;volatile
   885                           
   886                           ;adc.c: 32: if(0 == admax)
   887  0047  0824               	movf	ADC_Sample@admax,w
   888  0048  0425               	iorwf	ADC_Sample@admax+1,w
   889  0049  1D03               	btfss	3,2
   890  004A  284D               	goto	l3130
   891                           
   892                           ;adc.c: 33: {
   893                           ;adc.c: 34: admax = ad_temp;
   894  004B  20BE               	fcall	PL16	;call to abstracted procedure
   895  004C  285F               	goto	l3136
   896  004D                     l3130:	
   897                           ;adc.c: 36: }
   898                           
   899                           ;adc.c: 35: admin = ad_temp;
   900                           
   901                           
   902                           ;adc.c: 37: else if(ad_temp > admax)
   903  004D  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   904  004E  0225               	subwf	ADC_Sample@admax+1,w
   905  004F  1D03               	skipz
   906  0050  2853               	goto	u975
   907  0051  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   908  0052  0224               	subwf	ADC_Sample@admax,w
   909  0053                     u975:	
   910  0053  1803               	skipnc
   911  0054  2857               	goto	l3134
   912                           
   913                           ;adc.c: 38: admax = ad_temp;
   914  0055  20BE               	fcall	PL16	;call to abstracted procedure
   915  0056  2863               	goto	l1737
   916  0057                     l3134:	
   917                           
   918                           ;adc.c: 39: else if(ad_temp < admin)
   919  0057  0827               	movf	ADC_Sample@admin+1,w
   920  0058  023D               	subwf	ADC_Sample@ad_temp+1,w	;volatile
   921  0059  1D03               	skipz
   922  005A  285D               	goto	u985
   923  005B  0826               	movf	ADC_Sample@admin,w
   924  005C  023C               	subwf	ADC_Sample@ad_temp,w	;volatile
   925  005D                     u985:	
   926  005D  1803               	skipnc
   927  005E  2863               	goto	l1737
   928  005F                     l3136:	
   929                           
   930                           ;adc.c: 40: admin = ad_temp;
   931  005F  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   932  0060  00A7               	movwf	ADC_Sample@admin+1
   933  0061  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   934  0062  00A6               	movwf	ADC_Sample@admin
   935  0063                     l1737:	
   936                           
   937                           ;adc.c: 42: adsum += ad_temp;
   938  0063  083C               	movf	ADC_Sample@ad_temp,w	;volatile
   939  0064  00B6               	movwf	??_ADC_Sample
   940  0065  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
   941  0066  00B7               	movwf	??_ADC_Sample+1
   942  0067  01B8               	clrf	??_ADC_Sample+2
   943  0068  01B9               	clrf	??_ADC_Sample+3
   944  0069  0836               	movf	??_ADC_Sample,w
   945  006A  07A0               	addwf	ADC_Sample@adsum,f
   946  006B  0837               	movf	??_ADC_Sample+1,w
   947  006C  1103               	clrz
   948  006D  1803               	skipnc
   949  006E  3E01               	addlw	1
   950  006F  1D03               	btfss	3,2
   951  0070  07A1               	addwf	ADC_Sample@adsum+1,f
   952  0071  0838               	movf	??_ADC_Sample+2,w
   953  0072  1103               	clrz
   954  0073  1803               	skipnc
   955  0074  3E01               	addlw	1
   956  0075  1D03               	btfss	3,2
   957  0076  07A2               	addwf	ADC_Sample@adsum+2,f
   958  0077  0839               	movf	??_ADC_Sample+3,w
   959  0078  1103               	clrz
   960  0079  1803               	skipnc
   961  007A  3E01               	addlw	1
   962  007B  1D03               	btfss	3,2
   963  007C  07A3               	addwf	ADC_Sample@adsum+3,f
   964                           
   965                           ;adc.c: 43: if(++adtimes >= 10)
   966  007D  300A               	movlw	10
   967  007E  0AAE               	incf	ADC_Sample@adtimes,f
   968  007F  022E               	subwf	ADC_Sample@adtimes,w
   969  0080  1C03               	skipc
   970  0081  0008               	return
   971                           
   972                           ;adc.c: 44: {
   973                           ;adc.c: 45: adsum -= admax;
   974  0082  0824               	movf	ADC_Sample@admax,w
   975  0083  00B6               	movwf	??_ADC_Sample
   976  0084  0825               	movf	ADC_Sample@admax+1,w
   977  0085  20AF               	fcall	PL4	;call to abstracted procedure
   978  0086  1C03               	skipc
   979  0087  0F39               	incfsz	??_ADC_Sample+3,w
   980  0088  02A3               	subwf	ADC_Sample@adsum+3,f
   981                           
   982                           ;adc.c: 46: adsum -= admin;
   983  0089  0826               	movf	ADC_Sample@admin,w
   984  008A  00B6               	movwf	??_ADC_Sample
   985  008B  0827               	movf	ADC_Sample@admin+1,w
   986  008C  20AF               	fcall	PL4	;call to abstracted procedure
   987  008D  1C03               	skipc
   988  008E  0F39               	incfsz	??_ADC_Sample+3,w
   989  008F  02A3               	subwf	ADC_Sample@adsum+3,f
   990                           
   991                           ;adc.c: 48: adresult = adsum >> 3;
   992  0090  0820               	movf	ADC_Sample@adsum,w
   993  0091  00B6               	movwf	??_ADC_Sample
   994  0092  0821               	movf	ADC_Sample@adsum+1,w
   995  0093  00B7               	movwf	??_ADC_Sample+1
   996  0094  0822               	movf	ADC_Sample@adsum+2,w
   997  0095  00B8               	movwf	??_ADC_Sample+2
   998  0096  0823               	movf	ADC_Sample@adsum+3,w
   999  0097  00B9               	movwf	??_ADC_Sample+3
  1000  0098  3003               	movlw	3
  1001  0099                     u1035:	
  1002  0099  1003               	clrc
  1003  009A  0CB9               	rrf	??_ADC_Sample+3,f
  1004  009B  0CB8               	rrf	??_ADC_Sample+2,f
  1005  009C  0CB7               	rrf	??_ADC_Sample+1,f
  1006  009D  0CB6               	rrf	??_ADC_Sample,f
  1007  009E  3EFF               	addlw	-1
  1008  009F  1D03               	skipz
  1009  00A0  2899               	goto	u1035
  1010  00A1  0837               	movf	??_ADC_Sample+1,w
  1011  00A2  00AD               	movwf	_adresult+1	;volatile
  1012  00A3  0836               	movf	??_ADC_Sample,w
  1013  00A4  00AC               	movwf	_adresult	;volatile
  1014                           
  1015                           ;adc.c: 50: adsum = 0;
  1016  00A5  01A0               	clrf	ADC_Sample@adsum
  1017  00A6  01A1               	clrf	ADC_Sample@adsum+1
  1018  00A7  01A2               	clrf	ADC_Sample@adsum+2
  1019  00A8  01A3               	clrf	ADC_Sample@adsum+3
  1020                           
  1021                           ;adc.c: 51: admin = 0;
  1022  00A9  01A6               	clrf	ADC_Sample@admin
  1023  00AA  01A7               	clrf	ADC_Sample@admin+1
  1024                           
  1025                           ;adc.c: 52: admax = 0;
  1026  00AB  01A4               	clrf	ADC_Sample@admax
  1027  00AC  01A5               	clrf	ADC_Sample@admax+1
  1028                           
  1029                           ;adc.c: 53: adtimes = 0;
  1030  00AD  01AE               	clrf	ADC_Sample@adtimes
  1031  00AE  0008               	return
  1032  00AF                     __end_of_ADC_Sample:	
  1033  00AF                     PL4:	
  1034  00AF  00B7               	movwf	??_ADC_Sample+1
  1035  00B0  01B8               	clrf	??_ADC_Sample+2
  1036  00B1  01B9               	clrf	??_ADC_Sample+3
  1037  00B2  0836               	movf	??_ADC_Sample,w
  1038  00B3  02A0               	subwf	ADC_Sample@adsum,f
  1039  00B4  0837               	movf	??_ADC_Sample+1,w
  1040  00B5  1C03               	skipc
  1041  00B6  0F37               	incfsz	??_ADC_Sample+1,w
  1042  00B7  02A1               	subwf	ADC_Sample@adsum+1,f
  1043  00B8  0838               	movf	??_ADC_Sample+2,w
  1044  00B9  1C03               	skipc
  1045  00BA  0F38               	incfsz	??_ADC_Sample+2,w
  1046  00BB  02A2               	subwf	ADC_Sample@adsum+2,f
  1047  00BC  0839               	movf	??_ADC_Sample+3,w
  1048  00BD  0008               	return
  1049  00BE                     __end_ofPL4:	
  1050  00BE                     PL16:	
  1051  00BE  083D               	movf	ADC_Sample@ad_temp+1,w	;volatile
  1052  00BF  00A5               	movwf	ADC_Sample@admax+1
  1053  00C0  083C               	movf	ADC_Sample@ad_temp,w	;volatile
  1054  00C1  00A4               	movwf	ADC_Sample@admax
  1055  00C2  0008               	return
  1056  00C3                     __end_ofPL16:	
  1057                           
  1058                           	psect	text6
  1059  01A4                     __ptext6:	
  1060 ;; *************** function _checkUsbStatus *****************
  1061 ;; Defined at:
  1062 ;;		line 34 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;		None
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, status,2, status,0
  1071 ;; Tracked objects:
  1072 ;;		On entry : 300/0
  1073 ;;		On exit  : 300/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1
  1076 ;;      Params:         0       0       0
  1077 ;;      Locals:         0       0       0
  1078 ;;      Temps:          1       0       0
  1079 ;;      Totals:         1       0       0
  1080 ;;Total ram usage:        1 bytes
  1081 ;; Hardware stack levels used:    1
  1082 ;; Hardware stack levels required when called:    3
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           
  1091                           ;psect for function _checkUsbStatus
  1092  01A4                     _checkUsbStatus:	
  1093                           
  1094                           ;main.c: 36: if(FAN_STATUS == 1)
  1095                           
  1096                           ;incstack = 0
  1097                           ; Regs used in _checkUsbStatus: [wreg+status,2+status,0]
  1098  01A4  0B77               	decfsz	_FAN_STATUS,w
  1099  01A5  29A9               	goto	l2874
  1100  01A6                     l2872:	
  1101                           
  1102                           ;main.c: 37: {
  1103                           ;main.c: 38: PORTA|=(1<<0);
  1104  01A6  1405               	bsf	5,0	;volatile
  1105                           
  1106                           ;main.c: 39: PORTC|=(1<<1);
  1107  01A7  1487               	bsf	7,1	;volatile
  1108                           
  1109                           ;main.c: 40: return;
  1110  01A8  0008               	return
  1111  01A9                     l2874:	
  1112                           
  1113                           ;main.c: 41: }
  1114                           ;main.c: 42: if (((PORTB) >> (2)&1) == 1) {
  1115  01A9  0806               	movf	6,w	;volatile
  1116  01AA  00F4               	movwf	??_checkUsbStatus
  1117  01AB  1003               	clrc
  1118  01AC  0CF4               	rrf	??_checkUsbStatus,f
  1119  01AD  1003               	clrc
  1120  01AE  0CF4               	rrf	??_checkUsbStatus,f
  1121  01AF  1C74               	btfss	??_checkUsbStatus,0
  1122  01B0  29A6               	goto	l2872
  1123                           
  1124                           ;main.c: 43: if (((PORTB) >> (1)&1) == 1) {
  1125  01B1  0806               	movf	6,w	;volatile
  1126  01B2  00F4               	movwf	??_checkUsbStatus
  1127  01B3  1003               	clrc
  1128  01B4  0CF4               	rrf	??_checkUsbStatus,f
  1129  01B5  1C74               	btfss	??_checkUsbStatus,0
  1130  01B6  29BA               	goto	l2880
  1131                           
  1132                           ;main.c: 45: PORTC&=~(1<<1);
  1133  01B7  1087               	bcf	7,1	;volatile
  1134                           
  1135                           ;main.c: 46: PORTA|=(1<<0);
  1136  01B8  1405               	bsf	5,0	;volatile
  1137                           
  1138                           ;main.c: 47: } else if (countTime == 100) {
  1139  01B9  0008               	return
  1140  01BA                     l2880:	
  1141  01BA  3064               	movlw	100
  1142  01BB  062A               	xorwf	_countTime,w
  1143  01BC  042B               	iorwf	_countTime+1,w
  1144  01BD  1D03               	btfss	3,2
  1145  01BE  0008               	return
  1146                           
  1147                           ;main.c: 49: PORTA^=(1<<0);
  1148  01BF  3001               	movlw	1
  1149  01C0  0685               	xorwf	5,f	;volatile
  1150                           
  1151                           ;main.c: 50: PORTC|=(1<<1);
  1152  01C1  1487               	bsf	7,1	;volatile
  1153  01C2  0008               	return
  1154  01C3                     __end_of_checkUsbStatus:	
  1155                           
  1156                           	psect	text7
  1157  022B                     __ptext7:	
  1158 ;; *************** function _checkKeys *****************
  1159 ;; Defined at:
  1160 ;;		line 163 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 300/0
  1171 ;;		On exit  : 200/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1
  1174 ;;      Params:         0       0       0
  1175 ;;      Locals:         0       0       0
  1176 ;;      Temps:          0       0       0
  1177 ;;      Totals:         0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    6
  1181 ;; This function calls:
  1182 ;;		_checkFan
  1183 ;;		_key_driver
  1184 ;;		_setFanLevel
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _checkKeys
  1192  022B                     _checkKeys:	
  1193                           
  1194                           ;main.c: 164: if (key_driver(&key1) == 1) {
  1195                           
  1196                           ;incstack = 0
  1197                           ; Regs used in _checkKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1198  022B  302F               	movlw	(low (_key1| 0))& (0+255)
  1199  022C  2108               	fcall	_key_driver
  1200  022D  3A01               	xorlw	1
  1201  022E  1D03               	skipz
  1202  022F  2A39               	goto	l3166
  1203                           
  1204                           ;main.c: 167: if (FAN_STATUS == 1) {
  1205  0230  0B77               	decfsz	_FAN_STATUS,w
  1206  0231  2A34               	goto	l1154
  1207                           
  1208                           ;main.c: 169: setFanLevel(1);
  1209  0232  3001               	movlw	1
  1210  0233  294A               	ljmp	_setFanLevel
  1211  0234                     l1154:	
  1212                           ;main.c: 171: } else {
  1213                           
  1214  0234  3000               	movlw	0
  1215                           
  1216                           ;main.c: 172: FAN_STATUS = 1;
  1217  0235  01F7               	clrf	_FAN_STATUS
  1218  0236  0AF7               	incf	_FAN_STATUS,f
  1219                           
  1220                           ;main.c: 173: setFanLevel(0);
  1221  0237  214A               	fcall	_setFanLevel
  1222  0238                     l3160:	
  1223                           
  1224                           ;main.c: 174: checkFan();
  1225  0238  2A8A               	ljmp	l2718
  1226  0239                     l3166:	
  1227  0239  3002               	movlw	2
  1228  023A  0677               	xorwf	_FAN_STATUS,w
  1229  023B  1D03               	btfss	3,2
  1230  023C  0008               	return
  1231  023D  2A38               	goto	l3160
  1232  023E                     __end_of_checkKeys:	
  1233                           
  1234                           	psect	text8
  1235  014A                     __ptext8:	
  1236 ;; *************** function _setFanLevel *****************
  1237 ;; Defined at:
  1238 ;;		line 73 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  level           1    wreg     unsigned char 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  level           1    4[COMMON] unsigned char 
  1243 ;;  levelWidth      2    0        unsigned int 
  1244 ;;  tempLevel       1    5[COMMON] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : B00/0
  1251 ;;		On exit  : 200/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMMON   BANK0   BANK1
  1254 ;;      Params:         0       0       0
  1255 ;;      Locals:         2       0       0
  1256 ;;      Temps:          0       0       0
  1257 ;;      Totals:         2       0       0
  1258 ;;Total ram usage:        2 bytes
  1259 ;; Hardware stack levels used:    1
  1260 ;; Hardware stack levels required when called:    5
  1261 ;; This function calls:
  1262 ;;		___awdiv
  1263 ;;		_closeFan
  1264 ;; This function is called by:
  1265 ;;		_checkKeys
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function _setFanLevel
  1271  014A                     _setFanLevel:	
  1272                           
  1273                           ;incstack = 0
  1274                           ; Regs used in _setFanLevel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1275                           ;setFanLevel@level stored from wreg
  1276  014A  00F4               	movwf	setFanLevel@level
  1277                           
  1278                           ;main.c: 74: if(level == 0)
  1279  014B  0874               	movf	setFanLevel@level,w
  1280  014C  1D03               	btfss	3,2
  1281  014D  2950               	goto	l3088
  1282                           
  1283                           ;main.c: 75: {
  1284                           ;main.c: 76: currentLevel = 3;
  1285  014E  3003               	movlw	3
  1286  014F  00F8               	movwf	_currentLevel
  1287  0150                     l3088:	
  1288                           
  1289                           ;main.c: 77: }
  1290                           ;main.c: 78: unsigned int levelWidth = (PR2 + 1) / 4;
  1291  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0151  0812               	movf	18,w	;volatile
  1293  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0153  00B8               	movwf	___awdiv@dividend
  1295  0154  01B9               	clrf	___awdiv@dividend+1
  1296  0155  0AB8               	incf	___awdiv@dividend,f
  1297  0156  1903               	skipnz
  1298  0157  0AB9               	incf	___awdiv@dividend+1,f
  1299  0158  3004               	movlw	4
  1300  0159  00B6               	movwf	___awdiv@divisor
  1301  015A  01B7               	clrf	___awdiv@divisor+1
  1302  015B  20C3               	fcall	___awdiv
  1303                           
  1304                           ;main.c: 79: char tempLevel = currentLevel + level;
  1305  015C  0874               	movf	setFanLevel@level,w
  1306  015D  0778               	addwf	_currentLevel,w
  1307  015E  00F5               	movwf	setFanLevel@tempLevel
  1308                           
  1309                           ;main.c: 80: if (tempLevel > 4) {
  1310  015F  3005               	movlw	5
  1311  0160  0275               	subwf	setFanLevel@tempLevel,w
  1312  0161  1C03               	skipc
  1313  0162  2965               	goto	l3096
  1314                           
  1315                           ;main.c: 81: tempLevel = 1;
  1316  0163  01F5               	clrf	setFanLevel@tempLevel
  1317  0164  0AF5               	incf	setFanLevel@tempLevel,f
  1318  0165                     l3096:	
  1319                           
  1320                           ;main.c: 82: }
  1321                           ;main.c: 85: if (FAN_STATUS == 1) {
  1322  0165  0B77               	decfsz	_FAN_STATUS,w
  1323  0166  0008               	return
  1324                           
  1325                           ;main.c: 86: currentLevel = tempLevel;
  1326  0167  0875               	movf	setFanLevel@tempLevel,w
  1327  0168  00F8               	movwf	_currentLevel
  1328                           
  1329                           ;main.c: 87: switch(currentLevel)
  1330  0169  2974               	goto	l3110
  1331  016A                     l3100:	
  1332                           
  1333                           ;main.c: 90: closeFan();
  1334  016A  2AA9               	ljmp	l2610
  1335  016B                     l3102:	
  1336                           ;main.c: 91: break;
  1337                           
  1338                           
  1339                           ;main.c: 93: CCPR1L = 2;
  1340  016B  3002               	movlw	2
  1341  016C  0095               	movwf	21	;volatile
  1342                           
  1343                           ;main.c: 94: break;
  1344  016D  0008               	return
  1345  016E                     l3104:	
  1346                           
  1347                           ;main.c: 96: CCPR1L = 3;
  1348  016E  3003               	movlw	3
  1349  016F  0095               	movwf	21	;volatile
  1350                           
  1351                           ;main.c: 97: break;
  1352  0170  0008               	return
  1353  0171                     l3106:	
  1354                           
  1355                           ;main.c: 99: CCPR1L = 5;
  1356  0171  3005               	movlw	5
  1357  0172  0095               	movwf	21	;volatile
  1358                           
  1359                           ;main.c: 100: break;
  1360  0173  0008               	return
  1361  0174                     l3110:	
  1362  0174  0878               	movf	_currentLevel,w
  1363                           
  1364                           ; Switch size 1, requested type "space"
  1365                           ; Number of cases is 4, Range of values is 1 to 4
  1366                           ; switch strategies available:
  1367                           ; Name         Instructions Cycles
  1368                           ; simple_byte           13     7 (average)
  1369                           ; direct_byte           13     9 (fixed)
  1370                           ; jumptable            263     9 (fixed)
  1371                           ;	Chosen strategy is simple_byte
  1372  0175  3A01               	xorlw	1	; case 1
  1373  0176  1903               	skipnz
  1374  0177  296A               	goto	l3100
  1375  0178  3A03               	xorlw	3	; case 2
  1376  0179  1903               	skipnz
  1377  017A  296B               	goto	l3102
  1378  017B  3A01               	xorlw	1	; case 3
  1379  017C  1903               	skipnz
  1380  017D  296E               	goto	l3104
  1381  017E  3A07               	xorlw	7	; case 4
  1382  017F  1903               	skipnz
  1383  0180  2971               	goto	l3106
  1384  0181  2982               	goto	l1141
  1385  0182                     l1141:	
  1386  0182  0008               	return
  1387  0183                     __end_of_setFanLevel:	
  1388                           
  1389                           	psect	text9
  1390  02A9                     __ptext9:	
  1391 ;; *************** function _closeFan *****************
  1392 ;; Defined at:
  1393 ;;		line 110 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : B00/0
  1404 ;;		On exit  : 300/100
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1
  1407 ;;      Params:         0       0       0
  1408 ;;      Locals:         0       0       0
  1409 ;;      Temps:          0       0       0
  1410 ;;      Totals:         0       0       0
  1411 ;;Total ram usage:        0 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    4
  1414 ;; This function calls:
  1415 ;;		_Init_PWM
  1416 ;; This function is called by:
  1417 ;;		_setFanLevel
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _closeFan
  1423  02A9                     _closeFan:	
  1424  02A9                     l2610:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _closeFan: [wreg+status,2+status,0+pclath+cstack]
  1427                           
  1428                           
  1429                           ;main.c: 111: Init_PWM();
  1430  02A9  2271               	fcall	_Init_PWM
  1431                           
  1432                           ;main.c: 112: currentLevel = 2;
  1433  02AA  3002               	movlw	2
  1434  02AB  00F8               	movwf	_currentLevel
  1435                           
  1436                           ;main.c: 113: PORTA|=(1<<0);
  1437  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1438  02AD  1405               	bsf	5,0	;volatile
  1439                           
  1440                           ;main.c: 116: fan_check_time = 0;
  1441  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1442  02AF  1507               	bsf	7,2	;volatile
  1443                           
  1444                           ;main.c: 117: FAN_STATUS = 0;
  1445  02B0  01F7               	clrf	_FAN_STATUS
  1446  02B1  0008               	return
  1447  02B2                     __end_of_closeFan:	
  1448                           
  1449                           	psect	text10
  1450  00C3                     __ptext10:	
  1451 ;; *************** function ___awdiv *****************
  1452 ;; Defined at:
  1453 ;;		line 6 in file "E:\cms\SCMCU_IDE_V2.00.07\data\sources\common\awdiv.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;  divisor         2    0[BANK0 ] int 
  1456 ;;  dividend        2    2[BANK0 ] int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  quotient        2    6[BANK0 ] int 
  1459 ;;  sign            1    5[BANK0 ] unsigned char 
  1460 ;;  counter         1    4[BANK0 ] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2    0[BANK0 ] int 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : B00/0
  1467 ;;		On exit  : B00/0
  1468 ;;		Unchanged: 800/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1
  1470 ;;      Params:         0       4       0
  1471 ;;      Locals:         0       4       0
  1472 ;;      Temps:          0       0       0
  1473 ;;      Totals:         0       8       0
  1474 ;;Total ram usage:        8 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    3
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_setFanLevel
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           
  1485                           ;psect for function ___awdiv
  1486  00C3                     ___awdiv:	
  1487                           
  1488                           ;incstack = 0
  1489                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1490  00C3  01BB               	clrf	___awdiv@sign
  1491  00C4  1FB7               	btfss	___awdiv@divisor+1,7
  1492  00C5  28CD               	goto	l3048
  1493  00C6  09B6               	comf	___awdiv@divisor,f
  1494  00C7  09B7               	comf	___awdiv@divisor+1,f
  1495  00C8  0AB6               	incf	___awdiv@divisor,f
  1496  00C9  1903               	skipnz
  1497  00CA  0AB7               	incf	___awdiv@divisor+1,f
  1498  00CB  01BB               	clrf	___awdiv@sign
  1499  00CC  0ABB               	incf	___awdiv@sign,f
  1500  00CD                     l3048:	
  1501  00CD  1FB9               	btfss	___awdiv@dividend+1,7
  1502  00CE  28D6               	goto	l3054
  1503  00CF  09B8               	comf	___awdiv@dividend,f
  1504  00D0  09B9               	comf	___awdiv@dividend+1,f
  1505  00D1  0AB8               	incf	___awdiv@dividend,f
  1506  00D2  1903               	skipnz
  1507  00D3  0AB9               	incf	___awdiv@dividend+1,f
  1508  00D4  3001               	movlw	1
  1509  00D5  06BB               	xorwf	___awdiv@sign,f
  1510  00D6                     l3054:	
  1511  00D6  01BC               	clrf	___awdiv@quotient
  1512  00D7  01BD               	clrf	___awdiv@quotient+1
  1513  00D8  0836               	movf	___awdiv@divisor,w
  1514  00D9  0437               	iorwf	___awdiv@divisor+1,w
  1515  00DA  1903               	btfsc	3,2
  1516  00DB  28FB               	goto	l3076
  1517  00DC  01BA               	clrf	___awdiv@counter
  1518  00DD                     L2:	
  1519  00DD  0ABA               	incf	___awdiv@counter,f
  1520  00DE  1BB7               	btfsc	___awdiv@divisor+1,7
  1521  00DF  28E4               	goto	l3064
  1522  00E0  1003               	clrc
  1523  00E1  0DB6               	rlf	___awdiv@divisor,f
  1524  00E2  0DB7               	rlf	___awdiv@divisor+1,f
  1525  00E3  28DD               	goto	L2
  1526  00E4                     l3064:	
  1527  00E4  1003               	clrc
  1528  00E5  0DBC               	rlf	___awdiv@quotient,f
  1529  00E6  0DBD               	rlf	___awdiv@quotient+1,f
  1530  00E7  0837               	movf	___awdiv@divisor+1,w
  1531  00E8  0239               	subwf	___awdiv@dividend+1,w
  1532  00E9  1D03               	skipz
  1533  00EA  28ED               	goto	u875
  1534  00EB  0836               	movf	___awdiv@divisor,w
  1535  00EC  0238               	subwf	___awdiv@dividend,w
  1536  00ED                     u875:	
  1537  00ED  1C03               	skipc
  1538  00EE  28F7               	goto	L3
  1539  00EF  0836               	movf	___awdiv@divisor,w
  1540  00F0  02B8               	subwf	___awdiv@dividend,f
  1541  00F1  0837               	movf	___awdiv@divisor+1,w
  1542  00F2  1C03               	skipc
  1543  00F3  03B9               	decf	___awdiv@dividend+1,f
  1544  00F4  02B9               	subwf	___awdiv@dividend+1,f
  1545  00F5  143C               	bsf	___awdiv@quotient,0
  1546  00F6  1003               	clrc
  1547  00F7                     L3:	
  1548  00F7  0CB7               	rrf	___awdiv@divisor+1,f
  1549  00F8  0CB6               	rrf	___awdiv@divisor,f
  1550  00F9  0BBA               	decfsz	___awdiv@counter,f
  1551  00FA  28E4               	goto	l3064
  1552  00FB                     l3076:	
  1553  00FB  083B               	movf	___awdiv@sign,w
  1554  00FC  1903               	btfsc	3,2
  1555  00FD  2903               	goto	l3080
  1556  00FE  09BC               	comf	___awdiv@quotient,f
  1557  00FF  09BD               	comf	___awdiv@quotient+1,f
  1558  0100  0ABC               	incf	___awdiv@quotient,f
  1559  0101  1903               	skipnz
  1560  0102  0ABD               	incf	___awdiv@quotient+1,f
  1561  0103                     l3080:	
  1562  0103  083D               	movf	___awdiv@quotient+1,w
  1563  0104  00B7               	movwf	?___awdiv+1
  1564  0105  083C               	movf	___awdiv@quotient,w
  1565  0106  00B6               	movwf	?___awdiv
  1566  0107  0008               	return
  1567  0108                     __end_of___awdiv:	
  1568                           
  1569                           	psect	text11
  1570  0108                     __ptext11:	
  1571 ;; *************** function _key_driver *****************
  1572 ;; Defined at:
  1573 ;;		line 9 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  key             1    wreg     PTR struct Keys
  1576 ;;		 -> key1(7), 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  key             1    6[COMMON] PTR struct Keys
  1579 ;;		 -> key1(7), 
  1580 ;;  key_read        1    5[COMMON] unsigned char 
  1581 ;;  key_return      1    4[COMMON] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      unsigned char 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 300/0
  1588 ;;		On exit  : B00/0
  1589 ;;		Unchanged: 300/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1
  1591 ;;      Params:         0       0       0
  1592 ;;      Locals:         3       0       0
  1593 ;;      Temps:          0       0       0
  1594 ;;      Totals:         3       0       0
  1595 ;;Total ram usage:        3 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    3
  1598 ;; This function calls:
  1599 ;;		Nothing
  1600 ;; This function is called by:
  1601 ;;		_checkKeys
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _key_driver
  1607  0108                     _key_driver:	
  1608                           
  1609                           ;incstack = 0
  1610                           ; Regs used in _key_driver: [wreg-fsr0h+status,2+status,0]
  1611                           ;key_driver@key stored from wreg
  1612  0108  00F6               	movwf	key_driver@key
  1613                           
  1614                           ;scankey.c: 12: unsigned char key_return = 0;
  1615  0109  01F4               	clrf	key_driver@key_return
  1616                           
  1617                           ;scankey.c: 13: unsigned char key_read = key->key_input;
  1618  010A  3E04               	addlw	4
  1619  010B  0084               	movwf	4
  1620  010C  1383               	bcf	3,7	;select IRP bank0
  1621  010D  0800               	movf	0,w
  1622  010E  00F5               	movwf	key_driver@key_read
  1623                           
  1624                           ;scankey.c: 15: switch (key->key_state_buffer1) {
  1625  010F  293B               	goto	l2758
  1626  0110                     l2728:	
  1627                           
  1628                           ;scankey.c: 17: if (key_read == 0) {
  1629  0110  0875               	movf	key_driver@key_read,w
  1630  0111  1D03               	btfss	3,2
  1631  0112  2948               	goto	l2760
  1632                           
  1633                           ;scankey.c: 18: key->key_state_buffer1 = 1;
  1634  0113  0A76               	incf	key_driver@key,w
  1635  0114  0084               	movwf	4
  1636  0115  0180               	clrf	0
  1637  0116  0A80               	incf	0,f
  1638  0117  2948               	goto	l2760
  1639  0118                     l2732:	
  1640                           
  1641                           ;scankey.c: 25: if (key_read == 0) {
  1642  0118  0875               	movf	key_driver@key_read,w
  1643  0119  1D03               	btfss	3,2
  1644  011A  2937               	goto	l2754
  1645                           
  1646                           ;scankey.c: 26: key->key_timer_cnt1 = 0;
  1647  011B  0876               	movf	key_driver@key,w
  1648  011C  0084               	movwf	4
  1649  011D  0180               	clrf	0
  1650                           
  1651                           ;scankey.c: 27: key->key_state_buffer1 = 2;
  1652  011E  0A76               	incf	key_driver@key,w
  1653  011F  0084               	movwf	4
  1654  0120  3002               	movlw	2
  1655  0121  2933               	goto	L4
  1656  0122                     l2740:	
  1657                           ;scankey.c: 32: key->key_state_buffer1 = 0;
  1658                           
  1659                           ;scankey.c: 31: } else {
  1660                           
  1661                           
  1662                           ;scankey.c: 39: if (key_read == 1) {
  1663  0122  0B75               	decfsz	key_driver@key_read,w
  1664  0123  2927               	goto	l2746
  1665                           
  1666                           ;scankey.c: 40: key_return = 1;
  1667  0124  01F4               	clrf	key_driver@key_return
  1668  0125  0AF4               	incf	key_driver@key_return,f
  1669  0126  2937               	goto	l2754
  1670  0127                     l2746:	
  1671                           ;scankey.c: 42: } else if (++(key->key_timer_cnt1) >= 100)
  1672                           
  1673                           ;scankey.c: 41: key->key_state_buffer1 = 0;
  1674                           
  1675  0127  0876               	movf	key_driver@key,w
  1676  0128  0084               	movwf	4
  1677  0129  3064               	movlw	100
  1678  012A  0A80               	incf	0,f
  1679  012B  0200               	subwf	0,w
  1680  012C  1C03               	skipc
  1681  012D  2948               	goto	l2760
  1682                           
  1683                           ;scankey.c: 43: {
  1684                           ;scankey.c: 44: key_return = 3;
  1685  012E  3003               	movlw	3
  1686  012F  00F4               	movwf	key_driver@key_return
  1687                           
  1688                           ;scankey.c: 45: key->key_state_buffer1 = 3;
  1689  0130  0A76               	incf	key_driver@key,w
  1690  0131  0084               	movwf	4
  1691  0132  3003               	movlw	3
  1692  0133                     L4:	
  1693  0133  0080               	movwf	0
  1694  0134  2948               	goto	l2760
  1695  0135                     l2752:	
  1696                           
  1697                           ;scankey.c: 51: if (key_read == 1)
  1698  0135  0B75               	decfsz	key_driver@key_read,w
  1699  0136  2948               	goto	l2760
  1700  0137                     l2754:	
  1701                           
  1702                           ;scankey.c: 52: {
  1703                           ;scankey.c: 53: key->key_state_buffer1 = 0;
  1704  0137  0A76               	incf	key_driver@key,w
  1705  0138  0084               	movwf	4
  1706  0139  0180               	clrf	0
  1707  013A  2948               	goto	l2760
  1708  013B                     l2758:	
  1709  013B  0A76               	incf	key_driver@key,w
  1710  013C  0084               	movwf	4
  1711  013D  0800               	movf	0,w
  1712                           
  1713                           ; Switch size 1, requested type "space"
  1714                           ; Number of cases is 4, Range of values is 0 to 3
  1715                           ; switch strategies available:
  1716                           ; Name         Instructions Cycles
  1717                           ; direct_byte           10     6 (fixed)
  1718                           ; simple_byte           13     7 (average)
  1719                           ; jumptable            260     6 (fixed)
  1720                           ;	Chosen strategy is direct_byte
  1721  013E  0084               	movwf	4
  1722  013F  3004               	movlw	4
  1723  0140  0204               	subwf	4,w
  1724  0141  1803               	skipnc
  1725  0142  2948               	goto	l2760
  1726  0143  3002               	movlw	high S3232
  1727  0144  008A               	movwf	10
  1728  0145  30CC               	movlw	low S3232
  1729  0146  0704               	addwf	4,w
  1730  0147  0082               	movwf	2
  1731  0148                     l2760:	
  1732                           
  1733                           ;scankey.c: 58: return key_return;
  1734  0148  0874               	movf	key_driver@key_return,w
  1735  0149  0008               	return
  1736  014A                     __end_of_key_driver:	
  1737                           
  1738                           	psect	swtext1
  1739  02CC                     __pswtext1:	
  1740  02CC                     S3232:	
  1741  02CC  2910               	ljmp	l2728
  1742  02CD  2918               	ljmp	l2732
  1743  02CE  2922               	ljmp	l2740
  1744  02CF  2935               	ljmp	l2752
  1745                           
  1746                           	psect	text12
  1747  028A                     __ptext12:	
  1748 ;; *************** function _checkFan *****************
  1749 ;; Defined at:
  1750 ;;		line 123 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg
  1759 ;; Tracked objects:
  1760 ;;		On entry : 200/0
  1761 ;;		On exit  : 300/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMMON   BANK0   BANK1
  1764 ;;      Params:         0       0       0
  1765 ;;      Locals:         0       0       0
  1766 ;;      Temps:          0       0       0
  1767 ;;      Totals:         0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    3
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_checkKeys
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           
  1779                           ;psect for function _checkFan
  1780  028A                     _checkFan:	
  1781  028A                     l2718:	
  1782                           ;incstack = 0
  1783                           ; Regs used in _checkFan: [wreg]
  1784                           
  1785                           
  1786                           ;main.c: 124: TRISA&=~(1<<1);
  1787  028A  1683               	bsf	3,5	;RP0=1, select bank1
  1788  028B  1085               	bcf	5,1	;volatile
  1789                           
  1790                           ;main.c: 125: PORTA&=~(1<<1);
  1791  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1792  028D  1085               	bcf	5,1	;volatile
  1793                           
  1794                           ;main.c: 127: TRISC&=~(1<<2);
  1795  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1796  028F  1107               	bcf	7,2	;volatile
  1797                           
  1798                           ;main.c: 128: PORTA|=(1<<2);
  1799  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0291  1505               	bsf	5,2	;volatile
  1801                           
  1802                           ;main.c: 129: T2CON = 0X04;
  1803  0292  3004               	movlw	4
  1804  0293  0092               	movwf	18	;volatile
  1805  0294  0008               	return
  1806  0295                     __end_of_checkFan:	
  1807                           
  1808                           	psect	text13
  1809  01C3                     __ptext13:	
  1810 ;; *************** function _Sleep_Mode *****************
  1811 ;; Defined at:
  1812 ;;		line 238 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2
  1821 ;; Tracked objects:
  1822 ;;		On entry : B00/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1
  1826 ;;      Params:         0       0       0
  1827 ;;      Locals:         0       0       0
  1828 ;;      Temps:          0       0       0
  1829 ;;      Totals:         0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    3
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _Sleep_Mode
  1842  01C3                     _Sleep_Mode:	
  1843                           
  1844                           ;main.c: 239: INTCON = 0;
  1845                           
  1846                           ;incstack = 0
  1847                           ; Regs used in _Sleep_Mode: [wreg+status,2]
  1848  01C3  018B               	clrf	11	;volatile
  1849                           
  1850                           ;main.c: 241: OPTION_REG = 0;
  1851  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  1852  01C5  0181               	clrf	1	;volatile
  1853                           
  1854                           ;main.c: 243: TRISA = 0B00000000;
  1855  01C6  0185               	clrf	5	;volatile
  1856                           
  1857                           ;main.c: 244: PORTA = 0B00000000;
  1858  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1859  01C8  0185               	clrf	5	;volatile
  1860                           
  1861                           ;main.c: 245: WPUA = 0B00000000;
  1862  01C9  1683               	bsf	3,5	;RP0=1, select bank3
  1863  01CA  1703               	bsf	3,6	;RP1=1, select bank3
  1864  01CB  018E               	clrf	14	;volatile
  1865                           
  1866                           ;main.c: 247: TRISB = 0B00100000;
  1867  01CC  3020               	movlw	32
  1868  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1869  01CE  0086               	movwf	6	;volatile
  1870                           
  1871                           ;main.c: 248: PORTB = 0B00000000;
  1872  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1873  01D0  0186               	clrf	6	;volatile
  1874                           
  1875                           ;main.c: 250: PORTB = 0;
  1876  01D1  0186               	clrf	6	;volatile
  1877                           
  1878                           ;main.c: 251: WPUB = 0B00100000;
  1879  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1880  01D3  0095               	movwf	21	;volatile
  1881                           
  1882                           ;main.c: 253: IOCB = 0B00100000;
  1883  01D4  0096               	movwf	22	;volatile
  1884                           
  1885                           ;main.c: 254: RBIE = 1;
  1886  01D5  158B               	bsf	11,3	;volatile
  1887                           
  1888                           ;main.c: 255: GIE = 1;
  1889  01D6  178B               	bsf	11,7	;volatile
  1890                           
  1891                           ;main.c: 257: ADCON0 = 0;
  1892  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1893  01D8  019F               	clrf	31	;volatile
  1894                           
  1895                           ;main.c: 259: OSCCON = 0X70;
  1896  01D9  3070               	movlw	112
  1897  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  1898  01DB  008F               	movwf	15	;volatile
  1899                           
  1900                           ;main.c: 261: PORTB;
  1901  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1902  01DD  0806               	movf	6,w	;volatile
  1903  01DE  0064               	clrwdt	;# 
  1904  01DF  0063               	sleep	;# 
  1905  01E0  0000               	nop	;# 
  1906  01E1  0008               	return
  1907  01E2                     __end_of_Sleep_Mode:	
  1908                           
  1909                           	psect	text14
  1910  02BA                     __ptext14:	
  1911 ;; *************** function _Init_Config *****************
  1912 ;; Defined at:
  1913 ;;		line 215 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      void 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : B00/100
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMMON   BANK0   BANK1
  1927 ;;      Params:         0       0       0
  1928 ;;      Locals:         0       0       0
  1929 ;;      Temps:          0       0       0
  1930 ;;      Totals:         0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    4
  1934 ;; This function calls:
  1935 ;;		_Init_GPIO
  1936 ;;		_Init_Interupt
  1937 ;;		_Init_PWM
  1938 ;;		_Init_System
  1939 ;;		_resetKey
  1940 ;; This function is called by:
  1941 ;;		_main
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           
  1946                           ;psect for function _Init_Config
  1947  02BA                     _Init_Config:	
  1948                           
  1949                           ;main.c: 217: Init_System();
  1950                           
  1951                           ;incstack = 0
  1952                           ; Regs used in _Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1953  02BA  22D0               	fcall	_Init_System
  1954                           
  1955                           ;main.c: 218: Init_GPIO();
  1956  02BB  223E               	fcall	_Init_GPIO
  1957                           
  1958                           ;main.c: 219: Init_Interupt();
  1959  02BC  22C1               	fcall	_Init_Interupt
  1960                           
  1961                           ;main.c: 220: Init_PWM();
  1962  02BD  2271               	fcall	_Init_PWM
  1963                           
  1964                           ;main.c: 222: IOCB = 0x04;
  1965                           
  1966                           ;main.c: 223: TMR0 = 155;
  1967                           
  1968                           ;main.c: 224: TO = 0;
  1969                           
  1970                           ;main.c: 227: key1.key_index = 5;
  1971                           
  1972                           ;main.c: 229: resetKey(&key1);
  1973  02BE  221C               	fcall	PL8	;call to abstracted procedure
  1974  02BF  2251               	fcall	_resetKey
  1975                           
  1976                           ;main.c: 232: TRISA = 0;
  1977                           
  1978                           ;main.c: 233: TRISB = 0x7E;
  1979                           
  1980                           ;main.c: 234: TRISC = 0;
  1981  02C0  2A25               	ljmp	PL14	;call to abstracted procedure
  1982  02C1                     __end_of_Init_Config:	
  1983                           
  1984                           	psect	text15
  1985  0251                     __ptext15:	
  1986 ;; *************** function _resetKey *****************
  1987 ;; Defined at:
  1988 ;;		line 100 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  key             1    wreg     PTR struct Keys
  1991 ;;		 -> key1(7), 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  key             1    4[COMMON] PTR struct Keys
  1994 ;;		 -> key1(7), 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      void 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1999 ;; Tracked objects:
  2000 ;;		On entry : 300/0
  2001 ;;		On exit  : B00/0
  2002 ;;		Unchanged: 300/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1
  2004 ;;      Params:         0       0       0
  2005 ;;      Locals:         1       0       0
  2006 ;;      Temps:          0       0       0
  2007 ;;      Totals:         1       0       0
  2008 ;;Total ram usage:        1 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; Hardware stack levels required when called:    3
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_Init_Config
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _resetKey
  2020  0251                     _resetKey:	
  2021                           
  2022                           ;incstack = 0
  2023                           ; Regs used in _resetKey: [wreg-fsr0h+status,2+status,0]
  2024                           ;resetKey@key stored from wreg
  2025  0251  00F4               	movwf	resetKey@key
  2026                           
  2027                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2028  0252  3E03               	addlw	3
  2029  0253  0084               	movwf	4
  2030  0254  1383               	bcf	3,7	;select IRP bank0
  2031  0255  0180               	clrf	0
  2032  0256  0A74               	incf	resetKey@key,w
  2033  0257  0084               	movwf	4
  2034  0258  0180               	clrf	0
  2035  0259  0874               	movf	resetKey@key,w
  2036  025A  3E02               	addlw	2
  2037  025B  0084               	movwf	4
  2038  025C  0180               	clrf	0
  2039  025D  0874               	movf	resetKey@key,w
  2040  025E  0084               	movwf	4
  2041  025F  0180               	clrf	0
  2042  0260  0008               	return
  2043  0261                     __end_of_resetKey:	
  2044                           
  2045                           	psect	text16
  2046  02D0                     __ptext16:	
  2047 ;; *************** function _Init_System *****************
  2048 ;; Defined at:
  2049 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;		None
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg, status,2
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 300/100
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1
  2063 ;;      Params:         0       0       0
  2064 ;;      Locals:         0       0       0
  2065 ;;      Temps:          0       0       0
  2066 ;;      Totals:         0       0       0
  2067 ;;Total ram usage:        0 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    3
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_Init_Config
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _Init_System
  2079  02D0                     _Init_System:	
  2080                           
  2081                           ;incstack = 0
  2082                           ; Regs used in _Init_System: [wreg+status,2]
  2083  02D0  0000               	nop	;# 
  2084  02D1  0064               	clrwdt	;# 
  2085                           
  2086                           ;init.c: 6: INTCON = 0;
  2087                           
  2088                           ;init.c: 7: OSCCON = 0X71;
  2089                           
  2090                           ;init.c: 8: OPTION_REG = 0x00;
  2091  02D2  2AA2               	ljmp	PL10	;call to abstracted procedure
  2092  02D3                     __end_of_Init_System:	
  2093                           
  2094                           	psect	text17
  2095  0271                     __ptext17:	
  2096 ;; *************** function _Init_PWM *****************
  2097 ;; Defined at:
  2098 ;;		line 59 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2
  2107 ;; Tracked objects:
  2108 ;;		On entry : 300/0
  2109 ;;		On exit  : 300/100
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1
  2112 ;;      Params:         0       0       0
  2113 ;;      Locals:         0       0       0
  2114 ;;      Temps:          0       0       0
  2115 ;;      Totals:         0       0       0
  2116 ;;Total ram usage:        0 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    3
  2119 ;; This function calls:
  2120 ;;		Nothing
  2121 ;; This function is called by:
  2122 ;;		_closeFan
  2123 ;;		_Init_Config
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _Init_PWM
  2129  0271                     _Init_PWM:	
  2130                           
  2131                           ;main.c: 60: CCP1CON = 0x0F;
  2132                           
  2133                           ;incstack = 0
  2134                           ; Regs used in _Init_PWM: [wreg+status,2]
  2135                           
  2136                           ;main.c: 61: T2CON = 0;
  2137                           
  2138                           ;main.c: 62: PR2 = 7;
  2139                           
  2140                           ;main.c: 64: CCPR1L = 0;
  2141                           
  2142                           ;main.c: 65: TMR2IF = 0;
  2143                           
  2144                           ;main.c: 66: T2CON = 0;
  2145                           
  2146                           ;main.c: 68: TRISC&=~(1<<2);
  2147  0271  2A72               	ljmp	PL6	;call to abstracted procedure
  2148  0272                     __end_of_Init_PWM:	
  2149  0272                     PL6:	
  2150  0272  300F               	movlw	15
  2151  0273  0097               	movwf	23	;volatile
  2152  0274  0192               	clrf	18	;volatile
  2153  0275  3007               	movlw	7
  2154  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2155  0277  0092               	movwf	18	;volatile
  2156  0278  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0279  0195               	clrf	21	;volatile
  2158  027A  108C               	bcf	12,1	;volatile
  2159  027B  0192               	clrf	18	;volatile
  2160  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2161  027D  1107               	bcf	7,2	;volatile
  2162  027E  0008               	return
  2163  027F                     __end_ofPL6:	
  2164                           
  2165                           	psect	text18
  2166  02C1                     __ptext18:	
  2167 ;; *************** function _Init_Interupt *****************
  2168 ;; Defined at:
  2169 ;;		line 27 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2
  2178 ;; Tracked objects:
  2179 ;;		On entry : 300/100
  2180 ;;		On exit  : 300/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMMON   BANK0   BANK1
  2183 ;;      Params:         0       0       0
  2184 ;;      Locals:         0       0       0
  2185 ;;      Temps:          0       0       0
  2186 ;;      Totals:         0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:    3
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_Init_Config
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           
  2198                           ;psect for function _Init_Interupt
  2199  02C1                     _Init_Interupt:	
  2200                           
  2201                           ;init.c: 28: OPTION_REG = 0x00;
  2202                           
  2203                           ;incstack = 0
  2204                           ; Regs used in _Init_Interupt: [wreg+status,2]
  2205                           
  2206                           ;init.c: 29: TMR0 = 0;
  2207                           
  2208                           ;init.c: 30: INTCON = 0xE0;
  2209  02C1  2AC2               	ljmp	PL12	;call to abstracted procedure
  2210  02C2                     __end_of_Init_Interupt:	
  2211  02C2                     PL12:	
  2212  02C2  0181               	clrf	1	;volatile
  2213  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2214  02C4  0181               	clrf	1	;volatile
  2215  02C5  30E0               	movlw	224
  2216  02C6  008B               	movwf	11	;volatile
  2217  02C7  0008               	return
  2218  02C8                     __end_ofPL12:	
  2219                           
  2220                           	psect	text19
  2221  023E                     __ptext19:	
  2222 ;; *************** function _Init_GPIO *****************
  2223 ;; Defined at:
  2224 ;;		line 13 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2
  2233 ;; Tracked objects:
  2234 ;;		On entry : 300/100
  2235 ;;		On exit  : 300/100
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1
  2238 ;;      Params:         0       0       0
  2239 ;;      Locals:         0       0       0
  2240 ;;      Temps:          0       0       0
  2241 ;;      Totals:         0       0       0
  2242 ;;Total ram usage:        0 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    3
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_Init_Config
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           
  2253                           ;psect for function _Init_GPIO
  2254  023E                     _Init_GPIO:	
  2255                           
  2256                           ;init.c: 14: TRISA = 0;
  2257                           
  2258                           ;incstack = 0
  2259                           ; Regs used in _Init_GPIO: [wreg+status,2]
  2260                           
  2261                           ;init.c: 15: TRISB = 0;
  2262                           
  2263                           ;init.c: 16: TRISC = 0;
  2264                           
  2265                           ;init.c: 17: WPUA = 0xFF;
  2266                           
  2267                           ;init.c: 18: WPUB = 0xFF;
  2268                           
  2269                           ;init.c: 19: WPUC = 0xFF;
  2270                           
  2271                           ;init.c: 20: PORTA = 0xFF;
  2272                           
  2273                           ;init.c: 21: PORTB = 0xFF;
  2274                           
  2275                           ;init.c: 22: PORTC = 0xFF;
  2276                           
  2277                           ;init.c: 23: IOCB = 0x00;
  2278  023E  2A3F               	ljmp	PL2	;call to abstracted procedure
  2279  023F                     __end_of_Init_GPIO:	
  2280  023F                     PL2:	
  2281  023F  0185               	clrf	5	;volatile
  2282  0240  0186               	clrf	6	;volatile
  2283  0241  0187               	clrf	7	;volatile
  2284  0242  30FF               	movlw	255
  2285  0243  1703               	bsf	3,6	;RP1=1, select bank3
  2286  0244  008E               	movwf	14	;volatile
  2287  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2288  0246  0095               	movwf	21	;volatile
  2289  0247  1703               	bsf	3,6	;RP1=1, select bank3
  2290  0248  008F               	movwf	15	;volatile
  2291  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2292  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2293  024B  0085               	movwf	5	;volatile
  2294  024C  0086               	movwf	6	;volatile
  2295  024D  0087               	movwf	7	;volatile
  2296  024E  1683               	bsf	3,5	;RP0=1, select bank1
  2297  024F  0196               	clrf	22	;volatile
  2298  0250  0008               	return
  2299  0251                     __end_ofPL2:	
  2300                           
  2301                           	psect	text20
  2302  01FF                     __ptext20:	
  2303 ;; *************** function _Timer0_Isr *****************
  2304 ;; Defined at:
  2305 ;;		line 282 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1
  2319 ;;      Params:         0       0       0
  2320 ;;      Locals:         0       0       0
  2321 ;;      Temps:          3       0       0
  2322 ;;      Totals:         3       0       0
  2323 ;;Total ram usage:        3 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    2
  2326 ;; This function calls:
  2327 ;;		i1_Init_Config
  2328 ;; This function is called by:
  2329 ;;		Interrupt level 1
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _Timer0_Isr
  2335  01FF                     _Timer0_Isr:	
  2336                           
  2337                           ;main.c: 283: if (T0IF) {
  2338  01FF  1D0B               	btfss	11,2	;volatile
  2339  0200  2A08               	goto	i1l3004
  2340                           
  2341                           ;main.c: 285: TMR0 += 155;
  2342  0201  309B               	movlw	155
  2343  0202  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0203  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0204  0781               	addwf	1,f	;volatile
  2346                           
  2347                           ;main.c: 288: T0IF = 0;
  2348  0205  110B               	bcf	11,2	;volatile
  2349                           
  2350                           ;main.c: 289: time0Flag = 1;
  2351  0206  01F9               	clrf	_time0Flag
  2352  0207  0AF9               	incf	_time0Flag,f
  2353  0208                     i1l3004:	
  2354                           
  2355                           ;main.c: 291: }
  2356                           ;main.c: 293: if (RBIF) {
  2357  0208  1C0B               	btfss	11,0	;volatile
  2358  0209  2A0C               	goto	i1l1182
  2359                           
  2360                           ;main.c: 294: RBIF = 0;
  2361  020A  100B               	bcf	11,0	;volatile
  2362                           
  2363                           ;main.c: 295: Init_Config();
  2364  020B  2215               	fcall	i1_Init_Config
  2365  020C                     i1l1182:	
  2366  020C  0873               	movf	??_Timer0_Isr+2,w
  2367  020D  008A               	movwf	10
  2368  020E  0872               	movf	??_Timer0_Isr+1,w
  2369  020F  0084               	movwf	4
  2370  0210  0E71               	swapf	??_Timer0_Isr^(0+-128),w
  2371  0211  0083               	movwf	3
  2372  0212  0EFE               	swapf	126,f
  2373  0213  0E7E               	swapf	126,w
  2374  0214  0009               	retfie
  2375  0215                     __end_of_Timer0_Isr:	
  2376                           
  2377                           	psect	intentry
  2378  0004                     __pintentry:	
  2379                           ;incstack = 0
  2380                           ; Regs used in _Timer0_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2381                           
  2382  0004                     interrupt_function:	
  2383  007E                     saved_w	set	btemp
  2384  0004  00FE               	movwf	btemp
  2385  0005  0E03               	swapf	3,w
  2386  0006  00F1               	movwf	??_Timer0_Isr
  2387  0007  0804               	movf	4,w
  2388  0008  00F2               	movwf	??_Timer0_Isr+1
  2389  0009  080A               	movf	10,w
  2390  000A  00F3               	movwf	??_Timer0_Isr+2
  2391  000B  29FF               	ljmp	_Timer0_Isr
  2392                           
  2393                           	psect	text21
  2394  0215                     __ptext21:	
  2395 ;; *************** function i1_Init_Config *****************
  2396 ;; Defined at:
  2397 ;;		line 215 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : B00/100
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1
  2411 ;;      Params:         0       0       0
  2412 ;;      Locals:         0       0       0
  2413 ;;      Temps:          0       0       0
  2414 ;;      Totals:         0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    1
  2418 ;; This function calls:
  2419 ;;		i1_Init_GPIO
  2420 ;;		i1_Init_Interupt
  2421 ;;		i1_Init_PWM
  2422 ;;		i1_Init_System
  2423 ;;		i1_resetKey
  2424 ;; This function is called by:
  2425 ;;		_Timer0_Isr
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function i1_Init_Config
  2431  0215                     i1_Init_Config:	
  2432                           
  2433                           ;main.c: 217: Init_System();
  2434                           
  2435                           ;incstack = 0
  2436                           ; Regs used in i1_Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2437  0215  229F               	fcall	i1_Init_System
  2438                           
  2439                           ;main.c: 218: Init_GPIO();
  2440  0216  22D5               	fcall	i1_Init_GPIO
  2441                           
  2442                           ;main.c: 219: Init_Interupt();
  2443  0217  22D4               	fcall	i1_Init_Interupt
  2444                           
  2445                           ;main.c: 220: Init_PWM();
  2446  0218  22D3               	fcall	i1_Init_PWM
  2447                           
  2448                           ;main.c: 222: IOCB = 0x04;
  2449                           
  2450                           ;main.c: 223: TMR0 = 155;
  2451                           
  2452                           ;main.c: 224: TO = 0;
  2453                           
  2454                           ;main.c: 227: key1.key_index = 5;
  2455                           
  2456                           ;main.c: 229: resetKey(&key1);
  2457  0219  221C               	fcall	PL8	;call to abstracted procedure
  2458  021A  2261               	fcall	i1_resetKey
  2459                           
  2460                           ;main.c: 232: TRISA = 0;
  2461                           
  2462                           ;main.c: 233: TRISB = 0x7E;
  2463                           
  2464                           ;main.c: 234: TRISC = 0;
  2465  021B  2A25               	ljmp	PL14	;call to abstracted procedure
  2466  021C                     __end_ofi1_Init_Config:	
  2467  021C                     PL8:	
  2468  021C  3004               	movlw	4
  2469  021D  0096               	movwf	22	;volatile
  2470  021E  309B               	movlw	155
  2471  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0220  0081               	movwf	1	;volatile
  2473  0221  1203               	bcf	3,4	;volatile
  2474  0222  3005               	movlw	5
  2475  0223  00B5               	movwf	_key1+6
  2476  0224  342F               	retlw	(low (_key1| 0))& (0+255)
  2477  0225                     __end_ofPL8:	
  2478  0225                     PL14:	
  2479  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2480  0226  0185               	clrf	5	;volatile
  2481  0227  307E               	movlw	126
  2482  0228  0086               	movwf	6	;volatile
  2483  0229  0187               	clrf	7	;volatile
  2484  022A  0008               	return
  2485  022B                     __end_ofPL14:	
  2486                           
  2487                           	psect	text22
  2488  0261                     __ptext22:	
  2489 ;; *************** function i1_resetKey *****************
  2490 ;; Defined at:
  2491 ;;		line 100 in file "E:\project\project0508\scm\n9_fan_no_led\scankey.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  key             1    wreg     PTR struct Keys
  2494 ;;		 -> key1(7), 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  key             1    0[COMMON] PTR struct Keys
  2497 ;;		 -> key1(7), 
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 300/0
  2504 ;;		On exit  : B00/0
  2505 ;;		Unchanged: 300/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1
  2507 ;;      Params:         0       0       0
  2508 ;;      Locals:         1       0       0
  2509 ;;      Temps:          0       0       0
  2510 ;;      Totals:         1       0       0
  2511 ;;Total ram usage:        1 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		i1_Init_Config
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520                           
  2521                           ;psect for function i1_resetKey
  2522  0261                     i1_resetKey:	
  2523                           
  2524                           ;incstack = 0
  2525                           ; Regs used in i1_resetKey: [wreg-fsr0h+status,2+status,0]
  2526                           ;i1resetKey@key stored from wreg
  2527  0261  00F0               	movwf	i1resetKey@key
  2528                           
  2529                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2530  0262  3E03               	addlw	3
  2531  0263  0084               	movwf	4
  2532  0264  1383               	bcf	3,7	;select IRP bank0
  2533  0265  0180               	clrf	0
  2534  0266  0A70               	incf	i1resetKey@key,w
  2535  0267  0084               	movwf	4
  2536  0268  0180               	clrf	0
  2537  0269  0870               	movf	i1resetKey@key,w
  2538  026A  3E02               	addlw	2
  2539  026B  0084               	movwf	4
  2540  026C  0180               	clrf	0
  2541  026D  0870               	movf	i1resetKey@key,w
  2542  026E  0084               	movwf	4
  2543  026F  0180               	clrf	0
  2544  0270  0008               	return
  2545  0271                     __end_ofi1_resetKey:	
  2546                           
  2547                           	psect	text23
  2548  029F                     __ptext23:	
  2549 ;; *************** function i1_Init_System *****************
  2550 ;; Defined at:
  2551 ;;		line 3 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;		None
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;		None
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      void 
  2558 ;; Registers used:
  2559 ;;		wreg, status,2
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 300/100
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1
  2565 ;;      Params:         0       0       0
  2566 ;;      Locals:         0       0       0
  2567 ;;      Temps:          0       0       0
  2568 ;;      Totals:         0       0       0
  2569 ;;Total ram usage:        0 bytes
  2570 ;; Hardware stack levels used:    1
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		i1_Init_Config
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           
  2579                           ;psect for function i1_Init_System
  2580  029F                     i1_Init_System:	
  2581                           
  2582                           ;incstack = 0
  2583                           ; Regs used in i1_Init_System: [wreg+status,2]
  2584  029F  0000               	nop	;# 
  2585  02A0  0064               	clrwdt	;# 
  2586                           
  2587                           ;init.c: 6: INTCON = 0;
  2588                           
  2589                           ;init.c: 7: OSCCON = 0X71;
  2590                           
  2591                           ;init.c: 8: OPTION_REG = 0x00;
  2592  02A1  2AA2               	ljmp	PL10	;call to abstracted procedure
  2593  02A2                     __end_ofi1_Init_System:	
  2594  02A2                     PL10:	
  2595  02A2  018B               	clrf	11	;volatile
  2596  02A3  3071               	movlw	113
  2597  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  2598  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  2599  02A6  008F               	movwf	15	;volatile
  2600  02A7  0181               	clrf	1	;volatile
  2601  02A8  0008               	return
  2602  02A9                     __end_ofPL10:	
  2603                           
  2604                           	psect	text24
  2605  02D3                     __ptext24:	
  2606 ;; *************** function i1_Init_PWM *****************
  2607 ;; Defined at:
  2608 ;;		line 59 in file "E:\project\project0508\scm\n9_fan_no_led\main.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2
  2617 ;; Tracked objects:
  2618 ;;		On entry : 300/0
  2619 ;;		On exit  : 300/100
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1
  2622 ;;      Params:         0       0       0
  2623 ;;      Locals:         0       0       0
  2624 ;;      Temps:          0       0       0
  2625 ;;      Totals:         0       0       0
  2626 ;;Total ram usage:        0 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		i1_Init_Config
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function i1_Init_PWM
  2637  02D3                     i1_Init_PWM:	
  2638                           
  2639                           ;main.c: 60: CCP1CON = 0x0F;
  2640                           
  2641                           ;incstack = 0
  2642                           ; Regs used in i1_Init_PWM: [wreg+status,2]
  2643                           
  2644                           ;main.c: 61: T2CON = 0;
  2645                           
  2646                           ;main.c: 62: PR2 = 7;
  2647                           
  2648                           ;main.c: 64: CCPR1L = 0;
  2649                           
  2650                           ;main.c: 65: TMR2IF = 0;
  2651                           
  2652                           ;main.c: 66: T2CON = 0;
  2653                           
  2654                           ;main.c: 68: TRISC&=~(1<<2);
  2655  02D3  2A72               	ljmp	PL6	;call to abstracted procedure
  2656  02D4                     __end_ofi1_Init_PWM:	
  2657                           
  2658                           	psect	text25
  2659  02D4                     __ptext25:	
  2660 ;; *************** function i1_Init_Interupt *****************
  2661 ;; Defined at:
  2662 ;;		line 27 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;		None
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2
  2671 ;; Tracked objects:
  2672 ;;		On entry : 300/100
  2673 ;;		On exit  : 300/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1
  2676 ;;      Params:         0       0       0
  2677 ;;      Locals:         0       0       0
  2678 ;;      Temps:          0       0       0
  2679 ;;      Totals:         0       0       0
  2680 ;;Total ram usage:        0 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		i1_Init_Config
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function i1_Init_Interupt
  2691  02D4                     i1_Init_Interupt:	
  2692                           
  2693                           ;init.c: 28: OPTION_REG = 0x00;
  2694                           
  2695                           ;incstack = 0
  2696                           ; Regs used in i1_Init_Interupt: [wreg+status,2]
  2697                           
  2698                           ;init.c: 29: TMR0 = 0;
  2699                           
  2700                           ;init.c: 30: INTCON = 0xE0;
  2701  02D4  2AC2               	ljmp	PL12	;call to abstracted procedure
  2702  02D5                     __end_ofi1_Init_Interupt:	
  2703                           
  2704                           	psect	text26
  2705  02D5                     __ptext26:	
  2706 ;; *************** function i1_Init_GPIO *****************
  2707 ;; Defined at:
  2708 ;;		line 13 in file "E:\project\project0508\scm\n9_fan_no_led\init.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2
  2717 ;; Tracked objects:
  2718 ;;		On entry : 300/100
  2719 ;;		On exit  : 300/100
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1
  2722 ;;      Params:         0       0       0
  2723 ;;      Locals:         0       0       0
  2724 ;;      Temps:          0       0       0
  2725 ;;      Totals:         0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		i1_Init_Config
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function i1_Init_GPIO
  2737  02D5                     i1_Init_GPIO:	
  2738                           
  2739                           ;init.c: 14: TRISA = 0;
  2740                           
  2741                           ;incstack = 0
  2742                           ; Regs used in i1_Init_GPIO: [wreg+status,2]
  2743                           
  2744                           ;init.c: 15: TRISB = 0;
  2745                           
  2746                           ;init.c: 16: TRISC = 0;
  2747                           
  2748                           ;init.c: 17: WPUA = 0xFF;
  2749                           
  2750                           ;init.c: 18: WPUB = 0xFF;
  2751                           
  2752                           ;init.c: 19: WPUC = 0xFF;
  2753                           
  2754                           ;init.c: 20: PORTA = 0xFF;
  2755                           
  2756                           ;init.c: 21: PORTB = 0xFF;
  2757                           
  2758                           ;init.c: 22: PORTC = 0xFF;
  2759                           
  2760                           ;init.c: 23: IOCB = 0x00;
  2761  02D5  2A3F               	ljmp	PL2	;call to abstracted procedure
  2762  02D6                     __end_ofi1_Init_GPIO:	
  2763  007E                     btemp	set	126	;btemp
  2764  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      8      30
    BANK1            80      0       0

Pointer List with Targets:

    resetKey@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 

    key_driver@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 

    sacnKeyInput@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 


Critical Paths under _main in COMMON

    _scanKeys->_sacnKeyInput
    _readVrefADC->_DelayXms
    _checkKeys->_key_driver
    _Init_Config->_resetKey

Critical Paths under _Timer0_Isr in COMMON

    i1_Init_Config->i1_resetKey

Critical Paths under _main in BANK0

    _readVrefADC->_ADC_Sample
    _setFanLevel->___awdiv

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1759
                        _Init_Config
                         _Sleep_Mode
                          _checkKeys
                     _checkUsbStatus
                        _readVrefADC
                           _scanKeys
 ---------------------------------------------------------------------------------
 (1) _scanKeys                                             0     0      0     115
                       _sacnKeyInput
 ---------------------------------------------------------------------------------
 (2) _sacnKeyInput                                         3     3      0     115
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _readVrefADC                                          0     0      0     405
                         _ADC_Sample
                           _DelayXms
 ---------------------------------------------------------------------------------
 (2) _DelayXms                                             3     3      0     114
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Sample                                           8     8      0     291
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _checkUsbStatus                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkKeys                                            0     0      0    1124
                           _checkFan
                         _key_driver
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _setFanLevel                                          4     4      0     736
                                              4 COMMON     2     2      0
                            ___awdiv
                           _closeFan
 ---------------------------------------------------------------------------------
 (3) _closeFan                                             0     0      0       0
                           _Init_PWM
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     606
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _key_driver                                           3     3      0     388
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _checkFan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Sleep_Mode                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Config                                          0     0      0     115
                          _Init_GPIO
                      _Init_Interupt
                           _Init_PWM
                        _Init_System
                           _resetKey
 ---------------------------------------------------------------------------------
 (2) _resetKey                                             1     1      0     115
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Interupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_Isr                                           3     3      0      88
                                              1 COMMON     3     3      0
                      i1_Init_Config
 ---------------------------------------------------------------------------------
 (6) i1_Init_Config                                        0     0      0      88
                        i1_Init_GPIO
                    i1_Init_Interupt
                         i1_Init_PWM
                      i1_Init_System
                         i1_resetKey
 ---------------------------------------------------------------------------------
 (7) i1_resetKey                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_Init_System                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_PWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_Interupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_GPIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Config
     _Init_GPIO
     _Init_Interupt
     _Init_PWM
     _Init_System
     _resetKey
   _Sleep_Mode
   _checkKeys
     _checkFan
     _key_driver
     _setFanLevel
       ___awdiv
       _closeFan
         _Init_PWM
   _checkUsbStatus
   _readVrefADC
     _ADC_Sample
     _DelayXms
   _scanKeys
     _sacnKeyInput

 _Timer0_Isr (ROOT)
   i1_Init_Config
     i1_Init_GPIO
     i1_Init_Interupt
     i1_Init_PWM
     i1_Init_System
     i1_resetKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      28       8        0.0%
ABS                  0      0      28       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 12 18:02:25 2020

         ??i1_Init_System 0070                         pc 0002                        PL2 023F  
                      PL4 00AF                        PL6 0272                        PL8 021C  
                      _TO 001C              ___awdiv@sign 003B                        fsr 0004  
                     PL10 02A2                       PL12 02C2                       PL14 0225  
                     PL16 00BE                       _GIE 005F                       _PR2 0092  
                     u524 01EF                       u525 01ED                       u875 00ED  
                     u975 0053                       u985 005D       __size_of_ADC_Sample 0096  
                     fsr0 0004                       indf 0000                      S3232 02CC  
                    l1141 0182                      l1154 0234                      l3100 016A  
                    l3102 016B                      l3110 0174                      l3104 016E  
                    l3106 0171                      l3130 004D                      l3122 0034  
                    l3054 00D6                      l3134 0057                      l3080 0103  
                    l3064 00E4                      l3048 00CD                      l3160 0238  
                    l3136 005F                      l2610 02A9                      l1731 002F  
                    l3076 00FB                      l3166 0239                      l3096 0165  
                    l3088 0150                      l1737 0063                      l3178 0185  
                    l2740 0122                      l2732 0118                      l3188 018E  
                    l2718 028A                      l2814 0281                      l3198 019A  
                    l2752 0135                      l2760 0148                      l2728 0110  
                    l2824 0286                      l2754 0137                      l2746 0127  
                    l2758 013B                      l2880 01BA                      l2872 01A6  
                    l2874 01A9                      _T0IF 005A                      u1035 0099  
                    _IOCB 0096                      _RBIE 005B                      _RBIF 0058  
                    _TMR0 0001    __end_of_checkUsbStatus 01C3                      _WPUA 018E  
                    _WPUB 0095                      _WPUC 018F                      _key1 002F  
                    _main 0183                      btemp 007E                i1_resetKey 0261  
                    start 000C             ??_Init_Config 0075             ??_Init_System 0074  
           _Init_Interupt 02C1                     ?_main 0070           __end_of___awdiv 0108  
         ___awdiv@divisor 0036                     _T2CON 0012              ?_readVrefADC 0070  
      key_driver@key_read 0075           ___awdiv@counter 003A                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087               ?i1_Init_PWM 0070  
                   pclath 000A           ?_checkUsbStatus 0070                     status 0003  
                   wtemp0 007E          __end_of_DelayXms 028A              ?_setFanLevel 0070  
         __initialization 000D              __end_of_main 01A4          __end_of_Init_PWM 0272  
          ?_Init_Interupt 0070       __end_of_Init_Config 02C1                    ??_main 0077  
     __end_of_Init_System 02D3                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    _ADRESL 009E                    _CCPR1L 0015  
        ___awdiv@dividend 0038                    _GODONE 00F9                    i1l3004 0208  
                  i1l1182 020C                    _INTCON 000B             ?_sacnKeyInput 0070  
      __size_of_Init_GPIO 0001                    _OSCCON 008F                    _TMR2IF 0061  
            ??_ADC_Sample 0036          __end_of_checkFan 0295               ?i1_resetKey 0070  
              _Sleep_Mode 01C3                _Timer0_Isr 01FF          __end_of_closeFan 02B2  
               ??___awdiv 0074       __size_ofi1_Init_PWM 0001              ?i1_Init_GPIO 0070  
        __end_of_scanKeys 029F          ___awdiv@quotient 003C          __end_of_resetKey 0261  
            __pdataCOMMON 0077        __end_of_ADC_Sample 00AF           i1_Init_Interupt 02D4  
                  saved_w 007E            ??_sacnKeyInput 0074   __end_of__initialization 0017  
             _Init_Config 02BA            __pcstackCOMMON 0070           ??_Init_Interupt 0074  
      __size_of_checkKeys 0013               _Init_System 02D0                __end_ofPL2 0251  
              __end_ofPL4 00BE                __end_ofPL6 027F                __end_ofPL8 0225  
       __end_of_Init_GPIO 023F       __size_ofi1_resetKey 0010                 ?_DelayXms 0070  
    __size_of_readVrefADC 0004                __pbssBANK0 0020                 ?_Init_PWM 0070  
             ?_Sleep_Mode 0070               ?_Timer0_Isr 0070     __end_ofi1_Init_Config 021C  
              __pmaintext 0183      __size_of_setFanLevel 0039                __pintentry 0004  
                 _CCP1CON 0017     __end_ofi1_Init_System 02A2   __end_ofi1_Init_Interupt 02D5  
               ?_checkFan 0070      key_driver@key_return 0074                ??_DelayXms 0074  
        ??_checkUsbStatus 0074                 ?_closeFan 0070              ??i1_Init_PWM 0070  
       __end_of_checkKeys 023E                ??_Init_PWM 0074                 ?_scanKeys 0070  
               ?_resetKey 0070               resetKey@key 0074           ADC_Sample@admax 0024  
         ADC_Sample@admin 0026           ADC_Sample@adsum 0020                   ___awdiv 00C3  
              _key_driver 0108      __end_of_sacnKeyInput 01FF        __end_ofi1_Init_PWM 02D4  
                 __ptext1 0295                   __ptext2 01E2                   __ptext3 02C8  
                 __ptext4 027F                   __ptext5 0019                   __ptext6 01A4  
                 __ptext7 022B                   __ptext8 014A                   __ptext9 02A9  
    __size_ofi1_Init_GPIO 0001                ??_checkFan 0074       __size_of_Sleep_Mode 001F  
     __size_of_Timer0_Isr 0016                ??_closeFan 0074                   clrloop0 02B3  
    end_of_initialization 0017                 DelayXms@i 0075                 DelayXms@j 0076  
               DelayXms@x 0074                ??_scanKeys 0077              ??i1_resetKey 0070  
              ??_resetKey 0074           sacnKeyInput@key 0076          ?i1_Init_Interupt 0070  
      __end_ofi1_resetKey 0271              ?_Init_Config 0070               ?_key_driver 0070  
            ?_Init_System 0070          setFanLevel@level 0074             __pidataCOMMON 0000  
             __end_ofPL10 02A9               __end_ofPL12 02C8               __end_ofPL14 022B  
             __end_ofPL16 00C3       start_initialization 000D                 _Init_GPIO 023E  
       __size_of_DelayXms 000B         __size_of_Init_PWM 0001              ??_Sleep_Mode 0074  
            ??_Timer0_Isr 0071     __size_of_sacnKeyInput 001D         ADC_Sample@ad_temp 003C  
   __end_of_Init_Interupt 02C2         ADC_Sample@adtimes 002E             ??_readVrefADC 0077  
             __pbssCOMMON 0079                ?_Init_GPIO 0070                 ___latbits 0000  
           __pcstackBANK0 0036         __size_of_checkFan 000B        __end_of_Sleep_Mode 01E2  
      __end_of_Timer0_Isr 0215       __size_of_key_driver 0042         __size_of_closeFan 0009  
            _sacnKeyInput 01E2              _currentLevel 0078                 _checkKeys 022B  
           ??_setFanLevel 0074         __size_of_scanKeys 000A                  ?___awdiv 0036  
       __size_of_resetKey 0010                 __pswtext1 02CC                 _count10Ms 0028  
               _countTime 002A            ADC_Sample@adch 003A    __size_ofi1_Init_Config 0007  
     __end_of_readVrefADC 02CC               ADC_Sample@i 003B    __size_ofi1_Init_System 0003  
       interrupt_function 0004                ?_checkKeys 0070                 _time0Flag 0079  
               clear_ram0 02B2      __size_of_Init_Config 0007      setFanLevel@tempLevel 0075  
           ??i1_Init_GPIO 0070       __end_of_setFanLevel 0183      __size_of_Init_System 0003  
             ??_Init_GPIO 0074                  _DelayXms 027F                  _Init_PWM 0271  
              _ADC_Sample 0019   __size_of_checkUsbStatus 001F             i1_Init_Config 0215  
            ??_key_driver 0074          __size_of___awdiv 0045             key_driver@key 0076  
           i1_Init_System 029F               _readVrefADC 02C8                  _checkFan 028A  
              _FAN_STATUS 0077       __end_ofi1_Init_GPIO 02D6                  _adresult 002C  
__size_ofi1_Init_Interupt 0001                  __ptext10 00C3                  __ptext11 0108  
                __ptext20 01FF                  __ptext12 028A                  __ptext21 0215  
                __ptext13 01C3                  __ptext22 0261                  __ptext14 02BA  
                __ptext23 029F                  __ptext15 0251                  __ptext24 02D3  
                __ptext16 02D0                  __ptext25 02D4                  __ptext17 0271  
                __ptext26 02D5                  __ptext18 02C1                  __ptext19 023E  
                _closeFan 02A9        __end_of_key_driver 014A             __size_of_main 0021  
             ??_checkKeys 0077                  _scanKeys 0295                  _resetKey 0251  
             _setFanLevel 014A            ?i1_Init_Config 0070            ?i1_Init_System 0070  
                intlevel1 0000               ?_ADC_Sample 0070             i1resetKey@key 0070  
             i1_Init_GPIO 02D5                _OPTION_REG 0081                i1_Init_PWM 02D3  
  __size_of_Init_Interupt 0001         ??i1_Init_Interupt 0070            _checkUsbStatus 01A4  
         ??i1_Init_Config 0071  
