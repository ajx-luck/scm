

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 05 14:07:37 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1713S
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	swtext1,local,class=CONST,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	pa_nodes0,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 1.45
    44                           ; Generated 16/11/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	idataCOMMON
    79  0000                     __pidataCOMMON:	
    80  001F                     _ADCON0	set	31
    81  001E                     _ADRESH	set	30
    82  0017                     _CCP1CON	set	23
    83  0015                     _CCPR1L	set	21
    84  0012                     _T2CON	set	18
    85  000B                     _INTCON	set	11
    86  0007                     _PORTC	set	7
    87  0006                     _PORTB	set	6
    88  0005                     _PORTA	set	5
    89  0001                     _TMR0	set	1
    90  00F9                     _GODONE	set	249
    91  0061                     _TMR2IF	set	97
    92  005A                     _T0IF	set	90
    93  0058                     _RBIF	set	88
    94  001C                     _TO	set	28
    95  009F                     _ADCON1	set	159
    96  009E                     _ADRESL	set	158
    97  0096                     _IOCB	set	150
    98  0095                     _WPUB	set	149
    99  0092                     _PR2	set	146
   100  008F                     _OSCCON	set	143
   101  0087                     _TRISC	set	135
   102  0086                     _TRISB	set	134
   103  0085                     _TRISA	set	133
   104  0081                     _OPTION_REG	set	129
   105  018F                     _WPUC	set	399
   106  018E                     _WPUA	set	398
   107                           
   108                           	psect	cinit
   109  000D                     start_initialization:	
   110                           ; #config settings
   111                           
   112  000D                     __initialization:	
   113                           
   114                           ;initializer for _FAN_STATUS
   115  000D  3002               	movlw	2
   116  000E  00F7               	movwf	__pdataCOMMON& (0+127)
   117                           
   118                           ;initializer for _currentLevel
   119  000F  3001               	movlw	1
   120  0010  00F8               	movwf	(__pdataCOMMON+1)& (0+127)
   121  0011  3020               	movlw	low __pbssBANK0
   122                           
   123                           ; Clear objects allocated to BANK0
   124  0012  1383               	bcf	3,7	;select IRP bank0
   125  0013  0084               	movwf	4
   126  0014  3038               	movlw	low (__pbssBANK0+24)
   127  0015  22EB               	fcall	clear_ram0
   128                           
   129                           ; Clear objects allocated to COMMON
   130  0016  01F9               	clrf	__pbssCOMMON& (0+127)
   131  0017                     end_of_initialization:	
   132                           ;End of C runtime variable initialization code
   133                           
   134  0017                     __end_of__initialization:	
   135  0017  0183               	clrf	3
   136  0018  29CF               	ljmp	_main	;jump to C main() function
   137                           
   138                           	psect	bssCOMMON
   139  0079                     __pbssCOMMON:	
   140  0079                     _time0Flag:	
   141  0079                     	ds	1
   142                           
   143                           	psect	dataCOMMON
   144  0077                     __pdataCOMMON:	
   145  0077                     _FAN_STATUS:	
   146  0077                     	ds	1
   147  0078                     _currentLevel:	
   148  0078                     	ds	1
   149                           
   150                           	psect	bssBANK0
   151  0020                     __pbssBANK0:	
   152  0020                     ADC_Sample@adsum:	
   153  0020                     	ds	4
   154  0024                     ADC_Sample@admax:	
   155  0024                     	ds	2
   156  0026                     ADC_Sample@admin:	
   157  0026                     	ds	2
   158  0028                     _fan_check_time:	
   159  0028                     	ds	2
   160  002A                     _count10Ms:	
   161  002A                     	ds	2
   162  002C                     _countTime:	
   163  002C                     	ds	2
   164  002E                     _adresult:	
   165  002E                     	ds	2
   166  0030                     ADC_Sample@adtimes:	
   167  0030                     	ds	1
   168  0031                     _key1:	
   169  0031                     	ds	7
   170                           
   171                           	psect	clrtext
   172  02EB                     clear_ram0:	
   173                           ;	Called with FSR containing the base address, and
   174                           ;	W with the last address+1
   175                           
   176  02EB  0064               	clrwdt	;clear the watchdog before getting into this loop
   177  02EC                     clrloop0:	
   178  02EC  0180               	clrf	0	;clear RAM location pointed to by FSR
   179  02ED  0A84               	incf	4,f	;increment pointer
   180  02EE  0604               	xorwf	4,w	;XOR with final address
   181  02EF  1903               	btfsc	3,2	;have we reached the end yet?
   182  02F0  3400               	retlw	0	;all done for this memory range, return
   183  02F1  0604               	xorwf	4,w	;XOR again to restore value
   184  02F2  2AEC               	goto	clrloop0	;do the next byte
   185                           
   186                           	psect	cstackCOMMON
   187  0070                     __pcstackCOMMON:	
   188  0070                     ?_closeFan:	
   189  0070                     ?_sacnKeyInput:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0070                     ?_key_driver:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ?_Init_Config:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0070                     ?_resetKey:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_Init_System:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_Init_GPIO:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_Init_Interupt:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_checkUsbStatus:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_Init_PWM:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_setFanLevel:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_checkFan:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_scanKeys:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_checkKeys:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?_Timer0_Isr:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?_ADC_Sample:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?_DelayXms:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?i1_Init_System:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ??i1_Init_System:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?i1_Init_GPIO:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ??i1_Init_GPIO:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?i1_Init_Interupt:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??i1_Init_Interupt:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?i1_Init_PWM:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??i1_Init_PWM:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?i1_Init_Config:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?i1_resetKey:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ??i1_resetKey:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_readVrefADC:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     i1resetKey@key:	
   277                           ; 2 bytes @ 0x0
   278                           
   279                           
   280                           ; 1 bytes @ 0x0
   281  0070                     	ds	1
   282  0071                     ??_Timer0_Isr:	
   283  0071                     ??i1_Init_Config:	
   284                           ; 1 bytes @ 0x1
   285                           
   286                           
   287                           ; 1 bytes @ 0x1
   288  0071                     	ds	3
   289  0074                     ??_closeFan:	
   290  0074                     ??_sacnKeyInput:	
   291                           ; 1 bytes @ 0x4
   292                           
   293  0074                     ??_key_driver:	
   294                           ; 1 bytes @ 0x4
   295                           
   296  0074                     ??_resetKey:	
   297                           ; 1 bytes @ 0x4
   298                           
   299  0074                     ??_Init_System:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     ??_Init_GPIO:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0074                     ??_Init_Interupt:	
   306                           ; 1 bytes @ 0x4
   307                           
   308  0074                     ??_checkUsbStatus:	
   309                           ; 1 bytes @ 0x4
   310                           
   311  0074                     ??_Init_PWM:	
   312                           ; 1 bytes @ 0x4
   313                           
   314  0074                     ??_setFanLevel:	
   315                           ; 1 bytes @ 0x4
   316                           
   317  0074                     ??_DelayXms:	
   318                           ; 1 bytes @ 0x4
   319                           
   320  0074                     ??___awdiv:	
   321                           ; 1 bytes @ 0x4
   322                           
   323  0074                     setFanLevel@level:	
   324                           ; 1 bytes @ 0x4
   325                           
   326  0074                     DelayXms@x:	
   327                           ; 1 bytes @ 0x4
   328                           
   329  0074                     key_driver@key_return:	
   330                           ; 1 bytes @ 0x4
   331                           
   332  0074                     resetKey@key:	
   333                           ; 1 bytes @ 0x4
   334                           
   335                           
   336                           ; 1 bytes @ 0x4
   337  0074                     	ds	1
   338  0075                     ??_Init_Config:	
   339  0075                     setFanLevel@tempLevel:	
   340                           ; 1 bytes @ 0x5
   341                           
   342  0075                     DelayXms@i:	
   343                           ; 1 bytes @ 0x5
   344                           
   345  0075                     key_driver@key_read:	
   346                           ; 1 bytes @ 0x5
   347                           
   348                           
   349                           ; 1 bytes @ 0x5
   350  0075                     	ds	1
   351  0076                     ??_checkFan:	
   352  0076                     DelayXms@j:	
   353                           ; 1 bytes @ 0x6
   354                           
   355  0076                     sacnKeyInput@key:	
   356                           ; 1 bytes @ 0x6
   357                           
   358  0076                     key_driver@key:	
   359                           ; 1 bytes @ 0x6
   360                           
   361                           
   362                           ; 1 bytes @ 0x6
   363  0076                     	ds	1
   364  0077                     ??_readVrefADC:	
   365  0077                     ??_scanKeys:	
   366                           ; 1 bytes @ 0x7
   367                           
   368  0077                     ??_checkKeys:	
   369                           ; 1 bytes @ 0x7
   370                           
   371  0077                     ??_main:	
   372                           ; 1 bytes @ 0x7
   373                           
   374                           
   375                           	psect	cstackBANK0
   376  0038                     __pcstackBANK0:	
   377                           ; 1 bytes @ 0x7
   378                           
   379  0038                     ??_ADC_Sample:	
   380  0038                     ?___awdiv:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0038                     ___awdiv@divisor:	
   384                           ; 2 bytes @ 0x0
   385                           
   386                           
   387                           ; 2 bytes @ 0x0
   388  0038                     	ds	2
   389  003A                     ___awdiv@dividend:	
   390                           
   391                           ; 2 bytes @ 0x2
   392  003A                     	ds	2
   393  003C                     ADC_Sample@adch:	
   394  003C                     ___awdiv@counter:	
   395                           ; 1 bytes @ 0x4
   396                           
   397                           
   398                           ; 1 bytes @ 0x4
   399  003C                     	ds	1
   400  003D                     ADC_Sample@i:	
   401  003D                     ___awdiv@sign:	
   402                           ; 1 bytes @ 0x5
   403                           
   404                           
   405                           ; 1 bytes @ 0x5
   406  003D                     	ds	1
   407  003E                     ADC_Sample@ad_temp:	
   408  003E                     ___awdiv@quotient:	
   409                           ; 2 bytes @ 0x6
   410                           
   411                           
   412                           ; 2 bytes @ 0x6
   413  003E                     	ds	2
   414                           
   415                           	psect	maintext
   416  01CF                     __pmaintext:	
   417 ;;
   418 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   419 ;;
   420 ;; *************** function _main *****************
   421 ;; Defined at:
   422 ;;		line 185 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : B00/0
   433 ;;		On exit  : 300/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1
   436 ;;      Params:         0       0       0
   437 ;;      Locals:         0       0       0
   438 ;;      Temps:          0       0       0
   439 ;;      Totals:         0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels required when called:    8
   442 ;; This function calls:
   443 ;;		_Init_Config
   444 ;;		_checkKeys
   445 ;;		_checkUsbStatus
   446 ;;		_readVrefADC
   447 ;;		_scanKeys
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           
   454                           ;psect for function _main
   455  01CF                     _main:	
   456                           
   457                           ;main.c: 186: Init_Config();
   458                           
   459                           ;incstack = 0
   460                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   461  01CF  2221               	fcall	_Init_Config
   462  01D0                     l3204:	
   463                           
   464                           ;main.c: 189: if (time0Flag) {
   465  01D0  0879               	movf	_time0Flag,w
   466  01D1  1903               	btfsc	3,2
   467  01D2  29D9               	goto	l3214
   468  01D3  0064               	clrwdt	;# 
   469                           
   470                           ;main.c: 191: time0Flag = 0;
   471  01D4  01F9               	clrf	_time0Flag
   472                           
   473                           ;main.c: 192: scanKeys();
   474  01D5  22CF               	fcall	_scanKeys
   475                           
   476                           ;main.c: 193: count10Ms++;
   477  01D6  0AAA               	incf	_count10Ms,f
   478  01D7  1903               	skipnz
   479  01D8  0AAB               	incf	_count10Ms+1,f
   480  01D9                     l3214:	
   481                           
   482                           ;main.c: 194: }
   483                           ;main.c: 197: if (count10Ms == 100) {
   484  01D9  3064               	movlw	100
   485  01DA  1283               	bcf	3,5	;RP0=0, select bank0
   486  01DB  062A               	xorwf	_count10Ms,w
   487  01DC  042B               	iorwf	_count10Ms+1,w
   488  01DD  1D03               	btfss	3,2
   489  01DE  29E4               	goto	l3224
   490                           
   491                           ;main.c: 198: checkKeys();
   492  01DF  226D               	fcall	_checkKeys
   493                           
   494                           ;main.c: 199: count10Ms = 0;
   495  01E0  01AA               	clrf	_count10Ms
   496  01E1  01AB               	clrf	_count10Ms+1
   497                           
   498                           ;main.c: 201: checkUsbStatus();
   499  01E2  21AD               	fcall	_checkUsbStatus
   500                           
   501                           ;main.c: 203: readVrefADC();
   502  01E3  22FF               	fcall	_readVrefADC
   503  01E4                     l3224:	
   504                           
   505                           ;main.c: 204: }
   506                           ;main.c: 206: if (countTime == 1000) {
   507  01E4  30E8               	movlw	232
   508  01E5  062C               	xorwf	_countTime,w
   509  01E6  3003               	movlw	3
   510  01E7  1903               	skipnz
   511  01E8  062D               	xorwf	_countTime+1,w
   512  01E9  1D03               	btfss	3,2
   513  01EA  29D0               	goto	l3204
   514                           
   515                           ;main.c: 207: countTime = 0;
   516  01EB  01AC               	clrf	_countTime
   517  01EC  01AD               	clrf	_countTime+1
   518  01ED  29D0               	goto	l3204
   519  01EE                     __end_of_main:	
   520                           
   521                           	psect	text1
   522  02CF                     __ptext1:	
   523 ;; *************** function _scanKeys *****************
   524 ;; Defined at:
   525 ;;		line 156 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/100
   536 ;;		On exit  : B00/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMMON   BANK0   BANK1
   539 ;;      Params:         0       0       0
   540 ;;      Locals:         0       0       0
   541 ;;      Temps:          0       0       0
   542 ;;      Totals:         0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels used:    1
   545 ;; Hardware stack levels required when called:    4
   546 ;; This function calls:
   547 ;;		_sacnKeyInput
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _scanKeys
   555  02CF                     _scanKeys:	
   556                           
   557                           ;main.c: 157: key1.key_addr_result = PORTB;
   558                           
   559                           ;incstack = 0
   560                           ; Regs used in _scanKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   561  02CF  1283               	bcf	3,5	;RP0=0, select bank0
   562  02D0  1303               	bcf	3,6	;RP1=0, select bank0
   563  02D1  0806               	movf	6,w	;volatile
   564  02D2  00B6               	movwf	_key1+5
   565                           
   566                           ;main.c: 158: sacnKeyInput(&key1);
   567  02D3  3031               	movlw	(low (_key1| 0))& (0+255)
   568  02D4  21EE               	fcall	_sacnKeyInput
   569                           
   570                           ;main.c: 159: countTime++;
   571  02D5  0AAC               	incf	_countTime,f
   572  02D6  1903               	skipnz
   573  02D7  0AAD               	incf	_countTime+1,f
   574  02D8  0008               	return
   575  02D9                     __end_of_scanKeys:	
   576                           
   577                           	psect	text2
   578  01EE                     __ptext2:	
   579 ;; *************** function _sacnKeyInput *****************
   580 ;; Defined at:
   581 ;;		line 3 in file "C:\SCMCU WorkSpace\n9_fan_no_led\scankey.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  key             1    wreg     PTR struct Keys
   584 ;;		 -> key1(7), 
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  key             1    6[COMMON] PTR struct Keys
   587 ;;		 -> key1(7), 
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   592 ;; Tracked objects:
   593 ;;		On entry : 300/0
   594 ;;		On exit  : B00/0
   595 ;;		Unchanged: 300/0
   596 ;; Data sizes:     COMMON   BANK0   BANK1
   597 ;;      Params:         0       0       0
   598 ;;      Locals:         1       0       0
   599 ;;      Temps:          2       0       0
   600 ;;      Totals:         3       0       0
   601 ;;Total ram usage:        3 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; Hardware stack levels required when called:    3
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_scanKeys
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _sacnKeyInput
   613  01EE                     _sacnKeyInput:	
   614                           
   615                           ;incstack = 0
   616                           ; Regs used in _sacnKeyInput: [wreg-fsr0h+status,2+status,0]
   617                           ;sacnKeyInput@key stored from wreg
   618  01EE  00F6               	movwf	sacnKeyInput@key
   619                           
   620                           ;scankey.c: 4: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
   621  01EF  3E05               	addlw	5
   622  01F0  0084               	movwf	4
   623  01F1  1383               	bcf	3,7	;select IRP bank0
   624  01F2  0800               	movf	0,w
   625  01F3  00F4               	movwf	??_sacnKeyInput
   626  01F4  0876               	movf	sacnKeyInput@key,w
   627  01F5  3E06               	addlw	6
   628  01F6  0084               	movwf	4
   629  01F7  0A00               	incf	0,w
   630  01F8  29FB               	goto	u614
   631  01F9                     u615:	
   632  01F9  1003               	clrc
   633  01FA  0CF4               	rrf	??_sacnKeyInput,f
   634  01FB                     u614:	
   635  01FB  3EFF               	addlw	-1
   636  01FC  1D03               	skipz
   637  01FD  29F9               	goto	u615
   638  01FE  0874               	movf	??_sacnKeyInput,w
   639  01FF  00F5               	movwf	??_sacnKeyInput+1
   640  0200  0876               	movf	sacnKeyInput@key,w
   641  0201  3E04               	addlw	4
   642  0202  0084               	movwf	4
   643  0203  0875               	movf	??_sacnKeyInput+1,w
   644  0204  0080               	movwf	0
   645  0205  0876               	movf	sacnKeyInput@key,w
   646  0206  3E04               	addlw	4
   647  0207  0084               	movwf	4
   648  0208  3001               	movlw	1
   649  0209  0580               	andwf	0,f
   650  020A  0008               	return
   651  020B                     __end_of_sacnKeyInput:	
   652                           
   653                           	psect	text3
   654  02FF                     __ptext3:	
   655 ;; *************** function _readVrefADC *****************
   656 ;; Defined at:
   657 ;;		line 90 in file "C:\SCMCU WorkSpace\n9_fan_no_led\adc.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;		None
   660 ;; Auto vars:     Size  Location     Type
   661 ;;		None
   662 ;; Return value:  Size  Location     Type
   663 ;;                  2  555[None  ] unsigned int 
   664 ;; Registers used:
   665 ;;		wreg, status,2, status,0, pclath, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 300/0
   668 ;;		On exit  : 300/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMMON   BANK0   BANK1
   671 ;;      Params:         0       0       0
   672 ;;      Locals:         0       0       0
   673 ;;      Temps:          0       0       0
   674 ;;      Totals:         0       0       0
   675 ;;Total ram usage:        0 bytes
   676 ;; Hardware stack levels used:    1
   677 ;; Hardware stack levels required when called:    4
   678 ;; This function calls:
   679 ;;		_ADC_Sample
   680 ;;		_DelayXms
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _readVrefADC
   688  02FF                     _readVrefADC:	
   689                           
   690                           ;adc.c: 92: DelayXms(1);
   691                           
   692                           ;incstack = 0
   693                           ; Regs used in _readVrefADC: [wreg+status,2+status,0+pclath+cstack]
   694  02FF  3001               	movlw	1
   695  0300  22C4               	fcall	_DelayXms
   696                           
   697                           ;adc.c: 93: ADC_Sample(15);
   698  0301  300F               	movlw	15
   699  0302  2819               	ljmp	_ADC_Sample
   700  0303                     __end_of_readVrefADC:	
   701                           
   702                           	psect	text4
   703  02C4                     __ptext4:	
   704 ;; *************** function _DelayXms *****************
   705 ;; Defined at:
   706 ;;		line 82 in file "C:\SCMCU WorkSpace\n9_fan_no_led\adc.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  x               1    wreg     unsigned char 
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  x               1    4[COMMON] unsigned char 
   711 ;;  j               1    6[COMMON] unsigned char 
   712 ;;  i               1    5[COMMON] unsigned char 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 300/0
   719 ;;		On exit  : 300/0
   720 ;;		Unchanged: 300/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1
   722 ;;      Params:         0       0       0
   723 ;;      Locals:         3       0       0
   724 ;;      Temps:          0       0       0
   725 ;;      Totals:         3       0       0
   726 ;;Total ram usage:        3 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    3
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_readVrefADC
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           
   737                           ;psect for function _DelayXms
   738  02C4                     _DelayXms:	
   739                           
   740                           ;incstack = 0
   741                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   742                           ;DelayXms@x stored from wreg
   743  02C4  00F4               	movwf	DelayXms@x
   744                           
   745                           ;adc.c: 84: unsigned char i,j;
   746                           ;adc.c: 85: for(i=x;i>0;i--)
   747  02C5  00F5               	movwf	DelayXms@i
   748  02C6                     l2838:	
   749  02C6  0875               	movf	DelayXms@i,w
   750  02C7  1903               	btfsc	3,2
   751  02C8  0008               	return
   752                           
   753                           ;adc.c: 86: for(j=153;j>0;j--);
   754  02C9  3099               	movlw	153
   755  02CA  00F6               	movwf	DelayXms@j
   756  02CB                     l2848:	
   757  02CB  0BF6               	decfsz	DelayXms@j,f
   758  02CC  2ACB               	goto	l2848
   759  02CD  03F5               	decf	DelayXms@i,f
   760  02CE  2AC6               	goto	l2838
   761  02CF                     __end_of_DelayXms:	
   762                           
   763                           	psect	text5
   764  0019                     __ptext5:	
   765 ;; *************** function _ADC_Sample *****************
   766 ;; Defined at:
   767 ;;		line 11 in file "C:\SCMCU WorkSpace\n9_fan_no_led\adc.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;  adch            1    wreg     unsigned char 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  adch            1    4[BANK0 ] unsigned char 
   772 ;;  ad_temp         2    6[BANK0 ] volatile unsigned int 
   773 ;;  i               1    5[BANK0 ] unsigned char 
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0
   778 ;; Tracked objects:
   779 ;;		On entry : 300/0
   780 ;;		On exit  : 300/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1
   783 ;;      Params:         0       0       0
   784 ;;      Locals:         0       4       0
   785 ;;      Temps:          0       4       0
   786 ;;      Totals:         0       8       0
   787 ;;Total ram usage:        8 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_readVrefADC
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _ADC_Sample
   799  0019                     _ADC_Sample:	
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _ADC_Sample: [wreg+status,2+status,0]
   803                           ;ADC_Sample@adch stored from wreg
   804  0019  00BC               	movwf	ADC_Sample@adch
   805                           
   806                           ;adc.c: 13: static unsigned long adsum = 0;
   807                           ;adc.c: 14: static unsigned int admin = 0,admax = 0;
   808                           ;adc.c: 15: static unsigned char adtimes = 0;
   809                           ;adc.c: 16: volatile unsigned int ad_temp;
   810                           ;adc.c: 17: ADCON1 = 0;
   811  001A  1683               	bsf	3,5	;RP0=1, select bank1
   812  001B  019F               	clrf	31	;volatile
   813                           
   814                           ;adc.c: 18: ADCON0 = 0X41 | (adch << 2);
   815  001C  1283               	bcf	3,5	;RP0=0, select bank0
   816  001D  083C               	movf	ADC_Sample@adch,w
   817  001E  00B8               	movwf	??_ADC_Sample
   818  001F  3001               	movlw	1
   819  0020  1003               	clrc
   820  0021                     L1:	
   821  0021  0DB8               	rlf	??_ADC_Sample,f
   822  0022  3EFF               	addlw	-1
   823  0023  1003               	clrc
   824  0024  1D03               	skipz
   825  0025  2821               	goto	L1
   826  0026  0D38               	rlf	??_ADC_Sample,w
   827  0027  3841               	iorlw	65
   828  0028  009F               	movwf	31	;volatile
   829  0029  0000               	nop	;# 
   830  002A  0000               	nop	;# 
   831                           
   832                           ;adc.c: 21: GODONE = 1;
   833  002B  1283               	bcf	3,5	;RP0=0, select bank0
   834  002C  1303               	bcf	3,6	;RP1=0, select bank0
   835  002D  149F               	bsf	31,1	;volatile
   836                           
   837                           ;adc.c: 23: unsigned char i = 0;
   838  002E  01BD               	clrf	ADC_Sample@i
   839  002F                     l1733:	
   840                           ;adc.c: 24: while(GODONE)
   841                           
   842  002F  1C9F               	btfss	31,1	;volatile
   843  0030  2834               	goto	l3150
   844                           
   845                           ;adc.c: 25: {
   846                           ;adc.c: 26: if(0 == (--i))
   847  0031  0BBD               	decfsz	ADC_Sample@i,f
   848  0032  282F               	goto	l1733
   849  0033  0008               	return
   850  0034                     l3150:	
   851                           
   852                           ;adc.c: 28: }
   853                           ;adc.c: 30: ad_temp=(ADRESH<<4)+(ADRESL>>4);
   854  0034  081E               	movf	30,w	;volatile
   855  0035  00BE               	movwf	ADC_Sample@ad_temp	;volatile
   856  0036  01BF               	clrf	ADC_Sample@ad_temp+1	;volatile
   857  0037  0EBE               	swapf	ADC_Sample@ad_temp,f	;volatile
   858  0038  0EBF               	swapf	ADC_Sample@ad_temp+1,f	;volatile
   859  0039  30F0               	movlw	240
   860  003A  05BF               	andwf	ADC_Sample@ad_temp+1,f	;volatile
   861  003B  083E               	movf	ADC_Sample@ad_temp,w	;volatile
   862  003C  390F               	andlw	15
   863  003D  04BF               	iorwf	ADC_Sample@ad_temp+1,f	;volatile
   864  003E  30F0               	movlw	240
   865  003F  05BE               	andwf	ADC_Sample@ad_temp,f	;volatile
   866  0040  1683               	bsf	3,5	;RP0=1, select bank1
   867  0041  0E1E               	swapf	30,w	;volatile
   868  0042  390F               	andlw	15
   869  0043  1283               	bcf	3,5	;RP0=0, select bank0
   870  0044  07BE               	addwf	ADC_Sample@ad_temp,f	;volatile
   871  0045  1803               	skipnc
   872  0046  0ABF               	incf	ADC_Sample@ad_temp+1,f	;volatile
   873                           
   874                           ;adc.c: 32: if(0 == admax)
   875  0047  0824               	movf	ADC_Sample@admax,w
   876  0048  0425               	iorwf	ADC_Sample@admax+1,w
   877  0049  1D03               	btfss	3,2
   878  004A  284D               	goto	l3158
   879                           
   880                           ;adc.c: 33: {
   881                           ;adc.c: 34: admax = ad_temp;
   882  004B  20BE               	fcall	PL4	;call to abstracted procedure
   883  004C  285F               	goto	l3164
   884  004D                     l3158:	
   885                           ;adc.c: 36: }
   886                           
   887                           ;adc.c: 35: admin = ad_temp;
   888                           
   889                           
   890                           ;adc.c: 37: else if(ad_temp > admax)
   891  004D  083F               	movf	ADC_Sample@ad_temp+1,w	;volatile
   892  004E  0225               	subwf	ADC_Sample@admax+1,w
   893  004F  1D03               	skipz
   894  0050  2853               	goto	u1115
   895  0051  083E               	movf	ADC_Sample@ad_temp,w	;volatile
   896  0052  0224               	subwf	ADC_Sample@admax,w
   897  0053                     u1115:	
   898  0053  1803               	skipnc
   899  0054  2857               	goto	l3162
   900                           
   901                           ;adc.c: 38: admax = ad_temp;
   902  0055  20BE               	fcall	PL4	;call to abstracted procedure
   903  0056  2863               	goto	l1739
   904  0057                     l3162:	
   905                           
   906                           ;adc.c: 39: else if(ad_temp < admin)
   907  0057  0827               	movf	ADC_Sample@admin+1,w
   908  0058  023F               	subwf	ADC_Sample@ad_temp+1,w	;volatile
   909  0059  1D03               	skipz
   910  005A  285D               	goto	u1125
   911  005B  0826               	movf	ADC_Sample@admin,w
   912  005C  023E               	subwf	ADC_Sample@ad_temp,w	;volatile
   913  005D                     u1125:	
   914  005D  1803               	skipnc
   915  005E  2863               	goto	l1739
   916  005F                     l3164:	
   917                           
   918                           ;adc.c: 40: admin = ad_temp;
   919  005F  083F               	movf	ADC_Sample@ad_temp+1,w	;volatile
   920  0060  00A7               	movwf	ADC_Sample@admin+1
   921  0061  083E               	movf	ADC_Sample@ad_temp,w	;volatile
   922  0062  00A6               	movwf	ADC_Sample@admin
   923  0063                     l1739:	
   924                           
   925                           ;adc.c: 42: adsum += ad_temp;
   926  0063  083E               	movf	ADC_Sample@ad_temp,w	;volatile
   927  0064  00B8               	movwf	??_ADC_Sample
   928  0065  083F               	movf	ADC_Sample@ad_temp+1,w	;volatile
   929  0066  00B9               	movwf	??_ADC_Sample+1
   930  0067  01BA               	clrf	??_ADC_Sample+2
   931  0068  01BB               	clrf	??_ADC_Sample+3
   932  0069  0838               	movf	??_ADC_Sample,w
   933  006A  07A0               	addwf	ADC_Sample@adsum,f
   934  006B  0839               	movf	??_ADC_Sample+1,w
   935  006C  1103               	clrz
   936  006D  1803               	skipnc
   937  006E  3E01               	addlw	1
   938  006F  1D03               	btfss	3,2
   939  0070  07A1               	addwf	ADC_Sample@adsum+1,f
   940  0071  083A               	movf	??_ADC_Sample+2,w
   941  0072  1103               	clrz
   942  0073  1803               	skipnc
   943  0074  3E01               	addlw	1
   944  0075  1D03               	btfss	3,2
   945  0076  07A2               	addwf	ADC_Sample@adsum+2,f
   946  0077  083B               	movf	??_ADC_Sample+3,w
   947  0078  1103               	clrz
   948  0079  1803               	skipnc
   949  007A  3E01               	addlw	1
   950  007B  1D03               	btfss	3,2
   951  007C  07A3               	addwf	ADC_Sample@adsum+3,f
   952                           
   953                           ;adc.c: 43: if(++adtimes >= 10)
   954  007D  300A               	movlw	10
   955  007E  0AB0               	incf	ADC_Sample@adtimes,f
   956  007F  0230               	subwf	ADC_Sample@adtimes,w
   957  0080  1C03               	skipc
   958  0081  0008               	return
   959                           
   960                           ;adc.c: 44: {
   961                           ;adc.c: 45: adsum -= admax;
   962  0082  0824               	movf	ADC_Sample@admax,w
   963  0083  00B8               	movwf	??_ADC_Sample
   964  0084  0825               	movf	ADC_Sample@admax+1,w
   965  0085  20AF               	fcall	PL2	;call to abstracted procedure
   966  0086  1C03               	skipc
   967  0087  0F3B               	incfsz	??_ADC_Sample+3,w
   968  0088  02A3               	subwf	ADC_Sample@adsum+3,f
   969                           
   970                           ;adc.c: 46: adsum -= admin;
   971  0089  0826               	movf	ADC_Sample@admin,w
   972  008A  00B8               	movwf	??_ADC_Sample
   973  008B  0827               	movf	ADC_Sample@admin+1,w
   974  008C  20AF               	fcall	PL2	;call to abstracted procedure
   975  008D  1C03               	skipc
   976  008E  0F3B               	incfsz	??_ADC_Sample+3,w
   977  008F  02A3               	subwf	ADC_Sample@adsum+3,f
   978                           
   979                           ;adc.c: 48: adresult = adsum >> 3;
   980  0090  0820               	movf	ADC_Sample@adsum,w
   981  0091  00B8               	movwf	??_ADC_Sample
   982  0092  0821               	movf	ADC_Sample@adsum+1,w
   983  0093  00B9               	movwf	??_ADC_Sample+1
   984  0094  0822               	movf	ADC_Sample@adsum+2,w
   985  0095  00BA               	movwf	??_ADC_Sample+2
   986  0096  0823               	movf	ADC_Sample@adsum+3,w
   987  0097  00BB               	movwf	??_ADC_Sample+3
   988  0098  3003               	movlw	3
   989  0099                     u1175:	
   990  0099  1003               	clrc
   991  009A  0CBB               	rrf	??_ADC_Sample+3,f
   992  009B  0CBA               	rrf	??_ADC_Sample+2,f
   993  009C  0CB9               	rrf	??_ADC_Sample+1,f
   994  009D  0CB8               	rrf	??_ADC_Sample,f
   995  009E  3EFF               	addlw	-1
   996  009F  1D03               	skipz
   997  00A0  2899               	goto	u1175
   998  00A1  0839               	movf	??_ADC_Sample+1,w
   999  00A2  00AF               	movwf	_adresult+1	;volatile
  1000  00A3  0838               	movf	??_ADC_Sample,w
  1001  00A4  00AE               	movwf	_adresult	;volatile
  1002                           
  1003                           ;adc.c: 50: adsum = 0;
  1004  00A5  01A0               	clrf	ADC_Sample@adsum
  1005  00A6  01A1               	clrf	ADC_Sample@adsum+1
  1006  00A7  01A2               	clrf	ADC_Sample@adsum+2
  1007  00A8  01A3               	clrf	ADC_Sample@adsum+3
  1008                           
  1009                           ;adc.c: 51: admin = 0;
  1010  00A9  01A6               	clrf	ADC_Sample@admin
  1011  00AA  01A7               	clrf	ADC_Sample@admin+1
  1012                           
  1013                           ;adc.c: 52: admax = 0;
  1014  00AB  01A4               	clrf	ADC_Sample@admax
  1015  00AC  01A5               	clrf	ADC_Sample@admax+1
  1016                           
  1017                           ;adc.c: 53: adtimes = 0;
  1018  00AD  01B0               	clrf	ADC_Sample@adtimes
  1019  00AE  0008               	return
  1020  00AF                     __end_of_ADC_Sample:	
  1021  00AF                     PL2:	
  1022  00AF  00B9               	movwf	??_ADC_Sample+1
  1023  00B0  01BA               	clrf	??_ADC_Sample+2
  1024  00B1  01BB               	clrf	??_ADC_Sample+3
  1025  00B2  0838               	movf	??_ADC_Sample,w
  1026  00B3  02A0               	subwf	ADC_Sample@adsum,f
  1027  00B4  0839               	movf	??_ADC_Sample+1,w
  1028  00B5  1C03               	skipc
  1029  00B6  0F39               	incfsz	??_ADC_Sample+1,w
  1030  00B7  02A1               	subwf	ADC_Sample@adsum+1,f
  1031  00B8  083A               	movf	??_ADC_Sample+2,w
  1032  00B9  1C03               	skipc
  1033  00BA  0F3A               	incfsz	??_ADC_Sample+2,w
  1034  00BB  02A2               	subwf	ADC_Sample@adsum+2,f
  1035  00BC  083B               	movf	??_ADC_Sample+3,w
  1036  00BD  0008               	return
  1037  00BE                     __end_ofPL2:	
  1038  00BE                     PL4:	
  1039  00BE  083F               	movf	ADC_Sample@ad_temp+1,w	;volatile
  1040  00BF  00A5               	movwf	ADC_Sample@admax+1
  1041  00C0  083E               	movf	ADC_Sample@ad_temp,w	;volatile
  1042  00C1  00A4               	movwf	ADC_Sample@admax
  1043  00C2  0008               	return
  1044  00C3                     __end_ofPL4:	
  1045                           
  1046                           	psect	text6
  1047  01AD                     __ptext6:	
  1048 ;; *************** function _checkUsbStatus *****************
  1049 ;; Defined at:
  1050 ;;		line 34 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 300/0
  1061 ;;		On exit  : 300/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1
  1064 ;;      Params:         0       0       0
  1065 ;;      Locals:         0       0       0
  1066 ;;      Temps:          1       0       0
  1067 ;;      Totals:         1       0       0
  1068 ;;Total ram usage:        1 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    3
  1071 ;; This function calls:
  1072 ;;		Nothing
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function _checkUsbStatus
  1080  01AD                     _checkUsbStatus:	
  1081                           
  1082                           ;main.c: 36: if(FAN_STATUS == 1 && currentLevel != 1)
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _checkUsbStatus: [wreg+status,2+status,0]
  1086  01AD  0B77               	decfsz	_FAN_STATUS,w
  1087  01AE  29B5               	goto	l2900
  1088  01AF  0378               	decf	_currentLevel,w
  1089  01B0  1903               	btfsc	3,2
  1090  01B1  29B5               	goto	l2900
  1091  01B2                     l2898:	
  1092                           
  1093                           ;main.c: 37: {
  1094                           ;main.c: 38: PORTA|=(1<<0);
  1095  01B2  1405               	bsf	5,0	;volatile
  1096                           
  1097                           ;main.c: 39: PORTC|=(1<<1);
  1098  01B3  1487               	bsf	7,1	;volatile
  1099                           
  1100                           ;main.c: 40: return;
  1101  01B4  0008               	return
  1102  01B5                     l2900:	
  1103                           
  1104                           ;main.c: 41: }
  1105                           ;main.c: 42: if (((PORTB) >> (2)&1) == 1) {
  1106  01B5  0806               	movf	6,w	;volatile
  1107  01B6  00F4               	movwf	??_checkUsbStatus
  1108  01B7  1003               	clrc
  1109  01B8  0CF4               	rrf	??_checkUsbStatus,f
  1110  01B9  1003               	clrc
  1111  01BA  0CF4               	rrf	??_checkUsbStatus,f
  1112  01BB  1C74               	btfss	??_checkUsbStatus,0
  1113  01BC  29B2               	goto	l2898
  1114                           
  1115                           ;main.c: 43: if (((PORTB) >> (1)&1) == 1) {
  1116  01BD  0806               	movf	6,w	;volatile
  1117  01BE  00F4               	movwf	??_checkUsbStatus
  1118  01BF  1003               	clrc
  1119  01C0  0CF4               	rrf	??_checkUsbStatus,f
  1120  01C1  1C74               	btfss	??_checkUsbStatus,0
  1121  01C2  29C6               	goto	l2906
  1122                           
  1123                           ;main.c: 45: PORTC&=~(1<<1);
  1124  01C3  1087               	bcf	7,1	;volatile
  1125                           
  1126                           ;main.c: 46: PORTA|=(1<<0);
  1127  01C4  1405               	bsf	5,0	;volatile
  1128                           
  1129                           ;main.c: 47: } else if (countTime == 100) {
  1130  01C5  0008               	return
  1131  01C6                     l2906:	
  1132  01C6  3064               	movlw	100
  1133  01C7  062C               	xorwf	_countTime,w
  1134  01C8  042D               	iorwf	_countTime+1,w
  1135  01C9  1D03               	btfss	3,2
  1136  01CA  0008               	return
  1137                           
  1138                           ;main.c: 49: PORTA^=(1<<0);
  1139  01CB  3001               	movlw	1
  1140  01CC  0685               	xorwf	5,f	;volatile
  1141                           
  1142                           ;main.c: 50: PORTC|=(1<<1);
  1143  01CD  1487               	bsf	7,1	;volatile
  1144  01CE  0008               	return
  1145  01CF                     __end_of_checkUsbStatus:	
  1146                           
  1147                           	psect	text7
  1148  026D                     __ptext7:	
  1149 ;; *************** function _checkKeys *****************
  1150 ;; Defined at:
  1151 ;;		line 164 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  1    wreg      void 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 300/0
  1162 ;;		On exit  : 300/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0   BANK1
  1165 ;;      Params:         0       0       0
  1166 ;;      Locals:         0       0       0
  1167 ;;      Temps:          0       0       0
  1168 ;;      Totals:         0       0       0
  1169 ;;Total ram usage:        0 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    7
  1172 ;; This function calls:
  1173 ;;		_checkFan
  1174 ;;		_key_driver
  1175 ;;		_setFanLevel
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           
  1182                           ;psect for function _checkKeys
  1183  026D                     _checkKeys:	
  1184                           
  1185                           ;main.c: 165: if (key_driver(&key1) == 1) {
  1186                           
  1187                           ;incstack = 0
  1188                           ; Regs used in _checkKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1189  026D  3031               	movlw	(low (_key1| 0))& (0+255)
  1190  026E  2108               	fcall	_key_driver
  1191  026F  3A01               	xorlw	1
  1192  0270  1D03               	skipz
  1193  0271  2A79               	goto	l3194
  1194                           
  1195                           ;main.c: 168: if (FAN_STATUS == 1) {
  1196  0272  0B77               	decfsz	_FAN_STATUS,w
  1197  0273  2A76               	goto	l3186
  1198                           
  1199                           ;main.c: 170: setFanLevel(1);
  1200  0274  3001               	movlw	1
  1201  0275  294A               	ljmp	_setFanLevel
  1202  0276                     l3186:	
  1203                           ;main.c: 172: } else {
  1204                           
  1205                           
  1206                           ;main.c: 173: FAN_STATUS = 2;
  1207  0276  3002               	movlw	2
  1208  0277  00F7               	movwf	_FAN_STATUS
  1209  0278                     l3188:	
  1210                           
  1211                           ;main.c: 174: checkFan();
  1212  0278  2983               	ljmp	l3118
  1213  0279                     l3194:	
  1214  0279  3002               	movlw	2
  1215  027A  0677               	xorwf	_FAN_STATUS,w
  1216  027B  1D03               	btfss	3,2
  1217  027C  0008               	return
  1218  027D  2A78               	goto	l3188
  1219  027E                     __end_of_checkKeys:	
  1220                           
  1221                           	psect	text8
  1222  0108                     __ptext8:	
  1223 ;; *************** function _key_driver *****************
  1224 ;; Defined at:
  1225 ;;		line 9 in file "C:\SCMCU WorkSpace\n9_fan_no_led\scankey.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  key             1    wreg     PTR struct Keys
  1228 ;;		 -> key1(7), 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  key             1    6[COMMON] PTR struct Keys
  1231 ;;		 -> key1(7), 
  1232 ;;  key_read        1    5[COMMON] unsigned char 
  1233 ;;  key_return      1    4[COMMON] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      unsigned char 
  1236 ;; Registers used:
  1237 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 300/0
  1240 ;;		On exit  : B00/0
  1241 ;;		Unchanged: 300/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1
  1243 ;;      Params:         0       0       0
  1244 ;;      Locals:         3       0       0
  1245 ;;      Temps:          0       0       0
  1246 ;;      Totals:         3       0       0
  1247 ;;Total ram usage:        3 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    3
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_checkKeys
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function _key_driver
  1259  0108                     _key_driver:	
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in _key_driver: [wreg-fsr0h+status,2+status,0]
  1263                           ;key_driver@key stored from wreg
  1264  0108  00F6               	movwf	key_driver@key
  1265                           
  1266                           ;scankey.c: 12: unsigned char key_return = 0;
  1267  0109  01F4               	clrf	key_driver@key_return
  1268                           
  1269                           ;scankey.c: 13: unsigned char key_read = key->key_input;
  1270  010A  3E04               	addlw	4
  1271  010B  0084               	movwf	4
  1272  010C  1383               	bcf	3,7	;select IRP bank0
  1273  010D  0800               	movf	0,w
  1274  010E  00F5               	movwf	key_driver@key_read
  1275                           
  1276                           ;scankey.c: 15: switch (key->key_state_buffer1) {
  1277  010F  293B               	goto	l2782
  1278  0110                     l2752:	
  1279                           
  1280                           ;scankey.c: 17: if (key_read == 0) {
  1281  0110  0875               	movf	key_driver@key_read,w
  1282  0111  1D03               	btfss	3,2
  1283  0112  2948               	goto	l2784
  1284                           
  1285                           ;scankey.c: 18: key->key_state_buffer1 = 1;
  1286  0113  0A76               	incf	key_driver@key,w
  1287  0114  0084               	movwf	4
  1288  0115  0180               	clrf	0
  1289  0116  0A80               	incf	0,f
  1290  0117  2948               	goto	l2784
  1291  0118                     l2756:	
  1292                           
  1293                           ;scankey.c: 25: if (key_read == 0) {
  1294  0118  0875               	movf	key_driver@key_read,w
  1295  0119  1D03               	btfss	3,2
  1296  011A  2937               	goto	l2778
  1297                           
  1298                           ;scankey.c: 26: key->key_timer_cnt1 = 0;
  1299  011B  0876               	movf	key_driver@key,w
  1300  011C  0084               	movwf	4
  1301  011D  0180               	clrf	0
  1302                           
  1303                           ;scankey.c: 27: key->key_state_buffer1 = 2;
  1304  011E  0A76               	incf	key_driver@key,w
  1305  011F  0084               	movwf	4
  1306  0120  3002               	movlw	2
  1307  0121  2933               	goto	L2
  1308  0122                     l2764:	
  1309                           ;scankey.c: 32: key->key_state_buffer1 = 0;
  1310                           
  1311                           ;scankey.c: 31: } else {
  1312                           
  1313                           
  1314                           ;scankey.c: 39: if (key_read == 1) {
  1315  0122  0B75               	decfsz	key_driver@key_read,w
  1316  0123  2927               	goto	l2770
  1317                           
  1318                           ;scankey.c: 40: key_return = 1;
  1319  0124  01F4               	clrf	key_driver@key_return
  1320  0125  0AF4               	incf	key_driver@key_return,f
  1321  0126  2937               	goto	l2778
  1322  0127                     l2770:	
  1323                           ;scankey.c: 42: } else if (++(key->key_timer_cnt1) >= 100)
  1324                           
  1325                           ;scankey.c: 41: key->key_state_buffer1 = 0;
  1326                           
  1327  0127  0876               	movf	key_driver@key,w
  1328  0128  0084               	movwf	4
  1329  0129  3064               	movlw	100
  1330  012A  0A80               	incf	0,f
  1331  012B  0200               	subwf	0,w
  1332  012C  1C03               	skipc
  1333  012D  2948               	goto	l2784
  1334                           
  1335                           ;scankey.c: 43: {
  1336                           ;scankey.c: 44: key_return = 3;
  1337  012E  3003               	movlw	3
  1338  012F  00F4               	movwf	key_driver@key_return
  1339                           
  1340                           ;scankey.c: 45: key->key_state_buffer1 = 3;
  1341  0130  0A76               	incf	key_driver@key,w
  1342  0131  0084               	movwf	4
  1343  0132  3003               	movlw	3
  1344  0133                     L2:	
  1345  0133  0080               	movwf	0
  1346  0134  2948               	goto	l2784
  1347  0135                     l2776:	
  1348                           
  1349                           ;scankey.c: 51: if (key_read == 1)
  1350  0135  0B75               	decfsz	key_driver@key_read,w
  1351  0136  2948               	goto	l2784
  1352  0137                     l2778:	
  1353                           
  1354                           ;scankey.c: 52: {
  1355                           ;scankey.c: 53: key->key_state_buffer1 = 0;
  1356  0137  0A76               	incf	key_driver@key,w
  1357  0138  0084               	movwf	4
  1358  0139  0180               	clrf	0
  1359  013A  2948               	goto	l2784
  1360  013B                     l2782:	
  1361  013B  0A76               	incf	key_driver@key,w
  1362  013C  0084               	movwf	4
  1363  013D  0800               	movf	0,w
  1364                           
  1365                           ; Switch size 1, requested type "space"
  1366                           ; Number of cases is 4, Range of values is 0 to 3
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; direct_byte           10     6 (fixed)
  1370                           ; simple_byte           13     7 (average)
  1371                           ; jumptable            260     6 (fixed)
  1372                           ;	Chosen strategy is direct_byte
  1373  013E  0084               	movwf	4
  1374  013F  3004               	movlw	4
  1375  0140  0204               	subwf	4,w
  1376  0141  1803               	skipnc
  1377  0142  2948               	goto	l2784
  1378  0143  3003               	movlw	high S3258
  1379  0144  008A               	movwf	10
  1380  0145  3003               	movlw	low S3258
  1381  0146  0704               	addwf	4,w
  1382  0147  0082               	movwf	2
  1383  0148                     l2784:	
  1384                           
  1385                           ;scankey.c: 58: return key_return;
  1386  0148  0874               	movf	key_driver@key_return,w
  1387  0149  0008               	return
  1388  014A                     __end_of_key_driver:	
  1389                           
  1390                           	psect	swtext1
  1391  0303                     __pswtext1:	
  1392  0303                     S3258:	
  1393  0303  2910               	ljmp	l2752
  1394  0304  2918               	ljmp	l2756
  1395  0305  2922               	ljmp	l2764
  1396  0306  2935               	ljmp	l2776
  1397                           
  1398                           	psect	text9
  1399  0183                     __ptext9:	
  1400 ;; *************** function _checkFan *****************
  1401 ;; Defined at:
  1402 ;;		line 123 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 300/0
  1413 ;;		On exit  : 300/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1
  1416 ;;      Params:         0       0       0
  1417 ;;      Locals:         0       0       0
  1418 ;;      Temps:          1       0       0
  1419 ;;      Totals:         1       0       0
  1420 ;;Total ram usage:        1 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    6
  1423 ;; This function calls:
  1424 ;;		_closeFan
  1425 ;;		_setFanLevel
  1426 ;; This function is called by:
  1427 ;;		_checkKeys
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           
  1432                           ;psect for function _checkFan
  1433  0183                     _checkFan:	
  1434  0183                     l3118:	
  1435                           ;incstack = 0
  1436                           ; Regs used in _checkFan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1437                           
  1438                           
  1439                           ;main.c: 124: TRISA&=~(1<<1);
  1440  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1441  0184  1085               	bcf	5,1	;volatile
  1442                           
  1443                           ;main.c: 125: PORTA|=(1<<1);
  1444  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0186  1485               	bsf	5,1	;volatile
  1446                           
  1447                           ;main.c: 127: TRISC&=~(1<<2);
  1448  0187  1683               	bsf	3,5	;RP0=1, select bank1
  1449  0188  1107               	bcf	7,2	;volatile
  1450                           
  1451                           ;main.c: 128: PORTA|=(1<<2);
  1452  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1453  018A  1505               	bsf	5,2	;volatile
  1454                           
  1455                           ;main.c: 129: T2CON = 0X04;
  1456  018B  3004               	movlw	4
  1457  018C  0092               	movwf	18	;volatile
  1458                           
  1459                           ;main.c: 132: if (((PORTB) >> (6)&1) == 0) {
  1460  018D  0806               	movf	6,w	;volatile
  1461  018E  00F6               	movwf	??_checkFan
  1462  018F  3006               	movlw	6
  1463  0190                     u1035:	
  1464  0190  1003               	clrc
  1465  0191  0CF6               	rrf	??_checkFan,f
  1466  0192  3EFF               	addlw	-1
  1467  0193  1D03               	skipz
  1468  0194  2990               	goto	u1035
  1469  0195  1876               	btfsc	??_checkFan,0
  1470  0196  299A               	goto	l3126
  1471                           
  1472                           ;main.c: 133: FAN_STATUS = 1;
  1473  0197  01F7               	clrf	_FAN_STATUS
  1474  0198  0AF7               	incf	_FAN_STATUS,f
  1475                           
  1476                           ;main.c: 134: } else {
  1477  0199  299C               	goto	l3128
  1478  019A                     l3126:	
  1479                           
  1480                           ;main.c: 135: FAN_STATUS = 2;
  1481  019A  3002               	movlw	2
  1482  019B  00F7               	movwf	_FAN_STATUS
  1483  019C                     l3128:	
  1484                           
  1485                           ;main.c: 136: }
  1486                           ;main.c: 138: setFanLevel(0);
  1487  019C  3000               	movlw	0
  1488  019D  214A               	fcall	_setFanLevel
  1489                           
  1490                           ;main.c: 141: if (FAN_STATUS == 2) {
  1491  019E  3002               	movlw	2
  1492  019F  0677               	xorwf	_FAN_STATUS,w
  1493  01A0  1D03               	btfss	3,2
  1494  01A1  0008               	return
  1495                           
  1496                           ;main.c: 142: fan_check_time++;
  1497  01A2  0AA8               	incf	_fan_check_time,f
  1498  01A3  1903               	skipnz
  1499  01A4  0AA9               	incf	_fan_check_time+1,f
  1500                           
  1501                           ;main.c: 143: if (fan_check_time == 3000) {
  1502  01A5  30B8               	movlw	184
  1503  01A6  0628               	xorwf	_fan_check_time,w
  1504  01A7  300B               	movlw	11
  1505  01A8  1903               	skipnz
  1506  01A9  0629               	xorwf	_fan_check_time+1,w
  1507  01AA  1D03               	btfss	3,2
  1508  01AB  0008               	return
  1509                           
  1510                           ;main.c: 144: closeFan();
  1511  01AC  2AB8               	ljmp	l2614
  1512  01AD                     __end_of_checkFan:	
  1513                           
  1514                           	psect	text10
  1515  014A                     __ptext10:	
  1516 ;; *************** function _setFanLevel *****************
  1517 ;; Defined at:
  1518 ;;		line 73 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  level           1    wreg     unsigned char 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  level           1    4[COMMON] unsigned char 
  1523 ;;  levelWidth      2    0        unsigned int 
  1524 ;;  tempLevel       1    5[COMMON] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 300/0
  1531 ;;		On exit  : 300/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMMON   BANK0   BANK1
  1534 ;;      Params:         0       0       0
  1535 ;;      Locals:         2       0       0
  1536 ;;      Temps:          0       0       0
  1537 ;;      Totals:         2       0       0
  1538 ;;Total ram usage:        2 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    5
  1541 ;; This function calls:
  1542 ;;		___awdiv
  1543 ;;		_closeFan
  1544 ;; This function is called by:
  1545 ;;		_checkFan
  1546 ;;		_checkKeys
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function _setFanLevel
  1552  014A                     _setFanLevel:	
  1553                           
  1554                           ;incstack = 0
  1555                           ; Regs used in _setFanLevel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1556                           ;setFanLevel@level stored from wreg
  1557  014A  00F4               	movwf	setFanLevel@level
  1558                           
  1559                           ;main.c: 74: if(level == 0)
  1560  014B  0874               	movf	setFanLevel@level,w
  1561  014C  1D03               	btfss	3,2
  1562  014D  2950               	goto	l3094
  1563                           
  1564                           ;main.c: 75: {
  1565                           ;main.c: 76: currentLevel = 3;
  1566  014E  3003               	movlw	3
  1567  014F  00F8               	movwf	_currentLevel
  1568  0150                     l3094:	
  1569                           
  1570                           ;main.c: 77: }
  1571                           ;main.c: 78: unsigned int levelWidth = (PR2 + 1) / 4;
  1572  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1573  0151  0812               	movf	18,w	;volatile
  1574  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0153  00BA               	movwf	___awdiv@dividend
  1576  0154  01BB               	clrf	___awdiv@dividend+1
  1577  0155  0ABA               	incf	___awdiv@dividend,f
  1578  0156  1903               	skipnz
  1579  0157  0ABB               	incf	___awdiv@dividend+1,f
  1580  0158  3004               	movlw	4
  1581  0159  00B8               	movwf	___awdiv@divisor
  1582  015A  01B9               	clrf	___awdiv@divisor+1
  1583  015B  20C3               	fcall	___awdiv
  1584                           
  1585                           ;main.c: 79: char tempLevel = currentLevel + level;
  1586  015C  0874               	movf	setFanLevel@level,w
  1587  015D  0778               	addwf	_currentLevel,w
  1588  015E  00F5               	movwf	setFanLevel@tempLevel
  1589                           
  1590                           ;main.c: 80: if (tempLevel > 4) {
  1591  015F  3005               	movlw	5
  1592  0160  0275               	subwf	setFanLevel@tempLevel,w
  1593  0161  1C03               	skipc
  1594  0162  2965               	goto	l3102
  1595                           
  1596                           ;main.c: 81: tempLevel = 1;
  1597  0163  01F5               	clrf	setFanLevel@tempLevel
  1598  0164  0AF5               	incf	setFanLevel@tempLevel,f
  1599  0165                     l3102:	
  1600                           
  1601                           ;main.c: 82: }
  1602                           ;main.c: 85: if (FAN_STATUS == 1) {
  1603  0165  0B77               	decfsz	_FAN_STATUS,w
  1604  0166  0008               	return
  1605                           
  1606                           ;main.c: 86: currentLevel = tempLevel;
  1607  0167  0875               	movf	setFanLevel@tempLevel,w
  1608  0168  00F8               	movwf	_currentLevel
  1609                           
  1610                           ;main.c: 87: switch(currentLevel)
  1611  0169  2974               	goto	l3116
  1612  016A                     l3106:	
  1613                           
  1614                           ;main.c: 90: closeFan();
  1615  016A  2AB8               	ljmp	l2614
  1616  016B                     l3108:	
  1617                           ;main.c: 91: break;
  1618                           
  1619                           
  1620                           ;main.c: 93: CCPR1L = 2;
  1621  016B  3002               	movlw	2
  1622  016C  0095               	movwf	21	;volatile
  1623                           
  1624                           ;main.c: 94: break;
  1625  016D  0008               	return
  1626  016E                     l3110:	
  1627                           
  1628                           ;main.c: 96: CCPR1L = 3;
  1629  016E  3003               	movlw	3
  1630  016F  0095               	movwf	21	;volatile
  1631                           
  1632                           ;main.c: 97: break;
  1633  0170  0008               	return
  1634  0171                     l3112:	
  1635                           
  1636                           ;main.c: 99: CCPR1L = 5;
  1637  0171  3005               	movlw	5
  1638  0172  0095               	movwf	21	;volatile
  1639                           
  1640                           ;main.c: 100: break;
  1641  0173  0008               	return
  1642  0174                     l3116:	
  1643  0174  0878               	movf	_currentLevel,w
  1644                           
  1645                           ; Switch size 1, requested type "space"
  1646                           ; Number of cases is 4, Range of values is 1 to 4
  1647                           ; switch strategies available:
  1648                           ; Name         Instructions Cycles
  1649                           ; simple_byte           13     7 (average)
  1650                           ; direct_byte           13     9 (fixed)
  1651                           ; jumptable            263     9 (fixed)
  1652                           ;	Chosen strategy is simple_byte
  1653  0175  3A01               	xorlw	1	; case 1
  1654  0176  1903               	skipnz
  1655  0177  296A               	goto	l3106
  1656  0178  3A03               	xorlw	3	; case 2
  1657  0179  1903               	skipnz
  1658  017A  296B               	goto	l3108
  1659  017B  3A01               	xorlw	1	; case 3
  1660  017C  1903               	skipnz
  1661  017D  296E               	goto	l3110
  1662  017E  3A07               	xorlw	7	; case 4
  1663  017F  1903               	skipnz
  1664  0180  2971               	goto	l3112
  1665  0181  2982               	goto	l1139
  1666  0182                     l1139:	
  1667  0182  0008               	return
  1668  0183                     __end_of_setFanLevel:	
  1669                           
  1670                           	psect	text11
  1671  02B8                     __ptext11:	
  1672 ;; *************** function _closeFan *****************
  1673 ;; Defined at:
  1674 ;;		line 110 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;		None
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;		None
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 300/0
  1685 ;;		On exit  : 300/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1
  1688 ;;      Params:         0       0       0
  1689 ;;      Locals:         0       0       0
  1690 ;;      Temps:          0       0       0
  1691 ;;      Totals:         0       0       0
  1692 ;;Total ram usage:        0 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    4
  1695 ;; This function calls:
  1696 ;;		_Init_PWM
  1697 ;; This function is called by:
  1698 ;;		_setFanLevel
  1699 ;;		_checkFan
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _closeFan
  1705  02B8                     _closeFan:	
  1706  02B8                     l2614:	
  1707                           ;incstack = 0
  1708                           ; Regs used in _closeFan: [wreg+status,2+status,0+pclath+cstack]
  1709                           
  1710                           
  1711                           ;main.c: 111: Init_PWM();
  1712  02B8  229E               	fcall	_Init_PWM
  1713                           
  1714                           ;main.c: 112: currentLevel = 2;
  1715  02B9  3002               	movlw	2
  1716  02BA  00F8               	movwf	_currentLevel
  1717                           
  1718                           ;main.c: 113: PORTA|=(1<<0);
  1719  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1720  02BC  1405               	bsf	5,0	;volatile
  1721                           
  1722                           ;main.c: 115: TRISC|=(1<<2);
  1723  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1724  02BE  1507               	bsf	7,2	;volatile
  1725                           
  1726                           ;main.c: 116: fan_check_time = 0;
  1727  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1728  02C0  01A8               	clrf	_fan_check_time
  1729  02C1  01A9               	clrf	_fan_check_time+1
  1730                           
  1731                           ;main.c: 117: FAN_STATUS = 0;
  1732  02C2  01F7               	clrf	_FAN_STATUS
  1733  02C3  0008               	return
  1734  02C4                     __end_of_closeFan:	
  1735                           
  1736                           	psect	text12
  1737  00C3                     __ptext12:	
  1738 ;; *************** function ___awdiv *****************
  1739 ;; Defined at:
  1740 ;;		line 6 in file "C:\¹¤¾ß\µ¥Æ¬»úÑ§Ï°×ÊÁÏ\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\awdiv.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  divisor         2    0[BANK0 ] int 
  1743 ;;  dividend        2    2[BANK0 ] int 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  quotient        2    6[BANK0 ] int 
  1746 ;;  sign            1    5[BANK0 ] unsigned char 
  1747 ;;  counter         1    4[BANK0 ] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  2    0[BANK0 ] int 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 300/0
  1754 ;;		On exit  : 300/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1
  1757 ;;      Params:         0       4       0
  1758 ;;      Locals:         0       4       0
  1759 ;;      Temps:          0       0       0
  1760 ;;      Totals:         0       8       0
  1761 ;;Total ram usage:        8 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    3
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_setFanLevel
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function ___awdiv
  1773  00C3                     ___awdiv:	
  1774                           
  1775                           ;incstack = 0
  1776                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1777  00C3  01BD               	clrf	___awdiv@sign
  1778  00C4  1FB9               	btfss	___awdiv@divisor+1,7
  1779  00C5  28CD               	goto	l3054
  1780  00C6  09B8               	comf	___awdiv@divisor,f
  1781  00C7  09B9               	comf	___awdiv@divisor+1,f
  1782  00C8  0AB8               	incf	___awdiv@divisor,f
  1783  00C9  1903               	skipnz
  1784  00CA  0AB9               	incf	___awdiv@divisor+1,f
  1785  00CB  01BD               	clrf	___awdiv@sign
  1786  00CC  0ABD               	incf	___awdiv@sign,f
  1787  00CD                     l3054:	
  1788  00CD  1FBB               	btfss	___awdiv@dividend+1,7
  1789  00CE  28D6               	goto	l3060
  1790  00CF  09BA               	comf	___awdiv@dividend,f
  1791  00D0  09BB               	comf	___awdiv@dividend+1,f
  1792  00D1  0ABA               	incf	___awdiv@dividend,f
  1793  00D2  1903               	skipnz
  1794  00D3  0ABB               	incf	___awdiv@dividend+1,f
  1795  00D4  3001               	movlw	1
  1796  00D5  06BD               	xorwf	___awdiv@sign,f
  1797  00D6                     l3060:	
  1798  00D6  01BE               	clrf	___awdiv@quotient
  1799  00D7  01BF               	clrf	___awdiv@quotient+1
  1800  00D8  0838               	movf	___awdiv@divisor,w
  1801  00D9  0439               	iorwf	___awdiv@divisor+1,w
  1802  00DA  1903               	btfsc	3,2
  1803  00DB  28FB               	goto	l3082
  1804  00DC  01BC               	clrf	___awdiv@counter
  1805  00DD                     L3:	
  1806  00DD  0ABC               	incf	___awdiv@counter,f
  1807  00DE  1BB9               	btfsc	___awdiv@divisor+1,7
  1808  00DF  28E4               	goto	l3070
  1809  00E0  1003               	clrc
  1810  00E1  0DB8               	rlf	___awdiv@divisor,f
  1811  00E2  0DB9               	rlf	___awdiv@divisor+1,f
  1812  00E3  28DD               	goto	L3
  1813  00E4                     l3070:	
  1814  00E4  1003               	clrc
  1815  00E5  0DBE               	rlf	___awdiv@quotient,f
  1816  00E6  0DBF               	rlf	___awdiv@quotient+1,f
  1817  00E7  0839               	movf	___awdiv@divisor+1,w
  1818  00E8  023B               	subwf	___awdiv@dividend+1,w
  1819  00E9  1D03               	skipz
  1820  00EA  28ED               	goto	u975
  1821  00EB  0838               	movf	___awdiv@divisor,w
  1822  00EC  023A               	subwf	___awdiv@dividend,w
  1823  00ED                     u975:	
  1824  00ED  1C03               	skipc
  1825  00EE  28F7               	goto	L4
  1826  00EF  0838               	movf	___awdiv@divisor,w
  1827  00F0  02BA               	subwf	___awdiv@dividend,f
  1828  00F1  0839               	movf	___awdiv@divisor+1,w
  1829  00F2  1C03               	skipc
  1830  00F3  03BB               	decf	___awdiv@dividend+1,f
  1831  00F4  02BB               	subwf	___awdiv@dividend+1,f
  1832  00F5  143E               	bsf	___awdiv@quotient,0
  1833  00F6  1003               	clrc
  1834  00F7                     L4:	
  1835  00F7  0CB9               	rrf	___awdiv@divisor+1,f
  1836  00F8  0CB8               	rrf	___awdiv@divisor,f
  1837  00F9  0BBC               	decfsz	___awdiv@counter,f
  1838  00FA  28E4               	goto	l3070
  1839  00FB                     l3082:	
  1840  00FB  083D               	movf	___awdiv@sign,w
  1841  00FC  1903               	btfsc	3,2
  1842  00FD  2903               	goto	l3086
  1843  00FE  09BE               	comf	___awdiv@quotient,f
  1844  00FF  09BF               	comf	___awdiv@quotient+1,f
  1845  0100  0ABE               	incf	___awdiv@quotient,f
  1846  0101  1903               	skipnz
  1847  0102  0ABF               	incf	___awdiv@quotient+1,f
  1848  0103                     l3086:	
  1849  0103  083F               	movf	___awdiv@quotient+1,w
  1850  0104  00B9               	movwf	?___awdiv+1
  1851  0105  083E               	movf	___awdiv@quotient,w
  1852  0106  00B8               	movwf	?___awdiv
  1853  0107  0008               	return
  1854  0108                     __end_of___awdiv:	
  1855                           
  1856                           	psect	text13
  1857  0221                     __ptext13:	
  1858 ;; *************** function _Init_Config *****************
  1859 ;; Defined at:
  1860 ;;		line 214 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : B00/0
  1871 ;;		On exit  : B00/100
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1
  1874 ;;      Params:         0       0       0
  1875 ;;      Locals:         0       0       0
  1876 ;;      Temps:          0       0       0
  1877 ;;      Totals:         0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    4
  1881 ;; This function calls:
  1882 ;;		_Init_GPIO
  1883 ;;		_Init_Interupt
  1884 ;;		_Init_PWM
  1885 ;;		_Init_System
  1886 ;;		_resetKey
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function _Init_Config
  1894  0221                     _Init_Config:	
  1895                           
  1896                           ;main.c: 216: Init_System();
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1900  0221  22D9               	fcall	_Init_System
  1901                           
  1902                           ;main.c: 217: Init_GPIO();
  1903  0222  2249               	fcall	_Init_GPIO
  1904                           
  1905                           ;main.c: 218: Init_Interupt();
  1906  0223  22F3               	fcall	_Init_Interupt
  1907                           
  1908                           ;main.c: 219: Init_PWM();
  1909  0224  229E               	fcall	_Init_PWM
  1910                           
  1911                           ;main.c: 221: IOCB = 0x04;
  1912  0225  3004               	movlw	4
  1913  0226  0096               	movwf	22	;volatile
  1914                           
  1915                           ;main.c: 222: TMR0 = 155;
  1916  0227  309B               	movlw	155
  1917  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0229  0081               	movwf	1	;volatile
  1919                           
  1920                           ;main.c: 223: TO = 0;
  1921  022A  1203               	bcf	3,4	;volatile
  1922                           
  1923                           ;main.c: 226: key1.key_index = 5;
  1924  022B  3005               	movlw	5
  1925  022C  00B7               	movwf	_key1+6
  1926                           
  1927                           ;main.c: 228: resetKey(&key1);
  1928  022D  3031               	movlw	(low (_key1| 0))& (0+255)
  1929  022E  227E               	fcall	_resetKey
  1930                           
  1931                           ;main.c: 231: TRISA = 0;
  1932  022F  1683               	bsf	3,5	;RP0=1, select bank1
  1933  0230  0185               	clrf	5	;volatile
  1934                           
  1935                           ;main.c: 232: TRISB = 0x7E;
  1936  0231  307E               	movlw	126
  1937  0232  0086               	movwf	6	;volatile
  1938                           
  1939                           ;main.c: 233: TRISC = 0;
  1940  0233  0187               	clrf	7	;volatile
  1941  0234  0008               	return
  1942  0235                     __end_of_Init_Config:	
  1943                           
  1944                           	psect	text14
  1945  027E                     __ptext14:	
  1946 ;; *************** function _resetKey *****************
  1947 ;; Defined at:
  1948 ;;		line 100 in file "C:\SCMCU WorkSpace\n9_fan_no_led\scankey.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  key             1    wreg     PTR struct Keys
  1951 ;;		 -> key1(7), 
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;  key             1    4[COMMON] PTR struct Keys
  1954 ;;		 -> key1(7), 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 300/0
  1961 ;;		On exit  : B00/0
  1962 ;;		Unchanged: 300/0
  1963 ;; Data sizes:     COMMON   BANK0   BANK1
  1964 ;;      Params:         0       0       0
  1965 ;;      Locals:         1       0       0
  1966 ;;      Temps:          0       0       0
  1967 ;;      Totals:         1       0       0
  1968 ;;Total ram usage:        1 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    3
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_Init_Config
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _resetKey
  1980  027E                     _resetKey:	
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _resetKey: [wreg-fsr0h+status,2+status,0]
  1984                           ;resetKey@key stored from wreg
  1985  027E  00F4               	movwf	resetKey@key
  1986                           
  1987                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  1988  027F  3E03               	addlw	3
  1989  0280  0084               	movwf	4
  1990  0281  1383               	bcf	3,7	;select IRP bank0
  1991  0282  0180               	clrf	0
  1992  0283  0A74               	incf	resetKey@key,w
  1993  0284  0084               	movwf	4
  1994  0285  0180               	clrf	0
  1995  0286  0874               	movf	resetKey@key,w
  1996  0287  3E02               	addlw	2
  1997  0288  0084               	movwf	4
  1998  0289  0180               	clrf	0
  1999  028A  0874               	movf	resetKey@key,w
  2000  028B  0084               	movwf	4
  2001  028C  0180               	clrf	0
  2002  028D  0008               	return
  2003  028E                     __end_of_resetKey:	
  2004                           
  2005                           	psect	text15
  2006  02D9                     __ptext15:	
  2007 ;; *************** function _Init_System *****************
  2008 ;; Defined at:
  2009 ;;		line 3 in file "C:\SCMCU WorkSpace\n9_fan_no_led\init.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2
  2018 ;; Tracked objects:
  2019 ;;		On entry : B00/0
  2020 ;;		On exit  : 300/100
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON   BANK0   BANK1
  2023 ;;      Params:         0       0       0
  2024 ;;      Locals:         0       0       0
  2025 ;;      Temps:          0       0       0
  2026 ;;      Totals:         0       0       0
  2027 ;;Total ram usage:        0 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; Hardware stack levels required when called:    3
  2030 ;; This function calls:
  2031 ;;		Nothing
  2032 ;; This function is called by:
  2033 ;;		_Init_Config
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function _Init_System
  2039  02D9                     _Init_System:	
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _Init_System: [wreg+status,2]
  2043  02D9  0000               	nop	;# 
  2044  02DA  0064               	clrwdt	;# 
  2045                           
  2046                           ;init.c: 6: INTCON = 0;
  2047  02DB  018B               	clrf	11	;volatile
  2048                           
  2049                           ;init.c: 7: OSCCON = 0X71;
  2050  02DC  3071               	movlw	113
  2051  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  2052  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  2053  02DF  008F               	movwf	15	;volatile
  2054                           
  2055                           ;init.c: 8: OPTION_REG = 0x00;
  2056  02E0  0181               	clrf	1	;volatile
  2057  02E1  0008               	return
  2058  02E2                     __end_of_Init_System:	
  2059                           
  2060                           	psect	text16
  2061  029E                     __ptext16:	
  2062 ;; *************** function _Init_PWM *****************
  2063 ;; Defined at:
  2064 ;;		line 59 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2
  2073 ;; Tracked objects:
  2074 ;;		On entry : 300/0
  2075 ;;		On exit  : 300/100
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1
  2078 ;;      Params:         0       0       0
  2079 ;;      Locals:         0       0       0
  2080 ;;      Temps:          0       0       0
  2081 ;;      Totals:         0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    3
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_closeFan
  2089 ;;		_Init_Config
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _Init_PWM
  2095  029E                     _Init_PWM:	
  2096                           
  2097                           ;main.c: 60: CCP1CON = 0x0F;
  2098                           
  2099                           ;incstack = 0
  2100                           ; Regs used in _Init_PWM: [wreg+status,2]
  2101  029E  300F               	movlw	15
  2102  029F  0097               	movwf	23	;volatile
  2103                           
  2104                           ;main.c: 61: T2CON = 0;
  2105  02A0  0192               	clrf	18	;volatile
  2106                           
  2107                           ;main.c: 62: PR2 = 7;
  2108  02A1  3007               	movlw	7
  2109  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  2110  02A3  0092               	movwf	18	;volatile
  2111                           
  2112                           ;main.c: 64: CCPR1L = 0;
  2113  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2114  02A5  0195               	clrf	21	;volatile
  2115                           
  2116                           ;main.c: 65: TMR2IF = 0;
  2117  02A6  108C               	bcf	12,1	;volatile
  2118                           
  2119                           ;main.c: 66: T2CON = 0;
  2120  02A7  0192               	clrf	18	;volatile
  2121                           
  2122                           ;main.c: 68: TRISC&=~(1<<2);
  2123  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  2124  02A9  1107               	bcf	7,2	;volatile
  2125  02AA  0008               	return
  2126  02AB                     __end_of_Init_PWM:	
  2127                           
  2128                           	psect	text17
  2129  02F3                     __ptext17:	
  2130 ;; *************** function _Init_Interupt *****************
  2131 ;; Defined at:
  2132 ;;		line 27 in file "C:\SCMCU WorkSpace\n9_fan_no_led\init.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2
  2141 ;; Tracked objects:
  2142 ;;		On entry : 300/100
  2143 ;;		On exit  : 300/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1
  2146 ;;      Params:         0       0       0
  2147 ;;      Locals:         0       0       0
  2148 ;;      Temps:          0       0       0
  2149 ;;      Totals:         0       0       0
  2150 ;;Total ram usage:        0 bytes
  2151 ;; Hardware stack levels used:    1
  2152 ;; Hardware stack levels required when called:    3
  2153 ;; This function calls:
  2154 ;;		Nothing
  2155 ;; This function is called by:
  2156 ;;		_Init_Config
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           
  2161                           ;psect for function _Init_Interupt
  2162  02F3                     _Init_Interupt:	
  2163                           
  2164                           ;init.c: 28: OPTION_REG = 0x00;
  2165                           
  2166                           ;incstack = 0
  2167                           ; Regs used in _Init_Interupt: [wreg+status,2]
  2168  02F3  0181               	clrf	1	;volatile
  2169                           
  2170                           ;init.c: 29: TMR0 = 0;
  2171  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2172  02F5  0181               	clrf	1	;volatile
  2173                           
  2174                           ;init.c: 30: INTCON = 0xE0;
  2175  02F6  30E0               	movlw	224
  2176  02F7  008B               	movwf	11	;volatile
  2177  02F8  0008               	return
  2178  02F9                     __end_of_Init_Interupt:	
  2179                           
  2180                           	psect	text18
  2181  0249                     __ptext18:	
  2182 ;; *************** function _Init_GPIO *****************
  2183 ;; Defined at:
  2184 ;;		line 13 in file "C:\SCMCU WorkSpace\n9_fan_no_led\init.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2
  2193 ;; Tracked objects:
  2194 ;;		On entry : 300/100
  2195 ;;		On exit  : 300/100
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1
  2198 ;;      Params:         0       0       0
  2199 ;;      Locals:         0       0       0
  2200 ;;      Temps:          0       0       0
  2201 ;;      Totals:         0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    3
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_Init_Config
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function _Init_GPIO
  2214  0249                     _Init_GPIO:	
  2215                           
  2216                           ;init.c: 14: TRISA = 0;
  2217                           
  2218                           ;incstack = 0
  2219                           ; Regs used in _Init_GPIO: [wreg+status,2]
  2220  0249  0185               	clrf	5	;volatile
  2221                           
  2222                           ;init.c: 15: TRISB = 0;
  2223  024A  0186               	clrf	6	;volatile
  2224                           
  2225                           ;init.c: 16: TRISC = 0;
  2226  024B  0187               	clrf	7	;volatile
  2227                           
  2228                           ;init.c: 17: WPUA = 0xFF;
  2229  024C  30FF               	movlw	255
  2230  024D  1703               	bsf	3,6	;RP1=1, select bank3
  2231  024E  008E               	movwf	14	;volatile
  2232                           
  2233                           ;init.c: 18: WPUB = 0xFF;
  2234  024F  1303               	bcf	3,6	;RP1=0, select bank1
  2235  0250  0095               	movwf	21	;volatile
  2236                           
  2237                           ;init.c: 19: WPUC = 0xFF;
  2238  0251  1703               	bsf	3,6	;RP1=1, select bank3
  2239  0252  008F               	movwf	15	;volatile
  2240                           
  2241                           ;init.c: 20: PORTA = 0xFF;
  2242  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0255  0085               	movwf	5	;volatile
  2245                           
  2246                           ;init.c: 21: PORTB = 0xFF;
  2247  0256  0086               	movwf	6	;volatile
  2248                           
  2249                           ;init.c: 22: PORTC = 0xFF;
  2250  0257  0087               	movwf	7	;volatile
  2251                           
  2252                           ;init.c: 23: IOCB = 0x00;
  2253  0258  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0259  0196               	clrf	22	;volatile
  2255  025A  0008               	return
  2256  025B                     __end_of_Init_GPIO:	
  2257                           
  2258                           	psect	text19
  2259  020B                     __ptext19:	
  2260 ;; *************** function _Timer0_Isr *****************
  2261 ;; Defined at:
  2262 ;;		line 278 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;		None
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1
  2276 ;;      Params:         0       0       0
  2277 ;;      Locals:         0       0       0
  2278 ;;      Temps:          3       0       0
  2279 ;;      Totals:         3       0       0
  2280 ;;Total ram usage:        3 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		i1_Init_Config
  2285 ;; This function is called by:
  2286 ;;		Interrupt level 1
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           
  2291                           ;psect for function _Timer0_Isr
  2292  020B                     _Timer0_Isr:	
  2293                           
  2294                           ;main.c: 279: if (T0IF) {
  2295  020B  1D0B               	btfss	11,2	;volatile
  2296  020C  2A14               	goto	i1l3010
  2297                           
  2298                           ;main.c: 281: TMR0 += 155;
  2299  020D  309B               	movlw	155
  2300  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2301  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0210  0781               	addwf	1,f	;volatile
  2303                           
  2304                           ;main.c: 284: T0IF = 0;
  2305  0211  110B               	bcf	11,2	;volatile
  2306                           
  2307                           ;main.c: 285: time0Flag = 1;
  2308  0212  01F9               	clrf	_time0Flag
  2309  0213  0AF9               	incf	_time0Flag,f
  2310  0214                     i1l3010:	
  2311                           
  2312                           ;main.c: 287: }
  2313                           ;main.c: 289: if (RBIF) {
  2314  0214  1C0B               	btfss	11,0	;volatile
  2315  0215  2A18               	goto	i1l1184
  2316                           
  2317                           ;main.c: 290: RBIF = 0;
  2318  0216  100B               	bcf	11,0	;volatile
  2319                           
  2320                           ;main.c: 291: Init_Config();
  2321  0217  2235               	fcall	i1_Init_Config
  2322  0218                     i1l1184:	
  2323  0218  0873               	movf	??_Timer0_Isr+2,w
  2324  0219  008A               	movwf	10
  2325  021A  0872               	movf	??_Timer0_Isr+1,w
  2326  021B  0084               	movwf	4
  2327  021C  0E71               	swapf	??_Timer0_Isr^(0+-128),w
  2328  021D  0083               	movwf	3
  2329  021E  0EFE               	swapf	126,f
  2330  021F  0E7E               	swapf	126,w
  2331  0220  0009               	retfie
  2332  0221                     __end_of_Timer0_Isr:	
  2333                           
  2334                           	psect	intentry
  2335  0004                     __pintentry:	
  2336                           ;incstack = 0
  2337                           ; Regs used in _Timer0_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2338                           
  2339  0004                     interrupt_function:	
  2340  007E                     saved_w	set	btemp
  2341  0004  00FE               	movwf	btemp
  2342  0005  0E03               	swapf	3,w
  2343  0006  00F1               	movwf	??_Timer0_Isr
  2344  0007  0804               	movf	4,w
  2345  0008  00F2               	movwf	??_Timer0_Isr+1
  2346  0009  080A               	movf	10,w
  2347  000A  00F3               	movwf	??_Timer0_Isr+2
  2348  000B  2A0B               	ljmp	_Timer0_Isr
  2349                           
  2350                           	psect	text20
  2351  0235                     __ptext20:	
  2352 ;; *************** function i1_Init_Config *****************
  2353 ;; Defined at:
  2354 ;;		line 214 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : B00/100
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1
  2368 ;;      Params:         0       0       0
  2369 ;;      Locals:         0       0       0
  2370 ;;      Temps:          0       0       0
  2371 ;;      Totals:         0       0       0
  2372 ;;Total ram usage:        0 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    1
  2375 ;; This function calls:
  2376 ;;		i1_Init_GPIO
  2377 ;;		i1_Init_Interupt
  2378 ;;		i1_Init_PWM
  2379 ;;		i1_Init_System
  2380 ;;		i1_resetKey
  2381 ;; This function is called by:
  2382 ;;		_Timer0_Isr
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function i1_Init_Config
  2388  0235                     i1_Init_Config:	
  2389                           
  2390                           ;main.c: 216: Init_System();
  2391                           
  2392                           ;incstack = 0
  2393                           ; Regs used in i1_Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2394  0235  22E2               	fcall	i1_Init_System
  2395                           
  2396                           ;main.c: 217: Init_GPIO();
  2397  0236  225B               	fcall	i1_Init_GPIO
  2398                           
  2399                           ;main.c: 218: Init_Interupt();
  2400  0237  22F9               	fcall	i1_Init_Interupt
  2401                           
  2402                           ;main.c: 219: Init_PWM();
  2403  0238  22AB               	fcall	i1_Init_PWM
  2404                           
  2405                           ;main.c: 221: IOCB = 0x04;
  2406  0239  3004               	movlw	4
  2407  023A  0096               	movwf	22	;volatile
  2408                           
  2409                           ;main.c: 222: TMR0 = 155;
  2410  023B  309B               	movlw	155
  2411  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2412  023D  0081               	movwf	1	;volatile
  2413                           
  2414                           ;main.c: 223: TO = 0;
  2415  023E  1203               	bcf	3,4	;volatile
  2416                           
  2417                           ;main.c: 226: key1.key_index = 5;
  2418  023F  3005               	movlw	5
  2419  0240  00B7               	movwf	_key1+6
  2420                           
  2421                           ;main.c: 228: resetKey(&key1);
  2422  0241  3031               	movlw	(low (_key1| 0))& (0+255)
  2423  0242  228E               	fcall	i1_resetKey
  2424                           
  2425                           ;main.c: 231: TRISA = 0;
  2426  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2427  0244  0185               	clrf	5	;volatile
  2428                           
  2429                           ;main.c: 232: TRISB = 0x7E;
  2430  0245  307E               	movlw	126
  2431  0246  0086               	movwf	6	;volatile
  2432                           
  2433                           ;main.c: 233: TRISC = 0;
  2434  0247  0187               	clrf	7	;volatile
  2435  0248  0008               	return
  2436  0249                     __end_ofi1_Init_Config:	
  2437                           
  2438                           	psect	text21
  2439  028E                     __ptext21:	
  2440 ;; *************** function i1_resetKey *****************
  2441 ;; Defined at:
  2442 ;;		line 100 in file "C:\SCMCU WorkSpace\n9_fan_no_led\scankey.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  key             1    wreg     PTR struct Keys
  2445 ;;		 -> key1(7), 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  key             1    0[COMMON] PTR struct Keys
  2448 ;;		 -> key1(7), 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 300/0
  2455 ;;		On exit  : B00/0
  2456 ;;		Unchanged: 300/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1
  2458 ;;      Params:         0       0       0
  2459 ;;      Locals:         1       0       0
  2460 ;;      Temps:          0       0       0
  2461 ;;      Totals:         1       0       0
  2462 ;;Total ram usage:        1 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		i1_Init_Config
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           
  2472                           ;psect for function i1_resetKey
  2473  028E                     i1_resetKey:	
  2474                           
  2475                           ;incstack = 0
  2476                           ; Regs used in i1_resetKey: [wreg-fsr0h+status,2+status,0]
  2477                           ;i1resetKey@key stored from wreg
  2478  028E  00F0               	movwf	i1resetKey@key
  2479                           
  2480                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2481  028F  3E03               	addlw	3
  2482  0290  0084               	movwf	4
  2483  0291  1383               	bcf	3,7	;select IRP bank0
  2484  0292  0180               	clrf	0
  2485  0293  0A70               	incf	i1resetKey@key,w
  2486  0294  0084               	movwf	4
  2487  0295  0180               	clrf	0
  2488  0296  0870               	movf	i1resetKey@key,w
  2489  0297  3E02               	addlw	2
  2490  0298  0084               	movwf	4
  2491  0299  0180               	clrf	0
  2492  029A  0870               	movf	i1resetKey@key,w
  2493  029B  0084               	movwf	4
  2494  029C  0180               	clrf	0
  2495  029D  0008               	return
  2496  029E                     __end_ofi1_resetKey:	
  2497                           
  2498                           	psect	text22
  2499  02E2                     __ptext22:	
  2500 ;; *************** function i1_Init_System *****************
  2501 ;; Defined at:
  2502 ;;		line 3 in file "C:\SCMCU WorkSpace\n9_fan_no_led\init.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 300/100
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1
  2516 ;;      Params:         0       0       0
  2517 ;;      Locals:         0       0       0
  2518 ;;      Temps:          0       0       0
  2519 ;;      Totals:         0       0       0
  2520 ;;Total ram usage:        0 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		i1_Init_Config
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function i1_Init_System
  2531  02E2                     i1_Init_System:	
  2532                           
  2533                           ;incstack = 0
  2534                           ; Regs used in i1_Init_System: [wreg+status,2]
  2535  02E2  0000               	nop	;# 
  2536  02E3  0064               	clrwdt	;# 
  2537                           
  2538                           ;init.c: 6: INTCON = 0;
  2539  02E4  018B               	clrf	11	;volatile
  2540                           
  2541                           ;init.c: 7: OSCCON = 0X71;
  2542  02E5  3071               	movlw	113
  2543  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2544  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  2545  02E8  008F               	movwf	15	;volatile
  2546                           
  2547                           ;init.c: 8: OPTION_REG = 0x00;
  2548  02E9  0181               	clrf	1	;volatile
  2549  02EA  0008               	return
  2550  02EB                     __end_ofi1_Init_System:	
  2551                           
  2552                           	psect	text23
  2553  02AB                     __ptext23:	
  2554 ;; *************** function i1_Init_PWM *****************
  2555 ;; Defined at:
  2556 ;;		line 59 in file "C:\SCMCU WorkSpace\n9_fan_no_led\main.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;		None
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;		None
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2
  2565 ;; Tracked objects:
  2566 ;;		On entry : 300/0
  2567 ;;		On exit  : 300/100
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1
  2570 ;;      Params:         0       0       0
  2571 ;;      Locals:         0       0       0
  2572 ;;      Temps:          0       0       0
  2573 ;;      Totals:         0       0       0
  2574 ;;Total ram usage:        0 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		i1_Init_Config
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function i1_Init_PWM
  2585  02AB                     i1_Init_PWM:	
  2586                           
  2587                           ;main.c: 60: CCP1CON = 0x0F;
  2588                           
  2589                           ;incstack = 0
  2590                           ; Regs used in i1_Init_PWM: [wreg+status,2]
  2591  02AB  300F               	movlw	15
  2592  02AC  0097               	movwf	23	;volatile
  2593                           
  2594                           ;main.c: 61: T2CON = 0;
  2595  02AD  0192               	clrf	18	;volatile
  2596                           
  2597                           ;main.c: 62: PR2 = 7;
  2598  02AE  3007               	movlw	7
  2599  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  2600  02B0  0092               	movwf	18	;volatile
  2601                           
  2602                           ;main.c: 64: CCPR1L = 0;
  2603  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  2604  02B2  0195               	clrf	21	;volatile
  2605                           
  2606                           ;main.c: 65: TMR2IF = 0;
  2607  02B3  108C               	bcf	12,1	;volatile
  2608                           
  2609                           ;main.c: 66: T2CON = 0;
  2610  02B4  0192               	clrf	18	;volatile
  2611                           
  2612                           ;main.c: 68: TRISC&=~(1<<2);
  2613  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2614  02B6  1107               	bcf	7,2	;volatile
  2615  02B7  0008               	return
  2616  02B8                     __end_ofi1_Init_PWM:	
  2617                           
  2618                           	psect	text24
  2619  02F9                     __ptext24:	
  2620 ;; *************** function i1_Init_Interupt *****************
  2621 ;; Defined at:
  2622 ;;		line 27 in file "C:\SCMCU WorkSpace\n9_fan_no_led\init.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2
  2631 ;; Tracked objects:
  2632 ;;		On entry : 300/100
  2633 ;;		On exit  : 300/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1
  2636 ;;      Params:         0       0       0
  2637 ;;      Locals:         0       0       0
  2638 ;;      Temps:          0       0       0
  2639 ;;      Totals:         0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		i1_Init_Config
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function i1_Init_Interupt
  2651  02F9                     i1_Init_Interupt:	
  2652                           
  2653                           ;init.c: 28: OPTION_REG = 0x00;
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in i1_Init_Interupt: [wreg+status,2]
  2657  02F9  0181               	clrf	1	;volatile
  2658                           
  2659                           ;init.c: 29: TMR0 = 0;
  2660  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2661  02FB  0181               	clrf	1	;volatile
  2662                           
  2663                           ;init.c: 30: INTCON = 0xE0;
  2664  02FC  30E0               	movlw	224
  2665  02FD  008B               	movwf	11	;volatile
  2666  02FE  0008               	return
  2667  02FF                     __end_ofi1_Init_Interupt:	
  2668                           
  2669                           	psect	text25
  2670  025B                     __ptext25:	
  2671 ;; *************** function i1_Init_GPIO *****************
  2672 ;; Defined at:
  2673 ;;		line 13 in file "C:\SCMCU WorkSpace\n9_fan_no_led\init.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;		None
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;		None
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  1    wreg      void 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2
  2682 ;; Tracked objects:
  2683 ;;		On entry : 300/100
  2684 ;;		On exit  : 300/100
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1
  2687 ;;      Params:         0       0       0
  2688 ;;      Locals:         0       0       0
  2689 ;;      Temps:          0       0       0
  2690 ;;      Totals:         0       0       0
  2691 ;;Total ram usage:        0 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		i1_Init_Config
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           
  2701                           ;psect for function i1_Init_GPIO
  2702  025B                     i1_Init_GPIO:	
  2703                           
  2704                           ;init.c: 14: TRISA = 0;
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in i1_Init_GPIO: [wreg+status,2]
  2708  025B  0185               	clrf	5	;volatile
  2709                           
  2710                           ;init.c: 15: TRISB = 0;
  2711  025C  0186               	clrf	6	;volatile
  2712                           
  2713                           ;init.c: 16: TRISC = 0;
  2714  025D  0187               	clrf	7	;volatile
  2715                           
  2716                           ;init.c: 17: WPUA = 0xFF;
  2717  025E  30FF               	movlw	255
  2718  025F  1703               	bsf	3,6	;RP1=1, select bank3
  2719  0260  008E               	movwf	14	;volatile
  2720                           
  2721                           ;init.c: 18: WPUB = 0xFF;
  2722  0261  1303               	bcf	3,6	;RP1=0, select bank1
  2723  0262  0095               	movwf	21	;volatile
  2724                           
  2725                           ;init.c: 19: WPUC = 0xFF;
  2726  0263  1703               	bsf	3,6	;RP1=1, select bank3
  2727  0264  008F               	movwf	15	;volatile
  2728                           
  2729                           ;init.c: 20: PORTA = 0xFF;
  2730  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0267  0085               	movwf	5	;volatile
  2733                           
  2734                           ;init.c: 21: PORTB = 0xFF;
  2735  0268  0086               	movwf	6	;volatile
  2736                           
  2737                           ;init.c: 22: PORTC = 0xFF;
  2738  0269  0087               	movwf	7	;volatile
  2739                           
  2740                           ;init.c: 23: IOCB = 0x00;
  2741  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2742  026B  0196               	clrf	22	;volatile
  2743  026C  0008               	return
  2744  026D                     __end_ofi1_Init_GPIO:	
  2745  007E                     btemp	set	126	;btemp
  2746  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      8      32
    BANK1            80      0       0

Pointer List with Targets:

    resetKey@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 

    key_driver@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 

    sacnKeyInput@key	PTR struct Keys size(1) Largest target is 7
		 -> key1(BANK0[7]), 


Critical Paths under _main in COMMON

    _scanKeys->_sacnKeyInput
    _readVrefADC->_DelayXms
    _checkKeys->_checkFan
    _checkKeys->_key_driver
    _checkFan->_setFanLevel
    _Init_Config->_resetKey

Critical Paths under _Timer0_Isr in COMMON

    i1_Init_Config->i1_resetKey

Critical Paths under _main in BANK0

    _readVrefADC->_ADC_Sample
    _setFanLevel->___awdiv

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2495
                        _Init_Config
                          _checkKeys
                     _checkUsbStatus
                        _readVrefADC
                           _scanKeys
 ---------------------------------------------------------------------------------
 (1) _scanKeys                                             0     0      0     115
                       _sacnKeyInput
 ---------------------------------------------------------------------------------
 (2) _sacnKeyInput                                         3     3      0     115
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _readVrefADC                                          0     0      0     405
                         _ADC_Sample
                           _DelayXms
 ---------------------------------------------------------------------------------
 (2) _DelayXms                                             3     3      0     114
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Sample                                           8     8      0     291
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (1) _checkUsbStatus                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkKeys                                            0     0      0    1860
                           _checkFan
                         _key_driver
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _key_driver                                           3     3      0     388
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _checkFan                                             1     1      0     736
                                              6 COMMON     1     1      0
                           _closeFan
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _setFanLevel                                          4     4      0     736
                                              4 COMMON     2     2      0
                            ___awdiv
                           _closeFan
 ---------------------------------------------------------------------------------
 (3) _closeFan                                             0     0      0       0
                           _Init_PWM
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     606
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Init_Config                                          0     0      0     115
                          _Init_GPIO
                      _Init_Interupt
                           _Init_PWM
                        _Init_System
                           _resetKey
 ---------------------------------------------------------------------------------
 (2) _resetKey                                             1     1      0     115
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Interupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Timer0_Isr                                           3     3      0      88
                                              1 COMMON     3     3      0
                      i1_Init_Config
 ---------------------------------------------------------------------------------
 (7) i1_Init_Config                                        0     0      0      88
                        i1_Init_GPIO
                    i1_Init_Interupt
                         i1_Init_PWM
                      i1_Init_System
                         i1_resetKey
 ---------------------------------------------------------------------------------
 (8) i1_resetKey                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_Init_System                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_Init_PWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_Init_Interupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_Init_GPIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Config
     _Init_GPIO
     _Init_Interupt
     _Init_PWM
     _Init_System
     _resetKey
   _checkKeys
     _checkFan
       _closeFan
         _Init_PWM
       _setFanLevel
         ___awdiv
         _closeFan
           _Init_PWM
     _key_driver
     _setFanLevel
       ___awdiv
       _closeFan
         _Init_PWM
   _checkUsbStatus
   _readVrefADC
     _ADC_Sample
     _DelayXms
   _scanKeys
     _sacnKeyInput

 _Timer0_Isr (ROOT)
   i1_Init_Config
     i1_Init_GPIO
     i1_Init_Interupt
     i1_Init_PWM
     i1_Init_System
     i1_resetKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2A       8        0.0%
ABS                  0      0      2A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 05 14:07:37 2020

         ??i1_Init_System 0070                         pc 0002                        PL2 00AF  
                      PL4 00BE                        _TO 001C              ___awdiv@sign 003D  
                      fsr 0004                       _PR2 0092                       u614 01FB  
                     u615 01F9                       u975 00ED       __size_of_ADC_Sample 0096  
                     fsr0 0004                       indf 0000                      S3258 0303  
                    l1139 0182                      l3110 016E                      l3102 0165  
                    l3112 0171                      l3106 016A                      l3060 00D6  
                    l3108 016B                      l3116 0174                      l3204 01D0  
                    l3070 00E4                      l3054 00CD                      l3126 019A  
                    l3118 0183                      l3150 0034                      l3214 01D9  
                    l3128 019C                      l3224 01E4                      l3082 00FB  
                    l3162 0057                      l3164 005F                      l1733 002F  
                    l3086 0103                      l2614 02B8                      l3094 0150  
                    l3158 004D                      l3186 0276                      l3194 0279  
                    l1739 0063                      l3188 0278                      l2900 01B5  
                    l2752 0110                      l2770 0127                      l2906 01C6  
                    l2764 0122                      l2756 0118                      l2782 013B  
                    l2838 02C6                      l2776 0135                      l2784 0148  
                    l2848 02CB                      l2778 0137                      l2898 01B2  
                    _T0IF 005A                      u1035 0190                      u1115 0053  
                    u1125 005D                      _IOCB 0096                      u1175 0099  
                    _RBIF 0058                      _TMR0 0001    __end_of_checkUsbStatus 01CF  
                    _WPUA 018E                      _WPUB 0095                      _WPUC 018F  
                    _key1 0031                      _main 01CF                      btemp 007E  
              i1_resetKey 028E                      start 000C             ??_Init_Config 0075  
           ??_Init_System 0074             _Init_Interupt 02F3                     ?_main 0070  
         __end_of___awdiv 0108           ___awdiv@divisor 0038                     _T2CON 0012  
            ?_readVrefADC 0070        key_driver@key_read 0075           ___awdiv@counter 003C  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
             ?i1_Init_PWM 0070                     pclath 000A           ?_checkUsbStatus 0070  
                   status 0003                     wtemp0 007E          __end_of_DelayXms 02CF  
            ?_setFanLevel 0070           __initialization 000D              __end_of_main 01EE  
        __end_of_Init_PWM 02AB            ?_Init_Interupt 0070       __end_of_Init_Config 0235  
          _fan_check_time 0028                    ??_main 0077       __end_of_Init_System 02E2  
                  _ADCON0 001F                    _ADCON1 009F                    _ADRESH 001E  
                  _ADRESL 009E                    _CCPR1L 0015          ___awdiv@dividend 003A  
                  _GODONE 00F9                    i1l3010 0214                    i1l1184 0218  
                  _INTCON 000B             ?_sacnKeyInput 0070        __size_of_Init_GPIO 0012  
                  _OSCCON 008F                    _TMR2IF 0061              ??_ADC_Sample 0038  
        __end_of_checkFan 01AD               ?i1_resetKey 0070                _Timer0_Isr 020B  
        __end_of_closeFan 02C4                 ??___awdiv 0074       __size_ofi1_Init_PWM 000D  
            ?i1_Init_GPIO 0070          __end_of_scanKeys 02D9          ___awdiv@quotient 003E  
        __end_of_resetKey 028E              __pdataCOMMON 0077        __end_of_ADC_Sample 00AF  
         i1_Init_Interupt 02F9                    saved_w 007E            ??_sacnKeyInput 0074  
 __end_of__initialization 0017               _Init_Config 0221            __pcstackCOMMON 0070  
         ??_Init_Interupt 0074        __size_of_checkKeys 0011               _Init_System 02D9  
              __end_ofPL2 00BE                __end_ofPL4 00C3         __end_of_Init_GPIO 025B  
     __size_ofi1_resetKey 0010                 ?_DelayXms 0070      __size_of_readVrefADC 0004  
              __pbssBANK0 0020                 ?_Init_PWM 0070               ?_Timer0_Isr 0070  
   __end_ofi1_Init_Config 0249                __pmaintext 01CF      __size_of_setFanLevel 0039  
              __pintentry 0004                   _CCP1CON 0017     __end_ofi1_Init_System 02EB  
 __end_ofi1_Init_Interupt 02FF                 ?_checkFan 0070      key_driver@key_return 0074  
              ??_DelayXms 0074          ??_checkUsbStatus 0074                 ?_closeFan 0070  
            ??i1_Init_PWM 0070         __end_of_checkKeys 027E                ??_Init_PWM 0074  
               ?_scanKeys 0070                 ?_resetKey 0070               resetKey@key 0074  
         ADC_Sample@admax 0024           ADC_Sample@admin 0026           ADC_Sample@adsum 0020  
                 ___awdiv 00C3                _key_driver 0108      __end_of_sacnKeyInput 020B  
      __end_ofi1_Init_PWM 02B8                   __ptext1 02CF                   __ptext2 01EE  
                 __ptext3 02FF                   __ptext4 02C4                   __ptext5 0019  
                 __ptext6 01AD                   __ptext7 026D                   __ptext8 0108  
                 __ptext9 0183      __size_ofi1_Init_GPIO 0012                ??_checkFan 0076  
     __size_of_Timer0_Isr 0016                ??_closeFan 0074                   clrloop0 02EC  
    end_of_initialization 0017                 DelayXms@i 0075                 DelayXms@j 0076  
               DelayXms@x 0074                ??_scanKeys 0077              ??i1_resetKey 0070  
              ??_resetKey 0074           sacnKeyInput@key 0076          ?i1_Init_Interupt 0070  
      __end_ofi1_resetKey 029E              ?_Init_Config 0070               ?_key_driver 0070  
            ?_Init_System 0070          setFanLevel@level 0074             __pidataCOMMON 0000  
     start_initialization 000D                 _Init_GPIO 0249         __size_of_DelayXms 000B  
       __size_of_Init_PWM 000D              ??_Timer0_Isr 0071     __size_of_sacnKeyInput 001D  
       ADC_Sample@ad_temp 003E     __end_of_Init_Interupt 02F9         ADC_Sample@adtimes 0030  
           ??_readVrefADC 0077               __pbssCOMMON 0079                ?_Init_GPIO 0070  
               ___latbits 0000             __pcstackBANK0 0038         __size_of_checkFan 002A  
      __end_of_Timer0_Isr 0221       __size_of_key_driver 0042         __size_of_closeFan 000C  
            _sacnKeyInput 01EE              _currentLevel 0078                 _checkKeys 026D  
           ??_setFanLevel 0074         __size_of_scanKeys 000A                  ?___awdiv 0038  
       __size_of_resetKey 0010                 __pswtext1 0303                 _count10Ms 002A  
               _countTime 002C            ADC_Sample@adch 003C    __size_ofi1_Init_Config 0014  
     __end_of_readVrefADC 0303               ADC_Sample@i 003D    __size_ofi1_Init_System 0009  
       interrupt_function 0004                ?_checkKeys 0070                 _time0Flag 0079  
               clear_ram0 02EB      __size_of_Init_Config 0014      setFanLevel@tempLevel 0075  
           ??i1_Init_GPIO 0070       __end_of_setFanLevel 0183      __size_of_Init_System 0009  
             ??_Init_GPIO 0074                  _DelayXms 02C4                  _Init_PWM 029E  
              _ADC_Sample 0019   __size_of_checkUsbStatus 0022             i1_Init_Config 0235  
            ??_key_driver 0074          __size_of___awdiv 0045             key_driver@key 0076  
           i1_Init_System 02E2               _readVrefADC 02FF                  _checkFan 0183  
              _FAN_STATUS 0077       __end_ofi1_Init_GPIO 026D                  _adresult 002E  
__size_ofi1_Init_Interupt 0006                  __ptext10 014A                  __ptext11 02B8  
                __ptext20 0235                  __ptext12 00C3                  __ptext21 028E  
                __ptext13 0221                  __ptext22 02E2                  __ptext14 027E  
                __ptext23 02AB                  __ptext15 02D9                  __ptext24 02F9  
                __ptext16 029E                  __ptext25 025B                  __ptext17 02F3  
                __ptext18 0249                  __ptext19 020B                  _closeFan 02B8  
      __end_of_key_driver 014A             __size_of_main 001F               ??_checkKeys 0077  
                _scanKeys 02CF                  _resetKey 027E               _setFanLevel 014A  
          ?i1_Init_Config 0070            ?i1_Init_System 0070                  intlevel1 0000  
             ?_ADC_Sample 0070             i1resetKey@key 0070               i1_Init_GPIO 025B  
              _OPTION_REG 0081                i1_Init_PWM 02AB    __size_of_Init_Interupt 0006  
       ??i1_Init_Interupt 0070            _checkUsbStatus 01AD           ??i1_Init_Config 0071  
