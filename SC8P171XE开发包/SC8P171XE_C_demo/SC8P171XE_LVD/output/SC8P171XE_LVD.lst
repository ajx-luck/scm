

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jan 22 16:51:15 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1712E
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  000B                     _INTCON	set	11
    51  0068                     _LVDIF	set	104
    52  002A                     _RA2	set	42
    53  0091                     _LVDCON	set	145
    54  008F                     _OSCCON	set	143
    55  008D                     _PIE2	set	141
    56  0081                     _OPTION_REG	set	129
    57  048F                     _LVD_RES	set	1167
    58                           
    59                           	psect	cinit
    60  000B                     start_initialization:	
    61                           ; #config settings
    62                           
    63  000B                     __initialization:	
    64  000B                     end_of_initialization:	
    65                           ;End of C runtime variable initialization code
    66                           
    67  000B                     __end_of__initialization:	
    68  000B  0183               	clrf	3
    69  000C  280D               	ljmp	_main	;jump to C main() function
    70                           
    71                           	psect	cstackCOMMON
    72  0070                     __pcstackCOMMON:	
    73  0070                     ?_main:	
    74  0070                     ?_LVD_Isr:	
    75                           ; 1 bytes @ 0x0
    76                           
    77  0070                     ??_LVD_Isr:	
    78                           ; 1 bytes @ 0x0
    79                           
    80                           
    81                           ; 1 bytes @ 0x0
    82  0070                     	ds	2
    83  0072                     ??_main:	
    84                           
    85                           	psect	maintext
    86  000D                     __pmaintext:	
    87                           ; 1 bytes @ 0x2
    88 ;;
    89 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    90 ;;
    91 ;; *************** function _main *****************
    92 ;; Defined at:
    93 ;;		line 13 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8P171XE开发包\SC8P171XE_C_demo\SC8P171XE_LVD\SC8P171XE_LVD.
      +c"
    94 ;; Parameters:    Size  Location     Type
    95 ;;		None
    96 ;; Auto vars:     Size  Location     Type
    97 ;;		None
    98 ;; Return value:  Size  Location     Type
    99 ;;                  1    wreg      void 
   100 ;; Registers used:
   101 ;;		wreg, status,2
   102 ;; Tracked objects:
   103 ;;		On entry : B00/0
   104 ;;		On exit  : 100/0
   105 ;;		Unchanged: 0/0
   106 ;; Data sizes:     COMMON   BANK0   BANK1
   107 ;;      Params:         0       0       0
   108 ;;      Locals:         0       0       0
   109 ;;      Temps:          0       0       0
   110 ;;      Totals:         0       0       0
   111 ;;Total ram usage:        0 bytes
   112 ;; Hardware stack levels required when called:    1
   113 ;; This function calls:
   114 ;;		Nothing
   115 ;; This function is called by:
   116 ;;		Startup code after reset
   117 ;; This function uses a non-reentrant model
   118 ;;
   119                           
   120                           
   121                           ;psect for function _main
   122  000D                     _main:	
   123                           
   124                           ;incstack = 0
   125                           ; Regs used in _main: [wreg+status,2]
   126  000D  0000               	nop	;# 
   127  000E  0064               	clrwdt	;# 
   128                           
   129                           ;SC8P171XE_LVD.c: 18: OSCCON = 0x70;
   130  000F  3070               	movlw	112
   131  0010  1683               	bsf	3,5	;RP0=1, select bank1
   132  0011  008F               	movwf	15	;volatile
   133                           
   134                           ;SC8P171XE_LVD.c: 19: OPTION_REG = 0;
   135  0012  0181               	clrf	1	;volatile
   136                           
   137                           ;SC8P171XE_LVD.c: 21: LVDCON = 0x07;
   138  0013  3007               	movlw	7
   139  0014  0091               	movwf	17	;volatile
   140                           
   141                           ;SC8P171XE_LVD.c: 23: INTCON = 0xC0;
   142  0015  30C0               	movlw	192
   143  0016  008B               	movwf	11	;volatile
   144                           
   145                           ;SC8P171XE_LVD.c: 24: PIE2 = 0x01;
   146  0017  3001               	movlw	1
   147  0018  008D               	movwf	13	;volatile
   148  0019  281C               	goto	l465
   149  001A                     l866:	
   150                           
   151                           ;SC8P171XE_LVD.c: 31: RA2 = 1;
   152  001A  1283               	bcf	3,5	;RP0=0, select bank0
   153  001B  1505               	bsf	5,2	;volatile
   154  001C                     l465:	
   155                           ;SC8P171XE_LVD.c: 27: while(1)
   156                           
   157  001C  0064               	clrwdt	;# 
   158                           
   159                           ;SC8P171XE_LVD.c: 30: if (LVD_RES)
   160  001D  1683               	bsf	3,5	;RP0=1, select bank1
   161  001E  1B91               	btfsc	17,7	;volatile
   162  001F  281A               	goto	l866
   163                           
   164                           ;SC8P171XE_LVD.c: 32: else
   165                           ;SC8P171XE_LVD.c: 33: RA2 = 0;
   166  0020  1283               	bcf	3,5	;RP0=0, select bank0
   167  0021  1105               	bcf	5,2	;volatile
   168  0022  281C               	goto	l465
   169  0023                     __end_of_main:	
   170                           
   171                           	psect	text1
   172  0023                     __ptext1:	
   173 ;; *************** function _LVD_Isr *****************
   174 ;; Defined at:
   175 ;;		line 44 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8P171XE开发包\SC8P171XE_C_demo\SC8P171XE_LVD\SC8P171XE_LVD.
      +c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		None
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 100/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMMON   BANK0   BANK1
   189 ;;      Params:         0       0       0
   190 ;;      Locals:         0       0       0
   191 ;;      Temps:          2       0       0
   192 ;;      Totals:         2       0       0
   193 ;;Total ram usage:        2 bytes
   194 ;; Hardware stack levels used:    1
   195 ;; This function calls:
   196 ;;		Nothing
   197 ;; This function is called by:
   198 ;;		Interrupt level 1
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           
   203                           ;psect for function _LVD_Isr
   204  0023                     _LVD_Isr:	
   205                           
   206                           ;SC8P171XE_LVD.c: 46: if(LVDIF)
   207  0023  1283               	bcf	3,5	;RP0=0, select bank0
   208  0024  180D               	btfsc	13,0	;volatile
   209                           
   210                           ;SC8P171XE_LVD.c: 47: {
   211                           ;SC8P171XE_LVD.c: 48: LVDIF = 0;
   212  0025  100D               	bcf	13,0	;volatile
   213  0026  0871               	movf	??_LVD_Isr+1,w
   214  0027  008A               	movwf	10
   215  0028  0E70               	swapf	??_LVD_Isr^(0+-128),w
   216  0029  0083               	movwf	3
   217  002A  0EFE               	swapf	126,f
   218  002B  0E7E               	swapf	126,w
   219  002C  0009               	retfie
   220  002D                     __end_of_LVD_Isr:	
   221  007E                     btemp	set	126	;btemp
   222  007E                     wtemp0	set	126
   223                           
   224                           	psect	intentry
   225  0004                     __pintentry:	
   226                           ;incstack = 0
   227                           ; Regs used in _LVD_Isr: []
   228                           
   229  0004                     interrupt_function:	
   230  007E                     saved_w	set	btemp
   231  0004  00FE               	movwf	btemp
   232  0005  0E03               	swapf	3,w
   233  0006  00F0               	movwf	??_LVD_Isr
   234  0007  080A               	movf	10,w
   235  0008  00F1               	movwf	??_LVD_Isr+1
   236  0009  2823               	ljmp	_LVD_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _LVD_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LVD_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LVD_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _LVD_Isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _LVD_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jan 22 16:51:15 2021

                    l465 001C                      l866 001A                      _RA2 002A  
                   _PIE2 008D          __end_of_LVD_Isr 002D                     _main 000D  
                   btemp 007E                     start 000A                    ?_main 0070  
                  _LVDIF 0068                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 0023  
                 ??_main 0072                ??_LVD_Isr 0070                   _INTCON 000B  
                 _LVDCON 0091                   _OSCCON 008F                   saved_w 007E  
__end_of__initialization 000B           __pcstackCOMMON 0070               __pmaintext 000D  
             __pintentry 0004                  _LVD_RES 048F                  _LVD_Isr 0023  
                __ptext0 0000                  __ptext1 0023     end_of_initialization 000B  
    start_initialization 000B                ___latbits 0000                 ?_LVD_Isr 0070  
      interrupt_function 0004         __size_of_LVD_Isr 000A            __size_of_main 0016  
               intlevel1 0000               _OPTION_REG 0081  
