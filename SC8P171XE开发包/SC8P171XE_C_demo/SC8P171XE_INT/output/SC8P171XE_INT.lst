

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 05 14:12:18 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1712E
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  000B                     _INTCON	set	11
    51  0006                     _PORTB	set	6
    52  0058                     _RBIF	set	88
    53  005B                     _RBIE	set	91
    54  0028                     _RA0	set	40
    55  0096                     _IOCB	set	150
    56  0095                     _WPUB	set	149
    57  008F                     _OSCCON	set	143
    58  0086                     _TRISB	set	134
    59  0085                     _TRISA	set	133
    60  0081                     _OPTION_REG	set	129
    61                           
    62                           	psect	cinit
    63  000B                     start_initialization:	
    64                           ; #config settings
    65                           
    66  000B                     __initialization:	
    67  000B                     end_of_initialization:	
    68                           ;End of C runtime variable initialization code
    69                           
    70  000B                     __end_of__initialization:	
    71  000B  0183               	clrf	3
    72  000C  280D               	ljmp	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMMON
    75  0070                     __pcstackCOMMON:	
    76  0070                     ?_main:	
    77  0070                     ?_PB_Isr:	
    78                           ; 1 bytes @ 0x0
    79                           
    80  0070                     ??_PB_Isr:	
    81                           ; 1 bytes @ 0x0
    82                           
    83                           
    84                           ; 1 bytes @ 0x0
    85  0070                     	ds	2
    86  0072                     ??_main:	
    87                           
    88                           	psect	maintext
    89  000D                     __pmaintext:	
    90                           ; 1 bytes @ 0x2
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 14 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8P171XE开发包\SC8P171XE_C_demo\SC8P171XE_INT\PB_Interrupt_D
      +emo.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, status,2
   105 ;; Tracked objects:
   106 ;;		On entry : B00/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMMON   BANK0   BANK1
   110 ;;      Params:         0       0       0
   111 ;;      Locals:         0       0       0
   112 ;;      Temps:          0       0       0
   113 ;;      Totals:         0       0       0
   114 ;;Total ram usage:        0 bytes
   115 ;; Hardware stack levels required when called:    1
   116 ;; This function calls:
   117 ;;		Nothing
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           
   124                           ;psect for function _main
   125  000D                     _main:	
   126                           
   127                           ;incstack = 0
   128                           ; Regs used in _main: [wreg+status,2]
   129  000D  0000               	nop	;# 
   130  000E  0064               	clrwdt	;# 
   131                           
   132                           ;PB_Interrupt_Demo.c: 19: OSCCON = 0x70;
   133  000F  3070               	movlw	112
   134  0010  1683               	bsf	3,5	;RP0=1, select bank1
   135  0011  008F               	movwf	15	;volatile
   136                           
   137                           ;PB_Interrupt_Demo.c: 20: OPTION_REG = 0;
   138  0012  0181               	clrf	1	;volatile
   139                           
   140                           ;PB_Interrupt_Demo.c: 21: TRISA = 0;
   141  0013  0185               	clrf	5	;volatile
   142                           
   143                           ;PB_Interrupt_Demo.c: 23: WPUB = 0B00001000;
   144  0014  3008               	movlw	8
   145  0015  0095               	movwf	21	;volatile
   146                           
   147                           ;PB_Interrupt_Demo.c: 24: TRISB = 0B00001000;
   148  0016  0086               	movwf	6	;volatile
   149                           
   150                           ;PB_Interrupt_Demo.c: 25: IOCB = 0B00001000;
   151  0017  0096               	movwf	22	;volatile
   152                           
   153                           ;PB_Interrupt_Demo.c: 26: RBIE = 1;
   154  0018  158B               	bsf	11,3	;volatile
   155                           
   156                           ;PB_Interrupt_Demo.c: 27: INTCON = 0xC8;
   157  0019  30C8               	movlw	200
   158  001A  008B               	movwf	11	;volatile
   159                           
   160                           ;PB_Interrupt_Demo.c: 28: PORTB;
   161  001B  1283               	bcf	3,5	;RP0=0, select bank0
   162  001C  0806               	movf	6,w	;volatile
   163  001D                     l465:	
   164                           ;PB_Interrupt_Demo.c: 31: while(1)
   165                           
   166  001D  0064               	clrwdt	;# 
   167  001E  281D               	goto	l465
   168  001F                     __end_of_main:	
   169                           
   170                           	psect	text1
   171  001F                     __ptext1:	
   172 ;; *************** function _PB_Isr *****************
   173 ;; Defined at:
   174 ;;		line 45 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8P171XE开发包\SC8P171XE_C_demo\SC8P171XE_INT\PB_Interrupt_D
      +emo.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;		None
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMMON   BANK0   BANK1
   188 ;;      Params:         0       0       0
   189 ;;      Locals:         0       0       0
   190 ;;      Temps:          2       0       0
   191 ;;      Totals:         2       0       0
   192 ;;Total ram usage:        2 bytes
   193 ;; Hardware stack levels used:    1
   194 ;; This function calls:
   195 ;;		Nothing
   196 ;; This function is called by:
   197 ;;		Interrupt level 1
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           
   202                           ;psect for function _PB_Isr
   203  001F                     _PB_Isr:	
   204                           
   205                           ;PB_Interrupt_Demo.c: 47: if(RBIF)
   206  001F  1C0B               	btfss	11,0	;volatile
   207  0020  2826               	goto	i1l474
   208                           
   209                           ;PB_Interrupt_Demo.c: 48: {
   210                           ;PB_Interrupt_Demo.c: 49: PORTB;
   211  0021  1283               	bcf	3,5	;RP0=0, select bank0
   212  0022  0806               	movf	6,w	;volatile
   213                           
   214                           ;PB_Interrupt_Demo.c: 50: RBIF = 0;
   215  0023  100B               	bcf	11,0	;volatile
   216                           
   217                           ;PB_Interrupt_Demo.c: 51: RA0 = !RA0;
   218  0024  3001               	movlw	1
   219  0025  0685               	xorwf	5,f
   220  0026                     i1l474:	
   221  0026  0871               	movf	??_PB_Isr+1,w
   222  0027  008A               	movwf	10
   223  0028  0E70               	swapf	??_PB_Isr^(0+-128),w
   224  0029  0083               	movwf	3
   225  002A  0EFE               	swapf	126,f
   226  002B  0E7E               	swapf	126,w
   227  002C  0009               	retfie
   228  002D                     __end_of_PB_Isr:	
   229  007E                     btemp	set	126	;btemp
   230  007E                     wtemp0	set	126
   231                           
   232                           	psect	intentry
   233  0004                     __pintentry:	
   234                           ;incstack = 0
   235                           ; Regs used in _PB_Isr: [wreg]
   236                           
   237  0004                     interrupt_function:	
   238  007E                     saved_w	set	btemp
   239  0004  00FE               	movwf	btemp
   240  0005  0E03               	swapf	3,w
   241  0006  00F0               	movwf	??_PB_Isr
   242  0007  080A               	movf	10,w
   243  0008  00F1               	movwf	??_PB_Isr+1
   244  0009  281F               	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _PB_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
ABS                  0      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 05 14:12:18 2021

                    l465 001D                      _RA0 0028                     _IOCB 0096  
                   _RBIE 005B                     _RBIF 0058                     _WPUB 0095  
                   _main 000D                     btemp 007E                     start 000A  
                  ?_main 0070                    i1l474 0026                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000B  
           __end_of_main 001F                   ??_main 0072                   _INTCON 000B  
                 _OSCCON 008F                   _PB_Isr 001F                   saved_w 007E  
__end_of__initialization 000B           __pcstackCOMMON 0070                  ?_PB_Isr 0070  
             __pmaintext 000D               __pintentry 0004          __size_of_PB_Isr 000E  
                __ptext0 0000                  __ptext1 001F     end_of_initialization 000B  
         __end_of_PB_Isr 002D      start_initialization 000B                 ??_PB_Isr 0070  
              ___latbits 0000        interrupt_function 0004            __size_of_main 0012  
               intlevel1 0000               _OPTION_REG 0081  
