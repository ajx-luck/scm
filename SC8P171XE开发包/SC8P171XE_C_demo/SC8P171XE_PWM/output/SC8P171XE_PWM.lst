

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jan 13 11:28:58 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1712E
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	pa_nodes0,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.45
    13                           ; Generated 16/11/2017 GMT
    14                           ; 
    15                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     
    47                           	psect	idataCOMMON
    48  0000                     __pidataCOMMON:	
    49  001C                     _PWMD23H	set	28
    50  001B                     _PWMCON	set	27
    51  001A                     _PWMTH	set	26
    52  0019                     _PWMTL	set	25
    53  0018                     _PWMD01H	set	24
    54  0017                     _PWMD1L	set	23
    55  0016                     _PWMD0L	set	22
    56  0010                     _PWMD4L	set	16
    57  000F                     _PWMD3L	set	15
    58  000E                     _PWMD2L	set	14
    59  0006                     _PORTB	set	6
    60  0005                     _PORTA	set	5
    61  0062                     _PWMIF	set	98
    62  008F                     _OSCCON	set	143
    63  008E                     _PWMCON1	set	142
    64  0085                     _TRISA	set	133
    65                           
    66                           	psect	cinit
    67  07FA                     start_initialization:	
    68                           ; #config settings
    69                           
    70  07FA                     __initialization:	
    71                           
    72                           ;initializer for _xx
    73  07FA  3023               	movlw	35
    74  07FB  00F3               	movwf	__pdataCOMMON& (0+127)
    75  07FC  30FF               	movlw	255
    76  07FD  00F4               	movwf	(__pdataCOMMON+1)& (0+127)
    77  07FE                     end_of_initialization:	
    78                           ;End of C runtime variable initialization code
    79                           
    80  07FE                     __end_of__initialization:	
    81  07FE  0183               	clrf	3
    82  07FF  2FB8               	ljmp	_main	;jump to C main() function
    83                           
    84                           	psect	dataCOMMON
    85  0073                     __pdataCOMMON:	
    86  0073                     _xx:	
    87  0073                     	ds	2
    88                           
    89                           	psect	cstackCOMMON
    90  0070                     __pcstackCOMMON:	
    91  0070                     ?_main:	
    92  0070                     ??_main:	
    93                           ; 1 bytes @ 0x0
    94                           
    95  0070                     main@delaycnt:	
    96                           ; 1 bytes @ 0x0
    97                           
    98                           
    99                           ; 2 bytes @ 0x0
   100  0070                     	ds	2
   101  0072                     main@pwmbuf:	
   102                           
   103                           ; 1 bytes @ 0x2
   104  0072                     	ds	1
   105                           
   106                           	psect	maintext
   107  07B8                     __pmaintext:	
   108 ;;
   109 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   110 ;;
   111 ;; *************** function _main *****************
   112 ;; Defined at:
   113 ;;		line 20 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8P171XE开发包\SC8P171XE_C_demo\SC8P171XE_PWM\SC8P171XE_PWM.
      +c"
   114 ;; Parameters:    Size  Location     Type
   115 ;;		None
   116 ;; Auto vars:     Size  Location     Type
   117 ;;  delaycnt        2    0[COMMON] unsigned int 
   118 ;;  pwmbuf          1    2[COMMON] unsigned char 
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2, status,0
   123 ;; Tracked objects:
   124 ;;		On entry : B00/0
   125 ;;		On exit  : 100/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMMON   BANK0   BANK1
   128 ;;      Params:         0       0       0
   129 ;;      Locals:         3       0       0
   130 ;;      Temps:          0       0       0
   131 ;;      Totals:         3       0       0
   132 ;;Total ram usage:        3 bytes
   133 ;; This function calls:
   134 ;;		Nothing
   135 ;; This function is called by:
   136 ;;		Startup code after reset
   137 ;; This function uses a non-reentrant model
   138 ;;
   139                           
   140                           
   141                           ;psect for function _main
   142  07B8                     _main:	
   143                           
   144                           ;SC8P171XE_PWM.c: 22: unsigned int delaycnt = 0;
   145                           
   146                           ;incstack = 0
   147                           ; Regs used in _main: [wreg+status,2+status,0]
   148  07B8  01F0               	clrf	main@delaycnt
   149  07B9  01F1               	clrf	main@delaycnt+1
   150                           
   151                           ;SC8P171XE_PWM.c: 23: unsigned char pwmbuf = 0;
   152  07BA  01F2               	clrf	main@pwmbuf
   153  07BB  0000               	nop	;# 
   154  07BC  0064               	clrwdt	;# 
   155                           
   156                           ;SC8P171XE_PWM.c: 27: OSCCON = 0X70;
   157  07BD  3070               	movlw	112
   158  07BE  1683               	bsf	3,5	;RP0=1, select bank1
   159  07BF  008F               	movwf	15	;volatile
   160                           
   161                           ;SC8P171XE_PWM.c: 29: TRISA = 0B00111110;
   162  07C0  303E               	movlw	62
   163  07C1  0085               	movwf	5	;volatile
   164                           
   165                           ;SC8P171XE_PWM.c: 32: PWMCON = 0B00000100;
   166  07C2  3004               	movlw	4
   167  07C3  1283               	bcf	3,5	;RP0=0, select bank0
   168  07C4  009B               	movwf	27	;volatile
   169                           
   170                           ;SC8P171XE_PWM.c: 33: PWMTL = 0XFF;
   171  07C5  30FF               	movlw	255
   172  07C6  0099               	movwf	25	;volatile
   173                           
   174                           ;SC8P171XE_PWM.c: 34: PWMTH = 0B00000001;
   175  07C7  3001               	movlw	1
   176  07C8  009A               	movwf	26	;volatile
   177                           
   178                           ;SC8P171XE_PWM.c: 37: PWMD01H = 0X00;
   179  07C9  0198               	clrf	24	;volatile
   180                           
   181                           ;SC8P171XE_PWM.c: 38: PWMD0L = 0X1F;
   182  07CA  301F               	movlw	31
   183  07CB  0096               	movwf	22	;volatile
   184                           
   185                           ;SC8P171XE_PWM.c: 39: PWMD1L = 0X7F;
   186  07CC  307F               	movlw	127
   187  07CD  0097               	movwf	23	;volatile
   188                           
   189                           ;SC8P171XE_PWM.c: 41: PWMD23H = 0X00;
   190  07CE  019C               	clrf	28	;volatile
   191                           
   192                           ;SC8P171XE_PWM.c: 42: PWMD2L = 0X3F;
   193  07CF  303F               	movlw	63
   194  07D0  008E               	movwf	14	;volatile
   195                           
   196                           ;SC8P171XE_PWM.c: 43: PWMD3L = 0XFF;
   197  07D1  30FF               	movlw	255
   198  07D2  008F               	movwf	15	;volatile
   199                           
   200                           ;SC8P171XE_PWM.c: 46: PWMD4L = 0X3F;
   201  07D3  303F               	movlw	63
   202  07D4  0090               	movwf	16	;volatile
   203                           
   204                           ;SC8P171XE_PWM.c: 49: PWMIF = 0;
   205  07D5  110C               	bcf	12,2	;volatile
   206                           
   207                           ;SC8P171XE_PWM.c: 50: PWMCON = 0B00000111;
   208  07D6  3007               	movlw	7
   209  07D7  009B               	movwf	27	;volatile
   210                           
   211                           ;SC8P171XE_PWM.c: 51: PWMCON1 = 0B00100111;
   212  07D8  3027               	movlw	39
   213  07D9  1683               	bsf	3,5	;RP0=1, select bank1
   214  07DA  008E               	movwf	14	;volatile
   215                           
   216                           ;SC8P171XE_PWM.c: 52: TRISA = 0B00000000;
   217  07DB  0185               	clrf	5	;volatile
   218  07DC                     l467:	
   219                           ;SC8P171XE_PWM.c: 54: while(1)
   220                           
   221  07DC  0064               	clrwdt	;# 
   222                           
   223                           ;SC8P171XE_PWM.c: 57: if(++delaycnt >5000)
   224  07DD  0AF0               	incf	main@delaycnt,f
   225  07DE  1903               	skipnz
   226  07DF  0AF1               	incf	main@delaycnt+1,f
   227  07E0  3013               	movlw	19
   228  07E1  0271               	subwf	main@delaycnt+1,w
   229  07E2  3089               	movlw	137
   230  07E3  1903               	skipnz
   231  07E4  0270               	subwf	main@delaycnt,w
   232  07E5  1C03               	skipc
   233  07E6  2FF0               	goto	l887
   234                           
   235                           ;SC8P171XE_PWM.c: 58: {
   236                           ;SC8P171XE_PWM.c: 59: delaycnt = 0;
   237  07E7  01F0               	clrf	main@delaycnt
   238  07E8  01F1               	clrf	main@delaycnt+1
   239                           
   240                           ;SC8P171XE_PWM.c: 61: pwmbuf++;
   241  07E9  0AF2               	incf	main@pwmbuf,f
   242                           
   243                           ;SC8P171XE_PWM.c: 62: PWMD0L = pwmbuf;
   244  07EA  0872               	movf	main@pwmbuf,w
   245  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   246  07EC  0096               	movwf	22	;volatile
   247                           
   248                           ;SC8P171XE_PWM.c: 63: PWMD23H = 0X00;
   249  07ED  019C               	clrf	28	;volatile
   250                           
   251                           ;SC8P171XE_PWM.c: 64: PWMD2L = pwmbuf;
   252  07EE  0872               	movf	main@pwmbuf,w
   253  07EF  008E               	movwf	14	;volatile
   254  07F0                     l887:	
   255                           
   256                           ;SC8P171XE_PWM.c: 66: }
   257                           ;SC8P171XE_PWM.c: 67: xx.bytel = 0x23;
   258  07F0  3023               	movlw	35
   259  07F1  00F3               	movwf	_xx
   260                           
   261                           ;SC8P171XE_PWM.c: 68: xx.byteh = 0x03;
   262  07F2  3003               	movlw	3
   263  07F3  00F4               	movwf	_xx+1
   264                           
   265                           ;SC8P171XE_PWM.c: 69: PORTB = xx.bytel;
   266  07F4  0873               	movf	_xx,w
   267  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   268  07F6  0086               	movwf	6	;volatile
   269                           
   270                           ;SC8P171XE_PWM.c: 70: PORTA = xx.byteh;
   271  07F7  0874               	movf	_xx+1,w
   272  07F8  0085               	movwf	5	;volatile
   273  07F9  2FDC               	goto	l467
   274  07FA                     __end_of_main:	
   275  007E                     btemp	set	126	;btemp
   276  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       5
    BANK0            80      0       0
    BANK1            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      45
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK1               50      0       0       6        0.0%
BITBANK1            50      0       0       5        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       4        0.0%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       5       1       35.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       5       8        0.0%
ABS                  0      0       5       7        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jan 13 11:28:58 2021

                     _xx 0073                      l467 07DC                      l887 07F0  
                   _main 07B8                     btemp 007E                     start 0000  
           main@delaycnt 0070                    ?_main 0070                    _PORTA 0005  
                  _PORTB 0006                    _PWMIF 0062                    _TRISA 0085  
                  _PWMTH 001A                    _PWMTL 0019                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07FA  
                 ??_main 0070                   _OSCCON 008F                   _PWMD0L 0016  
                 _PWMD1L 0017                   _PWMD2L 000E                   _PWMD3L 000F  
                 _PWMD4L 0010                   _PWMCON 001B             __pdataCOMMON 0073  
__end_of__initialization 07FE           __pcstackCOMMON 0070               __pmaintext 07B8  
                _PWMD01H 0018                  _PWMD23H 001C                  _PWMCON1 008E  
   end_of_initialization 07FE               main@pwmbuf 0072            __pidataCOMMON 0000  
    start_initialization 07FA                ___latbits 0000            __size_of_main 0042  
