---- C:\mcuproject\scm\台灯\main.c ----------------------------------------------------------------------
1:                #include <sc.h>
2:                #include "pwm.h"
3:                #include "Touch_Kscan_Library.h"
4:                
5:                volatile unsigned char MainTime;
6:                volatile unsigned char pwmTime;
7:                volatile unsigned char irStep = 0; //0为未遮挡 1遮挡  2消抖
8:                unsigned char	revCount = 0;//收到的波形计数
9:                unsigned char	revZeroCount = 0;//未收到的波形计数
10:               unsigned char	checkCount = 0;	//检测次数
11:               unsigned char	pwm0Step = 1;	//	pwm0档位
12:               unsigned char	pwm1Step = 1;	//	pwm1档位
13:               unsigned int 	timeCount = 0;
14:               unsigned int 	keyNub = 0;
15:               unsigned int 	keyCount0 = 0;
16:               unsigned int 	keyCount1 = 0;
17:               
18:               volatile bit	sendFlag;	//发射标记
19:               volatile bit	B_MainLoop;
20:               volatile bit	sendStartFlag;	//发射开始标记
21:               volatile bit	doublePressFlag;	//同时按下标记
22:               volatile bit	ONFlag;	//开关标记，1为打开
23:               volatile bit	pwmFlag;	//PWM开关标记，1为打开
24:               volatile bit	keyLockFlag;	//触摸长按锁定
25:               volatile bit	doubleTouchFlag;	//同时触摸标记位
26:               //系统初始化
27:               void Init_System()
  02BA    0000    NOP
  02BB    0064    CLRWDT
28:               {
29:               	asm("nop");
30:               	asm("clrwdt");
31:               	INTCON = 0;				//禁止中断
  02BC    018B    CLR	0xB
32:               	OSCCON = 0X71;			//配置振荡为8M
  02BD    3071    LDIA	0x71
  02BE    1683    SETB	0x3,5
  02BF    1303    CLRB	0x3,6
  02C0    0088    LD	0x8,A
33:               	OPTION_REG = 0;
  02C1    0181    CLR	0x1
34:               	
35:               	//延时等待电源电压稳定
36:               	//DelayXms(200);
37:               	WPUB = 0x00;
  02C2    1283    CLRB	0x3,5
  02C3    0188    CLR	0x8
38:               	WPDB = 0x00;
  02C4    1683    SETB	0x3,5
  02C5    0187    CLR	0x7
39:               	WPUA = 0x00;
  02C6    1283    CLRB	0x3,5
  02C7    0187    CLR	0x7
40:               	//PIE2 = 0;
41:               	PIE1 = 2;
  02C8    3002    LDIA	0x2
  02C9    008D    LD	0xD,A
42:               	PR2 = 250;				//8M下将TMR2设置为125us中断
  02CA    30FA    LDIA	0xFA
  02CB    1683    SETB	0x3,5
  02CC    0091    LD	0x11,A
43:               	T2CON = 4;				//使能定时器2
  02CD    3004    LDIA	0x4
  02CE    1283    CLRB	0x3,5
  02CF    0092    LD	0x12,A
44:               	TRISA = 0x00;
  02D0    1683    SETB	0x3,5
  02D1    0185    CLR	0x5
45:               	TRISB = 0x07;			//PB2为红外接收口
  02D2    3007    LDIA	0x7
  02D3    0086    LD	0x6,A
46:               	PORTB = 0x00;
  02D4    1283    CLRB	0x3,5
  02D5    0186    CLR	0x6
47:               	PORTA = 0x00;
  02D6    0185    CLR	0x5
48:               	INTCON = 0XC0;			//使能中断
  02D7    30C0    LDIA	0xC0
  02D8    008B    LD	0xB,A
  02D9    0008    RET
49:               }
50:               
51:               
52:               /**********************************************************
53:               刷新特殊功能寄存器
54:               **********************************************************/
55:               void Refurbish_Sfr()
56:               {
57:               /*	//均为数字口
58:               	ANSEL = 0;
59:               	ANSELH = 0;
60:               	
61:               	TRISA = 0;
62:               	TRISB = 0;
63:               	TRISC = 0;
64:               	TRISE = 9;
65:               	
66:               	LEDCON0 = 0;
67:               	LEDCON1 = 0;
68:               	SEGEN0 = 0;
69:               	SEGEN1 = 0;
70:               	SEGEN2 = 0;
71:               	COMEN = 0;
72:               	
73:               	SSPCON = 0;
74:               //	SSPCON2 = 0;
75:               	CCP1CON = 0;
76:               	CCP2CON = 0;
77:               //	RCSTA = 0;
78:               //	RCREG = 0;
79:               //	TXSTA = 0;
80:               	IOCB = 0;
81:               	PSTRCON = 0;
82:               	CM1CON0 = 0;
83:               	CM2CON0 = 0;
84:               	CM2CON1 = 0;
85:               	SRCON = 0;
86:               //	BAUDCTL = 0;
87:               //	PWMCON0 = 0;
88:               //	PWMCON1 = 0;
89:               	T1CON = 0;
90:               	EECON1 = 0;
91:               	PIE2 = 0;
92:               */	
93:               	OPTION_REG = 0;
94:               	
95:               	
96:               	//刷新中断相关控制寄存器
97:               	PIE1 = 2;
98:               	PR2 = 250;
99:               	INTCON = 0XC0;
100:              	if(4 != T2CON)
101:              		T2CON = 4;
102:              }
103:              //按键1处理逻辑
104:              void procKey1()
105:              {
106:              	if(ONFlag == 0)
  02F8    1FF0    SNZB	0x70,7
  02F9    0008    RET
107:              		return;
108:              	pwmFlag = 1;
  02FA    1770    SETB	0x70,6
109:              	if(++pwm0Step > 5)
  02FB    3006    LDIA	0x6
  02FC    0ADC    INCR	0x5C
  02FD    025C    SUBA	0x5C
  02FE    1C03    SNZB	0x3,0
  02FF    2B02    JP	0x302
110:              		pwm0Step = 1;
  0300    01DC    CLR	0x5C
  0301    0ADC    INCR	0x5C
111:              	switch(pwm0Step)
112:              	{
113:              		case 1:
114:              		mode1();
  0311    2C02    JP	0x402
115:              		break;
116:              		case 2:
117:              		mode2();
  0312    2BFE    JP	0x3FE
118:              		break;
119:              		case 3:
120:              		mode3();
  0313    2BFA    JP	0x3FA
121:              		break;
122:              		case 4:
123:              		mode4();
  0314    2BF6    JP	0x3F6
124:              		break;
125:              		case 5:
126:              		mode5();
  0315    2BF2    JP	0x3F2
127:              		break;
  0302    085C    LD	A,0x5C
  0303    3EFF    ADDIA	0xFF
  0304    1C03    SNZB	0x3,0
  0305    0008    RET
  0306    0084    LD	0x4,A
  0307    3005    LDIA	0x5
  0308    0204    SUBA	0x4
  0309    1803    SZB	0x3,0
  030A    0008    RET
  030B    3003    LDIA	0x3
  030C    008A    LD	0xA,A
  030D    30DD    LDIA	0xDD
  030E    0704    ADDA	0x4
  030F    0082    LD	0x2,A
  0310    0008    RET
128:              
129:              	}
130:              }
131:              
132:              //按键2处理逻辑
133:              void procKey2()
134:              {
135:              	if(ONFlag == 0)
  02DA    1FF0    SNZB	0x70,7
  02DB    0008    RET
136:              		return;
137:              	pwmFlag = 1;
  02DC    1770    SETB	0x70,6
138:              	if(++pwm1Step > 5)
  02DD    3006    LDIA	0x6
  02DE    0ADB    INCR	0x5B
  02DF    025B    SUBA	0x5B
  02E0    1C03    SNZB	0x3,0
  02E1    2AE4    JP	0x2E4
139:              		pwm1Step = 1;
  02E2    01DB    CLR	0x5B
  02E3    0ADB    INCR	0x5B
140:              	switch(pwm1Step)
141:              	{
142:              		case 1:
143:              		modea();
  02F3    2BEE    JP	0x3EE
144:              		break;
145:              		case 2:
146:              		modeb();
  02F4    2BEA    JP	0x3EA
147:              		break;
148:              		case 3:
149:              		modec();
  02F5    2BCD    JP	0x3CD
150:              		break;
151:              		case 4:
152:              		moded();
  02F6    2BE6    JP	0x3E6
153:              		break;
154:              		case 5:
155:              		modee();
  02F7    2BE2    JP	0x3E2
156:              		break;
  02E4    085B    LD	A,0x5B
  02E5    3EFF    ADDIA	0xFF
  02E6    1C03    SNZB	0x3,0
  02E7    0008    RET
  02E8    0084    LD	0x4,A
  02E9    3005    LDIA	0x5
  02EA    0204    SUBA	0x4
  02EB    1803    SZB	0x3,0
  02EC    0008    RET
  02ED    3003    LDIA	0x3
  02EE    008A    LD	0xA,A
  02EF    30D8    LDIA	0xD8
  02F0    0704    ADDA	0x4
  02F1    0082    LD	0x2,A
  02F2    0008    RET
157:              	}
158:              }
159:              
160:              
161:              void startPWM()
162:              {	
163:              	--pwm0Step;
  03D3    03DC    DECR	0x5C
164:              	--pwm1Step;
  03D4    03DB    DECR	0x5B
165:              	initPWM();
  03D5    23AC    CALL	0x3AC
166:              	procKey1();
  03D6    22F8    CALL	0x2F8
167:              	procKey2();
  03D7    2ADA    JP	0x2DA
168:              }
169:              
170:              
171:              
172:              /***********************************************************
173:              键处理函数
174:              ***********************************************************/
175:              void KeyServer()
176:              {
177:              	static unsigned int KeyOldFlag = 0;
178:              	unsigned int i = (unsigned int)((KeyFlag[1]<<8) | KeyFlag[0]);
  0187    0843    LD	A,0x43
  0188    00F5    LD	0x75,A
  0189    0842    LD	A,0x42
  018A    00F4    LD	0x74,A
179:              	if(i)
  018B    0475    ORA	0x75
  018C    1903    SZB	0x3,2
  018D    29B1    JP	0x1B1
180:              	{
181:              		keyNub = i;
  018E    0875    LD	A,0x75
  018F    00BF    LD	0x3F,A
  0190    0874    LD	A,0x74
  0191    00BE    LD	0x3E,A
182:              		if(keyNub & 0x01){
  0192    1C3E    SNZB	0x3E,0
  0193    29A1    JP	0x1A1
183:              			if(++keyCount0 > 200)
  0194    0ABC    INCR	0x3C
  0195    1903    SZB	0x3,2
  0196    0ABD    INCR	0x3D
  0197    3000    LDIA	0x0
  0198    023D    SUBA	0x3D
  0199    30C9    LDIA	0xC9
  019A    1903    SZB	0x3,2
  019B    023C    SUBA	0x3C
  019C    1C03    SNZB	0x3,0
  019D    29A1    JP	0x1A1
184:              				keyCount0 = 200;
  019E    30C8    LDIA	0xC8
  019F    00BC    LD	0x3C,A
  01A0    01BD    CLR	0x3D
185:              		}
186:              		if(keyNub & 0x02){
  01A1    1CBE    SNZB	0x3E,1
  01A2    0008    RET
187:              			if(++keyCount1 > 200)
  01A3    0ABA    INCR	0x3A
  01A4    1903    SZB	0x3,2
  01A5    0ABB    INCR	0x3B
  01A6    3000    LDIA	0x0
  01A7    023B    SUBA	0x3B
  01A8    30C9    LDIA	0xC9
  01A9    1903    SZB	0x3,2
  01AA    023A    SUBA	0x3A
  01AB    1C03    SNZB	0x3,0
  01AC    0008    RET
188:              				keyCount1 = 200;
  01AD    30C8    LDIA	0xC8
  01AE    00BA    LD	0x3A,A
  01AF    01BB    CLR	0x3B
  01B0    0008    RET
189:              		}
190:              	}
191:              	else
192:              	{
193:              		if(keyCount0 > 3 && keyCount1 > 3)
  01B1    3000    LDIA	0x0
  01B2    023D    SUBA	0x3D
  01B3    3004    LDIA	0x4
  01B4    1903    SZB	0x3,2
  01B5    023C    SUBA	0x3C
  01B6    3000    LDIA	0x0
  01B7    1C03    SNZB	0x3,0
  01B8    29C3    JP	0x1C3
  01B9    023B    SUBA	0x3B
  01BA    3004    LDIA	0x4
  01BB    1903    SZB	0x3,2
  01BC    023A    SUBA	0x3A
  01BD    1C03    SNZB	0x3,0
  01BE    29C2    JP	0x1C2
194:              		{
195:              			//同时按下并松开后
196:              			ONFlag = !ONFlag;
  01BF    3080    LDIA	0x80
  01C0    06F0    XORR	0x70
197:              		}
  01C1    29D9    JP	0x1D9
198:              		else if(keyCount0 > 3 || keyCount1 > 3)
  01C2    3000    LDIA	0x0
  01C3    023D    SUBA	0x3D
  01C4    3004    LDIA	0x4
  01C5    1903    SZB	0x3,2
  01C6    023C    SUBA	0x3C
  01C7    1803    SZB	0x3,0
  01C8    29D0    JP	0x1D0
  01C9    3000    LDIA	0x0
  01CA    023B    SUBA	0x3B
  01CB    3004    LDIA	0x4
  01CC    1903    SZB	0x3,2
  01CD    023A    SUBA	0x3A
  01CE    1C03    SNZB	0x3,0
  01CF    29D9    JP	0x1D9
199:              		{
200:              			
201:              			if(keyNub & 0x01)
  01D0    1C3E    SNZB	0x3E,0
  01D1    29D5    JP	0x1D5
202:              			{
203:              				ONFlag = 1;
  01D2    17F0    SETB	0x70,7
204:              				procKey1();
  01D3    22F8    CALL	0x2F8
205:              			}
  01D4    29D9    JP	0x1D9
206:              			else if(keyNub &0x02)
  01D5    1CBE    SNZB	0x3E,1
  01D6    29D9    JP	0x1D9
207:              			{
208:              				ONFlag = 1;
  01D7    17F0    SETB	0x70,7
209:              				procKey2();
  01D8    22DA    CALL	0x2DA
210:              			}
211:              			
212:              		}
213:              		keyCount0 = 0;
  01D9    01BC    CLR	0x3C
  01DA    01BD    CLR	0x3D
214:              		keyCount1 = 0;
  01DB    01BA    CLR	0x3A
  01DC    01BB    CLR	0x3B
215:              		keyNub = 0;
  01DD    01BE    CLR	0x3E
  01DE    01BF    CLR	0x3F
  01DF    0008    RET
216:              	}
217:              }
218:              //检测红外遮挡
219:              void checkIRKey()
220:              {
221:              	if(getbit(PORTB, 2))
  01E0    0806    LD	A,0x6
  01E1    00F4    LD	0x74,A
  01E2    1003    CLRB	0x3,0
  01E3    0CF4    RRCR	0x74
  01E4    1003    CLRB	0x3,0
  01E5    0CF4    RRCR	0x74
  01E6    1874    SZB	0x74,0
222:              	{
223:              		revCount++;		//检测到遮挡了
  01E7    0ACB    INCR	0x4B
224:              	}
225:              	
226:              	if(checkCount > 10 && irStep)
  01E8    300B    LDIA	0xB
  01E9    0249    SUBA	0x49
  01EA    1C03    SNZB	0x3,0
  01EB    29F1    JP	0x1F1
  01EC    084C    LD	A,0x4C
  01ED    1903    SZB	0x3,2
  01EE    29F1    JP	0x1F1
227:              	{
228:              		sendFlag = 0;
  01EF    1078    CLRB	0x78,0
229:              	}
  01F0    29F2    JP	0x1F2
230:              	else
231:              	{
232:              		sendFlag = 1;	//未检测到遮挡
  01F1    1478    SETB	0x78,0
233:              	}
234:              	
235:              	if(++checkCount >= 20)
  01F2    3014    LDIA	0x14
  01F3    0AC9    INCR	0x49
  01F4    0249    SUBA	0x49
  01F5    1C03    SNZB	0x3,0
  01F6    0008    RET
236:              	{
237:              		if(revCount > 2)
  01F7    3003    LDIA	0x3
  01F8    024B    SUBA	0x4B
  01F9    1C03    SNZB	0x3,0
  01FA    2A07    JP	0x207
238:              		{
239:              			if(irStep == 0)
  01FB    084C    LD	A,0x4C
  01FC    1D03    SNZB	0x3,2
  01FD    2A05    JP	0x205
240:              			{
241:              				irStep = 1;		//检测到遮挡了
  01FE    3001    LDIA	0x1
  01FF    00CC    LD	0x4C,A
242:              				if(ONFlag == 1)
  0200    1FF0    SNZB	0x70,7
  0201    2A04    JP	0x204
243:              				{
244:              					ONFlag = 0;			
  0202    13F0    CLRB	0x70,7
245:              				}
  0203    2A05    JP	0x205
246:              				else
247:              				{
248:              					ONFlag = 1;
  0204    17F0    SETB	0x70,7
249:              				}
250:              			}
251:              			revZeroCount = 0;		//重置
  0205    01CA    CLR	0x4A
252:              		}
  0206    2A0F    JP	0x20F
253:              		else
254:              		{
255:              			if(++revZeroCount > 1)
  0207    3002    LDIA	0x2
  0208    0ACA    INCR	0x4A
  0209    024A    SUBA	0x4A
  020A    1C03    SNZB	0x3,0
  020B    2A0F    JP	0x20F
256:              			{
257:              				revZeroCount = 1;
  020C    01CA    CLR	0x4A
  020D    0ACA    INCR	0x4A
258:              				irStep = 0;			//移开了
  020E    01CC    CLR	0x4C
259:              			}
260:              		}
261:              
262:              		
263:              		sendFlag = 1;		//重置检测条件
  020F    1478    SETB	0x78,0
264:              		checkCount = 0;
  0210    01C9    CLR	0x49
265:              		revCount = 0;
  0211    01CB    CLR	0x4B
  0212    0008    RET
266:              	}
267:              		
268:              }
269:              
270:              
271:              /***********************************************************
272:              中断服务函数
273:              ***********************************************************/
274:              void interrupt Isr_Timer()
275:              {
276:              	if(TMR2IF)				//若只使能了一个中断源,可以略去判断
  0297    1283    CLRB	0x3,5
  0298    1303    CLRB	0x3,6
  0299    1C8C    SNZB	0xC,1
  029A    2AB2    JP	0x2B2
277:              	{
278:              		TMR2IF = 0;
  029B    108C    CLRB	0xC,1
279:              		
280:              		if(++MainTime >= 16)
  029C    3010    LDIA	0x10
  029D    0ACD    INCR	0x4D
  029E    024D    SUBA	0x4D
  029F    1C03    SNZB	0x3,0
  02A0    2AA3    JP	0x2A3
281:              		{
282:              			MainTime = 0;
  02A1    01CD    CLR	0x4D
283:              			B_MainLoop = 1;
  02A2    1571    SETB	0x71,2
284:              		}
285:              		//模拟pwm输出
286:              		if(pwmTime < 12 && sendFlag)
  02A3    300C    LDIA	0xC
  02A4    0279    SUBA	0x79
  02A5    1C03    SNZB	0x3,0
  02A6    1C78    SNZB	0x78,0
  02A7    2AAA    JP	0x2AA
287:              			resetbit(PORTA, 3);
  02A8    1185    CLRB	0x5,3
  02A9    2AAB    JP	0x2AB
288:              		else
289:              			setbit(PORTA, 3);
  02AA    1585    SETB	0x5,3
290:              		if(++pwmTime >= 44)
  02AB    302C    LDIA	0x2C
  02AC    0AF9    INCR	0x79
  02AD    0279    SUBA	0x79
  02AE    1C03    SNZB	0x3,0
  02AF    2AB3    JP	0x2B3
291:              		{
292:              			pwmTime = 0;
  02B0    01F9    CLR	0x79
  02B1    2AB3    JP	0x2B3
293:              		}
294:              	}
295:              	else
296:              	{
297:              		PIR1 = 0;
  02B2    018C    CLR	0xC
  02B3    0873    LD	A,0x73
  02B4    008A    LD	0xA,A
  02B5    0E72    SWAPA	0x72
  02B6    0083    LD	0x3,A
  02B7    0EFE    SWAPR	0x7E
  02B8    0E7E    SWAPA	0x7E
  02B9    0009    RETI
298:              	//	PIR2 = 0;
299:              	}
300:              }
301:              
302:              /***********************************************************
303:              主循环
304:              ***********************************************************/
305:              void main()
306:              {
307:              	PORTB = 0x00;
  0358    0186    CLR	0x6
308:              	PORTA = 0x00;
  0359    0185    CLR	0x5
309:              	Init_System();
  035A    22BA    CALL	0x2BA
310:              	sendFlag = 1;
  035B    1478    SETB	0x78,0
311:              	//initPWM();
312:              	while(1)
  035C    0064    CLRWDT
313:              	{
314:              		CLRWDT();
315:              		if(B_MainLoop)
  035D    1D71    SNZB	0x71,2
  035E    2B5C    JP	0x35C
316:              		{
317:              			B_MainLoop = 0;
  035F    1171    CLRB	0x71,2
318:              			//sRefurbish_Sfr();
319:              			CheckTouchKey();
  0360    2271    CALL	0x271
320:              			KeyServer();
  0361    2187    CALL	0x187
321:              			checkIRKey();
  0362    21E0    CALL	0x1E0
322:              			if(ONFlag)
  0363    1FF0    SNZB	0x70,7
  0364    2B67    JP	0x367
323:              			{
324:              				startPWM();
  0365    23D3    CALL	0x3D3
325:              			}
  0366    2B5C    JP	0x35C
326:              			else
327:              			{
328:              				PWMCON0 = 0;
  0367    0193    CLR	0x13
329:              				PORTB &= 0x7F;
  0368    1386    CLRB	0x6,7
330:              				PORTA &= 0xDF;
  0369    1285    CLRB	0x5,5
  036A    2B5C    JP	0x35C
331:              			}
332:              			/**
333:              			if(ONFlag && pwmFlag == 0)
334:              			{
335:              				startPWM();
336:              			}
337:              			else if(ONFlag == 0 && pwmFlag == 1)
338:              			{
339:              				PWMCON0 = 0;
340:              				pwmFlag = 0;
341:              				PORTB &= 0x7F;
342:              				PORTA &= 0xDF;
343:              			}
344:              			
345:              			*/
346:              		}
347:              	}
348:              }
---- C:\mcuproject\scm\台灯\pwm.c ----------------------------------------------------------------------
1:                #include <sc.h>
2:                #include "pwm.h"
3:                
4:                void initPWM()
5:                {
6:                	PWMCON1 = 0x40;	//选择C组PWM
  03AC    3040    LDIA	0x40
  03AD    0094    LD	0x14,A
7:                	PWMCON0 = 0x23;//分频比 1：4
  03AE    3023    LDIA	0x23
  03AF    0093    LD	0x13,A
8:                	PWMCON2 = 0;
  03B0    019D    CLR	0x1D
9:                	PWMTH = 0;
  03B1    0196    CLR	0x16
10:               	PWMTL = 125;		//约等于32K
  03B2    307D    LDIA	0x7D
  03B3    0095    LD	0x15,A
11:               	PWMD0L = 1;
  03B4    3001    LDIA	0x1
  03B5    0097    LD	0x17,A
12:               	PWMD1L = 1;		//pwm1占空比
  03B6    0098    LD	0x18,A
13:               	PWMD01H = 0;
  03B7    019C    CLR	0x1C
  03B8    0008    RET
14:               }
15:               
16:               void mode1()
17:               {
18:               	PWMD0L = 1;
  0402    3001    LDIA	0x1
  0403    0097    LD	0x17,A
19:               	PWMD01H = 0;
  0404    019C    CLR	0x1C
  0405    0008    RET
20:               }
21:               
22:               void mode2()
23:               {
24:               	PWMD0L = 12;
  03FE    300C    LDIA	0xC
  03FF    0097    LD	0x17,A
25:               	PWMD01H = 0;
  0400    019C    CLR	0x1C
  0401    0008    RET
26:               }
27:               
28:               void mode3()
29:               {
30:               	PWMD0L = 20;
  03FA    3014    LDIA	0x14
  03FB    0097    LD	0x17,A
31:               	PWMD01H = 0;
  03FC    019C    CLR	0x1C
  03FD    0008    RET
32:               }
33:               
34:               void mode4()
35:               {
36:               	PWMD0L = 71;
  03F6    3047    LDIA	0x47
  03F7    0097    LD	0x17,A
37:               	PWMD01H = 0;
  03F8    019C    CLR	0x1C
  03F9    0008    RET
38:               }
39:               
40:               void mode5()
41:               {
42:               	PWMD0L = 125;
  03F2    307D    LDIA	0x7D
  03F3    0097    LD	0x17,A
43:               	PWMD01H = 0;
  03F4    019C    CLR	0x1C
  03F5    0008    RET
44:               }
45:               
46:               void modea()
47:               {
48:               	PWMD1L = 125;
  03EE    307D    LDIA	0x7D
  03EF    0098    LD	0x18,A
49:               	PWMD01H = 0;
  03F0    019C    CLR	0x1C
  03F1    0008    RET
50:               }
51:               
52:               void modeb()
53:               {
54:               	PWMCON0 = 0x21;
  03EA    3021    LDIA	0x21
  03EB    0093    LD	0x13,A
55:               	resetbit(PORTB, 7);
  03EC    1386    CLRB	0x6,7
  03ED    0008    RET
56:               }
57:               
58:               void modec()
59:               {
60:               	PWMD1L = 31;
  03CD    301F    LDIA	0x1F
  03CE    0098    LD	0x18,A
61:               	PWMCON0 = 0x23;
  03CF    3023    LDIA	0x23
  03D0    0093    LD	0x13,A
62:               	PWMD01H = 0;
  03D1    019C    CLR	0x1C
  03D2    0008    RET
63:               }
64:               
65:               void moded()
66:               {
67:               	PWMD1L = 62;
  03E6    303E    LDIA	0x3E
  03E7    0098    LD	0x18,A
68:               	PWMD01H = 0;
  03E8    019C    CLR	0x1C
  03E9    0008    RET
69:               }
70:               
71:               void modee()
72:               {
73:               	PWMD1L = 94;
  03E2    305E    LDIA	0x5E
  03E3    0098    LD	0x18,A
74:               	PWMD01H = 0;
  03E4    019C    CLR	0x1C
  03E5    0008    RET
75:               }
76:               
---- library_code ------------------------------------------------------------------
  0018    1283    CLRB	0x3,5
  0019    1303    CLRB	0x3,6
  001A    01DA    CLR	0x5A
  001B    01B6    CLR	0x36
  001C    01B7    CLR	0x37
  001D    01C7    CLR	0x47
  001E    085A    LD	A,0x5A
  001F    3907    ANDIA	0x7
  0020    3E01    ADDIA	0x1
  0021    0084    LD	0x4,A
  0022    2344    CALL	0x344
  0023    00D4    LD	0x54,A
  0024    1003    CLRB	0x3,0
  0025    0D5A    RLCA	0x5A
  0026    3E30    ADDIA	0x30
  0027    0084    LD	0x4,A
  0028    3003    LDIA	0x3
  0029    0A84    INCR	0x4
  002A    1003    CLRB	0x3,0
  002B    1383    CLRB	0x3,7
  002C    0C80    RRCR	0x0
  002D    0384    DECR	0x4
  002E    0C80    RRCR	0x0
  002F    3EFF    ADDIA	0xFF
  0030    1D03    SNZB	0x3,2
  0031    2829    JP	0x29
  0032    1003    CLRB	0x3,0
  0033    0D5A    RLCA	0x5A
  0034    3E30    ADDIA	0x30
  0035    0084    LD	0x4,A
  0036    0800    LD	A,0x0
  0037    00D8    LD	0x58,A
  0038    0A84    INCR	0x4
  0039    0800    LD	A,0x0
  003A    00D9    LD	0x59,A
  003B    085A    LD	A,0x5A
  003C    3E09    ADDIA	0x9
  003D    0084    LD	0x4,A
  003E    2344    CALL	0x344
  003F    00D7    LD	0x57,A
  0040    00D5    LD	0x55,A
  0041    01D6    CLR	0x56
  0042    0858    LD	A,0x58
  0043    07D5    ADDR	0x55
  0044    1803    SZB	0x3,0
  0045    0AD6    INCR	0x56
  0046    0859    LD	A,0x59
  0047    07D6    ADDR	0x56
  0048    085A    LD	A,0x5A
  0049    237D    CALL	0x37D
  004A    3A00    XORIA	0x0
  004B    1003    CLRB	0x3,0
  004C    1D03    SNZB	0x3,2
  004D    28A5    JP	0xA5
  004E    0D5A    RLCA	0x5A
  004F    3E24    ADDIA	0x24
  0050    0084    LD	0x4,A
  0051    1383    CLRB	0x3,7
  0052    0800    LD	A,0x0
  0053    00D2    LD	0x52,A
  0054    0A84    INCR	0x4
  0055    0800    LD	A,0x0
  0056    00D3    LD	0x53,A
  0057    1003    CLRB	0x3,0
  0058    0D5A    RLCA	0x5A
  0059    3E20    ADDIA	0x20
  005A    20FF    CALL	0xFF
  005B    0256    SUBA	0x56
  005C    1D03    SNZB	0x3,2
  005D    2860    JP	0x60
  005E    084E    LD	A,0x4E
  005F    0255    SUBA	0x55
  0060    1803    SZB	0x3,0
  0061    286E    JP	0x6E
  0062    1003    CLRB	0x3,0
  0063    0D5A    RLCA	0x5A
  0064    3E20    ADDIA	0x20
  0065    20FF    CALL	0xFF
  0066    0858    LD	A,0x58
  0067    024E    SUBA	0x4E
  0068    00D8    LD	0x58,A
  0069    0859    LD	A,0x59
  006A    1C03    SNZB	0x3,0
  006B    0A59    INCA	0x59
  006C    024F    SUBA	0x4F
  006D    2891    JP	0x91
  006E    0853    LD	A,0x53
  006F    0256    SUBA	0x56
  0070    1D03    SNZB	0x3,2
  0071    2874    JP	0x74
  0072    0852    LD	A,0x52
  0073    0255    SUBA	0x55
  0074    1803    SZB	0x3,0
  0075    28E5    JP	0xE5
  0076    1003    CLRB	0x3,0
  0077    0D5A    RLCA	0x5A
  0078    3E28    ADDIA	0x28
  0079    20FF    CALL	0xFF
  007A    0256    SUBA	0x56
  007B    1D03    SNZB	0x3,2
  007C    287F    JP	0x7F
  007D    084E    LD	A,0x4E
  007E    0255    SUBA	0x55
  007F    1803    SZB	0x3,0
  0080    28E5    JP	0xE5
  0081    1003    CLRB	0x3,0
  0082    0D5A    RLCA	0x5A
  0083    3E20    ADDIA	0x20
  0084    0084    LD	0x4,A
  0085    0852    LD	A,0x52
  0086    0080    LD	0x0,A
  0087    0A84    INCR	0x4
  0088    0853    LD	A,0x53
  0089    0080    LD	0x0,A
  008A    0858    LD	A,0x58
  008B    0252    SUBA	0x52
  008C    00D8    LD	0x58,A
  008D    0859    LD	A,0x59
  008E    1C03    SNZB	0x3,0
  008F    0A59    INCA	0x59
  0090    0253    SUBA	0x53
  0091    00D9    LD	0x59,A
  0092    085A    LD	A,0x5A
  0093    3E40    ADDIA	0x40
  0094    0084    LD	0x4,A
  0095    0180    CLR	0x0
  0096    0859    LD	A,0x59
  0097    1903    SZB	0x3,2
  0098    289B    JP	0x9B
  0099    30FF    LDIA	0xFF
  009A    289C    JP	0x9C
  009B    0858    LD	A,0x58
  009C    00D7    LD	0x57,A
  009D    0247    SUBA	0x47
  009E    1803    SZB	0x3,0
  009F    28A3    JP	0xA3
  00A0    0857    LD	A,0x57
  00A1    00C7    LD	0x47,A
  00A2    28E0    JP	0xE0
  00A3    0AC8    INCR	0x48
  00A4    28E5    JP	0xE5
  00A5    0D5A    RLCA	0x5A
  00A6    3E20    ADDIA	0x20
  00A7    0084    LD	0x4,A
  00A8    1383    CLRB	0x3,7
  00A9    0800    LD	A,0x0
  00AA    00CE    LD	0x4E,A
  00AB    0A84    INCR	0x4
  00AC    0800    LD	A,0x0
  00AD    00CF    LD	0x4F,A
  00AE    084E    LD	A,0x4E
  00AF    3E01    ADDIA	0x1
  00B0    00D0    LD	0x50,A
  00B1    084F    LD	A,0x4F
  00B2    1803    SZB	0x3,0
  00B3    3E01    ADDIA	0x1
  00B4    00D1    LD	0x51,A
  00B5    0856    LD	A,0x56
  00B6    0251    SUBA	0x51
  00B7    1D03    SNZB	0x3,2
  00B8    28BB    JP	0xBB
  00B9    0855    LD	A,0x55
  00BA    0250    SUBA	0x50
  00BB    1C03    SNZB	0x3,0
  00BC    28E5    JP	0xE5
  00BD    1003    CLRB	0x3,0
  00BE    0D5A    RLCA	0x5A
  00BF    3E24    ADDIA	0x24
  00C0    0084    LD	0x4,A
  00C1    0800    LD	A,0x0
  00C2    20ED    CALL	0xED
  00C3    1C03    SNZB	0x3,0
  00C4    28CD    JP	0xCD
  00C5    1003    CLRB	0x3,0
  00C6    0D5A    RLCA	0x5A
  00C7    3E28    ADDIA	0x28
  00C8    0084    LD	0x4,A
  00C9    0800    LD	A,0x0
  00CA    20ED    CALL	0xED
  00CB    1803    SZB	0x3,0
  00CC    28D8    JP	0xD8
  00CD    085A    LD	A,0x5A
  00CE    3E40    ADDIA	0x40
  00CF    0084    LD	0x4,A
  00D0    3009    LDIA	0x9
  00D1    0A80    INCR	0x0
  00D2    0200    SUBA	0x0
  00D3    1C03    SNZB	0x3,0
  00D4    28DC    JP	0xDC
  00D5    085A    LD	A,0x5A
  00D6    2316    CALL	0x316
  00D7    28E5    JP	0xE5
  00D8    085A    LD	A,0x5A
  00D9    3E40    ADDIA	0x40
  00DA    0084    LD	0x4,A
  00DB    0180    CLR	0x0
  00DC    0837    LD	A,0x37
  00DD    0436    ORA	0x36
  00DE    1D03    SNZB	0x3,2
  00DF    28E5    JP	0xE5
  00E0    0854    LD	A,0x54
  00E1    00F4    LD	0x74,A
  00E2    01F5    CLR	0x75
  00E3    085A    LD	A,0x5A
  00E4    23B9    CALL	0x3B9
  00E5    3002    LDIA	0x2
  00E6    1283    CLRB	0x3,5
  00E7    1303    CLRB	0x3,6
  00E8    0ADA    INCR	0x5A
  00E9    025A    SUBA	0x5A
  00EA    1803    SZB	0x3,0
  00EB    0008    RET
  00EC    281E    JP	0x1E
  0106    3004    LDIA	0x4
  0107    1283    CLRB	0x3,5
  0108    1303    CLRB	0x3,6
  0109    01D2    CLR	0x52
  010A    0AC6    INCR	0x46
  010B    0246    SUBA	0x46
  010C    1C03    SNZB	0x3,0
  010D    0008    RET
  010E    01C6    CLR	0x46
  010F    1003    CLRB	0x3,0
  0110    0D52    RLCA	0x52
  0111    3E30    ADDIA	0x30
  0112    0084    LD	0x4,A
  0113    1383    CLRB	0x3,7
  0114    0800    LD	A,0x0
  0115    00CE    LD	0x4E,A
  0116    0A84    INCR	0x4
  0117    0800    LD	A,0x0
  0118    00CF    LD	0x4F,A
  0119    0852    LD	A,0x52
  011A    237D    CALL	0x37D
  011B    3A00    XORIA	0x0
  011C    1003    CLRB	0x3,0
  011D    1D03    SNZB	0x3,2
  011E    294F    JP	0x14F
  011F    0D52    RLCA	0x52
  0120    3E2C    ADDIA	0x2C
  0121    0084    LD	0x4,A
  0122    1383    CLRB	0x3,7
  0123    2160    CALL	0x160
  0124    1903    SZB	0x3,2
  0125    0250    SUBA	0x50
  0126    1C03    SNZB	0x3,0
  0127    292E    JP	0x12E
  0128    0F50    SZINCA	0x50
  0129    294E    JP	0x14E
  012A    0A51    INCA	0x51
  012B    1003    CLRB	0x3,0
  012C    1D03    SNZB	0x3,2
  012D    294F    JP	0x14F
  012E    0D52    RLCA	0x52
  012F    3E28    ADDIA	0x28
  0130    0084    LD	0x4,A
  0131    2160    CALL	0x160
  0132    1903    SZB	0x3,2
  0133    0250    SUBA	0x50
  0134    1C03    SNZB	0x3,0
  0135    293C    JP	0x13C
  0136    0F50    SZINCA	0x50
  0137    294E    JP	0x14E
  0138    0A51    INCA	0x51
  0139    1003    CLRB	0x3,0
  013A    1D03    SNZB	0x3,2
  013B    294F    JP	0x14F
  013C    0D52    RLCA	0x52
  013D    3E24    ADDIA	0x24
  013E    0084    LD	0x4,A
  013F    2160    CALL	0x160
  0140    1903    SZB	0x3,2
  0141    0250    SUBA	0x50
  0142    1C03    SNZB	0x3,0
  0143    294A    JP	0x14A
  0144    0F50    SZINCA	0x50
  0145    294E    JP	0x14E
  0146    0A51    INCA	0x51
  0147    1003    CLRB	0x3,0
  0148    1D03    SNZB	0x3,2
  0149    294F    JP	0x14F
  014A    0D52    RLCA	0x52
  014B    3E20    ADDIA	0x20
  014C    0084    LD	0x4,A
  014D    2181    CALL	0x181
  014E    1003    CLRB	0x3,0
  014F    0D52    RLCA	0x52
  0150    3E28    ADDIA	0x28
  0151    0084    LD	0x4,A
  0152    1383    CLRB	0x3,7
  0153    2179    CALL	0x179
  0154    3E24    ADDIA	0x24
  0155    216E    CALL	0x16E
  0156    2179    CALL	0x179
  0157    3E28    ADDIA	0x28
  0158    216E    CALL	0x16E
  0159    2181    CALL	0x181
  015A    3002    LDIA	0x2
  015B    0AD2    INCR	0x52
  015C    0252    SUBA	0x52
  015D    1803    SZB	0x3,0
  015E    0008    RET
  015F    290F    JP	0x10F
  0213    0837    LD	A,0x37
  0214    0436    ORA	0x36
  0215    1903    SZB	0x3,2
  0216    2A35    JP	0x235
  0217    01C4    CLR	0x44
  0218    0836    LD	A,0x36
  0219    0638    XORA	0x38
  021A    1D03    SNZB	0x3,2
  021B    2A2E    JP	0x22E
  021C    0837    LD	A,0x37
  021D    0639    XORA	0x39
  021E    1D03    SNZB	0x3,2
  021F    2A2E    JP	0x22E
  0220    3002    LDIA	0x2
  0221    0AC5    INCR	0x45
  0222    0245    SUBA	0x45
  0223    1C03    SNZB	0x3,0
  0224    0008    RET
  0225    01C5    CLR	0x45
  0226    0836    LD	A,0x36
  0227    00C2    LD	0x42,A
  0228    0837    LD	A,0x37
  0229    00C3    LD	0x43,A
  022A    18F0    SZB	0x70,1
  022B    0008    RET
  022C    14F0    SETB	0x70,1
  022D    2B9E    JP	0x39E
  022E    10F0    CLRB	0x70,1
  022F    0836    LD	A,0x36
  0230    00B8    LD	0x38,A
  0231    0837    LD	A,0x37
  0232    00B9    LD	0x39,A
  0233    01C5    CLR	0x45
  0234    0008    RET
  0235    01C5    CLR	0x45
  0236    01B8    CLR	0x38
  0237    01B9    CLR	0x39
  0238    3002    LDIA	0x2
  0239    0AC4    INCR	0x44
  023A    0244    SUBA	0x44
  023B    1C03    SNZB	0x3,0
  023C    0008    RET
  023D    01C4    CLR	0x44
  023E    01C2    CLR	0x42
  023F    01C3    CLR	0x43
  0240    10F0    CLRB	0x70,1
  0241    0008    RET
  0242    01F6    CLR	0x76
  0243    1683    SETB	0x3,5
  0244    1303    CLRB	0x3,6
  0245    0192    CLR	0x12
  0246    0193    CLR	0x13
  0247    0876    LD	A,0x76
  0248    3E0B    ADDIA	0xB
  0249    0084    LD	0x4,A
  024A    2344    CALL	0x344
  024B    0092    LD	0x12,A
  024C    0876    LD	A,0x76
  024D    3E0D    ADDIA	0xD
  024E    0084    LD	0x4,A
  024F    2344    CALL	0x344
  0250    0093    LD	0x13,A
  0251    1412    SETB	0x12,0
  0252    01F5    CLR	0x75
  0253    1B92    SZB	0x12,7
  0254    2A5B    JP	0x25B
  0255    0BF5    SZDECR	0x75
  0256    2A53    JP	0x253
  0257    30FF    LDIA	0xFF
  0258    1283    CLRB	0x3,5
  0259    00C8    LD	0x48,A
  025A    2B8F    JP	0x38F
  025B    1003    CLRB	0x3,0
  025C    0D76    RLCA	0x76
  025D    3E30    ADDIA	0x30
  025E    0084    LD	0x4,A
  025F    0814    LD	A,0x14
  0260    1383    CLRB	0x3,7
  0261    0780    ADDR	0x0
  0262    0F84    SZINCR	0x4
  0263    0800    LD	A,0x0
  0264    1803    SZB	0x3,0
  0265    0A00    INCA	0x0
  0266    00FF    LD	0x7F,A
  0267    0815    LD	A,0x15
  0268    077F    ADDA	0x7F
  0269    0080    LD	0x0,A
  026A    3002    LDIA	0x2
  026B    0384    DECR	0x4
  026C    0AF6    INCR	0x76
  026D    0276    SUBA	0x76
  026E    1803    SZB	0x3,0
  026F    0008    RET
  0270    2A43    JP	0x243
  0271    19F0    SZB	0x70,3
  0272    2A7D    JP	0x27D
  0273    2242    CALL	0x242
  0274    3008    LDIA	0x8
  0275    1283    CLRB	0x3,5
  0276    0AC8    INCR	0x48
  0277    0248    SUBA	0x48
  0278    1C03    SNZB	0x3,0
  0279    2A96    JP	0x296
  027A    01C8    CLR	0x48
  027B    15F0    SETB	0x70,3
  027C    2A96    JP	0x296
  027D    1970    SZB	0x70,2
  027E    2A92    JP	0x292
  027F    2018    CALL	0x18
  0280    2213    CALL	0x213
  0281    1570    SETB	0x70,2
  0282    1870    SZB	0x70,0
  0283    2A8A    JP	0x28A
  0284    3002    LDIA	0x2
  0285    1283    CLRB	0x3,5
  0286    1303    CLRB	0x3,6
  0287    0248    SUBA	0x48
  0288    1C03    SNZB	0x3,0
  0289    2A8E    JP	0x28E
  028A    232F    CALL	0x32F
  028B    1070    CLRB	0x70,0
  028C    11F0    CLRB	0x70,3
  028D    1170    CLRB	0x70,2
  028E    1283    CLRB	0x3,5
  028F    1303    CLRB	0x3,6
  0290    01C8    CLR	0x48
  0291    2A96    JP	0x296
  0292    2106    CALL	0x106
  0293    238F    CALL	0x38F
  0294    11F0    CLRB	0x70,3
  0295    1170    CLRB	0x70,2
  0296    2B6B    JP	0x36B
  0316    00F4    LD	0x74,A
  0317    1003    CLRB	0x3,0
  0318    0D74    RLCA	0x74
  0319    3E2C    ADDIA	0x2C
  031A    0084    LD	0x4,A
  031B    1383    CLRB	0x3,7
  031C    2329    CALL	0x329
  031D    3E28    ADDIA	0x28
  031E    0084    LD	0x4,A
  031F    2329    CALL	0x329
  0320    3E24    ADDIA	0x24
  0321    0084    LD	0x4,A
  0322    2329    CALL	0x329
  0323    3E20    ADDIA	0x20
  0324    0084    LD	0x4,A
  0325    0180    CLR	0x0
  0326    0A84    INCR	0x4
  0327    0180    CLR	0x0
  0328    0008    RET
  032F    1283    CLRB	0x3,5
  0330    1303    CLRB	0x3,6
  0331    01C2    CLR	0x42
  0332    01C3    CLR	0x43
  0333    01F5    CLR	0x75
  0334    1003    CLRB	0x3,0
  0335    0D75    RLCA	0x75
  0336    3E30    ADDIA	0x30
  0337    0084    LD	0x4,A
  0338    1383    CLRB	0x3,7
  0339    0180    CLR	0x0
  033A    0A84    INCR	0x4
  033B    0180    CLR	0x0
  033C    0875    LD	A,0x75
  033D    2316    CALL	0x316
  033E    3002    LDIA	0x2
  033F    0AF5    INCR	0x75
  0340    0275    SUBA	0x75
  0341    1803    SZB	0x3,0
  0342    0008    RET
  0343    2B34    JP	0x334
  036B    0843    LD	A,0x43
  036C    0442    ORA	0x42
  036D    1903    SZB	0x3,2
  036E    2B7A    JP	0x37A
  036F    0AB4    INCR	0x34
  0370    1903    SZB	0x3,2
  0371    0AB5    INCR	0x35
  0372    303A    LDIA	0x3A
  0373    0235    SUBA	0x35
  0374    3098    LDIA	0x98
  0375    1903    SZB	0x3,2
  0376    0234    SUBA	0x34
  0377    1C03    SNZB	0x3,0
  0378    0008    RET
  0379    1470    SETB	0x70,0
  037A    01B4    CLR	0x34
  037B    01B5    CLR	0x35
  037C    0008    RET
  037D    00F5    LD	0x75,A
  037E    3907    ANDIA	0x7
  037F    3E01    ADDIA	0x1
  0380    0084    LD	0x4,A
  0381    2344    CALL	0x344
  0382    00F4    LD	0x74,A
  0383    1DF5    SNZB	0x75,3
  0384    2B89    JP	0x389
  0385    1283    CLRB	0x3,5
  0386    1303    CLRB	0x3,6
  0387    0843    LD	A,0x43
  0388    2B8C    JP	0x38C
  0389    1283    CLRB	0x3,5
  038A    1303    CLRB	0x3,6
  038B    0842    LD	A,0x42
  038C    05F4    ANDR	0x74
  038D    0874    LD	A,0x74
  038E    0008    RET
  038F    01F4    CLR	0x74
  0390    1003    CLRB	0x3,0
  0391    0D74    RLCA	0x74
  0392    3E30    ADDIA	0x30
  0393    0084    LD	0x4,A
  0394    3002    LDIA	0x2
  0395    1383    CLRB	0x3,7
  0396    0180    CLR	0x0
  0397    0A84    INCR	0x4
  0398    0180    CLR	0x0
  0399    0AF4    INCR	0x74
  039A    0274    SUBA	0x74
  039B    1803    SZB	0x3,0
  039C    0008    RET
  039D    2B90    JP	0x390
  039E    01F6    CLR	0x76
  039F    0876    LD	A,0x76
  03A0    237D    CALL	0x37D
  03A1    3A00    XORIA	0x0
  03A2    1D03    SNZB	0x3,2
  03A3    2BA6    JP	0x3A6
  03A4    0876    LD	A,0x76
  03A5    2316    CALL	0x316
  03A6    3002    LDIA	0x2
  03A7    0AF6    INCR	0x76
  03A8    0276    SUBA	0x76
  03A9    1803    SZB	0x3,0
  03AA    0008    RET
  03AB    2B9F    JP	0x39F
  03B9    00F6    LD	0x76,A
  03BA    0AC8    INCR	0x48
  03BB    01B6    CLR	0x36
  03BC    01B7    CLR	0x37
  03BD    1DF6    SNZB	0x76,3
  03BE    2BC2    JP	0x3C2
  03BF    0874    LD	A,0x74
  03C0    00B7    LD	0x37,A
  03C1    0008    RET
  03C2    0874    LD	A,0x74
  03C3    00B6    LD	0x36,A
  03C4    0008    RET
---- stringtab ------------------------------------------------------------------
  0344    3003    LDIA	0x3
  0345    008A    LD	0xA,A
  0346    0804    LD	A,0x4
  0347    0A84    INCR	0x4
  0348    0782    ADDR	0x2
  0349    3400    RET	0x0
---- reset_enter ------------------------------------------------------------------
  0000    280A    JP	0xA
  000A    280B    JP	0xB
---- start_initialization ------------------------------------------------------------------
  000B    3001    LDIA	0x1
  000C    00DB    LD	0x5B,A
  000D    00DC    LD	0x5C,A
  000E    3020    LDIA	0x20
  000F    1383    CLRB	0x3,7
  0010    0084    LD	0x4,A
  0011    304E    LDIA	0x4E
  0012    23C5    CALL	0x3C5
  0013    01F9    CLR	0x79
  0014    01F0    CLR	0x70
  0015    01F1    CLR	0x71
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F2    LD	0x72,A
  0007    080A    LD	A,0xA
  0008    00F3    LD	0x73,A
  0009    2A97    JP	0x297
---- common_function ------------------------------------------------------------------
  0016    0183    CLR	0x3
  0017    2B58    JP	0x358
  00ED    00CE    LD	0x4E,A
  00EE    0A84    INCR	0x4
  00EF    0800    LD	A,0x0
  00F0    00CF    LD	0x4F,A
  00F1    0857    LD	A,0x57
  00F2    074E    ADDA	0x4E
  00F3    00D0    LD	0x50,A
  00F4    084F    LD	A,0x4F
  00F5    1803    SZB	0x3,0
  00F6    0A4F    INCA	0x4F
  00F7    00D1    LD	0x51,A
  00F8    0859    LD	A,0x59
  00F9    0251    SUBA	0x51
  00FA    1D03    SNZB	0x3,2
  00FB    0008    RET
  00FC    0858    LD	A,0x58
  00FD    0250    SUBA	0x50
  00FE    0008    RET
  00FF    0084    LD	0x4,A
  0100    0800    LD	A,0x0
  0101    00CE    LD	0x4E,A
  0102    0A84    INCR	0x4
  0103    0800    LD	A,0x0
  0104    00CF    LD	0x4F,A
  0105    0008    RET
  0160    0800    LD	A,0x0
  0161    00D0    LD	0x50,A
  0162    0A84    INCR	0x4
  0163    0800    LD	A,0x0
  0164    00D1    LD	0x51,A
  0165    084E    LD	A,0x4E
  0166    02D0    SUBR	0x50
  0167    084F    LD	A,0x4F
  0168    1C03    SNZB	0x3,0
  0169    03D1    DECR	0x51
  016A    02D1    SUBR	0x51
  016B    3000    LDIA	0x0
  016C    0251    SUBA	0x51
  016D    3402    RET	0x2
  016E    0084    LD	0x4,A
  016F    0876    LD	A,0x76
  0170    0080    LD	0x0,A
  0171    0A84    INCR	0x4
  0172    0877    LD	A,0x77
  0173    0080    LD	0x0,A
  0174    1003    CLRB	0x3,0
  0175    0D52    RLCA	0x52
  0176    3E2C    ADDIA	0x2C
  0177    0084    LD	0x4,A
  0178    0008    RET
  0179    0800    LD	A,0x0
  017A    00F6    LD	0x76,A
  017B    0A84    INCR	0x4
  017C    0800    LD	A,0x0
  017D    00F7    LD	0x77,A
  017E    1003    CLRB	0x3,0
  017F    0D52    RLCA	0x52
  0180    0008    RET
  0181    084E    LD	A,0x4E
  0182    0080    LD	0x0,A
  0183    0A84    INCR	0x4
  0184    084F    LD	A,0x4F
  0185    0080    LD	0x0,A
  0186    0008    RET
  0329    0180    CLR	0x0
  032A    0A84    INCR	0x4
  032B    0180    CLR	0x0
  032C    1003    CLRB	0x3,0
  032D    0D74    RLCA	0x74
  032E    0008    RET
  034A    3401    RET	0x1
  034B    3402    RET	0x2
  034C    3404    RET	0x4
  034D    3408    RET	0x8
  034E    3410    RET	0x10
  034F    3420    RET	0x20
  0350    3440    RET	0x40
  0351    3480    RET	0x80
  0352    340A    RET	0xA
  0353    340A    RET	0xA
  0354    3402    RET	0x2
  0355    3402    RET	0x2
  0356    3460    RET	0x60
  0357    3461    RET	0x61
  03C5    0064    CLRWDT
  03C6    0180    CLR	0x0
  03C7    0A84    INCR	0x4
  03C8    0604    XORA	0x4
  03C9    1903    SZB	0x3,2
  03CA    3400    RET	0x0
  03CB    0604    XORA	0x4
  03CC    2BC6    JP	0x3C6
  03D8    2AF3    JP	0x2F3
  03D9    2AF4    JP	0x2F4
  03DA    2AF5    JP	0x2F5
  03DB    2AF6    JP	0x2F6
  03DC    2AF7    JP	0x2F7
  03DD    2B11    JP	0x311
  03DE    2B12    JP	0x312
  03DF    2B13    JP	0x313
  03E0    2B14    JP	0x314
  03E1    2B15    JP	0x315
