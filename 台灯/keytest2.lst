---- C:\Users\mxy\Desktop\keytest2\main.c ----------------------------------------------------------------------
1:                #include <sc.h>
2:                #include "pwm.h"
3:                #include "Touch_Kscan_Library.h"
4:                
5:                volatile unsigned char MainTime;
6:                volatile unsigned char pwmTime;
7:                volatile unsigned char irStep = 0; //0为未遮挡 1遮挡  2消抖
8:                unsigned char	revCount = 0;//收到的波形计数
9:                unsigned char	revZeroCount = 0;//未收到的波形计数
10:               unsigned char	checkCount = 0;	//检测次数
11:               unsigned char	pwm0Step = 1;	//	pwm0档位
12:               unsigned char	pwm1Step = 1;	//	pwm1档位
13:               unsigned int 	timeCount = 0;
14:               
15:               volatile bit	sendFlag;	//发射标记
16:               volatile bit	B_MainLoop;
17:               volatile bit	sendStartFlag;	//发射开始标记
18:               volatile bit	doublePressFlag;	//同时按下标记
19:               volatile bit	ONFlag;	//开关标记，1为打开
20:               volatile bit	pwmFlag;	//PWM开关标记，1为打开
21:               volatile bit	keyLockFlag;	//触摸长按锁定
22:               volatile bit	doubleTouchFlag;	//同时触摸标记位
23:               //系统初始化
24:               void Init_System()
  02A0    0000    NOP
  02A1    0064    CLRWDT
25:               {
26:               	asm("nop");
27:               	asm("clrwdt");
28:               	INTCON = 0;				//禁止中断
  02A2    018B    CLR	0xB
29:               	OSCCON = 0X71;			//配置振荡为8M
  02A3    3071    LDIA	0x71
  02A4    1683    SETB	0x3,5
  02A5    1303    CLRB	0x3,6
  02A6    0088    LD	0x8,A
30:               	OPTION_REG = 0;
  02A7    0181    CLR	0x1
31:               	
32:               	//延时等待电源电压稳定
33:               	//DelayXms(200);
34:               	WPUB = 0x00;
  02A8    1283    CLRB	0x3,5
  02A9    0188    CLR	0x8
35:               	WPDB = 0x00;
  02AA    1683    SETB	0x3,5
  02AB    0187    CLR	0x7
36:               	WPUA = 0x00;
  02AC    1283    CLRB	0x3,5
  02AD    0187    CLR	0x7
37:               	//PIE2 = 0;
38:               	PIE1 = 2;
  02AE    3002    LDIA	0x2
  02AF    008D    LD	0xD,A
39:               	PR2 = 250;				//8M下将TMR2设置为125us中断
  02B0    30FA    LDIA	0xFA
  02B1    1683    SETB	0x3,5
  02B2    0091    LD	0x11,A
40:               	T2CON = 4;				//使能定时器2
  02B3    3004    LDIA	0x4
  02B4    1283    CLRB	0x3,5
  02B5    0092    LD	0x12,A
41:               	TRISA = 0x00;
  02B6    1683    SETB	0x3,5
  02B7    0185    CLR	0x5
42:               	TRISB = 0x07;			//PB2为红外接收口
  02B8    3007    LDIA	0x7
  02B9    0086    LD	0x6,A
43:               	PORTB = 0x00;
  02BA    1283    CLRB	0x3,5
  02BB    0186    CLR	0x6
44:               	PORTA = 0x00;
  02BC    0185    CLR	0x5
45:               	INTCON = 0XC0;			//使能中断
  02BD    30C0    LDIA	0xC0
  02BE    008B    LD	0xB,A
  02BF    0008    RET
46:               }
47:               
48:               
49:               /**********************************************************
50:               刷新特殊功能寄存器
51:               **********************************************************/
52:               void Refurbish_Sfr()
53:               {
54:               /*	//均为数字口
55:               	ANSEL = 0;
56:               	ANSELH = 0;
57:               	
58:               	TRISA = 0;
59:               	TRISB = 0;
60:               	TRISC = 0;
61:               	TRISE = 9;
62:               	
63:               	LEDCON0 = 0;
64:               	LEDCON1 = 0;
65:               	SEGEN0 = 0;
66:               	SEGEN1 = 0;
67:               	SEGEN2 = 0;
68:               	COMEN = 0;
69:               	
70:               	SSPCON = 0;
71:               //	SSPCON2 = 0;
72:               	CCP1CON = 0;
73:               	CCP2CON = 0;
74:               //	RCSTA = 0;
75:               //	RCREG = 0;
76:               //	TXSTA = 0;
77:               	IOCB = 0;
78:               	PSTRCON = 0;
79:               	CM1CON0 = 0;
80:               	CM2CON0 = 0;
81:               	CM2CON1 = 0;
82:               	SRCON = 0;
83:               //	BAUDCTL = 0;
84:               //	PWMCON0 = 0;
85:               //	PWMCON1 = 0;
86:               	T1CON = 0;
87:               	EECON1 = 0;
88:               	PIE2 = 0;
89:               */	
90:               	OPTION_REG = 0;
91:               	
92:               	
93:               	//刷新中断相关控制寄存器
94:               	PIE1 = 2;
95:               	PR2 = 250;
96:               	INTCON = 0XC0;
97:               	if(4 != T2CON)
98:               		T2CON = 4;
99:               }
100:              //按键1处理逻辑
101:              void procKey1()
102:              {
103:              	if(ONFlag == 0)
  02DE    1FF0    SNZB	0x70,7
  02DF    0008    RET
104:              		return;
105:              	pwmFlag = 1;
  02E0    1770    SETB	0x70,6
106:              	if(++pwm0Step > 5)
  02E1    3006    LDIA	0x6
  02E2    0AD8    INCR	0x58
  02E3    0258    SUBA	0x58
  02E4    1C03    SNZB	0x3,0
  02E5    2AE8    JP	0x2E8
107:              		pwm0Step = 1;
  02E6    01D8    CLR	0x58
  02E7    0AD8    INCR	0x58
108:              	switch(pwm0Step)
109:              	{
110:              		case 1:
111:              		mode1();
  02F7    2BE8    JP	0x3E8
112:              		break;
113:              		case 2:
114:              		mode2();
  02F8    2BE4    JP	0x3E4
115:              		break;
116:              		case 3:
117:              		mode3();
  02F9    2BE0    JP	0x3E0
118:              		break;
119:              		case 4:
120:              		mode4();
  02FA    2BDC    JP	0x3DC
121:              		break;
122:              		case 5:
123:              		mode5();
  02FB    2BD8    JP	0x3D8
124:              		break;
  02E8    0858    LD	A,0x58
  02E9    3EFF    ADDIA	0xFF
  02EA    1C03    SNZB	0x3,0
  02EB    0008    RET
  02EC    0084    LD	0x4,A
  02ED    3005    LDIA	0x5
  02EE    0204    SUBA	0x4
  02EF    1803    SZB	0x3,0
  02F0    0008    RET
  02F1    3003    LDIA	0x3
  02F2    008A    LD	0xA,A
  02F3    30C3    LDIA	0xC3
  02F4    0704    ADDA	0x4
  02F5    0082    LD	0x2,A
  02F6    0008    RET
125:              
126:              	}
127:              }
128:              
129:              //按键2处理逻辑
130:              void procKey2()
131:              {
132:              	if(ONFlag == 0)
  02C0    1FF0    SNZB	0x70,7
  02C1    0008    RET
133:              		return;
134:              	pwmFlag = 1;
  02C2    1770    SETB	0x70,6
135:              	if(++pwm1Step > 5)
  02C3    3006    LDIA	0x6
  02C4    0AD7    INCR	0x57
  02C5    0257    SUBA	0x57
  02C6    1C03    SNZB	0x3,0
  02C7    2ACA    JP	0x2CA
136:              		pwm1Step = 1;
  02C8    01D7    CLR	0x57
  02C9    0AD7    INCR	0x57
137:              	switch(pwm1Step)
138:              	{
139:              		case 1:
140:              		modea();
  02D9    2BD4    JP	0x3D4
141:              		break;
142:              		case 2:
143:              		modeb();
  02DA    2BD0    JP	0x3D0
144:              		break;
145:              		case 3:
146:              		modec();
  02DB    2BB3    JP	0x3B3
147:              		break;
148:              		case 4:
149:              		moded();
  02DC    2BCC    JP	0x3CC
150:              		break;
151:              		case 5:
152:              		modee();
  02DD    2BC8    JP	0x3C8
153:              		break;
  02CA    0857    LD	A,0x57
  02CB    3EFF    ADDIA	0xFF
  02CC    1C03    SNZB	0x3,0
  02CD    0008    RET
  02CE    0084    LD	0x4,A
  02CF    3005    LDIA	0x5
  02D0    0204    SUBA	0x4
  02D1    1803    SZB	0x3,0
  02D2    0008    RET
  02D3    3003    LDIA	0x3
  02D4    008A    LD	0xA,A
  02D5    30BE    LDIA	0xBE
  02D6    0704    ADDA	0x4
  02D7    0082    LD	0x2,A
  02D8    0008    RET
154:              	}
155:              }
156:              
157:              
158:              void startPWM()
159:              {	
160:              	--pwm0Step;
  03B9    03D8    DECR	0x58
161:              	--pwm1Step;
  03BA    03D7    DECR	0x57
162:              	initPWM();
  03BB    2392    CALL	0x392
163:              	procKey1();
  03BC    22DE    CALL	0x2DE
164:              	procKey2();
  03BD    2AC0    JP	0x2C0
165:              }
166:              
167:              
168:              
169:              /***********************************************************
170:              键处理函数
171:              ***********************************************************/
172:              void KeyServer()
173:              {
174:              	static unsigned int KeyOldFlag = 0;
175:              	unsigned int i = (unsigned int)((KeyFlag[1]<<8) | KeyFlag[0]);
  0187    083F    LD	A,0x3F
  0188    00F5    LD	0x75,A
  0189    083E    LD	A,0x3E
  018A    00F4    LD	0x74,A
176:              	if(i)
  018B    0475    ORA	0x75
  018C    1903    SZB	0x3,2
  018D    29BD    JP	0x1BD
177:              	{
178:              	
179:              		if(i != KeyOldFlag)
  018E    083B    LD	A,0x3B
  018F    0675    XORA	0x75
  0190    1D03    SNZB	0x3,2
  0191    2994    JP	0x194
  0192    083A    LD	A,0x3A
  0193    0674    XORA	0x74
  0194    1903    SZB	0x3,2
  0195    29BB    JP	0x1BB
180:              		{
181:              			if(keyLockFlag)
  0196    1EF0    SNZB	0x70,5
  0197    299A    JP	0x19A
182:              			{
183:              				doubleTouchFlag = 1;
  0198    1670    SETB	0x70,4
184:              				return;
  0199    0008    RET
185:              			}
186:              			KeyOldFlag = i;
  019A    0875    LD	A,0x75
  019B    00BB    LD	0x3B,A
  019C    0874    LD	A,0x74
  019D    00BA    LD	0x3A,A
187:              			switch(i)
  019E    29A5    JP	0x1A5
188:              			{
189:              				case 1:
190:              				procKey1();
  019F    22DE    CALL	0x2DE
191:              				break;
  01A0    29BB    JP	0x1BB
192:              				case 2:
193:              				procKey2();
  01A1    22C0    CALL	0x2C0
194:              				break;
  01A2    29BB    JP	0x1BB
195:              				case 3:
196:              				doublePressFlag = 1;
  01A3    1471    SETB	0x71,0
197:              				break;
  01A4    29BB    JP	0x1BB
  01A5    0875    LD	A,0x75
  01A6    3A00    XORIA	0x0
  01A7    1903    SZB	0x3,2
  01A8    29AA    JP	0x1AA
  01A9    29BB    JP	0x1BB
  01AA    0874    LD	A,0x74
  01AB    3A01    XORIA	0x1
  01AC    1903    SZB	0x3,2
  01AD    299F    JP	0x19F
  01AE    3A03    XORIA	0x3
  01AF    1903    SZB	0x3,2
  01B0    29A1    JP	0x1A1
  01B1    3A01    XORIA	0x1
  01B2    1903    SZB	0x3,2
  01B3    29A3    JP	0x1A3
  01B4    3A07    XORIA	0x7
  01B5    1903    SZB	0x3,2
  01B6    299F    JP	0x19F
  01B7    3A0C    XORIA	0xC
  01B8    1903    SZB	0x3,2
  01B9    29A1    JP	0x1A1
  01BA    29BB    JP	0x1BB
198:              				case 4:
199:              				procKey1();
200:              				break;
201:              				case 8:
202:              				procKey2();
203:              				break;
204:              				default:
205:              				break;
206:              			}
207:              		}
208:              		keyLockFlag = 1;	//锁定按键
  01BB    16F0    SETB	0x70,5
209:              	}
  01BC    0008    RET
210:              	else
211:              	{
212:              		KeyOldFlag = 0;
  01BD    01BA    CLR	0x3A
  01BE    01BB    CLR	0x3B
213:              		keyLockFlag = 0;
  01BF    12F0    CLRB	0x70,5
214:              		if(doubleTouchFlag)
  01C0    1E70    SNZB	0x70,4
  01C1    0008    RET
215:              		{
216:              			//同时按下并松开后
217:              			ONFlag = !ONFlag;
  01C2    3080    LDIA	0x80
  01C3    06F0    XORR	0x70
218:              		}
219:              		doubleTouchFlag = 0;
  01C4    1270    CLRB	0x70,4
  01C5    0008    RET
220:              	}
221:              }
222:              //检测红外遮挡
223:              void checkIRKey()
224:              {
225:              	if(getbit(PORTB, 2))
  01C6    0806    LD	A,0x6
  01C7    00F4    LD	0x74,A
  01C8    1003    CLRB	0x3,0
  01C9    0CF4    RRCR	0x74
  01CA    1003    CLRB	0x3,0
  01CB    0CF4    RRCR	0x74
  01CC    1874    SZB	0x74,0
226:              	{
227:              		revCount++;		//检测到遮挡了
  01CD    0AC7    INCR	0x47
228:              	}
229:              	
230:              	if(checkCount > 10 && irStep)
  01CE    300B    LDIA	0xB
  01CF    0245    SUBA	0x45
  01D0    1C03    SNZB	0x3,0
  01D1    29D7    JP	0x1D7
  01D2    0848    LD	A,0x48
  01D3    1903    SZB	0x3,2
  01D4    29D7    JP	0x1D7
231:              	{
232:              		sendFlag = 0;
  01D5    1078    CLRB	0x78,0
233:              	}
  01D6    29D8    JP	0x1D8
234:              	else
235:              	{
236:              		sendFlag = 1;	//未检测到遮挡
  01D7    1478    SETB	0x78,0
237:              	}
238:              	
239:              	if(++checkCount >= 20)
  01D8    3014    LDIA	0x14
  01D9    0AC5    INCR	0x45
  01DA    0245    SUBA	0x45
  01DB    1C03    SNZB	0x3,0
  01DC    0008    RET
240:              	{
241:              		if(revCount > 2)
  01DD    3003    LDIA	0x3
  01DE    0247    SUBA	0x47
  01DF    1C03    SNZB	0x3,0
  01E0    29ED    JP	0x1ED
242:              		{
243:              			if(irStep == 0)
  01E1    0848    LD	A,0x48
  01E2    1D03    SNZB	0x3,2
  01E3    29EB    JP	0x1EB
244:              			{
245:              				irStep = 1;		//检测到遮挡了
  01E4    3001    LDIA	0x1
  01E5    00C8    LD	0x48,A
246:              				if(ONFlag == 1)
  01E6    1FF0    SNZB	0x70,7
  01E7    29EA    JP	0x1EA
247:              				{
248:              					ONFlag = 0;			
  01E8    13F0    CLRB	0x70,7
249:              				}
  01E9    29EB    JP	0x1EB
250:              				else
251:              				{
252:              					ONFlag = 1;
  01EA    17F0    SETB	0x70,7
253:              				}
254:              			}
255:              			revZeroCount = 0;		//重置
  01EB    01C6    CLR	0x46
256:              		}
  01EC    29F5    JP	0x1F5
257:              		else
258:              		{
259:              			if(++revZeroCount > 1)
  01ED    3002    LDIA	0x2
  01EE    0AC6    INCR	0x46
  01EF    0246    SUBA	0x46
  01F0    1C03    SNZB	0x3,0
  01F1    29F5    JP	0x1F5
260:              			{
261:              				revZeroCount = 1;
  01F2    01C6    CLR	0x46
  01F3    0AC6    INCR	0x46
262:              				irStep = 0;			//移开了
  01F4    01C8    CLR	0x48
263:              			}
264:              		}
265:              
266:              		
267:              		sendFlag = 1;		//重置检测条件
  01F5    1478    SETB	0x78,0
268:              		checkCount = 0;
  01F6    01C5    CLR	0x45
269:              		revCount = 0;
  01F7    01C7    CLR	0x47
  01F8    0008    RET
270:              	}
271:              		
272:              }
273:              
274:              
275:              /***********************************************************
276:              中断服务函数
277:              ***********************************************************/
278:              void interrupt Isr_Timer()
279:              {
280:              	if(TMR2IF)				//若只使能了一个中断源,可以略去判断
  027D    1283    CLRB	0x3,5
  027E    1303    CLRB	0x3,6
  027F    1C8C    SNZB	0xC,1
  0280    2A98    JP	0x298
281:              	{
282:              		TMR2IF = 0;
  0281    108C    CLRB	0xC,1
283:              		
284:              		if(++MainTime >= 32)
  0282    3020    LDIA	0x20
  0283    0AC9    INCR	0x49
  0284    0249    SUBA	0x49
  0285    1C03    SNZB	0x3,0
  0286    2A89    JP	0x289
285:              		{
286:              			MainTime = 0;
  0287    01C9    CLR	0x49
287:              			B_MainLoop = 1;
  0288    1571    SETB	0x71,2
288:              		}
289:              		//模拟pwm输出
290:              		if(pwmTime < 12 && sendFlag)
  0289    300C    LDIA	0xC
  028A    0279    SUBA	0x79
  028B    1C03    SNZB	0x3,0
  028C    1C78    SNZB	0x78,0
  028D    2A90    JP	0x290
291:              			resetbit(PORTA, 3);
  028E    1185    CLRB	0x5,3
  028F    2A91    JP	0x291
292:              		else
293:              			setbit(PORTA, 3);
  0290    1585    SETB	0x5,3
294:              		if(++pwmTime >= 44)
  0291    302C    LDIA	0x2C
  0292    0AF9    INCR	0x79
  0293    0279    SUBA	0x79
  0294    1C03    SNZB	0x3,0
  0295    2A99    JP	0x299
295:              		{
296:              			pwmTime = 0;
  0296    01F9    CLR	0x79
  0297    2A99    JP	0x299
297:              		}
298:              	}
299:              	else
300:              	{
301:              		PIR1 = 0;
  0298    018C    CLR	0xC
  0299    0873    LD	A,0x73
  029A    008A    LD	0xA,A
  029B    0E72    SWAPA	0x72
  029C    0083    LD	0x3,A
  029D    0EFE    SWAPR	0x7E
  029E    0E7E    SWAPA	0x7E
  029F    0009    RETI
302:              	//	PIR2 = 0;
303:              	}
304:              }
305:              
306:              /***********************************************************
307:              主循环
308:              ***********************************************************/
309:              void main()
310:              {
311:              	PORTB = 0x00;
  033E    0186    CLR	0x6
312:              	PORTA = 0x00;
  033F    0185    CLR	0x5
313:              	Init_System();
  0340    22A0    CALL	0x2A0
314:              	sendFlag = 1;
  0341    1478    SETB	0x78,0
315:              	//initPWM();
316:              	while(1)
  0342    0064    CLRWDT
317:              	{
318:              		CLRWDT();
319:              		if(B_MainLoop)
  0343    1D71    SNZB	0x71,2
  0344    2B42    JP	0x342
320:              		{
321:              			B_MainLoop = 0;
  0345    1171    CLRB	0x71,2
322:              			//sRefurbish_Sfr();
323:              			CheckTouchKey();
  0346    2257    CALL	0x257
324:              			KeyServer();
  0347    2187    CALL	0x187
325:              			checkIRKey();
  0348    21C6    CALL	0x1C6
326:              			if(ONFlag)
  0349    1FF0    SNZB	0x70,7
  034A    2B4D    JP	0x34D
327:              			{
328:              				startPWM();
  034B    23B9    CALL	0x3B9
329:              			}
  034C    2B42    JP	0x342
330:              			else
331:              			{
332:              				PWMCON0 = 0;
  034D    0193    CLR	0x13
333:              				PORTB &= 0x7F;
  034E    1386    CLRB	0x6,7
334:              				PORTA &= 0xDF;
  034F    1285    CLRB	0x5,5
  0350    2B42    JP	0x342
335:              			}
336:              			/**
337:              			if(ONFlag && pwmFlag == 0)
338:              			{
339:              				startPWM();
340:              			}
341:              			else if(ONFlag == 0 && pwmFlag == 1)
342:              			{
343:              				PWMCON0 = 0;
344:              				pwmFlag = 0;
345:              				PORTB &= 0x7F;
346:              				PORTA &= 0xDF;
347:              			}
348:              			
349:              			*/
350:              		}
351:              	}
352:              }
---- C:\Users\mxy\Desktop\keytest2\pwm.c ----------------------------------------------------------------------
1:                #include <sc.h>
2:                #include "pwm.h"
3:                
4:                void initPWM()
5:                {
6:                	PWMCON1 = 0x40;	//选择C组PWM
  0392    3040    LDIA	0x40
  0393    0094    LD	0x14,A
7:                	PWMCON0 = 0x23;//分频比 1：4
  0394    3023    LDIA	0x23
  0395    0093    LD	0x13,A
8:                	PWMCON2 = 0;
  0396    019D    CLR	0x1D
9:                	PWMTH = 0;
  0397    0196    CLR	0x16
10:               	PWMTL = 125;		//约等于32K
  0398    307D    LDIA	0x7D
  0399    0095    LD	0x15,A
11:               	PWMD0L = 1;
  039A    3001    LDIA	0x1
  039B    0097    LD	0x17,A
12:               	PWMD1L = 1;		//pwm1占空比
  039C    0098    LD	0x18,A
13:               	PWMD01H = 0;
  039D    019C    CLR	0x1C
  039E    0008    RET
14:               }
15:               
16:               void mode1()
17:               {
18:               	PWMD0L = 1;
  03E8    3001    LDIA	0x1
  03E9    0097    LD	0x17,A
19:               	PWMD01H = 0;
  03EA    019C    CLR	0x1C
  03EB    0008    RET
20:               }
21:               
22:               void mode2()
23:               {
24:               	PWMD0L = 12;
  03E4    300C    LDIA	0xC
  03E5    0097    LD	0x17,A
25:               	PWMD01H = 0;
  03E6    019C    CLR	0x1C
  03E7    0008    RET
26:               }
27:               
28:               void mode3()
29:               {
30:               	PWMD0L = 20;
  03E0    3014    LDIA	0x14
  03E1    0097    LD	0x17,A
31:               	PWMD01H = 0;
  03E2    019C    CLR	0x1C
  03E3    0008    RET
32:               }
33:               
34:               void mode4()
35:               {
36:               	PWMD0L = 71;
  03DC    3047    LDIA	0x47
  03DD    0097    LD	0x17,A
37:               	PWMD01H = 0;
  03DE    019C    CLR	0x1C
  03DF    0008    RET
38:               }
39:               
40:               void mode5()
41:               {
42:               	PWMD0L = 125;
  03D8    307D    LDIA	0x7D
  03D9    0097    LD	0x17,A
43:               	PWMD01H = 0;
  03DA    019C    CLR	0x1C
  03DB    0008    RET
44:               }
45:               
46:               void modea()
47:               {
48:               	PWMD1L = 125;
  03D4    307D    LDIA	0x7D
  03D5    0098    LD	0x18,A
49:               	PWMD01H = 0;
  03D6    019C    CLR	0x1C
  03D7    0008    RET
50:               }
51:               
52:               void modeb()
53:               {
54:               	PWMCON0 = 0x21;
  03D0    3021    LDIA	0x21
  03D1    0093    LD	0x13,A
55:               	resetbit(PORTB, 7);
  03D2    1386    CLRB	0x6,7
  03D3    0008    RET
56:               }
57:               
58:               void modec()
59:               {
60:               	PWMD1L = 31;
  03B3    301F    LDIA	0x1F
  03B4    0098    LD	0x18,A
61:               	PWMCON0 = 0x23;
  03B5    3023    LDIA	0x23
  03B6    0093    LD	0x13,A
62:               	PWMD01H = 0;
  03B7    019C    CLR	0x1C
  03B8    0008    RET
63:               }
64:               
65:               void moded()
66:               {
67:               	PWMD1L = 62;
  03CC    303E    LDIA	0x3E
  03CD    0098    LD	0x18,A
68:               	PWMD01H = 0;
  03CE    019C    CLR	0x1C
  03CF    0008    RET
69:               }
70:               
71:               void modee()
72:               {
73:               	PWMD1L = 94;
  03C8    305E    LDIA	0x5E
  03C9    0098    LD	0x18,A
74:               	PWMD01H = 0;
  03CA    019C    CLR	0x1C
  03CB    0008    RET
75:               }
76:               
---- library_code ------------------------------------------------------------------
  0018    1283    CLRB	0x3,5
  0019    1303    CLRB	0x3,6
  001A    01D6    CLR	0x56
  001B    01B6    CLR	0x36
  001C    01B7    CLR	0x37
  001D    01C3    CLR	0x43
  001E    0856    LD	A,0x56
  001F    3907    ANDIA	0x7
  0020    3E01    ADDIA	0x1
  0021    0084    LD	0x4,A
  0022    232A    CALL	0x32A
  0023    00D0    LD	0x50,A
  0024    1003    CLRB	0x3,0
  0025    0D56    RLCA	0x56
  0026    3E30    ADDIA	0x30
  0027    0084    LD	0x4,A
  0028    3003    LDIA	0x3
  0029    0A84    INCR	0x4
  002A    1003    CLRB	0x3,0
  002B    1383    CLRB	0x3,7
  002C    0C80    RRCR	0x0
  002D    0384    DECR	0x4
  002E    0C80    RRCR	0x0
  002F    3EFF    ADDIA	0xFF
  0030    1D03    SNZB	0x3,2
  0031    2829    JP	0x29
  0032    1003    CLRB	0x3,0
  0033    0D56    RLCA	0x56
  0034    3E30    ADDIA	0x30
  0035    0084    LD	0x4,A
  0036    0800    LD	A,0x0
  0037    00D4    LD	0x54,A
  0038    0A84    INCR	0x4
  0039    0800    LD	A,0x0
  003A    00D5    LD	0x55,A
  003B    0856    LD	A,0x56
  003C    3E09    ADDIA	0x9
  003D    0084    LD	0x4,A
  003E    232A    CALL	0x32A
  003F    00D3    LD	0x53,A
  0040    00D1    LD	0x51,A
  0041    01D2    CLR	0x52
  0042    0854    LD	A,0x54
  0043    07D1    ADDR	0x51
  0044    1803    SZB	0x3,0
  0045    0AD2    INCR	0x52
  0046    0855    LD	A,0x55
  0047    07D2    ADDR	0x52
  0048    0856    LD	A,0x56
  0049    2363    CALL	0x363
  004A    3A00    XORIA	0x0
  004B    1003    CLRB	0x3,0
  004C    1D03    SNZB	0x3,2
  004D    28A5    JP	0xA5
  004E    0D56    RLCA	0x56
  004F    3E24    ADDIA	0x24
  0050    0084    LD	0x4,A
  0051    1383    CLRB	0x3,7
  0052    0800    LD	A,0x0
  0053    00CE    LD	0x4E,A
  0054    0A84    INCR	0x4
  0055    0800    LD	A,0x0
  0056    00CF    LD	0x4F,A
  0057    1003    CLRB	0x3,0
  0058    0D56    RLCA	0x56
  0059    3E20    ADDIA	0x20
  005A    20FF    CALL	0xFF
  005B    0252    SUBA	0x52
  005C    1D03    SNZB	0x3,2
  005D    2860    JP	0x60
  005E    084A    LD	A,0x4A
  005F    0251    SUBA	0x51
  0060    1803    SZB	0x3,0
  0061    286E    JP	0x6E
  0062    1003    CLRB	0x3,0
  0063    0D56    RLCA	0x56
  0064    3E20    ADDIA	0x20
  0065    20FF    CALL	0xFF
  0066    0854    LD	A,0x54
  0067    024A    SUBA	0x4A
  0068    00D4    LD	0x54,A
  0069    0855    LD	A,0x55
  006A    1C03    SNZB	0x3,0
  006B    0A55    INCA	0x55
  006C    024B    SUBA	0x4B
  006D    2891    JP	0x91
  006E    084F    LD	A,0x4F
  006F    0252    SUBA	0x52
  0070    1D03    SNZB	0x3,2
  0071    2874    JP	0x74
  0072    084E    LD	A,0x4E
  0073    0251    SUBA	0x51
  0074    1803    SZB	0x3,0
  0075    28E5    JP	0xE5
  0076    1003    CLRB	0x3,0
  0077    0D56    RLCA	0x56
  0078    3E28    ADDIA	0x28
  0079    20FF    CALL	0xFF
  007A    0252    SUBA	0x52
  007B    1D03    SNZB	0x3,2
  007C    287F    JP	0x7F
  007D    084A    LD	A,0x4A
  007E    0251    SUBA	0x51
  007F    1803    SZB	0x3,0
  0080    28E5    JP	0xE5
  0081    1003    CLRB	0x3,0
  0082    0D56    RLCA	0x56
  0083    3E20    ADDIA	0x20
  0084    0084    LD	0x4,A
  0085    084E    LD	A,0x4E
  0086    0080    LD	0x0,A
  0087    0A84    INCR	0x4
  0088    084F    LD	A,0x4F
  0089    0080    LD	0x0,A
  008A    0854    LD	A,0x54
  008B    024E    SUBA	0x4E
  008C    00D4    LD	0x54,A
  008D    0855    LD	A,0x55
  008E    1C03    SNZB	0x3,0
  008F    0A55    INCA	0x55
  0090    024F    SUBA	0x4F
  0091    00D5    LD	0x55,A
  0092    0856    LD	A,0x56
  0093    3E3C    ADDIA	0x3C
  0094    0084    LD	0x4,A
  0095    0180    CLR	0x0
  0096    0855    LD	A,0x55
  0097    1903    SZB	0x3,2
  0098    289B    JP	0x9B
  0099    30FF    LDIA	0xFF
  009A    289C    JP	0x9C
  009B    0854    LD	A,0x54
  009C    00D3    LD	0x53,A
  009D    0243    SUBA	0x43
  009E    1803    SZB	0x3,0
  009F    28A3    JP	0xA3
  00A0    0853    LD	A,0x53
  00A1    00C3    LD	0x43,A
  00A2    28E0    JP	0xE0
  00A3    0AC4    INCR	0x44
  00A4    28E5    JP	0xE5
  00A5    0D56    RLCA	0x56
  00A6    3E20    ADDIA	0x20
  00A7    0084    LD	0x4,A
  00A8    1383    CLRB	0x3,7
  00A9    0800    LD	A,0x0
  00AA    00CA    LD	0x4A,A
  00AB    0A84    INCR	0x4
  00AC    0800    LD	A,0x0
  00AD    00CB    LD	0x4B,A
  00AE    084A    LD	A,0x4A
  00AF    3E01    ADDIA	0x1
  00B0    00CC    LD	0x4C,A
  00B1    084B    LD	A,0x4B
  00B2    1803    SZB	0x3,0
  00B3    3E01    ADDIA	0x1
  00B4    00CD    LD	0x4D,A
  00B5    0852    LD	A,0x52
  00B6    024D    SUBA	0x4D
  00B7    1D03    SNZB	0x3,2
  00B8    28BB    JP	0xBB
  00B9    0851    LD	A,0x51
  00BA    024C    SUBA	0x4C
  00BB    1C03    SNZB	0x3,0
  00BC    28E5    JP	0xE5
  00BD    1003    CLRB	0x3,0
  00BE    0D56    RLCA	0x56
  00BF    3E24    ADDIA	0x24
  00C0    0084    LD	0x4,A
  00C1    0800    LD	A,0x0
  00C2    20ED    CALL	0xED
  00C3    1C03    SNZB	0x3,0
  00C4    28CD    JP	0xCD
  00C5    1003    CLRB	0x3,0
  00C6    0D56    RLCA	0x56
  00C7    3E28    ADDIA	0x28
  00C8    0084    LD	0x4,A
  00C9    0800    LD	A,0x0
  00CA    20ED    CALL	0xED
  00CB    1803    SZB	0x3,0
  00CC    28D8    JP	0xD8
  00CD    0856    LD	A,0x56
  00CE    3E3C    ADDIA	0x3C
  00CF    0084    LD	0x4,A
  00D0    3009    LDIA	0x9
  00D1    0A80    INCR	0x0
  00D2    0200    SUBA	0x0
  00D3    1C03    SNZB	0x3,0
  00D4    28DC    JP	0xDC
  00D5    0856    LD	A,0x56
  00D6    22FC    CALL	0x2FC
  00D7    28E5    JP	0xE5
  00D8    0856    LD	A,0x56
  00D9    3E3C    ADDIA	0x3C
  00DA    0084    LD	0x4,A
  00DB    0180    CLR	0x0
  00DC    0837    LD	A,0x37
  00DD    0436    ORA	0x36
  00DE    1D03    SNZB	0x3,2
  00DF    28E5    JP	0xE5
  00E0    0850    LD	A,0x50
  00E1    00F4    LD	0x74,A
  00E2    01F5    CLR	0x75
  00E3    0856    LD	A,0x56
  00E4    239F    CALL	0x39F
  00E5    3002    LDIA	0x2
  00E6    1283    CLRB	0x3,5
  00E7    1303    CLRB	0x3,6
  00E8    0AD6    INCR	0x56
  00E9    0256    SUBA	0x56
  00EA    1803    SZB	0x3,0
  00EB    0008    RET
  00EC    281E    JP	0x1E
  0106    3004    LDIA	0x4
  0107    1283    CLRB	0x3,5
  0108    1303    CLRB	0x3,6
  0109    01CE    CLR	0x4E
  010A    0AC2    INCR	0x42
  010B    0242    SUBA	0x42
  010C    1C03    SNZB	0x3,0
  010D    0008    RET
  010E    01C2    CLR	0x42
  010F    1003    CLRB	0x3,0
  0110    0D4E    RLCA	0x4E
  0111    3E30    ADDIA	0x30
  0112    0084    LD	0x4,A
  0113    1383    CLRB	0x3,7
  0114    0800    LD	A,0x0
  0115    00CA    LD	0x4A,A
  0116    0A84    INCR	0x4
  0117    0800    LD	A,0x0
  0118    00CB    LD	0x4B,A
  0119    084E    LD	A,0x4E
  011A    2363    CALL	0x363
  011B    3A00    XORIA	0x0
  011C    1003    CLRB	0x3,0
  011D    1D03    SNZB	0x3,2
  011E    294F    JP	0x14F
  011F    0D4E    RLCA	0x4E
  0120    3E2C    ADDIA	0x2C
  0121    0084    LD	0x4,A
  0122    1383    CLRB	0x3,7
  0123    2160    CALL	0x160
  0124    1903    SZB	0x3,2
  0125    024C    SUBA	0x4C
  0126    1C03    SNZB	0x3,0
  0127    292E    JP	0x12E
  0128    0F4C    SZINCA	0x4C
  0129    294E    JP	0x14E
  012A    0A4D    INCA	0x4D
  012B    1003    CLRB	0x3,0
  012C    1D03    SNZB	0x3,2
  012D    294F    JP	0x14F
  012E    0D4E    RLCA	0x4E
  012F    3E28    ADDIA	0x28
  0130    0084    LD	0x4,A
  0131    2160    CALL	0x160
  0132    1903    SZB	0x3,2
  0133    024C    SUBA	0x4C
  0134    1C03    SNZB	0x3,0
  0135    293C    JP	0x13C
  0136    0F4C    SZINCA	0x4C
  0137    294E    JP	0x14E
  0138    0A4D    INCA	0x4D
  0139    1003    CLRB	0x3,0
  013A    1D03    SNZB	0x3,2
  013B    294F    JP	0x14F
  013C    0D4E    RLCA	0x4E
  013D    3E24    ADDIA	0x24
  013E    0084    LD	0x4,A
  013F    2160    CALL	0x160
  0140    1903    SZB	0x3,2
  0141    024C    SUBA	0x4C
  0142    1C03    SNZB	0x3,0
  0143    294A    JP	0x14A
  0144    0F4C    SZINCA	0x4C
  0145    294E    JP	0x14E
  0146    0A4D    INCA	0x4D
  0147    1003    CLRB	0x3,0
  0148    1D03    SNZB	0x3,2
  0149    294F    JP	0x14F
  014A    0D4E    RLCA	0x4E
  014B    3E20    ADDIA	0x20
  014C    0084    LD	0x4,A
  014D    2181    CALL	0x181
  014E    1003    CLRB	0x3,0
  014F    0D4E    RLCA	0x4E
  0150    3E28    ADDIA	0x28
  0151    0084    LD	0x4,A
  0152    1383    CLRB	0x3,7
  0153    2179    CALL	0x179
  0154    3E24    ADDIA	0x24
  0155    216E    CALL	0x16E
  0156    2179    CALL	0x179
  0157    3E28    ADDIA	0x28
  0158    216E    CALL	0x16E
  0159    2181    CALL	0x181
  015A    3002    LDIA	0x2
  015B    0ACE    INCR	0x4E
  015C    024E    SUBA	0x4E
  015D    1803    SZB	0x3,0
  015E    0008    RET
  015F    290F    JP	0x10F
  01F9    0837    LD	A,0x37
  01FA    0436    ORA	0x36
  01FB    1903    SZB	0x3,2
  01FC    2A1B    JP	0x21B
  01FD    01C0    CLR	0x40
  01FE    0836    LD	A,0x36
  01FF    0638    XORA	0x38
  0200    1D03    SNZB	0x3,2
  0201    2A14    JP	0x214
  0202    0837    LD	A,0x37
  0203    0639    XORA	0x39
  0204    1D03    SNZB	0x3,2
  0205    2A14    JP	0x214
  0206    3002    LDIA	0x2
  0207    0AC1    INCR	0x41
  0208    0241    SUBA	0x41
  0209    1C03    SNZB	0x3,0
  020A    0008    RET
  020B    01C1    CLR	0x41
  020C    0836    LD	A,0x36
  020D    00BE    LD	0x3E,A
  020E    0837    LD	A,0x37
  020F    00BF    LD	0x3F,A
  0210    18F0    SZB	0x70,1
  0211    0008    RET
  0212    14F0    SETB	0x70,1
  0213    2B84    JP	0x384
  0214    10F0    CLRB	0x70,1
  0215    0836    LD	A,0x36
  0216    00B8    LD	0x38,A
  0217    0837    LD	A,0x37
  0218    00B9    LD	0x39,A
  0219    01C1    CLR	0x41
  021A    0008    RET
  021B    01C1    CLR	0x41
  021C    01B8    CLR	0x38
  021D    01B9    CLR	0x39
  021E    3002    LDIA	0x2
  021F    0AC0    INCR	0x40
  0220    0240    SUBA	0x40
  0221    1C03    SNZB	0x3,0
  0222    0008    RET
  0223    01C0    CLR	0x40
  0224    01BE    CLR	0x3E
  0225    01BF    CLR	0x3F
  0226    10F0    CLRB	0x70,1
  0227    0008    RET
  0228    01F6    CLR	0x76
  0229    1683    SETB	0x3,5
  022A    1303    CLRB	0x3,6
  022B    0192    CLR	0x12
  022C    0193    CLR	0x13
  022D    0876    LD	A,0x76
  022E    3E0B    ADDIA	0xB
  022F    0084    LD	0x4,A
  0230    232A    CALL	0x32A
  0231    0092    LD	0x12,A
  0232    0876    LD	A,0x76
  0233    3E0D    ADDIA	0xD
  0234    0084    LD	0x4,A
  0235    232A    CALL	0x32A
  0236    0093    LD	0x13,A
  0237    1412    SETB	0x12,0
  0238    01F5    CLR	0x75
  0239    1B92    SZB	0x12,7
  023A    2A41    JP	0x241
  023B    0BF5    SZDECR	0x75
  023C    2A39    JP	0x239
  023D    30FF    LDIA	0xFF
  023E    1283    CLRB	0x3,5
  023F    00C4    LD	0x44,A
  0240    2B75    JP	0x375
  0241    1003    CLRB	0x3,0
  0242    0D76    RLCA	0x76
  0243    3E30    ADDIA	0x30
  0244    0084    LD	0x4,A
  0245    0814    LD	A,0x14
  0246    1383    CLRB	0x3,7
  0247    0780    ADDR	0x0
  0248    0F84    SZINCR	0x4
  0249    0800    LD	A,0x0
  024A    1803    SZB	0x3,0
  024B    0A00    INCA	0x0
  024C    00FF    LD	0x7F,A
  024D    0815    LD	A,0x15
  024E    077F    ADDA	0x7F
  024F    0080    LD	0x0,A
  0250    3002    LDIA	0x2
  0251    0384    DECR	0x4
  0252    0AF6    INCR	0x76
  0253    0276    SUBA	0x76
  0254    1803    SZB	0x3,0
  0255    0008    RET
  0256    2A29    JP	0x229
  0257    19F0    SZB	0x70,3
  0258    2A63    JP	0x263
  0259    2228    CALL	0x228
  025A    3008    LDIA	0x8
  025B    1283    CLRB	0x3,5
  025C    0AC4    INCR	0x44
  025D    0244    SUBA	0x44
  025E    1C03    SNZB	0x3,0
  025F    2A7C    JP	0x27C
  0260    01C4    CLR	0x44
  0261    15F0    SETB	0x70,3
  0262    2A7C    JP	0x27C
  0263    1970    SZB	0x70,2
  0264    2A78    JP	0x278
  0265    2018    CALL	0x18
  0266    21F9    CALL	0x1F9
  0267    1570    SETB	0x70,2
  0268    1870    SZB	0x70,0
  0269    2A70    JP	0x270
  026A    3002    LDIA	0x2
  026B    1283    CLRB	0x3,5
  026C    1303    CLRB	0x3,6
  026D    0244    SUBA	0x44
  026E    1C03    SNZB	0x3,0
  026F    2A74    JP	0x274
  0270    2315    CALL	0x315
  0271    1070    CLRB	0x70,0
  0272    11F0    CLRB	0x70,3
  0273    1170    CLRB	0x70,2
  0274    1283    CLRB	0x3,5
  0275    1303    CLRB	0x3,6
  0276    01C4    CLR	0x44
  0277    2A7C    JP	0x27C
  0278    2106    CALL	0x106
  0279    2375    CALL	0x375
  027A    11F0    CLRB	0x70,3
  027B    1170    CLRB	0x70,2
  027C    2B51    JP	0x351
  02FC    00F4    LD	0x74,A
  02FD    1003    CLRB	0x3,0
  02FE    0D74    RLCA	0x74
  02FF    3E2C    ADDIA	0x2C
  0300    0084    LD	0x4,A
  0301    1383    CLRB	0x3,7
  0302    230F    CALL	0x30F
  0303    3E28    ADDIA	0x28
  0304    0084    LD	0x4,A
  0305    230F    CALL	0x30F
  0306    3E24    ADDIA	0x24
  0307    0084    LD	0x4,A
  0308    230F    CALL	0x30F
  0309    3E20    ADDIA	0x20
  030A    0084    LD	0x4,A
  030B    0180    CLR	0x0
  030C    0A84    INCR	0x4
  030D    0180    CLR	0x0
  030E    0008    RET
  0315    1283    CLRB	0x3,5
  0316    1303    CLRB	0x3,6
  0317    01BE    CLR	0x3E
  0318    01BF    CLR	0x3F
  0319    01F5    CLR	0x75
  031A    1003    CLRB	0x3,0
  031B    0D75    RLCA	0x75
  031C    3E30    ADDIA	0x30
  031D    0084    LD	0x4,A
  031E    1383    CLRB	0x3,7
  031F    0180    CLR	0x0
  0320    0A84    INCR	0x4
  0321    0180    CLR	0x0
  0322    0875    LD	A,0x75
  0323    22FC    CALL	0x2FC
  0324    3002    LDIA	0x2
  0325    0AF5    INCR	0x75
  0326    0275    SUBA	0x75
  0327    1803    SZB	0x3,0
  0328    0008    RET
  0329    2B1A    JP	0x31A
  0351    083F    LD	A,0x3F
  0352    043E    ORA	0x3E
  0353    1903    SZB	0x3,2
  0354    2B60    JP	0x360
  0355    0AB4    INCR	0x34
  0356    1903    SZB	0x3,2
  0357    0AB5    INCR	0x35
  0358    303A    LDIA	0x3A
  0359    0235    SUBA	0x35
  035A    3098    LDIA	0x98
  035B    1903    SZB	0x3,2
  035C    0234    SUBA	0x34
  035D    1C03    SNZB	0x3,0
  035E    0008    RET
  035F    1470    SETB	0x70,0
  0360    01B4    CLR	0x34
  0361    01B5    CLR	0x35
  0362    0008    RET
  0363    00F5    LD	0x75,A
  0364    3907    ANDIA	0x7
  0365    3E01    ADDIA	0x1
  0366    0084    LD	0x4,A
  0367    232A    CALL	0x32A
  0368    00F4    LD	0x74,A
  0369    1DF5    SNZB	0x75,3
  036A    2B6F    JP	0x36F
  036B    1283    CLRB	0x3,5
  036C    1303    CLRB	0x3,6
  036D    083F    LD	A,0x3F
  036E    2B72    JP	0x372
  036F    1283    CLRB	0x3,5
  0370    1303    CLRB	0x3,6
  0371    083E    LD	A,0x3E
  0372    05F4    ANDR	0x74
  0373    0874    LD	A,0x74
  0374    0008    RET
  0375    01F4    CLR	0x74
  0376    1003    CLRB	0x3,0
  0377    0D74    RLCA	0x74
  0378    3E30    ADDIA	0x30
  0379    0084    LD	0x4,A
  037A    3002    LDIA	0x2
  037B    1383    CLRB	0x3,7
  037C    0180    CLR	0x0
  037D    0A84    INCR	0x4
  037E    0180    CLR	0x0
  037F    0AF4    INCR	0x74
  0380    0274    SUBA	0x74
  0381    1803    SZB	0x3,0
  0382    0008    RET
  0383    2B76    JP	0x376
  0384    01F6    CLR	0x76
  0385    0876    LD	A,0x76
  0386    2363    CALL	0x363
  0387    3A00    XORIA	0x0
  0388    1D03    SNZB	0x3,2
  0389    2B8C    JP	0x38C
  038A    0876    LD	A,0x76
  038B    22FC    CALL	0x2FC
  038C    3002    LDIA	0x2
  038D    0AF6    INCR	0x76
  038E    0276    SUBA	0x76
  038F    1803    SZB	0x3,0
  0390    0008    RET
  0391    2B85    JP	0x385
  039F    00F6    LD	0x76,A
  03A0    0AC4    INCR	0x44
  03A1    01B6    CLR	0x36
  03A2    01B7    CLR	0x37
  03A3    1DF6    SNZB	0x76,3
  03A4    2BA8    JP	0x3A8
  03A5    0874    LD	A,0x74
  03A6    00B7    LD	0x37,A
  03A7    0008    RET
  03A8    0874    LD	A,0x74
  03A9    00B6    LD	0x36,A
  03AA    0008    RET
---- stringtab ------------------------------------------------------------------
  032A    3003    LDIA	0x3
  032B    008A    LD	0xA,A
  032C    0804    LD	A,0x4
  032D    0A84    INCR	0x4
  032E    0782    ADDR	0x2
  032F    3400    RET	0x0
---- reset_enter ------------------------------------------------------------------
  0000    280A    JP	0xA
  000A    280B    JP	0xB
---- start_initialization ------------------------------------------------------------------
  000B    3001    LDIA	0x1
  000C    00D7    LD	0x57,A
  000D    00D8    LD	0x58,A
  000E    3020    LDIA	0x20
  000F    1383    CLRB	0x3,7
  0010    0084    LD	0x4,A
  0011    304A    LDIA	0x4A
  0012    23AB    CALL	0x3AB
  0013    01F9    CLR	0x79
  0014    01F0    CLR	0x70
  0015    01F1    CLR	0x71
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F2    LD	0x72,A
  0007    080A    LD	A,0xA
  0008    00F3    LD	0x73,A
  0009    2A7D    JP	0x27D
---- common_function ------------------------------------------------------------------
  0016    0183    CLR	0x3
  0017    2B3E    JP	0x33E
  00ED    00CA    LD	0x4A,A
  00EE    0A84    INCR	0x4
  00EF    0800    LD	A,0x0
  00F0    00CB    LD	0x4B,A
  00F1    0853    LD	A,0x53
  00F2    074A    ADDA	0x4A
  00F3    00CC    LD	0x4C,A
  00F4    084B    LD	A,0x4B
  00F5    1803    SZB	0x3,0
  00F6    0A4B    INCA	0x4B
  00F7    00CD    LD	0x4D,A
  00F8    0855    LD	A,0x55
  00F9    024D    SUBA	0x4D
  00FA    1D03    SNZB	0x3,2
  00FB    0008    RET
  00FC    0854    LD	A,0x54
  00FD    024C    SUBA	0x4C
  00FE    0008    RET
  00FF    0084    LD	0x4,A
  0100    0800    LD	A,0x0
  0101    00CA    LD	0x4A,A
  0102    0A84    INCR	0x4
  0103    0800    LD	A,0x0
  0104    00CB    LD	0x4B,A
  0105    0008    RET
  0160    0800    LD	A,0x0
  0161    00CC    LD	0x4C,A
  0162    0A84    INCR	0x4
  0163    0800    LD	A,0x0
  0164    00CD    LD	0x4D,A
  0165    084A    LD	A,0x4A
  0166    02CC    SUBR	0x4C
  0167    084B    LD	A,0x4B
  0168    1C03    SNZB	0x3,0
  0169    03CD    DECR	0x4D
  016A    02CD    SUBR	0x4D
  016B    3000    LDIA	0x0
  016C    024D    SUBA	0x4D
  016D    3402    RET	0x2
  016E    0084    LD	0x4,A
  016F    0876    LD	A,0x76
  0170    0080    LD	0x0,A
  0171    0A84    INCR	0x4
  0172    0877    LD	A,0x77
  0173    0080    LD	0x0,A
  0174    1003    CLRB	0x3,0
  0175    0D4E    RLCA	0x4E
  0176    3E2C    ADDIA	0x2C
  0177    0084    LD	0x4,A
  0178    0008    RET
  0179    0800    LD	A,0x0
  017A    00F6    LD	0x76,A
  017B    0A84    INCR	0x4
  017C    0800    LD	A,0x0
  017D    00F7    LD	0x77,A
  017E    1003    CLRB	0x3,0
  017F    0D4E    RLCA	0x4E
  0180    0008    RET
  0181    084A    LD	A,0x4A
  0182    0080    LD	0x0,A
  0183    0A84    INCR	0x4
  0184    084B    LD	A,0x4B
  0185    0080    LD	0x0,A
  0186    0008    RET
  030F    0180    CLR	0x0
  0310    0A84    INCR	0x4
  0311    0180    CLR	0x0
  0312    1003    CLRB	0x3,0
  0313    0D74    RLCA	0x74
  0314    0008    RET
  0330    3401    RET	0x1
  0331    3402    RET	0x2
  0332    3404    RET	0x4
  0333    3408    RET	0x8
  0334    3410    RET	0x10
  0335    3420    RET	0x20
  0336    3440    RET	0x40
  0337    3480    RET	0x80
  0338    340A    RET	0xA
  0339    340A    RET	0xA
  033A    3402    RET	0x2
  033B    3402    RET	0x2
  033C    3460    RET	0x60
  033D    3461    RET	0x61
  03AB    0064    CLRWDT
  03AC    0180    CLR	0x0
  03AD    0A84    INCR	0x4
  03AE    0604    XORA	0x4
  03AF    1903    SZB	0x3,2
  03B0    3400    RET	0x0
  03B1    0604    XORA	0x4
  03B2    2BAC    JP	0x3AC
  03BE    2AD9    JP	0x2D9
  03BF    2ADA    JP	0x2DA
  03C0    2ADB    JP	0x2DB
  03C1    2ADC    JP	0x2DC
  03C2    2ADD    JP	0x2DD
  03C3    2AF7    JP	0x2F7
  03C4    2AF8    JP	0x2F8
  03C5    2AF9    JP	0x2F9
  03C6    2AFA    JP	0x2FA
  03C7    2AFB    JP	0x2FB
