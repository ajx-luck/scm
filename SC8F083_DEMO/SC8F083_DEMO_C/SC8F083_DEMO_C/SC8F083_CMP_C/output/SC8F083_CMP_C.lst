

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 13 13:19:29 2023

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F083
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  0014                     _OSCCON	set	20
    51  0010                     _CMP1CON1	set	16
    52  000F                     _CMP1CON0	set	15
    53  000E                     _PIE1	set	14
    54  000C                     _ODCONB	set	12
    55  000B                     _INTCON	set	11
    56  0009                     _IOCB	set	9
    57  0008                     _WPUB	set	8
    58  0007                     _WPDB	set	7
    59  0006                     _PORTB	set	6
    60  0005                     _TRISB	set	5
    61  0001                     _OPTION_REG	set	1
    62  007F                     _CMP1EN	set	127
    63  006D                     _CMP1IF	set	109
    64  009F                     _CMP2CON1	set	159
    65  009A                     _CMP2CON0	set	154
    66  04D7                     _CMP2EN	set	1239
    67  0110                     _PIE2	set	272
    68  087D                     _CMP2IF	set	2173
    69                           
    70                           	psect	cinit
    71  000D                     start_initialization:	
    72                           ; #config settings
    73                           
    74  000D                     __initialization:	
    75  000D                     end_of_initialization:	
    76                           ;End of C runtime variable initialization code
    77                           
    78  000D                     __end_of__initialization:	
    79  000D  0183               	clrf	3
    80  000E  118A  2810         	ljmp	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMMON
    83  0070                     __pcstackCOMMON:	
    84  0070                     ?_main:	
    85  0070                     ?_CMP_Isr:	
    86                           ; 1 bytes @ 0x0
    87                           
    88  0070                     ??_CMP_Isr:	
    89                           ; 1 bytes @ 0x0
    90                           
    91                           
    92                           ; 1 bytes @ 0x0
    93  0070                     	ds	2
    94  0072                     ??_main:	
    95                           
    96                           	psect	maintext
    97  0010                     __pmaintext:	
    98                           ; 1 bytes @ 0x2
    99 ;;
   100 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   101 ;;
   102 ;; *************** function _main *****************
   103 ;; Defined at:
   104 ;;		line 14 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F083开发包\SC8F083_DEMO_C\SC8F083_CMP_C\SC8F083_CMP_C.c"
   105 ;; Parameters:    Size  Location     Type
   106 ;;		None
   107 ;; Auto vars:     Size  Location     Type
   108 ;;		None
   109 ;; Return value:  Size  Location     Type
   110 ;;                  1    wreg      void 
   111 ;; Registers used:
   112 ;;		wreg, status,2
   113 ;; Tracked objects:
   114 ;;		On entry : B00/0
   115 ;;		On exit  : 0/0
   116 ;;		Unchanged: 0/0
   117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   118 ;;      Params:         0       0       0       0
   119 ;;      Locals:         0       0       0       0
   120 ;;      Temps:          0       0       0       0
   121 ;;      Totals:         0       0       0       0
   122 ;;Total ram usage:        0 bytes
   123 ;; Hardware stack levels required when called:    1
   124 ;; This function calls:
   125 ;;		Nothing
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           
   132                           ;psect for function _main
   133  0010                     _main:	
   134                           
   135                           ;incstack = 0
   136                           ; Regs used in _main: [wreg+status,2]
   137  0010  0000               	nop	;# 
   138  0011  0064               	clrwdt	;# 
   139                           
   140                           ;SC8F083_CMP_C.c: 19: OSCCON = 0x72;
   141  0012  3072               	movlw	114
   142  0013  1283               	bcf	3,5	;RP0=0, select bank0
   143  0014  1303               	bcf	3,6	;RP1=0, select bank0
   144  0015  0094               	movwf	20	;volatile
   145                           
   146                           ;SC8F083_CMP_C.c: 20: OPTION_REG = 0x09;
   147  0016  3009               	movlw	9
   148  0017  0081               	movwf	1	;volatile
   149                           
   150                           ;SC8F083_CMP_C.c: 23: WPUB = 0B00000000;
   151  0018  0188               	clrf	8	;volatile
   152                           
   153                           ;SC8F083_CMP_C.c: 24: WPDB = 0B00000000;
   154  0019  0187               	clrf	7	;volatile
   155                           
   156                           ;SC8F083_CMP_C.c: 25: ODCONB = 0B00000000;
   157  001A  018C               	clrf	12	;volatile
   158                           
   159                           ;SC8F083_CMP_C.c: 26: IOCB = 0B00000000;
   160  001B  0189               	clrf	9	;volatile
   161                           
   162                           ;SC8F083_CMP_C.c: 28: TRISB = 0B00000000;
   163  001C  0185               	clrf	5	;volatile
   164                           
   165                           ;SC8F083_CMP_C.c: 54: CMP1CON0 = 0B00111001;
   166  001D  3039               	movlw	57
   167  001E  008F               	movwf	15	;volatile
   168                           
   169                           ;SC8F083_CMP_C.c: 56: CMP2CON0 = 0B00111001;
   170  001F  1683               	bsf	3,5	;RP0=1, select bank1
   171  0020  009A               	movwf	26	;volatile
   172                           
   173                           ;SC8F083_CMP_C.c: 70: CMP1CON1 = 0B10010111;
   174  0021  3097               	movlw	151
   175  0022  1283               	bcf	3,5	;RP0=0, select bank0
   176  0023  0090               	movwf	16	;volatile
   177                           
   178                           ;SC8F083_CMP_C.c: 72: CMP2CON1 = 0B10000000;
   179  0024  3080               	movlw	128
   180  0025  1683               	bsf	3,5	;RP0=1, select bank1
   181  0026  009F               	movwf	31	;volatile
   182                           
   183                           ;SC8F083_CMP_C.c: 74: INTCON = 0XC0;
   184  0027  30C0               	movlw	192
   185  0028  008B               	movwf	11	;volatile
   186                           
   187                           ;SC8F083_CMP_C.c: 75: PIE1 = 0X20;
   188  0029  3020               	movlw	32
   189  002A  1283               	bcf	3,5	;RP0=0, select bank0
   190  002B  008E               	movwf	14	;volatile
   191                           
   192                           ;SC8F083_CMP_C.c: 76: PIE2 = 0X20;
   193  002C  1703               	bsf	3,6	;RP1=1, select bank2
   194  002D  0090               	movwf	16	;volatile
   195                           
   196                           ;SC8F083_CMP_C.c: 78: CMP1EN = 1;
   197  002E  1303               	bcf	3,6	;RP1=0, select bank0
   198  002F  178F               	bsf	15,7	;volatile
   199                           
   200                           ;SC8F083_CMP_C.c: 79: CMP1IF =0;
   201  0030  128D               	bcf	13,5	;volatile
   202                           
   203                           ;SC8F083_CMP_C.c: 81: CMP2EN = 1;
   204  0031  1683               	bsf	3,5	;RP0=1, select bank1
   205  0032  179A               	bsf	26,7	;volatile
   206                           
   207                           ;SC8F083_CMP_C.c: 82: CMP2IF =0;
   208  0033  1283               	bcf	3,5	;RP0=0, select bank2
   209  0034  1703               	bsf	3,6	;RP1=1, select bank2
   210  0035  128F               	bcf	15,5	;volatile
   211  0036                     l819:	
   212                           ;SC8F083_CMP_C.c: 83: while(1)
   213                           
   214  0036  0064               	clrwdt	;# 
   215  0037  2836               	goto	l819
   216  0038                     __end_of_main:	
   217                           
   218                           	psect	text1
   219  0038                     __ptext1:	
   220 ;; *************** function _CMP_Isr *****************
   221 ;; Defined at:
   222 ;;		line 98 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F083开发包\SC8F083_DEMO_C\SC8F083_CMP_C\SC8F083_CMP_C.c"
   223 ;; Parameters:    Size  Location     Type
   224 ;;		None
   225 ;; Auto vars:     Size  Location     Type
   226 ;;		None
   227 ;; Return value:  Size  Location     Type
   228 ;;                  1    wreg      void 
   229 ;; Registers used:
   230 ;;		wreg, status,2, status,0
   231 ;; Tracked objects:
   232 ;;		On entry : 0/0
   233 ;;		On exit  : 100/0
   234 ;;		Unchanged: 0/0
   235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   236 ;;      Params:         0       0       0       0
   237 ;;      Locals:         0       0       0       0
   238 ;;      Temps:          2       0       0       0
   239 ;;      Totals:         2       0       0       0
   240 ;;Total ram usage:        2 bytes
   241 ;; Hardware stack levels used:    1
   242 ;; This function calls:
   243 ;;		Nothing
   244 ;; This function is called by:
   245 ;;		Interrupt level 1
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           
   250                           ;psect for function _CMP_Isr
   251  0038                     _CMP_Isr:	
   252                           
   253                           ;SC8F083_CMP_C.c: 100: if(CMP1IF)
   254  0038  1283               	bcf	3,5	;RP0=0, select bank0
   255  0039  1303               	bcf	3,6	;RP1=0, select bank0
   256  003A  1E8D               	btfss	13,5	;volatile
   257  003B  283F               	goto	i1l1247
   258                           
   259                           ;SC8F083_CMP_C.c: 101: {
   260                           ;SC8F083_CMP_C.c: 102: CMP1IF = 0;
   261  003C  128D               	bcf	13,5	;volatile
   262                           
   263                           ;SC8F083_CMP_C.c: 103: PORTB ^= 0X80;
   264  003D  3080               	movlw	128
   265  003E  0686               	xorwf	6,f	;volatile
   266  003F                     i1l1247:	
   267                           
   268                           ;SC8F083_CMP_C.c: 105: }
   269                           ;SC8F083_CMP_C.c: 106: if(CMP2IF)
   270  003F  1703               	bsf	3,6	;RP1=1, select bank2
   271  0040  1E8F               	btfss	15,5	;volatile
   272  0041  2846               	goto	i1l829
   273                           
   274                           ;SC8F083_CMP_C.c: 107: {
   275                           ;SC8F083_CMP_C.c: 108: CMP2IF = 0;
   276  0042  128F               	bcf	15,5	;volatile
   277                           
   278                           ;SC8F083_CMP_C.c: 109: PORTB ^= 0X40;
   279  0043  3040               	movlw	64
   280  0044  1303               	bcf	3,6	;RP1=0, select bank0
   281  0045  0686               	xorwf	6,f	;volatile
   282  0046                     i1l829:	
   283  0046  0871               	movf	??_CMP_Isr+1,w
   284  0047  008A               	movwf	10
   285  0048  0E70               	swapf	??_CMP_Isr^(0+-128),w
   286  0049  0083               	movwf	3
   287  004A  0EFE               	swapf	126,f
   288  004B  0E7E               	swapf	126,w
   289  004C  0009               	retfie
   290  004D                     __end_of_CMP_Isr:	
   291  007E                     btemp	set	126	;btemp
   292  007E                     wtemp0	set	126
   293                           
   294                           	psect	intentry
   295  0004                     __pintentry:	
   296                           ;incstack = 0
   297                           ; Regs used in _CMP_Isr: [wreg+status,2+status,0]
   298                           
   299  0004                     interrupt_function:	
   300  007E                     saved_w	set	btemp
   301  0004  00FE               	movwf	btemp
   302  0005  0E03               	swapf	3,w
   303  0006  00F0               	movwf	??_CMP_Isr
   304  0007  080A               	movf	10,w
   305  0008  00F1               	movwf	??_CMP_Isr+1
   306  0009  118A  2838         	ljmp	_CMP_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _CMP_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _CMP_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _CMP_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _CMP_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _CMP_Isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _CMP_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 13 13:19:29 2023

                    l819 0036          __end_of_CMP_Isr 004D                     _IOCB 0009  
                   _PIE1 000E                     _PIE2 0110                     _WPDB 0007  
                   _WPUB 0008                     _main 0010                     btemp 007E  
                   start 000B                    ?_main 0070                    i1l829 0046  
                  _PORTB 0006                    _TRISB 0005                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 0038                   ??_main 0072                ??_CMP_Isr 0070  
                 _CMP1IF 006D                   _CMP1EN 007F                   _CMP2IF 087D  
                 _CMP2EN 04D7                   i1l1247 003F                   _ODCONB 000C  
                 _INTCON 000B                   _OSCCON 0014                   saved_w 007E  
__end_of__initialization 000D           __pcstackCOMMON 0070               __pmaintext 0010  
             __pintentry 0004                  _CMP_Isr 0038                  __ptext0 0000  
                __ptext1 0038     end_of_initialization 000D      start_initialization 000D  
               ?_CMP_Isr 0070                ___latbits 0001                 _CMP1CON0 000F  
               _CMP1CON1 0010                 _CMP2CON0 009A                 _CMP2CON1 009F  
      interrupt_function 0004         __size_of_CMP_Isr 0015            __size_of_main 0028  
               intlevel1 0000               _OPTION_REG 0001  
