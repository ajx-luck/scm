

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jan 02 10:29:08 2024

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F083
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	pa_nodes0,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           	psect	text0
    50  0000                     __ptext0:	
    51  0014                     _OSCCON	set	20
    52  0013                     _T2CON	set	19
    53  0011                     _PR2	set	17
    54  000B                     _INTCON	set	11
    55  0008                     _WPUB	set	8
    56  0007                     _WPDB	set	7
    57  0006                     _PORTB	set	6
    58  0005                     _TRISB	set	5
    59  0001                     _OPTION_REG	set	1
    60  0071                     _TMR2IE	set	113
    61  0069                     _TMR2IF	set	105
    62                           
    63                           	psect	cinit
    64  000D                     start_initialization:	
    65                           ; #config settings
    66                           
    67  000D                     __initialization:	
    68  000D                     end_of_initialization:	
    69                           ;End of C runtime variable initialization code
    70                           
    71  000D                     __end_of__initialization:	
    72  000D  0183               	clrf	3
    73  000E  118A  2837         	ljmp	_main	;jump to C main() function
    74                           
    75                           	psect	cstackCOMMON
    76  0070                     __pcstackCOMMON:	
    77  0070                     ?_Init_System:	
    78  0070                     ?_main:	
    79                           ; 1 bytes @ 0x0
    80                           
    81  0070                     ?_Timer_Isr:	
    82                           ; 1 bytes @ 0x0
    83                           
    84  0070                     ??_Timer_Isr:	
    85                           ; 1 bytes @ 0x0
    86                           
    87                           
    88                           ; 1 bytes @ 0x0
    89  0070                     	ds	2
    90  0072                     ??_Init_System:	
    91  0072                     ??_main:	
    92                           ; 1 bytes @ 0x2
    93                           
    94                           
    95                           	psect	maintext
    96  0037                     __pmaintext:	
    97                           ; 1 bytes @ 0x2
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 16 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F083开发包\SC8F083_DEMO_C\SC8F083_Timer_C_TEST\SC8P083_Tim
      +er2_C.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;                  1    wreg      void 
   110 ;; Registers used:
   111 ;;		wreg, status,2, status,0, pclath, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : B00/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   117 ;;      Params:         0       0       0       0
   118 ;;      Locals:         0       0       0       0
   119 ;;      Temps:          0       0       0       0
   120 ;;      Totals:         0       0       0       0
   121 ;;Total ram usage:        0 bytes
   122 ;; Hardware stack levels required when called:    2
   123 ;; This function calls:
   124 ;;		_Init_System
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130                           
   131                           ;psect for function _main
   132  0037                     _main:	
   133                           
   134                           ;SC8P083_Timer2_C.c: 18: Init_System();
   135                           
   136                           ;incstack = 0
   137                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   138  0037  118A  2010  118A   	fcall	_Init_System
   139  003A                     l821:	
   140                           ;SC8P083_Timer2_C.c: 19: while(1)
   141                           
   142  003A  0064               	clrwdt	;# 
   143  003B  283A               	goto	l821
   144  003C                     __end_of_main:	
   145                           
   146                           	psect	text1
   147  0010                     __ptext1:	
   148 ;; *************** function _Init_System *****************
   149 ;; Defined at:
   150 ;;		line 49 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F083开发包\SC8F083_DEMO_C\SC8F083_Timer_C_TEST\SC8P083_Tim
      +er2_C.c"
   151 ;; Parameters:    Size  Location     Type
   152 ;;		None
   153 ;; Auto vars:     Size  Location     Type
   154 ;;		None
   155 ;; Return value:  Size  Location     Type
   156 ;;                  1    wreg      void 
   157 ;; Registers used:
   158 ;;		wreg, status,2
   159 ;; Tracked objects:
   160 ;;		On entry : B00/0
   161 ;;		On exit  : 300/0
   162 ;;		Unchanged: 0/0
   163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   164 ;;      Params:         0       0       0       0
   165 ;;      Locals:         0       0       0       0
   166 ;;      Temps:          0       0       0       0
   167 ;;      Totals:         0       0       0       0
   168 ;;Total ram usage:        0 bytes
   169 ;; Hardware stack levels used:    1
   170 ;; Hardware stack levels required when called:    1
   171 ;; This function calls:
   172 ;;		Nothing
   173 ;; This function is called by:
   174 ;;		_main
   175 ;; This function uses a non-reentrant model
   176 ;;
   177                           
   178                           
   179                           ;psect for function _Init_System
   180  0010                     _Init_System:	
   181                           
   182                           ;incstack = 0
   183                           ; Regs used in _Init_System: [wreg+status,2]
   184  0010  0000               	nop	;# 
   185  0011  0064               	clrwdt	;# 
   186                           
   187                           ;SC8P083_Timer2_C.c: 53: INTCON = 0;
   188  0012  018B               	clrf	11	;volatile
   189                           
   190                           ;SC8P083_Timer2_C.c: 54: OSCCON = 0x72;
   191  0013  3072               	movlw	114
   192  0014  1283               	bcf	3,5	;RP0=0, select bank0
   193  0015  1303               	bcf	3,6	;RP1=0, select bank0
   194  0016  0094               	movwf	20	;volatile
   195                           
   196                           ;SC8P083_Timer2_C.c: 55: OPTION_REG = 0x00;
   197  0017  0181               	clrf	1	;volatile
   198  0018  0064               	clrwdt	;# 
   199                           
   200                           ;SC8P083_Timer2_C.c: 58: WPUB = 0B00111000;
   201  0019  3038               	movlw	56
   202  001A  1283               	bcf	3,5	;RP0=0, select bank0
   203  001B  1303               	bcf	3,6	;RP1=0, select bank0
   204  001C  0088               	movwf	8	;volatile
   205                           
   206                           ;SC8P083_Timer2_C.c: 59: WPDB = 0B00000000;
   207  001D  0187               	clrf	7	;volatile
   208                           
   209                           ;SC8P083_Timer2_C.c: 60: TRISB = 0B00111000;
   210  001E  0085               	movwf	5	;volatile
   211                           
   212                           ;SC8P083_Timer2_C.c: 61: PORTB = 0B00000000;
   213  001F  0186               	clrf	6	;volatile
   214                           
   215                           ;SC8P083_Timer2_C.c: 93: PR2 = 249;
   216  0020  30F9               	movlw	249
   217  0021  0091               	movwf	17	;volatile
   218                           
   219                           ;SC8P083_Timer2_C.c: 94: TMR2IF = 0;
   220  0022  108D               	bcf	13,1	;volatile
   221                           
   222                           ;SC8P083_Timer2_C.c: 95: TMR2IE = 1;
   223  0023  148E               	bsf	14,1	;volatile
   224                           
   225                           ;SC8P083_Timer2_C.c: 97: T2CON = 0B00000101;
   226  0024  3005               	movlw	5
   227  0025  0093               	movwf	19	;volatile
   228                           
   229                           ;SC8P083_Timer2_C.c: 99: INTCON = 0XC0;
   230  0026  30C0               	movlw	192
   231  0027  008B               	movwf	11	;volatile
   232  0028  0008               	return
   233  0029                     __end_of_Init_System:	
   234                           
   235                           	psect	text2
   236  0029                     __ptext2:	
   237 ;; *************** function _Timer_Isr *****************
   238 ;; Defined at:
   239 ;;		line 33 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F083开发包\SC8F083_DEMO_C\SC8F083_Timer_C_TEST\SC8P083_Tim
      +er2_C.c"
   240 ;; Parameters:    Size  Location     Type
   241 ;;		None
   242 ;; Auto vars:     Size  Location     Type
   243 ;;		None
   244 ;; Return value:  Size  Location     Type
   245 ;;                  1    wreg      void 
   246 ;; Registers used:
   247 ;;		wreg, status,2, status,0
   248 ;; Tracked objects:
   249 ;;		On entry : 0/0
   250 ;;		On exit  : 300/0
   251 ;;		Unchanged: 0/0
   252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   253 ;;      Params:         0       0       0       0
   254 ;;      Locals:         0       0       0       0
   255 ;;      Temps:          2       0       0       0
   256 ;;      Totals:         2       0       0       0
   257 ;;Total ram usage:        2 bytes
   258 ;; Hardware stack levels used:    1
   259 ;; This function calls:
   260 ;;		Nothing
   261 ;; This function is called by:
   262 ;;		Interrupt level 1
   263 ;; This function uses a non-reentrant model
   264 ;;
   265                           
   266                           
   267                           ;psect for function _Timer_Isr
   268  0029                     _Timer_Isr:	
   269                           
   270                           ;SC8P083_Timer2_C.c: 35: if(TMR2IF)
   271  0029  1283               	bcf	3,5	;RP0=0, select bank0
   272  002A  1303               	bcf	3,6	;RP1=0, select bank0
   273  002B  1C8D               	btfss	13,1	;volatile
   274  002C  2830               	goto	i1l830
   275                           
   276                           ;SC8P083_Timer2_C.c: 36: {
   277                           ;SC8P083_Timer2_C.c: 37: TMR2IF = 0;
   278  002D  108D               	bcf	13,1	;volatile
   279                           
   280                           ;SC8P083_Timer2_C.c: 38: PORTB ^= 0X08;
   281  002E  3008               	movlw	8
   282  002F  0686               	xorwf	6,f	;volatile
   283  0030                     i1l830:	
   284  0030  0871               	movf	??_Timer_Isr+1,w
   285  0031  008A               	movwf	10
   286  0032  0E70               	swapf	??_Timer_Isr^(0+-128),w
   287  0033  0083               	movwf	3
   288  0034  0EFE               	swapf	126,f
   289  0035  0E7E               	swapf	126,w
   290  0036  0009               	retfie
   291  0037                     __end_of_Timer_Isr:	
   292  007E                     btemp	set	126	;btemp
   293  007E                     wtemp0	set	126
   294                           
   295                           	psect	intentry
   296  0004                     __pintentry:	
   297                           ;incstack = 0
   298                           ; Regs used in _Timer_Isr: [wreg+status,2+status,0]
   299                           
   300  0004                     interrupt_function:	
   301  007E                     saved_w	set	btemp
   302  0004  00FE               	movwf	btemp
   303  0005  0E03               	swapf	3,w
   304  0006  00F0               	movwf	??_Timer_Isr
   305  0007  080A               	movf	10,w
   306  0008  00F1               	movwf	??_Timer_Isr+1
   307  0009  118A  2829         	ljmp	_Timer_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Init_System
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer_Isr                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_System

 _Timer_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jan 02 10:29:08 2024

                    l821 003A                      _PR2 0011                     _WPDB 0007  
                   _WPUB 0008                     _main 0037                     btemp 007E  
                   start 000B            ??_Init_System 0072                    ?_main 0070  
                  _T2CON 0013                    i1l830 0030                    _PORTB 0006  
                  _TRISB 0005                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000D             __end_of_main 003C  
                 ??_main 0072      __end_of_Init_System 0029                   _INTCON 000B  
                 _OSCCON 0014                   _TMR2IE 0071                   _TMR2IF 0069  
     __size_of_Timer_Isr 000E                   saved_w 007E  __end_of__initialization 000D  
         __pcstackCOMMON 0070              _Init_System 0010        __end_of_Timer_Isr 0037  
             __pmaintext 0037               __pintentry 0004                  __ptext0 0000  
                __ptext1 0010                  __ptext2 0029     end_of_initialization 000D  
           ?_Init_System 0070      start_initialization 000D                _Timer_Isr 0029  
              ___latbits 0001               ?_Timer_Isr 0070        interrupt_function 0004  
   __size_of_Init_System 0019              ??_Timer_Isr 0070            __size_of_main 0005  
               intlevel1 0000               _OPTION_REG 0001  
