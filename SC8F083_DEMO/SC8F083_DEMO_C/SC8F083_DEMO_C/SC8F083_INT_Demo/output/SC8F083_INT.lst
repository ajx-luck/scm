

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 13 13:18:04 2023

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F083
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  0014                     _OSCCON	set	20
    51  0013                     _T2CON	set	19
    52  0011                     _PR2	set	17
    53  000B                     _INTCON	set	11
    54  0009                     _IOCB	set	9
    55  0008                     _WPUB	set	8
    56  0006                     _PORTB	set	6
    57  0005                     _TRISB	set	5
    58  0001                     _OPTION_REG	set	1
    59  0071                     _TMR2IE	set	113
    60  0069                     _TMR2IF	set	105
    61  0058                     _RBIF	set	88
    62  005B                     _RBIE	set	91
    63  0086                     _PORTA	set	134
    64  0085                     _TRISA	set	133
    65  0432                     _RA2	set	1074
    66                           
    67                           	psect	cinit
    68  000D                     start_initialization:	
    69                           ; #config settings
    70                           
    71  000D                     __initialization:	
    72  000D                     end_of_initialization:	
    73                           ;End of C runtime variable initialization code
    74                           
    75  000D                     __end_of__initialization:	
    76  000D  0183               	clrf	3
    77  000E  118A  2810         	ljmp	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMMON
    80  0070                     __pcstackCOMMON:	
    81  0070                     ?_main:	
    82  0070                     ?_PB_Isr:	
    83                           ; 1 bytes @ 0x0
    84                           
    85  0070                     ??_PB_Isr:	
    86                           ; 1 bytes @ 0x0
    87                           
    88                           
    89                           ; 1 bytes @ 0x0
    90  0070                     	ds	2
    91  0072                     ??_main:	
    92                           
    93                           	psect	maintext
    94  0010                     __pmaintext:	
    95                           ; 1 bytes @ 0x2
    96 ;;
    97 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    98 ;;
    99 ;; *************** function _main *****************
   100 ;; Defined at:
   101 ;;		line 14 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F083开发包\SC8F073_DEMO_C\SC8F083_INT_Demo\PB_Interrupt_De
      +mo.c"
   102 ;; Parameters:    Size  Location     Type
   103 ;;		None
   104 ;; Auto vars:     Size  Location     Type
   105 ;;		None
   106 ;; Return value:  Size  Location     Type
   107 ;;                  1    wreg      void 
   108 ;; Registers used:
   109 ;;		wreg, status,2
   110 ;; Tracked objects:
   111 ;;		On entry : B00/0
   112 ;;		On exit  : 0/0
   113 ;;		Unchanged: 0/0
   114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   115 ;;      Params:         0       0       0       0
   116 ;;      Locals:         0       0       0       0
   117 ;;      Temps:          0       0       0       0
   118 ;;      Totals:         0       0       0       0
   119 ;;Total ram usage:        0 bytes
   120 ;; Hardware stack levels required when called:    1
   121 ;; This function calls:
   122 ;;		Nothing
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           
   129                           ;psect for function _main
   130  0010                     _main:	
   131                           
   132                           ;incstack = 0
   133                           ; Regs used in _main: [wreg+status,2]
   134  0010  0000               	nop	;# 
   135  0011  0064               	clrwdt	;# 
   136                           
   137                           ;PB_Interrupt_Demo.c: 19: OSCCON = 0x70;
   138  0012  3070               	movlw	112
   139  0013  1283               	bcf	3,5	;RP0=0, select bank0
   140  0014  1303               	bcf	3,6	;RP1=0, select bank0
   141  0015  0094               	movwf	20	;volatile
   142                           
   143                           ;PB_Interrupt_Demo.c: 20: OPTION_REG = 0;
   144  0016  0181               	clrf	1	;volatile
   145                           
   146                           ;PB_Interrupt_Demo.c: 21: TRISA = 0;
   147  0017  1683               	bsf	3,5	;RP0=1, select bank1
   148  0018  0185               	clrf	5	;volatile
   149                           
   150                           ;PB_Interrupt_Demo.c: 23: PR2 = 249;
   151  0019  30F9               	movlw	249
   152  001A  1283               	bcf	3,5	;RP0=0, select bank0
   153  001B  0091               	movwf	17	;volatile
   154                           
   155                           ;PB_Interrupt_Demo.c: 24: TMR2IF = 0;
   156  001C  108D               	bcf	13,1	;volatile
   157                           
   158                           ;PB_Interrupt_Demo.c: 25: TMR2IE = 1;
   159  001D  148E               	bsf	14,1	;volatile
   160                           
   161                           ;PB_Interrupt_Demo.c: 27: T2CON = 0B00000101;
   162  001E  3005               	movlw	5
   163  001F  0093               	movwf	19	;volatile
   164                           
   165                           ;PB_Interrupt_Demo.c: 30: WPUB = 0B00001000;
   166  0020  3008               	movlw	8
   167  0021  0088               	movwf	8	;volatile
   168                           
   169                           ;PB_Interrupt_Demo.c: 31: TRISB = 0B00001000;
   170  0022  0085               	movwf	5	;volatile
   171                           
   172                           ;PB_Interrupt_Demo.c: 32: IOCB = 0B00001000;
   173  0023  0089               	movwf	9	;volatile
   174                           
   175                           ;PB_Interrupt_Demo.c: 33: RBIE = 1;
   176  0024  158B               	bsf	11,3	;volatile
   177                           
   178                           ;PB_Interrupt_Demo.c: 34: INTCON = 0xC8;
   179  0025  30C8               	movlw	200
   180  0026  008B               	movwf	11	;volatile
   181                           
   182                           ;PB_Interrupt_Demo.c: 35: PORTB;
   183  0027  0806               	movf	6,w	;volatile
   184  0028                     l819:	
   185                           ;PB_Interrupt_Demo.c: 38: while(1)
   186                           
   187  0028  0064               	clrwdt	;# 
   188  0029  2828               	goto	l819
   189  002A                     __end_of_main:	
   190                           
   191                           	psect	text1
   192  002A                     __ptext1:	
   193 ;; *************** function _PB_Isr *****************
   194 ;; Defined at:
   195 ;;		line 52 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F083开发包\SC8F073_DEMO_C\SC8F083_INT_Demo\PB_Interrupt_De
      +mo.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 200/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   209 ;;      Params:         0       0       0       0
   210 ;;      Locals:         0       0       0       0
   211 ;;      Temps:          2       0       0       0
   212 ;;      Totals:         2       0       0       0
   213 ;;Total ram usage:        2 bytes
   214 ;; Hardware stack levels used:    1
   215 ;; This function calls:
   216 ;;		Nothing
   217 ;; This function is called by:
   218 ;;		Interrupt level 1
   219 ;; This function uses a non-reentrant model
   220 ;;
   221                           
   222                           
   223                           ;psect for function _PB_Isr
   224  002A                     _PB_Isr:	
   225                           
   226                           ;PB_Interrupt_Demo.c: 54: if(RBIF)
   227  002A  1C0B               	btfss	11,0	;volatile
   228  002B  2833               	goto	i1l1225
   229                           
   230                           ;PB_Interrupt_Demo.c: 55: {
   231                           ;PB_Interrupt_Demo.c: 56: RBIF = 0;
   232  002C  100B               	bcf	11,0	;volatile
   233                           
   234                           ;PB_Interrupt_Demo.c: 57: RA2 = !RA2;
   235  002D  3004               	movlw	4
   236  002E  1683               	bsf	3,5	;RP0=1, select bank1
   237  002F  1303               	bcf	3,6	;RP1=0, select bank1
   238  0030  0686               	xorwf	6,f
   239                           
   240                           ;PB_Interrupt_Demo.c: 58: PORTB;
   241  0031  1283               	bcf	3,5	;RP0=0, select bank0
   242  0032  0806               	movf	6,w	;volatile
   243  0033                     i1l1225:	
   244                           
   245                           ;PB_Interrupt_Demo.c: 60: }
   246                           ;PB_Interrupt_Demo.c: 61: if(TMR2IF)
   247  0033  1283               	bcf	3,5	;RP0=0, select bank0
   248  0034  1303               	bcf	3,6	;RP1=0, select bank0
   249  0035  1C8D               	btfss	13,1	;volatile
   250  0036  283B               	goto	i1l829
   251                           
   252                           ;PB_Interrupt_Demo.c: 62: {
   253                           ;PB_Interrupt_Demo.c: 63: TMR2IF = 0;
   254  0037  108D               	bcf	13,1	;volatile
   255                           
   256                           ;PB_Interrupt_Demo.c: 65: PORTA ^= 0X02;
   257  0038  3002               	movlw	2
   258  0039  1683               	bsf	3,5	;RP0=1, select bank1
   259  003A  0686               	xorwf	6,f	;volatile
   260  003B                     i1l829:	
   261  003B  0871               	movf	??_PB_Isr+1,w
   262  003C  008A               	movwf	10
   263  003D  0E70               	swapf	??_PB_Isr^(0+-128),w
   264  003E  0083               	movwf	3
   265  003F  0EFE               	swapf	126,f
   266  0040  0E7E               	swapf	126,w
   267  0041  0009               	retfie
   268  0042                     __end_of_PB_Isr:	
   269  007E                     btemp	set	126	;btemp
   270  007E                     wtemp0	set	126
   271                           
   272                           	psect	intentry
   273  0004                     __pintentry:	
   274                           ;incstack = 0
   275                           ; Regs used in _PB_Isr: [wreg+status,2+status,0]
   276                           
   277  0004                     interrupt_function:	
   278  007E                     saved_w	set	btemp
   279  0004  00FE               	movwf	btemp
   280  0005  0E03               	swapf	3,w
   281  0006  00F0               	movwf	??_PB_Isr
   282  0007  080A               	movf	10,w
   283  0008  00F1               	movwf	??_PB_Isr+1
   284  0009  118A  282A         	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PB_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _PB_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 13 13:18:04 2023

                    l819 0028                      _RA2 0432                      _PR2 0011  
                   _IOCB 0009                     _RBIE 005B                     _RBIF 0058  
                   _WPUB 0008                     _main 0010                     btemp 007E  
                   start 000B                    ?_main 0070                    _T2CON 0013  
                  i1l829 003B                    _PORTA 0086                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0005                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 002A                   ??_main 0072                   i1l1225 0033  
                 _INTCON 000B                   _OSCCON 0014                   _TMR2IE 0071  
                 _TMR2IF 0069                   _PB_Isr 002A                   saved_w 007E  
__end_of__initialization 000D           __pcstackCOMMON 0070                  ?_PB_Isr 0070  
             __pmaintext 0010               __pintentry 0004          __size_of_PB_Isr 0018  
                __ptext0 0000                  __ptext1 002A     end_of_initialization 000D  
         __end_of_PB_Isr 0042      start_initialization 000D                 ??_PB_Isr 0070  
              ___latbits 0001        interrupt_function 0004            __size_of_main 001A  
               intlevel1 0000               _OPTION_REG 0001  
