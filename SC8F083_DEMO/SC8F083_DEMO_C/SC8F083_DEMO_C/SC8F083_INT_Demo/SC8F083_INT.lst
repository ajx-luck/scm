---- H:\MyDownloads\说明书&测试报告\开发包\SC8F083开发包\SC8F073_DEMO_C\SC8F083_INT_Demo\PB_Interrupt_Demo.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                功能：PORB电平变化中断演示
3:                版本：V1.0
4:                日期：2023.11.05 
5:                
6:                *本程序由 中微半导体 &应用支持部& 编写整理
7:                *公司网址 www.mcu.com.cn
8:                *
9:                -------------------------------------------*/
10:               
11:               #include <sc.h>
12:               
13:               
14:               void main()
15:               {
16:               	asm("nop");
17:               	asm("clrwdt");
18:               	
19:               	OSCCON = 0x70;			//内部振荡器用作系统时钟
  0012    3070    LDIA	0x70
  0013    1283    CLRB	0x3,5
  0014    1303    CLRB	0x3,6
  0015    0094    LD	0x14,A
20:               	OPTION_REG = 0;			//预分频寄存器设置
  0016    0181    CLR	0x1
21:               	TRISA = 0;
  0017    1683    SETB	0x3,5
  0018    0185    CLR	0x5
22:               	
23:               	PR2 = 249;				//设定Timer初始值,250uS中断
  0019    30F9    LDIA	0xF9
  001A    1283    CLRB	0x3,5
  001B    0091    LD	0x11,A
24:               	TMR2IF = 0;
  001C    108D    CLRB	0xD,1
25:               	TMR2IE = 1;				//使能Timer2溢出中断
  001D    148E    SETB	0xE,1
26:               	
27:               	T2CON = 0B00000101;		//开启Timer2，预分频为1：4，后分频为1：1，则定时时间为（249+1）*4*（4/16M）=250us
  001E    3005    LDIA	0x5
  001F    0093    LD	0x13,A
28:               	
29:               //---------------------------------------	
30:               	WPUB = 0B00001000;		//使能上拉，使RB3为高
  0020    3008    LDIA	0x8
  0021    0088    LD	0x8,A
31:               	TRISB = 0B00001000;		//设置RB3的IO口为输入
  0022    0085    LD	0x5,A
32:               	IOCB = 0B00001000;		//允许RB3的IO口电平变化中断
  0023    0089    LD	0x9,A
33:               	RBIE = 1;				//使能PORTB电平变化中断
  0024    158B    SETB	0xB,3
34:               	INTCON = 0xC8;			//允许PORTB中断，允许外设中断，屏蔽其余中断，清RB中断标志位
  0025    30C8    LDIA	0xC8
  0026    008B    LD	0xB,A
35:               	PORTB;					//读取PORTA并锁存
  0027    0806    LD	A,0x6
36:               //---------------------------------------		
37:               
38:               	while(1)			
  0028    0064    CLRWDT
  0029    2828    JP	0x28
39:               	{
40:               		asm("clrwdt");
41:               	}
42:               }
43:               
44:               
45:               /***********************************************
46:               函数名称：PB_Isr
47:               函数功能：PB电平变化中断服务
48:               入口参数：无
49:               出口参数：无
50:               备注：
51:               ************************************************/
52:               void interrupt PB_Isr()
53:               {
54:               	if(RBIF)
  002A    1C0B    SNZB	0xB,0
  002B    2833    JP	0x33
55:               	{
56:               		RBIF = 0;			//清中断标志
  002C    100B    CLRB	0xB,0
57:               		RA2 = !RA2;
  002D    3004    LDIA	0x4
  002E    1683    SETB	0x3,5
  002F    1303    CLRB	0x3,6
  0030    0686    XORR	0x6
58:               		PORTB;				//读取PORTB状态,出中断的时候必须读取IO状态，
  0031    1283    CLRB	0x3,5
  0032    0806    LD	A,0x6
59:               							//否则会出现检测不到电平变化的现象
60:               	}
61:               	if(TMR2IF)
  0033    1283    CLRB	0x3,5
  0034    1303    CLRB	0x3,6
  0035    1C8D    SNZB	0xD,1
  0036    283B    JP	0x3B
62:               	{
63:               		TMR2IF = 0;
  0037    108D    CLRB	0xD,1
64:               		
65:               		PORTA ^= 0X02;
  0038    3002    LDIA	0x2
  0039    1683    SETB	0x3,5
  003A    0686    XORR	0x6
  003B    0871    LD	A,0x71
  003C    008A    LD	0xA,A
  003D    0E70    SWAPA	0x70
  003E    0083    LD	0x3,A
  003F    0EFE    SWAPR	0x7E
  0040    0E7E    SWAPA	0x7E
  0041    0009    RETI
66:               	}
67:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    280B    JP	0xB
  000B    118A    CLRB	0xA,3
  000C    280D    JP	0xD
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    080A    LD	A,0xA
  0008    00F1    LD	0x71,A
  0009    118A    CLRB	0xA,3
  000A    282A    JP	0x2A
---- common_function ------------------------------------------------------------------
  000D    0183    CLR	0x3
  000E    118A    CLRB	0xA,3
  000F    2810    JP	0x10
  0010    0000    NOP
  0011    0064    CLRWDT
