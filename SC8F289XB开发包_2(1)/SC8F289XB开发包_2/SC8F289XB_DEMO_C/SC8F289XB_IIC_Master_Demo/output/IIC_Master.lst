

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 23 14:24:01 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F67XX
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	pa_nodes0,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	text0
    54  0000                     __ptext0:	
    55  000B                     _INTCON	set	11
    56  0008                     _WPUB	set	8
    57  0007                     _WPUA	set	7
    58  0006                     _PORTB	set	6
    59  0005                     _PORTA	set	5
    60  0058                     _RBIF	set	88
    61  0035                     _RB5	set	53
    62  0036                     _RB6	set	54
    63  0088                     _OSCCON	set	136
    64  0086                     _TRISB	set	134
    65  0085                     _TRISA	set	133
    66  0081                     _OPTION_REG	set	129
    67  0110                     _ANSEL0	set	272
    68  010E                     _IICBUF	set	270
    69  010C                     _IICCON	set	268
    70  0109                     _IICADD	set	265
    71  0868                     _SEN	set	2152
    72  0869                     _RSEN	set	2153
    73  086A                     _PEN	set	2154
    74  086B                     _RCEN	set	2155
    75  083C                     _IICIF	set	2108
    76                           
    77                           	psect	cinit
    78  000D                     start_initialization:	
    79                           ; #config settings
    80                           
    81  000D                     __initialization:	
    82                           
    83                           ; Clear objects allocated to COMMON
    84  000D  01F0               	clrf	__pbssCOMMON& (0+127)
    85  000E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    86  000F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    87  0010  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    88  0011  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    89  0012  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    90  0013  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    91  0014                     end_of_initialization:	
    92                           ;End of C runtime variable initialization code
    93                           
    94  0014                     __end_of__initialization:	
    95  0014  0183               	clrf	3
    96  0015  118A  283C         	ljmp	_main	;jump to C main() function
    97                           
    98                           	psect	bssCOMMON
    99  0070                     __pbssCOMMON:	
   100  0070                     _result2:	
   101  0070                     	ds	2
   102  0072                     _result1:	
   103  0072                     	ds	2
   104  0074                     _result:	
   105  0074                     	ds	2
   106  0076                     _IICReadData:	
   107  0076                     	ds	1
   108                           
   109                           	psect	cstackCOMMON
   110  0077                     __pcstackCOMMON:	
   111  0077                     ?_Init_System:	
   112  0077                     ?_DelayXms:	
   113                           ; 1 bytes @ 0x0
   114                           
   115  0077                     ?_main:	
   116                           ; 1 bytes @ 0x0
   117                           
   118  0077                     ?_PB_Isr:	
   119                           ; 1 bytes @ 0x0
   120                           
   121  0077                     ??_PB_Isr:	
   122                           ; 1 bytes @ 0x0
   123                           
   124                           
   125                           ; 1 bytes @ 0x0
   126  0077                     	ds	2
   127  0079                     ??_Init_System:	
   128  0079                     ??_DelayXms:	
   129                           ; 1 bytes @ 0x2
   130                           
   131  0079                     ?_Write_IIC:	
   132                           ; 1 bytes @ 0x2
   133                           
   134  0079                     ?_Read_IIC:	
   135                           ; 1 bytes @ 0x2
   136                           
   137  0079                     DelayXms@x:	
   138                           ; 1 bytes @ 0x2
   139                           
   140  0079                     Write_IIC@data:	
   141                           ; 1 bytes @ 0x2
   142                           
   143  0079                     Read_IIC@data:	
   144                           ; 1 bytes @ 0x2
   145                           
   146                           
   147                           ; 1 bytes @ 0x2
   148  0079                     	ds	1
   149  007A                     ??_Write_IIC:	
   150  007A                     ??_Read_IIC:	
   151                           ; 1 bytes @ 0x3
   152                           
   153  007A                     DelayXms@i:	
   154                           ; 1 bytes @ 0x3
   155                           
   156  007A                     Write_IIC@Adress:	
   157                           ; 1 bytes @ 0x3
   158                           
   159  007A                     Read_IIC@ReadData:	
   160                           ; 1 bytes @ 0x3
   161                           
   162                           
   163                           ; 1 bytes @ 0x3
   164  007A                     	ds	1
   165  007B                     DelayXms@j:	
   166  007B                     Read_IIC@Adress:	
   167                           ; 1 bytes @ 0x4
   168                           
   169                           
   170                           ; 1 bytes @ 0x4
   171  007B                     	ds	1
   172  007C                     ??_main:	
   173                           
   174                           	psect	maintext
   175  003C                     __pmaintext:	
   176                           ; 1 bytes @ 0x5
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 102 in file "C:\Edward_work_FILE\work_file\¿ª·¢ÎÄ¼þ\°´Ð¾Æ¬·ÖÀà×ÊÁÏ\SC\SC8F67XX\SC8F67XX_IIC_Master_Demo\main.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0, pclath, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : B00/0
   193 ;;		On exit  : 300/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   196 ;;      Params:         0       0       0       0       0
   197 ;;      Locals:         0       0       0       0       0
   198 ;;      Temps:          0       0       0       0       0
   199 ;;      Totals:         0       0       0       0       0
   200 ;;Total ram usage:        0 bytes
   201 ;; Hardware stack levels required when called:    2
   202 ;; This function calls:
   203 ;;		_DelayXms
   204 ;;		_Init_System
   205 ;;		_Read_IIC
   206 ;;		_Write_IIC
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           
   213                           ;psect for function _main
   214  003C                     _main:	
   215                           
   216                           ;main.c: 104: Init_System();
   217                           
   218                           ;incstack = 0
   219                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   220  003C  118A  205D  118A   	fcall	_Init_System
   221                           
   222                           ;main.c: 105: TRISA |= 0b00000011;
   223  003F  3003               	movlw	3
   224  0040  1683               	bsf	3,5	;RP0=1, select bank1
   225  0041  0485               	iorwf	5,f	;volatile
   226                           
   227                           ;main.c: 106: IICCON = 0B00100000;
   228  0042  3020               	movlw	32
   229  0043  1283               	bcf	3,5	;RP0=0, select bank2
   230  0044  1703               	bsf	3,6	;RP1=1, select bank2
   231  0045  008C               	movwf	12	;volatile
   232                           
   233                           ;main.c: 107: IICADD = 159;
   234  0046  309F               	movlw	159
   235  0047  0089               	movwf	9	;volatile
   236  0048                     l1601:	
   237                           
   238                           ;main.c: 113: {
   239                           ;main.c: 114: DelayXms(200);
   240  0048  30C8               	movlw	200
   241  0049  118A  2099  118A   	fcall	_DelayXms
   242                           
   243                           ;main.c: 115: Write_IIC(0xa0,0x80);
   244  004C  3080               	movlw	128
   245  004D  00F9               	movwf	Write_IIC@data
   246  004E  30A0               	movlw	160
   247  004F  118A  2076  118A   	fcall	_Write_IIC
   248                           
   249                           ;main.c: 117: IICReadData = Read_IIC(0xa0,0x80);
   250  0052  3080               	movlw	128
   251  0053  00F9               	movwf	Read_IIC@data
   252  0054  30A0               	movlw	160
   253  0055  118A  2017  118A   	fcall	_Read_IIC
   254  0058  00F6               	movwf	_IICReadData	;volatile
   255                           
   256                           ;main.c: 118: RB5 = ~RB5;
   257  0059  3020               	movlw	32
   258  005A  1303               	bcf	3,6	;RP1=0, select bank0
   259  005B  0686               	xorwf	6,f
   260  005C  2848               	goto	l1601
   261  005D                     __end_of_main:	
   262                           
   263                           	psect	text1
   264  0076                     __ptext1:	
   265 ;; *************** function _Write_IIC *****************
   266 ;; Defined at:
   267 ;;		line 42 in file "C:\Edward_work_FILE\work_file\¿ª·¢ÎÄ¼þ\°´Ð¾Æ¬·ÖÀà×ÊÁÏ\SC\SC8F67XX\SC8F67XX_IIC_Master_Demo\main.c"
   268 ;; Parameters:    Size  Location     Type
   269 ;;  Adress          1    wreg     unsigned char 
   270 ;;  data            1    2[COMMON] unsigned char 
   271 ;; Auto vars:     Size  Location     Type
   272 ;;  Adress          1    3[COMMON] unsigned char 
   273 ;; Return value:  Size  Location     Type
   274 ;;                  1    wreg      void 
   275 ;; Registers used:
   276 ;;		wreg
   277 ;; Tracked objects:
   278 ;;		On entry : 100/200
   279 ;;		On exit  : 300/200
   280 ;;		Unchanged: 0/0
   281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   282 ;;      Params:         1       0       0       0       0
   283 ;;      Locals:         1       0       0       0       0
   284 ;;      Temps:          0       0       0       0       0
   285 ;;      Totals:         2       0       0       0       0
   286 ;;Total ram usage:        2 bytes
   287 ;; Hardware stack levels used:    1
   288 ;; Hardware stack levels required when called:    1
   289 ;; This function calls:
   290 ;;		Nothing
   291 ;; This function is called by:
   292 ;;		_main
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           
   297                           ;psect for function _Write_IIC
   298  0076                     _Write_IIC:	
   299                           
   300                           ;incstack = 0
   301                           ; Regs used in _Write_IIC: [wreg]
   302                           ;Write_IIC@Adress stored from wreg
   303  0076  00FA               	movwf	Write_IIC@Adress
   304                           
   305                           ;main.c: 44: SEN =1;
   306  0077  1703               	bsf	3,6	;RP1=1, select bank2
   307  0078  140D               	bsf	13,0	;volatile
   308  0079                     l1062:	
   309                           ;main.c: 45: while(IICIF==0);
   310                           
   311  0079  1E07               	btfss	7,4	;volatile
   312  007A  2879               	goto	l1062
   313                           
   314                           ;main.c: 46: IICIF = 0;
   315  007B  1207               	bcf	7,4	;volatile
   316                           
   317                           ;main.c: 47: IICBUF = Adress;
   318  007C  087A               	movf	Write_IIC@Adress,w
   319  007D  008E               	movwf	14	;volatile
   320  007E                     l1065:	
   321                           ;main.c: 48: while(IICIF==0);
   322                           
   323  007E  1E07               	btfss	7,4	;volatile
   324  007F  287E               	goto	l1065
   325                           
   326                           ;main.c: 49: IICIF = 0;
   327  0080  1207               	bcf	7,4	;volatile
   328                           
   329                           ;main.c: 50: IICBUF = data;
   330  0081  0879               	movf	Write_IIC@data,w
   331  0082  008E               	movwf	14	;volatile
   332  0083                     l1068:	
   333                           ;main.c: 51: while(IICIF==0);
   334                           
   335  0083  1E07               	btfss	7,4	;volatile
   336  0084  2883               	goto	l1068
   337                           
   338                           ;main.c: 52: IICIF = 0;
   339  0085  1207               	bcf	7,4	;volatile
   340                           
   341                           ;main.c: 53: PEN =1;
   342  0086  150D               	bsf	13,2	;volatile
   343  0087                     l1071:	
   344                           ;main.c: 54: while(IICIF==0);
   345                           
   346  0087  1E07               	btfss	7,4	;volatile
   347  0088  2887               	goto	l1071
   348                           
   349                           ;main.c: 55: IICIF = 0;
   350  0089  1207               	bcf	7,4	;volatile
   351  008A  0008               	return
   352  008B                     __end_of_Write_IIC:	
   353                           
   354                           	psect	text2
   355  0017                     __ptext2:	
   356 ;; *************** function _Read_IIC *****************
   357 ;; Defined at:
   358 ;;		line 65 in file "C:\Edward_work_FILE\work_file\¿ª·¢ÎÄ¼þ\°´Ð¾Æ¬·ÖÀà×ÊÁÏ\SC\SC8F67XX\SC8F67XX_IIC_Master_Demo\main.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;  Adress          1    wreg     unsigned char 
   361 ;;  data            1    2[COMMON] unsigned char 
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  Adress          1    4[COMMON] unsigned char 
   364 ;;  ReadData        1    3[COMMON] unsigned char 
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      unsigned char 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0
   369 ;; Tracked objects:
   370 ;;		On entry : 300/200
   371 ;;		On exit  : 300/200
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   374 ;;      Params:         1       0       0       0       0
   375 ;;      Locals:         2       0       0       0       0
   376 ;;      Temps:          0       0       0       0       0
   377 ;;      Totals:         3       0       0       0       0
   378 ;;Total ram usage:        3 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; Hardware stack levels required when called:    1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _Read_IIC
   390  0017                     _Read_IIC:	
   391                           
   392                           ;incstack = 0
   393                           ; Regs used in _Read_IIC: [wreg+status,2+status,0]
   394                           ;Read_IIC@Adress stored from wreg
   395  0017  00FB               	movwf	Read_IIC@Adress
   396                           
   397                           ;main.c: 67: unsigned char ReadData;
   398                           ;main.c: 69: SEN =1;
   399  0018  140D               	bsf	13,0	;volatile
   400  0019                     l1077:	
   401                           ;main.c: 70: while(IICIF==0);
   402                           
   403  0019  1E07               	btfss	7,4	;volatile
   404  001A  2819               	goto	l1077
   405                           
   406                           ;main.c: 71: IICIF = 0;
   407  001B  1207               	bcf	7,4	;volatile
   408                           
   409                           ;main.c: 72: IICBUF = Adress;
   410  001C  087B               	movf	Read_IIC@Adress,w
   411  001D  008E               	movwf	14	;volatile
   412  001E                     l1080:	
   413                           ;main.c: 73: while(IICIF==0);
   414                           
   415  001E  1E07               	btfss	7,4	;volatile
   416  001F  281E               	goto	l1080
   417                           
   418                           ;main.c: 75: IICIF = 0;
   419  0020  1207               	bcf	7,4	;volatile
   420                           
   421                           ;main.c: 76: IICBUF = data;
   422  0021  0879               	movf	Read_IIC@data,w
   423  0022  008E               	movwf	14	;volatile
   424  0023                     l1083:	
   425                           ;main.c: 77: while(IICIF==0);
   426                           
   427  0023  1E07               	btfss	7,4	;volatile
   428  0024  2823               	goto	l1083
   429                           
   430                           ;main.c: 78: IICIF = 0;
   431  0025  1207               	bcf	7,4	;volatile
   432                           
   433                           ;main.c: 80: RSEN =1;
   434  0026  148D               	bsf	13,1	;volatile
   435  0027                     l1086:	
   436                           ;main.c: 81: while(IICIF==0);
   437                           
   438  0027  1E07               	btfss	7,4	;volatile
   439  0028  2827               	goto	l1086
   440                           
   441                           ;main.c: 83: IICIF = 0;
   442  0029  1207               	bcf	7,4	;volatile
   443                           
   444                           ;main.c: 85: IICBUF = Adress+1;
   445  002A  087B               	movf	Read_IIC@Adress,w
   446  002B  3E01               	addlw	1
   447  002C  008E               	movwf	14	;volatile
   448  002D                     l1089:	
   449                           ;main.c: 86: while(IICIF==0);
   450                           
   451  002D  1E07               	btfss	7,4	;volatile
   452  002E  282D               	goto	l1089
   453                           
   454                           ;main.c: 87: IICIF = 0;
   455  002F  1207               	bcf	7,4	;volatile
   456                           
   457                           ;main.c: 88: RCEN = 1;
   458  0030  158D               	bsf	13,3	;volatile
   459  0031                     l1092:	
   460                           ;main.c: 89: while(IICIF==0);
   461                           
   462  0031  1E07               	btfss	7,4	;volatile
   463  0032  2831               	goto	l1092
   464                           
   465                           ;main.c: 90: IICIF = 0;
   466  0033  1207               	bcf	7,4	;volatile
   467                           
   468                           ;main.c: 91: ReadData = IICBUF;
   469  0034  080E               	movf	14,w	;volatile
   470  0035  00FA               	movwf	Read_IIC@ReadData
   471                           
   472                           ;main.c: 93: PEN =1;
   473  0036  150D               	bsf	13,2	;volatile
   474  0037                     l1095:	
   475                           ;main.c: 94: while(IICIF==0);
   476                           
   477  0037  1E07               	btfss	7,4	;volatile
   478  0038  2837               	goto	l1095
   479                           
   480                           ;main.c: 95: IICIF = 0;
   481  0039  1207               	bcf	7,4	;volatile
   482                           
   483                           ;main.c: 97: return ReadData;
   484  003A  087A               	movf	Read_IIC@ReadData,w
   485  003B  0008               	return
   486  003C                     __end_of_Read_IIC:	
   487                           
   488                           	psect	text3
   489  005D                     __ptext3:	
   490 ;; *************** function _Init_System *****************
   491 ;; Defined at:
   492 ;;		line 131 in file "C:\Edward_work_FILE\work_file\¿ª·¢ÎÄ¼þ\°´Ð¾Æ¬·ÖÀà×ÊÁÏ\SC\SC8F67XX\SC8F67XX_IIC_Master_Demo\main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg, status,2
   501 ;; Tracked objects:
   502 ;;		On entry : B00/0
   503 ;;		On exit  : 300/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   506 ;;      Params:         0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels used:    1
   512 ;; Hardware stack levels required when called:    1
   513 ;; This function calls:
   514 ;;		Nothing
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _Init_System
   522  005D                     _Init_System:	
   523                           
   524                           ;incstack = 0
   525                           ; Regs used in _Init_System: [wreg+status,2]
   526  005D  0000               	nop	;# 
   527  005E  0064               	clrwdt	;# 
   528                           
   529                           ;main.c: 135: INTCON = 0;
   530  005F  018B               	clrf	11	;volatile
   531                           
   532                           ;main.c: 136: OSCCON = 0X70;
   533  0060  3070               	movlw	112
   534  0061  1683               	bsf	3,5	;RP0=1, select bank1
   535  0062  1303               	bcf	3,6	;RP1=0, select bank1
   536  0063  0088               	movwf	8	;volatile
   537                           
   538                           ;main.c: 137: OPTION_REG = 0;
   539  0064  0181               	clrf	1	;volatile
   540                           
   541                           ;main.c: 138: ANSEL0 = 0;
   542  0065  1283               	bcf	3,5	;RP0=0, select bank2
   543  0066  1703               	bsf	3,6	;RP1=1, select bank2
   544  0067  0190               	clrf	16	;volatile
   545                           
   546                           ;main.c: 139: WPUA = 0B00000000;
   547  0068  1303               	bcf	3,6	;RP1=0, select bank0
   548  0069  0187               	clrf	7	;volatile
   549                           
   550                           ;main.c: 140: WPUB = 0B00001000;
   551  006A  3008               	movlw	8
   552  006B  0088               	movwf	8	;volatile
   553                           
   554                           ;main.c: 143: TRISA = 0B00000011;
   555  006C  3003               	movlw	3
   556  006D  1683               	bsf	3,5	;RP0=1, select bank1
   557  006E  0085               	movwf	5	;volatile
   558                           
   559                           ;main.c: 144: TRISB = 0B00001000;
   560  006F  3008               	movlw	8
   561  0070  0086               	movwf	6	;volatile
   562                           
   563                           ;main.c: 146: PORTA = 0B00000011;
   564  0071  3003               	movlw	3
   565  0072  1283               	bcf	3,5	;RP0=0, select bank0
   566  0073  0085               	movwf	5	;volatile
   567                           
   568                           ;main.c: 147: PORTB = 0B00000000;
   569  0074  0186               	clrf	6	;volatile
   570  0075  0008               	return
   571  0076                     __end_of_Init_System:	
   572                           
   573                           	psect	text4
   574  0099                     __ptext4:	
   575 ;; *************** function _DelayXms *****************
   576 ;; Defined at:
   577 ;;		line 22 in file "C:\Edward_work_FILE\work_file\¿ª·¢ÎÄ¼þ\°´Ð¾Æ¬·ÖÀà×ÊÁÏ\SC\SC8F67XX\SC8F67XX_IIC_Master_Demo\main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;  x               1    wreg     unsigned char 
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  x               1    2[COMMON] unsigned char 
   582 ;;  j               1    4[COMMON] unsigned char 
   583 ;;  i               1    3[COMMON] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0
   588 ;; Tracked objects:
   589 ;;		On entry : 100/200
   590 ;;		On exit  : 100/0
   591 ;;		Unchanged: 100/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         3       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0
   596 ;;      Totals:         3       0       0       0       0
   597 ;;Total ram usage:        3 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; Hardware stack levels required when called:    1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_main
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           
   608                           ;psect for function _DelayXms
   609  0099                     _DelayXms:	
   610                           
   611                           ;incstack = 0
   612                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   613                           ;DelayXms@x stored from wreg
   614  0099  00F9               	movwf	DelayXms@x
   615                           
   616                           ;main.c: 24: unsigned char i,j;
   617                           ;main.c: 25: for(i=x;i>0;i--)
   618  009A  00FA               	movwf	DelayXms@i
   619  009B                     l1495:	
   620  009B  087A               	movf	DelayXms@i,w
   621  009C  1903               	btfsc	3,2
   622  009D  0008               	return
   623                           
   624                           ;main.c: 26: for(j=153;j>0;j--);
   625  009E  3099               	movlw	153
   626  009F  00FB               	movwf	DelayXms@j
   627  00A0                     l1505:	
   628  00A0  0BFB               	decfsz	DelayXms@j,f
   629  00A1  28A0               	goto	l1505
   630  00A2  03FA               	decf	DelayXms@i,f
   631  00A3  289B               	goto	l1495
   632  00A4                     __end_of_DelayXms:	
   633                           
   634                           	psect	text5
   635  008B                     __ptext5:	
   636 ;; *************** function _PB_Isr *****************
   637 ;; Defined at:
   638 ;;		line 158 in file "C:\Edward_work_FILE\work_file\¿ª·¢ÎÄ¼þ\°´Ð¾Æ¬·ÖÀà×ÊÁÏ\SC\SC8F67XX\SC8F67XX_IIC_Master_Demo\main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0
   654 ;;      Temps:          2       0       0       0       0
   655 ;;      Totals:         2       0       0       0       0
   656 ;;Total ram usage:        2 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		Interrupt level 1
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           
   666                           ;psect for function _PB_Isr
   667  008B                     _PB_Isr:	
   668                           
   669                           ;main.c: 160: if(RBIF)
   670  008B  1C0B               	btfss	11,0	;volatile
   671  008C  2892               	goto	i1l1117
   672                           
   673                           ;main.c: 161: {
   674                           ;main.c: 162: RBIF = 0;
   675  008D  100B               	bcf	11,0	;volatile
   676                           
   677                           ;main.c: 163: RB6 = ~RB6;
   678  008E  3040               	movlw	64
   679  008F  1283               	bcf	3,5	;RP0=0, select bank0
   680  0090  1303               	bcf	3,6	;RP1=0, select bank0
   681  0091  0686               	xorwf	6,f
   682  0092                     i1l1117:	
   683  0092  0878               	movf	??_PB_Isr+1,w
   684  0093  008A               	movwf	10
   685  0094  0E77               	swapf	??_PB_Isr^(0+-128),w
   686  0095  0083               	movwf	3
   687  0096  0EFE               	swapf	126,f
   688  0097  0E7E               	swapf	126,w
   689  0098  0009               	retfie
   690  0099                     __end_of_PB_Isr:	
   691  007E                     btemp	set	126	;btemp
   692  007E                     wtemp0	set	126
   693                           
   694                           	psect	intentry
   695  0004                     __pintentry:	
   696                           ;incstack = 0
   697                           ; Regs used in _PB_Isr: [wreg]
   698                           
   699  0004                     interrupt_function:	
   700  007E                     saved_w	set	btemp
   701  0004  00FE               	movwf	btemp
   702  0005  0E03               	swapf	3,w
   703  0006  00F7               	movwf	??_PB_Isr
   704  0007  080A               	movf	10,w
   705  0008  00F8               	movwf	??_PB_Isr+1
   706  0009  118A  288B         	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms
    _main->_Read_IIC

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PB_Isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PB_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     294
                           _DelayXms
                        _Init_System
                           _Read_IIC
                          _Write_IIC
 ---------------------------------------------------------------------------------
 (1) _Write_IIC                                            2     1      1      87
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Read_IIC                                             3     2      1     132
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0      75
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _PB_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Init_System
   _Read_IIC
   _Write_IIC

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BITBANK3            50      0       0       7        0.0%
BANK3               50      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
ABS                  0      0       C      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 23 14:24:01 2021

                    _RB5 0035                      _RB6 0036                      _PEN 086A  
                    _SEN 0868                     l1062 0079                     l1071 0087  
                   l1080 001E                     l1065 007E                     l1083 0023  
                   l1092 0031                     l1068 0083                     l1077 0019  
                   l1086 0027                     l1095 0037                     l1505 00A0  
                   l1089 002D                     l1601 0048                     l1495 009B  
                   _RBIF 0058                     _RCEN 086B                     _RSEN 0869  
                   _WPUA 0007                     _WPUB 0008                     _main 003C  
                   btemp 007E                     start 000B            ??_Init_System 0079  
                  ?_main 0077                    _IICIF 083C                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_DelayXms 00A4          __initialization 000D             __end_of_main 005D  
       __end_of_Read_IIC 003C                   ??_main 007C      __end_of_Init_System 0076  
           Read_IIC@data 0079                   _ANSEL0 0110                   _IICADD 0109  
                 _IICCON 010C                   _IICBUF 010E                   i1l1117 0092  
                 _INTCON 000B                   _OSCCON 0088                   _PB_Isr 008B  
                 _result 0074                   saved_w 007E  __end_of__initialization 0014  
     __size_of_Write_IIC 0015           __pcstackCOMMON 0077              _Init_System 005D  
              ?_DelayXms 0077                ?_Read_IIC 0079                  ?_PB_Isr 0077  
        Write_IIC@Adress 007A               __pmaintext 003C               __pintentry 0004  
      __end_of_Write_IIC 008B               ??_DelayXms 0079               ??_Read_IIC 007A  
        __size_of_PB_Isr 000E                  __ptext0 0000                  __ptext1 0076  
                __ptext2 0017                  __ptext3 005D                  __ptext4 0099  
                __ptext5 008B                  _result1 0072                  _result2 0070  
   end_of_initialization 0014                DelayXms@i 007A                DelayXms@j 007B  
              DelayXms@x 0079           __end_of_PB_Isr 0099             ?_Init_System 0077  
    start_initialization 000D        __size_of_DelayXms 000B                 ??_PB_Isr 0077  
          Write_IIC@data 0079        __size_of_Read_IIC 0025              __pbssCOMMON 0070  
              ___latbits 0001                _Write_IIC 0076           Read_IIC@Adress 007B  
             ?_Write_IIC 0079         Read_IIC@ReadData 007A        interrupt_function 0004  
            _IICReadData 0076     __size_of_Init_System 0019                 _DelayXms 0099  
               _Read_IIC 0017              ??_Write_IIC 007A            __size_of_main 0021  
               intlevel1 0000               _OPTION_REG 0081  
