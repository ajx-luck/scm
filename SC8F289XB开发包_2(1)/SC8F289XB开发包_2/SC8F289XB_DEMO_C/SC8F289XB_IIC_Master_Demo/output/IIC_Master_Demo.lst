

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 18 13:13:20 2022

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2892B
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	pa_nodes0,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	text0
    52  0000                     __ptext0:	
    53  000B                     _INTCON	set	11
    54  0008                     _WPUB	set	8
    55  0007                     _WPUA	set	7
    56  0006                     _PORTB	set	6
    57  0005                     _PORTA	set	5
    58  0035                     _RB5	set	53
    59  0088                     _OSCCON	set	136
    60  0086                     _TRISB	set	134
    61  0085                     _TRISA	set	133
    62  0081                     _OPTION_REG	set	129
    63  010E                     _IICBUF	set	270
    64  010C                     _IICCON	set	268
    65  0109                     _IICADD	set	265
    66  0868                     _SEN	set	2152
    67  0869                     _RSEN	set	2153
    68  086A                     _PEN	set	2154
    69  086B                     _RCEN	set	2155
    70  083C                     _IICIF	set	2108
    71                           
    72                           	psect	cinit
    73  07F6                     start_initialization:	
    74                           ; #config settings
    75                           
    76  07F6                     __initialization:	
    77                           
    78                           ; Clear objects allocated to COMMON
    79  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
    80  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    81  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    82  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    83  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    84  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    85  07FC  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    86  07FD                     end_of_initialization:	
    87                           ;End of C runtime variable initialization code
    88                           
    89  07FD                     __end_of__initialization:	
    90  07FD  0183               	clrf	3
    91  07FE  118A  2FB0         	ljmp	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMMON
    94  0070                     __pbssCOMMON:	
    95  0070                     _result2:	
    96  0070                     	ds	2
    97  0072                     _result1:	
    98  0072                     	ds	2
    99  0074                     _result:	
   100  0074                     	ds	2
   101  0076                     _IICReadData:	
   102  0076                     	ds	1
   103                           
   104                           	psect	cstackCOMMON
   105  0077                     __pcstackCOMMON:	
   106  0077                     ?_Init_System:	
   107  0077                     ??_Init_System:	
   108                           ; 1 bytes @ 0x0
   109                           
   110  0077                     ?_DelayXms:	
   111                           ; 1 bytes @ 0x0
   112                           
   113  0077                     ??_DelayXms:	
   114                           ; 1 bytes @ 0x0
   115                           
   116  0077                     ?_Write_IIC:	
   117                           ; 1 bytes @ 0x0
   118                           
   119  0077                     ?_Read_IIC:	
   120                           ; 1 bytes @ 0x0
   121                           
   122  0077                     ?_main:	
   123                           ; 1 bytes @ 0x0
   124                           
   125  0077                     DelayXms@x:	
   126                           ; 1 bytes @ 0x0
   127                           
   128  0077                     Write_IIC@data:	
   129                           ; 1 bytes @ 0x0
   130                           
   131  0077                     Read_IIC@data:	
   132                           ; 1 bytes @ 0x0
   133                           
   134                           
   135                           ; 1 bytes @ 0x0
   136  0077                     	ds	1
   137  0078                     ??_Write_IIC:	
   138  0078                     ??_Read_IIC:	
   139                           ; 1 bytes @ 0x1
   140                           
   141  0078                     DelayXms@i:	
   142                           ; 1 bytes @ 0x1
   143                           
   144  0078                     Write_IIC@Adress:	
   145                           ; 1 bytes @ 0x1
   146                           
   147  0078                     Read_IIC@ReadData:	
   148                           ; 1 bytes @ 0x1
   149                           
   150                           
   151                           ; 1 bytes @ 0x1
   152  0078                     	ds	1
   153  0079                     DelayXms@j:	
   154  0079                     Read_IIC@Adress:	
   155                           ; 1 bytes @ 0x2
   156                           
   157                           
   158                           ; 1 bytes @ 0x2
   159  0079                     	ds	1
   160  007A                     ??_main:	
   161                           
   162                           	psect	maintext
   163  07B0                     __pmaintext:	
   164                           ; 1 bytes @ 0x3
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 135 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB开发包_2\SC8F289XB_DEMO_C\SC8F289XB
      +_IIC_Master_Demo\main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;                  1    wreg      void 
   177 ;; Registers used:
   178 ;;		wreg, status,2, status,0, pclath, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : B00/0
   181 ;;		On exit  : 300/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   184 ;;      Params:         0       0       0       0
   185 ;;      Locals:         0       0       0       0
   186 ;;      Temps:          0       0       0       0
   187 ;;      Totals:         0       0       0       0
   188 ;;Total ram usage:        0 bytes
   189 ;; Hardware stack levels required when called:    1
   190 ;; This function calls:
   191 ;;		_DelayXms
   192 ;;		_Init_System
   193 ;;		_Read_IIC
   194 ;;		_Write_IIC
   195 ;; This function is called by:
   196 ;;		Startup code after reset
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           
   201                           ;psect for function _main
   202  07B0                     _main:	
   203                           
   204                           ;main.c: 137: Init_System();
   205                           
   206                           ;incstack = 0
   207                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   208  07B0  118A  279A  118A   	fcall	_Init_System
   209                           
   210                           ;main.c: 138: TRISA |= 0b00000011;
   211  07B3  3003               	movlw	3
   212  07B4  1683               	bsf	3,5	;RP0=1, select bank1
   213  07B5  0485               	iorwf	5,f	;volatile
   214                           
   215                           ;main.c: 171: IICCON = 0B00100000;
   216  07B6  3020               	movlw	32
   217  07B7  1283               	bcf	3,5	;RP0=0, select bank2
   218  07B8  1703               	bsf	3,6	;RP1=1, select bank2
   219  07B9  008C               	movwf	12	;volatile
   220                           
   221                           ;main.c: 172: IICADD = 36;
   222  07BA  3024               	movlw	36
   223  07BB  0089               	movwf	9	;volatile
   224  07BC                     l1293:	
   225                           
   226                           ;main.c: 175: {
   227                           ;main.c: 176: DelayXms(200);
   228  07BC  30C8               	movlw	200
   229  07BD  118A  277A  118A   	fcall	_DelayXms
   230                           
   231                           ;main.c: 177: Write_IIC(0xa0,0x80);
   232  07C0  3080               	movlw	128
   233  07C1  00F7               	movwf	Write_IIC@data
   234  07C2  30A0               	movlw	160
   235  07C3  118A  2785  118A   	fcall	_Write_IIC
   236                           
   237                           ;main.c: 179: IICReadData = Read_IIC(0xa0,0x80);
   238  07C6  3080               	movlw	128
   239  07C7  00F7               	movwf	Read_IIC@data
   240  07C8  30A0               	movlw	160
   241  07C9  118A  27D1  118A   	fcall	_Read_IIC
   242  07CC  00F6               	movwf	_IICReadData	;volatile
   243                           
   244                           ;main.c: 180: RB5 = ~RB5;
   245  07CD  3020               	movlw	32
   246  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   247  07CF  0686               	xorwf	6,f
   248  07D0  2FBC               	goto	l1293
   249  07D1                     __end_of_main:	
   250                           
   251                           	psect	text1
   252  0785                     __ptext1:	
   253 ;; *************** function _Write_IIC *****************
   254 ;; Defined at:
   255 ;;		line 42 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB开发包_2\SC8F289XB_DEMO_C\SC8F289XB_
      +IIC_Master_Demo\main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;  Adress          1    wreg     unsigned char 
   258 ;;  data            1    0[COMMON] unsigned char 
   259 ;; Auto vars:     Size  Location     Type
   260 ;;  Adress          1    1[COMMON] unsigned char 
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg
   265 ;; Tracked objects:
   266 ;;		On entry : 100/200
   267 ;;		On exit  : 300/200
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   270 ;;      Params:         1       0       0       0
   271 ;;      Locals:         1       0       0       0
   272 ;;      Temps:          0       0       0       0
   273 ;;      Totals:         2       0       0       0
   274 ;;Total ram usage:        2 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           
   284                           ;psect for function _Write_IIC
   285  0785                     _Write_IIC:	
   286                           
   287                           ;incstack = 0
   288                           ; Regs used in _Write_IIC: [wreg]
   289                           ;Write_IIC@Adress stored from wreg
   290  0785  00F8               	movwf	Write_IIC@Adress
   291                           
   292                           ;main.c: 77: SEN =1;
   293  0786  1703               	bsf	3,6	;RP1=1, select bank2
   294  0787  140D               	bsf	13,0	;volatile
   295  0788                     l760:	
   296                           ;main.c: 78: while(IICIF==0);
   297                           
   298  0788  1E07               	btfss	7,4	;volatile
   299  0789  2F88               	goto	l760
   300                           
   301                           ;main.c: 79: IICIF = 0;
   302  078A  1207               	bcf	7,4	;volatile
   303                           
   304                           ;main.c: 80: IICBUF = Adress;
   305  078B  0878               	movf	Write_IIC@Adress,w
   306  078C  008E               	movwf	14	;volatile
   307  078D                     l763:	
   308                           ;main.c: 81: while(IICIF==0);
   309                           
   310  078D  1E07               	btfss	7,4	;volatile
   311  078E  2F8D               	goto	l763
   312                           
   313                           ;main.c: 82: IICIF = 0;
   314  078F  1207               	bcf	7,4	;volatile
   315                           
   316                           ;main.c: 83: IICBUF = data;
   317  0790  0877               	movf	Write_IIC@data,w
   318  0791  008E               	movwf	14	;volatile
   319  0792                     l766:	
   320                           ;main.c: 84: while(IICIF==0);
   321                           
   322  0792  1E07               	btfss	7,4	;volatile
   323  0793  2F92               	goto	l766
   324                           
   325                           ;main.c: 85: IICIF = 0;
   326  0794  1207               	bcf	7,4	;volatile
   327                           
   328                           ;main.c: 86: PEN =1;
   329  0795  150D               	bsf	13,2	;volatile
   330  0796                     l769:	
   331                           ;main.c: 87: while(IICIF==0);
   332                           
   333  0796  1E07               	btfss	7,4	;volatile
   334  0797  2F96               	goto	l769
   335                           
   336                           ;main.c: 88: IICIF = 0;
   337  0798  1207               	bcf	7,4	;volatile
   338  0799  0008               	return
   339  079A                     __end_of_Write_IIC:	
   340                           
   341                           	psect	text2
   342  07D1                     __ptext2:	
   343 ;; *************** function _Read_IIC *****************
   344 ;; Defined at:
   345 ;;		line 98 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB开发包_2\SC8F289XB_DEMO_C\SC8F289XB_
      +IIC_Master_Demo\main.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  Adress          1    wreg     unsigned char 
   348 ;;  data            1    0[COMMON] unsigned char 
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  Adress          1    2[COMMON] unsigned char 
   351 ;;  ReadData        1    1[COMMON] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      unsigned char 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0
   356 ;; Tracked objects:
   357 ;;		On entry : 300/200
   358 ;;		On exit  : 300/200
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   361 ;;      Params:         1       0       0       0
   362 ;;      Locals:         2       0       0       0
   363 ;;      Temps:          0       0       0       0
   364 ;;      Totals:         3       0       0       0
   365 ;;Total ram usage:        3 bytes
   366 ;; Hardware stack levels used:    1
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _Read_IIC
   376  07D1                     _Read_IIC:	
   377                           
   378                           ;incstack = 0
   379                           ; Regs used in _Read_IIC: [wreg+status,2+status,0]
   380                           ;Read_IIC@Adress stored from wreg
   381  07D1  00F9               	movwf	Read_IIC@Adress
   382                           
   383                           ;main.c: 100: unsigned char ReadData;
   384                           ;main.c: 102: SEN =1;
   385  07D2  140D               	bsf	13,0	;volatile
   386  07D3                     l775:	
   387                           ;main.c: 103: while(IICIF==0);
   388                           
   389  07D3  1E07               	btfss	7,4	;volatile
   390  07D4  2FD3               	goto	l775
   391                           
   392                           ;main.c: 104: IICIF = 0;
   393  07D5  1207               	bcf	7,4	;volatile
   394                           
   395                           ;main.c: 105: IICBUF = Adress;
   396  07D6  0879               	movf	Read_IIC@Adress,w
   397  07D7  008E               	movwf	14	;volatile
   398  07D8                     l778:	
   399                           ;main.c: 106: while(IICIF==0);
   400                           
   401  07D8  1E07               	btfss	7,4	;volatile
   402  07D9  2FD8               	goto	l778
   403                           
   404                           ;main.c: 108: IICIF = 0;
   405  07DA  1207               	bcf	7,4	;volatile
   406                           
   407                           ;main.c: 109: IICBUF = data;
   408  07DB  0877               	movf	Read_IIC@data,w
   409  07DC  008E               	movwf	14	;volatile
   410  07DD                     l781:	
   411                           ;main.c: 110: while(IICIF==0);
   412                           
   413  07DD  1E07               	btfss	7,4	;volatile
   414  07DE  2FDD               	goto	l781
   415                           
   416                           ;main.c: 111: IICIF = 0;
   417  07DF  1207               	bcf	7,4	;volatile
   418                           
   419                           ;main.c: 113: RSEN =1;
   420  07E0  148D               	bsf	13,1	;volatile
   421  07E1                     l784:	
   422                           ;main.c: 114: while(IICIF==0);
   423                           
   424  07E1  1E07               	btfss	7,4	;volatile
   425  07E2  2FE1               	goto	l784
   426                           
   427                           ;main.c: 116: IICIF = 0;
   428  07E3  1207               	bcf	7,4	;volatile
   429                           
   430                           ;main.c: 118: IICBUF = Adress+1;
   431  07E4  0879               	movf	Read_IIC@Adress,w
   432  07E5  3E01               	addlw	1
   433  07E6  008E               	movwf	14	;volatile
   434  07E7                     l787:	
   435                           ;main.c: 119: while(IICIF==0);
   436                           
   437  07E7  1E07               	btfss	7,4	;volatile
   438  07E8  2FE7               	goto	l787
   439                           
   440                           ;main.c: 120: IICIF = 0;
   441  07E9  1207               	bcf	7,4	;volatile
   442                           
   443                           ;main.c: 121: RCEN = 1;
   444  07EA  158D               	bsf	13,3	;volatile
   445  07EB                     l790:	
   446                           ;main.c: 122: while(IICIF==0);
   447                           
   448  07EB  1E07               	btfss	7,4	;volatile
   449  07EC  2FEB               	goto	l790
   450                           
   451                           ;main.c: 123: IICIF = 0;
   452  07ED  1207               	bcf	7,4	;volatile
   453                           
   454                           ;main.c: 124: ReadData = IICBUF;
   455  07EE  080E               	movf	14,w	;volatile
   456  07EF  00F8               	movwf	Read_IIC@ReadData
   457                           
   458                           ;main.c: 126: PEN =1;
   459  07F0  150D               	bsf	13,2	;volatile
   460  07F1                     l793:	
   461                           ;main.c: 127: while(IICIF==0);
   462                           
   463  07F1  1E07               	btfss	7,4	;volatile
   464  07F2  2FF1               	goto	l793
   465                           
   466                           ;main.c: 128: IICIF = 0;
   467  07F3  1207               	bcf	7,4	;volatile
   468                           
   469                           ;main.c: 130: return ReadData;
   470  07F4  0878               	movf	Read_IIC@ReadData,w
   471  07F5  0008               	return
   472  07F6                     __end_of_Read_IIC:	
   473                           
   474                           	psect	text3
   475  079A                     __ptext3:	
   476 ;; *************** function _Init_System *****************
   477 ;; Defined at:
   478 ;;		line 193 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB开发包_2\SC8F289XB_DEMO_C\SC8F289XB
      +_IIC_Master_Demo\main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2
   487 ;; Tracked objects:
   488 ;;		On entry : B00/0
   489 ;;		On exit  : 300/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   492 ;;      Params:         0       0       0       0
   493 ;;      Locals:         0       0       0       0
   494 ;;      Temps:          0       0       0       0
   495 ;;      Totals:         0       0       0       0
   496 ;;Total ram usage:        0 bytes
   497 ;; Hardware stack levels used:    1
   498 ;; This function calls:
   499 ;;		Nothing
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _Init_System
   507  079A                     _Init_System:	
   508                           
   509                           ;incstack = 0
   510                           ; Regs used in _Init_System: [wreg+status,2]
   511  079A  0000               	nop	;# 
   512  079B  0064               	clrwdt	;# 
   513                           
   514                           ;main.c: 197: INTCON = 0;
   515  079C  018B               	clrf	11	;volatile
   516                           
   517                           ;main.c: 198: OSCCON = 0X70;
   518  079D  3070               	movlw	112
   519  079E  1683               	bsf	3,5	;RP0=1, select bank1
   520  079F  1303               	bcf	3,6	;RP1=0, select bank1
   521  07A0  0088               	movwf	8	;volatile
   522                           
   523                           ;main.c: 199: OPTION_REG = 0;
   524  07A1  0181               	clrf	1	;volatile
   525                           
   526                           ;main.c: 201: WPUA = 0B00000000;
   527  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   528  07A3  0187               	clrf	7	;volatile
   529                           
   530                           ;main.c: 202: WPUB = 0B00001000;
   531  07A4  3008               	movlw	8
   532  07A5  0088               	movwf	8	;volatile
   533                           
   534                           ;main.c: 205: TRISA = 0B00000011;
   535  07A6  3003               	movlw	3
   536  07A7  1683               	bsf	3,5	;RP0=1, select bank1
   537  07A8  0085               	movwf	5	;volatile
   538                           
   539                           ;main.c: 206: TRISB = 0B00001000;
   540  07A9  3008               	movlw	8
   541  07AA  0086               	movwf	6	;volatile
   542                           
   543                           ;main.c: 208: PORTA = 0B00000011;
   544  07AB  3003               	movlw	3
   545  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   546  07AD  0085               	movwf	5	;volatile
   547                           
   548                           ;main.c: 209: PORTB = 0B00000000;
   549  07AE  0186               	clrf	6	;volatile
   550  07AF  0008               	return
   551  07B0                     __end_of_Init_System:	
   552                           
   553                           	psect	text4
   554  077A                     __ptext4:	
   555 ;; *************** function _DelayXms *****************
   556 ;; Defined at:
   557 ;;		line 22 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB开发包_2\SC8F289XB_DEMO_C\SC8F289XB_
      +IIC_Master_Demo\main.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;  x               1    wreg     unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  x               1    0[COMMON] unsigned char 
   562 ;;  j               1    2[COMMON] unsigned char 
   563 ;;  i               1    1[COMMON] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0
   568 ;; Tracked objects:
   569 ;;		On entry : 100/200
   570 ;;		On exit  : 100/0
   571 ;;		Unchanged: 100/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   573 ;;      Params:         0       0       0       0
   574 ;;      Locals:         3       0       0       0
   575 ;;      Temps:          0       0       0       0
   576 ;;      Totals:         3       0       0       0
   577 ;;Total ram usage:        3 bytes
   578 ;; Hardware stack levels used:    1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _DelayXms
   588  077A                     _DelayXms:	
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   592                           ;DelayXms@x stored from wreg
   593  077A  00F7               	movwf	DelayXms@x
   594                           
   595                           ;main.c: 24: unsigned char i,j;
   596                           ;main.c: 25: for(i=x;i>0;i--)
   597  077B  00F8               	movwf	DelayXms@i
   598  077C                     l1187:	
   599  077C  0878               	movf	DelayXms@i,w
   600  077D  1903               	btfsc	3,2
   601  077E  0008               	return
   602                           
   603                           ;main.c: 26: for(j=153;j>0;j--);
   604  077F  3099               	movlw	153
   605  0780  00F9               	movwf	DelayXms@j
   606  0781                     l1197:	
   607  0781  0BF9               	decfsz	DelayXms@j,f
   608  0782  2F81               	goto	l1197
   609  0783  03F8               	decf	DelayXms@i,f
   610  0784  2F7C               	goto	l1187
   611  0785                     __end_of_DelayXms:	
   612  007E                     btemp	set	126	;btemp
   613  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms
    _main->_Read_IIC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     294
                           _DelayXms
                        _Init_System
                           _Read_IIC
                          _Write_IIC
 ---------------------------------------------------------------------------------
 (1) _Write_IIC                                            2     1      1      87
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Read_IIC                                             3     2      1     132
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0      75
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Init_System
   _Read_IIC
   _Write_IIC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       A       8        0.0%
DATA                 0      0       A       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 18 13:13:20 2022

                    l760 0788                      l763 078D                      l781 07DD  
                    l790 07EB                      l766 0792                      l775 07D3  
                    l784 07E1                      l793 07F1                      l769 0796  
                    l778 07D8                      l787 07E7                      _RB5 0035  
                    _PEN 086A                      _SEN 0868                     l1187 077C  
                   l1197 0781                     l1293 07BC                     _RCEN 086B  
                   _RSEN 0869                     _WPUA 0007                     _WPUB 0008  
                   _main 07B0                     btemp 007E                     start 0000  
          ??_Init_System 0077                    ?_main 0077                    _IICIF 083C  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
       __end_of_DelayXms 0785          __initialization 07F6             __end_of_main 07D1  
       __end_of_Read_IIC 07F6                   ??_main 007A      __end_of_Init_System 07B0  
           Read_IIC@data 0077                   _IICADD 0109                   _IICCON 010C  
                 _IICBUF 010E                   _INTCON 000B                   _OSCCON 0088  
                 _result 0074  __end_of__initialization 07FD       __size_of_Write_IIC 0015  
         __pcstackCOMMON 0077              _Init_System 079A                ?_DelayXms 0077  
              ?_Read_IIC 0077          Write_IIC@Adress 0078               __pmaintext 07B0  
      __end_of_Write_IIC 079A               ??_DelayXms 0077               ??_Read_IIC 0078  
                __ptext0 0000                  __ptext1 0785                  __ptext2 07D1  
                __ptext3 079A                  __ptext4 077A                  _result1 0072  
                _result2 0070     end_of_initialization 07FD                DelayXms@i 0078  
              DelayXms@j 0079                DelayXms@x 0077             ?_Init_System 0077  
    start_initialization 07F6        __size_of_DelayXms 000B            Write_IIC@data 0077  
      __size_of_Read_IIC 0025              __pbssCOMMON 0070                ___latbits 0001  
              _Write_IIC 0785           Read_IIC@Adress 0079               ?_Write_IIC 0077  
       Read_IIC@ReadData 0078              _IICReadData 0076     __size_of_Init_System 0016  
               _DelayXms 077A                 _Read_IIC 07D1              ??_Write_IIC 0078  
          __size_of_main 0021               _OPTION_REG 0081  
