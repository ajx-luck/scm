

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 16 09:59:15 2022

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2892B
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	text0
    51  0000                     __ptext0:	
    52  0013                     _PWMCON0	set	19
    53  0012                     _T2CON	set	18
    54  000D                     _PIE1	set	13
    55  000C                     _PIR1	set	12
    56  000B                     _INTCON	set	11
    57  0008                     _WPUB	set	8
    58  0007                     _WPUA	set	7
    59  0006                     _PORTB	set	6
    60  0005                     _PORTA	set	5
    61  0061                     _TMR2IF	set	97
    62  009D                     _ADCON0	set	157
    63  009A                     _OPA1CON	set	154
    64  0098                     _OPA0CON	set	152
    65  0091                     _PR2	set	145
    66  0088                     _OSCCON	set	136
    67  0087                     _WPDB	set	135
    68  0086                     _TRISB	set	134
    69  0085                     _TRISA	set	133
    70  0081                     _OPTION_REG	set	129
    71                           
    72                           	psect	cinit
    73  000D                     start_initialization:	
    74                           ; #config settings
    75                           
    76  000D                     __initialization:	
    77  000D                     end_of_initialization:	
    78                           ;End of C runtime variable initialization code
    79                           
    80  000D                     __end_of__initialization:	
    81  000D  0183               	clrf	3
    82  000E  118A  285F         	ljmp	_main	;jump to C main() function
    83                           
    84                           	psect	cstackCOMMON
    85  0070                     __pcstackCOMMON:	
    86  0070                     ?_Init_System:	
    87  0070                     ?_SystemSleep:	
    88                           ; 1 bytes @ 0x0
    89                           
    90  0070                     ?_main:	
    91                           ; 1 bytes @ 0x0
    92                           
    93  0070                     ?_Isr_Timer:	
    94                           ; 1 bytes @ 0x0
    95                           
    96  0070                     ??_Isr_Timer:	
    97                           ; 1 bytes @ 0x0
    98                           
    99                           
   100                           ; 1 bytes @ 0x0
   101  0070                     	ds	2
   102  0072                     ??_Init_System:	
   103  0072                     ??_SystemSleep:	
   104                           ; 1 bytes @ 0x2
   105                           
   106  0072                     ??_main:	
   107                           ; 1 bytes @ 0x2
   108                           
   109                           
   110                           	psect	maintext
   111  005F                     __pmaintext:	
   112                           ; 1 bytes @ 0x2
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 73 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_RTC_Demo\SC8F289XB_RTC_Demo.c"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;		None
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, status,2, status,0, pclath, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : B00/0
   129 ;;		On exit  : 300/100
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   132 ;;      Params:         0       0       0       0
   133 ;;      Locals:         0       0       0       0
   134 ;;      Temps:          0       0       0       0
   135 ;;      Totals:         0       0       0       0
   136 ;;Total ram usage:        0 bytes
   137 ;; Hardware stack levels required when called:    2
   138 ;; This function calls:
   139 ;;		_Init_System
   140 ;;		_SystemSleep
   141 ;; This function is called by:
   142 ;;		Startup code after reset
   143 ;; This function uses a non-reentrant model
   144 ;;
   145                           
   146                           
   147                           ;psect for function _main
   148  005F                     _main:	
   149                           
   150                           ;SC8F289XB_RTC_Demo.c: 75: Init_System();
   151                           
   152                           ;incstack = 0
   153                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   154  005F  118A  2032  118A   	fcall	_Init_System
   155  0062                     l754:	
   156                           ;SC8F289XB_RTC_Demo.c: 76: while(1)
   157                           
   158  0062  0064               	clrwdt	;# 
   159                           
   160                           ;SC8F289XB_RTC_Demo.c: 79: SystemSleep();
   161  0063  118A  2010  118A   	fcall	_SystemSleep
   162  0066  2862               	goto	l754
   163  0067                     __end_of_main:	
   164                           
   165                           	psect	text1
   166  0010                     __ptext1:	
   167 ;; *************** function _SystemSleep *****************
   168 ;; Defined at:
   169 ;;		line 38 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_RTC_Demo\SC8F289XB_RTC_Demo.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2, status,0
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 300/100
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   183 ;;      Params:         0       0       0       0
   184 ;;      Locals:         0       0       0       0
   185 ;;      Temps:          0       0       0       0
   186 ;;      Totals:         0       0       0       0
   187 ;;Total ram usage:        0 bytes
   188 ;; Hardware stack levels used:    1
   189 ;; Hardware stack levels required when called:    1
   190 ;; This function calls:
   191 ;;		Nothing
   192 ;; This function is called by:
   193 ;;		_main
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           
   198                           ;psect for function _SystemSleep
   199  0010                     _SystemSleep:	
   200                           
   201                           ;SC8F289XB_RTC_Demo.c: 41: PIE1 = 2;
   202                           
   203                           ;incstack = 0
   204                           ; Regs used in _SystemSleep: [wreg+status,2+status,0]
   205  0010  3002               	movlw	2
   206  0011  1283               	bcf	3,5	;RP0=0, select bank0
   207  0012  1303               	bcf	3,6	;RP1=0, select bank0
   208  0013  008D               	movwf	13	;volatile
   209                           
   210                           ;SC8F289XB_RTC_Demo.c: 42: INTCON = 0XC0;
   211  0014  30C0               	movlw	192
   212  0015  008B               	movwf	11	;volatile
   213                           
   214                           ;SC8F289XB_RTC_Demo.c: 43: if(0X8F != T2CON)
   215  0016  308F               	movlw	143
   216  0017  0612               	xorwf	18,w	;volatile
   217  0018  1903               	btfsc	3,2
   218  0019  281C               	goto	l1176
   219                           
   220                           ;SC8F289XB_RTC_Demo.c: 44: T2CON = 0X8F;
   221  001A  308F               	movlw	143
   222  001B  0092               	movwf	18	;volatile
   223  001C                     l1176:	
   224                           
   225                           ;SC8F289XB_RTC_Demo.c: 47: TRISA = 0;
   226  001C  1683               	bsf	3,5	;RP0=1, select bank1
   227  001D  0185               	clrf	5	;volatile
   228                           
   229                           ;SC8F289XB_RTC_Demo.c: 48: TRISB = 0;
   230  001E  0186               	clrf	6	;volatile
   231                           
   232                           ;SC8F289XB_RTC_Demo.c: 49: PORTA ^= 0XFF;
   233  001F  30FF               	movlw	255
   234  0020  1283               	bcf	3,5	;RP0=0, select bank0
   235  0021  0685               	xorwf	5,f	;volatile
   236                           
   237                           ;SC8F289XB_RTC_Demo.c: 51: PWMCON0 = 0;
   238  0022  0193               	clrf	19	;volatile
   239                           
   240                           ;SC8F289XB_RTC_Demo.c: 53: OPA0CON = 0;
   241  0023  1683               	bsf	3,5	;RP0=1, select bank1
   242  0024  0198               	clrf	24	;volatile
   243                           
   244                           ;SC8F289XB_RTC_Demo.c: 54: OPA1CON = 0;
   245  0025  019A               	clrf	26	;volatile
   246                           
   247                           ;SC8F289XB_RTC_Demo.c: 55: ADCON0 = 0;
   248  0026  019D               	clrf	29	;volatile
   249                           
   250                           ;SC8F289XB_RTC_Demo.c: 57: OPTION_REG = 0;
   251  0027  0181               	clrf	1	;volatile
   252                           
   253                           ;SC8F289XB_RTC_Demo.c: 59: OSCCON = 0X70;
   254  0028  3070               	movlw	112
   255  0029  0088               	movwf	8	;volatile
   256  002A  0064               	clrwdt	;# 
   257  002B  0063               	sleep	;# 
   258  002C  0000               	nop	;# 
   259  002D  0064               	clrwdt	;# 
   260                           
   261                           ;SC8F289XB_RTC_Demo.c: 66: OSCCON = 0X70;
   262  002E  1683               	bsf	3,5	;RP0=1, select bank1
   263  002F  1303               	bcf	3,6	;RP1=0, select bank1
   264  0030  0088               	movwf	8	;volatile
   265  0031  0008               	return
   266  0032                     __end_of_SystemSleep:	
   267                           
   268                           	psect	text2
   269  0032                     __ptext2:	
   270 ;; *************** function _Init_System *****************
   271 ;; Defined at:
   272 ;;		line 7 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_RTC_Demo\SC8F289XB_RTC_Demo.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;		None
   275 ;; Auto vars:     Size  Location     Type
   276 ;;		None
   277 ;; Return value:  Size  Location     Type
   278 ;;                  1    wreg      void 
   279 ;; Registers used:
   280 ;;		wreg, status,2
   281 ;; Tracked objects:
   282 ;;		On entry : B00/0
   283 ;;		On exit  : 300/0
   284 ;;		Unchanged: 0/0
   285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   286 ;;      Params:         0       0       0       0
   287 ;;      Locals:         0       0       0       0
   288 ;;      Temps:          0       0       0       0
   289 ;;      Totals:         0       0       0       0
   290 ;;Total ram usage:        0 bytes
   291 ;; Hardware stack levels used:    1
   292 ;; Hardware stack levels required when called:    1
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		_main
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _Init_System
   302  0032                     _Init_System:	
   303                           
   304                           ;incstack = 0
   305                           ; Regs used in _Init_System: [wreg+status,2]
   306  0032  0000               	nop	;# 
   307  0033  0064               	clrwdt	;# 
   308                           
   309                           ;SC8F289XB_RTC_Demo.c: 11: INTCON = 0;
   310  0034  018B               	clrf	11	;volatile
   311                           
   312                           ;SC8F289XB_RTC_Demo.c: 12: OSCCON = 0X72;
   313  0035  3072               	movlw	114
   314  0036  1683               	bsf	3,5	;RP0=1, select bank1
   315  0037  1303               	bcf	3,6	;RP1=0, select bank1
   316  0038  0088               	movwf	8	;volatile
   317                           
   318                           ;SC8F289XB_RTC_Demo.c: 13: OPTION_REG = 0;
   319  0039  0181               	clrf	1	;volatile
   320                           
   321                           ;SC8F289XB_RTC_Demo.c: 15: WPUA = 0B00000000;
   322  003A  1283               	bcf	3,5	;RP0=0, select bank0
   323  003B  0187               	clrf	7	;volatile
   324                           
   325                           ;SC8F289XB_RTC_Demo.c: 16: WPUB = 0B00000000;
   326  003C  0188               	clrf	8	;volatile
   327                           
   328                           ;SC8F289XB_RTC_Demo.c: 17: WPDB = 0B00000000;
   329  003D  1683               	bsf	3,5	;RP0=1, select bank1
   330  003E  0187               	clrf	7	;volatile
   331                           
   332                           ;SC8F289XB_RTC_Demo.c: 20: TRISA = 0;
   333  003F  0185               	clrf	5	;volatile
   334                           
   335                           ;SC8F289XB_RTC_Demo.c: 21: TRISB = 0;
   336  0040  0186               	clrf	6	;volatile
   337                           
   338                           ;SC8F289XB_RTC_Demo.c: 23: PORTA = 0B00000000;
   339  0041  1283               	bcf	3,5	;RP0=0, select bank0
   340  0042  0185               	clrf	5	;volatile
   341                           
   342                           ;SC8F289XB_RTC_Demo.c: 24: PORTB = 0B00000000;
   343  0043  0186               	clrf	6	;volatile
   344                           
   345                           ;SC8F289XB_RTC_Demo.c: 27: PIE1 = 2;
   346  0044  3002               	movlw	2
   347  0045  008D               	movwf	13	;volatile
   348                           
   349                           ;SC8F289XB_RTC_Demo.c: 29: PR2 = 0X80;
   350  0046  3080               	movlw	128
   351  0047  1683               	bsf	3,5	;RP0=1, select bank1
   352  0048  0091               	movwf	17	;volatile
   353                           
   354                           ;SC8F289XB_RTC_Demo.c: 30: T2CON = 0x8F;
   355  0049  308F               	movlw	143
   356  004A  1283               	bcf	3,5	;RP0=0, select bank0
   357  004B  0092               	movwf	18	;volatile
   358                           
   359                           ;SC8F289XB_RTC_Demo.c: 33: INTCON = 0XC0;
   360  004C  30C0               	movlw	192
   361  004D  008B               	movwf	11	;volatile
   362  004E  0008               	return
   363  004F                     __end_of_Init_System:	
   364                           
   365                           	psect	text3
   366  004F                     __ptext3:	
   367 ;; *************** function _Isr_Timer *****************
   368 ;; Defined at:
   369 ;;		line 86 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_RTC_Demo\SC8F289XB_RTC_Demo.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2, status,0
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 300/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   383 ;;      Params:         0       0       0       0
   384 ;;      Locals:         0       0       0       0
   385 ;;      Temps:          2       0       0       0
   386 ;;      Totals:         2       0       0       0
   387 ;;Total ram usage:        2 bytes
   388 ;; Hardware stack levels used:    1
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		Interrupt level 1
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           
   397                           ;psect for function _Isr_Timer
   398  004F                     _Isr_Timer:	
   399                           
   400                           ;SC8F289XB_RTC_Demo.c: 88: if(TMR2IF)
   401  004F  1283               	bcf	3,5	;RP0=0, select bank0
   402  0050  1303               	bcf	3,6	;RP1=0, select bank0
   403  0051  1C8C               	btfss	12,1	;volatile
   404  0052  2855               	goto	i1l1202
   405                           
   406                           ;SC8F289XB_RTC_Demo.c: 89: {
   407                           ;SC8F289XB_RTC_Demo.c: 91: TMR2IF = 0;
   408  0053  108C               	bcf	12,1	;volatile
   409                           
   410                           ;SC8F289XB_RTC_Demo.c: 93: }
   411  0054  2858               	goto	i1l764
   412  0055                     i1l1202:	
   413                           
   414                           ;SC8F289XB_RTC_Demo.c: 94: else
   415                           ;SC8F289XB_RTC_Demo.c: 95: {
   416                           ;SC8F289XB_RTC_Demo.c: 96: PIR1 = 0;
   417  0055  018C               	clrf	12	;volatile
   418                           
   419                           ;SC8F289XB_RTC_Demo.c: 97: INTCON &= 0XC0;
   420  0056  30C0               	movlw	192
   421  0057  058B               	andwf	11,f	;volatile
   422  0058                     i1l764:	
   423  0058  0871               	movf	??_Isr_Timer+1,w
   424  0059  008A               	movwf	10
   425  005A  0E70               	swapf	??_Isr_Timer^(0+-128),w
   426  005B  0083               	movwf	3
   427  005C  0EFE               	swapf	126,f
   428  005D  0E7E               	swapf	126,w
   429  005E  0009               	retfie
   430  005F                     __end_of_Isr_Timer:	
   431  007E                     btemp	set	126	;btemp
   432  007E                     wtemp0	set	126
   433                           
   434                           	psect	intentry
   435  0004                     __pintentry:	
   436                           ;incstack = 0
   437                           ; Regs used in _Isr_Timer: [wreg+status,2+status,0]
   438                           
   439  0004                     interrupt_function:	
   440  007E                     saved_w	set	btemp
   441  0004  00FE               	movwf	btemp
   442  0005  0E03               	swapf	3,w
   443  0006  00F0               	movwf	??_Isr_Timer
   444  0007  080A               	movf	10,w
   445  0008  00F1               	movwf	??_Isr_Timer+1
   446  0009  118A  284F         	ljmp	_Isr_Timer


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Isr_Timer in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr_Timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr_Timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr_Timer in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Init_System
                        _SystemSleep
 ---------------------------------------------------------------------------------
 (1) _SystemSleep                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Isr_Timer                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_System
   _SystemSleep

 _Isr_Timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 16 09:59:15 2022

                    l754 0062                      _PR2 0091                     l1176 001C  
                   _PIE1 000D                     _PIR1 000C                     _WPDB 0087  
                   _WPUA 0007                     _WPUB 0008                     _main 005F  
                   btemp 007E                     start 000B     __size_of_SystemSleep 0022  
          ??_Init_System 0072                    ?_main 0070                    _T2CON 0012  
                  i1l764 0058                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 0067                   ??_main 0072      __end_of_Init_System 004F  
                 _ADCON0 009D                   i1l1202 0055                   _INTCON 000B  
                 _OSCCON 0088                   _TMR2IF 0061       __size_of_Isr_Timer 0010  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0070  
            _Init_System 0032        __end_of_Isr_Timer 005F               __pmaintext 005F  
             __pintentry 0004                  _OPA0CON 0098                  _OPA1CON 009A  
                _PWMCON0 0013            ??_SystemSleep 0072                  __ptext0 0000  
                __ptext1 0010                  __ptext2 0032                  __ptext3 004F  
   end_of_initialization 000D      __end_of_SystemSleep 0032             ?_Init_System 0070  
    start_initialization 000D                _Isr_Timer 004F              _SystemSleep 0010  
              ___latbits 0001               ?_Isr_Timer 0070        interrupt_function 0004  
   __size_of_Init_System 001D              ??_Isr_Timer 0070            __size_of_main 0008  
           ?_SystemSleep 0070                 intlevel1 0000               _OPTION_REG 0081  
