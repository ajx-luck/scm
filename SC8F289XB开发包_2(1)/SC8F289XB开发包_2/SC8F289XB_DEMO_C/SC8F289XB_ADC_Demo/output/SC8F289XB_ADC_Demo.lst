

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Mar 28 09:03:20 2022

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2892B
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	pa_nodes0,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     
    57                           	psect	text0
    58  0000                     __ptext0:	
    59  0012                     _T2CON	set	18
    60  000B                     _INTCON	set	11
    61  0008                     _WPUB	set	8
    62  0007                     _WPUA	set	7
    63  0006                     _PORTB	set	6
    64  0005                     _PORTA	set	5
    65  0069                     _TMR2IE	set	105
    66  0061                     _TMR2IF	set	97
    67  009F                     _ADRESH	set	159
    68  009E                     _ADRESL	set	158
    69  009D                     _ADCON0	set	157
    70  009C                     _ADCON1	set	156
    71  0091                     _PR2	set	145
    72  0088                     _OSCCON	set	136
    73  0086                     _TRISB	set	134
    74  0085                     _TRISA	set	133
    75  0081                     _OPTION_REG	set	129
    76  04E9                     _GODONE	set	1257
    77  04E2                     _LDO_EN	set	1250
    78  0437                     _TRISB7	set	1079
    79                           
    80                           	psect	cinit
    81  000D                     start_initialization:	
    82                           ; #config settings
    83                           
    84  000D                     __initialization:	
    85                           
    86                           ; Clear objects allocated to COMMON
    87  000D  01FA               	clrf	__pbssCOMMON& (0+127)
    88  000E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
    89                           
    90                           ; Clear objects allocated to BANK0
    91  000F  1283               	bcf	3,5	;RP0=0, select bank0
    92  0010  1303               	bcf	3,6	;RP1=0, select bank0
    93  0011  01C3               	clrf	__pbssBANK0& (0+127)
    94  0012  01C4               	clrf	(__pbssBANK0+1)& (0+127)
    95  0013  01C5               	clrf	(__pbssBANK0+2)& (0+127)
    96  0014  01C6               	clrf	(__pbssBANK0+3)& (0+127)
    97  0015  01C7               	clrf	(__pbssBANK0+4)& (0+127)
    98  0016                     end_of_initialization:	
    99                           ;End of C runtime variable initialization code
   100                           
   101  0016                     __end_of__initialization:	
   102  0016  0183               	clrf	3
   103  0017  118A  2A19         	ljmp	_main	;jump to C main() function
   104                           
   105                           	psect	bssCOMMON
   106  007A                     __pbssCOMMON:	
   107  007A                     _result:	
   108  007A                     	ds	2
   109                           
   110                           	psect	bssBANK0
   111  0043                     __pbssBANK0:	
   112  0043                     _power_ad:	
   113  0043                     	ds	2
   114  0045                     _test_adc:	
   115  0045                     	ds	1
   116  0046                     _adresult:	
   117  0046                     	ds	2
   118                           
   119                           	psect	cstackCOMMON
   120  0070                     __pcstackCOMMON:	
   121  0070                     ?_Init_System:	
   122  0070                     ?_AD_Init:	
   123                           ; 1 bytes @ 0x0
   124                           
   125  0070                     ?_DelayXms:	
   126                           ; 1 bytes @ 0x0
   127                           
   128  0070                     ?_main:	
   129                           ; 1 bytes @ 0x0
   130                           
   131  0070                     ?_Isr_Timer:	
   132                           ; 1 bytes @ 0x0
   133                           
   134  0070                     ??_Isr_Timer:	
   135                           ; 1 bytes @ 0x0
   136                           
   137                           
   138                           ; 1 bytes @ 0x0
   139  0070                     	ds	2
   140  0072                     ??_Init_System:	
   141  0072                     ??_AD_Init:	
   142                           ; 1 bytes @ 0x2
   143                           
   144  0072                     ?_ADC_Sample:	
   145                           ; 1 bytes @ 0x2
   146                           
   147  0072                     ??_DelayXms:	
   148                           ; 1 bytes @ 0x2
   149                           
   150  0072                     ?___ftpack:	
   151                           ; 1 bytes @ 0x2
   152                           
   153  0072                     ADC_Sample@adldo:	
   154                           ; 3 bytes @ 0x2
   155                           
   156  0072                     DelayXms@x:	
   157                           ; 1 bytes @ 0x2
   158                           
   159  0072                     ___ftpack@arg:	
   160                           ; 1 bytes @ 0x2
   161                           
   162                           
   163                           ; 3 bytes @ 0x2
   164  0072                     	ds	1
   165  0073                     ??_ADC_Sample:	
   166  0073                     DelayXms@i:	
   167                           ; 1 bytes @ 0x3
   168                           
   169                           
   170                           ; 1 bytes @ 0x3
   171  0073                     	ds	1
   172  0074                     DelayXms@j:	
   173                           
   174                           ; 1 bytes @ 0x4
   175  0074                     	ds	1
   176  0075                     ___ftpack@exp:	
   177                           
   178                           ; 1 bytes @ 0x5
   179  0075                     	ds	1
   180  0076                     ___ftpack@sign:	
   181                           
   182                           ; 1 bytes @ 0x6
   183  0076                     	ds	1
   184  0077                     ??___ftpack:	
   185                           
   186                           ; 1 bytes @ 0x7
   187  0077                     	ds	3
   188  007A                     ??_main:	
   189  007A                     ??___lwtoft:	
   190                           ; 1 bytes @ 0xA
   191                           
   192                           
   193                           	psect	cstackBANK0
   194  0020                     __pcstackBANK0:	
   195                           ; 1 bytes @ 0xA
   196                           
   197  0020                     ?___lwtoft:	
   198  0020                     ADC_Sample@adch:	
   199                           ; 3 bytes @ 0x0
   200                           
   201  0020                     ___lwtoft@c:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 2 bytes @ 0x0
   206  0020                     	ds	1
   207  0021                     ADC_Sample@j:	
   208                           
   209                           ; 1 bytes @ 0x1
   210  0021                     	ds	1
   211  0022                     ADC_Sample@i:	
   212                           
   213                           ; 1 bytes @ 0x2
   214  0022                     	ds	1
   215  0023                     ?___ftdiv:	
   216  0023                     ___ftdiv@f2:	
   217                           ; 3 bytes @ 0x3
   218                           
   219  0023                     ADC_Sample@adsum:	
   220                           ; 3 bytes @ 0x3
   221                           
   222                           
   223                           ; 4 bytes @ 0x3
   224  0023                     	ds	3
   225  0026                     ___ftdiv@f1:	
   226                           
   227                           ; 3 bytes @ 0x6
   228  0026                     	ds	1
   229  0027                     ADC_Sample@admin:	
   230                           
   231                           ; 2 bytes @ 0x7
   232  0027                     	ds	2
   233  0029                     ??___ftdiv:	
   234  0029                     ADC_Sample@admax:	
   235                           ; 1 bytes @ 0x9
   236                           
   237                           
   238                           ; 2 bytes @ 0x9
   239  0029                     	ds	2
   240  002B                     ADC_Sample@ad_temp:	
   241                           
   242                           ; 2 bytes @ 0xB
   243  002B                     	ds	1
   244  002C                     ___ftdiv@cntr:	
   245                           
   246                           ; 1 bytes @ 0xC
   247  002C                     	ds	1
   248  002D                     ___ftdiv@f3:	
   249                           
   250                           ; 3 bytes @ 0xD
   251  002D                     	ds	3
   252  0030                     ___ftdiv@exp:	
   253                           
   254                           ; 1 bytes @ 0x10
   255  0030                     	ds	1
   256  0031                     ___ftdiv@sign:	
   257                           
   258                           ; 1 bytes @ 0x11
   259  0031                     	ds	1
   260  0032                     ?___fttol:	
   261  0032                     ___fttol@f1:	
   262                           ; 4 bytes @ 0x12
   263                           
   264                           
   265                           ; 3 bytes @ 0x12
   266  0032                     	ds	4
   267  0036                     ??___fttol:	
   268                           
   269                           ; 1 bytes @ 0x16
   270  0036                     	ds	3
   271  0039                     ___fttol@sign1:	
   272                           
   273                           ; 1 bytes @ 0x19
   274  0039                     	ds	1
   275  003A                     ___fttol@lval:	
   276                           
   277                           ; 4 bytes @ 0x1A
   278  003A                     	ds	4
   279  003E                     ___fttol@exp1:	
   280                           
   281                           ; 1 bytes @ 0x1E
   282  003E                     	ds	1
   283  003F                     main@power_temp:	
   284                           
   285                           ; 4 bytes @ 0x1F
   286  003F                     	ds	4
   287                           
   288                           	psect	maintext
   289  0219                     __pmaintext:	
   290 ;;
   291 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   292 ;;
   293 ;; *************** function _main *****************
   294 ;; Defined at:
   295 ;;		line 127 in file "J:\yun_down\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_ADC_Demo\SC8F289XB_ADC.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;  power_temp      4   31[BANK0 ] volatile unsigned long 
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0, pclath, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : B00/0
   306 ;;		On exit  : 300/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   309 ;;      Params:         0       0       0       0
   310 ;;      Locals:         0       4       0       0
   311 ;;      Temps:          0       0       0       0
   312 ;;      Totals:         0       4       0       0
   313 ;;Total ram usage:        4 bytes
   314 ;; Hardware stack levels required when called:    3
   315 ;; This function calls:
   316 ;;		_ADC_Sample
   317 ;;		_AD_Init
   318 ;;		_DelayXms
   319 ;;		_Init_System
   320 ;;		___ftdiv
   321 ;;		___fttol
   322 ;;		___lwtoft
   323 ;; This function is called by:
   324 ;;		Startup code after reset
   325 ;; This function uses a non-reentrant model
   326 ;;
   327                           
   328                           
   329                           ;psect for function _main
   330  0219                     _main:	
   331                           
   332                           ;SC8F289XB_ADC.c: 129: Init_System();
   333                           
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   336  0219  118A  2263  118A   	fcall	_Init_System
   337                           
   338                           ;SC8F289XB_ADC.c: 130: AD_Init();
   339  021C  118A  2297  118A   	fcall	_AD_Init
   340  021F                     l786:	
   341                           ;SC8F289XB_ADC.c: 132: while (1)
   342                           
   343  021F  0064               	clrwdt	;# 
   344                           
   345                           ;SC8F289XB_ADC.c: 135: DelayXms(1);
   346  0220  3001               	movlw	1
   347  0221  118A  2281  118A   	fcall	_DelayXms
   348                           
   349                           ;SC8F289XB_ADC.c: 138: TRISB7 = 1;
   350  0224  1683               	bsf	3,5	;RP0=1, select bank1
   351  0225  1303               	bcf	3,6	;RP1=0, select bank1
   352  0226  1786               	bsf	6,7	;volatile
   353                           
   354                           ;SC8F289XB_ADC.c: 139: test_adc = ADC_Sample(6, 7);
   355  0227  3007               	movlw	7
   356  0228  00F2               	movwf	ADC_Sample@adldo
   357  0229  3006               	movlw	6
   358  022A  118A  2019  118A   	fcall	_ADC_Sample
   359  022D  00C5               	movwf	_test_adc	;volatile
   360  022E  300F               	movlw	15
   361                           
   362                           ;SC8F289XB_ADC.c: 143: }
   363                           ;SC8F289XB_ADC.c: 145: test_adc = ADC_Sample(15, 0);
   364  022F  01F2               	clrf	ADC_Sample@adldo
   365  0230  118A  2019  118A   	fcall	_ADC_Sample
   366  0233  00C5               	movwf	_test_adc	;volatile
   367                           
   368                           ;SC8F289XB_ADC.c: 146: if (0xA5 == test_adc)
   369  0234  30A5               	movlw	165
   370  0235  0645               	xorwf	_test_adc,w	;volatile
   371  0236  1D03               	btfss	3,2
   372  0237  2A1F               	goto	l786
   373                           
   374                           ;SC8F289XB_ADC.c: 147: {
   375                           ;SC8F289XB_ADC.c: 148: volatile unsigned long power_temp;
   376                           ;SC8F289XB_ADC.c: 150: power_temp = ((4096UL*0.6*1000))/adresult;
   377  0238  3016               	movlw	22
   378  0239  01A6               	clrf	___ftdiv@f1
   379  023A  00A7               	movwf	___ftdiv@f1+1
   380  023B  304A               	movlw	74
   381  023C  00A8               	movwf	___ftdiv@f1+2
   382  023D  0847               	movf	_adresult+1,w	;volatile
   383  023E  00A1               	movwf	___lwtoft@c+1
   384  023F  0846               	movf	_adresult,w	;volatile
   385  0240  00A0               	movwf	___lwtoft@c
   386  0241  118A  2100  118A   	fcall	___lwtoft
   387  0244  0820               	movf	?___lwtoft,w
   388  0245  00A3               	movwf	___ftdiv@f2
   389  0246  0821               	movf	?___lwtoft+1,w
   390  0247  00A4               	movwf	___ftdiv@f2+1
   391  0248  0822               	movf	?___lwtoft+2,w
   392  0249  00A5               	movwf	___ftdiv@f2+2
   393  024A  118A  2110  118A   	fcall	___ftdiv
   394  024D  0823               	movf	?___ftdiv,w
   395  024E  00B2               	movwf	___fttol@f1
   396  024F  0824               	movf	?___ftdiv+1,w
   397  0250  00B3               	movwf	___fttol@f1+1
   398  0251  0825               	movf	?___ftdiv+2,w
   399  0252  00B4               	movwf	___fttol@f1+2
   400  0253  118A  21B9  118A   	fcall	___fttol
   401  0256  0835               	movf	?___fttol+3,w
   402  0257  00C2               	movwf	main@power_temp+3	;volatile
   403  0258  0834               	movf	?___fttol+2,w
   404  0259  00C1               	movwf	main@power_temp+2	;volatile
   405  025A  0833               	movf	?___fttol+1,w
   406  025B  00C0               	movwf	main@power_temp+1	;volatile
   407  025C  0832               	movf	?___fttol,w
   408  025D  00BF               	movwf	main@power_temp	;volatile
   409                           
   410                           ;SC8F289XB_ADC.c: 151: power_ad = (unsigned int)(power_temp);
   411  025E  0840               	movf	main@power_temp+1,w	;volatile
   412  025F  00C4               	movwf	_power_ad+1	;volatile
   413  0260  083F               	movf	main@power_temp,w	;volatile
   414  0261  00C3               	movwf	_power_ad	;volatile
   415  0262  2A1F               	goto	l786
   416  0263                     __end_of_main:	
   417                           
   418                           	psect	text1
   419  0100                     __ptext1:	
   420 ;; *************** function ___lwtoft *****************
   421 ;; Defined at:
   422 ;;		line 28 in file "H:\MyDownloads\IDE_RAR\SCMCU_IDE_V2.00.11_Beta4\data\sources\common\lwtoft.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;  c               2    0[BANK0 ] unsigned int 
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  3    0[BANK0 ] float 
   429 ;; Registers used:
   430 ;;		wreg, status,2, status,0, pclath, cstack
   431 ;; Tracked objects:
   432 ;;		On entry : 300/0
   433 ;;		On exit  : 300/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   436 ;;      Params:         0       3       0       0
   437 ;;      Locals:         0       0       0       0
   438 ;;      Temps:          0       0       0       0
   439 ;;      Totals:         0       3       0       0
   440 ;;Total ram usage:        3 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; Hardware stack levels required when called:    2
   443 ;; This function calls:
   444 ;;		___ftpack
   445 ;; This function is called by:
   446 ;;		_main
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           
   451                           ;psect for function ___lwtoft
   452  0100                     ___lwtoft:	
   453                           
   454                           ;incstack = 0
   455                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   456  0100  0820               	movf	___lwtoft@c,w
   457  0101  00F2               	movwf	___ftpack@arg
   458  0102  0821               	movf	___lwtoft@c+1,w
   459  0103  00F3               	movwf	___ftpack@arg+1
   460  0104  308E               	movlw	142
   461  0105  01F4               	clrf	___ftpack@arg+2
   462  0106  00F5               	movwf	___ftpack@exp
   463  0107  01F6               	clrf	___ftpack@sign
   464  0108  2172               	fcall	___ftpack
   465  0109  0872               	movf	?___ftpack,w
   466  010A  00A0               	movwf	?___lwtoft
   467  010B  0873               	movf	?___ftpack+1,w
   468  010C  00A1               	movwf	?___lwtoft+1
   469  010D  0874               	movf	?___ftpack+2,w
   470  010E  00A2               	movwf	?___lwtoft+2
   471  010F  0008               	return
   472  0110                     __end_of___lwtoft:	
   473  0110                     __ptext3:	
   474 ;; *************** function ___ftdiv *****************
   475 ;; Defined at:
   476 ;;		line 56 in file "H:\MyDownloads\IDE_RAR\SCMCU_IDE_V2.00.11_Beta4\data\sources\common\ftdiv.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  f2              3    3[BANK0 ] float 
   479 ;;  f1              3    6[BANK0 ] float 
   480 ;; Auto vars:     Size  Location     Type
   481 ;;  f3              3   13[BANK0 ] float 
   482 ;;  sign            1   17[BANK0 ] unsigned char 
   483 ;;  exp             1   16[BANK0 ] unsigned char 
   484 ;;  cntr            1   12[BANK0 ] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  3    3[BANK0 ] float 
   487 ;; Registers used:
   488 ;;		wreg, status,2, status,0, pclath, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 300/0
   491 ;;		On exit  : 300/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   494 ;;      Params:         0       6       0       0
   495 ;;      Locals:         0       6       0       0
   496 ;;      Temps:          0       3       0       0
   497 ;;      Totals:         0      15       0       0
   498 ;;Total ram usage:       15 bytes
   499 ;; Hardware stack levels used:    1
   500 ;; Hardware stack levels required when called:    2
   501 ;; This function calls:
   502 ;;		___ftpack
   503 ;; This function is called by:
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           
   509                           ;psect for function ___ftdiv
   510  0110                     ___ftdiv:	
   511                           
   512                           ;incstack = 0
   513                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
   514  0110  0826               	movf	___ftdiv@f1,w
   515  0111  00A9               	movwf	??___ftdiv
   516  0112  0827               	movf	___ftdiv@f1+1,w
   517  0113  00AA               	movwf	??___ftdiv+1
   518  0114  0828               	movf	___ftdiv@f1+2,w
   519  0115  00AB               	movwf	??___ftdiv+2
   520  0116  1003               	clrc
   521  0117  0D2A               	rlf	??___ftdiv+1,w
   522  0118  0D2B               	rlf	??___ftdiv+2,w
   523  0119  00B0               	movwf	___ftdiv@exp
   524  011A  0830               	movf	___ftdiv@exp,w
   525  011B  1D03               	btfss	3,2
   526  011C  291E               	goto	l1569
   527  011D  29B5               	ljmp	PL12	;call to abstracted procedure
   528  011E                     l1569:	
   529  011E  0823               	movf	___ftdiv@f2,w
   530  011F  00A9               	movwf	??___ftdiv
   531  0120  0824               	movf	___ftdiv@f2+1,w
   532  0121  00AA               	movwf	??___ftdiv+1
   533  0122  0825               	movf	___ftdiv@f2+2,w
   534  0123  00AB               	movwf	??___ftdiv+2
   535  0124  1003               	clrc
   536  0125  0D2A               	rlf	??___ftdiv+1,w
   537  0126  0D2B               	rlf	??___ftdiv+2,w
   538  0127  00B1               	movwf	___ftdiv@sign
   539  0128  0831               	movf	___ftdiv@sign,w
   540  0129  1D03               	btfss	3,2
   541  012A  292C               	goto	l1017
   542  012B  29B5               	ljmp	PL12	;call to abstracted procedure
   543  012C                     l1017:	
   544  012C  3089               	movlw	137
   545  012D  01AD               	clrf	___ftdiv@f3
   546  012E  01AE               	clrf	___ftdiv@f3+1
   547  012F  01AF               	clrf	___ftdiv@f3+2
   548  0130  0731               	addwf	___ftdiv@sign,w
   549  0131  00A9               	movwf	??___ftdiv
   550  0132  02B0               	subwf	___ftdiv@exp,f
   551  0133  0828               	movf	___ftdiv@f1+2,w
   552  0134  00B1               	movwf	___ftdiv@sign
   553  0135  0825               	movf	___ftdiv@f2+2,w
   554  0136  06B1               	xorwf	___ftdiv@sign,f
   555  0137  3080               	movlw	128
   556  0138  05B1               	andwf	___ftdiv@sign,f
   557  0139  3018               	movlw	24
   558  013A  17A7               	bsf	___ftdiv@f1+1,7
   559  013B  01A8               	clrf	___ftdiv@f1+2
   560  013C  17A4               	bsf	___ftdiv@f2+1,7
   561  013D  01A5               	clrf	___ftdiv@f2+2
   562  013E  00AC               	movwf	___ftdiv@cntr
   563  013F                     l1591:	
   564  013F  1003               	clrc
   565  0140  0DAD               	rlf	___ftdiv@f3,f
   566  0141  0DAE               	rlf	___ftdiv@f3+1,f
   567  0142  0DAF               	rlf	___ftdiv@f3+2,f
   568  0143  0825               	movf	___ftdiv@f2+2,w
   569  0144  0228               	subwf	___ftdiv@f1+2,w
   570  0145  1D03               	skipz
   571  0146  294D               	goto	u655
   572  0147  0824               	movf	___ftdiv@f2+1,w
   573  0148  0227               	subwf	___ftdiv@f1+1,w
   574  0149  1D03               	skipz
   575  014A  294D               	goto	u655
   576  014B  0823               	movf	___ftdiv@f2,w
   577  014C  0226               	subwf	___ftdiv@f1,w
   578  014D                     u655:	
   579  014D  1C03               	skipc
   580  014E  295B               	goto	L1
   581  014F  0823               	movf	___ftdiv@f2,w
   582  0150  02A6               	subwf	___ftdiv@f1,f
   583  0151  0824               	movf	___ftdiv@f2+1,w
   584  0152  1C03               	skipc
   585  0153  0F24               	incfsz	___ftdiv@f2+1,w
   586  0154  02A7               	subwf	___ftdiv@f1+1,f
   587  0155  0825               	movf	___ftdiv@f2+2,w
   588  0156  1C03               	skipc
   589  0157  0A25               	incf	___ftdiv@f2+2,w
   590  0158  02A8               	subwf	___ftdiv@f1+2,f
   591  0159  142D               	bsf	___ftdiv@f3,0
   592  015A  1003               	clrc
   593  015B                     L1:	
   594  015B  0DA6               	rlf	___ftdiv@f1,f
   595  015C  0DA7               	rlf	___ftdiv@f1+1,f
   596  015D  0DA8               	rlf	___ftdiv@f1+2,f
   597  015E  0BAC               	decfsz	___ftdiv@cntr,f
   598  015F  293F               	goto	l1591
   599  0160  082D               	movf	___ftdiv@f3,w
   600  0161  00F2               	movwf	___ftpack@arg
   601  0162  082E               	movf	___ftdiv@f3+1,w
   602  0163  00F3               	movwf	___ftpack@arg+1
   603  0164  082F               	movf	___ftdiv@f3+2,w
   604  0165  00F4               	movwf	___ftpack@arg+2
   605  0166  0830               	movf	___ftdiv@exp,w
   606  0167  00F5               	movwf	___ftpack@exp
   607  0168  0831               	movf	___ftdiv@sign,w
   608  0169  00F6               	movwf	___ftpack@sign
   609  016A  2172               	fcall	___ftpack
   610  016B  0872               	movf	?___ftpack,w
   611  016C  00A3               	movwf	?___ftdiv
   612  016D  0873               	movf	?___ftpack+1,w
   613  016E  00A4               	movwf	?___ftdiv+1
   614  016F  0874               	movf	?___ftpack+2,w
   615  0170  00A5               	movwf	?___ftdiv+2
   616  0171  0008               	return
   617  0172                     __end_of___ftdiv:	
   618  0172                     __ptext4:	
   619 ;; *************** function ___ftpack *****************
   620 ;; Defined at:
   621 ;;		line 62 in file "H:\MyDownloads\IDE_RAR\SCMCU_IDE_V2.00.11_Beta4\data\sources\common\float.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  arg             3    2[COMMON] unsigned um
   624 ;;  exp             1    5[COMMON] unsigned char 
   625 ;;  sign            1    6[COMMON] unsigned char 
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  3    2[COMMON] float 
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0
   632 ;; Tracked objects:
   633 ;;		On entry : 300/0
   634 ;;		On exit  : 300/0
   635 ;;		Unchanged: 300/0
   636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   637 ;;      Params:         5       0       0       0
   638 ;;      Locals:         0       0       0       0
   639 ;;      Temps:          3       0       0       0
   640 ;;      Totals:         8       0       0       0
   641 ;;Total ram usage:        8 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    1
   644 ;; This function calls:
   645 ;;		Nothing
   646 ;; This function is called by:
   647 ;;		___ftdiv
   648 ;;		___lwtoft
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function ___ftpack
   654  0172                     ___ftpack:	
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
   658  0172  0875               	movf	___ftpack@exp,w
   659  0173  1903               	btfsc	3,2
   660  0174  297A               	goto	l963
   661  0175  0874               	movf	___ftpack@arg+2,w
   662  0176  0473               	iorwf	___ftpack@arg+1,w
   663  0177  0472               	iorwf	___ftpack@arg,w
   664  0178  1D03               	skipz
   665  0179  2981               	goto	l1431
   666  017A                     l963:	
   667  017A  01F2               	clrf	?___ftpack
   668  017B  01F3               	clrf	?___ftpack+1
   669  017C  01F4               	clrf	?___ftpack+2
   670  017D  0008               	return
   671  017E                     l1429:	
   672  017E  0AF5               	incf	___ftpack@exp,f
   673  017F  21B0  118A         	fcall	PL8	;call to abstracted procedure
   674  0181                     l1431:	
   675  0181  30FE               	movlw	254
   676  0182  0574               	andwf	___ftpack@arg+2,w
   677  0183  1903               	btfsc	3,2
   678  0184  298E               	goto	l1435
   679  0185  297E               	goto	l1429
   680  0186                     l1433:	
   681  0186  0AF5               	incf	___ftpack@exp,f
   682  0187  0AF2               	incf	___ftpack@arg,f
   683  0188  1903               	skipnz
   684  0189  0AF3               	incf	___ftpack@arg+1,f
   685  018A  1903               	skipnz
   686  018B  0AF4               	incf	___ftpack@arg+2,f
   687  018C  21B0  118A         	fcall	PL8	;call to abstracted procedure
   688  018E                     l1435:	
   689  018E  30FF               	movlw	255
   690  018F  0574               	andwf	___ftpack@arg+2,w
   691  0190  1903               	btfsc	3,2
   692  0191  299C               	goto	l1439
   693  0192  2986               	goto	l1433
   694  0193                     l1441:	
   695  0193  3002               	movlw	2
   696  0194  0275               	subwf	___ftpack@exp,w
   697  0195  1C03               	btfss	3,0
   698  0196  299E               	goto	l975
   699  0197  03F5               	decf	___ftpack@exp,f
   700  0198  1003               	clrc
   701  0199  0DF2               	rlf	___ftpack@arg,f
   702  019A  0DF3               	rlf	___ftpack@arg+1,f
   703  019B  0DF4               	rlf	___ftpack@arg+2,f
   704  019C                     l1439:	
   705  019C  1FF3               	btfss	___ftpack@arg+1,7
   706  019D  2993               	goto	l1441
   707  019E                     l975:	
   708  019E  1C75               	btfss	___ftpack@exp,0
   709  019F  13F3               	bcf	___ftpack@arg+1,7
   710  01A0  1003               	clrc
   711  01A1  0CF5               	rrf	___ftpack@exp,f
   712  01A2  0875               	movf	___ftpack@exp,w
   713  01A3  00F9               	movwf	??___ftpack+2
   714  01A4  01F8               	clrf	??___ftpack+1
   715  01A5  01F7               	clrf	??___ftpack
   716  01A6  0877               	movf	??___ftpack,w
   717  01A7  04F2               	iorwf	___ftpack@arg,f
   718  01A8  0878               	movf	??___ftpack+1,w
   719  01A9  04F3               	iorwf	___ftpack@arg+1,f
   720  01AA  0879               	movf	??___ftpack+2,w
   721  01AB  04F4               	iorwf	___ftpack@arg+2,f
   722  01AC  0876               	movf	___ftpack@sign,w
   723  01AD  1D03               	btfss	3,2
   724  01AE  17F4               	bsf	___ftpack@arg+2,7
   725  01AF  0008               	return
   726  01B0                     __end_of___ftpack:	
   727  01B0                     PL8:	
   728  01B0  1003               	clrc
   729  01B1  0CF4               	rrf	___ftpack@arg+2,f
   730  01B2  0CF3               	rrf	___ftpack@arg+1,f
   731  01B3  0CF2               	rrf	___ftpack@arg,f
   732  01B4  0008               	return
   733  01B5                     __end_ofPL8:	
   734  01B5                     PL12:	
   735  01B5  01A3               	clrf	?___ftdiv
   736  01B6  01A4               	clrf	?___ftdiv+1
   737  01B7  01A5               	clrf	?___ftdiv+2
   738  01B8  0008               	return
   739  01B9                     __end_ofPL12:	
   740                           
   741                           	psect	text2
   742  01B9                     __ptext2:	
   743 ;; *************** function ___fttol *****************
   744 ;; Defined at:
   745 ;;		line 44 in file "H:\MyDownloads\IDE_RAR\SCMCU_IDE_V2.00.11_Beta4\data\sources\common\fttol.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  f1              3   18[BANK0 ] float 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;  lval            4   26[BANK0 ] unsigned long 
   750 ;;  exp1            1   30[BANK0 ] unsigned char 
   751 ;;  sign1           1   25[BANK0 ] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  4   18[BANK0 ] long 
   754 ;; Registers used:
   755 ;;		wreg, status,2, status,0
   756 ;; Tracked objects:
   757 ;;		On entry : 300/0
   758 ;;		On exit  : 300/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   761 ;;      Params:         0       4       0       0
   762 ;;      Locals:         0       6       0       0
   763 ;;      Temps:          0       3       0       0
   764 ;;      Totals:         0      13       0       0
   765 ;;Total ram usage:       13 bytes
   766 ;; Hardware stack levels used:    1
   767 ;; Hardware stack levels required when called:    1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           
   776                           ;psect for function ___fttol
   777  01B9                     ___fttol:	
   778                           
   779                           ;incstack = 0
   780                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   781  01B9  2212  118A         	fcall	PL6	;call to abstracted procedure
   782  01BB  1003               	clrc
   783  01BC  0D37               	rlf	??___fttol+1,w
   784  01BD  0D38               	rlf	??___fttol+2,w
   785  01BE  00BE               	movwf	___fttol@exp1
   786  01BF  083E               	movf	___fttol@exp1,w
   787  01C0  1D03               	btfss	3,2
   788  01C1  29C7               	goto	l1609
   789  01C2                     l1607:	
   790  01C2  01B2               	clrf	?___fttol
   791  01C3  01B3               	clrf	?___fttol+1
   792  01C4  01B4               	clrf	?___fttol+2
   793  01C5  01B5               	clrf	?___fttol+3
   794  01C6  0008               	return
   795  01C7                     l1609:	
   796  01C7  2212  118A         	fcall	PL6	;call to abstracted procedure
   797  01C9  3017               	movlw	23
   798  01CA                     u685:	
   799  01CA  1003               	clrc
   800  01CB  0CB8               	rrf	??___fttol+2,f
   801  01CC  0CB7               	rrf	??___fttol+1,f
   802  01CD  0CB6               	rrf	??___fttol,f
   803  01CE  3EFF               	addlw	-1
   804  01CF  1D03               	skipz
   805  01D0  29CA               	goto	u685
   806  01D1  0836               	movf	??___fttol,w
   807  01D2  00B9               	movwf	___fttol@sign1
   808  01D3  17B3               	bsf	___fttol@f1+1,7
   809  01D4  01B4               	clrf	___fttol@f1+2
   810  01D5  0832               	movf	___fttol@f1,w
   811  01D6  00BA               	movwf	___fttol@lval
   812  01D7  0833               	movf	___fttol@f1+1,w
   813  01D8  00BB               	movwf	___fttol@lval+1
   814  01D9  0834               	movf	___fttol@f1+2,w
   815  01DA  00BC               	movwf	___fttol@lval+2
   816  01DB  308E               	movlw	142
   817  01DC  01BD               	clrf	___fttol@lval+3
   818  01DD  02BE               	subwf	___fttol@exp1,f
   819  01DE  1FBE               	btfss	___fttol@exp1,7
   820  01DF  29ED               	goto	l1629
   821  01E0  083E               	movf	___fttol@exp1,w
   822  01E1  3A80               	xorlw	128
   823  01E2  3E8F               	addlw	143
   824  01E3  1C03               	btfss	3,0
   825  01E4  29C2               	goto	l1607
   826  01E5                     l1625:	
   827  01E5  1003               	clrc
   828  01E6  0CBD               	rrf	___fttol@lval+3,f
   829  01E7  0CBC               	rrf	___fttol@lval+2,f
   830  01E8  0CBB               	rrf	___fttol@lval+1,f
   831  01E9  0CBA               	rrf	___fttol@lval,f
   832  01EA  0FBE               	incfsz	___fttol@exp1,f
   833  01EB  29E5               	goto	l1625
   834  01EC  29FB               	goto	l1637
   835  01ED                     l1629:	
   836  01ED  3018               	movlw	24
   837  01EE  023E               	subwf	___fttol@exp1,w
   838  01EF  1803               	btfsc	3,0
   839  01F0  29C2               	goto	l1607
   840  01F1                     l1635:	
   841  01F1  083E               	movf	___fttol@exp1,w
   842  01F2  1903               	btfsc	3,2
   843  01F3  29FB               	goto	l1637
   844  01F4  1003               	clrc
   845  01F5  0DBA               	rlf	___fttol@lval,f
   846  01F6  0DBB               	rlf	___fttol@lval+1,f
   847  01F7  0DBC               	rlf	___fttol@lval+2,f
   848  01F8  0DBD               	rlf	___fttol@lval+3,f
   849  01F9  03BE               	decf	___fttol@exp1,f
   850  01FA  29F1               	goto	l1635
   851  01FB                     l1637:	
   852  01FB  0839               	movf	___fttol@sign1,w
   853  01FC  1903               	btfsc	3,2
   854  01FD  2A09               	goto	l1641
   855  01FE  09BA               	comf	___fttol@lval,f
   856  01FF  09BB               	comf	___fttol@lval+1,f
   857  0200  09BC               	comf	___fttol@lval+2,f
   858  0201  09BD               	comf	___fttol@lval+3,f
   859  0202  0ABA               	incf	___fttol@lval,f
   860  0203  1903               	skipnz
   861  0204  0ABB               	incf	___fttol@lval+1,f
   862  0205  1903               	skipnz
   863  0206  0ABC               	incf	___fttol@lval+2,f
   864  0207  1903               	skipnz
   865  0208  0ABD               	incf	___fttol@lval+3,f
   866  0209                     l1641:	
   867  0209  083D               	movf	___fttol@lval+3,w
   868  020A  00B5               	movwf	?___fttol+3
   869  020B  083C               	movf	___fttol@lval+2,w
   870  020C  00B4               	movwf	?___fttol+2
   871  020D  083B               	movf	___fttol@lval+1,w
   872  020E  00B3               	movwf	?___fttol+1
   873  020F  083A               	movf	___fttol@lval,w
   874  0210  00B2               	movwf	?___fttol
   875  0211  0008               	return
   876  0212                     __end_of___fttol:	
   877  0212                     PL6:	
   878  0212  0832               	movf	___fttol@f1,w
   879  0213  00B6               	movwf	??___fttol
   880  0214  0833               	movf	___fttol@f1+1,w
   881  0215  00B7               	movwf	??___fttol+1
   882  0216  0834               	movf	___fttol@f1+2,w
   883  0217  00B8               	movwf	??___fttol+2
   884  0218  0008               	return
   885  0219                     __end_ofPL6:	
   886                           
   887                           	psect	text5
   888  0263                     __ptext5:	
   889 ;; *************** function _Init_System *****************
   890 ;; Defined at:
   891 ;;		line 165 in file "J:\yun_down\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_ADC_Demo\SC8F289XB_ADC.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;		None
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2
   900 ;; Tracked objects:
   901 ;;		On entry : B00/0
   902 ;;		On exit  : 300/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   905 ;;      Params:         0       0       0       0
   906 ;;      Locals:         0       0       0       0
   907 ;;      Temps:          0       0       0       0
   908 ;;      Totals:         0       0       0       0
   909 ;;Total ram usage:        0 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           
   920                           ;psect for function _Init_System
   921  0263                     _Init_System:	
   922                           
   923                           ;incstack = 0
   924                           ; Regs used in _Init_System: [wreg+status,2]
   925  0263  0000               	nop	;# 
   926  0264  0064               	clrwdt	;# 
   927                           
   928                           ;SC8F289XB_ADC.c: 169: OPTION_REG = 0;
   929  0265  1683               	bsf	3,5	;RP0=1, select bank1
   930  0266  1303               	bcf	3,6	;RP1=0, select bank1
   931  0267  0181               	clrf	1	;volatile
   932  0268  0064               	clrwdt	;# 
   933                           
   934                           ;SC8F289XB_ADC.c: 171: OSCCON = 0X70;
   935  0269  3070               	movlw	112
   936  026A  1683               	bsf	3,5	;RP0=1, select bank1
   937  026B  1303               	bcf	3,6	;RP1=0, select bank1
   938  026C  0088               	movwf	8	;volatile
   939                           
   940                           ;SC8F289XB_ADC.c: 173: WPUA = 0B00000000;
   941  026D  1283               	bcf	3,5	;RP0=0, select bank0
   942  026E  0187               	clrf	7	;volatile
   943                           
   944                           ;SC8F289XB_ADC.c: 174: WPUB = 0B00000000;
   945  026F  0188               	clrf	8	;volatile
   946                           
   947                           ;SC8F289XB_ADC.c: 176: TRISA = 0B00000000;
   948  0270  1683               	bsf	3,5	;RP0=1, select bank1
   949  0271  0185               	clrf	5	;volatile
   950                           
   951                           ;SC8F289XB_ADC.c: 177: TRISB = 0B00000000;
   952  0272  0186               	clrf	6	;volatile
   953                           
   954                           ;SC8F289XB_ADC.c: 179: PORTA = 0X00;
   955  0273  1283               	bcf	3,5	;RP0=0, select bank0
   956  0274  0185               	clrf	5	;volatile
   957                           
   958                           ;SC8F289XB_ADC.c: 180: PORTB = 0X00;
   959  0275  0186               	clrf	6	;volatile
   960                           
   961                           ;SC8F289XB_ADC.c: 184: PR2 = 249;
   962  0276  30F9               	movlw	249
   963  0277  1683               	bsf	3,5	;RP0=1, select bank1
   964  0278  0091               	movwf	17	;volatile
   965                           
   966                           ;SC8F289XB_ADC.c: 185: TMR2IF = 0;
   967  0279  1283               	bcf	3,5	;RP0=0, select bank0
   968  027A  108C               	bcf	12,1	;volatile
   969                           
   970                           ;SC8F289XB_ADC.c: 186: TMR2IE = 1;
   971  027B  148D               	bsf	13,1	;volatile
   972                           
   973                           ;SC8F289XB_ADC.c: 188: T2CON = 0B00000100;
   974  027C  3004               	movlw	4
   975  027D  0092               	movwf	18	;volatile
   976                           
   977                           ;SC8F289XB_ADC.c: 189: INTCON = 0XC0;
   978  027E  30C0               	movlw	192
   979  027F  008B               	movwf	11	;volatile
   980  0280  0008               	return
   981  0281                     __end_of_Init_System:	
   982                           
   983                           	psect	text6
   984  0281                     __ptext6:	
   985 ;; *************** function _DelayXms *****************
   986 ;; Defined at:
   987 ;;		line 117 in file "J:\yun_down\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_ADC_Demo\SC8F289XB_ADC.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  x               1    wreg     unsigned char 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  x               1    2[COMMON] unsigned char 
   992 ;;  j               1    4[COMMON] unsigned char 
   993 ;;  i               1    3[COMMON] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0
   998 ;; Tracked objects:
   999 ;;		On entry : 0/100
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1003 ;;      Params:         0       0       0       0
  1004 ;;      Locals:         3       0       0       0
  1005 ;;      Temps:          0       0       0       0
  1006 ;;      Totals:         3       0       0       0
  1007 ;;Total ram usage:        3 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    1
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           
  1018                           ;psect for function _DelayXms
  1019  0281                     _DelayXms:	
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
  1023                           ;DelayXms@x stored from wreg
  1024  0281  00F2               	movwf	DelayXms@x
  1025                           
  1026                           ;SC8F289XB_ADC.c: 119: unsigned char i, j;
  1027                           ;SC8F289XB_ADC.c: 120: for (i = x; i > 0; i--)
  1028  0282  00F3               	movwf	DelayXms@i
  1029  0283                     l1515:	
  1030  0283  0873               	movf	DelayXms@i,w
  1031  0284  1903               	btfsc	3,2
  1032  0285  0008               	return
  1033                           
  1034                           ;SC8F289XB_ADC.c: 121: for (j = 153; j > 0; j--);
  1035  0286  3099               	movlw	153
  1036  0287  00F4               	movwf	DelayXms@j
  1037  0288                     l1525:	
  1038  0288  0BF4               	decfsz	DelayXms@j,f
  1039  0289  2A88               	goto	l1525
  1040  028A  03F3               	decf	DelayXms@i,f
  1041  028B  2A83               	goto	l1515
  1042  028C                     __end_of_DelayXms:	
  1043                           
  1044                           	psect	text7
  1045  0297                     __ptext7:	
  1046 ;; *************** function _AD_Init *****************
  1047 ;; Defined at:
  1048 ;;		line 220 in file "J:\yun_down\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_ADC_Demo\SC8F289XB_ADC.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2
  1057 ;; Tracked objects:
  1058 ;;		On entry : 300/0
  1059 ;;		On exit  : 300/100
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1062 ;;      Params:         0       0       0       0
  1063 ;;      Locals:         0       0       0       0
  1064 ;;      Temps:          0       0       0       0
  1065 ;;      Totals:         0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_main
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           
  1077                           ;psect for function _AD_Init
  1078  0297                     _AD_Init:	
  1079                           
  1080                           ;SC8F289XB_ADC.c: 245: ADCON0 = 0X41;
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in _AD_Init: [wreg+status,2]
  1084  0297  3041               	movlw	65
  1085  0298  1683               	bsf	3,5	;RP0=1, select bank1
  1086  0299  009D               	movwf	29	;volatile
  1087                           
  1088                           ;SC8F289XB_ADC.c: 263: ADCON1 = 0;
  1089  029A  019C               	clrf	28	;volatile
  1090  029B  0008               	return
  1091  029C                     __end_of_AD_Init:	
  1092                           
  1093                           	psect	text8
  1094  0019                     __ptext8:	
  1095 ;; *************** function _ADC_Sample *****************
  1096 ;; Defined at:
  1097 ;;		line 46 in file "J:\yun_down\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_ADC_Demo\SC8F289XB_ADC.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  adch            1    wreg     unsigned char 
  1100 ;;  adldo           1    2[COMMON] unsigned char 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  adch            1    0[BANK0 ] unsigned char 
  1103 ;;  j               1    1[BANK0 ] unsigned char 
  1104 ;;  adsum           4    3[BANK0 ] volatile unsigned long 
  1105 ;;  ad_temp         2   11[BANK0 ] volatile unsigned int 
  1106 ;;  admax           2    9[BANK0 ] volatile unsigned int 
  1107 ;;  admin           2    7[BANK0 ] volatile unsigned int 
  1108 ;;  i               1    2[BANK0 ] unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      unsigned char 
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0
  1113 ;; Tracked objects:
  1114 ;;		On entry : 200/100
  1115 ;;		On exit  : 300/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1118 ;;      Params:         1       0       0       0
  1119 ;;      Locals:         0      13       0       0
  1120 ;;      Temps:          4       0       0       0
  1121 ;;      Totals:         5      13       0       0
  1122 ;;Total ram usage:       18 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    1
  1125 ;; This function calls:
  1126 ;;		Nothing
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _ADC_Sample
  1134  0019                     _ADC_Sample:	
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in _ADC_Sample: [wreg+status,2+status,0]
  1138                           ;ADC_Sample@adch stored from wreg
  1139  0019  1283               	bcf	3,5	;RP0=0, select bank0
  1140  001A  00A0               	movwf	ADC_Sample@adch
  1141                           
  1142                           ;SC8F289XB_ADC.c: 48: volatile unsigned long adsum = 0;
  1143                           
  1144                           ;SC8F289XB_ADC.c: 49: volatile unsigned int admin = 0, admax = 0;
  1145  001B  20F2  118A         	fcall	PL4	;call to abstracted procedure
  1146                           
  1147                           ;SC8F289XB_ADC.c: 50: volatile unsigned int ad_temp = 0;
  1148  001D  01AB               	clrf	ADC_Sample@ad_temp	;volatile
  1149  001E  01AC               	clrf	ADC_Sample@ad_temp+1	;volatile
  1150                           
  1151                           ;SC8F289XB_ADC.c: 52: if ((!LDO_EN) && (adldo & 0x04) )
  1152  001F  1683               	bsf	3,5	;RP0=1, select bank1
  1153  0020  1D1C               	btfss	28,2	;volatile
  1154  0021  1D72               	btfss	ADC_Sample@adldo,2
  1155  0022  282B               	goto	l1459
  1156                           
  1157                           ;SC8F289XB_ADC.c: 53: {
  1158                           ;SC8F289XB_ADC.c: 55: ADCON1 = adldo;
  1159  0023  0872               	movf	ADC_Sample@adldo,w
  1160  0024  009C               	movwf	28	;volatile
  1161                           
  1162                           ;SC8F289XB_ADC.c: 56: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1163  0025  3042               	movlw	66
  1164  0026  00F3               	movwf	??_ADC_Sample
  1165  0027                     u767:	
  1166  0027  0BF3               	decfsz	??_ADC_Sample,f
  1167  0028  2827               	goto	u767
  1168  0029  0000               	nop
  1169                           
  1170                           ;SC8F289XB_ADC.c: 57: }
  1171  002A  282D               	goto	l1463
  1172  002B                     l1459:	
  1173                           
  1174                           ;SC8F289XB_ADC.c: 58: else
  1175                           ;SC8F289XB_ADC.c: 59: ADCON1 = adldo;
  1176  002B  0872               	movf	ADC_Sample@adldo,w
  1177  002C  009C               	movwf	28	;volatile
  1178  002D                     l1463:	
  1179                           
  1180                           ;SC8F289XB_ADC.c: 62: for (i = 0; i < 10; i++)
  1181  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1182  002E  1303               	bcf	3,6	;RP1=0, select bank0
  1183  002F  01A2               	clrf	ADC_Sample@i
  1184  0030                     l1467:	
  1185                           
  1186                           ;SC8F289XB_ADC.c: 63: {
  1187                           ;SC8F289XB_ADC.c: 64: ADCON0 = (unsigned char)(0X41 | (adch << 2));
  1188  0030  0820               	movf	ADC_Sample@adch,w
  1189  0031  00F3               	movwf	??_ADC_Sample
  1190  0032  3001               	movlw	1
  1191  0033  1003               	clrc
  1192  0034                     L2:	
  1193  0034  0DF3               	rlf	??_ADC_Sample,f
  1194  0035  3EFF               	addlw	-1
  1195  0036  1003               	clrc
  1196  0037  1D03               	skipz
  1197  0038  2834               	goto	L2
  1198  0039  0D73               	rlf	??_ADC_Sample,w
  1199  003A  3841               	iorlw	65
  1200  003B  1683               	bsf	3,5	;RP0=1, select bank1
  1201  003C  009D               	movwf	29	;volatile
  1202  003D  0000               	nop	;# 
  1203  003E  0000               	nop	;# 
  1204  003F  0000               	nop	;# 
  1205  0040  0000               	nop	;# 
  1206                           
  1207                           ;SC8F289XB_ADC.c: 69: GODONE = 1;
  1208  0041  1683               	bsf	3,5	;RP0=1, select bank1
  1209  0042  1303               	bcf	3,6	;RP1=0, select bank1
  1210  0043  149D               	bsf	29,1	;volatile
  1211                           
  1212                           ;SC8F289XB_ADC.c: 71: unsigned char j = 0;
  1213  0044  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0045  01A1               	clrf	ADC_Sample@j
  1215  0046                     l763:	
  1216                           ;SC8F289XB_ADC.c: 72: while (GODONE)
  1217                           
  1218  0046  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0047  1C9D               	btfss	29,1	;volatile
  1220  0048  2850               	goto	l1477
  1221                           
  1222                           ;SC8F289XB_ADC.c: 73: {
  1223                           ;SC8F289XB_ADC.c: 74: _delay((unsigned long)((2)*(8000000/4000000.0)));
  1224  0049  284A               	nop2	;2 cycle nop
  1225  004A  284B               	nop2	;2 cycle nop
  1226                           
  1227                           ;SC8F289XB_ADC.c: 76: if (0 == (--j))
  1228  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1229  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1230  004D  0BA1               	decfsz	ADC_Sample@j,f
  1231  004E  2846               	goto	l763
  1232                           
  1233                           ;SC8F289XB_ADC.c: 77: return 0;
  1234  004F  3400               	retlw	0
  1235  0050                     l1477:	
  1236                           
  1237                           ;SC8F289XB_ADC.c: 78: }
  1238                           ;SC8F289XB_ADC.c: 80: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
  1239  0050  081F               	movf	31,w	;volatile
  1240  0051  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0052  00AB               	movwf	ADC_Sample@ad_temp	;volatile
  1242  0053  01AC               	clrf	ADC_Sample@ad_temp+1	;volatile
  1243  0054  0EAB               	swapf	ADC_Sample@ad_temp,f	;volatile
  1244  0055  0EAC               	swapf	ADC_Sample@ad_temp+1,f	;volatile
  1245  0056  30F0               	movlw	240
  1246  0057  05AC               	andwf	ADC_Sample@ad_temp+1,f	;volatile
  1247  0058  082B               	movf	ADC_Sample@ad_temp,w	;volatile
  1248  0059  390F               	andlw	15
  1249  005A  04AC               	iorwf	ADC_Sample@ad_temp+1,f	;volatile
  1250  005B  30F0               	movlw	240
  1251  005C  05AB               	andwf	ADC_Sample@ad_temp,f	;volatile
  1252  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1253  005E  0E1E               	swapf	30,w	;volatile
  1254  005F  390F               	andlw	15
  1255  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1256  0061  07AB               	addwf	ADC_Sample@ad_temp,f	;volatile
  1257  0062  1803               	skipnc
  1258  0063  0AAC               	incf	ADC_Sample@ad_temp+1,f	;volatile
  1259                           
  1260                           ;SC8F289XB_ADC.c: 82: if (0 == admax)
  1261  0064  0829               	movf	ADC_Sample@admax,w	;volatile
  1262  0065  042A               	iorwf	ADC_Sample@admax+1,w	;volatile
  1263  0066  1D03               	btfss	3,2
  1264  0067  286B               	goto	l1485
  1265                           
  1266                           ;SC8F289XB_ADC.c: 83: {
  1267                           ;SC8F289XB_ADC.c: 84: admax = ad_temp;
  1268  0068  20FB  118A         	fcall	PL10	;call to abstracted procedure
  1269  006A  287E               	goto	l1491
  1270  006B                     l1485:	
  1271                           ;SC8F289XB_ADC.c: 86: }
  1272                           
  1273                           ;SC8F289XB_ADC.c: 85: admin = ad_temp;
  1274                           
  1275                           
  1276                           ;SC8F289XB_ADC.c: 87: else if (ad_temp > admax)
  1277  006B  082C               	movf	ADC_Sample@ad_temp+1,w	;volatile
  1278  006C  022A               	subwf	ADC_Sample@admax+1,w	;volatile
  1279  006D  1D03               	skipz
  1280  006E  2871               	goto	u535
  1281  006F  082B               	movf	ADC_Sample@ad_temp,w	;volatile
  1282  0070  0229               	subwf	ADC_Sample@admax,w	;volatile
  1283  0071                     u535:	
  1284  0071  1803               	skipnc
  1285  0072  2876               	goto	l1489
  1286                           
  1287                           ;SC8F289XB_ADC.c: 88: admax = ad_temp;
  1288  0073  20FB  118A         	fcall	PL10	;call to abstracted procedure
  1289  0075  2882               	goto	l769
  1290  0076                     l1489:	
  1291                           
  1292                           ;SC8F289XB_ADC.c: 89: else if (ad_temp < admin)
  1293  0076  0828               	movf	ADC_Sample@admin+1,w	;volatile
  1294  0077  022C               	subwf	ADC_Sample@ad_temp+1,w	;volatile
  1295  0078  1D03               	skipz
  1296  0079  287C               	goto	u545
  1297  007A  0827               	movf	ADC_Sample@admin,w	;volatile
  1298  007B  022B               	subwf	ADC_Sample@ad_temp,w	;volatile
  1299  007C                     u545:	
  1300  007C  1803               	skipnc
  1301  007D  2882               	goto	l769
  1302  007E                     l1491:	
  1303                           
  1304                           ;SC8F289XB_ADC.c: 90: admin = ad_temp;
  1305  007E  082C               	movf	ADC_Sample@ad_temp+1,w	;volatile
  1306  007F  00A8               	movwf	ADC_Sample@admin+1	;volatile
  1307  0080  082B               	movf	ADC_Sample@ad_temp,w	;volatile
  1308  0081  00A7               	movwf	ADC_Sample@admin	;volatile
  1309  0082                     l769:	
  1310                           
  1311                           ;SC8F289XB_ADC.c: 92: adsum += ad_temp;
  1312  0082  082B               	movf	ADC_Sample@ad_temp,w	;volatile
  1313  0083  00F3               	movwf	??_ADC_Sample
  1314  0084  082C               	movf	ADC_Sample@ad_temp+1,w	;volatile
  1315  0085  00F4               	movwf	??_ADC_Sample+1
  1316  0086  01F5               	clrf	??_ADC_Sample+2
  1317  0087  01F6               	clrf	??_ADC_Sample+3
  1318  0088  0873               	movf	??_ADC_Sample,w
  1319  0089  07A3               	addwf	ADC_Sample@adsum,f	;volatile
  1320  008A  0874               	movf	??_ADC_Sample+1,w
  1321  008B  1103               	clrz
  1322  008C  1803               	skipnc
  1323  008D  3E01               	addlw	1
  1324  008E  1D03               	btfss	3,2
  1325  008F  07A4               	addwf	ADC_Sample@adsum+1,f	;volatile
  1326  0090  0875               	movf	??_ADC_Sample+2,w
  1327  0091  1103               	clrz
  1328  0092  1803               	skipnc
  1329  0093  3E01               	addlw	1
  1330  0094  1D03               	btfss	3,2
  1331  0095  07A5               	addwf	ADC_Sample@adsum+2,f	;volatile
  1332  0096  0876               	movf	??_ADC_Sample+3,w
  1333  0097  1103               	clrz
  1334  0098  1803               	skipnc
  1335  0099  3E01               	addlw	1
  1336  009A  1D03               	btfss	3,2
  1337  009B  07A6               	addwf	ADC_Sample@adsum+3,f	;volatile
  1338  009C  300A               	movlw	10
  1339  009D  0AA2               	incf	ADC_Sample@i,f
  1340  009E  0222               	subwf	ADC_Sample@i,w
  1341  009F  1C03               	skipc
  1342  00A0  2830               	goto	l1467
  1343                           
  1344                           ;SC8F289XB_ADC.c: 93: }
  1345                           ;SC8F289XB_ADC.c: 94: adsum -= admax;
  1346  00A1  0829               	movf	ADC_Sample@admax,w	;volatile
  1347  00A2  00F3               	movwf	??_ADC_Sample
  1348  00A3  082A               	movf	ADC_Sample@admax+1,w	;volatile
  1349  00A4  20E3  118A         	fcall	PL2	;call to abstracted procedure
  1350  00A6  1C03               	skipc
  1351  00A7  0F76               	incfsz	??_ADC_Sample+3,w
  1352  00A8  02A6               	subwf	ADC_Sample@adsum+3,f	;volatile
  1353                           
  1354                           ;SC8F289XB_ADC.c: 95: if (adsum >= admin)
  1355  00A9  0827               	movf	ADC_Sample@admin,w	;volatile
  1356  00AA  00F3               	movwf	??_ADC_Sample
  1357  00AB  0828               	movf	ADC_Sample@admin+1,w	;volatile
  1358  00AC  00F4               	movwf	??_ADC_Sample+1
  1359  00AD  01F5               	clrf	??_ADC_Sample+2
  1360  00AE  01F6               	clrf	??_ADC_Sample+3
  1361  00AF  0876               	movf	??_ADC_Sample+3,w
  1362  00B0  0226               	subwf	ADC_Sample@adsum+3,w	;volatile
  1363  00B1  1D03               	skipz
  1364  00B2  28BD               	goto	u585
  1365  00B3  0875               	movf	??_ADC_Sample+2,w
  1366  00B4  0225               	subwf	ADC_Sample@adsum+2,w	;volatile
  1367  00B5  1D03               	skipz
  1368  00B6  28BD               	goto	u585
  1369  00B7  0874               	movf	??_ADC_Sample+1,w
  1370  00B8  0224               	subwf	ADC_Sample@adsum+1,w	;volatile
  1371  00B9  1D03               	skipz
  1372  00BA  28BD               	goto	u585
  1373  00BB  0873               	movf	??_ADC_Sample,w
  1374  00BC  0223               	subwf	ADC_Sample@adsum,w	;volatile
  1375  00BD                     u585:	
  1376  00BD  1C03               	skipc
  1377  00BE  28C8               	goto	l773
  1378                           
  1379                           ;SC8F289XB_ADC.c: 96: adsum -= admin;
  1380  00BF  0827               	movf	ADC_Sample@admin,w	;volatile
  1381  00C0  00F3               	movwf	??_ADC_Sample
  1382  00C1  0828               	movf	ADC_Sample@admin+1,w	;volatile
  1383  00C2  20E3  118A         	fcall	PL2	;call to abstracted procedure
  1384  00C4  1C03               	skipc
  1385  00C5  0F76               	incfsz	??_ADC_Sample+3,w
  1386  00C6  02A6               	subwf	ADC_Sample@adsum+3,f	;volatile
  1387  00C7  28CC               	goto	l1501
  1388  00C8                     l773:	
  1389                           
  1390                           ;SC8F289XB_ADC.c: 97: else
  1391                           ;SC8F289XB_ADC.c: 98: adsum = 0;
  1392  00C8  01A3               	clrf	ADC_Sample@adsum	;volatile
  1393  00C9  01A4               	clrf	ADC_Sample@adsum+1	;volatile
  1394  00CA  01A5               	clrf	ADC_Sample@adsum+2	;volatile
  1395  00CB  01A6               	clrf	ADC_Sample@adsum+3	;volatile
  1396  00CC                     l1501:	
  1397                           
  1398                           ;SC8F289XB_ADC.c: 100: adresult = adsum >> 3;
  1399  00CC  0823               	movf	ADC_Sample@adsum,w	;volatile
  1400  00CD  00F3               	movwf	??_ADC_Sample
  1401  00CE  0824               	movf	ADC_Sample@adsum+1,w	;volatile
  1402  00CF  00F4               	movwf	??_ADC_Sample+1
  1403  00D0  0825               	movf	ADC_Sample@adsum+2,w	;volatile
  1404  00D1  00F5               	movwf	??_ADC_Sample+2
  1405  00D2  0826               	movf	ADC_Sample@adsum+3,w	;volatile
  1406  00D3  00F6               	movwf	??_ADC_Sample+3
  1407  00D4  3003               	movlw	3
  1408  00D5                     u605:	
  1409  00D5  1003               	clrc
  1410  00D6  0CF6               	rrf	??_ADC_Sample+3,f
  1411  00D7  0CF5               	rrf	??_ADC_Sample+2,f
  1412  00D8  0CF4               	rrf	??_ADC_Sample+1,f
  1413  00D9  0CF3               	rrf	??_ADC_Sample,f
  1414  00DA  3EFF               	addlw	-1
  1415  00DB  1D03               	skipz
  1416  00DC  28D5               	goto	u605
  1417  00DD  0874               	movf	??_ADC_Sample+1,w
  1418  00DE  00C7               	movwf	_adresult+1	;volatile
  1419  00DF  0873               	movf	??_ADC_Sample,w
  1420  00E0  00C6               	movwf	_adresult	;volatile
  1421                           
  1422                           ;SC8F289XB_ADC.c: 102: adsum = 0;
  1423                           
  1424                           ;SC8F289XB_ADC.c: 103: admin = 0;
  1425                           
  1426                           ;SC8F289XB_ADC.c: 104: admax = 0;
  1427  00E1  20F2               	fcall	PL4	;call to abstracted procedure
  1428                           
  1429                           ;SC8F289XB_ADC.c: 105: return 0xA5;
  1430  00E2  34A5               	retlw	165
  1431  00E3                     __end_of_ADC_Sample:	
  1432  00E3                     PL2:	
  1433  00E3  00F4               	movwf	??_ADC_Sample+1
  1434  00E4  01F5               	clrf	??_ADC_Sample+2
  1435  00E5  01F6               	clrf	??_ADC_Sample+3
  1436  00E6  0873               	movf	??_ADC_Sample,w
  1437  00E7  02A3               	subwf	ADC_Sample@adsum,f	;volatile
  1438  00E8  0874               	movf	??_ADC_Sample+1,w
  1439  00E9  1C03               	skipc
  1440  00EA  0F74               	incfsz	??_ADC_Sample+1,w
  1441  00EB  02A4               	subwf	ADC_Sample@adsum+1,f	;volatile
  1442  00EC  0875               	movf	??_ADC_Sample+2,w
  1443  00ED  1C03               	skipc
  1444  00EE  0F75               	incfsz	??_ADC_Sample+2,w
  1445  00EF  02A5               	subwf	ADC_Sample@adsum+2,f	;volatile
  1446  00F0  0876               	movf	??_ADC_Sample+3,w
  1447  00F1  0008               	return
  1448  00F2                     __end_ofPL2:	
  1449  00F2                     PL4:	
  1450  00F2  01A3               	clrf	ADC_Sample@adsum	;volatile
  1451  00F3  01A4               	clrf	ADC_Sample@adsum+1	;volatile
  1452  00F4  01A5               	clrf	ADC_Sample@adsum+2	;volatile
  1453  00F5  01A6               	clrf	ADC_Sample@adsum+3	;volatile
  1454  00F6  01A7               	clrf	ADC_Sample@admin	;volatile
  1455  00F7  01A8               	clrf	ADC_Sample@admin+1	;volatile
  1456  00F8  01A9               	clrf	ADC_Sample@admax	;volatile
  1457  00F9  01AA               	clrf	ADC_Sample@admax+1	;volatile
  1458  00FA  0008               	return
  1459  00FB                     __end_ofPL4:	
  1460  00FB                     PL10:	
  1461  00FB  082C               	movf	ADC_Sample@ad_temp+1,w	;volatile
  1462  00FC  00AA               	movwf	ADC_Sample@admax+1	;volatile
  1463  00FD  082B               	movf	ADC_Sample@ad_temp,w	;volatile
  1464  00FE  00A9               	movwf	ADC_Sample@admax	;volatile
  1465  00FF  0008               	return
  1466  0100                     __end_ofPL10:	
  1467                           
  1468                           	psect	text9
  1469  028C                     __ptext9:	
  1470 ;; *************** function _Isr_Timer *****************
  1471 ;; Defined at:
  1472 ;;		line 201 in file "J:\yun_down\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_ADC_Demo\SC8F289XB_ADC.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		None
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 300/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1486 ;;      Params:         0       0       0       0
  1487 ;;      Locals:         0       0       0       0
  1488 ;;      Temps:          2       0       0       0
  1489 ;;      Totals:         2       0       0       0
  1490 ;;Total ram usage:        2 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		Interrupt level 1
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           
  1500                           ;psect for function _Isr_Timer
  1501  028C                     _Isr_Timer:	
  1502                           
  1503                           ;SC8F289XB_ADC.c: 203: if (TMR2IF)
  1504  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1505  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1506  028E  188C               	btfsc	12,1	;volatile
  1507                           
  1508                           ;SC8F289XB_ADC.c: 204: {
  1509                           ;SC8F289XB_ADC.c: 205: TMR2IF = 0;
  1510  028F  108C               	bcf	12,1	;volatile
  1511  0290  0871               	movf	??_Isr_Timer+1,w
  1512  0291  008A               	movwf	10
  1513  0292  0E70               	swapf	??_Isr_Timer^(0+-128),w
  1514  0293  0083               	movwf	3
  1515  0294  0EFE               	swapf	126,f
  1516  0295  0E7E               	swapf	126,w
  1517  0296  0009               	retfie
  1518  0297                     __end_of_Isr_Timer:	
  1519  007E                     btemp	set	126	;btemp
  1520  007E                     wtemp0	set	126
  1521                           
  1522                           	psect	intentry
  1523  0004                     __pintentry:	
  1524                           ;incstack = 0
  1525                           ; Regs used in _Isr_Timer: []
  1526                           
  1527  0004                     interrupt_function:	
  1528  007E                     saved_w	set	btemp
  1529  0004  00FE               	movwf	btemp
  1530  0005  0E03               	swapf	3,w
  1531  0006  00F0               	movwf	??_Isr_Timer
  1532  0007  080A               	movf	10,w
  1533  0008  00F1               	movwf	??_Isr_Timer+1
  1534  0009  118A  2A8C         	ljmp	_Isr_Timer


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     35      40
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    ___lwtoft->___ftpack
    ___ftdiv->___ftpack

Critical Paths under _Isr_Timer in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fttol
    ___fttol->___ftdiv
    ___ftdiv->___lwtoft

Critical Paths under _Isr_Timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr_Timer in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr_Timer in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4775
                                             31 BANK0      4     4      0
                         _ADC_Sample
                            _AD_Init
                           _DelayXms
                        _Init_System
                            ___ftdiv
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1704
                                              0 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             13     9      4     305
                                             18 BANK0     13     9      4
                            ___ftdiv (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2017
                                              3 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1629
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0     114
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _AD_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Sample                                          18    17      1     612
                                              2 COMMON     5     4      1
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr_Timer                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Sample
   _AD_Init
   _DelayXms
   _Init_System
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack

 _Isr_Timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     23      28       4       50.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      34       8        0.0%
DATA                 0      0      34       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Mar 28 09:03:20 2022

                     PL2 00E3                       PL4 00F2                       PL6 0212  
                     PL8 01B0                      PL10 00FB                      PL12 01B5  
                    l763 0046                      l773 00C8                      l769 0082  
                    l786 021F                      l963 017A                      l975 019E  
                    _PR2 0091                      u605 00D5                      u535 0071  
                    u545 007C                      u655 014D                      u585 00BD  
                    u685 01CA                      u767 0027      __size_of_ADC_Sample 00CA  
        __end_of_AD_Init 029C             ___ftdiv@cntr 002C             ___ftdiv@sign 0031  
                   l1017 012C                     l1501 00CC                     l1431 0181  
                   l1441 0193                     l1433 0186                     l1515 0283  
                   l1435 018E                     l1525 0288                     l1429 017E  
                   l1463 002D                     l1439 019C                     l1607 01C2  
                   l1641 0209                     l1625 01E5                     l1609 01C7  
                   l1491 007E                     l1467 0030                     l1459 002B  
                   l1635 01F1                     l1485 006B                     l1477 0050  
                   l1637 01FB                     l1629 01ED                     l1591 013F  
                   l1489 0076                     l1569 011E                     _WPUA 0007  
                   _WPUB 0008                     _main 0219             ___ftpack@arg 0072  
           ___ftpack@exp 0075                     btemp 007E                     start 000B  
           ___fttol@exp1 003E            ??_Init_System 0072             ___fttol@lval 003A  
                  ?_main 0070          __end_of___ftdiv 0172          __end_of___fttol 0212  
                  _T2CON 0012                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086            ___ftpack@sign 0076  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_DelayXms 028C          __initialization 000D             __end_of_main 0263  
                 ??_main 007A            ___fttol@sign1 0039                ??_AD_Init 0072  
    __end_of_Init_System 0281                   _ADCON0 009D                   _ADCON1 009C  
                 _ADRESH 009F                   _ADRESL 009E         __end_of___ftpack 01B0  
                 _GODONE 04E9                   _LDO_EN 04E2                   _INTCON 000B  
       __end_of___lwtoft 0110                   _OSCCON 0088                   _TMR2IE 0069  
                 _TMR2IF 0061             ??_ADC_Sample 0073                   _TRISB7 0437  
     __size_of_Isr_Timer 000B                ??___ftdiv 0029                ??___fttol 0036  
                 _result 007A       __end_of_ADC_Sample 00E3                   saved_w 007E  
__end_of__initialization 0016               ___ftdiv@f1 0026               ___ftdiv@f2 0023  
             ___ftdiv@f3 002D               ___fttol@f1 0032           __pcstackCOMMON 0070  
            _Init_System 0263               __end_ofPL2 00F2               __end_ofPL4 00FB  
             __end_ofPL6 0219               __end_ofPL8 01B5               ___lwtoft@c 0020  
              ?_DelayXms 0070        __end_of_Isr_Timer 0297               __pbssBANK0 0043  
             __pmaintext 0219               __pintentry 0004                ?___ftpack 0072  
                _AD_Init 0297                ?___lwtoft 0020               ??_DelayXms 0072  
        ADC_Sample@adldo 0072          ADC_Sample@admax 0029          ADC_Sample@admin 0027  
        ADC_Sample@adsum 0023                  ___ftdiv 0110                  ___fttol 01B9  
             ??___ftpack 0077                  __ptext0 0000                  __ptext1 0100  
                __ptext2 01B9                  __ptext3 0110                  __ptext4 0172  
                __ptext5 0263                  __ptext6 0281                  __ptext7 0297  
                __ptext8 0019                  __ptext9 028C               ??___lwtoft 007A  
   end_of_initialization 0016                DelayXms@i 0073                DelayXms@j 0074  
              DelayXms@x 0072           main@power_temp 003F              ___ftdiv@exp 0030  
           ?_Init_System 0070              __end_ofPL10 0100              __end_ofPL12 01B9  
    start_initialization 000D        __size_of_DelayXms 000B                _Isr_Timer 028C  
      ADC_Sample@ad_temp 002B                 ?_AD_Init 0070        __size_of___ftpack 003E  
            __pbssCOMMON 007A                ___latbits 0001        __size_of___lwtoft 0010  
          __pcstackBANK0 0020               ?_Isr_Timer 0070                 ?___ftdiv 0023  
               ?___fttol 0032           ADC_Sample@adch 0020              ADC_Sample@i 0022  
            ADC_Sample@j 0021        interrupt_function 0004     __size_of_Init_System 001E  
       __size_of_AD_Init 0005                 _DelayXms 0281              ??_Isr_Timer 0070  
             _ADC_Sample 0019         __size_of___ftdiv 0062         __size_of___fttol 0059  
               ___ftpack 0172                 ___lwtoft 0100                 _adresult 0046  
          __size_of_main 004A                 _test_adc 0045                 _power_ad 0043  
               intlevel1 0000              ?_ADC_Sample 0072               _OPTION_REG 0081  
