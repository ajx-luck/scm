

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 16 14:58:38 2022

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2892B
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  000B                     _INTCON	set	11
    51  002A                     _RA2	set	42
    52  0088                     _OSCCON	set	136
    53  0085                     _TRISA	set	133
    54  0081                     _OPTION_REG	set	129
    55  011F                     _LVDCON	set	287
    56  0108                     _PIE2	set	264
    57  08FF                     _LVD_RES	set	2303
    58  0838                     _LVDIF	set	2104
    59                           
    60                           	psect	cinit
    61  000D                     start_initialization:	
    62                           ; #config settings
    63                           
    64  000D                     __initialization:	
    65  000D                     end_of_initialization:	
    66                           ;End of C runtime variable initialization code
    67                           
    68  000D                     __end_of__initialization:	
    69  000D  0183               	clrf	3
    70  000E  118A  2810         	ljmp	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMMON
    73  0070                     __pcstackCOMMON:	
    74  0070                     ?_main:	
    75  0070                     ?_LVD_Isr:	
    76                           ; 1 bytes @ 0x0
    77                           
    78  0070                     ??_LVD_Isr:	
    79                           ; 1 bytes @ 0x0
    80                           
    81                           
    82                           ; 1 bytes @ 0x0
    83  0070                     	ds	2
    84  0072                     ??_main:	
    85                           
    86                           	psect	maintext
    87  0010                     __pmaintext:	
    88                           ; 1 bytes @ 0x2
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 13 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8P289XB_LVD_Demo\SC8P289XB_LVD.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;		None
    99 ;; Return value:  Size  Location     Type
   100 ;;                  1    wreg      void 
   101 ;; Registers used:
   102 ;;		wreg, status,2
   103 ;; Tracked objects:
   104 ;;		On entry : B00/0
   105 ;;		On exit  : 300/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   108 ;;      Params:         0       0       0       0
   109 ;;      Locals:         0       0       0       0
   110 ;;      Temps:          0       0       0       0
   111 ;;      Totals:         0       0       0       0
   112 ;;Total ram usage:        0 bytes
   113 ;; Hardware stack levels required when called:    1
   114 ;; This function calls:
   115 ;;		Nothing
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           
   122                           ;psect for function _main
   123  0010                     _main:	
   124                           
   125                           ;incstack = 0
   126                           ; Regs used in _main: [wreg+status,2]
   127  0010  0000               	nop	;# 
   128  0011  0064               	clrwdt	;# 
   129                           
   130                           ;SC8P289XB_LVD.c: 34: OSCCON = 0x72;
   131  0012  3072               	movlw	114
   132  0013  1683               	bsf	3,5	;RP0=1, select bank1
   133  0014  1303               	bcf	3,6	;RP1=0, select bank1
   134  0015  0088               	movwf	8	;volatile
   135                           
   136                           ;SC8P289XB_LVD.c: 35: OPTION_REG = 0;
   137  0016  0181               	clrf	1	;volatile
   138                           
   139                           ;SC8P289XB_LVD.c: 36: TRISA = 0;
   140  0017  0185               	clrf	5	;volatile
   141                           
   142                           ;SC8P289XB_LVD.c: 38: LVDCON = 0x07;
   143  0018  3007               	movlw	7
   144  0019  1283               	bcf	3,5	;RP0=0, select bank2
   145  001A  1703               	bsf	3,6	;RP1=1, select bank2
   146  001B  009F               	movwf	31	;volatile
   147                           
   148                           ;SC8P289XB_LVD.c: 40: INTCON = 0xC0;
   149  001C  30C0               	movlw	192
   150  001D  008B               	movwf	11	;volatile
   151                           
   152                           ;SC8P289XB_LVD.c: 41: PIE2 = 0x01;
   153  001E  3001               	movlw	1
   154  001F  0088               	movwf	8	;volatile
   155  0020  2823               	goto	l747
   156  0021                     l1144:	
   157                           
   158                           ;SC8P289XB_LVD.c: 48: RA2 = 1;
   159  0021  1303               	bcf	3,6	;RP1=0, select bank0
   160  0022  1505               	bsf	5,2	;volatile
   161  0023                     l747:	
   162                           ;SC8P289XB_LVD.c: 44: while(1)
   163                           
   164  0023  0064               	clrwdt	;# 
   165                           
   166                           ;SC8P289XB_LVD.c: 47: if (LVD_RES)
   167  0024  1283               	bcf	3,5	;RP0=0, select bank2
   168  0025  1703               	bsf	3,6	;RP1=1, select bank2
   169  0026  1B9F               	btfsc	31,7	;volatile
   170  0027  2821               	goto	l1144
   171                           
   172                           ;SC8P289XB_LVD.c: 49: else
   173                           ;SC8P289XB_LVD.c: 50: RA2 = 0;
   174  0028  1303               	bcf	3,6	;RP1=0, select bank0
   175  0029  1105               	bcf	5,2	;volatile
   176  002A  2823               	goto	l747
   177  002B                     __end_of_main:	
   178                           
   179                           	psect	text1
   180  002B                     __ptext1:	
   181 ;; *************** function _LVD_Isr *****************
   182 ;; Defined at:
   183 ;;		line 61 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8P289XB_LVD_Demo\SC8P289XB_LVD.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		None
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 300/200
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   197 ;;      Params:         0       0       0       0
   198 ;;      Locals:         0       0       0       0
   199 ;;      Temps:          2       0       0       0
   200 ;;      Totals:         2       0       0       0
   201 ;;Total ram usage:        2 bytes
   202 ;; Hardware stack levels used:    1
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		Interrupt level 1
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           
   211                           ;psect for function _LVD_Isr
   212  002B                     _LVD_Isr:	
   213                           
   214                           ;SC8P289XB_LVD.c: 63: if(LVDIF)
   215  002B  1283               	bcf	3,5	;RP0=0, select bank2
   216  002C  1703               	bsf	3,6	;RP1=1, select bank2
   217  002D  1807               	btfsc	7,0	;volatile
   218                           
   219                           ;SC8P289XB_LVD.c: 64: {
   220                           ;SC8P289XB_LVD.c: 65: LVDIF = 0;
   221  002E  1007               	bcf	7,0	;volatile
   222  002F  0871               	movf	??_LVD_Isr+1,w
   223  0030  008A               	movwf	10
   224  0031  0E70               	swapf	??_LVD_Isr^(0+-128),w
   225  0032  0083               	movwf	3
   226  0033  0EFE               	swapf	126,f
   227  0034  0E7E               	swapf	126,w
   228  0035  0009               	retfie
   229  0036                     __end_of_LVD_Isr:	
   230  007E                     btemp	set	126	;btemp
   231  007E                     wtemp0	set	126
   232                           
   233                           	psect	intentry
   234  0004                     __pintentry:	
   235                           ;incstack = 0
   236                           ; Regs used in _LVD_Isr: []
   237                           
   238  0004                     interrupt_function:	
   239  007E                     saved_w	set	btemp
   240  0004  00FE               	movwf	btemp
   241  0005  0E03               	swapf	3,w
   242  0006  00F0               	movwf	??_LVD_Isr
   243  0007  080A               	movf	10,w
   244  0008  00F1               	movwf	??_LVD_Isr+1
   245  0009  118A  282B         	ljmp	_LVD_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _LVD_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LVD_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LVD_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LVD_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _LVD_Isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _LVD_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 16 14:58:38 2022

                    l747 0023                      _RA2 002A                     l1144 0021  
                   _PIE2 0108          __end_of_LVD_Isr 0036                     _main 0010  
                   btemp 007E                     start 000B                    ?_main 0070  
                  _LVDIF 0838                    _TRISA 0085                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 002B                   ??_main 0072                ??_LVD_Isr 0070  
                 _INTCON 000B                   _LVDCON 011F                   _OSCCON 0088  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0070  
             __pmaintext 0010               __pintentry 0004                  _LVD_RES 08FF  
                _LVD_Isr 002B                  __ptext0 0000                  __ptext1 002B  
   end_of_initialization 000D      start_initialization 000D                ___latbits 0001  
               ?_LVD_Isr 0070        interrupt_function 0004         __size_of_LVD_Isr 000B  
          __size_of_main 001B                 intlevel1 0000               _OPTION_REG 0081  
