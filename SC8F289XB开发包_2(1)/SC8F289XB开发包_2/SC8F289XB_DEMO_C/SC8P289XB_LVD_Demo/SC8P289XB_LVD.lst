---- F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8P289XB_LVD_Demo\SC8P289XB_LVD.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                功能：LVD模块演示
3:                版本：V1.0
4:                日期：2021.01.04 
5:                
6:                *本程序由 中微半导体 &应用支持部& 编写整理
7:                *公司网址 www.mcu.com.cn
8:                
9:                -------------------------------------------*/
10:               
11:               #include <sc.h>
12:               
13:               void main()
  0010    0000    NOP
  0011    0064    CLRWDT
14:               {
15:               	asm("nop");
16:               	asm("clrwdt");
17:               	
18:               	/****************  LVDCON   ***************************************
19:               		Bit7 LVD_RES: LVD输出结果 
20:               			0= VDD>设定的LVD电压； 
21:               			1= VDD<设定的LVD电压； 
22:               		Bit6~Bit4 未用 
23:               		Bit3~Bit1 LVD_SEL[2:0]: LVD电压选择 
24:               			000= 2.2V； 
25:               			001= 2.4V； 
26:               			010= 2.7V； 
27:               			011= 3.0V； 
28:               			100= 3.3V； 
29:               			101= 3.7V； 
30:               			110= 4.0V； 
31:               			111= 4.3V； 
32:               		Bit0 LVDEN: LVD使能位 0= 禁止； 1= 使能；
33:               	*********************************************************/ 
34:               	OSCCON = 0x72;			//内部振荡器用作系统时钟，8M，开WDT
  0012    3072    LDIA	0x72
  0013    1683    SETB	0x3,5
  0014    1303    CLRB	0x3,6
  0015    0088    LD	0x8,A
35:               	OPTION_REG = 0;			//预分频寄存器设置	
  0016    0181    CLR	0x1
36:               	TRISA = 0;
  0017    0185    CLR	0x5
37:               		
38:               	LVDCON = 0x07;			//LVD电压设定3.0V,使能LVD
  0018    3007    LDIA	0x7
  0019    1283    CLRB	0x3,5
  001A    1703    SETB	0x3,6
  001B    009F    LD	0x1F,A
39:               							//LVD使能后需延时1ms才可以读取LVD_RES，且VDD变化后1ms，LVD_RES才有输出
40:               	INTCON = 0xC0;			//允许所有未被屏蔽的中断、允许外设中断	
  001C    30C0    LDIA	0xC0
  001D    008B    LD	0xB,A
41:               	PIE2 = 0x01;			//允许LVD中断
  001E    3001    LDIA	0x1
  001F    0088    LD	0x8,A
  0020    2823    JP	0x23
42:               //---------------------------------------		
43:               
44:               	while(1)			
  0023    0064    CLRWDT
45:               	{
46:               		asm("clrwdt");
47:               		if (LVD_RES)		//VDD<3V,则LVD_RES=1
  0024    1283    CLRB	0x3,5
  0025    1703    SETB	0x3,6
  0026    1B9F    SZB	0x1F,7
  0027    2821    JP	0x21
48:               			RA2 = 1;
  0021    1303    CLRB	0x3,6
  0022    1505    SETB	0x5,2
49:               		else
50:               			RA2 = 0;
  0028    1303    CLRB	0x3,6
  0029    1105    CLRB	0x5,2
  002A    2823    JP	0x23
51:               	}
52:               }
53:               
54:               /***********************************************
55:               函数名称：LVD_Isr
56:               函数功能：LVD中断服务
57:               入口参数：无
58:               出口参数：无
59:               备注：
60:               ************************************************/
61:               void interrupt LVD_Isr()
62:               {
63:               	if(LVDIF)				//VDD < LVD设定电压值(3.0V)
  002B    1283    CLRB	0x3,5
  002C    1703    SETB	0x3,6
  002D    1807    SZB	0x7,0
64:               	{
65:               		LVDIF = 0;			//清中断标志		
  002E    1007    CLRB	0x7,0
  002F    0871    LD	A,0x71
  0030    008A    LD	0xA,A
  0031    0E70    SWAPA	0x70
  0032    0083    LD	0x3,A
  0033    0EFE    SWAPR	0x7E
  0034    0E7E    SWAPA	0x7E
  0035    0009    RETI
66:               	}
67:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    280B    JP	0xB
  000B    118A    CLRB	0xA,3
  000C    280D    JP	0xD
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    080A    LD	A,0xA
  0008    00F1    LD	0x71,A
  0009    118A    CLRB	0xA,3
  000A    282B    JP	0x2B
---- common_function ------------------------------------------------------------------
  000D    0183    CLR	0x3
  000E    118A    CLRB	0xA,3
  000F    2810    JP	0x10
