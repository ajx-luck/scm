

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 16 16:23:21 2022

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2892B
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	pa_nodes0,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	text0
    55  0000                     __ptext0:	
    56  000B                     _INTCON	set	11
    57  0008                     _WPUB	set	8
    58  0007                     _WPUA	set	7
    59  0006                     _PORTB	set	6
    60  0005                     _PORTA	set	5
    61  006D                     _RCIE	set	109
    62  0065                     _RCIF	set	101
    63  005E                     _PEIE	set	94
    64  005F                     _GIE	set	95
    65  0088                     _OSCCON	set	136
    66  0086                     _TRISB	set	134
    67  0085                     _TRISA	set	133
    68  0081                     _OPTION_REG	set	129
    69  011B                     _RCREG	set	283
    70  011A                     _TXREG	set	282
    71  0119                     _SPBRG	set	281
    72  0118                     _RCSTA	set	280
    73  0117                     _TXSTA	set	279
    74  08B9                     _TRMT	set	2233
    75                           
    76                           	psect	cinit
    77  000F                     start_initialization:	
    78                           ; #config settings
    79                           
    80  000F                     __initialization:	
    81                           
    82                           ; Clear objects allocated to BITCOMMON
    83  000F  01F9               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
    84                           
    85                           ; Clear objects allocated to COMMON
    86  0010  01F0               	clrf	__pbssCOMMON& (0+127)
    87  0011  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    88  0012  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    89  0013  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    90  0014  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    91                           
    92                           ; Clear objects allocated to BANK0
    93  0015  1283               	bcf	3,5	;RP0=0, select bank0
    94  0016  1303               	bcf	3,6	;RP1=0, select bank0
    95  0017  01A0               	clrf	__pbssBANK0& (0+127)
    96  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
    97  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
    98  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
    99  001B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   100  001C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   101  001D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   102  001E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   103  001F  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   104  0020  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   105  0021  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   106  0022  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   107  0023                     end_of_initialization:	
   108                           ;End of C runtime variable initialization code
   109                           
   110  0023                     __end_of__initialization:	
   111  0023  0183               	clrf	3
   112  0024  118A  2826         	ljmp	_main	;jump to C main() function
   113                           
   114                           	psect	bitbssCOMMON
   115  03C8                     __pbitbssCOMMON:	
   116  03C8                     _RXOK_f:	
   117  03C8                     	ds	1
   118                           
   119                           	psect	bssCOMMON
   120  0070                     __pbssCOMMON:	
   121  0070                     _result1:	
   122  0070                     	ds	2
   123  0072                     _result:	
   124  0072                     	ds	2
   125  0074                     UART_Isr@RxNum:	
   126  0074                     	ds	1
   127                           
   128                           	psect	bssBANK0
   129  0020                     __pbssBANK0:	
   130  0020                     _RxTable:	
   131  0020                     	ds	10
   132  002A                     _result2:	
   133  002A                     	ds	2
   134                           
   135                           	psect	cstackCOMMON
   136  0075                     __pcstackCOMMON:	
   137  0075                     ?_Init_System:	
   138  0075                     ?_DelayXms:	
   139                           ; 1 bytes @ 0x0
   140                           
   141  0075                     ?_main:	
   142                           ; 1 bytes @ 0x0
   143                           
   144  0075                     ?_UART_Isr:	
   145                           ; 1 bytes @ 0x0
   146                           
   147  0075                     ??_UART_Isr:	
   148                           ; 1 bytes @ 0x0
   149                           
   150                           
   151                           ; 1 bytes @ 0x0
   152  0075                     	ds	3
   153  0078                     ??_Init_System:	
   154  0078                     ??_DelayXms:	
   155                           ; 1 bytes @ 0x3
   156                           
   157  0078                     ??_main:	
   158                           ; 1 bytes @ 0x3
   159                           
   160  0078                     main@i:	
   161                           ; 1 bytes @ 0x3
   162                           
   163                           
   164                           ; 1 bytes @ 0x3
   165  0078                     	ds	1
   166                           
   167                           	psect	cstackBANK0
   168  002C                     __pcstackBANK0:	
   169  002C                     DelayXms@x:	
   170                           
   171                           ; 1 bytes @ 0x0
   172  002C                     	ds	1
   173  002D                     DelayXms@i:	
   174                           
   175                           ; 1 bytes @ 0x1
   176  002D                     	ds	1
   177  002E                     DelayXms@j:	
   178                           
   179                           ; 1 bytes @ 0x2
   180  002E                     	ds	1
   181                           
   182                           	psect	maintext
   183  0026                     __pmaintext:	
   184 ;;
   185 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   186 ;;
   187 ;; *************** function _main *****************
   188 ;; Defined at:
   189 ;;		line 34 in file "F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_Uart_Demo\main.c"
   190 ;; Parameters:    Size  Location     Type
   191 ;;		None
   192 ;; Auto vars:     Size  Location     Type
   193 ;;  i               1    3[COMMON] unsigned char 
   194 ;; Return value:  Size  Location     Type
   195 ;;                  1    wreg      void 
   196 ;; Registers used:
   197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   198 ;; Tracked objects:
   199 ;;		On entry : B00/0
   200 ;;		On exit  : B00/200
   201 ;;		Unchanged: 0/0
   202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   203 ;;      Params:         0       0       0       0
   204 ;;      Locals:         1       0       0       0
   205 ;;      Temps:          0       0       0       0
   206 ;;      Totals:         1       0       0       0
   207 ;;Total ram usage:        1 bytes
   208 ;; Hardware stack levels required when called:    2
   209 ;; This function calls:
   210 ;;		_DelayXms
   211 ;;		_Init_System
   212 ;; This function is called by:
   213 ;;		Startup code after reset
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           
   218                           ;psect for function _main
   219  0026                     _main:	
   220                           
   221                           ;main.c: 36: DelayXms(2);
   222                           
   223                           ;incstack = 0
   224                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   225  0026  3002               	movlw	2
   226  0027  118A  2089  118A   	fcall	_DelayXms
   227                           
   228                           ;main.c: 38: Init_System();
   229  002A  118A  206A  118A   	fcall	_Init_System
   230                           
   231                           ;main.c: 40: TXREG =0x55;
   232  002D  3055               	movlw	85
   233  002E  1703               	bsf	3,6	;RP1=1, select bank2
   234  002F  009A               	movwf	26	;volatile
   235  0030                     l766:	
   236                           ;main.c: 42: while(TRMT==0);
   237                           
   238  0030  1C97               	btfss	23,1	;volatile
   239  0031  2830               	goto	l766
   240                           
   241                           ;main.c: 43: TXREG =0xaa;
   242  0032  30AA               	movlw	170
   243  0033  009A               	movwf	26	;volatile
   244  0034                     l769:	
   245                           ;main.c: 45: while(TRMT==0);
   246                           
   247  0034  1C97               	btfss	23,1	;volatile
   248  0035  2834               	goto	l769
   249  0036                     l772:	
   250                           ;main.c: 47: while(1)
   251                           
   252                           
   253                           ;main.c: 48: {
   254                           ;main.c: 51: if(RXOK_f==1)
   255  0036  1C79               	btfss	_RXOK_f/(0+8),_RXOK_f& (0+7)
   256  0037  2836               	goto	l772
   257                           
   258                           ;main.c: 52: {
   259                           ;main.c: 53: for(i=0;i<10;i++)
   260  0038  01F8               	clrf	main@i
   261  0039                     l1385:	
   262                           
   263                           ;main.c: 54: {
   264                           ;main.c: 56: TXREG =RxTable[i];
   265  0039  0878               	movf	main@i,w
   266  003A  3E20               	addlw	(low (_RxTable| 0))& (0+255)
   267  003B  0084               	movwf	4
   268  003C  1383               	bcf	3,7	;select IRP bank0
   269  003D  0800               	movf	0,w
   270  003E  1703               	bsf	3,6	;RP1=1, select bank2
   271  003F  009A               	movwf	26	;volatile
   272  0040                     l776:	
   273                           ;main.c: 58: while(TRMT==0);
   274                           
   275  0040  1C97               	btfss	23,1	;volatile
   276  0041  2840               	goto	l776
   277  0042  300A               	movlw	10
   278  0043  0AF8               	incf	main@i,f
   279  0044  0278               	subwf	main@i,w
   280  0045  1C03               	skipc
   281  0046  2839               	goto	l1385
   282                           
   283                           ;main.c: 59: }
   284                           ;main.c: 61: RXOK_f = 0;
   285  0047  1079               	bcf	_RXOK_f/(0+8),_RXOK_f& (0+7)
   286  0048  2836               	goto	l772
   287  0049                     __end_of_main:	
   288                           
   289                           	psect	text1
   290  006A                     __ptext1:	
   291 ;; *************** function _Init_System *****************
   292 ;; Defined at:
   293 ;;		line 75 in file "F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_Uart_Demo\main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;		None
   298 ;; Return value:  Size  Location     Type
   299 ;;                  1    wreg      void 
   300 ;; Registers used:
   301 ;;		wreg, status,2
   302 ;; Tracked objects:
   303 ;;		On entry : B00/0
   304 ;;		On exit  : 300/0
   305 ;;		Unchanged: 0/0
   306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   307 ;;      Params:         0       0       0       0
   308 ;;      Locals:         0       0       0       0
   309 ;;      Temps:          0       0       0       0
   310 ;;      Totals:         0       0       0       0
   311 ;;Total ram usage:        0 bytes
   312 ;; Hardware stack levels used:    1
   313 ;; Hardware stack levels required when called:    1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _Init_System
   323  006A                     _Init_System:	
   324                           
   325                           ;incstack = 0
   326                           ; Regs used in _Init_System: [wreg+status,2]
   327  006A  0000               	nop	;# 
   328  006B  0064               	clrwdt	;# 
   329                           
   330                           ;main.c: 79: INTCON = 0;
   331  006C  018B               	clrf	11	;volatile
   332                           
   333                           ;main.c: 80: OSCCON = 0X70;
   334  006D  3070               	movlw	112
   335  006E  1683               	bsf	3,5	;RP0=1, select bank1
   336  006F  1303               	bcf	3,6	;RP1=0, select bank1
   337  0070  0088               	movwf	8	;volatile
   338                           
   339                           ;main.c: 81: OPTION_REG = 0;
   340  0071  0181               	clrf	1	;volatile
   341                           
   342                           ;main.c: 83: WPUA = 0B00000000;
   343  0072  1283               	bcf	3,5	;RP0=0, select bank0
   344  0073  0187               	clrf	7	;volatile
   345                           
   346                           ;main.c: 84: WPUB = 0B00001000;
   347  0074  3008               	movlw	8
   348  0075  0088               	movwf	8	;volatile
   349                           
   350                           ;main.c: 87: TRISA = 0B00000000;
   351  0076  1683               	bsf	3,5	;RP0=1, select bank1
   352  0077  0185               	clrf	5	;volatile
   353                           
   354                           ;main.c: 88: TRISB = 0B00011000;
   355  0078  3018               	movlw	24
   356  0079  0086               	movwf	6	;volatile
   357                           
   358                           ;main.c: 90: PORTA = 0B00000000;
   359  007A  1283               	bcf	3,5	;RP0=0, select bank0
   360  007B  0185               	clrf	5	;volatile
   361                           
   362                           ;main.c: 91: PORTB = 0B00000000;
   363  007C  0186               	clrf	6	;volatile
   364                           
   365                           ;main.c: 121: TXSTA = 0B10100000;
   366  007D  30A0               	movlw	160
   367  007E  1703               	bsf	3,6	;RP1=1, select bank2
   368  007F  0097               	movwf	23	;volatile
   369                           
   370                           ;main.c: 157: RCSTA = 0B10010000;
   371  0080  3090               	movlw	144
   372  0081  0098               	movwf	24	;volatile
   373                           
   374                           ;main.c: 158: SPBRG = 51;
   375  0082  3033               	movlw	51
   376  0083  0099               	movwf	25	;volatile
   377                           
   378                           ;main.c: 160: PEIE =1;
   379  0084  170B               	bsf	11,6	;volatile
   380                           
   381                           ;main.c: 161: RCIE =1;
   382  0085  1303               	bcf	3,6	;RP1=0, select bank0
   383  0086  168D               	bsf	13,5	;volatile
   384                           
   385                           ;main.c: 162: GIE =1;
   386  0087  178B               	bsf	11,7	;volatile
   387  0088  0008               	return
   388  0089                     __end_of_Init_System:	
   389                           
   390                           	psect	text2
   391  0089                     __ptext2:	
   392 ;; *************** function _DelayXms *****************
   393 ;; Defined at:
   394 ;;		line 24 in file "F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_Uart_Demo\main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;  x               1    wreg     unsigned char 
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  x               1    0[BANK0 ] unsigned char 
   399 ;;  j               1    2[BANK0 ] unsigned char 
   400 ;;  i               1    1[BANK0 ] unsigned char 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2, status,0
   405 ;; Tracked objects:
   406 ;;		On entry : B00/0
   407 ;;		On exit  : B00/0
   408 ;;		Unchanged: 800/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   410 ;;      Params:         0       0       0       0
   411 ;;      Locals:         0       3       0       0
   412 ;;      Temps:          0       0       0       0
   413 ;;      Totals:         0       3       0       0
   414 ;;Total ram usage:        3 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; Hardware stack levels required when called:    1
   417 ;; This function calls:
   418 ;;		Nothing
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _DelayXms
   426  0089                     _DelayXms:	
   427                           
   428                           ;incstack = 0
   429                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   430                           ;DelayXms@x stored from wreg
   431  0089  00AC               	movwf	DelayXms@x
   432                           
   433                           ;main.c: 26: unsigned char i,j;
   434                           ;main.c: 27: for(i=x;i>0;i--)
   435  008A  00AD               	movwf	DelayXms@i
   436  008B                     l1351:	
   437  008B  082D               	movf	DelayXms@i,w
   438  008C  1903               	btfsc	3,2
   439  008D  0008               	return
   440                           
   441                           ;main.c: 28: for(j=153;j>0;j--);
   442  008E  3099               	movlw	153
   443  008F  00AE               	movwf	DelayXms@j
   444  0090                     l1361:	
   445  0090  0BAE               	decfsz	DelayXms@j,f
   446  0091  2890               	goto	l1361
   447  0092  03AD               	decf	DelayXms@i,f
   448  0093  288B               	goto	l1351
   449  0094                     __end_of_DelayXms:	
   450                           
   451                           	psect	text3
   452  0049                     __ptext3:	
   453 ;; *************** function _UART_Isr *****************
   454 ;; Defined at:
   455 ;;		line 173 in file "F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_Uart_Demo\main.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 100/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   469 ;;      Params:         0       0       0       0
   470 ;;      Locals:         0       0       0       0
   471 ;;      Temps:          3       0       0       0
   472 ;;      Totals:         3       0       0       0
   473 ;;Total ram usage:        3 bytes
   474 ;; Hardware stack levels used:    1
   475 ;; This function calls:
   476 ;;		Nothing
   477 ;; This function is called by:
   478 ;;		Interrupt level 1
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           
   483                           ;psect for function _UART_Isr
   484  0049                     _UART_Isr:	
   485                           
   486                           ;main.c: 175: static unsigned char RxNum=0,TEMP;
   487                           ;main.c: 177: if(RCIF==1)
   488  0049  1283               	bcf	3,5	;RP0=0, select bank0
   489  004A  1303               	bcf	3,6	;RP1=0, select bank0
   490  004B  1E8C               	btfss	12,5	;volatile
   491  004C  2861               	goto	i1l797
   492                           
   493                           ;main.c: 178: {
   494                           ;main.c: 179: RCIF = 0;
   495  004D  128C               	bcf	12,5	;volatile
   496                           
   497                           ;main.c: 181: if(RXOK_f==0)
   498  004E  1879               	btfsc	_RXOK_f/(0+8),_RXOK_f& (0+7)
   499  004F  285F               	goto	i1l1347
   500                           
   501                           ;main.c: 182: {
   502                           ;main.c: 183: RxTable[RxNum] = RCREG;
   503  0050  0874               	movf	UART_Isr@RxNum,w
   504  0051  3E20               	addlw	(low (_RxTable| 0))& (0+255)
   505  0052  0084               	movwf	4
   506  0053  1703               	bsf	3,6	;RP1=1, select bank2
   507  0054  081B               	movf	27,w	;volatile
   508  0055  1383               	bcf	3,7	;select IRP bank0
   509  0056  0080               	movwf	0
   510  0057  300A               	movlw	10
   511                           
   512                           ;main.c: 184: RxNum++;
   513  0058  0AF4               	incf	UART_Isr@RxNum,f
   514                           
   515                           ;main.c: 185: if(RxNum > 9)
   516  0059  0274               	subwf	UART_Isr@RxNum,w
   517  005A  1C03               	skipc
   518  005B  2861               	goto	i1l797
   519                           
   520                           ;main.c: 186: {
   521                           ;main.c: 187: RxNum =0;
   522  005C  01F4               	clrf	UART_Isr@RxNum
   523                           
   524                           ;main.c: 188: RXOK_f =1;
   525  005D  1479               	bsf	_RXOK_f/(0+8),_RXOK_f& (0+7)
   526  005E  2861               	goto	i1l797
   527  005F                     i1l1347:	
   528                           
   529                           ;main.c: 191: else
   530                           ;main.c: 192: TEMP = RCREG;
   531  005F  1703               	bsf	3,6	;RP1=1, select bank2
   532  0060  081B               	movf	27,w	;volatile
   533  0061                     i1l797:	
   534  0061  0877               	movf	??_UART_Isr+2,w
   535  0062  008A               	movwf	10
   536  0063  0876               	movf	??_UART_Isr+1,w
   537  0064  0084               	movwf	4
   538  0065  0E75               	swapf	??_UART_Isr^(0+-128),w
   539  0066  0083               	movwf	3
   540  0067  0EFE               	swapf	126,f
   541  0068  0E7E               	swapf	126,w
   542  0069  0009               	retfie
   543  006A                     __end_of_UART_Isr:	
   544  007E                     btemp	set	126	;btemp
   545  007E                     wtemp0	set	126
   546                           
   547                           	psect	intentry
   548  0004                     __pintentry:	
   549                           ;incstack = 0
   550                           ; Regs used in _UART_Isr: [wreg-fsr0h+status,2+status,0]
   551                           
   552  0004                     interrupt_function:	
   553  007E                     saved_w	set	btemp
   554  0004  00FE               	movwf	btemp
   555  0005  0E03               	swapf	3,w
   556  0006  00F5               	movwf	??_UART_Isr
   557  0007  0804               	movf	4,w
   558  0008  00F6               	movwf	??_UART_Isr+1
   559  0009  080A               	movf	10,w
   560  000A  00F7               	movwf	??_UART_Isr+2
   561  000B  118A  2849         	ljmp	_UART_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      10
    BANK0            80      3      15
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _UART_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_DelayXms

Critical Paths under _UART_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     269
                                              3 COMMON     1     1      0
                           _DelayXms
                        _Init_System
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0     167
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _UART_Isr                                             3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Init_System

 _UART_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      3       F       4       18.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      19       8        0.0%
DATA                 0      0      19       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 16 16:23:21 2022

                    l772 0036                      l766 0030                      l776 0040  
                    l769 0034                      _GIE 005F                      fsr0 0004  
                    indf 0000                     l1351 008B                     l1361 0090  
                   l1385 0039                     _PEIE 005E                     _RCIE 006D  
                   _RCIF 0065                     _TRMT 08B9                     _WPUA 0007  
                   _WPUB 0008                     _main 0026                     btemp 007E  
                   start 000D            ??_Init_System 0078                    ?_main 0075  
                  i1l797 0061                    _RCREG 011B                    _RCSTA 0118  
                  _SPBRG 0119                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 011A  
                  _TXSTA 0117         __end_of_UART_Isr 006A                    main@i 0078  
         __pbitbssCOMMON 03C8                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_DelayXms 0094          __initialization 000F  
           __end_of_main 0049                   ??_main 0078      __end_of_Init_System 0089  
                 i1l1347 005F                   _INTCON 000B                   _OSCCON 0088  
                 _RXOK_f 03C8                   _result 0072                   saved_w 007E  
__end_of__initialization 0023           __pcstackCOMMON 0075                ?_UART_Isr 0075  
            _Init_System 006A                ?_DelayXms 0075               __pbssBANK0 0020  
             __pmaintext 0026               ??_UART_Isr 0075               __pintentry 0004  
             ??_DelayXms 0078                  _RxTable 0020                  __ptext0 0000  
                __ptext1 006A                  __ptext2 0089                  __ptext3 0049  
                _result1 0070                  _result2 002A     end_of_initialization 0023  
              DelayXms@i 002D                DelayXms@j 002E                DelayXms@x 002C  
           ?_Init_System 0075        __size_of_UART_Isr 0021      start_initialization 000F  
      __size_of_DelayXms 000B              __pbssCOMMON 0070                ___latbits 0001  
          __pcstackBANK0 002C            UART_Isr@RxNum 0074        interrupt_function 0004  
               _UART_Isr 0049     __size_of_Init_System 001F                 _DelayXms 0089  
          __size_of_main 0023                 intlevel1 0000               _OPTION_REG 0081  
