Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

-W-9 \
  --edf=F:\ÖÐÎ¢×ÊÁÏ\SCMCU_IDE_V2.00.11_Beta4\SCMCU_IDE_V2.00.11_Beta4\data\dat\en_msgs.txt \
  -cs -h+SPI_Slave_Demo.sym --cmf=SPI_Slave_Demo.cmf -z -QSC8F2892B \
  -oC:\Users\lenovo\AppData\Local\Temp\seas.2 -MSPI_Slave_Demo.map -E1 \
  -ver=XC8 -ASTACK=020h-06fh -pstack=STACK -ACODE=00h-07FFhx2 \
  -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 \
  -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k startup.obj SPI_Slave_Demo.obj 

Object code version is 3.11

Machine type is SC8F2892B



                Name                               Link     Load   Length Selector   Space Scale
startup.obj     end_init                              B        B        2        8       0
                reset_vec                             0        0        2        0       0
SPI_Slave_Demo.obj
                cinit                                 D        D        C        8       0
                intentry                              4        4        7        8       0
                text3                                3E       3E       11        8       0
                text2                                4F       4F        B        8       0
                text1                                19       19       14        8       0
                maintext                             2D       2D       11        8       0
                cstackCOMMON                         79       79        5       70       1
                bssCOMMON                            70       70        9       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              B        B        2         0
                cinit                                 D        D        C         0
                intentry                              4        4        7         0
                reset_vec                             0        0        2         0
                text3                                3E       3E       11         0
                text2                                4F       4F        B         0
                text1                                19       19       14         0
                maintext                             2D       2D       11         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         79       79        5         1
                bssCOMMON                            70       70        9         1

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   BANK3          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                intentry                       000004  000056  00005A         8       0  CODE        2
                bssCOMMON                      000070  00000E  00007E        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            020-06F            50           1
        BANK1            0A0-0EF            50           1
        BANK2            120-16F            50           1
        CODE             002-003             2           2
                         05A-FFF           7A6
        CONFIG           2007-2008             2           2
        CONST            002-003             2           2
                         05A-FFF           100
        ENTRY            002-003             2           2
                         05A-FFF           100
        IDLOC            2000-2003             4           2
        RAM              020-06F            50           1
                         0A0-0EF            50
                         120-16F            50
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        SFR2             100-11F            20           1
        SFR3             180-1EF            70           1
        STACK            020-06F            50           1
        STRCODE          002-003             2           2
                         05A-FFF           FA6
        STRING           002-003             2           2
                         05A-FFF           100

                                  Symbol Table

DelayXms@i               cstackCOMMON 07C
DelayXms@j               cstackCOMMON 07D
DelayXms@x               cstackCOMMON 07B
_DelayXms                text2        04F
_GIE                     (abs)        05F
_IICReadData             bssCOMMON    076
_INTCON                  (abs)        00B
_Init_System             text1        019
_OPTION_REG              (abs)        081
_OSCCON                  (abs)        088
_PEIE                    (abs)        05E
_PORTA                   (abs)        005
_PORTB                   (abs)        006
_ReceBuffer              bssCOMMON    078
_SPIBUF                  (abs)        11C
_SPICON                  (abs)        11D
_SPICON2                 (abs)        11E
_SPIIE                   (abs)        06B
_SPIIF                   (abs)        063
_SPI_Isr                 text3        03E
_SendBuffer              bssCOMMON    077
_TRISA                   (abs)        085
_TRISB                   (abs)        086
_WPUA                    (abs)        007
_WPUB                    (abs)        008
__Habs1                  abs1         000
__Hbank0                 bank0        000
__Hbank1                 bank1        000
__Hbank2                 bank2        000
__Hbank3                 bank3        000
__HbssCOMMON             bssCOMMON    000
__Hcinit                 cinit        019
__Hclrtext               clrtext      000
__Hcode                  code         000
__Hcommon                common       000
__Hconfig                config       000
__HcstackCOMMON          cstackCOMMON 000
__Heeprom_data           eeprom_data  000
__Hend_init              end_init     00D
__Hfunctab               functab      000
__Hidloc                 idloc        000
__Hinit                  init         00B
__Hintentry              intentry     00B
__Hmaintext              maintext     000
__Hpa_nodes0             pa_nodes0    000
__Hpowerup               powerup      000
__Hram                   ram          000
__Hreset_vec             reset_vec    002
__Hsfr0                  sfr0         000
__Hsfr1                  sfr1         000
__Hsfr2                  sfr2         000
__Hsfr3                  sfr3         000
__Hspace_0               (abs)        05A
__Hspace_1               (abs)        07E
__Hspace_2               (abs)        000
__Hspace_3               (abs)        000
__Hstack                 stack        000
__Hstrings               strings      000
__Htext                  text         000
__Labs1                  abs1         000
__Lbank0                 bank0        000
__Lbank1                 bank1        000
__Lbank2                 bank2        000
__Lbank3                 bank3        000
__LbssCOMMON             bssCOMMON    000
__Lcinit                 cinit        00D
__Lclrtext               clrtext      000
__Lcode                  code         000
__Lcommon                common       000
__Lconfig                config       000
__LcstackCOMMON          cstackCOMMON 000
__Leeprom_data           eeprom_data  000
__Lend_init              end_init     00B
__Lfunctab               functab      000
__Lidloc                 idloc        000
__Linit                  init         00B
__Lintentry              intentry     004
__Lmaintext              maintext     000
__Lpa_nodes0             pa_nodes0    000
__Lpowerup               powerup      000
__Lram                   ram          000
__Lreset_vec             reset_vec    000
__Lsfr0                  sfr0         000
__Lsfr1                  sfr1         000
__Lsfr2                  sfr2         000
__Lsfr3                  sfr3         000
__Lspace_0               (abs)        000
__Lspace_1               (abs)        000
__Lspace_2               (abs)        000
__Lspace_3               (abs)        000
__Lstack                 stack        000
__Lstrings               strings      000
__Ltext                  text         000
__S0                     (abs)        05A
__S1                     (abs)        07E
__S2                     (abs)        000
___int_sp                stack        000
___latbits               (abs)        001
___sp                    stack        000
__end_of_DelayXms        text2        05A
__end_of_Init_System     text1        02D
__end_of_SPI_Isr         text3        04F
__end_of__initialization cinit        016
__end_of_main            maintext     03E
__initialization         cinit        00D
__pbssCOMMON             bssCOMMON    070
__pcstackCOMMON          cstackCOMMON 079
__pintentry              intentry     004
__pmaintext              maintext     02D
__ptext0                 text0        000
__ptext1                 text1        019
__ptext2                 text2        04F
__ptext3                 text3        03E
__size_of_DelayXms       (abs)        000
__size_of_Init_System    (abs)        000
__size_of_SPI_Isr        (abs)        000
__size_of_main           (abs)        000
_main                    maintext     02D
_result                  bssCOMMON    074
_result1                 bssCOMMON    072
_result2                 bssCOMMON    070
btemp                    (abs)        07E
end_of_initialization    cinit        016
interrupt_function       intentry     004
intlevel0                functab      000
intlevel1                functab      000
intlevel2                functab      000
intlevel3                functab      000
intlevel4                functab      000
intlevel5                functab      000
reset_vec                reset_vec    000
saved_w                  (abs)        07E
stackhi                  (abs)        000
stacklo                  (abs)        000
start                    init         00B
start_initialization     cinit        00D
wtemp0                   (abs)        07E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 33 in file "F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    2
 This function calls:
		_DelayXms
		_Init_System
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _Init_System *****************
 Defined at:
		line 97 in file "F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _DelayXms *****************
 Defined at:
		line 22 in file "F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  x               1    2[COMMON] unsigned char 
  j               1    4[COMMON] unsigned char 
  i               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _SPI_Isr *****************
 Defined at:
		line 124 in file "F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__initialization		CODE           	000D	0000	10

shared estimated size: 10

F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c
		_DelayXms      		CODE           	004F	0000	12
		_main          		CODE           	002D	0000	18
		_SPI_Isr       		CODE           	003E	0000	18
		_Init_System   		CODE           	0019	0000	21

F:\ÖÐÎ¢×ÊÁÏ\SC8F289XB¿ª·¢°ü\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c estimated size: 69

