

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Mar 16 14:40:59 2022

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2892B
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	pa_nodes0,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	text0
    52  0000                     __ptext0:	
    53  000B                     _INTCON	set	11
    54  0008                     _WPUB	set	8
    55  0007                     _WPUA	set	7
    56  0006                     _PORTB	set	6
    57  0005                     _PORTA	set	5
    58  006B                     _SPIIE	set	107
    59  0063                     _SPIIF	set	99
    60  005E                     _PEIE	set	94
    61  005F                     _GIE	set	95
    62  0088                     _OSCCON	set	136
    63  0086                     _TRISB	set	134
    64  0085                     _TRISA	set	133
    65  0081                     _OPTION_REG	set	129
    66  011E                     _SPICON2	set	286
    67  011D                     _SPICON	set	285
    68  011C                     _SPIBUF	set	284
    69                           
    70                           	psect	cinit
    71  000D                     start_initialization:	
    72                           ; #config settings
    73                           
    74  000D                     __initialization:	
    75                           
    76                           ; Clear objects allocated to COMMON
    77  000D  01F0               	clrf	__pbssCOMMON& (0+127)
    78  000E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    79  000F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    80  0010  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    81  0011  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    82  0012  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    83  0013  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    84  0014  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
    85  0015  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
    86  0016                     end_of_initialization:	
    87                           ;End of C runtime variable initialization code
    88                           
    89  0016                     __end_of__initialization:	
    90  0016  0183               	clrf	3
    91  0017  118A  282D         	ljmp	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMMON
    94  0070                     __pbssCOMMON:	
    95  0070                     _result2:	
    96  0070                     	ds	2
    97  0072                     _result1:	
    98  0072                     	ds	2
    99  0074                     _result:	
   100  0074                     	ds	2
   101  0076                     _IICReadData:	
   102  0076                     	ds	1
   103  0077                     _SendBuffer:	
   104  0077                     	ds	1
   105  0078                     _ReceBuffer:	
   106  0078                     	ds	1
   107                           
   108                           	psect	cstackCOMMON
   109  0079                     __pcstackCOMMON:	
   110  0079                     ?_Init_System:	
   111  0079                     ?_DelayXms:	
   112                           ; 1 bytes @ 0x0
   113                           
   114  0079                     ?_main:	
   115                           ; 1 bytes @ 0x0
   116                           
   117  0079                     ?_SPI_Isr:	
   118                           ; 1 bytes @ 0x0
   119                           
   120  0079                     ??_SPI_Isr:	
   121                           ; 1 bytes @ 0x0
   122                           
   123                           
   124                           ; 1 bytes @ 0x0
   125  0079                     	ds	2
   126  007B                     ??_Init_System:	
   127  007B                     ??_DelayXms:	
   128                           ; 1 bytes @ 0x2
   129                           
   130  007B                     DelayXms@x:	
   131                           ; 1 bytes @ 0x2
   132                           
   133                           
   134                           ; 1 bytes @ 0x2
   135  007B                     	ds	1
   136  007C                     DelayXms@i:	
   137                           
   138                           ; 1 bytes @ 0x3
   139  007C                     	ds	1
   140  007D                     DelayXms@j:	
   141                           
   142                           ; 1 bytes @ 0x4
   143  007D                     	ds	1
   144  007E                     ??_main:	
   145                           
   146                           	psect	maintext
   147  002D                     __pmaintext:	
   148                           ; 1 bytes @ 0x5
   149 ;;
   150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   151 ;;
   152 ;; *************** function _main *****************
   153 ;; Defined at:
   154 ;;		line 33 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;		None
   159 ;; Return value:  Size  Location     Type
   160 ;;                  1    wreg      void 
   161 ;; Registers used:
   162 ;;		wreg, status,2, status,0, pclath, cstack
   163 ;; Tracked objects:
   164 ;;		On entry : B00/0
   165 ;;		On exit  : 0/0
   166 ;;		Unchanged: 0/0
   167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   168 ;;      Params:         0       0       0       0
   169 ;;      Locals:         0       0       0       0
   170 ;;      Temps:          0       0       0       0
   171 ;;      Totals:         0       0       0       0
   172 ;;Total ram usage:        0 bytes
   173 ;; Hardware stack levels required when called:    2
   174 ;; This function calls:
   175 ;;		_DelayXms
   176 ;;		_Init_System
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           
   183                           ;psect for function _main
   184  002D                     _main:	
   185                           
   186                           ;main.c: 35: Init_System();
   187                           
   188                           ;incstack = 0
   189                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   190  002D  118A  2019  118A   	fcall	_Init_System
   191                           
   192                           ;main.c: 60: SPICON = 0B00100100;
   193  0030  3024               	movlw	36
   194  0031  1703               	bsf	3,6	;RP1=1, select bank2
   195  0032  009D               	movwf	29	;volatile
   196                           
   197                           ;main.c: 74: SPICON2 = 0B00000000;
   198  0033  019E               	clrf	30	;volatile
   199                           
   200                           ;main.c: 76: SPIIF =0;
   201  0034  1303               	bcf	3,6	;RP1=0, select bank0
   202  0035  118C               	bcf	12,3	;volatile
   203                           
   204                           ;main.c: 77: SPIIE=1;
   205  0036  158D               	bsf	13,3	;volatile
   206                           
   207                           ;main.c: 78: PEIE =1;
   208  0037  170B               	bsf	11,6	;volatile
   209                           
   210                           ;main.c: 79: GIE =1;
   211  0038  178B               	bsf	11,7	;volatile
   212  0039                     l1208:	
   213                           
   214                           ;main.c: 82: {
   215                           ;main.c: 83: DelayXms(200);
   216  0039  30C8               	movlw	200
   217  003A  118A  204F  118A   	fcall	_DelayXms
   218  003D  2839               	goto	l1208
   219  003E                     __end_of_main:	
   220                           
   221                           	psect	text1
   222  0019                     __ptext1:	
   223 ;; *************** function _Init_System *****************
   224 ;; Defined at:
   225 ;;		line 97 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;		None
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 300/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   239 ;;      Params:         0       0       0       0
   240 ;;      Locals:         0       0       0       0
   241 ;;      Temps:          0       0       0       0
   242 ;;      Totals:         0       0       0       0
   243 ;;Total ram usage:        0 bytes
   244 ;; Hardware stack levels used:    1
   245 ;; Hardware stack levels required when called:    1
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		_main
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253                           
   254                           ;psect for function _Init_System
   255  0019                     _Init_System:	
   256                           
   257                           ;incstack = 0
   258                           ; Regs used in _Init_System: [wreg+status,2]
   259  0019  0000               	nop	;# 
   260  001A  0064               	clrwdt	;# 
   261                           
   262                           ;main.c: 101: INTCON = 0;
   263  001B  018B               	clrf	11	;volatile
   264                           
   265                           ;main.c: 102: OSCCON = 0X70;
   266  001C  3070               	movlw	112
   267  001D  1683               	bsf	3,5	;RP0=1, select bank1
   268  001E  1303               	bcf	3,6	;RP1=0, select bank1
   269  001F  0088               	movwf	8	;volatile
   270                           
   271                           ;main.c: 103: OPTION_REG = 0;
   272  0020  0181               	clrf	1	;volatile
   273                           
   274                           ;main.c: 105: WPUA = 0B00000000;
   275  0021  1283               	bcf	3,5	;RP0=0, select bank0
   276  0022  0187               	clrf	7	;volatile
   277                           
   278                           ;main.c: 106: WPUB = 0B00001000;
   279  0023  3008               	movlw	8
   280  0024  0088               	movwf	8	;volatile
   281                           
   282                           ;main.c: 109: TRISA = 0B00000000;
   283  0025  1683               	bsf	3,5	;RP0=1, select bank1
   284  0026  0185               	clrf	5	;volatile
   285                           
   286                           ;main.c: 110: TRISB = 0B01110100;
   287  0027  3074               	movlw	116
   288  0028  0086               	movwf	6	;volatile
   289                           
   290                           ;main.c: 112: PORTA = 0B00000000;
   291  0029  1283               	bcf	3,5	;RP0=0, select bank0
   292  002A  0185               	clrf	5	;volatile
   293                           
   294                           ;main.c: 113: PORTB = 0B00000000;
   295  002B  0186               	clrf	6	;volatile
   296  002C  0008               	return
   297  002D                     __end_of_Init_System:	
   298                           
   299                           	psect	text2
   300  004F                     __ptext2:	
   301 ;; *************** function _DelayXms *****************
   302 ;; Defined at:
   303 ;;		line 22 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;  x               1    wreg     unsigned char 
   306 ;; Auto vars:     Size  Location     Type
   307 ;;  x               1    2[COMMON] unsigned char 
   308 ;;  j               1    4[COMMON] unsigned char 
   309 ;;  i               1    3[COMMON] unsigned char 
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   319 ;;      Params:         0       0       0       0
   320 ;;      Locals:         3       0       0       0
   321 ;;      Temps:          0       0       0       0
   322 ;;      Totals:         3       0       0       0
   323 ;;Total ram usage:        3 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; Hardware stack levels required when called:    1
   326 ;; This function calls:
   327 ;;		Nothing
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           
   334                           ;psect for function _DelayXms
   335  004F                     _DelayXms:	
   336                           
   337                           ;incstack = 0
   338                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   339                           ;DelayXms@x stored from wreg
   340  004F  00FB               	movwf	DelayXms@x
   341                           
   342                           ;main.c: 24: unsigned char i,j;
   343                           ;main.c: 25: for(i=x;i>0;i--)
   344  0050  00FC               	movwf	DelayXms@i
   345  0051                     l1158:	
   346  0051  087C               	movf	DelayXms@i,w
   347  0052  1903               	btfsc	3,2
   348  0053  0008               	return
   349                           
   350                           ;main.c: 26: for(j=153;j>0;j--);
   351  0054  3099               	movlw	153
   352  0055  00FD               	movwf	DelayXms@j
   353  0056                     l1168:	
   354  0056  0BFD               	decfsz	DelayXms@j,f
   355  0057  2856               	goto	l1168
   356  0058  03FC               	decf	DelayXms@i,f
   357  0059  2851               	goto	l1158
   358  005A                     __end_of_DelayXms:	
   359                           
   360                           	psect	text3
   361  003E                     __ptext3:	
   362 ;; *************** function _SPI_Isr *****************
   363 ;; Defined at:
   364 ;;		line 124 in file "F:\中微资料\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_SPI_slave_Demo\main.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 100/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   378 ;;      Params:         0       0       0       0
   379 ;;      Locals:         0       0       0       0
   380 ;;      Temps:          2       0       0       0
   381 ;;      Totals:         2       0       0       0
   382 ;;Total ram usage:        2 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		Interrupt level 1
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _SPI_Isr
   393  003E                     _SPI_Isr:	
   394                           
   395                           ;main.c: 127: if(SPIIF==1)
   396  003E  1283               	bcf	3,5	;RP0=0, select bank0
   397  003F  1303               	bcf	3,6	;RP1=0, select bank0
   398  0040  1D8C               	btfss	12,3	;volatile
   399  0041  2848               	goto	i1l780
   400                           
   401                           ;main.c: 128: {
   402                           ;main.c: 129: SPIIF = 0;
   403  0042  118C               	bcf	12,3	;volatile
   404                           
   405                           ;main.c: 131: ReceBuffer = SPIBUF;
   406  0043  1703               	bsf	3,6	;RP1=1, select bank2
   407  0044  081C               	movf	28,w	;volatile
   408  0045  00F8               	movwf	_ReceBuffer	;volatile
   409                           
   410                           ;main.c: 132: SPIBUF =0xaa;
   411  0046  30AA               	movlw	170
   412  0047  009C               	movwf	28	;volatile
   413  0048                     i1l780:	
   414  0048  087A               	movf	??_SPI_Isr+1,w
   415  0049  008A               	movwf	10
   416  004A  0E79               	swapf	??_SPI_Isr^(0+-128),w
   417  004B  0083               	movwf	3
   418  004C  0EFE               	swapf	126,f
   419  004D  0E7E               	swapf	126,w
   420  004E  0009               	retfie
   421  004F                     __end_of_SPI_Isr:	
   422  007E                     btemp	set	126	;btemp
   423  007E                     wtemp0	set	126
   424                           
   425                           	psect	intentry
   426  0004                     __pintentry:	
   427                           ;incstack = 0
   428                           ; Regs used in _SPI_Isr: [wreg]
   429                           
   430  0004                     interrupt_function:	
   431  007E                     saved_w	set	btemp
   432  0004  00FE               	movwf	btemp
   433  0005  0E03               	swapf	3,w
   434  0006  00F9               	movwf	??_SPI_Isr
   435  0007  080A               	movf	10,w
   436  0008  00FA               	movwf	??_SPI_Isr+1
   437  0009  118A  283E         	ljmp	_SPI_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms

Critical Paths under _SPI_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _SPI_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SPI_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SPI_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
                           _DelayXms
                        _Init_System
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0      75
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _SPI_Isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Init_System

 _SPI_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       E       8        0.0%
DATA                 0      0       E       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Mar 16 14:40:59 2022

                    _GIE 005F                     l1208 0039                     l1158 0051  
                   l1168 0056                     _PEIE 005E                     _WPUA 0007  
                   _WPUB 0008                     _main 002D                     btemp 007E  
        __end_of_SPI_Isr 004F                     start 000B            ??_Init_System 007B  
                  ?_main 0079                    i1l780 0048                    _PORTA 0005  
                  _PORTB 0006                    _SPIIE 006B                    _SPIIF 0063  
                  _TRISA 0085                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_DelayXms 005A  
        __initialization 000D             __end_of_main 003E               _ReceBuffer 0078  
                 ??_main 007E      __end_of_Init_System 002D               _SendBuffer 0077  
              ??_SPI_Isr 0079                   _INTCON 000B                   _OSCCON 0088  
                 _SPIBUF 011C                   _SPICON 011D                   _result 0074  
                 saved_w 007E  __end_of__initialization 0016           __pcstackCOMMON 0079  
            _Init_System 0019                ?_DelayXms 0079               __pmaintext 002D  
             __pintentry 0004               ??_DelayXms 007B                  _SPICON2 011E  
                _SPI_Isr 003E                  __ptext0 0000                  __ptext1 0019  
                __ptext2 004F                  __ptext3 003E                  _result1 0072  
                _result2 0070     end_of_initialization 0016                DelayXms@i 007C  
              DelayXms@j 007D                DelayXms@x 007B             ?_Init_System 0079  
    start_initialization 000D        __size_of_DelayXms 000B              __pbssCOMMON 0070  
              ___latbits 0001                 ?_SPI_Isr 0079        interrupt_function 0004  
            _IICReadData 0076     __size_of_Init_System 0014                 _DelayXms 004F  
       __size_of_SPI_Isr 0011            __size_of_main 0011                 intlevel1 0000  
             _OPTION_REG 0081  
