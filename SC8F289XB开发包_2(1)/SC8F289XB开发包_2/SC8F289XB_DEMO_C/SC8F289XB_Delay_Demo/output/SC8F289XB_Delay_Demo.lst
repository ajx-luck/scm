

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 31 16:50:53 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2892B
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  0005                     _PORTA	set	5
    51  0088                     _OSCCON	set	136
    52  0085                     _TRISA	set	133
    53                           
    54                           	psect	cinit
    55  07FD                     start_initialization:	
    56                           ; #config settings
    57                           
    58  07FD                     __initialization:	
    59  07FD                     end_of_initialization:	
    60                           ;End of C runtime variable initialization code
    61                           
    62  07FD                     __end_of__initialization:	
    63  07FD  0183               	clrf	3
    64  07FE  118A  2FBF         	ljmp	_main	;jump to C main() function
    65                           
    66                           	psect	cstackCOMMON
    67  0070                     __pcstackCOMMON:	
    68  0070                     ?_DelayXus:	
    69  0070                     ??_DelayXus:	
    70                           ; 1 bytes @ 0x0
    71                           
    72  0070                     ?_DelayXms:	
    73                           ; 1 bytes @ 0x0
    74                           
    75  0070                     ??_DelayXms:	
    76                           ; 1 bytes @ 0x0
    77                           
    78  0070                     ?_main:	
    79                           ; 1 bytes @ 0x0
    80                           
    81  0070                     DelayXus@x:	
    82                           ; 1 bytes @ 0x0
    83                           
    84  0070                     DelayXms@x:	
    85                           ; 1 bytes @ 0x0
    86                           
    87                           
    88                           ; 1 bytes @ 0x0
    89  0070                     	ds	1
    90  0071                     DelayXms@i:	
    91                           
    92                           ; 1 bytes @ 0x1
    93  0071                     	ds	1
    94  0072                     ??_main:	
    95                           
    96                           ; 1 bytes @ 0x2
    97  0072                     	ds	2
    98                           
    99                           	psect	maintext
   100  07BF                     __pmaintext:	
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 35 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_Delay_Demo\SC8F289
      +XB_Delay.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1    wreg      void 
   113 ;; Registers used:
   114 ;;		wreg, status,2, status,0, pclath, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : B00/0
   117 ;;		On exit  : 300/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   120 ;;      Params:         0       0       0       0       0
   121 ;;      Locals:         0       0       0       0       0
   122 ;;      Temps:          2       0       0       0       0
   123 ;;      Totals:         2       0       0       0       0
   124 ;;Total ram usage:        2 bytes
   125 ;; Hardware stack levels required when called:    1
   126 ;; This function calls:
   127 ;;		_DelayXms
   128 ;;		_DelayXus
   129 ;; This function is called by:
   130 ;;		Startup code after reset
   131 ;; This function uses a non-reentrant model
   132 ;;
   133                           
   134                           
   135                           ;psect for function _main
   136  07BF                     _main:	
   137                           
   138                           ;SC8F289XB_Delay.c: 37: OSCCON = 0X72;
   139                           
   140                           ;incstack = 0
   141                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   142  07BF  3072               	movlw	114
   143  07C0  1683               	bsf	3,5	;RP0=1, select bank1
   144  07C1  0088               	movwf	8	;volatile
   145                           
   146                           ;SC8F289XB_Delay.c: 38: TRISA = 0;
   147                           
   148                           ;SC8F289XB_Delay.c: 39: PORTA = 1;
   149                           
   150                           ;SC8F289XB_Delay.c: 40: DelayXms(50);
   151  07C2  27F3               	fcall	PL2	;call to abstracted procedure
   152  07C3  118A  27B1  118A   	fcall	_DelayXms
   153  07C6  0064               	clrwdt	;# 
   154                           
   155                           ;SC8F289XB_Delay.c: 42: TRISA = 0;
   156  07C7  1683               	bsf	3,5	;RP0=1, select bank1
   157  07C8  1303               	bcf	3,6	;RP1=0, select bank1
   158                           
   159                           ;SC8F289XB_Delay.c: 43: PORTA = 1;
   160                           
   161                           ;SC8F289XB_Delay.c: 44: DelayXus(50);
   162  07C9  27F3               	fcall	PL2	;call to abstracted procedure
   163  07CA  118A  27AD  118A   	fcall	_DelayXus
   164                           
   165                           ;SC8F289XB_Delay.c: 45: TRISA = 0;
   166  07CD  1683               	bsf	3,5	;RP0=1, select bank1
   167  07CE  0185               	clrf	5	;volatile
   168                           
   169                           ;SC8F289XB_Delay.c: 46: PORTA = 0;
   170  07CF  1283               	bcf	3,5	;RP0=0, select bank0
   171  07D0  0185               	clrf	5	;volatile
   172  07D1                     l1007:	
   173                           
   174                           ;SC8F289XB_Delay.c: 48: {
   175                           ;SC8F289XB_Delay.c: 49: __nop();
   176  07D1  0000               	nop
   177                           
   178                           ;SC8F289XB_Delay.c: 50: _delay(1000);
   179  07D2  30C7               	movlw	199
   180  07D3  00F2               	movwf	??_main
   181  07D4                     u47:	
   182  07D4  2FD5               	nop2
   183  07D5  0BF2               	decfsz	??_main,f
   184  07D6  2FD4               	goto	u47
   185  07D7  2FD8               	nop2
   186  07D8  2FD9               	nop2
   187  07D9  0064               	clrwdt	;# 
   188                           
   189                           ;SC8F289XB_Delay.c: 52: PORTA ^= 0XFF;
   190  07DA  27F8  118A         	fcall	PL4	;call to abstracted procedure
   191                           
   192                           ;SC8F289XB_Delay.c: 53: _delay((unsigned long)((400)*(8000000/4000000.0)));
   193  07DC  309F               	movlw	159
   194  07DD  00F2               	movwf	??_main
   195  07DE                     u57:	
   196  07DE  2FDF               	nop2
   197  07DF  0BF2               	decfsz	??_main,f
   198  07E0  2FDE               	goto	u57
   199  07E1  2FE2               	nop2
   200  07E2  2FE3               	nop2
   201  07E3  0064               	clrwdt	;# 
   202                           
   203                           ;SC8F289XB_Delay.c: 55: PORTA ^= 0XFF;
   204  07E4  27F8  118A         	fcall	PL4	;call to abstracted procedure
   205                           
   206                           ;SC8F289XB_Delay.c: 56: _delay((unsigned long)((2)*(8000000/4000.0)));
   207  07E6  3006               	movlw	6
   208  07E7  00F3               	movwf	??_main+1
   209  07E8  3030               	movlw	48
   210  07E9  00F2               	movwf	??_main
   211  07EA                     u67:	
   212  07EA  0BF2               	decfsz	??_main,f
   213  07EB  2FEA               	goto	u67
   214  07EC  0BF3               	decfsz	??_main+1,f
   215  07ED  2FEA               	goto	u67
   216  07EE  0000               	nop
   217  07EF  0064               	clrwdt	;# 
   218                           
   219                           ;SC8F289XB_Delay.c: 61: PORTA ^= 0XFF;
   220  07F0  27F8  118A         	fcall	PL4	;call to abstracted procedure
   221  07F2  2FD1               	goto	l1007
   222  07F3                     __end_of_main:	
   223  07F3                     PL2:	
   224  07F3  0185               	clrf	5	;volatile
   225  07F4  3001               	movlw	1
   226  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   227  07F6  0085               	movwf	5	;volatile
   228  07F7  3432               	retlw	50
   229  07F8                     __end_ofPL2:	
   230  07F8                     PL4:	
   231  07F8  30FF               	movlw	255
   232  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   233  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   234  07FB  0685               	xorwf	5,f	;volatile
   235  07FC  0008               	return
   236  07FD                     __end_ofPL4:	
   237                           
   238                           	psect	text1
   239  07AD                     __ptext1:	
   240 ;; *************** function _DelayXus *****************
   241 ;; Defined at:
   242 ;;		line 12 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_Delay_Demo\SC8F289
      +XB_Delay.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;  x               1    wreg     unsigned char 
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  x               1    0[COMMON] unsigned char 
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg
   251 ;; Tracked objects:
   252 ;;		On entry : 300/0
   253 ;;		On exit  : 300/0
   254 ;;		Unchanged: 300/0
   255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   256 ;;      Params:         0       0       0       0       0
   257 ;;      Locals:         1       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0
   259 ;;      Totals:         1       0       0       0       0
   260 ;;Total ram usage:        1 bytes
   261 ;; Hardware stack levels used:    1
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           
   270                           ;psect for function _DelayXus
   271  07AD                     _DelayXus:	
   272                           
   273                           ;incstack = 0
   274                           ; Regs used in _DelayXus: [wreg]
   275                           ;DelayXus@x stored from wreg
   276  07AD  00F0               	movwf	DelayXus@x
   277  07AE                     l983:	
   278                           ;SC8F289XB_Delay.c: 14: while(--x);
   279                           
   280  07AE  0BF0               	decfsz	DelayXus@x,f
   281  07AF  2FAE               	goto	l983
   282  07B0  0008               	return
   283  07B1                     __end_of_DelayXus:	
   284                           
   285                           	psect	text2
   286  07B1                     __ptext2:	
   287 ;; *************** function _DelayXms *****************
   288 ;; Defined at:
   289 ;;		line 18 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB_DEMO_C\SC8F289XB_Delay_Demo\SC8F289
      +XB_Delay.c"
   290 ;; Parameters:    Size  Location     Type
   291 ;;  x               1    wreg     unsigned char 
   292 ;; Auto vars:     Size  Location     Type
   293 ;;  x               1    0[COMMON] unsigned char 
   294 ;;  i               1    1[COMMON] unsigned char 
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2
   299 ;; Tracked objects:
   300 ;;		On entry : B00/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   304 ;;      Params:         0       0       0       0       0
   305 ;;      Locals:         2       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0
   307 ;;      Totals:         2       0       0       0       0
   308 ;;Total ram usage:        2 bytes
   309 ;; Hardware stack levels used:    1
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           
   318                           ;psect for function _DelayXms
   319  07B1                     _DelayXms:	
   320                           
   321                           ;incstack = 0
   322                           ; Regs used in _DelayXms: [wreg+status,2]
   323                           ;DelayXms@x stored from wreg
   324  07B1  00F0               	movwf	DelayXms@x
   325                           
   326                           ;SC8F289XB_Delay.c: 20: unsigned char i = 0;;
   327  07B2  01F1               	clrf	DelayXms@i
   328  07B3                     l987:	
   329                           ;SC8F289XB_Delay.c: 22: while(--x)
   330                           
   331  07B3  0BF0               	decfsz	DelayXms@x,f
   332  07B4  2FB6               	goto	l592
   333  07B5  0008               	return
   334  07B6                     l592:	
   335  07B6  0064               	clrwdt	;# 
   336                           
   337                           ;SC8F289XB_Delay.c: 25: while(--i)
   338  07B7  2FBC               	goto	l593
   339  07B8                     l594:	
   340  07B8  0000               	nop	;# 
   341  07B9  0000               	nop	;# 
   342  07BA  0000               	nop	;# 
   343  07BB  0000               	nop	;# 
   344  07BC                     l593:	
   345  07BC  0BF1               	decfsz	DelayXms@i,f
   346  07BD  2FB8               	goto	l594
   347  07BE  2FB3               	goto	l987
   348  07BF                     __end_of_DelayXms:	
   349  007E                     btemp	set	126	;btemp
   350  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      45
                                              2 COMMON     2     2      0
                           _DelayXms
                           _DelayXus
 ---------------------------------------------------------------------------------
 (1) _DelayXus                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             2     2      0      30
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _DelayXus

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BITBANK3            50      0       0       7        0.0%
BANK3               50      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
ABS                  0      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 31 16:50:53 2021

                     PL2 07F3                       PL4 07F8                       u47 07D4  
                     u57 07DE                       u67 07EA                      l592 07B6  
                    l593 07BC                      l594 07B8                      l983 07AE  
                    l987 07B3                     l1007 07D1                     _main 07BF  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTA 0005                    _TRISA 0085                    status 0003  
                  wtemp0 007E         __end_of_DelayXms 07BF         __end_of_DelayXus 07B1  
        __initialization 07FD             __end_of_main 07F3                   ??_main 0072  
                 _OSCCON 0088  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __end_ofPL2 07F8               __end_ofPL4 07FD                ?_DelayXms 0070  
              ?_DelayXus 0070               __pmaintext 07BF               ??_DelayXms 0070  
             ??_DelayXus 0070                  __ptext0 0000                  __ptext1 07AD  
                __ptext2 07B1     end_of_initialization 07FD                DelayXms@i 0071  
              DelayXms@x 0070                DelayXus@x 0070      start_initialization 07FD  
      __size_of_DelayXms 000E        __size_of_DelayXus 0004                ___latbits 0001  
               _DelayXms 07B1                 _DelayXus 07AD            __size_of_main 0034  
