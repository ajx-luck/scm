

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 29 16:12:31 2022

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2892B
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  0012                     _T2CON	set	18
    51  000B                     _INTCON	set	11
    52  0007                     _WPUA	set	7
    53  0005                     _PORTA	set	5
    54  0069                     _TMR2IE	set	105
    55  0061                     _TMR2IF	set	97
    56  0059                     _INTF	set	89
    57  002A                     _RA2	set	42
    58  0091                     _PR2	set	145
    59  0088                     _OSCCON	set	136
    60  0085                     _TRISA	set	133
    61  0081                     _OPTION_REG	set	129
    62  040E                     _INTEDG	set	1038
    63                           
    64                           	psect	cinit
    65  000D                     start_initialization:	
    66                           ; #config settings
    67                           
    68  000D                     __initialization:	
    69  000D                     end_of_initialization:	
    70                           ;End of C runtime variable initialization code
    71                           
    72  000D                     __end_of__initialization:	
    73  000D  0183               	clrf	3
    74  000E  118A  2810         	ljmp	_main	;jump to C main() function
    75                           
    76                           	psect	cstackCOMMON
    77  0070                     __pcstackCOMMON:	
    78  0070                     ?_main:	
    79  0070                     ?_INT_Isr:	
    80                           ; 1 bytes @ 0x0
    81                           
    82  0070                     ??_INT_Isr:	
    83                           ; 1 bytes @ 0x0
    84                           
    85                           
    86                           ; 1 bytes @ 0x0
    87  0070                     	ds	2
    88  0072                     ??_main:	
    89                           
    90                           	psect	maintext
    91  0010                     __pmaintext:	
    92                           ; 1 bytes @ 0x2
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 14 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB开发包_2\SC8F289XB_DEMO_C\SC8F289XB_
      +INT_Demo\INT_Interrupt_Demo.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;		None
   103 ;; Return value:  Size  Location     Type
   104 ;;                  1    wreg      void 
   105 ;; Registers used:
   106 ;;		wreg, status,2
   107 ;; Tracked objects:
   108 ;;		On entry : B00/0
   109 ;;		On exit  : 0/0
   110 ;;		Unchanged: 0/0
   111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   112 ;;      Params:         0       0       0       0
   113 ;;      Locals:         0       0       0       0
   114 ;;      Temps:          0       0       0       0
   115 ;;      Totals:         0       0       0       0
   116 ;;Total ram usage:        0 bytes
   117 ;; Hardware stack levels required when called:    1
   118 ;; This function calls:
   119 ;;		Nothing
   120 ;; This function is called by:
   121 ;;		Startup code after reset
   122 ;; This function uses a non-reentrant model
   123 ;;
   124                           
   125                           
   126                           ;psect for function _main
   127  0010                     _main:	
   128                           
   129                           ;incstack = 0
   130                           ; Regs used in _main: [wreg+status,2]
   131  0010  0000               	nop	;# 
   132  0011  0064               	clrwdt	;# 
   133                           
   134                           ;INT_Interrupt_Demo.c: 19: OSCCON = 0x70;
   135  0012  3070               	movlw	112
   136  0013  1683               	bsf	3,5	;RP0=1, select bank1
   137  0014  1303               	bcf	3,6	;RP1=0, select bank1
   138  0015  0088               	movwf	8	;volatile
   139                           
   140                           ;INT_Interrupt_Demo.c: 20: OPTION_REG = 0;
   141  0016  0181               	clrf	1	;volatile
   142                           
   143                           ;INT_Interrupt_Demo.c: 22: PR2 = 249;
   144  0017  30F9               	movlw	249
   145  0018  0091               	movwf	17	;volatile
   146                           
   147                           ;INT_Interrupt_Demo.c: 23: TMR2IF = 0;
   148  0019  1283               	bcf	3,5	;RP0=0, select bank0
   149  001A  108C               	bcf	12,1	;volatile
   150                           
   151                           ;INT_Interrupt_Demo.c: 24: TMR2IE = 1;
   152  001B  148D               	bsf	13,1	;volatile
   153                           
   154                           ;INT_Interrupt_Demo.c: 26: T2CON = 0B00000101;
   155  001C  3005               	movlw	5
   156  001D  0092               	movwf	18	;volatile
   157                           
   158                           ;INT_Interrupt_Demo.c: 29: WPUA = 0B00100001;
   159  001E  3021               	movlw	33
   160  001F  0087               	movwf	7	;volatile
   161                           
   162                           ;INT_Interrupt_Demo.c: 30: TRISA = 0B00100001;
   163  0020  1683               	bsf	3,5	;RP0=1, select bank1
   164  0021  0085               	movwf	5	;volatile
   165                           
   166                           ;INT_Interrupt_Demo.c: 31: INTEDG = 0;
   167  0022  1301               	bcf	1,6	;volatile
   168                           
   169                           ;INT_Interrupt_Demo.c: 33: INTCON = 0xD0;
   170  0023  30D0               	movlw	208
   171  0024  008B               	movwf	11	;volatile
   172  0025                     l747:	
   173                           ;INT_Interrupt_Demo.c: 36: while(1)
   174                           
   175  0025  0064               	clrwdt	;# 
   176  0026  2825               	goto	l747
   177  0027                     __end_of_main:	
   178                           
   179                           	psect	text1
   180  0027                     __ptext1:	
   181 ;; *************** function _INT_Isr *****************
   182 ;; Defined at:
   183 ;;		line 51 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB开发包_2\SC8F289XB_DEMO_C\SC8F289XB_
      +INT_Demo\INT_Interrupt_Demo.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 300/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   197 ;;      Params:         0       0       0       0
   198 ;;      Locals:         0       0       0       0
   199 ;;      Temps:          2       0       0       0
   200 ;;      Totals:         2       0       0       0
   201 ;;Total ram usage:        2 bytes
   202 ;; Hardware stack levels used:    1
   203 ;; This function calls:
   204 ;;		Nothing
   205 ;; This function is called by:
   206 ;;		Interrupt level 1
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           
   211                           ;psect for function _INT_Isr
   212  0027                     _INT_Isr:	
   213                           
   214                           ;INT_Interrupt_Demo.c: 53: if(INTF)
   215  0027  1C8B               	btfss	11,1	;volatile
   216  0028  282E               	goto	i1l1161
   217                           
   218                           ;INT_Interrupt_Demo.c: 54: {
   219                           ;INT_Interrupt_Demo.c: 55: INTF = 0;
   220  0029  108B               	bcf	11,1	;volatile
   221                           
   222                           ;INT_Interrupt_Demo.c: 56: RA2 = !RA2;
   223  002A  3004               	movlw	4
   224  002B  1283               	bcf	3,5	;RP0=0, select bank0
   225  002C  1303               	bcf	3,6	;RP1=0, select bank0
   226  002D  0685               	xorwf	5,f
   227  002E                     i1l1161:	
   228                           
   229                           ;INT_Interrupt_Demo.c: 57: }
   230                           ;INT_Interrupt_Demo.c: 58: if(TMR2IF)
   231  002E  1283               	bcf	3,5	;RP0=0, select bank0
   232  002F  1303               	bcf	3,6	;RP1=0, select bank0
   233  0030  1C8C               	btfss	12,1	;volatile
   234  0031  2835               	goto	i1l757
   235                           
   236                           ;INT_Interrupt_Demo.c: 59: {
   237                           ;INT_Interrupt_Demo.c: 60: TMR2IF = 0;
   238  0032  108C               	bcf	12,1	;volatile
   239                           
   240                           ;INT_Interrupt_Demo.c: 62: PORTA ^= 0X02;
   241  0033  3002               	movlw	2
   242  0034  0685               	xorwf	5,f	;volatile
   243  0035                     i1l757:	
   244  0035  0871               	movf	??_INT_Isr+1,w
   245  0036  008A               	movwf	10
   246  0037  0E70               	swapf	??_INT_Isr^(0+-128),w
   247  0038  0083               	movwf	3
   248  0039  0EFE               	swapf	126,f
   249  003A  0E7E               	swapf	126,w
   250  003B  0009               	retfie
   251  003C                     __end_of_INT_Isr:	
   252  007E                     btemp	set	126	;btemp
   253  007E                     wtemp0	set	126
   254                           
   255                           	psect	intentry
   256  0004                     __pintentry:	
   257                           ;incstack = 0
   258                           ; Regs used in _INT_Isr: [wreg+status,2+status,0]
   259                           
   260  0004                     interrupt_function:	
   261  007E                     saved_w	set	btemp
   262  0004  00FE               	movwf	btemp
   263  0005  0E03               	swapf	3,w
   264  0006  00F0               	movwf	??_INT_Isr
   265  0007  080A               	movf	10,w
   266  0008  00F1               	movwf	??_INT_Isr+1
   267  0009  118A  2827         	ljmp	_INT_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _INT_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _INT_Isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _INT_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 29 16:12:31 2022

                    l747 0025                      _RA2 002A                      _PR2 0091  
                   _INTF 0059          __end_of_INT_Isr 003C                     _WPUA 0007  
                   _main 0010                     btemp 007E                     start 000B  
                  ?_main 0070                    _T2CON 0012                    i1l757 0035  
                  _PORTA 0005                    _TRISA 0085                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 0027                   ??_main 0072                ??_INT_Isr 0070  
                 i1l1161 002E                   _INTEDG 040E                   _INTCON 000B  
                 _OSCCON 0088                   _TMR2IE 0069                   _TMR2IF 0061  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0070  
             __pmaintext 0010               __pintentry 0004                  _INT_Isr 0027  
                __ptext0 0000                  __ptext1 0027     end_of_initialization 000D  
    start_initialization 000D                ___latbits 0001                 ?_INT_Isr 0070  
      interrupt_function 0004         __size_of_INT_Isr 0015            __size_of_main 0017  
               intlevel1 0000               _OPTION_REG 0081  
