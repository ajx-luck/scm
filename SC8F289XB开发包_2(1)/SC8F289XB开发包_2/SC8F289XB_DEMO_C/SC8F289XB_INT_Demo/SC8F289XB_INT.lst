---- H:\MyDownloads\说明书&测试报告\开发包\SC8F289XB开发包\SC8F289XB开发包_2\SC8F289XB_DEMO_C\SC8F289XB_INT_Demo\INT_Interrupt_Demo.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                功能：INT外部中断演示
3:                版本：V1.0
4:                日期：2021.01.05 
5:                
6:                *本程序由 中微半导体 &应用支持部& 编写整理
7:                *公司网址 www.mcu.com.cn
8:                
9:                -------------------------------------------*/
10:               
11:               #include <sc.h>
12:               
13:               
14:               void main()
15:               {
16:               	asm("nop");
17:               	asm("clrwdt");
18:               	
19:               	OSCCON = 0x70;			//内部振荡器用作系统时钟
  0012    3070    LDIA	0x70
  0013    1683    SETB	0x3,5
  0014    1303    CLRB	0x3,6
  0015    0088    LD	0x8,A
20:               	OPTION_REG = 0;			//预分频寄存器设置，bit6为触发中断的边沿选择位		
  0016    0181    CLR	0x1
21:               	
22:               	PR2 = 249;					//设定Timer初始值,500uS中断
  0017    30F9    LDIA	0xF9
  0018    0091    LD	0x11,A
23:               	TMR2IF = 0;
  0019    1283    CLRB	0x3,5
  001A    108C    CLRB	0xC,1
24:               	TMR2IE = 1;					//使能Timer2溢出中断
  001B    148D    SETB	0xD,1
25:               	
26:               	T2CON = 0B00000101;			//开启Timer2，预分频为1：4，后分频为1：1，则定时时间为（249+1）*4*（4/8M）=500us
  001C    3005    LDIA	0x5
  001D    0092    LD	0x12,A
27:               	
28:               //---------------------------------------	
29:               	WPUA = 0B00100001;		//使能上拉，使RA5为高
  001E    3021    LDIA	0x21
  001F    0087    LD	0x7,A
30:               	TRISA = 0B00100001;		//设置RA0的IO口为输入
  0020    1683    SETB	0x3,5
  0021    0085    LD	0x5,A
31:               	INTEDG = 0;				//INT引脚下降沿触发,该设置位在OPTION，注意修改OPTION不要改变这个设置位
  0022    1301    CLRB	0x1,6
32:               							//INTEDG = 1为INT引脚上升沿触发
33:               	INTCON = 0xD0;			//允许所有未被屏蔽的中断，允许外设中断，使能INT外部中断
  0023    30D0    LDIA	0xD0
  0024    008B    LD	0xB,A
34:               //---------------------------------------		
35:               
36:               	while(1)			
  0025    0064    CLRWDT
  0026    2825    JP	0x25
37:               	{
38:               		asm("clrwdt");
39:               		
40:               	}
41:               }
42:               
43:               
44:               /***********************************************
45:               函数名称：INT_Isr
46:               函数功能：INT中断服务
47:               入口参数：无
48:               出口参数：无
49:               备注：
50:               ************************************************/
51:               void interrupt INT_Isr()
52:               {
53:               	if(INTF)
  0027    1C8B    SNZB	0xB,1
  0028    282E    JP	0x2E
54:               	{
55:               		INTF = 0;			//清中断标志
  0029    108B    CLRB	0xB,1
56:               		RA2 = !RA2;
  002A    3004    LDIA	0x4
  002B    1283    CLRB	0x3,5
  002C    1303    CLRB	0x3,6
  002D    0685    XORR	0x5
57:               	}
58:               	if(TMR2IF)
  002E    1283    CLRB	0x3,5
  002F    1303    CLRB	0x3,6
  0030    1C8C    SNZB	0xC,1
  0031    2835    JP	0x35
59:               	{
60:               		TMR2IF = 0;
  0032    108C    CLRB	0xC,1
61:               		
62:               		PORTA ^= 0X02;
  0033    3002    LDIA	0x2
  0034    0685    XORR	0x5
  0035    0871    LD	A,0x71
  0036    008A    LD	0xA,A
  0037    0E70    SWAPA	0x70
  0038    0083    LD	0x3,A
  0039    0EFE    SWAPR	0x7E
  003A    0E7E    SWAPA	0x7E
  003B    0009    RETI
63:               	}
64:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    280B    JP	0xB
  000B    118A    CLRB	0xA,3
  000C    280D    JP	0xD
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    080A    LD	A,0xA
  0008    00F1    LD	0x71,A
  0009    118A    CLRB	0xA,3
  000A    2827    JP	0x27
---- common_function ------------------------------------------------------------------
  000D    0183    CLR	0x3
  000E    118A    CLRB	0xA,3
  000F    2810    JP	0x10
  0010    0000    NOP
  0011    0064    CLRWDT
