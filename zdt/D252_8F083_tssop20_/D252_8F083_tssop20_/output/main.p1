Version 3.2 HI-TECH Software Intermediate Code
[v F758 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF758 ~T0 @X0 0 e ]
[p i __delay ]
"72 C:\mcuproject\scm\zdt\D252_8F083_tssop20_\D252_8F083_tssop20_\main.c
[v _pwm1Stop `(v ~T0 @X0 0 ef ]
"63
[v _showNumBat `uc ~T0 @X0 0 e ]
"60
[v _showNumAShi `uc ~T0 @X0 0 e ]
"61
[v _showNumAge `uc ~T0 @X0 0 e ]
"62
[v _showNumBShi `uc ~T0 @X0 0 e ]
"73
[v _pwm1Init `(v ~T0 @X0 0 ef ]
[p mainexit ]
"33 C:\mcuproject\scm\zdt\D252_8F083_tssop20_\D252_8F083_tssop20_\number.h
[v _refreshLed `(v ~T0 @X0 0 ef ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc8f083.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;sc8f083.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;sc8f083.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;sc8f083.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;sc8f083.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;sc8f083.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;sc8f083.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;sc8f083.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;sc8f083.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;sc8f083.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;sc8f083.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;sc8f083.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;sc8f083.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;sc8f083.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;sc8f083.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;sc8f083.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMP1CON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;sc8f083.h: 20: volatile unsigned char CMP1CON0 @ 0x0F;
"21
[v _CMP1CON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;sc8f083.h: 21: volatile unsigned char CMP1CON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;sc8f083.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;sc8f083.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;sc8f083.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;sc8f083.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;sc8f083.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;sc8f083.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;sc8f083.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;sc8f083.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;sc8f083.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;sc8f083.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;sc8f083.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;sc8f083.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;sc8f083.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;sc8f083.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;sc8f083.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;sc8f083.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;sc8f083.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;sc8f083.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;sc8f083.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;sc8f083.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;sc8f083.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;sc8f083.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _EECON1 `Vuc ~T0 @X0 1 e@141 ]
[; ;sc8f083.h: 44: volatile unsigned char EECON1 @ 0x8D;
"45
[v _EECON2 `Vuc ~T0 @X0 1 e@142 ]
[; ;sc8f083.h: 45: volatile unsigned char EECON2 @ 0x8E;
"46
[v _EEDAT `Vuc ~T0 @X0 1 e@143 ]
[; ;sc8f083.h: 46: volatile unsigned char EEDAT @ 0x8F;
"47
[v _EEDATH `Vuc ~T0 @X0 1 e@144 ]
[; ;sc8f083.h: 47: volatile unsigned char EEDATH @ 0x90;
"48
[v _EEADR `Vuc ~T0 @X0 1 e@145 ]
[; ;sc8f083.h: 48: volatile unsigned char EEADR @ 0x91;
"49
[v _EEADRH `Vuc ~T0 @X0 1 e@146 ]
[; ;sc8f083.h: 49: volatile unsigned char EEADRH @ 0x92;
"50
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;sc8f083.h: 50: volatile unsigned char ANSEL0 @ 0x93;
"51
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;sc8f083.h: 51: volatile unsigned char ANSEL1 @ 0x94;
"52
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;sc8f083.h: 52: volatile unsigned char ADCON0 @ 0x95;
"53
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;sc8f083.h: 53: volatile unsigned char ADCON1 @ 0x96;
"54
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;sc8f083.h: 54: volatile unsigned char ADRESL @ 0x98;
"55
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;sc8f083.h: 55: volatile unsigned char ADRESH @ 0x99;
"56
[v _CMP2CON0 `Vuc ~T0 @X0 1 e@154 ]
[; ;sc8f083.h: 56: volatile unsigned char CMP2CON0 @ 0x9A;
"57
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;sc8f083.h: 57: volatile unsigned char PWMD2L @ 0x9B;
"58
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;sc8f083.h: 58: volatile unsigned char PWMD3L @ 0x9C;
"59
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;sc8f083.h: 59: volatile unsigned char PWM23DT @ 0x9D;
"60
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;sc8f083.h: 60: volatile unsigned char PWMD23H @ 0x9E;
"61
[v _CMP2CON1 `Vuc ~T0 @X0 1 e@159 ]
[; ;sc8f083.h: 61: volatile unsigned char CMP2CON1 @ 0x9F;
"62
[v _TRISC `Vuc ~T0 @X0 1 e@261 ]
[; ;sc8f083.h: 62: volatile unsigned char TRISC @ 0x105;
"63
[v _PORTC `Vuc ~T0 @X0 1 e@262 ]
[; ;sc8f083.h: 63: volatile unsigned char PORTC @ 0x106;
"64
[v _WPUC `Vuc ~T0 @X0 1 e@264 ]
[; ;sc8f083.h: 64: volatile unsigned char WPUC @ 0x108;
"65
[v _ANSEL2 `Vuc ~T0 @X0 1 e@265 ]
[; ;sc8f083.h: 65: volatile unsigned char ANSEL2 @ 0x109;
"66
[v _TMR1L `Vuc ~T0 @X0 1 e@268 ]
[; ;sc8f083.h: 66: volatile unsigned char TMR1L @ 0x10C;
"67
[v _TMR1H `Vuc ~T0 @X0 1 e@269 ]
[; ;sc8f083.h: 67: volatile unsigned char TMR1H @ 0x10D;
"68
[v _T1CON `Vuc ~T0 @X0 1 e@270 ]
[; ;sc8f083.h: 68: volatile unsigned char T1CON @ 0x10E;
"69
[v _PIR2 `Vuc ~T0 @X0 1 e@271 ]
[; ;sc8f083.h: 69: volatile unsigned char PIR2 @ 0x10F;
"70
[v _PIE2 `Vuc ~T0 @X0 1 e@272 ]
[; ;sc8f083.h: 70: volatile unsigned char PIE2 @ 0x110;
"71
[v _KEYCON0 `Vuc ~T0 @X0 1 e@273 ]
[; ;sc8f083.h: 71: volatile unsigned char KEYCON0 @ 0x111;
"72
[v _KEYCON1 `Vuc ~T0 @X0 1 e@274 ]
[; ;sc8f083.h: 72: volatile unsigned char KEYCON1 @ 0x112;
"73
[v _KEYCON2 `Vuc ~T0 @X0 1 e@275 ]
[; ;sc8f083.h: 73: volatile unsigned char KEYCON2 @ 0x113;
"74
[v _KEYDATAL `Vuc ~T0 @X0 1 e@278 ]
[; ;sc8f083.h: 74: volatile unsigned char KEYDATAL @ 0x116;
"75
[v _KEYDATAH `Vuc ~T0 @X0 1 e@279 ]
[; ;sc8f083.h: 75: volatile unsigned char KEYDATAH @ 0x117;
"76
[v _TXSTA `Vuc ~T0 @X0 1 e@280 ]
[; ;sc8f083.h: 76: volatile unsigned char TXSTA @ 0x118;
"77
[v _RCSTA `Vuc ~T0 @X0 1 e@281 ]
[; ;sc8f083.h: 77: volatile unsigned char RCSTA @ 0x119;
"78
[v _SPBRG `Vuc ~T0 @X0 1 e@282 ]
[; ;sc8f083.h: 78: volatile unsigned char SPBRG @ 0x11A;
"79
[v _TXREG `Vuc ~T0 @X0 1 e@283 ]
[; ;sc8f083.h: 79: volatile unsigned char TXREG @ 0x11B;
"80
[v _RCREG `Vuc ~T0 @X0 1 e@284 ]
[; ;sc8f083.h: 80: volatile unsigned char RCREG @ 0x11C;
"82
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;sc8f083.h: 82: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"83
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;sc8f083.h: 83: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"84
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;sc8f083.h: 84: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"85
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;sc8f083.h: 85: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"86
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;sc8f083.h: 86: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"87
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;sc8f083.h: 87: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"88
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;sc8f083.h: 88: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"89
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;sc8f083.h: 89: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"92
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;sc8f083.h: 92: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"93
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;sc8f083.h: 93: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"94
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;sc8f083.h: 94: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"95
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;sc8f083.h: 95: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"96
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;sc8f083.h: 96: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"97
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;sc8f083.h: 97: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"98
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;sc8f083.h: 98: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"99
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;sc8f083.h: 99: volatile bit C @ ((unsigned)&STATUS*8)+0;
"102
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;sc8f083.h: 102: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"103
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;sc8f083.h: 103: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"104
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;sc8f083.h: 104: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"105
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;sc8f083.h: 105: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"106
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;sc8f083.h: 106: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"107
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;sc8f083.h: 107: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"108
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;sc8f083.h: 108: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"109
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;sc8f083.h: 109: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"112
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;sc8f083.h: 112: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"113
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;sc8f083.h: 113: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"114
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;sc8f083.h: 114: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"115
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;sc8f083.h: 115: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"116
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;sc8f083.h: 116: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"117
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;sc8f083.h: 117: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"118
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;sc8f083.h: 118: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"119
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;sc8f083.h: 119: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"122
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;sc8f083.h: 122: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"123
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;sc8f083.h: 123: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"124
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;sc8f083.h: 124: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"125
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;sc8f083.h: 125: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"126
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;sc8f083.h: 126: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"127
[v _WPDB2 `Vb ~T0 @X0 1 e@58 ]
[; ;sc8f083.h: 127: volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
"128
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;sc8f083.h: 128: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"129
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;sc8f083.h: 129: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"132
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;sc8f083.h: 132: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"133
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;sc8f083.h: 133: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"134
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;sc8f083.h: 134: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"135
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;sc8f083.h: 135: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"136
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;sc8f083.h: 136: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"137
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;sc8f083.h: 137: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"138
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;sc8f083.h: 138: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"139
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;sc8f083.h: 139: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"142
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;sc8f083.h: 142: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"143
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;sc8f083.h: 143: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"144
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;sc8f083.h: 144: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"145
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;sc8f083.h: 145: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"146
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;sc8f083.h: 146: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"147
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;sc8f083.h: 147: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"148
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;sc8f083.h: 148: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"149
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;sc8f083.h: 149: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"152
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;sc8f083.h: 152: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"153
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;sc8f083.h: 153: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"154
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;sc8f083.h: 154: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"155
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;sc8f083.h: 155: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"156
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;sc8f083.h: 156: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"157
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;sc8f083.h: 157: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"158
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;sc8f083.h: 158: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"159
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;sc8f083.h: 159: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"162
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;sc8f083.h: 162: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"163
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;sc8f083.h: 163: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"164
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;sc8f083.h: 164: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"165
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;sc8f083.h: 165: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"166
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;sc8f083.h: 166: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"167
[v _ODCONB2 `Vb ~T0 @X0 1 e@98 ]
[; ;sc8f083.h: 167: volatile bit ODCONB2 @ ((unsigned)&ODCONB*8)+2;
"168
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;sc8f083.h: 168: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"169
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;sc8f083.h: 169: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"172
[v _RCIF `Vb ~T0 @X0 1 e@111 ]
[; ;sc8f083.h: 172: volatile bit RCIF @ ((unsigned)&PIR1*8)+7;
"173
[v _TXIF `Vb ~T0 @X0 1 e@110 ]
[; ;sc8f083.h: 173: volatile bit TXIF @ ((unsigned)&PIR1*8)+6;
"174
[v _CMP1IF `Vb ~T0 @X0 1 e@109 ]
[; ;sc8f083.h: 174: volatile bit CMP1IF @ ((unsigned)&PIR1*8)+5;
"175
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;sc8f083.h: 175: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"176
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;sc8f083.h: 176: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"177
[v _TMR1IF `Vb ~T0 @X0 1 e@106 ]
[; ;sc8f083.h: 177: volatile bit TMR1IF @ ((unsigned)&PIR1*8)+2;
"178
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;sc8f083.h: 178: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"179
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;sc8f083.h: 179: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"182
[v _RCIE `Vb ~T0 @X0 1 e@119 ]
[; ;sc8f083.h: 182: volatile bit RCIE @ ((unsigned)&PIE1*8)+7;
"183
[v _TXIE `Vb ~T0 @X0 1 e@118 ]
[; ;sc8f083.h: 183: volatile bit TXIE @ ((unsigned)&PIE1*8)+6;
"184
[v _CMP1IE `Vb ~T0 @X0 1 e@117 ]
[; ;sc8f083.h: 184: volatile bit CMP1IE @ ((unsigned)&PIE1*8)+5;
"185
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;sc8f083.h: 185: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"186
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;sc8f083.h: 186: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"187
[v _TMR1IE `Vb ~T0 @X0 1 e@114 ]
[; ;sc8f083.h: 187: volatile bit TMR1IE @ ((unsigned)&PIE1*8)+2;
"188
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;sc8f083.h: 188: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"189
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;sc8f083.h: 189: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"192
[v _CMP1EN `Vb ~T0 @X0 1 e@127 ]
[; ;sc8f083.h: 192: volatile bit CMP1EN @ ((unsigned)&CMP1CON0*8)+7;
"193
[v _CMP1PS `Vb ~T0 @X0 1 e@126 ]
[; ;sc8f083.h: 193: volatile bit CMP1PS @ ((unsigned)&CMP1CON0*8)+6;
"194
[v _CMP1NS2 `Vb ~T0 @X0 1 e@125 ]
[; ;sc8f083.h: 194: volatile bit CMP1NS2 @ ((unsigned)&CMP1CON0*8)+5;
"195
[v _CMP1NS1 `Vb ~T0 @X0 1 e@124 ]
[; ;sc8f083.h: 195: volatile bit CMP1NS1 @ ((unsigned)&CMP1CON0*8)+4;
"196
[v _CMP1NS0 `Vb ~T0 @X0 1 e@123 ]
[; ;sc8f083.h: 196: volatile bit CMP1NS0 @ ((unsigned)&CMP1CON0*8)+3;
"197
[v _CMP1NV `Vb ~T0 @X0 1 e@122 ]
[; ;sc8f083.h: 197: volatile bit CMP1NV @ ((unsigned)&CMP1CON0*8)+2;
"198
[v _CMP1OUT `Vb ~T0 @X0 1 e@121 ]
[; ;sc8f083.h: 198: volatile bit CMP1OUT @ ((unsigned)&CMP1CON0*8)+1;
"199
[v _CMP1OEN `Vb ~T0 @X0 1 e@120 ]
[; ;sc8f083.h: 199: volatile bit CMP1OEN @ ((unsigned)&CMP1CON0*8)+0;
"202
[v _CMP1IM `Vb ~T0 @X0 1 e@135 ]
[; ;sc8f083.h: 202: volatile bit CMP1IM @ ((unsigned)&CMP1CON1*8)+7;
"203
[v _AN1_EN `Vb ~T0 @X0 1 e@134 ]
[; ;sc8f083.h: 203: volatile bit AN1_EN @ ((unsigned)&CMP1CON1*8)+6;
"204
[v _RBIAS1_H `Vb ~T0 @X0 1 e@133 ]
[; ;sc8f083.h: 204: volatile bit RBIAS1_H @ ((unsigned)&CMP1CON1*8)+5;
"205
[v _RBIAS1_L `Vb ~T0 @X0 1 e@132 ]
[; ;sc8f083.h: 205: volatile bit RBIAS1_L @ ((unsigned)&CMP1CON1*8)+4;
"206
[v _LVDS13 `Vb ~T0 @X0 1 e@131 ]
[; ;sc8f083.h: 206: volatile bit LVDS13 @ ((unsigned)&CMP1CON1*8)+3;
"207
[v _LVDS12 `Vb ~T0 @X0 1 e@130 ]
[; ;sc8f083.h: 207: volatile bit LVDS12 @ ((unsigned)&CMP1CON1*8)+2;
"208
[v _LVDS11 `Vb ~T0 @X0 1 e@129 ]
[; ;sc8f083.h: 208: volatile bit LVDS11 @ ((unsigned)&CMP1CON1*8)+1;
"209
[v _LVDS10 `Vb ~T0 @X0 1 e@128 ]
[; ;sc8f083.h: 209: volatile bit LVDS10 @ ((unsigned)&CMP1CON1*8)+0;
"212
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;sc8f083.h: 212: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"213
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;sc8f083.h: 213: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"214
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;sc8f083.h: 214: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"215
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;sc8f083.h: 215: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"216
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;sc8f083.h: 216: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"217
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;sc8f083.h: 217: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"218
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;sc8f083.h: 218: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"219
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;sc8f083.h: 219: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"222
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;sc8f083.h: 222: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"223
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;sc8f083.h: 223: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"224
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;sc8f083.h: 224: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"225
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;sc8f083.h: 225: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"228
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;sc8f083.h: 228: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"229
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;sc8f083.h: 229: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"230
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;sc8f083.h: 230: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"231
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;sc8f083.h: 231: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"232
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;sc8f083.h: 232: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"233
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;sc8f083.h: 233: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"234
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;sc8f083.h: 234: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"235
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;sc8f083.h: 235: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"238
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;sc8f083.h: 238: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"239
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;sc8f083.h: 239: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"240
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;sc8f083.h: 240: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"241
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;sc8f083.h: 241: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"242
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;sc8f083.h: 242: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"243
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;sc8f083.h: 243: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"246
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;sc8f083.h: 246: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"247
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;sc8f083.h: 247: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"248
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;sc8f083.h: 248: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"249
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;sc8f083.h: 249: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"250
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;sc8f083.h: 250: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"251
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;sc8f083.h: 251: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"254
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;sc8f083.h: 254: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"255
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;sc8f083.h: 255: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"256
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;sc8f083.h: 256: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"257
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;sc8f083.h: 257: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"258
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;sc8f083.h: 258: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"261
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;sc8f083.h: 261: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"262
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;sc8f083.h: 262: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"263
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;sc8f083.h: 263: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"264
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;sc8f083.h: 264: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"267
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;sc8f083.h: 267: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"268
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;sc8f083.h: 268: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"269
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;sc8f083.h: 269: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"270
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;sc8f083.h: 270: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"271
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;sc8f083.h: 271: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"272
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;sc8f083.h: 272: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"275
[v _TRISA7 `Vb ~T0 @X0 1 e@1071 ]
[; ;sc8f083.h: 275: volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
"276
[v _TRISA6 `Vb ~T0 @X0 1 e@1070 ]
[; ;sc8f083.h: 276: volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
"277
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;sc8f083.h: 277: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"278
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;sc8f083.h: 278: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"279
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;sc8f083.h: 279: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"280
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;sc8f083.h: 280: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"281
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;sc8f083.h: 281: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"282
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;sc8f083.h: 282: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"285
[v _RA7 `Vb ~T0 @X0 1 e@1079 ]
[; ;sc8f083.h: 285: volatile bit RA7 @ ((unsigned)&PORTA*8)+7;
"286
[v _RA6 `Vb ~T0 @X0 1 e@1078 ]
[; ;sc8f083.h: 286: volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
"287
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;sc8f083.h: 287: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"288
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;sc8f083.h: 288: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"289
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;sc8f083.h: 289: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"290
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;sc8f083.h: 290: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"291
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;sc8f083.h: 291: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"292
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;sc8f083.h: 292: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"295
[v _WPDA7 `Vb ~T0 @X0 1 e@1087 ]
[; ;sc8f083.h: 295: volatile bit WPDA7 @ ((unsigned)&WPDA*8)+7;
"296
[v _WPDA6 `Vb ~T0 @X0 1 e@1086 ]
[; ;sc8f083.h: 296: volatile bit WPDA6 @ ((unsigned)&WPDA*8)+6;
"297
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;sc8f083.h: 297: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"298
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;sc8f083.h: 298: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"299
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;sc8f083.h: 299: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"300
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;sc8f083.h: 300: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"301
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;sc8f083.h: 301: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"302
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;sc8f083.h: 302: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"305
[v _WPUA7 `Vb ~T0 @X0 1 e@1095 ]
[; ;sc8f083.h: 305: volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;
"306
[v _WPUA6 `Vb ~T0 @X0 1 e@1094 ]
[; ;sc8f083.h: 306: volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
"307
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;sc8f083.h: 307: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"308
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;sc8f083.h: 308: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"309
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;sc8f083.h: 309: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"310
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;sc8f083.h: 310: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"311
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;sc8f083.h: 311: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"312
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;sc8f083.h: 312: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"315
[v _IOCA7 `Vb ~T0 @X0 1 e@1103 ]
[; ;sc8f083.h: 315: volatile bit IOCA7 @ ((unsigned)&IOCA*8)+7;
"316
[v _IOCA6 `Vb ~T0 @X0 1 e@1102 ]
[; ;sc8f083.h: 316: volatile bit IOCA6 @ ((unsigned)&IOCA*8)+6;
"317
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;sc8f083.h: 317: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"318
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;sc8f083.h: 318: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"319
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;sc8f083.h: 319: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"320
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;sc8f083.h: 320: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"321
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;sc8f083.h: 321: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"322
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;sc8f083.h: 322: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"325
[v _ODCONA7 `Vb ~T0 @X0 1 e@1127 ]
[; ;sc8f083.h: 325: volatile bit ODCONA7 @ ((unsigned)&ODCONA*8)+7;
"326
[v _ODCONA6 `Vb ~T0 @X0 1 e@1126 ]
[; ;sc8f083.h: 326: volatile bit ODCONA6 @ ((unsigned)&ODCONA*8)+6;
"327
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;sc8f083.h: 327: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"328
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;sc8f083.h: 328: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"329
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;sc8f083.h: 329: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"330
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;sc8f083.h: 330: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"331
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;sc8f083.h: 331: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"332
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;sc8f083.h: 332: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"335
[v _EEPGD `Vb ~T0 @X0 1 e@1135 ]
[; ;sc8f083.h: 335: volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
"336
[v _WRERR `Vb ~T0 @X0 1 e@1131 ]
[; ;sc8f083.h: 336: volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
"337
[v _WREN `Vb ~T0 @X0 1 e@1130 ]
[; ;sc8f083.h: 337: volatile bit WREN @ ((unsigned)&EECON1*8)+2;
"338
[v _WR `Vb ~T0 @X0 1 e@1129 ]
[; ;sc8f083.h: 338: volatile bit WR @ ((unsigned)&EECON1*8)+1;
"339
[v _RD `Vb ~T0 @X0 1 e@1128 ]
[; ;sc8f083.h: 339: volatile bit RD @ ((unsigned)&EECON1*8)+0;
"342
[v _EEDAT7 `Vb ~T0 @X0 1 e@1151 ]
[; ;sc8f083.h: 342: volatile bit EEDAT7 @ ((unsigned)&EEDAT*8)+7;
"343
[v _EEDAT6 `Vb ~T0 @X0 1 e@1150 ]
[; ;sc8f083.h: 343: volatile bit EEDAT6 @ ((unsigned)&EEDAT*8)+6;
"344
[v _EEDAT5 `Vb ~T0 @X0 1 e@1149 ]
[; ;sc8f083.h: 344: volatile bit EEDAT5 @ ((unsigned)&EEDAT*8)+5;
"345
[v _EEDAT4 `Vb ~T0 @X0 1 e@1148 ]
[; ;sc8f083.h: 345: volatile bit EEDAT4 @ ((unsigned)&EEDAT*8)+4;
"346
[v _EEDAT3 `Vb ~T0 @X0 1 e@1147 ]
[; ;sc8f083.h: 346: volatile bit EEDAT3 @ ((unsigned)&EEDAT*8)+3;
"347
[v _EEDAT2 `Vb ~T0 @X0 1 e@1146 ]
[; ;sc8f083.h: 347: volatile bit EEDAT2 @ ((unsigned)&EEDAT*8)+2;
"348
[v _EEDAT1 `Vb ~T0 @X0 1 e@1145 ]
[; ;sc8f083.h: 348: volatile bit EEDAT1 @ ((unsigned)&EEDAT*8)+1;
"349
[v _EEDAT0 `Vb ~T0 @X0 1 e@1144 ]
[; ;sc8f083.h: 349: volatile bit EEDAT0 @ ((unsigned)&EEDAT*8)+0;
"352
[v _EEDATH7 `Vb ~T0 @X0 1 e@1159 ]
[; ;sc8f083.h: 352: volatile bit EEDATH7 @ ((unsigned)&EEDATH*8)+7;
"353
[v _EEDATH6 `Vb ~T0 @X0 1 e@1158 ]
[; ;sc8f083.h: 353: volatile bit EEDATH6 @ ((unsigned)&EEDATH*8)+6;
"354
[v _EEDATH5 `Vb ~T0 @X0 1 e@1157 ]
[; ;sc8f083.h: 354: volatile bit EEDATH5 @ ((unsigned)&EEDATH*8)+5;
"355
[v _EEDATH4 `Vb ~T0 @X0 1 e@1156 ]
[; ;sc8f083.h: 355: volatile bit EEDATH4 @ ((unsigned)&EEDATH*8)+4;
"356
[v _EEDATH3 `Vb ~T0 @X0 1 e@1155 ]
[; ;sc8f083.h: 356: volatile bit EEDATH3 @ ((unsigned)&EEDATH*8)+3;
"357
[v _EEDATH2 `Vb ~T0 @X0 1 e@1154 ]
[; ;sc8f083.h: 357: volatile bit EEDATH2 @ ((unsigned)&EEDATH*8)+2;
"358
[v _EEDATH1 `Vb ~T0 @X0 1 e@1153 ]
[; ;sc8f083.h: 358: volatile bit EEDATH1 @ ((unsigned)&EEDATH*8)+1;
"359
[v _EEDATH0 `Vb ~T0 @X0 1 e@1152 ]
[; ;sc8f083.h: 359: volatile bit EEDATH0 @ ((unsigned)&EEDATH*8)+0;
"362
[v _EEADR7 `Vb ~T0 @X0 1 e@1167 ]
[; ;sc8f083.h: 362: volatile bit EEADR7 @ ((unsigned)&EEADR*8)+7;
"363
[v _EEADR6 `Vb ~T0 @X0 1 e@1166 ]
[; ;sc8f083.h: 363: volatile bit EEADR6 @ ((unsigned)&EEADR*8)+6;
"364
[v _EEADR5 `Vb ~T0 @X0 1 e@1165 ]
[; ;sc8f083.h: 364: volatile bit EEADR5 @ ((unsigned)&EEADR*8)+5;
"365
[v _EEADR4 `Vb ~T0 @X0 1 e@1164 ]
[; ;sc8f083.h: 365: volatile bit EEADR4 @ ((unsigned)&EEADR*8)+4;
"366
[v _EEADR3 `Vb ~T0 @X0 1 e@1163 ]
[; ;sc8f083.h: 366: volatile bit EEADR3 @ ((unsigned)&EEADR*8)+3;
"367
[v _EEADR2 `Vb ~T0 @X0 1 e@1162 ]
[; ;sc8f083.h: 367: volatile bit EEADR2 @ ((unsigned)&EEADR*8)+2;
"368
[v _EEADR1 `Vb ~T0 @X0 1 e@1161 ]
[; ;sc8f083.h: 368: volatile bit EEADR1 @ ((unsigned)&EEADR*8)+1;
"369
[v _EEADR0 `Vb ~T0 @X0 1 e@1160 ]
[; ;sc8f083.h: 369: volatile bit EEADR0 @ ((unsigned)&EEADR*8)+0;
"372
[v _EEADRH3 `Vb ~T0 @X0 1 e@1171 ]
[; ;sc8f083.h: 372: volatile bit EEADRH3 @ ((unsigned)&EEADRH*8)+3;
"373
[v _EEADRH2 `Vb ~T0 @X0 1 e@1170 ]
[; ;sc8f083.h: 373: volatile bit EEADRH2 @ ((unsigned)&EEADRH*8)+2;
"374
[v _EEADRH1 `Vb ~T0 @X0 1 e@1169 ]
[; ;sc8f083.h: 374: volatile bit EEADRH1 @ ((unsigned)&EEADRH*8)+1;
"375
[v _EEADRH0 `Vb ~T0 @X0 1 e@1168 ]
[; ;sc8f083.h: 375: volatile bit EEADRH0 @ ((unsigned)&EEADRH*8)+0;
"378
[v _ANS7 `Vb ~T0 @X0 1 e@1183 ]
[; ;sc8f083.h: 378: volatile bit ANS7 @ ((unsigned)&ANSEL0*8)+7;
"379
[v _ANS6 `Vb ~T0 @X0 1 e@1182 ]
[; ;sc8f083.h: 379: volatile bit ANS6 @ ((unsigned)&ANSEL0*8)+6;
"380
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;sc8f083.h: 380: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"381
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;sc8f083.h: 381: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"382
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;sc8f083.h: 382: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"383
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;sc8f083.h: 383: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"384
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;sc8f083.h: 384: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"385
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;sc8f083.h: 385: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"388
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;sc8f083.h: 388: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"389
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;sc8f083.h: 389: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"390
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;sc8f083.h: 390: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"391
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;sc8f083.h: 391: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"392
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;sc8f083.h: 392: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"393
[v _ANS10 `Vb ~T0 @X0 1 e@1186 ]
[; ;sc8f083.h: 393: volatile bit ANS10 @ ((unsigned)&ANSEL1*8)+2;
"394
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;sc8f083.h: 394: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"395
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;sc8f083.h: 395: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"398
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;sc8f083.h: 398: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"399
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;sc8f083.h: 399: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"400
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;sc8f083.h: 400: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"401
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;sc8f083.h: 401: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"402
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;sc8f083.h: 402: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"403
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;sc8f083.h: 403: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"404
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;sc8f083.h: 404: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"405
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;sc8f083.h: 405: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"408
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;sc8f083.h: 408: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"409
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;sc8f083.h: 409: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"410
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;sc8f083.h: 410: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"411
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;sc8f083.h: 411: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"412
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;sc8f083.h: 412: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"415
[v _CMP2EN `Vb ~T0 @X0 1 e@1239 ]
[; ;sc8f083.h: 415: volatile bit CMP2EN @ ((unsigned)&CMP2CON0*8)+7;
"416
[v _CMP2PS `Vb ~T0 @X0 1 e@1238 ]
[; ;sc8f083.h: 416: volatile bit CMP2PS @ ((unsigned)&CMP2CON0*8)+6;
"417
[v _CMP2NS2 `Vb ~T0 @X0 1 e@1237 ]
[; ;sc8f083.h: 417: volatile bit CMP2NS2 @ ((unsigned)&CMP2CON0*8)+5;
"418
[v _CMP2NS1 `Vb ~T0 @X0 1 e@1236 ]
[; ;sc8f083.h: 418: volatile bit CMP2NS1 @ ((unsigned)&CMP2CON0*8)+4;
"419
[v _CMP2NS0 `Vb ~T0 @X0 1 e@1235 ]
[; ;sc8f083.h: 419: volatile bit CMP2NS0 @ ((unsigned)&CMP2CON0*8)+3;
"420
[v _CMP2NV `Vb ~T0 @X0 1 e@1234 ]
[; ;sc8f083.h: 420: volatile bit CMP2NV @ ((unsigned)&CMP2CON0*8)+2;
"421
[v _CMP2OUT `Vb ~T0 @X0 1 e@1233 ]
[; ;sc8f083.h: 421: volatile bit CMP2OUT @ ((unsigned)&CMP2CON0*8)+1;
"422
[v _CMP2OEN `Vb ~T0 @X0 1 e@1232 ]
[; ;sc8f083.h: 422: volatile bit CMP2OEN @ ((unsigned)&CMP2CON0*8)+0;
"425
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;sc8f083.h: 425: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"426
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;sc8f083.h: 426: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"427
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;sc8f083.h: 427: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"428
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;sc8f083.h: 428: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
"431
[v _CMP2IM `Vb ~T0 @X0 1 e@1279 ]
[; ;sc8f083.h: 431: volatile bit CMP2IM @ ((unsigned)&CMP2CON1*8)+7;
"432
[v _AN2_EN `Vb ~T0 @X0 1 e@1278 ]
[; ;sc8f083.h: 432: volatile bit AN2_EN @ ((unsigned)&CMP2CON1*8)+6;
"433
[v _RBIAS2_H `Vb ~T0 @X0 1 e@1277 ]
[; ;sc8f083.h: 433: volatile bit RBIAS2_H @ ((unsigned)&CMP2CON1*8)+5;
"434
[v _RBIAS2_L `Vb ~T0 @X0 1 e@1276 ]
[; ;sc8f083.h: 434: volatile bit RBIAS2_L @ ((unsigned)&CMP2CON1*8)+4;
"435
[v _LVDS23 `Vb ~T0 @X0 1 e@1275 ]
[; ;sc8f083.h: 435: volatile bit LVDS23 @ ((unsigned)&CMP2CON1*8)+3;
"436
[v _LVDS22 `Vb ~T0 @X0 1 e@1274 ]
[; ;sc8f083.h: 436: volatile bit LVDS22 @ ((unsigned)&CMP2CON1*8)+2;
"437
[v _LVDS21 `Vb ~T0 @X0 1 e@1273 ]
[; ;sc8f083.h: 437: volatile bit LVDS21 @ ((unsigned)&CMP2CON1*8)+1;
"438
[v _LVDS20 `Vb ~T0 @X0 1 e@1272 ]
[; ;sc8f083.h: 438: volatile bit LVDS20 @ ((unsigned)&CMP2CON1*8)+0;
"441
[v _TRISC1 `Vb ~T0 @X0 1 e@2089 ]
[; ;sc8f083.h: 441: volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
"442
[v _TRISC0 `Vb ~T0 @X0 1 e@2088 ]
[; ;sc8f083.h: 442: volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
"445
[v _RC1 `Vb ~T0 @X0 1 e@2097 ]
[; ;sc8f083.h: 445: volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
"446
[v _RC0 `Vb ~T0 @X0 1 e@2096 ]
[; ;sc8f083.h: 446: volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
"449
[v _WPUC1 `Vb ~T0 @X0 1 e@2113 ]
[; ;sc8f083.h: 449: volatile bit WPUC1 @ ((unsigned)&WPUC*8)+1;
"450
[v _WPUC0 `Vb ~T0 @X0 1 e@2112 ]
[; ;sc8f083.h: 450: volatile bit WPUC0 @ ((unsigned)&WPUC*8)+0;
"453
[v _ANS17 `Vb ~T0 @X0 1 e@2121 ]
[; ;sc8f083.h: 453: volatile bit ANS17 @ ((unsigned)&ANSEL2*8)+1;
"454
[v _ANS16 `Vb ~T0 @X0 1 e@2120 ]
[; ;sc8f083.h: 454: volatile bit ANS16 @ ((unsigned)&ANSEL2*8)+0;
"457
[v _T1GINV `Vb ~T0 @X0 1 e@2167 ]
[; ;sc8f083.h: 457: volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
"458
[v _TMR1GE `Vb ~T0 @X0 1 e@2166 ]
[; ;sc8f083.h: 458: volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
"459
[v _T1CKPS1 `Vb ~T0 @X0 1 e@2165 ]
[; ;sc8f083.h: 459: volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
"460
[v _T1CKPS0 `Vb ~T0 @X0 1 e@2164 ]
[; ;sc8f083.h: 460: volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
"461
[v _T1OSCEN `Vb ~T0 @X0 1 e@2163 ]
[; ;sc8f083.h: 461: volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
"462
[v _T1SYNC `Vb ~T0 @X0 1 e@2162 ]
[; ;sc8f083.h: 462: volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
"463
[v _TMR1CS `Vb ~T0 @X0 1 e@2161 ]
[; ;sc8f083.h: 463: volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
"464
[v _TMR1ON `Vb ~T0 @X0 1 e@2160 ]
[; ;sc8f083.h: 464: volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
"467
[v _TKIF `Vb ~T0 @X0 1 e@2174 ]
[; ;sc8f083.h: 467: volatile bit TKIF @ ((unsigned)&PIR2*8)+6;
"468
[v _CMP2IF `Vb ~T0 @X0 1 e@2173 ]
[; ;sc8f083.h: 468: volatile bit CMP2IF @ ((unsigned)&PIR2*8)+5;
"471
[v _TKIE `Vb ~T0 @X0 1 e@2182 ]
[; ;sc8f083.h: 471: volatile bit TKIE @ ((unsigned)&PIE2*8)+6;
"472
[v _CMP2IE `Vb ~T0 @X0 1 e@2181 ]
[; ;sc8f083.h: 472: volatile bit CMP2IE @ ((unsigned)&PIE2*8)+5;
"475
[v _KDONE `Vb ~T0 @X0 1 e@2191 ]
[; ;sc8f083.h: 475: volatile bit KDONE @ ((unsigned)&KEYCON0*8)+7;
"476
[v _KTOUT `Vb ~T0 @X0 1 e@2186 ]
[; ;sc8f083.h: 476: volatile bit KTOUT @ ((unsigned)&KEYCON0*8)+2;
"477
[v _KCAP `Vb ~T0 @X0 1 e@2185 ]
[; ;sc8f083.h: 477: volatile bit KCAP @ ((unsigned)&KEYCON0*8)+1;
"478
[v _KEN `Vb ~T0 @X0 1 e@2184 ]
[; ;sc8f083.h: 478: volatile bit KEN @ ((unsigned)&KEYCON0*8)+0;
"481
[v _KVREF1 `Vb ~T0 @X0 1 e@2199 ]
[; ;sc8f083.h: 481: volatile bit KVREF1 @ ((unsigned)&KEYCON1*8)+7;
"482
[v _KVREF0 `Vb ~T0 @X0 1 e@2198 ]
[; ;sc8f083.h: 482: volatile bit KVREF0 @ ((unsigned)&KEYCON1*8)+6;
"483
[v _KCLK1 `Vb ~T0 @X0 1 e@2197 ]
[; ;sc8f083.h: 483: volatile bit KCLK1 @ ((unsigned)&KEYCON1*8)+5;
"484
[v _KCLK0 `Vb ~T0 @X0 1 e@2196 ]
[; ;sc8f083.h: 484: volatile bit KCLK0 @ ((unsigned)&KEYCON1*8)+4;
"485
[v _KCHS3 `Vb ~T0 @X0 1 e@2195 ]
[; ;sc8f083.h: 485: volatile bit KCHS3 @ ((unsigned)&KEYCON1*8)+3;
"486
[v _KCHS2 `Vb ~T0 @X0 1 e@2194 ]
[; ;sc8f083.h: 486: volatile bit KCHS2 @ ((unsigned)&KEYCON1*8)+2;
"487
[v _KCHS1 `Vb ~T0 @X0 1 e@2193 ]
[; ;sc8f083.h: 487: volatile bit KCHS1 @ ((unsigned)&KEYCON1*8)+1;
"488
[v _KCHS0 `Vb ~T0 @X0 1 e@2192 ]
[; ;sc8f083.h: 488: volatile bit KCHS0 @ ((unsigned)&KEYCON1*8)+0;
"491
[v _CAP_LVBO2 `Vb ~T0 @X0 1 e@2207 ]
[; ;sc8f083.h: 491: volatile bit CAP_LVBO2 @ ((unsigned)&KEYCON2*8)+7;
"492
[v _CAP_LVBO1 `Vb ~T0 @X0 1 e@2206 ]
[; ;sc8f083.h: 492: volatile bit CAP_LVBO1 @ ((unsigned)&KEYCON2*8)+6;
"493
[v _CAP_LVBO0 `Vb ~T0 @X0 1 e@2205 ]
[; ;sc8f083.h: 493: volatile bit CAP_LVBO0 @ ((unsigned)&KEYCON2*8)+5;
"494
[v _TP_EN `Vb ~T0 @X0 1 e@2204 ]
[; ;sc8f083.h: 494: volatile bit TP_EN @ ((unsigned)&KEYCON2*8)+4;
"495
[v _TKLDOEN `Vb ~T0 @X0 1 e@2203 ]
[; ;sc8f083.h: 495: volatile bit TKLDOEN @ ((unsigned)&KEYCON2*8)+3;
"496
[v _TKLDO_SEL `Vb ~T0 @X0 1 e@2201 ]
[; ;sc8f083.h: 496: volatile bit TKLDO_SEL @ ((unsigned)&KEYCON2*8)+1;
"497
[v _TKEN `Vb ~T0 @X0 1 e@2200 ]
[; ;sc8f083.h: 497: volatile bit TKEN @ ((unsigned)&KEYCON2*8)+0;
"500
[v _CSRC `Vb ~T0 @X0 1 e@2247 ]
[; ;sc8f083.h: 500: volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
"501
[v _TX9EN `Vb ~T0 @X0 1 e@2246 ]
[; ;sc8f083.h: 501: volatile bit TX9EN @ ((unsigned)&TXSTA*8)+6;
"502
[v _TXEN `Vb ~T0 @X0 1 e@2245 ]
[; ;sc8f083.h: 502: volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
"503
[v _SYNC `Vb ~T0 @X0 1 e@2244 ]
[; ;sc8f083.h: 503: volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
"504
[v _SCKP `Vb ~T0 @X0 1 e@2243 ]
[; ;sc8f083.h: 504: volatile bit SCKP @ ((unsigned)&TXSTA*8)+3;
"505
[v _TRMT `Vb ~T0 @X0 1 e@2241 ]
[; ;sc8f083.h: 505: volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
"506
[v _TX9D `Vb ~T0 @X0 1 e@2240 ]
[; ;sc8f083.h: 506: volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
"509
[v _SPEN `Vb ~T0 @X0 1 e@2255 ]
[; ;sc8f083.h: 509: volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
"510
[v _RX9EN `Vb ~T0 @X0 1 e@2254 ]
[; ;sc8f083.h: 510: volatile bit RX9EN @ ((unsigned)&RCSTA*8)+6;
"511
[v _SREN `Vb ~T0 @X0 1 e@2253 ]
[; ;sc8f083.h: 511: volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
"512
[v _CREN `Vb ~T0 @X0 1 e@2252 ]
[; ;sc8f083.h: 512: volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
"513
[v _RCIDL `Vb ~T0 @X0 1 e@2251 ]
[; ;sc8f083.h: 513: volatile bit RCIDL @ ((unsigned)&RCSTA*8)+3;
"514
[v _FERR `Vb ~T0 @X0 1 e@2250 ]
[; ;sc8f083.h: 514: volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
"515
[v _OERR `Vb ~T0 @X0 1 e@2249 ]
[; ;sc8f083.h: 515: volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
"516
[v _RX9D `Vb ~T0 @X0 1 e@2248 ]
[; ;sc8f083.h: 516: volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
[; ;number.h: 33: void refreshLed();
[; ;number.h: 34: void DelayUs(unsigned char Time);
[; ;number.h: 35: void DelayMs(unsigned char Time);
[; ;number.h: 36: void DelayS(unsigned char Time);
"13 C:\mcuproject\scm\zdt\D252_8F083_tssop20_\D252_8F083_tssop20_\main.c
[v _MainTime `Vuc ~T0 @X0 1 e ]
[; ;main.c: 13: volatile unsigned char MainTime;
"14
[v _B_MainLoop `Vb ~T0 @X0 1 e ]
[v _B_OnOff `Vb ~T0 @X0 1 e ]
[; ;main.c: 14: volatile bit B_MainLoop,B_OnOff;
"15
[v _R_AIN4_DATA `ui ~T0 @X0 1 e ]
[; ;main.c: 15: unsigned int R_AIN4_DATA;
"16
[v _R_AIN4_DATA_LB `uc ~T0 @X0 1 e ]
[; ;main.c: 16: unsigned char R_AIN4_DATA_LB;
"17
[v _R_AIN2_DATA `ui ~T0 @X0 1 e ]
[; ;main.c: 17: unsigned int R_AIN2_DATA;
"18
[v _R_AIN2_DATA_LB `uc ~T0 @X0 1 e ]
[; ;main.c: 18: unsigned char R_AIN2_DATA_LB;
"19
[v _intCount `uc ~T0 @X0 1 e ]
[i _intCount
-> -> 0 `i `uc
]
[; ;main.c: 19: unsigned char intCount = 0;
"20
[v _sleepTime `ui ~T0 @X0 1 e ]
[i _sleepTime
-> -> 0 `i `ui
]
[; ;main.c: 20: unsigned int sleepTime = 0;
"21
[v _count1s `uc ~T0 @X0 1 e ]
[i _count1s
-> -> 0 `i `uc
]
[; ;main.c: 21: unsigned char count1s = 0;
"22
[v _intCount10 `uc ~T0 @X0 1 e ]
[i _intCount10
-> -> 0 `i `uc
]
[; ;main.c: 22: unsigned char intCount10 = 0;
"23
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 23: unsigned char workStep = 0;
"24
[v _count900s `uc ~T0 @X0 1 e ]
[i _count900s
-> -> 0 `i `uc
]
[; ;main.c: 24: unsigned char count900s = 0;
"25
[v _keyCount `uc ~T0 @X0 1 e ]
[i _keyCount
-> -> 0 `i `uc
]
[; ;main.c: 25: unsigned char keyCount = 0;
"26
[v _keyCount2 `uc ~T0 @X0 1 e ]
[i _keyCount2
-> -> 0 `i `uc
]
[; ;main.c: 26: unsigned char keyCount2 = 0;
"27
[v _keyCount3 `uc ~T0 @X0 1 e ]
[i _keyCount3
-> -> 0 `i `uc
]
[; ;main.c: 27: unsigned char keyCount3 = 0;
"28
[v _longPressFlag `uc ~T0 @X0 1 e ]
[i _longPressFlag
-> -> 0 `i `uc
]
[; ;main.c: 28: unsigned char longPressFlag = 0;
"29
[v _firstTime `uc ~T0 @X0 1 e ]
[i _firstTime
-> -> 0 `i `uc
]
[; ;main.c: 29: unsigned char firstTime = 0;
"30
[v _batValue `ui ~T0 @X0 1 e ]
[i _batValue
-> -> 0 `i `ui
]
[; ;main.c: 30: unsigned int batValue = 0;
"31
[v _batStep `uc ~T0 @X0 1 e ]
[i _batStep
-> -> 0 `i `uc
]
[; ;main.c: 31: unsigned char batStep = 0;
"32
[v _chrgLedStepTime `uc ~T0 @X0 1 e ]
[i _chrgLedStepTime
-> -> 0 `i `uc
]
[; ;main.c: 32: unsigned char chrgLedStepTime = 0;
"33
[v _showBatStep `uc ~T0 @X0 1 e ]
[i _showBatStep
-> -> 0 `i `uc
]
[; ;main.c: 33: unsigned char showBatStep = 0;
"34
[v _batLedStep `uc ~T0 @X0 1 e ]
[i _batLedStep
-> -> 0 `i `uc
]
[; ;main.c: 34: unsigned char batLedStep = 0;
"35
[v _chanceBatTime `ui ~T0 @X0 1 e ]
[i _chanceBatTime
-> -> 0 `i `ui
]
[; ;main.c: 35: unsigned int chanceBatTime = 0;
"36
[v _temValue `ui ~T0 @X0 1 e ]
[i _temValue
-> -> 0 `i `ui
]
[; ;main.c: 36: unsigned int temValue = 0;
"37
[v _tempNum `uc ~T0 @X0 1 e ]
[i _tempNum
-> -> 0 `i `uc
]
[; ;main.c: 37: unsigned char tempNum = 0;
"38
[v _maxTempNum `uc ~T0 @X0 1 e ]
[i _maxTempNum
-> -> 0 `i `uc
]
[; ;main.c: 38: unsigned char maxTempNum = 0;
"39
[v _showTmepNum `uc ~T0 @X0 1 e ]
[i _showTmepNum
-> -> 0 `i `uc
]
[; ;main.c: 39: unsigned char showTmepNum = 0;
"40
[v _chanceTempNumTime `uc ~T0 @X0 1 e ]
[i _chanceTempNumTime
-> -> 0 `i `uc
]
[; ;main.c: 40: unsigned char chanceTempNumTime = 0;
"41
[v _showWorkStepTime `uc ~T0 @X0 1 e ]
[i _showWorkStepTime
-> -> 0 `i `uc
]
[; ;main.c: 41: unsigned char showWorkStepTime = 0;
"42
[v _lowBatTime `uc ~T0 @X0 1 e ]
[i _lowBatTime
-> -> 0 `i `uc
]
[; ;main.c: 42: unsigned char lowBatTime = 0;
"43
[v _tempCheckTime `uc ~T0 @X0 1 e ]
[i _tempCheckTime
-> -> 0 `i `uc
]
[; ;main.c: 43: unsigned char tempCheckTime = 0;
"44
[v _showOffTime `uc ~T0 @X0 1 e ]
[i _showOffTime
-> -> 0 `i `uc
]
[; ;main.c: 44: unsigned char showOffTime = 0;
"45
[v _showMaxTemp `uc ~T0 @X0 1 e ]
[i _showMaxTemp
-> -> 160 `i `uc
]
[; ;main.c: 45: unsigned char showMaxTemp = 160;
"46
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 46: unsigned char lowBatFlag = 0;
"47
[v _checkNTCTime `uc ~T0 @X0 1 e ]
[i _checkNTCTime
-> -> 0 `i `uc
]
[; ;main.c: 47: unsigned char checkNTCTime = 0;
"48
[v _count1200s `ui ~T0 @X0 1 e ]
[i _count1200s
-> -> 0 `i `ui
]
[; ;main.c: 48: unsigned int count1200s = 0;
"49
[v _firstShowBatTime `uc ~T0 @X0 1 e ]
[i _firstShowBatTime
-> -> 0 `i `uc
]
[; ;main.c: 49: unsigned char firstShowBatTime = 0;
"50
[v _keyNum `uc ~T0 @X0 1 e ]
[i _keyNum
-> -> 0 `i `uc
]
[; ;main.c: 50: unsigned char keyNum = 0;
"51
[v _zfStep `uc ~T0 @X0 1 e ]
[; ;main.c: 51: unsigned char zfStep;
"52
[v _motorTime `ui ~T0 @X0 1 e ]
[; ;main.c: 52: unsigned int motorTime;
"53
[v _beepTime `uc ~T0 @X0 1 e ]
[; ;main.c: 53: unsigned char beepTime;
"54
[v _beepFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 54: unsigned char beepFlag;
"55
[v _chrgFlag `uc ~T0 @X0 1 e ]
[i _chrgFlag
-> -> 0 `i `uc
]
[; ;main.c: 55: unsigned char chrgFlag = 0;
"56
[v _R_AIN6_DATA `ui ~T0 @X0 1 e ]
[i _R_AIN6_DATA
-> -> 0 `i `ui
]
[; ;main.c: 56: unsigned int R_AIN6_DATA = 0;
"57
[v _overTime `uc ~T0 @X0 1 e ]
[i _overTime
-> -> 0 `i `uc
]
[; ;main.c: 57: unsigned char overTime = 0;
"58
[v _numArray `Cuc ~T0 @X0 -> 0 `x s ]
[i _numArray
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 113 `i `uc
-> -> 121 `i `uc
-> -> 80 `i `uc
..
]
[; ;main.c: 58: const static unsigned char numArray[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x71,0x79,0x50};
[; ;main.c: 60: extern unsigned char showNumAShi;
[; ;main.c: 61: extern unsigned char showNumAge;
[; ;main.c: 62: extern unsigned char showNumBShi;
[; ;main.c: 63: extern unsigned char showNumBat;
"65
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 65: volatile unsigned int adresult;
"66
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 66: volatile unsigned int result;
"67
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 67: volatile unsigned char test_adc;
"68
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 68: volatile unsigned int power_ad;
[; ;main.c: 70: void chrgCtr();
[; ;main.c: 71: void Sleep_Mode();
[; ;main.c: 72: void pwm1Stop();
[; ;main.c: 73: void pwm1Init();
[; ;main.c: 74: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
"77
[v _Init_System `(v ~T0 @X0 1 ef ]
"78
{
[; ;main.c: 77: void Init_System()
[; ;main.c: 78: {
[e :U _Init_System ]
[f ]
[; ;main.c: 79: asm("nop");
"79
[; <" nop ;# ">
[; ;main.c: 80: asm("clrwdt");
"80
[; <" clrwdt ;# ">
[; ;main.c: 81: INTCON = 0;
"81
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 82: OSCCON = 0X72;
"82
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 83: OPTION_REG = 0;
"83
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 88: TRISA = 0xE3;
"88
[e = _TRISA -> -> 227 `i `uc ]
[; ;main.c: 89: PORTA = 0x00;
"89
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 90: WPUA = 0x81;
"90
[e = _WPUA -> -> 129 `i `uc ]
[; ;main.c: 91: TRISB = 0x81;
"91
[e = _TRISB -> -> 129 `i `uc ]
[; ;main.c: 92: PORTB = 0;
"92
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 93: WPUB = 0x01;
"93
[e = _WPUB -> -> 1 `i `uc ]
[; ;main.c: 94: TRISC = 0x00;
"94
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 95: PORTC = 0;
"95
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 97: PIE1 = 2;
"97
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 98: PR2 = 250;
"98
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 99: T2CON = 4;
"99
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 101: INTCON = 0XC0;
"101
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 102: ADCON0 = 0X41;
"102
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 103: ADON = 1;
"103
[e = _ADON -> -> 1 `i `b ]
[; ;main.c: 104: ADCON1 = 0x00;
"104
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 105: }
"105
[e :UE 1 ]
}
"115
[v _Refurbish_Sfr `(v ~T0 @X0 1 ef ]
"116
{
[; ;main.c: 115: void Refurbish_Sfr()
[; ;main.c: 116: {
[e :U _Refurbish_Sfr ]
[f ]
[; ;main.c: 118: PIE1 = 2;
"118
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 119: PR2 = 250;
"119
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 120: INTCON = 0XC0;
"120
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 121: if (4 != T2CON)
"121
[e $ ! != -> 4 `i -> _T2CON `i 3  ]
[; ;main.c: 122: T2CON = 4;
"122
[e = _T2CON -> -> 4 `i `uc ]
[e :U 3 ]
[; ;main.c: 123: }
"123
[e :UE 2 ]
}
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F834 `(v ~T0 @X0 1 tf ]
"129
[v _Isr_Timer `IF834 ~T0 @X0 1 e ]
"130
{
[; ;main.c: 129: void interrupt Isr_Timer()
[; ;main.c: 130: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 131: if(TMR2IF)
"131
[e $ ! _TMR2IF 5  ]
[; ;main.c: 132: {
"132
{
[; ;main.c: 133: TMR2IF = 0;
"133
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 134: if(++intCount10 > 3)
"134
[e $ ! > -> =+ _intCount10 -> -> 1 `i `uc `i -> 3 `i 6  ]
[; ;main.c: 135: {
"135
{
[; ;main.c: 136: intCount10 = 0;
"136
[e = _intCount10 -> -> 0 `i `uc ]
[; ;main.c: 137: if(beepFlag)
"137
[e $ ! != -> _beepFlag `i -> -> -> 0 `i `uc `i 7  ]
[; ;main.c: 138: {
"138
{
[; ;main.c: 139: PORTC ^= 0x02;
"139
[e =^ _PORTC -> -> 2 `i `uc ]
"140
}
[; ;main.c: 140: }
[e $U 8  ]
"141
[e :U 7 ]
[; ;main.c: 141: else
[; ;main.c: 142: {
"142
{
[; ;main.c: 143: PORTC &= 0xFD;
"143
[e =& _PORTC -> -> 253 `i `uc ]
"144
}
[e :U 8 ]
"145
}
[e :U 6 ]
[; ;main.c: 144: }
[; ;main.c: 145: }
[; ;main.c: 146: if(++MainTime >= 158)
"146
[e $ ! >= -> =+ _MainTime -> -> 1 `i `uc `i -> 158 `i 9  ]
[; ;main.c: 147: {
"147
{
[; ;main.c: 148: MainTime = 0;
"148
[e = _MainTime -> -> 0 `i `uc ]
[; ;main.c: 149: B_MainLoop = 1;
"149
[e = _B_MainLoop -> -> 1 `i `b ]
[; ;main.c: 150: if(++count1s >= 100)
"150
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 10  ]
[; ;main.c: 151: {
"151
{
[; ;main.c: 152: count1s = 0;
"152
[e = _count1s -> -> 0 `i `uc ]
"153
}
[e :U 10 ]
"154
}
[e :U 9 ]
"155
}
[; ;main.c: 153: }
[; ;main.c: 154: }
[; ;main.c: 155: }
[e $U 11  ]
"156
[e :U 5 ]
[; ;main.c: 156: else
[; ;main.c: 157: {
"157
{
[; ;main.c: 158: PIR1 = 0;
"158
[e = _PIR1 -> -> 0 `i `uc ]
"159
}
[e :U 11 ]
[; ;main.c: 159: }
[; ;main.c: 161: }
"161
[e :UE 4 ]
}
"170
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"171
{
[; ;main.c: 170: void Sleep_Mode()
[; ;main.c: 171: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 172: INTCON = 0;
"172
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 174: OPTION_REG = 0;
"174
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 176: TRISA = 0xE3;
"176
[e = _TRISA -> -> 227 `i `uc ]
[; ;main.c: 177: PORTA = 0x00;
"177
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 178: WPUA = 0x81;
"178
[e = _WPUA -> -> 129 `i `uc ]
[; ;main.c: 179: TRISB = 0x81;
"179
[e = _TRISB -> -> 129 `i `uc ]
[; ;main.c: 180: PORTB = 0;
"180
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 181: WPUB = 0x01;
"181
[e = _WPUB -> -> 1 `i `uc ]
[; ;main.c: 182: TRISC = 0x00;
"182
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 183: PORTC = 0;
"183
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 185: ADCON0 = 0;
"185
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 186: ADCON1 = 0;
"186
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 188: PWMCON0 = 0;
"188
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 190: OSCCON = 0X70;
"190
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 191: T2CON = 0;
"191
[e = _T2CON -> -> 0 `i `uc ]
[; ;main.c: 192: IOCA = 0B00000010;
"192
[e = _IOCA -> -> 2 `i `uc ]
[; ;main.c: 193: IOCB = 0B00000001;
"193
[e = _IOCB -> -> 1 `i `uc ]
[; ;main.c: 195: RAIE = 1;
"195
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 196: RBIE = 1;
"196
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 197: PEIE = 1;
"197
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 199: GIE = 0;
"199
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 202: PORTA;
"202
[e _PORTA ]
[; ;main.c: 203: RAIF = 0;
"203
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 204: RBIF = 0;
"204
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 205: PORTB;
"205
[e _PORTB ]
[; ;main.c: 207: asm("clrwdt");
"207
[; <" clrwdt ;# ">
[; ;main.c: 209: asm("sleep");
"209
[; <" sleep ;# ">
[; ;main.c: 211: asm("nop");
"211
[; <" nop ;# ">
[; ;main.c: 212: asm("clrwdt");
"212
[; <" clrwdt ;# ">
[; ;main.c: 213: if(RAIF) RAIF = 0;
"213
[e $ ! _RAIF 13  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 13 ]
[; ;main.c: 215: Init_System();
"215
[e ( _Init_System ..  ]
[; ;main.c: 216: }
"216
[e :UE 12 ]
}
"238
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"239
{
[; ;main.c: 238: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 239: {
[e :U _ADC_Sample ]
"238
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"239
[f ]
"240
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 240: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"241
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 241: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"242
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 242: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 244: if ((!LDO_EN) && (adldo & 0x04) )
"244
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 15  ]
[; ;main.c: 245: {
"245
{
[; ;main.c: 247: ADCON1 = adldo;
"247
[e = _ADCON1 _adldo ]
[; ;main.c: 248: _delay((unsigned long)((100)*(8000000/4000000.0)));
"248
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
"249
}
[; ;main.c: 249: }
[e $U 16  ]
"250
[e :U 15 ]
[; ;main.c: 250: else
[; ;main.c: 251: ADCON1 = adldo;
"251
[e = _ADCON1 _adldo ]
[e :U 16 ]
[; ;main.c: 253: if(adch & 0x10)
"253
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 17  ]
[; ;main.c: 254: {
"254
{
[; ;main.c: 255: CHS4 = 1;
"255
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 256: adch &= 0x0f;
"256
[e =& _adch -> -> 15 `i `uc ]
"257
}
[e :U 17 ]
"258
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 257: }
[; ;main.c: 258: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 259: for (i = 0; i < 10; i++)
"259
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 18  ]
[e $U 19  ]
"260
[e :U 18 ]
[; ;main.c: 260: {
{
[; ;main.c: 261: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"261
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 262: asm("nop");
"262
[; <" nop ;# ">
[; ;main.c: 263: asm("nop");
"263
[; <" nop ;# ">
[; ;main.c: 264: asm("nop");
"264
[; <" nop ;# ">
[; ;main.c: 265: asm("nop");
"265
[; <" nop ;# ">
[; ;main.c: 266: GODONE = 1;
"266
[e = _GODONE -> -> 1 `i `b ]
"268
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 268: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 269: while (GODONE)
"269
[e $U 21  ]
[e :U 22 ]
[; ;main.c: 270: {
"270
{
[; ;main.c: 271: _delay((unsigned long)((2)*(8000000/4000000.0)));
"271
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 273: if (0 == (--j))
"273
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 24  ]
[; ;main.c: 274: return 0;
"274
[e ) -> -> 0 `i `uc ]
[e $UE 14  ]
[e :U 24 ]
"275
}
[e :U 21 ]
"269
[e $ _GODONE 22  ]
[e :U 23 ]
[; ;main.c: 275: }
[; ;main.c: 277: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"277
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 279: if (0 == admax)
"279
[e $ ! == -> -> 0 `i `ui _admax 25  ]
[; ;main.c: 280: {
"280
{
[; ;main.c: 281: admax = ad_temp;
"281
[e = _admax _ad_temp ]
[; ;main.c: 282: admin = ad_temp;
"282
[e = _admin _ad_temp ]
"283
}
[; ;main.c: 283: }
[e $U 26  ]
"284
[e :U 25 ]
[; ;main.c: 284: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 27  ]
[; ;main.c: 285: admax = ad_temp;
"285
[e = _admax _ad_temp ]
[e $U 28  ]
"286
[e :U 27 ]
[; ;main.c: 286: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 29  ]
[; ;main.c: 287: admin = ad_temp;
"287
[e = _admin _ad_temp ]
[e :U 29 ]
"289
[e :U 28 ]
[e :U 26 ]
[; ;main.c: 289: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"290
}
"259
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 18  ]
[e :U 19 ]
"290
}
[; ;main.c: 290: }
[; ;main.c: 291: adsum -= admax;
"291
[e =- _adsum -> _admax `ul ]
[; ;main.c: 292: if (adsum >= admin)
"292
[e $ ! >= _adsum -> _admin `ul 30  ]
[; ;main.c: 293: adsum -= admin;
"293
[e =- _adsum -> _admin `ul ]
[e $U 31  ]
"294
[e :U 30 ]
[; ;main.c: 294: else
[; ;main.c: 295: adsum = 0;
"295
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 31 ]
[; ;main.c: 297: adresult = adsum >> 3;
"297
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 299: adsum = 0;
"299
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 300: admin = 0;
"300
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 301: admax = 0;
"301
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 302: return 0xA5;
"302
[e ) -> -> 165 `i `uc ]
[e $UE 14  ]
[; ;main.c: 304: }
"304
[e :UE 14 ]
}
"310
[v _checkOutA `(v ~T0 @X0 1 ef ]
"311
{
[; ;main.c: 310: void checkOutA()
[; ;main.c: 311: {
[e :U _checkOutA ]
[f ]
[; ;main.c: 313: test_adc = ADC_Sample(6, 5);
"313
[e = _test_adc ( _ADC_Sample (2 , -> -> 6 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 314: if (0xA5 == test_adc)
"314
[e $ ! == -> 165 `i -> _test_adc `i 33  ]
[; ;main.c: 315: {
"315
{
[; ;main.c: 316: R_AIN6_DATA = adresult;
"316
[e = _R_AIN6_DATA _adresult ]
[; ;main.c: 317: if(R_AIN6_DATA > 1200)
"317
[e $ ! > _R_AIN6_DATA -> -> 1200 `i `ui 34  ]
[; ;main.c: 318: {
"318
{
[; ;main.c: 319: if(++overTime > 10)
"319
[e $ ! > -> =+ _overTime -> -> 1 `i `uc `i -> 10 `i 35  ]
[; ;main.c: 320: {
"320
{
[; ;main.c: 321: overTime = 0;
"321
[e = _overTime -> -> 0 `i `uc ]
[; ;main.c: 322: workStep = 0;
"322
[e = _workStep -> -> 0 `i `uc ]
"323
}
[e :U 35 ]
"324
}
[; ;main.c: 323: }
[; ;main.c: 324: }
[e $U 36  ]
"325
[e :U 34 ]
[; ;main.c: 325: else
[; ;main.c: 326: {
"326
{
[; ;main.c: 327: overTime = 0;
"327
[e = _overTime -> -> 0 `i `uc ]
"328
}
[e :U 36 ]
"329
}
[e :U 33 ]
[; ;main.c: 328: }
[; ;main.c: 329: }
[; ;main.c: 330: }
"330
[e :UE 32 ]
}
"332
[v _checkTemAD `(v ~T0 @X0 1 ef ]
"333
{
[; ;main.c: 332: void checkTemAD()
[; ;main.c: 333: {
[e :U _checkTemAD ]
[f ]
[; ;main.c: 334: test_adc = ADC_Sample(5, 5);
"334
[e = _test_adc ( _ADC_Sample (2 , -> -> 5 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 335: if (0xA5 == test_adc)
"335
[e $ ! == -> 165 `i -> _test_adc `i 38  ]
[; ;main.c: 336: {
"336
{
[; ;main.c: 337: temValue = adresult;
"337
[e = _temValue _adresult ]
[; ;main.c: 338: if(temValue > 4090)
"338
[e $ ! > _temValue -> -> 4090 `i `ui 39  ]
[; ;main.c: 339: {
"339
{
[; ;main.c: 340: tempNum = 0;
"340
[e = _tempNum -> -> 0 `i `uc ]
"341
}
[; ;main.c: 341: }
[e $U 40  ]
"342
[e :U 39 ]
[; ;main.c: 342: else if(temValue > 2015)
[e $ ! > _temValue -> -> 2015 `i `ui 41  ]
[; ;main.c: 343: {
"343
{
[; ;main.c: 345: tempNum = 20 - ((temValue - 2015)/104);
"345
[e = _tempNum -> - -> -> 20 `i `ui / - _temValue -> -> 2015 `i `ui -> -> 104 `i `ui `uc ]
"346
}
[; ;main.c: 346: }
[e $U 42  ]
"347
[e :U 41 ]
[; ;main.c: 347: else if(temValue > 964)
[e $ ! > _temValue -> -> 964 `i `ui 43  ]
[; ;main.c: 348: {
"348
{
[; ;main.c: 350: tempNum = 40 - ((temValue - 964)/52);
"350
[e = _tempNum -> - -> -> 40 `i `ui / - _temValue -> -> 964 `i `ui -> -> 52 `i `ui `uc ]
"351
}
[; ;main.c: 351: }
[e $U 44  ]
"352
[e :U 43 ]
[; ;main.c: 352: else if(temValue > 474)
[e $ ! > _temValue -> -> 474 `i `ui 45  ]
[; ;main.c: 353: {
"353
{
[; ;main.c: 355: tempNum = 60 - ((temValue - 474)/25);
"355
[e = _tempNum -> - -> -> 60 `i `ui / - _temValue -> -> 474 `i `ui -> -> 25 `i `ui `uc ]
"356
}
[; ;main.c: 356: }
[e $U 46  ]
"357
[e :U 45 ]
[; ;main.c: 357: else if(temValue > 244)
[e $ ! > _temValue -> -> 244 `i `ui 47  ]
[; ;main.c: 358: {
"358
{
[; ;main.c: 360: tempNum = 80 - ((temValue - 244)/12);
"360
[e = _tempNum -> - -> -> 80 `i `ui / - _temValue -> -> 244 `i `ui -> -> 12 `i `ui `uc ]
"361
}
[; ;main.c: 361: }
[e $U 48  ]
"362
[e :U 47 ]
[; ;main.c: 362: else if(temValue > 132)
[e $ ! > _temValue -> -> 132 `i `ui 49  ]
[; ;main.c: 363: {
"363
{
[; ;main.c: 365: tempNum = 100 - ((temValue - 132)/6);
"365
[e = _tempNum -> - -> -> 100 `i `ui / - _temValue -> -> 132 `i `ui -> -> 6 `i `ui `uc ]
"366
}
[; ;main.c: 366: }
[e $U 50  ]
"367
[e :U 49 ]
[; ;main.c: 367: else if(temValue > 102)
[e $ ! > _temValue -> -> 102 `i `ui 51  ]
[; ;main.c: 368: {
"368
{
[; ;main.c: 370: tempNum = 140 - (temValue - 102);
"370
[e = _tempNum -> - -> -> 140 `i `ui - _temValue -> -> 102 `i `ui `uc ]
"371
}
[; ;main.c: 371: }
[e $U 52  ]
"372
[e :U 51 ]
[; ;main.c: 372: else if(temValue >= 82)
[e $ ! >= _temValue -> -> 82 `i `ui 53  ]
[; ;main.c: 373: {
"373
{
[; ;main.c: 375: tempNum = 160 - (temValue - 82);
"375
[e = _tempNum -> - -> -> 160 `i `ui - _temValue -> -> 82 `i `ui `uc ]
"376
}
[; ;main.c: 376: }
[e $U 54  ]
"377
[e :U 53 ]
[; ;main.c: 377: else if(temValue >= 62)
[e $ ! >= _temValue -> -> 62 `i `ui 55  ]
[; ;main.c: 378: {
"378
{
[; ;main.c: 379: tempNum = 180 - (temValue - 62);
"379
[e = _tempNum -> - -> -> 180 `i `ui - _temValue -> -> 62 `i `ui `uc ]
"380
}
[; ;main.c: 380: }
[e $U 56  ]
"381
[e :U 55 ]
[; ;main.c: 381: else if(temValue >= 52)
[e $ ! >= _temValue -> -> 52 `i `ui 57  ]
[; ;main.c: 382: {
"382
{
[; ;main.c: 383: tempNum = 190 - (temValue - 52);
"383
[e = _tempNum -> - -> -> 190 `i `ui - _temValue -> -> 52 `i `ui `uc ]
"384
}
[; ;main.c: 384: }
[e $U 58  ]
"385
[e :U 57 ]
[; ;main.c: 385: else if(temValue >= 42)
[e $ ! >= _temValue -> -> 42 `i `ui 59  ]
[; ;main.c: 386: {
"386
{
[; ;main.c: 387: tempNum = 200 - (temValue - 42);
"387
[e = _tempNum -> - -> -> 200 `i `ui - _temValue -> -> 42 `i `ui `uc ]
"388
}
[; ;main.c: 388: }
[e $U 60  ]
"389
[e :U 59 ]
[; ;main.c: 389: else
[; ;main.c: 390: {
"390
{
[; ;main.c: 391: tempNum = 201;
"391
[e = _tempNum -> -> 201 `i `uc ]
"392
}
[e :U 60 ]
[e :U 58 ]
[e :U 56 ]
[e :U 54 ]
[e :U 52 ]
[e :U 50 ]
[e :U 48 ]
[e :U 46 ]
[e :U 44 ]
[e :U 42 ]
[e :U 40 ]
"393
}
[e :U 38 ]
[; ;main.c: 392: }
[; ;main.c: 393: }
[; ;main.c: 395: }
"395
[e :UE 37 ]
}
"398
[v _checkBatAD `(v ~T0 @X0 1 ef ]
"399
{
[; ;main.c: 398: void checkBatAD()
[; ;main.c: 399: {
[e :U _checkBatAD ]
[f ]
[; ;main.c: 401: test_adc = ADC_Sample(15, 5);
"401
[e = _test_adc ( _ADC_Sample (2 , -> -> 15 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 402: if (0xA5 == test_adc)
"402
[e $ ! == -> 165 `i -> _test_adc `i 62  ]
[; ;main.c: 403: {
"403
{
[; ;main.c: 404: batValue = adresult;
"404
[e = _batValue _adresult ]
[; ;main.c: 405: if(chrgFlag)
"405
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 63  ]
[; ;main.c: 406: {
"406
{
[; ;main.c: 407: if(batValue > 1540)
"407
[e $ ! > _batValue -> -> 1540 `i `ui 64  ]
[; ;main.c: 408: {
"408
{
[; ;main.c: 409: batStep = 5;
"409
[e = _batStep -> -> 5 `i `uc ]
"410
}
[; ;main.c: 410: }
[e $U 65  ]
"411
[e :U 64 ]
[; ;main.c: 411: else if(batValue > 1530)
[e $ ! > _batValue -> -> 1530 `i `ui 66  ]
[; ;main.c: 412: {
"412
{
[; ;main.c: 413: batStep = 4;
"413
[e = _batStep -> -> 4 `i `uc ]
"414
}
[; ;main.c: 414: }
[e $U 67  ]
"415
[e :U 66 ]
[; ;main.c: 415: else if(batValue > 1480)
[e $ ! > _batValue -> -> 1480 `i `ui 68  ]
[; ;main.c: 416: {
"416
{
[; ;main.c: 417: batStep = 3;
"417
[e = _batStep -> -> 3 `i `uc ]
"418
}
[; ;main.c: 418: }
[e $U 69  ]
"419
[e :U 68 ]
[; ;main.c: 419: else if(batValue > 1420)
[e $ ! > _batValue -> -> 1420 `i `ui 70  ]
[; ;main.c: 420: {
"420
{
[; ;main.c: 421: batStep = 2;
"421
[e = _batStep -> -> 2 `i `uc ]
"422
}
[; ;main.c: 422: }
[e $U 71  ]
"423
[e :U 70 ]
[; ;main.c: 423: else if(batValue > 1266)
[e $ ! > _batValue -> -> 1266 `i `ui 72  ]
[; ;main.c: 424: {
"424
{
[; ;main.c: 425: batStep = 1;
"425
[e = _batStep -> -> 1 `i `uc ]
"426
}
[; ;main.c: 426: }
[e $U 73  ]
"427
[e :U 72 ]
[; ;main.c: 427: else
[; ;main.c: 428: {
"428
{
[; ;main.c: 429: batStep = 0;
"429
[e = _batStep -> -> 0 `i `uc ]
"430
}
[e :U 73 ]
[e :U 71 ]
[e :U 69 ]
[e :U 67 ]
[e :U 65 ]
"431
}
[; ;main.c: 430: }
[; ;main.c: 431: }
[e $U 74  ]
"432
[e :U 63 ]
[; ;main.c: 432: else
[; ;main.c: 433: {
"433
{
[; ;main.c: 434: if(batValue > 1530)
"434
[e $ ! > _batValue -> -> 1530 `i `ui 75  ]
[; ;main.c: 435: {
"435
{
[; ;main.c: 436: batStep = 5;
"436
[e = _batStep -> -> 5 `i `uc ]
"437
}
[; ;main.c: 437: }
[e $U 76  ]
"438
[e :U 75 ]
[; ;main.c: 438: else if(batValue > 1480)
[e $ ! > _batValue -> -> 1480 `i `ui 77  ]
[; ;main.c: 439: {
"439
{
[; ;main.c: 440: batStep = 4;
"440
[e = _batStep -> -> 4 `i `uc ]
"441
}
[; ;main.c: 441: }
[e $U 78  ]
"442
[e :U 77 ]
[; ;main.c: 442: else if(batValue > 1460)
[e $ ! > _batValue -> -> 1460 `i `ui 79  ]
[; ;main.c: 443: {
"443
{
[; ;main.c: 444: batStep = 3;
"444
[e = _batStep -> -> 3 `i `uc ]
"445
}
[; ;main.c: 445: }
[e $U 80  ]
"446
[e :U 79 ]
[; ;main.c: 446: else if(batValue > 1420)
[e $ ! > _batValue -> -> 1420 `i `ui 81  ]
[; ;main.c: 447: {
"447
{
[; ;main.c: 448: batStep = 2;
"448
[e = _batStep -> -> 2 `i `uc ]
"449
}
[; ;main.c: 449: }
[e $U 82  ]
"450
[e :U 81 ]
[; ;main.c: 450: else if(batValue > 1380)
[e $ ! > _batValue -> -> 1380 `i `ui 83  ]
[; ;main.c: 451: {
"451
{
[; ;main.c: 452: batStep = 1;
"452
[e = _batStep -> -> 1 `i `uc ]
"453
}
[; ;main.c: 453: }
[e $U 84  ]
"454
[e :U 83 ]
[; ;main.c: 454: else
[; ;main.c: 455: {
"455
{
[; ;main.c: 456: batStep = 0;
"456
[e = _batStep -> -> 0 `i `uc ]
"457
}
[e :U 84 ]
[e :U 82 ]
[e :U 80 ]
[e :U 78 ]
[e :U 76 ]
"458
}
[e :U 74 ]
[; ;main.c: 457: }
[; ;main.c: 458: }
[; ;main.c: 459: if(batValue < 931)
"459
[e $ ! < _batValue -> -> 931 `i `ui 85  ]
[; ;main.c: 460: {
"460
{
[; ;main.c: 461: if(++lowBatTime > 5)
"461
[e $ ! > -> =+ _lowBatTime -> -> 1 `i `uc `i -> 5 `i 86  ]
[; ;main.c: 462: {
"462
{
[; ;main.c: 463: showBatStep = 0;
"463
[e = _showBatStep -> -> 0 `i `uc ]
[; ;main.c: 464: lowBatTime = 0;
"464
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 465: workStep = 0;
"465
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 466: pwm1Stop();
"466
[e ( _pwm1Stop ..  ]
[; ;main.c: 467: lowBatFlag = 1;
"467
[e = _lowBatFlag -> -> 1 `i `uc ]
"468
}
[e :U 86 ]
"469
}
[; ;main.c: 468: }
[; ;main.c: 469: }
[e $U 87  ]
"470
[e :U 85 ]
[; ;main.c: 470: else
[; ;main.c: 471: {
"471
{
[; ;main.c: 472: lowBatTime = 0;
"472
[e = _lowBatTime -> -> 0 `i `uc ]
"473
}
[e :U 87 ]
"475
}
[e :U 62 ]
[; ;main.c: 473: }
[; ;main.c: 475: }
[; ;main.c: 477: }
"477
[e :UE 61 ]
}
"480
[v _setBatLed `(v ~T0 @X0 1 ef1`uc ]
"481
{
[; ;main.c: 480: void setBatLed(unsigned char ledStep)
[; ;main.c: 481: {
[e :U _setBatLed ]
"480
[v _ledStep `uc ~T0 @X0 1 r1 ]
"481
[f ]
[; ;main.c: 482: showNumBat &= 0xF0;
"482
[e =& _showNumBat -> -> 240 `i `uc ]
[; ;main.c: 483: if(ledStep == 1)
"483
[e $ ! == -> _ledStep `i -> 1 `i 89  ]
[; ;main.c: 484: {
"484
{
[; ;main.c: 485: showNumBat |= 0x08;
"485
[e =| _showNumBat -> -> 8 `i `uc ]
"486
}
[; ;main.c: 486: }
[e $U 90  ]
"487
[e :U 89 ]
[; ;main.c: 487: else if(ledStep == 2)
[e $ ! == -> _ledStep `i -> 2 `i 91  ]
[; ;main.c: 488: {
"488
{
[; ;main.c: 489: showNumBat |= 0x0C;
"489
[e =| _showNumBat -> -> 12 `i `uc ]
"490
}
[; ;main.c: 490: }
[e $U 92  ]
"491
[e :U 91 ]
[; ;main.c: 491: else if(ledStep == 3)
[e $ ! == -> _ledStep `i -> 3 `i 93  ]
[; ;main.c: 492: {
"492
{
[; ;main.c: 493: showNumBat |= 0x0E;
"493
[e =| _showNumBat -> -> 14 `i `uc ]
"494
}
[; ;main.c: 494: }
[e $U 94  ]
"495
[e :U 93 ]
[; ;main.c: 495: else if(ledStep >= 4)
[e $ ! >= -> _ledStep `i -> 4 `i 95  ]
[; ;main.c: 496: {
"496
{
[; ;main.c: 497: showNumBat |= 0x0F;
"497
[e =| _showNumBat -> -> 15 `i `uc ]
"498
}
[e :U 95 ]
"499
[e :U 94 ]
[e :U 92 ]
[e :U 90 ]
[; ;main.c: 498: }
[; ;main.c: 499: }
[e :UE 88 ]
}
"501
[v _setTempLed `(v ~T0 @X0 1 ef1`uc ]
"502
{
[; ;main.c: 501: void setTempLed(unsigned char tempLed)
[; ;main.c: 502: {
[e :U _setTempLed ]
"501
[v _tempLed `uc ~T0 @X0 1 r1 ]
"502
[f ]
[; ;main.c: 504: if(tempLed >= 100)
"504
[e $ ! >= -> _tempLed `i -> 100 `i 97  ]
[; ;main.c: 505: {
"505
{
[; ;main.c: 506: showNumAShi = numArray[tempLed/100];
"506
[e = _showNumAShi *U + &U _numArray * -> -> / -> _tempLed `i -> 100 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 507: showNumAge = numArray[(tempLed%100)/10];
"507
[e = _showNumAge *U + &U _numArray * -> -> / % -> _tempLed `i -> 100 `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"508
}
[; ;main.c: 508: }
[e $U 98  ]
"509
[e :U 97 ]
[; ;main.c: 509: else
[; ;main.c: 510: {
"510
{
[; ;main.c: 511: showNumAShi = 0;
"511
[e = _showNumAShi -> -> 0 `i `uc ]
[; ;main.c: 512: if(tempLed >= 10)
"512
[e $ ! >= -> _tempLed `i -> 10 `i 99  ]
[; ;main.c: 513: {
"513
{
[; ;main.c: 514: showNumAge = numArray[tempLed/10];
"514
[e = _showNumAge *U + &U _numArray * -> -> / -> _tempLed `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"515
}
[; ;main.c: 515: }
[e $U 100  ]
"516
[e :U 99 ]
[; ;main.c: 516: else
[; ;main.c: 517: {
"517
{
[; ;main.c: 518: showNumAge = 0;
"518
[e = _showNumAge -> -> 0 `i `uc ]
"519
}
[e :U 100 ]
"520
}
[e :U 98 ]
[; ;main.c: 519: }
[; ;main.c: 520: }
[; ;main.c: 521: showNumBShi = numArray[tempLed%10];
"521
[e = _showNumBShi *U + &U _numArray * -> -> % -> _tempLed `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 522: }
"522
[e :UE 96 ]
}
"524
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"525
{
[; ;main.c: 524: void chrgCtr()
[; ;main.c: 525: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 526: if(0x02 & PORTA)
"526
[e $ ! != & -> 2 `i -> _PORTA `i -> 0 `i 102  ]
[; ;main.c: 527: {
"527
{
[; ;main.c: 528: chrgFlag = 1;
"528
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 529: workStep = 0;
"529
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 530: lowBatFlag = 0;
"530
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 531: pwm1Stop();
"531
[e ( _pwm1Stop ..  ]
[; ;main.c: 532: showNumBat &= 0x0F;
"532
[e =& _showNumBat -> -> 15 `i `uc ]
[; ;main.c: 533: firstTime = 0;
"533
[e = _firstTime -> -> 0 `i `uc ]
[; ;main.c: 534: if(showBatStep > 4)
"534
[e $ ! > -> _showBatStep `i -> 4 `i 103  ]
[; ;main.c: 535: {
"535
{
[; ;main.c: 536: batLedStep = 4;
"536
[e = _batLedStep -> -> 4 `i `uc ]
"537
}
[; ;main.c: 537: }
[e $U 104  ]
"538
[e :U 103 ]
[; ;main.c: 538: else if(count1s < 50)
[e $ ! < -> _count1s `i -> 50 `i 105  ]
[; ;main.c: 539: {
"539
{
[; ;main.c: 540: if(showBatStep > 0)
"540
[e $ ! > -> _showBatStep `i -> 0 `i 106  ]
[; ;main.c: 541: {
"541
{
[; ;main.c: 542: batLedStep = showBatStep;
"542
[e = _batLedStep _showBatStep ]
"543
}
[; ;main.c: 543: }
[e $U 107  ]
"544
[e :U 106 ]
[; ;main.c: 544: else
[; ;main.c: 545: {
"545
{
[; ;main.c: 546: batLedStep = 1;
"546
[e = _batLedStep -> -> 1 `i `uc ]
"547
}
[e :U 107 ]
"548
}
[; ;main.c: 547: }
[; ;main.c: 548: }
[e $U 108  ]
"549
[e :U 105 ]
[; ;main.c: 549: else
[; ;main.c: 550: {
"550
{
[; ;main.c: 551: if(showBatStep > 0)
"551
[e $ ! > -> _showBatStep `i -> 0 `i 109  ]
[; ;main.c: 552: {
"552
{
[; ;main.c: 553: batLedStep = showBatStep - 1;
"553
[e = _batLedStep -> - -> _showBatStep `i -> 1 `i `uc ]
"554
}
[; ;main.c: 554: }
[e $U 110  ]
"555
[e :U 109 ]
[; ;main.c: 555: else
[; ;main.c: 556: {
"556
{
[; ;main.c: 557: batLedStep = 0;
"557
[e = _batLedStep -> -> 0 `i `uc ]
"558
}
[e :U 110 ]
"559
}
[e :U 108 ]
[e :U 104 ]
[; ;main.c: 558: }
[; ;main.c: 559: }
[; ;main.c: 560: showNumAShi = 0;
"560
[e = _showNumAShi -> -> 0 `i `uc ]
[; ;main.c: 561: showNumAge = 0;
"561
[e = _showNumAge -> -> 0 `i `uc ]
[; ;main.c: 562: showNumBShi = 0;
"562
[e = _showNumBShi -> -> 0 `i `uc ]
[; ;main.c: 563: setBatLed(batLedStep);
"563
[e ( _setBatLed (1 _batLedStep ]
[; ;main.c: 564: if(showBatStep < batStep)
"564
[e $ ! < -> _showBatStep `i -> _batStep `i 111  ]
[; ;main.c: 565: {
"565
{
[; ;main.c: 566: if(++chanceBatTime > 10000)
"566
[e $ ! > =+ _chanceBatTime -> -> 1 `i `ui -> -> 10000 `i `ui 112  ]
[; ;main.c: 567: {
"567
{
[; ;main.c: 568: chanceBatTime = 0;
"568
[e = _chanceBatTime -> -> 0 `i `ui ]
[; ;main.c: 569: showBatStep++;
"569
[e ++ _showBatStep -> -> 1 `i `uc ]
"570
}
[e :U 112 ]
"571
}
[; ;main.c: 570: }
[; ;main.c: 571: }
[e $U 113  ]
"572
[e :U 111 ]
[; ;main.c: 572: else
[; ;main.c: 573: {
"573
{
[; ;main.c: 574: chanceBatTime = 0;
"574
[e = _chanceBatTime -> -> 0 `i `ui ]
"575
}
[e :U 113 ]
"576
}
[; ;main.c: 575: }
[; ;main.c: 576: }
[e $U 114  ]
"577
[e :U 102 ]
[; ;main.c: 577: else
[; ;main.c: 578: {
"578
{
[; ;main.c: 579: chrgFlag = 0;
"579
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 580: if(showBatStep > 1 && showBatStep > batStep)
"580
[e $ ! && > -> _showBatStep `i -> 1 `i > -> _showBatStep `i -> _batStep `i 115  ]
[; ;main.c: 581: {
"581
{
[; ;main.c: 582: if(++chanceBatTime > 30000)
"582
[e $ ! > =+ _chanceBatTime -> -> 1 `i `ui -> -> 30000 `i `ui 116  ]
[; ;main.c: 583: {
"583
{
[; ;main.c: 584: chanceBatTime = 0;
"584
[e = _chanceBatTime -> -> 0 `i `ui ]
[; ;main.c: 585: showBatStep--;
"585
[e -- _showBatStep -> -> 1 `i `uc ]
"586
}
[e :U 116 ]
"587
}
[; ;main.c: 586: }
[; ;main.c: 587: }
[e $U 117  ]
"588
[e :U 115 ]
[; ;main.c: 588: else
[; ;main.c: 589: {
"589
{
[; ;main.c: 590: chanceBatTime = 0;
"590
[e = _chanceBatTime -> -> 0 `i `ui ]
"591
}
[e :U 117 ]
"592
}
[e :U 114 ]
[; ;main.c: 591: }
[; ;main.c: 592: }
[; ;main.c: 593: }
"593
[e :UE 101 ]
}
"596
[v _updateTemp `(v ~T0 @X0 1 ef ]
"597
{
[; ;main.c: 596: void updateTemp()
[; ;main.c: 597: {
[e :U _updateTemp ]
[f ]
[; ;main.c: 598: if(workStep > 0)
"598
[e $ ! > -> _workStep `i -> 0 `i 119  ]
[; ;main.c: 599: {
"599
{
[; ;main.c: 600: if(++tempCheckTime > 250)
"600
[e $ ! > -> =+ _tempCheckTime -> -> 1 `i `uc `i -> 250 `i 120  ]
[; ;main.c: 601: {
"601
{
[; ;main.c: 602: tempCheckTime = 0;
"602
[e = _tempCheckTime -> -> 0 `i `uc ]
"603
}
[e :U 120 ]
[; ;main.c: 603: }
[; ;main.c: 604: if(tempCheckTime < 20)
"604
[e $ ! < -> _tempCheckTime `i -> 20 `i 121  ]
[; ;main.c: 605: {
"605
{
[; ;main.c: 606: checkTemAD();
"606
[e ( _checkTemAD ..  ]
"607
}
[e :U 121 ]
[; ;main.c: 607: }
[; ;main.c: 608: if(showTmepNum < showMaxTemp)
"608
[e $ ! < -> _showTmepNum `i -> _showMaxTemp `i 122  ]
[; ;main.c: 609: {
"609
{
[; ;main.c: 610: if(++chanceTempNumTime >= 75)
"610
[e $ ! >= -> =+ _chanceTempNumTime -> -> 1 `i `uc `i -> 75 `i 123  ]
[; ;main.c: 611: {
"611
{
[; ;main.c: 612: chanceTempNumTime = 0;
"612
[e = _chanceTempNumTime -> -> 0 `i `uc ]
[; ;main.c: 613: showTmepNum++;
"613
[e ++ _showTmepNum -> -> 1 `i `uc ]
"614
}
[e :U 123 ]
"615
}
[e :U 122 ]
"616
}
[; ;main.c: 614: }
[; ;main.c: 615: }
[; ;main.c: 616: }
[e $U 124  ]
"617
[e :U 119 ]
[; ;main.c: 617: else
[; ;main.c: 618: {
"618
{
[; ;main.c: 619: if(firstTime == 0)
"619
[e $ ! == -> _firstTime `i -> 0 `i 125  ]
[; ;main.c: 620: {
"620
{
[; ;main.c: 621: checkTemAD();
"621
[e ( _checkTemAD ..  ]
"622
}
[e :U 125 ]
[; ;main.c: 622: }
[; ;main.c: 623: if(++chanceTempNumTime > 40)
"623
[e $ ! > -> =+ _chanceTempNumTime -> -> 1 `i `uc `i -> 40 `i 126  ]
[; ;main.c: 624: {
"624
{
[; ;main.c: 625: chanceTempNumTime = 0;
"625
[e = _chanceTempNumTime -> -> 0 `i `uc ]
[; ;main.c: 626: showTmepNum = tempNum;
"626
[e = _showTmepNum _tempNum ]
"627
}
[e :U 126 ]
"628
}
[e :U 124 ]
[; ;main.c: 627: }
[; ;main.c: 628: }
[; ;main.c: 629: }
"629
[e :UE 118 ]
}
"631
[v _workCtr `(v ~T0 @X0 1 ef ]
"632
{
[; ;main.c: 631: void workCtr()
[; ;main.c: 632: {
[e :U _workCtr ]
[f ]
[; ;main.c: 633: if(count1200s >= 1200)
"633
[e $ ! >= _count1200s -> -> 1200 `i `ui 128  ]
[; ;main.c: 634: {
"634
{
[; ;main.c: 635: count1200s = 0;
"635
[e = _count1200s -> -> 0 `i `ui ]
[; ;main.c: 636: workStep = 0;
"636
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 637: showWorkStepTime = 0;
"637
[e = _showWorkStepTime -> -> 0 `i `uc ]
[; ;main.c: 638: pwm1Stop();
"638
[e ( _pwm1Stop ..  ]
[; ;main.c: 639: PORTB &= 0xF0;
"639
[e =& _PORTB -> -> 240 `i `uc ]
"640
}
[e :U 128 ]
[; ;main.c: 640: }
[; ;main.c: 641: if(motorTime > 0)
"641
[e $ ! > _motorTime -> -> 0 `i `ui 129  ]
[; ;main.c: 642: {
"642
{
[; ;main.c: 643: if(motorTime >= 800 && motorTime < 1580)
"643
[e $ ! && >= _motorTime -> -> 800 `i `ui < _motorTime -> -> 1580 `i `ui 130  ]
[; ;main.c: 644: {
"644
{
[; ;main.c: 645: if(zfStep == 1)
"645
[e $ ! == -> _zfStep `i -> 1 `i 131  ]
[; ;main.c: 646: {
"646
{
[; ;main.c: 647: PORTA |= 0x08;
"647
[e =| _PORTA -> -> 8 `i `uc ]
"648
}
[; ;main.c: 648: }
[e $U 132  ]
"649
[e :U 131 ]
[; ;main.c: 649: else if(zfStep == 2)
[e $ ! == -> _zfStep `i -> 2 `i 133  ]
[; ;main.c: 650: {
"650
{
[; ;main.c: 651: PORTA |= 0x10;
"651
[e =| _PORTA -> -> 16 `i `uc ]
"652
}
[e :U 133 ]
"653
[e :U 132 ]
}
[; ;main.c: 652: }
[; ;main.c: 653: }
[e $U 134  ]
"654
[e :U 130 ]
[; ;main.c: 654: else
[; ;main.c: 655: {
"655
{
[; ;main.c: 656: PORTA &= 0xE7;
"656
[e =& _PORTA -> -> 231 `i `uc ]
"657
}
[e :U 134 ]
[; ;main.c: 657: }
[; ;main.c: 658: if(--motorTime == 0)
"658
[e $ ! == =- _motorTime -> -> 1 `i `ui -> -> 0 `i `ui 135  ]
[; ;main.c: 659: {
"659
{
[; ;main.c: 660: beepTime = 180;
"660
[e = _beepTime -> -> 180 `i `uc ]
"661
}
[e :U 135 ]
[; ;main.c: 661: }
[; ;main.c: 662: if(motorTime < 800)
"662
[e $ ! < _motorTime -> -> 800 `i `ui 136  ]
[; ;main.c: 663: {
"663
{
[; ;main.c: 664: PORTA &= 0xE7;
"664
[e =& _PORTA -> -> 231 `i `uc ]
"665
}
[e :U 136 ]
"667
}
[; ;main.c: 665: }
[; ;main.c: 667: }
[e $U 137  ]
"668
[e :U 129 ]
[; ;main.c: 668: else
[; ;main.c: 669: {
"669
{
[; ;main.c: 670: PORTA &= 0xE7;
"670
[e =& _PORTA -> -> 231 `i `uc ]
"671
}
[e :U 137 ]
[; ;main.c: 671: }
[; ;main.c: 672: if(beepTime > 0)
"672
[e $ ! > -> _beepTime `i -> 0 `i 138  ]
[; ;main.c: 673: {
"673
{
[; ;main.c: 674: beepTime--;
"674
[e -- _beepTime -> -> 1 `i `uc ]
[; ;main.c: 675: if(beepTime % 60 < 30)
"675
[e $ ! < % -> _beepTime `i -> 60 `i -> 30 `i 139  ]
[; ;main.c: 676: {
"676
{
[; ;main.c: 677: beepFlag = 1;
"677
[e = _beepFlag -> -> 1 `i `uc ]
"678
}
[; ;main.c: 678: }
[e $U 140  ]
"679
[e :U 139 ]
[; ;main.c: 679: else
[; ;main.c: 680: {
"680
{
[; ;main.c: 681: beepFlag = 0;
"681
[e = _beepFlag -> -> 0 `i `uc ]
"682
}
[e :U 140 ]
"683
}
[; ;main.c: 682: }
[; ;main.c: 683: }
[e $U 141  ]
"684
[e :U 138 ]
[; ;main.c: 684: else
[; ;main.c: 685: {
"685
{
[; ;main.c: 686: beepFlag = 0;
"686
[e = _beepFlag -> -> 0 `i `uc ]
"687
}
[e :U 141 ]
[; ;main.c: 687: }
[; ;main.c: 688: updateTemp();
"688
[e ( _updateTemp ..  ]
[; ;main.c: 689: if(showWorkStepTime > 0)
"689
[e $ ! > -> _showWorkStepTime `i -> 0 `i 142  ]
[; ;main.c: 690: {
"690
{
[; ;main.c: 691: showWorkStepTime--;
"691
[e -- _showWorkStepTime -> -> 1 `i `uc ]
"692
}
[e :U 142 ]
[; ;main.c: 692: }
[; ;main.c: 693: if(showOffTime > 0)
"693
[e $ ! > -> _showOffTime `i -> 0 `i 143  ]
[; ;main.c: 694: {
"694
{
[; ;main.c: 695: showOffTime--;
"695
[e -- _showOffTime -> -> 1 `i `uc ]
"696
}
[e :U 143 ]
[; ;main.c: 696: }
[; ;main.c: 697: if(firstTime > 0)
"697
[e $ ! > -> _firstTime `i -> 0 `i 144  ]
[; ;main.c: 698: {
"698
{
[; ;main.c: 699: firstTime--;
"699
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 700: if(showBatStep < batStep)
"700
[e $ ! < -> _showBatStep `i -> _batStep `i 145  ]
[; ;main.c: 701: {
"701
{
[; ;main.c: 702: if(++firstShowBatTime > 5)
"702
[e $ ! > -> =+ _firstShowBatTime -> -> 1 `i `uc `i -> 5 `i 146  ]
[; ;main.c: 703: {
"703
{
[; ;main.c: 704: showBatStep = batStep;
"704
[e = _showBatStep _batStep ]
"705
}
[e :U 146 ]
"706
}
[; ;main.c: 705: }
[; ;main.c: 706: }
[e $U 147  ]
"707
[e :U 145 ]
[; ;main.c: 707: else
[; ;main.c: 708: {
"708
{
[; ;main.c: 709: showBatStep = batStep;
"709
[e = _showBatStep _batStep ]
"710
}
[e :U 147 ]
[; ;main.c: 710: }
[; ;main.c: 711: if(showBatStep < 1)
"711
[e $ ! < -> _showBatStep `i -> 1 `i 148  ]
[; ;main.c: 712: {
"712
{
[; ;main.c: 713: showBatStep = 1;
"713
[e = _showBatStep -> -> 1 `i `uc ]
"714
}
[e :U 148 ]
[; ;main.c: 714: }
[; ;main.c: 715: if(showTmepNum < tempNum)
"715
[e $ ! < -> _showTmepNum `i -> _tempNum `i 149  ]
[; ;main.c: 716: showTmepNum = tempNum;
"716
[e = _showTmepNum _tempNum ]
[e :U 149 ]
"717
}
[; ;main.c: 717: }
[e $U 150  ]
"718
[e :U 144 ]
[; ;main.c: 718: else if(workStep == 1)
[e $ ! == -> _workStep `i -> 1 `i 151  ]
[; ;main.c: 719: {
"719
{
[; ;main.c: 720: showMaxTemp = 160;
"720
[e = _showMaxTemp -> -> 160 `i `uc ]
[; ;main.c: 721: if(showWorkStepTime > 0)
"721
[e $ ! > -> _showWorkStepTime `i -> 0 `i 152  ]
[; ;main.c: 722: {
"722
{
[; ;main.c: 723: setTempLed(160);
"723
[e ( _setTempLed (1 -> -> 160 `i `uc ]
[; ;main.c: 724: maxTempNum = showTmepNum;
"724
[e = _maxTempNum _showTmepNum ]
"725
}
[; ;main.c: 725: }
[e $U 153  ]
"726
[e :U 152 ]
[; ;main.c: 726: else
[; ;main.c: 727: {
"727
{
[; ;main.c: 728: if(maxTempNum < 160)
"728
[e $ ! < -> _maxTempNum `i -> 160 `i 154  ]
[; ;main.c: 729: {
"729
{
[; ;main.c: 730: setTempLed(maxTempNum);
"730
[e ( _setTempLed (1 _maxTempNum ]
"731
}
[; ;main.c: 731: }
[e $U 155  ]
"732
[e :U 154 ]
[; ;main.c: 732: else
[; ;main.c: 733: {
"733
{
[; ;main.c: 734: setTempLed(160);
"734
[e ( _setTempLed (1 -> -> 160 `i `uc ]
"735
}
[e :U 155 ]
[; ;main.c: 735: }
[; ;main.c: 736: if(maxTempNum < showTmepNum)
"736
[e $ ! < -> _maxTempNum `i -> _showTmepNum `i 156  ]
[; ;main.c: 737: {
"737
{
[; ;main.c: 738: maxTempNum++;
"738
[e ++ _maxTempNum -> -> 1 `i `uc ]
"739
}
[e :U 156 ]
"740
}
[e :U 153 ]
[; ;main.c: 739: }
[; ;main.c: 740: }
[; ;main.c: 741: pwm1Init();
"741
[e ( _pwm1Init ..  ]
[; ;main.c: 750: showNumBat = 0x30;
"750
[e = _showNumBat -> -> 48 `i `uc ]
[; ;main.c: 751: setBatLed(showBatStep);
"751
[e ( _setBatLed (1 _showBatStep ]
"752
}
[; ;main.c: 752: }
[e $U 157  ]
"753
[e :U 151 ]
[; ;main.c: 753: else if(workStep == 2)
[e $ ! == -> _workStep `i -> 2 `i 158  ]
[; ;main.c: 754: {
"754
{
[; ;main.c: 755: showMaxTemp = 180;
"755
[e = _showMaxTemp -> -> 180 `i `uc ]
[; ;main.c: 756: if(showWorkStepTime > 0)
"756
[e $ ! > -> _showWorkStepTime `i -> 0 `i 159  ]
[; ;main.c: 757: {
"757
{
[; ;main.c: 758: setTempLed(180);
"758
[e ( _setTempLed (1 -> -> 180 `i `uc ]
[; ;main.c: 759: maxTempNum = showTmepNum;
"759
[e = _maxTempNum _showTmepNum ]
"760
}
[; ;main.c: 760: }
[e $U 160  ]
"761
[e :U 159 ]
[; ;main.c: 761: else
[; ;main.c: 762: {
"762
{
[; ;main.c: 763: if(maxTempNum < 180)
"763
[e $ ! < -> _maxTempNum `i -> 180 `i 161  ]
[; ;main.c: 764: {
"764
{
[; ;main.c: 765: setTempLed(maxTempNum);
"765
[e ( _setTempLed (1 _maxTempNum ]
"766
}
[; ;main.c: 766: }
[e $U 162  ]
"767
[e :U 161 ]
[; ;main.c: 767: else
[; ;main.c: 768: {
"768
{
[; ;main.c: 769: setTempLed(180);
"769
[e ( _setTempLed (1 -> -> 180 `i `uc ]
"770
}
[e :U 162 ]
[; ;main.c: 770: }
[; ;main.c: 771: if(maxTempNum < showTmepNum)
"771
[e $ ! < -> _maxTempNum `i -> _showTmepNum `i 163  ]
[; ;main.c: 772: {
"772
{
[; ;main.c: 773: maxTempNum++;
"773
[e ++ _maxTempNum -> -> 1 `i `uc ]
"774
}
[e :U 163 ]
"775
}
[e :U 160 ]
[; ;main.c: 774: }
[; ;main.c: 775: }
[; ;main.c: 776: pwm1Init();
"776
[e ( _pwm1Init ..  ]
[; ;main.c: 785: showNumBat = 0x30;
"785
[e = _showNumBat -> -> 48 `i `uc ]
[; ;main.c: 786: setBatLed(showBatStep);
"786
[e ( _setBatLed (1 _showBatStep ]
"787
}
[; ;main.c: 787: }
[e $U 164  ]
"788
[e :U 158 ]
[; ;main.c: 788: else if(workStep == 3)
[e $ ! == -> _workStep `i -> 3 `i 165  ]
[; ;main.c: 789: {
"789
{
[; ;main.c: 790: showMaxTemp = 200;
"790
[e = _showMaxTemp -> -> 200 `i `uc ]
[; ;main.c: 791: if(showWorkStepTime > 0)
"791
[e $ ! > -> _showWorkStepTime `i -> 0 `i 166  ]
[; ;main.c: 792: {
"792
{
[; ;main.c: 793: setTempLed(200);
"793
[e ( _setTempLed (1 -> -> 200 `i `uc ]
[; ;main.c: 794: maxTempNum = showTmepNum;
"794
[e = _maxTempNum _showTmepNum ]
"795
}
[; ;main.c: 795: }
[e $U 167  ]
"796
[e :U 166 ]
[; ;main.c: 796: else
[; ;main.c: 797: {
"797
{
[; ;main.c: 798: if(maxTempNum < 200)
"798
[e $ ! < -> _maxTempNum `i -> 200 `i 168  ]
[; ;main.c: 799: {
"799
{
[; ;main.c: 800: setTempLed(maxTempNum);
"800
[e ( _setTempLed (1 _maxTempNum ]
"801
}
[; ;main.c: 801: }
[e $U 169  ]
"802
[e :U 168 ]
[; ;main.c: 802: else
[; ;main.c: 803: {
"803
{
[; ;main.c: 804: setTempLed(200);
"804
[e ( _setTempLed (1 -> -> 200 `i `uc ]
"805
}
[e :U 169 ]
[; ;main.c: 805: }
[; ;main.c: 806: if(maxTempNum < showTmepNum)
"806
[e $ ! < -> _maxTempNum `i -> _showTmepNum `i 170  ]
[; ;main.c: 807: {
"807
{
[; ;main.c: 808: maxTempNum++;
"808
[e ++ _maxTempNum -> -> 1 `i `uc ]
"809
}
[e :U 170 ]
"810
}
[e :U 167 ]
[; ;main.c: 809: }
[; ;main.c: 810: }
[; ;main.c: 811: pwm1Init();
"811
[e ( _pwm1Init ..  ]
[; ;main.c: 820: showNumBat = 0x30;
"820
[e = _showNumBat -> -> 48 `i `uc ]
[; ;main.c: 821: setBatLed(showBatStep);
"821
[e ( _setBatLed (1 _showBatStep ]
"822
}
[; ;main.c: 822: }
[e $U 171  ]
"823
[e :U 165 ]
[; ;main.c: 823: else if(showOffTime > 0)
[e $ ! > -> _showOffTime `i -> 0 `i 172  ]
[; ;main.c: 824: {
"824
{
[; ;main.c: 825: showNumAShi = numArray[0];
"825
[e = _showNumAShi *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 826: showNumAge = numArray[10];
"826
[e = _showNumAge *U + &U _numArray * -> -> -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 827: showNumBShi = numArray[10];
"827
[e = _showNumBShi *U + &U _numArray * -> -> -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 828: if(lowBatFlag == 1 && count1s < 50)
"828
[e $ ! && == -> _lowBatFlag `i -> 1 `i < -> _count1s `i -> 50 `i 173  ]
[; ;main.c: 829: {
"829
{
[; ;main.c: 830: setBatLed(1);
"830
[e ( _setBatLed (1 -> -> 1 `i `uc ]
"831
}
[; ;main.c: 831: }
[e $U 174  ]
"832
[e :U 173 ]
[; ;main.c: 832: else
[; ;main.c: 833: {
"833
{
[; ;main.c: 834: setBatLed(showBatStep);
"834
[e ( _setBatLed (1 _showBatStep ]
"835
}
[e :U 174 ]
"836
}
[; ;main.c: 835: }
[; ;main.c: 836: }
[e $U 175  ]
"837
[e :U 172 ]
[; ;main.c: 837: else if(firstTime == 0 && chrgFlag == 0)
[e $ ! && == -> _firstTime `i -> 0 `i == -> _chrgFlag `i -> 0 `i 176  ]
[; ;main.c: 838: {
"838
{
[; ;main.c: 839: pwm1Stop();
"839
[e ( _pwm1Stop ..  ]
[; ;main.c: 840: showNumAShi = 0;
"840
[e = _showNumAShi -> -> 0 `i `uc ]
[; ;main.c: 841: showNumAge = 0;
"841
[e = _showNumAge -> -> 0 `i `uc ]
[; ;main.c: 842: showNumBShi = 0;
"842
[e = _showNumBShi -> -> 0 `i `uc ]
[; ;main.c: 843: showNumBat = 0;
"843
[e = _showNumBat -> -> 0 `i `uc ]
"844
}
[e :U 176 ]
"845
[e :U 175 ]
[e :U 171 ]
[e :U 164 ]
[e :U 157 ]
[e :U 150 ]
[; ;main.c: 844: }
[; ;main.c: 845: }
[e :UE 127 ]
}
"848
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"849
{
[; ;main.c: 848: char keyRead(char keyStatus)
[; ;main.c: 849: {
[e :U _keyRead ]
"848
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"849
[f ]
[; ;main.c: 850: if(keyStatus)
"850
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 178  ]
[; ;main.c: 851: {
"851
{
[; ;main.c: 852: keyCount++;
"852
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 853: if(keyCount >= 120)
"853
[e $ ! >= -> _keyCount `i -> 120 `i 179  ]
[; ;main.c: 854: {
"854
{
[; ;main.c: 855: keyCount = 120;
"855
[e = _keyCount -> -> 120 `i `uc ]
[; ;main.c: 856: if(longPressFlag == 0)
"856
[e $ ! == -> _longPressFlag `i -> 0 `i 180  ]
[; ;main.c: 857: {
"857
{
[; ;main.c: 858: longPressFlag = 1;
"858
[e = _longPressFlag -> -> 1 `i `uc ]
[; ;main.c: 859: return 2;
"859
[e ) -> -> 2 `i `uc ]
[e $UE 177  ]
"860
}
[e :U 180 ]
"861
}
[e :U 179 ]
"862
}
[; ;main.c: 860: }
[; ;main.c: 861: }
[; ;main.c: 862: }
[e $U 181  ]
"863
[e :U 178 ]
[; ;main.c: 863: else
[; ;main.c: 864: {
"864
{
[; ;main.c: 865: if(keyCount >= 120)
"865
[e $ ! >= -> _keyCount `i -> 120 `i 182  ]
[; ;main.c: 866: {
"866
{
[; ;main.c: 867: keyCount = 0;
"867
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 868: longPressFlag = 0;
"868
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 869: return 0;
"869
[e ) -> -> 0 `i `uc ]
[e $UE 177  ]
"870
}
[; ;main.c: 870: }
[e $U 183  ]
"871
[e :U 182 ]
[; ;main.c: 871: else if(keyCount >= 5)
[e $ ! >= -> _keyCount `i -> 5 `i 184  ]
[; ;main.c: 872: {
"872
{
[; ;main.c: 873: keyCount = 0;
"873
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 874: return 1;
"874
[e ) -> -> 1 `i `uc ]
[e $UE 177  ]
"875
}
[e :U 184 ]
"876
[e :U 183 ]
[; ;main.c: 875: }
[; ;main.c: 876: keyCount = 0;
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 877: longPressFlag = 0;
"877
[e = _longPressFlag -> -> 0 `i `uc ]
"878
}
[e :U 181 ]
[; ;main.c: 878: }
[; ;main.c: 879: return 0;
"879
[e ) -> -> 0 `i `uc ]
[e $UE 177  ]
[; ;main.c: 880: }
"880
[e :UE 177 ]
}
"882
[v _keyRead2 `(uc ~T0 @X0 1 ef1`uc ]
"883
{
[; ;main.c: 882: char keyRead2(char keyStatus)
[; ;main.c: 883: {
[e :U _keyRead2 ]
"882
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"883
[f ]
[; ;main.c: 884: if(keyStatus)
"884
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 186  ]
[; ;main.c: 885: {
"885
{
[; ;main.c: 886: keyCount2++;
"886
[e ++ _keyCount2 -> -> 1 `i `uc ]
[; ;main.c: 887: if(keyCount2 >= 120)
"887
[e $ ! >= -> _keyCount2 `i -> 120 `i 187  ]
[; ;main.c: 888: {
"888
{
[; ;main.c: 889: keyCount2 = 120;
"889
[e = _keyCount2 -> -> 120 `i `uc ]
"890
}
[e :U 187 ]
"891
}
[; ;main.c: 890: }
[; ;main.c: 891: }
[e $U 188  ]
"892
[e :U 186 ]
[; ;main.c: 892: else
[; ;main.c: 893: {
"893
{
[; ;main.c: 894: if(keyCount2 >= 5)
"894
[e $ ! >= -> _keyCount2 `i -> 5 `i 189  ]
[; ;main.c: 895: {
"895
{
[; ;main.c: 896: keyCount2 = 0;
"896
[e = _keyCount2 -> -> 0 `i `uc ]
[; ;main.c: 897: return 1;
"897
[e ) -> -> 1 `i `uc ]
[e $UE 185  ]
"898
}
[e :U 189 ]
[; ;main.c: 898: }
[; ;main.c: 899: keyCount2 = 0;
"899
[e = _keyCount2 -> -> 0 `i `uc ]
"900
}
[e :U 188 ]
[; ;main.c: 900: }
[; ;main.c: 901: return 0;
"901
[e ) -> -> 0 `i `uc ]
[e $UE 185  ]
[; ;main.c: 902: }
"902
[e :UE 185 ]
}
"904
[v _keyRead3 `(uc ~T0 @X0 1 ef1`uc ]
"905
{
[; ;main.c: 904: char keyRead3(char keyStatus)
[; ;main.c: 905: {
[e :U _keyRead3 ]
"904
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"905
[f ]
[; ;main.c: 906: if(keyStatus)
"906
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 191  ]
[; ;main.c: 907: {
"907
{
[; ;main.c: 908: keyCount3++;
"908
[e ++ _keyCount3 -> -> 1 `i `uc ]
[; ;main.c: 909: if(keyCount3 >= 120)
"909
[e $ ! >= -> _keyCount3 `i -> 120 `i 192  ]
[; ;main.c: 910: {
"910
{
[; ;main.c: 911: keyCount3 = 120;
"911
[e = _keyCount3 -> -> 120 `i `uc ]
"912
}
[e :U 192 ]
"913
}
[; ;main.c: 912: }
[; ;main.c: 913: }
[e $U 193  ]
"914
[e :U 191 ]
[; ;main.c: 914: else
[; ;main.c: 915: {
"915
{
[; ;main.c: 916: if(keyCount3 >= 5)
"916
[e $ ! >= -> _keyCount3 `i -> 5 `i 194  ]
[; ;main.c: 917: {
"917
{
[; ;main.c: 918: keyCount3 = 0;
"918
[e = _keyCount3 -> -> 0 `i `uc ]
[; ;main.c: 919: return 1;
"919
[e ) -> -> 1 `i `uc ]
[e $UE 190  ]
"920
}
[e :U 194 ]
[; ;main.c: 920: }
[; ;main.c: 921: keyCount3 = 0;
"921
[e = _keyCount3 -> -> 0 `i `uc ]
"922
}
[e :U 193 ]
[; ;main.c: 922: }
[; ;main.c: 923: return 0;
"923
[e ) -> -> 0 `i `uc ]
[e $UE 190  ]
[; ;main.c: 924: }
"924
[e :UE 190 ]
}
"926
[v _keyCtr `(v ~T0 @X0 1 ef ]
"927
{
[; ;main.c: 926: void keyCtr()
[; ;main.c: 927: {
[e :U _keyCtr ]
[f ]
"928
[v _kclick `uc ~T0 @X0 1 a ]
[; ;main.c: 928: char kclick = keyRead(0x01 & (~PORTB));
[e = _kclick ( _keyRead (1 -> & -> 1 `i ~ -> _PORTB `i `uc ]
[; ;main.c: 929: if(kclick == 2)
"929
[e $ ! == -> _kclick `i -> 2 `i 196  ]
[; ;main.c: 930: {
"930
{
[; ;main.c: 931: if(workStep > 0)
"931
[e $ ! > -> _workStep `i -> 0 `i 197  ]
[; ;main.c: 932: {
"932
{
[; ;main.c: 933: count1200s = 0;
"933
[e = _count1200s -> -> 0 `i `ui ]
[; ;main.c: 934: workStep = 0;
"934
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 935: showWorkStepTime = 0;
"935
[e = _showWorkStepTime -> -> 0 `i `uc ]
[; ;main.c: 936: pwm1Stop();
"936
[e ( _pwm1Stop ..  ]
[; ;main.c: 937: PORTA &= 0xE3;
"937
[e =& _PORTA -> -> 227 `i `uc ]
[; ;main.c: 938: PORTC &= 0xFE;
"938
[e =& _PORTC -> -> 254 `i `uc ]
[; ;main.c: 939: motorTime = 0;
"939
[e = _motorTime -> -> 0 `i `ui ]
[; ;main.c: 940: beepTime = 30;
"940
[e = _beepTime -> -> 30 `i `uc ]
"941
}
[; ;main.c: 941: }
[e $U 198  ]
"942
[e :U 197 ]
[; ;main.c: 942: else if(lowBatFlag == 0)
[e $ ! == -> _lowBatFlag `i -> 0 `i 199  ]
[; ;main.c: 943: {
"943
{
[; ;main.c: 944: workStep = 1;
"944
[e = _workStep -> -> 1 `i `uc ]
[; ;main.c: 945: showWorkStepTime = 200;
"945
[e = _showWorkStepTime -> -> 200 `i `uc ]
[; ;main.c: 946: showOffTime = 0;
"946
[e = _showOffTime -> -> 0 `i `uc ]
[; ;main.c: 947: count1200s = 0;
"947
[e = _count1200s -> -> 0 `i `ui ]
[; ;main.c: 948: beepTime = 30;
"948
[e = _beepTime -> -> 30 `i `uc ]
"949
}
[; ;main.c: 949: }
[e $U 200  ]
"950
[e :U 199 ]
[; ;main.c: 950: else
[; ;main.c: 951: {
"951
{
[; ;main.c: 952: showBatStep = 0;
"952
[e = _showBatStep -> -> 0 `i `uc ]
[; ;main.c: 953: showOffTime = 200;
"953
[e = _showOffTime -> -> 200 `i `uc ]
"954
}
[e :U 200 ]
[e :U 198 ]
"955
}
[; ;main.c: 954: }
[; ;main.c: 955: }
[e $U 201  ]
"956
[e :U 196 ]
[; ;main.c: 956: else if(kclick == 1)
[e $ ! == -> _kclick `i -> 1 `i 202  ]
[; ;main.c: 957: {
"957
{
[; ;main.c: 958: if(workStep > 0)
"958
[e $ ! > -> _workStep `i -> 0 `i 203  ]
[; ;main.c: 959: {
"959
{
[; ;main.c: 960: if(++workStep > 3)
"960
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 3 `i 204  ]
[; ;main.c: 961: {
"961
{
[; ;main.c: 962: workStep = 1;
"962
[e = _workStep -> -> 1 `i `uc ]
"963
}
[e :U 204 ]
[; ;main.c: 963: }
[; ;main.c: 964: showWorkStepTime = 200;
"964
[e = _showWorkStepTime -> -> 200 `i `uc ]
[; ;main.c: 965: tempCheckTime = 0;
"965
[e = _tempCheckTime -> -> 0 `i `uc ]
"966
}
[; ;main.c: 966: }
[e $U 205  ]
"967
[e :U 203 ]
[; ;main.c: 967: else
[; ;main.c: 968: {
"968
{
[; ;main.c: 969: showOffTime = 200;
"969
[e = _showOffTime -> -> 200 `i `uc ]
"970
}
[e :U 205 ]
"971
}
[e :U 202 ]
"972
[e :U 201 ]
[; ;main.c: 970: }
[; ;main.c: 971: }
[; ;main.c: 972: kclick = keyRead2(0x80 & (~PORTA));
[e = _kclick ( _keyRead2 (1 -> & -> 128 `i ~ -> _PORTA `i `uc ]
[; ;main.c: 973: if(kclick == 1 && workStep > 0)
"973
[e $ ! && == -> _kclick `i -> 1 `i > -> _workStep `i -> 0 `i 206  ]
[; ;main.c: 974: {
"974
{
[; ;main.c: 975: zfStep = 1;
"975
[e = _zfStep -> -> 1 `i `uc ]
[; ;main.c: 976: PORTA &= 0xE7;
"976
[e =& _PORTA -> -> 231 `i `uc ]
[; ;main.c: 977: if(motorTime < 800)
"977
[e $ ! < _motorTime -> -> 800 `i `ui 207  ]
[; ;main.c: 978: {
"978
{
[; ;main.c: 979: motorTime = 1610;
"979
[e = _motorTime -> -> 1610 `i `ui ]
"980
}
[; ;main.c: 980: }
[e $U 208  ]
"981
[e :U 207 ]
[; ;main.c: 981: else
[; ;main.c: 982: {
"982
{
[; ;main.c: 983: motorTime = 0;
"983
[e = _motorTime -> -> 0 `i `ui ]
"985
}
[e :U 208 ]
"986
}
[e :U 206 ]
[; ;main.c: 985: }
[; ;main.c: 986: }
[; ;main.c: 987: kclick = keyRead3(0x01 & (~PORTA));
"987
[e = _kclick ( _keyRead3 (1 -> & -> 1 `i ~ -> _PORTA `i `uc ]
[; ;main.c: 988: if(kclick == 1 && workStep > 0)
"988
[e $ ! && == -> _kclick `i -> 1 `i > -> _workStep `i -> 0 `i 209  ]
[; ;main.c: 989: {
"989
{
[; ;main.c: 990: zfStep = 2;
"990
[e = _zfStep -> -> 2 `i `uc ]
[; ;main.c: 991: PORTA &= 0xE7;
"991
[e =& _PORTA -> -> 231 `i `uc ]
[; ;main.c: 992: if(motorTime < 800)
"992
[e $ ! < _motorTime -> -> 800 `i `ui 210  ]
[; ;main.c: 993: {
"993
{
[; ;main.c: 994: motorTime = 1610;
"994
[e = _motorTime -> -> 1610 `i `ui ]
"995
}
[; ;main.c: 995: }
[e $U 211  ]
"996
[e :U 210 ]
[; ;main.c: 996: else
[; ;main.c: 997: {
"997
{
[; ;main.c: 998: motorTime = 0;
"998
[e = _motorTime -> -> 0 `i `ui ]
"1000
}
[e :U 211 ]
"1001
}
[e :U 209 ]
[; ;main.c: 1000: }
[; ;main.c: 1001: }
[; ;main.c: 1002: }
"1002
[e :UE 195 ]
}
"1004
[v _pwm1Init `(v ~T0 @X0 1 ef ]
"1005
{
[; ;main.c: 1004: void pwm1Init()
[; ;main.c: 1005: {
[e :U _pwm1Init ]
[f ]
[; ;main.c: 1006: RA2 = 1;
"1006
[e = _RA2 -> -> 1 `i `b ]
[; ;main.c: 1007: }
"1007
[e :UE 212 ]
}
"1008
[v _pwm1Stop `(v ~T0 @X0 1 ef ]
"1009
{
[; ;main.c: 1008: void pwm1Stop()
[; ;main.c: 1009: {
[e :U _pwm1Stop ]
[f ]
[; ;main.c: 1010: RA2 = 0;
"1010
[e = _RA2 -> -> 0 `i `b ]
[; ;main.c: 1011: }
"1011
[e :UE 213 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"1018
[v _main `(v ~T0 @X0 1 ef ]
"1019
{
[; ;main.c: 1018: void main()
[; ;main.c: 1019: {
[e :U _main ]
[f ]
[; ;main.c: 1021: Init_System();
"1021
[e ( _Init_System ..  ]
[; ;main.c: 1023: firstTime = 200;
"1023
[e = _firstTime -> -> 200 `i `uc ]
[; ;main.c: 1024: while(1)
"1024
[e :U 216 ]
[; ;main.c: 1025: {
"1025
{
[; ;main.c: 1026: refreshLed();
"1026
[e ( _refreshLed ..  ]
[; ;main.c: 1027: if(B_MainLoop)
"1027
[e $ ! _B_MainLoop 218  ]
[; ;main.c: 1028: {
"1028
{
[; ;main.c: 1029: B_MainLoop = 0;
"1029
[e = _B_MainLoop -> -> 0 `i `b ]
[; ;main.c: 1030: asm("clrwdt");
"1030
[; <" clrwdt ;# ">
[; ;main.c: 1031: keyCtr();
"1031
[e ( _keyCtr ..  ]
[; ;main.c: 1032: workCtr();
"1032
[e ( _workCtr ..  ]
[; ;main.c: 1033: chrgCtr();
"1033
[e ( _chrgCtr ..  ]
[; ;main.c: 1034: checkBatAD();
"1034
[e ( _checkBatAD ..  ]
[; ;main.c: 1035: if(workStep == 0 && keyCount == 0 && chrgFlag == 0 && firstTime == 0 && showOffTime == 0)
"1035
[e $ ! && && && && == -> _workStep `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _chrgFlag `i -> 0 `i == -> _firstTime `i -> 0 `i == -> _showOffTime `i -> 0 `i 219  ]
[; ;main.c: 1036: {
"1036
{
[; ;main.c: 1038: if(++sleepTime > 200)
"1038
[e $ ! > =+ _sleepTime -> -> 1 `i `ui -> -> 200 `i `ui 220  ]
[; ;main.c: 1039: {
"1039
{
[; ;main.c: 1040: Sleep_Mode();
"1040
[e ( _Sleep_Mode ..  ]
"1041
}
[e :U 220 ]
"1042
}
[; ;main.c: 1041: }
[; ;main.c: 1042: }
[e $U 221  ]
"1043
[e :U 219 ]
[; ;main.c: 1043: else
[; ;main.c: 1044: {
"1044
{
[; ;main.c: 1045: sleepTime = 0;
"1045
[e = _sleepTime -> -> 0 `i `ui ]
"1046
}
[e :U 221 ]
"1049
}
[e :U 218 ]
"1050
}
[e :U 215 ]
"1024
[e $U 216  ]
[e :U 217 ]
[; ;main.c: 1046: }
[; ;main.c: 1049: }
[; ;main.c: 1050: }
[; ;main.c: 1051: }
"1051
[e :UE 214 ]
}
