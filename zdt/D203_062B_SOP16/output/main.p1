Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"76 C:\mcuproject\scm\zdt\D203_062B_SOP16\main.c
[v _Init_System `(v ~T0 @X0 0 ef ]
"77
[v _AD_Init `(v ~T0 @X0 0 ef ]
"81
[v _chrgCtr `(v ~T0 @X0 0 ef ]
"83
[v _checkBatAD `(v ~T0 @X0 0 ef ]
"85
[v _keyCtr `(v ~T0 @X0 0 ef ]
"86
[v _workCtr `(v ~T0 @X0 0 ef ]
"78
[v _Sleep_Mode `(v ~T0 @X0 0 ef ]
"79
[v _pwmInit `(v ~T0 @X0 0 ef ]
"80
[v _pwmStop `(v ~T0 @X0 0 ef ]
"73
[v _ADC_Sample `(uc ~T0 @X0 0 ef2`uc`uc ]
[v F479 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF479 ~T0 @X0 0 e ]
[p i __delay ]
"4 C:\mcuproject\scm\zdt\D203_062B_SOP16\main.c
[p n 752 ]
"5
[p n 373 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\SC8P062BD.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;SC8P062BD.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;SC8P062BD.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;SC8P062BD.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;SC8P062BD.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;SC8P062BD.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;SC8P062BD.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;SC8P062BD.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;SC8P062BD.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMPCON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 20: volatile unsigned char CMPCON0 @ 0x0F;
"21
[v _CMPCON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;SC8P062BD.h: 21: volatile unsigned char CMPCON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;SC8P062BD.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;SC8P062BD.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;SC8P062BD.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P062BD.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;SC8P062BD.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;SC8P062BD.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;SC8P062BD.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;SC8P062BD.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;SC8P062BD.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;SC8P062BD.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;SC8P062BD.h: 44: volatile unsigned char ANSEL0 @ 0x93;
"45
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;SC8P062BD.h: 45: volatile unsigned char ANSEL1 @ 0x94;
"46
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;SC8P062BD.h: 46: volatile unsigned char ADCON0 @ 0x95;
"47
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;SC8P062BD.h: 47: volatile unsigned char ADCON1 @ 0x96;
"48
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 48: volatile unsigned char ADRESL @ 0x98;
"49
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 49: volatile unsigned char ADRESH @ 0x99;
"50
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 50: volatile unsigned char PWMD2L @ 0x9B;
"51
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 51: volatile unsigned char PWMD3L @ 0x9C;
"52
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 52: volatile unsigned char PWM23DT @ 0x9D;
"53
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 53: volatile unsigned char PWMD23H @ 0x9E;
"55
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 55: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"56
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 56: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"57
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 57: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"58
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 58: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"59
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 59: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"60
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 60: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"61
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 61: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"62
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 62: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"65
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 65: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"66
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 66: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"67
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 67: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"68
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 68: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"69
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 69: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"70
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 70: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"71
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 71: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"72
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 72: volatile bit C @ ((unsigned)&STATUS*8)+0;
"75
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P062BD.h: 75: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"76
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P062BD.h: 76: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"77
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P062BD.h: 77: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"78
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P062BD.h: 78: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"79
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P062BD.h: 79: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"80
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P062BD.h: 80: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"81
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P062BD.h: 81: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"82
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P062BD.h: 82: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"85
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;SC8P062BD.h: 85: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"86
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;SC8P062BD.h: 86: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"87
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;SC8P062BD.h: 87: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"88
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;SC8P062BD.h: 88: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"89
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;SC8P062BD.h: 89: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"90
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;SC8P062BD.h: 90: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"91
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;SC8P062BD.h: 91: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"92
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;SC8P062BD.h: 92: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"95
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;SC8P062BD.h: 95: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"96
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;SC8P062BD.h: 96: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"97
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;SC8P062BD.h: 97: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"98
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;SC8P062BD.h: 98: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"99
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;SC8P062BD.h: 99: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"100
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;SC8P062BD.h: 100: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"101
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;SC8P062BD.h: 101: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"104
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;SC8P062BD.h: 104: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"105
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;SC8P062BD.h: 105: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"106
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;SC8P062BD.h: 106: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"107
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;SC8P062BD.h: 107: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"108
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;SC8P062BD.h: 108: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"109
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;SC8P062BD.h: 109: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"110
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;SC8P062BD.h: 110: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"111
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P062BD.h: 111: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"114
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;SC8P062BD.h: 114: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"115
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;SC8P062BD.h: 115: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"116
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;SC8P062BD.h: 116: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"117
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;SC8P062BD.h: 117: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"118
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P062BD.h: 118: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"119
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;SC8P062BD.h: 119: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"120
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;SC8P062BD.h: 120: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"121
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P062BD.h: 121: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"124
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;SC8P062BD.h: 124: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"125
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;SC8P062BD.h: 125: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"126
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;SC8P062BD.h: 126: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"127
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;SC8P062BD.h: 127: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"128
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;SC8P062BD.h: 128: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"129
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;SC8P062BD.h: 129: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"130
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;SC8P062BD.h: 130: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"131
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;SC8P062BD.h: 131: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"134
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;SC8P062BD.h: 134: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"135
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;SC8P062BD.h: 135: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"136
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;SC8P062BD.h: 136: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"137
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;SC8P062BD.h: 137: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"138
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;SC8P062BD.h: 138: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"139
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;SC8P062BD.h: 139: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"140
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;SC8P062BD.h: 140: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"143
[v _CMPIF `Vb ~T0 @X0 1 e@109 ]
[; ;SC8P062BD.h: 143: volatile bit CMPIF @ ((unsigned)&PIR1*8)+5;
"144
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;SC8P062BD.h: 144: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"145
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;SC8P062BD.h: 145: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"146
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;SC8P062BD.h: 146: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"147
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;SC8P062BD.h: 147: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"150
[v _CMPIE `Vb ~T0 @X0 1 e@117 ]
[; ;SC8P062BD.h: 150: volatile bit CMPIE @ ((unsigned)&PIE1*8)+5;
"151
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;SC8P062BD.h: 151: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"152
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;SC8P062BD.h: 152: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"153
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;SC8P062BD.h: 153: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"154
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;SC8P062BD.h: 154: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"157
[v _CMPEN `Vb ~T0 @X0 1 e@127 ]
[; ;SC8P062BD.h: 157: volatile bit CMPEN @ ((unsigned)&CMPCON0*8)+7;
"158
[v _CMPPS `Vb ~T0 @X0 1 e@126 ]
[; ;SC8P062BD.h: 158: volatile bit CMPPS @ ((unsigned)&CMPCON0*8)+6;
"159
[v _CMPNS2 `Vb ~T0 @X0 1 e@125 ]
[; ;SC8P062BD.h: 159: volatile bit CMPNS2 @ ((unsigned)&CMPCON0*8)+5;
"160
[v _CMPNS1 `Vb ~T0 @X0 1 e@124 ]
[; ;SC8P062BD.h: 160: volatile bit CMPNS1 @ ((unsigned)&CMPCON0*8)+4;
"161
[v _CMPNS0 `Vb ~T0 @X0 1 e@123 ]
[; ;SC8P062BD.h: 161: volatile bit CMPNS0 @ ((unsigned)&CMPCON0*8)+3;
"162
[v _CMPNV `Vb ~T0 @X0 1 e@122 ]
[; ;SC8P062BD.h: 162: volatile bit CMPNV @ ((unsigned)&CMPCON0*8)+2;
"163
[v _CMPOUT `Vb ~T0 @X0 1 e@121 ]
[; ;SC8P062BD.h: 163: volatile bit CMPOUT @ ((unsigned)&CMPCON0*8)+1;
"164
[v _CMPOEN `Vb ~T0 @X0 1 e@120 ]
[; ;SC8P062BD.h: 164: volatile bit CMPOEN @ ((unsigned)&CMPCON0*8)+0;
"167
[v _CMPIM `Vb ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 167: volatile bit CMPIM @ ((unsigned)&CMPCON1*8)+7;
"168
[v _AN_EN `Vb ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 168: volatile bit AN_EN @ ((unsigned)&CMPCON1*8)+6;
"169
[v _RBIAS_H `Vb ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 169: volatile bit RBIAS_H @ ((unsigned)&CMPCON1*8)+5;
"170
[v _RBIAS_L `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P062BD.h: 170: volatile bit RBIAS_L @ ((unsigned)&CMPCON1*8)+4;
"171
[v _LVDS3 `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P062BD.h: 171: volatile bit LVDS3 @ ((unsigned)&CMPCON1*8)+3;
"172
[v _LVDS2 `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P062BD.h: 172: volatile bit LVDS2 @ ((unsigned)&CMPCON1*8)+2;
"173
[v _LVDS1 `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 173: volatile bit LVDS1 @ ((unsigned)&CMPCON1*8)+1;
"174
[v _LVDS0 `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P062BD.h: 174: volatile bit LVDS0 @ ((unsigned)&CMPCON1*8)+0;
"177
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;SC8P062BD.h: 177: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"178
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 178: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"179
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 179: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"180
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 180: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"181
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 181: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"182
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;SC8P062BD.h: 182: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"183
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 183: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"184
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 184: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"187
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;SC8P062BD.h: 187: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"188
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;SC8P062BD.h: 188: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"189
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;SC8P062BD.h: 189: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"190
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;SC8P062BD.h: 190: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"193
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;SC8P062BD.h: 193: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"194
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P062BD.h: 194: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"195
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;SC8P062BD.h: 195: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"196
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;SC8P062BD.h: 196: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"197
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;SC8P062BD.h: 197: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"198
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;SC8P062BD.h: 198: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"199
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;SC8P062BD.h: 199: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"200
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;SC8P062BD.h: 200: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"203
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;SC8P062BD.h: 203: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"204
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;SC8P062BD.h: 204: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"205
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;SC8P062BD.h: 205: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"206
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;SC8P062BD.h: 206: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"207
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;SC8P062BD.h: 207: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"208
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;SC8P062BD.h: 208: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"211
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;SC8P062BD.h: 211: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"212
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;SC8P062BD.h: 212: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"213
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;SC8P062BD.h: 213: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"214
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;SC8P062BD.h: 214: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"215
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;SC8P062BD.h: 215: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"216
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;SC8P062BD.h: 216: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"219
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;SC8P062BD.h: 219: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"220
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;SC8P062BD.h: 220: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"221
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;SC8P062BD.h: 221: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"222
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;SC8P062BD.h: 222: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"223
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;SC8P062BD.h: 223: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"226
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;SC8P062BD.h: 226: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"227
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;SC8P062BD.h: 227: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"228
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;SC8P062BD.h: 228: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"229
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;SC8P062BD.h: 229: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"232
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;SC8P062BD.h: 232: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"233
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;SC8P062BD.h: 233: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"234
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;SC8P062BD.h: 234: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"235
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;SC8P062BD.h: 235: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"236
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;SC8P062BD.h: 236: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"237
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;SC8P062BD.h: 237: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"240
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;SC8P062BD.h: 240: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"241
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;SC8P062BD.h: 241: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"242
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;SC8P062BD.h: 242: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"243
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;SC8P062BD.h: 243: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"244
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;SC8P062BD.h: 244: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"245
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;SC8P062BD.h: 245: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"248
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;SC8P062BD.h: 248: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"249
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;SC8P062BD.h: 249: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"250
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;SC8P062BD.h: 250: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"251
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;SC8P062BD.h: 251: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"252
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;SC8P062BD.h: 252: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"253
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;SC8P062BD.h: 253: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"256
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;SC8P062BD.h: 256: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"257
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;SC8P062BD.h: 257: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"258
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;SC8P062BD.h: 258: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"259
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;SC8P062BD.h: 259: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"260
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;SC8P062BD.h: 260: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"261
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;SC8P062BD.h: 261: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"264
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;SC8P062BD.h: 264: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"265
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;SC8P062BD.h: 265: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"266
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;SC8P062BD.h: 266: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"267
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;SC8P062BD.h: 267: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"268
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;SC8P062BD.h: 268: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"269
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;SC8P062BD.h: 269: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"272
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;SC8P062BD.h: 272: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"273
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;SC8P062BD.h: 273: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"274
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;SC8P062BD.h: 274: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"275
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;SC8P062BD.h: 275: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"276
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;SC8P062BD.h: 276: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"277
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;SC8P062BD.h: 277: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"280
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;SC8P062BD.h: 280: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"281
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;SC8P062BD.h: 281: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"282
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;SC8P062BD.h: 282: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"283
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;SC8P062BD.h: 283: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"284
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;SC8P062BD.h: 284: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"285
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;SC8P062BD.h: 285: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"288
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;SC8P062BD.h: 288: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"289
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;SC8P062BD.h: 289: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"290
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;SC8P062BD.h: 290: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"291
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;SC8P062BD.h: 291: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"292
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;SC8P062BD.h: 292: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"293
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;SC8P062BD.h: 293: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"296
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;SC8P062BD.h: 296: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"297
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;SC8P062BD.h: 297: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"298
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;SC8P062BD.h: 298: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"299
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;SC8P062BD.h: 299: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"300
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;SC8P062BD.h: 300: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"301
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;SC8P062BD.h: 301: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"302
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;SC8P062BD.h: 302: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"305
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;SC8P062BD.h: 305: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"306
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;SC8P062BD.h: 306: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"307
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;SC8P062BD.h: 307: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"308
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;SC8P062BD.h: 308: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"309
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;SC8P062BD.h: 309: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"310
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;SC8P062BD.h: 310: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"311
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;SC8P062BD.h: 311: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"312
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;SC8P062BD.h: 312: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"315
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;SC8P062BD.h: 315: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"316
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;SC8P062BD.h: 316: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"317
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;SC8P062BD.h: 317: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"318
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;SC8P062BD.h: 318: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"319
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;SC8P062BD.h: 319: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"322
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;SC8P062BD.h: 322: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"323
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;SC8P062BD.h: 323: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"324
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;SC8P062BD.h: 324: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"325
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;SC8P062BD.h: 325: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"18 C:\mcuproject\scm\zdt\D203_062B_SOP16\main.c
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 18: volatile unsigned int adresult;
"19
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 19: volatile unsigned int result;
"20
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 20: volatile unsigned char test_adc;
"21
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 21: volatile unsigned int power_ad;
"22
[v _intCount `uc ~T0 @X0 1 e ]
[; ;main.c: 22: unsigned char intCount;
"23
[v _count1s `uc ~T0 @X0 1 e ]
[; ;main.c: 23: unsigned char count1s;
"24
[v _IntFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 24: unsigned char IntFlag;
"25
[v _chrgFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 25: unsigned char chrgFlag;
"26
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 26: unsigned char chrgFullFlag;
"27
[v _intCount10 `uc ~T0 @X0 1 e ]
[; ;main.c: 27: unsigned char intCount10;
"28
[v _outADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 28: unsigned int outADValue;
"29
[v _batADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 29: unsigned int batADValue;
"30
[v _countHalfFull `uc ~T0 @X0 1 e ]
[; ;main.c: 30: unsigned char countHalfFull;
"31
[v _protectFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 31: unsigned char protectFlag;
"32
[v _workOverOutTime `uc ~T0 @X0 1 e ]
[; ;main.c: 32: unsigned char workOverOutTime;
"33
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 33: unsigned char workStep = 0;
"34
[v _ledCnt `uc ~T0 @X0 1 e ]
[; ;main.c: 34: unsigned char ledCnt;
"35
[v _ledStep `uc ~T0 @X0 1 e ]
[; ;main.c: 35: unsigned char ledStep;
"36
[v _keyCount `uc ~T0 @X0 1 e ]
[; ;main.c: 36: unsigned char keyCount;
"37
[v _longPressFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 37: unsigned char longPressFlag;
"38
[v _maxDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 38: unsigned char maxDuty;
"39
[v _overCount `uc ~T0 @X0 1 e ]
[; ;main.c: 39: unsigned char overCount;
"40
[v _addPowerCount `uc ~T0 @X0 1 e ]
[; ;main.c: 40: unsigned char addPowerCount;
"41
[v _tempDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 41: unsigned char tempDuty;
"42
[v _startTime `uc ~T0 @X0 1 e ]
[; ;main.c: 42: unsigned char startTime;
"43
[v _firstTime `uc ~T0 @X0 1 e ]
[; ;main.c: 43: unsigned char firstTime;
"44
[v _overChrgTime `uc ~T0 @X0 1 e ]
[; ;main.c: 44: unsigned char overChrgTime;
"45
[v _pwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 45: unsigned char pwStep;
"46
[v _prePwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 46: unsigned char prePwStep;
"47
[v _count50s `ui ~T0 @X0 1 e ]
[; ;main.c: 47: unsigned int count50s;
"48
[v _reChrgCount `uc ~T0 @X0 1 e ]
[; ;main.c: 48: unsigned char reChrgCount;
"49
[v _lockLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 49: unsigned char lockLedStep;
"50
[v _showBatTime `uc ~T0 @X0 1 e ]
[; ;main.c: 50: unsigned char showBatTime;
"51
[v _chrgMode `uc ~T0 @X0 1 e ]
[i _chrgMode
-> -> 0 `i `uc
]
[; ;main.c: 51: unsigned char chrgMode = 0;
"52
[v _chrgMaxAD `uc ~T0 @X0 1 e ]
[i _chrgMaxAD
-> -> 0 `i `uc
]
[; ;main.c: 52: unsigned char chrgMaxAD = 0;
"53
[v _lockCount `uc ~T0 @X0 1 e ]
[i _lockCount
-> -> 0 `i `uc
]
[; ;main.c: 53: unsigned char lockCount = 0;
"54
[v _fullCount `ui ~T0 @X0 1 e ]
[i _fullCount
-> -> 0 `i `ui
]
[; ;main.c: 54: unsigned int fullCount = 0;
"55
[v _addTime `uc ~T0 @X0 1 e ]
[; ;main.c: 55: unsigned char addTime;
"56
[v _subTime `uc ~T0 @X0 1 e ]
[; ;main.c: 56: unsigned char subTime;
"57
[v _chrgWaitTime `uc ~T0 @X0 1 e ]
[; ;main.c: 57: unsigned char chrgWaitTime;
"58
[v _ledCntTime `uc ~T0 @X0 1 e ]
[; ;main.c: 58: unsigned char ledCntTime;
"59
[v _count5s `ui ~T0 @X0 1 e ]
[i _count5s
-> -> 0 `i `ui
]
[; ;main.c: 59: unsigned int count5s = 0;
"60
[v _overWorkTime `uc ~T0 @X0 1 e ]
[; ;main.c: 60: unsigned char overWorkTime;
"61
[v _preLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 61: unsigned char preLedStep;
"62
[v _count8s `ui ~T0 @X0 1 e ]
[; ;main.c: 62: unsigned int count8s;
"63
[v _count900s `ui ~T0 @X0 1 e ]
[; ;main.c: 63: unsigned int count900s;
"64
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 64: unsigned char lowBatFlag = 0;
"65
[v _sleepTime `uc ~T0 @X0 1 e ]
[; ;main.c: 65: unsigned char sleepTime;
"66
[v _startChrgTime `uc ~T0 @X0 1 e ]
[i _startChrgTime
-> -> 0 `i `uc
]
[; ;main.c: 66: unsigned char startChrgTime = 0;
"67
[v _ledTime `uc ~T0 @X0 1 e ]
[i _ledTime
-> -> 0 `i `uc
]
[; ;main.c: 67: unsigned char ledTime = 0;
"68
[v _ledDuty `uc ~T0 @X0 1 e ]
[i _ledDuty
-> -> 0 `i `uc
]
[; ;main.c: 68: unsigned char ledDuty = 0;
"69
[v _ledBreathTime `uc ~T0 @X0 1 e ]
[i _ledBreathTime
-> -> 0 `i `uc
]
[; ;main.c: 69: unsigned char ledBreathTime = 0;
"70
[v _cDuty `uc ~T0 @X0 1 e ]
[i _cDuty
-> -> 0 `i `uc
]
[; ;main.c: 70: unsigned char cDuty = 0;
"71
[v _count2 `uc ~T0 @X0 1 e ]
[i _count2
-> -> 0 `i `uc
]
[; ;main.c: 71: unsigned char count2 = 0;
[; ;main.c: 73: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
[; ;main.c: 74: void DelayXms(unsigned char x);
[; ;main.c: 75: unsigned char ADC_Result(unsigned char adch);
[; ;main.c: 76: void Init_System();
[; ;main.c: 77: void AD_Init();
[; ;main.c: 78: void Sleep_Mode();
[; ;main.c: 79: void pwmInit();
[; ;main.c: 80: void pwmStop();
[; ;main.c: 81: void chrgCtr();
[; ;main.c: 82: void checkOutA();
[; ;main.c: 83: void checkBatAD();
[; ;main.c: 84: void ledShow();
[; ;main.c: 85: void keyCtr();
[; ;main.c: 86: void workCtr();
[; ;main.c: 87: void ledCtr();
[; ;main.c: 88: char keyRead(char keyStatus);
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F559 `(v ~T0 @X0 1 tf ]
"103
[v _Isr_Timer `IF559 ~T0 @X0 1 e ]
"104
{
[; ;main.c: 103: void interrupt Isr_Timer()
[; ;main.c: 104: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 105: if(TMR2IF)
"105
[e $ ! _TMR2IF 2  ]
[; ;main.c: 106: {
"106
{
[; ;main.c: 107: TMR2IF = 0;
"107
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 108: if(++intCount >= 160)
"108
[e $ ! >= -> =+ _intCount -> -> 1 `i `uc `i -> 160 `i 3  ]
[; ;main.c: 109: {
"109
{
[; ;main.c: 110: intCount = 0;
"110
[e = _intCount -> -> 0 `i `uc ]
[; ;main.c: 111: IntFlag = 1;
"111
[e = _IntFlag -> -> 1 `i `uc ]
[; ;main.c: 112: if(++count1s >= 100)
"112
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 4  ]
[; ;main.c: 113: {
"113
{
[; ;main.c: 114: count1s = 0;
"114
[e = _count1s -> -> 0 `i `uc ]
"115
}
[e :U 4 ]
"116
}
[e :U 3 ]
"118
}
[e :U 2 ]
[; ;main.c: 115: }
[; ;main.c: 116: }
[; ;main.c: 118: }
[; ;main.c: 120: }
"120
[e :UE 1 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"126
[v _main `(v ~T0 @X0 1 ef ]
"127
{
[; ;main.c: 126: void main()
[; ;main.c: 127: {
[e :U _main ]
[f ]
[; ;main.c: 128: Init_System();
"128
[e ( _Init_System ..  ]
[; ;main.c: 129: AD_Init();
"129
[e ( _AD_Init ..  ]
[; ;main.c: 130: firstTime = 100;
"130
[e = _firstTime -> -> 100 `i `uc ]
[; ;main.c: 131: while (1)
"131
[e :U 7 ]
[; ;main.c: 132: {
"132
{
[; ;main.c: 133: asm("clrwdt");
"133
[; <" clrwdt ;# ">
[; ;main.c: 134: if(!IntFlag)
"134
[e $ ! ! != -> _IntFlag `i -> -> -> 0 `i `uc `i 9  ]
[; ;main.c: 135: continue;
"135
[e $U 6  ]
[e :U 9 ]
[; ;main.c: 136: IntFlag = 0;
"136
[e = _IntFlag -> -> 0 `i `uc ]
[; ;main.c: 137: chrgCtr();
"137
[e ( _chrgCtr ..  ]
[; ;main.c: 138: checkBatAD();
"138
[e ( _checkBatAD ..  ]
[; ;main.c: 139: if(chrgFlag == 0 && lowBatFlag == 0)
"139
[e $ ! && == -> _chrgFlag `i -> 0 `i == -> _lowBatFlag `i -> 0 `i 10  ]
[; ;main.c: 140: {
"140
{
[; ;main.c: 141: keyCtr();
"141
[e ( _keyCtr ..  ]
"142
}
[e :U 10 ]
[; ;main.c: 142: }
[; ;main.c: 143: workCtr();
"143
[e ( _workCtr ..  ]
[; ;main.c: 144: if(chrgFlag == 0 && workStep == 0 && keyCount == 0 && firstTime == 0)
"144
[e $ ! && && && == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _firstTime `i -> 0 `i 11  ]
[; ;main.c: 145: {
"145
{
[; ;main.c: 146: if(++sleepTime >= 200)
"146
[e $ ! >= -> =+ _sleepTime -> -> 1 `i `uc `i -> 200 `i 12  ]
[; ;main.c: 147: {
"147
{
[; ;main.c: 148: sleepTime = 0;
"148
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 149: Sleep_Mode();
"149
[e ( _Sleep_Mode ..  ]
"150
}
[e :U 12 ]
"151
}
[; ;main.c: 150: }
[; ;main.c: 151: }
[e $U 13  ]
"152
[e :U 11 ]
[; ;main.c: 152: else
[; ;main.c: 153: {
"153
{
[; ;main.c: 154: sleepTime = 0;
"154
[e = _sleepTime -> -> 0 `i `uc ]
"155
}
[e :U 13 ]
"156
}
[e :U 6 ]
"131
[e $U 7  ]
[e :U 8 ]
[; ;main.c: 155: }
[; ;main.c: 156: }
[; ;main.c: 157: }
"157
[e :UE 5 ]
}
"160
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"161
{
[; ;main.c: 160: void chrgCtr()
[; ;main.c: 161: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 162: if(PORTB & 0x04)
"162
[e $ ! != & -> _PORTB `i -> 4 `i -> 0 `i 15  ]
[; ;main.c: 163: {
"163
{
[; ;main.c: 164: chrgFlag = 1;
"164
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 165: workStep = 0;
"165
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 166: lowBatFlag = 0;
"166
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 167: if(prePwStep < pwStep)
"167
[e $ ! < -> _prePwStep `i -> _pwStep `i 16  ]
[; ;main.c: 168: {
"168
{
[; ;main.c: 169: if(++count50s > 7200)
"169
[e $ ! > =+ _count50s -> -> 1 `i `ui -> -> 7200 `i `ui 17  ]
[; ;main.c: 170: {
"170
{
[; ;main.c: 171: count50s = 0;
"171
[e = _count50s -> -> 0 `i `ui ]
[; ;main.c: 172: prePwStep++;
"172
[e ++ _prePwStep -> -> 1 `i `uc ]
"173
}
[e :U 17 ]
"174
}
[; ;main.c: 173: }
[; ;main.c: 174: }
[e $U 18  ]
"175
[e :U 16 ]
[; ;main.c: 175: else
[; ;main.c: 176: {
"176
{
[; ;main.c: 177: count50s = 0;
"177
[e = _count50s -> -> 0 `i `ui ]
"178
}
[e :U 18 ]
[; ;main.c: 178: }
[; ;main.c: 179: if(prePwStep >= 99)
"179
[e $ ! >= -> _prePwStep `i -> 99 `i 19  ]
[; ;main.c: 180: {
"180
{
[; ;main.c: 181: PORTB &= 0xFC;
"181
[e =& _PORTB -> -> 252 `i `uc ]
"182
}
[; ;main.c: 182: }
[e $U 20  ]
"183
[e :U 19 ]
[; ;main.c: 183: else
[; ;main.c: 184: {
"184
{
[; ;main.c: 185: if(count1s < 50)
"185
[e $ ! < -> _count1s `i -> 50 `i 21  ]
[; ;main.c: 186: {
"186
{
[; ;main.c: 187: PORTB &= 0xFC;
"187
[e =& _PORTB -> -> 252 `i `uc ]
"188
}
[; ;main.c: 188: }
[e $U 22  ]
"189
[e :U 21 ]
[; ;main.c: 189: else
[; ;main.c: 190: {
"190
{
[; ;main.c: 191: PORTB |= 0x03;
"191
[e =| _PORTB -> -> 3 `i `uc ]
"192
}
[e :U 22 ]
"193
}
[e :U 20 ]
"194
}
[; ;main.c: 192: }
[; ;main.c: 193: }
[; ;main.c: 194: }
[e $U 23  ]
"195
[e :U 15 ]
[; ;main.c: 195: else
[; ;main.c: 196: {
"196
{
[; ;main.c: 197: chrgFlag = 0;
"197
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 198: chrgFullFlag = 0;
"198
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 199: if(prePwStep > 0 && prePwStep > pwStep)
"199
[e $ ! && > -> _prePwStep `i -> 0 `i > -> _prePwStep `i -> _pwStep `i 24  ]
[; ;main.c: 200: {
"200
{
[; ;main.c: 201: if(++count50s > 2000)
"201
[e $ ! > =+ _count50s -> -> 1 `i `ui -> -> 2000 `i `ui 25  ]
[; ;main.c: 202: {
"202
{
[; ;main.c: 203: count50s = 0;
"203
[e = _count50s -> -> 0 `i `ui ]
[; ;main.c: 204: prePwStep--;
"204
[e -- _prePwStep -> -> 1 `i `uc ]
"205
}
[e :U 25 ]
"206
}
[; ;main.c: 205: }
[; ;main.c: 206: }
[e $U 26  ]
"207
[e :U 24 ]
[; ;main.c: 207: else
[; ;main.c: 208: {
"208
{
[; ;main.c: 209: count50s = 0;
"209
[e = _count50s -> -> 0 `i `ui ]
"210
}
[e :U 26 ]
"211
}
[e :U 23 ]
[; ;main.c: 210: }
[; ;main.c: 211: }
[; ;main.c: 212: }
"212
[e :UE 14 ]
}
"216
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"217
{
[; ;main.c: 216: char keyRead(char keyStatus)
[; ;main.c: 217: {
[e :U _keyRead ]
"216
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"217
[f ]
[; ;main.c: 218: if(keyStatus)
"218
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 28  ]
[; ;main.c: 219: {
"219
{
[; ;main.c: 220: keyCount++;
"220
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 221: if(keyCount >= 100)
"221
[e $ ! >= -> _keyCount `i -> 100 `i 29  ]
[; ;main.c: 222: {
"222
{
[; ;main.c: 223: keyCount = 100;
"223
[e = _keyCount -> -> 100 `i `uc ]
"224
}
[e :U 29 ]
"225
}
[; ;main.c: 224: }
[; ;main.c: 225: }
[e $U 30  ]
"226
[e :U 28 ]
[; ;main.c: 226: else
[; ;main.c: 227: {
"227
{
[; ;main.c: 228: if(keyCount >= 4)
"228
[e $ ! >= -> _keyCount `i -> 4 `i 31  ]
[; ;main.c: 229: {
"229
{
[; ;main.c: 230: keyCount = 0;
"230
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 231: return 1;
"231
[e ) -> -> 1 `i `uc ]
[e $UE 27  ]
"232
}
[e :U 31 ]
[; ;main.c: 232: }
[; ;main.c: 233: keyCount = 0;
"233
[e = _keyCount -> -> 0 `i `uc ]
"234
}
[e :U 30 ]
[; ;main.c: 234: }
[; ;main.c: 235: return 0;
"235
[e ) -> -> 0 `i `uc ]
[e $UE 27  ]
[; ;main.c: 236: }
"236
[e :UE 27 ]
}
"238
[v _keyCtr `(v ~T0 @X0 1 ef ]
"239
{
[; ;main.c: 238: void keyCtr()
[; ;main.c: 239: {
[e :U _keyCtr ]
[f ]
"240
[v _kclick `uc ~T0 @X0 1 a ]
[; ;main.c: 240: char kclick = keyRead(0x20 & (~PORTB));
[e = _kclick ( _keyRead (1 -> & -> 32 `i ~ -> _PORTB `i `uc ]
[; ;main.c: 241: if(kclick == 1)
"241
[e $ ! == -> _kclick `i -> 1 `i 33  ]
[; ;main.c: 242: {
"242
{
[; ;main.c: 243: if(++workStep > 2)
"243
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 2 `i 34  ]
[; ;main.c: 244: {
"244
{
[; ;main.c: 245: workStep = 0;
"245
[e = _workStep -> -> 0 `i `uc ]
"246
}
[e :U 34 ]
[; ;main.c: 246: }
[; ;main.c: 247: if(workStep == 1)
"247
[e $ ! == -> _workStep `i -> 1 `i 35  ]
[; ;main.c: 248: {
"248
{
[; ;main.c: 249: cDuty = 45;
"249
[e = _cDuty -> -> 45 `i `uc ]
"250
}
[e :U 35 ]
[; ;main.c: 250: }
[; ;main.c: 251: maxDuty = 50 + workStep*20;
"251
[e = _maxDuty -> + -> 50 `i * -> _workStep `i -> 20 `i `uc ]
"252
}
[e :U 33 ]
[; ;main.c: 252: }
[; ;main.c: 253: }
"253
[e :UE 32 ]
}
"255
[v _workCtr `(v ~T0 @X0 1 ef ]
"256
{
[; ;main.c: 255: void workCtr()
[; ;main.c: 256: {
[e :U _workCtr ]
[f ]
[; ;main.c: 257: if(firstTime > 0)
"257
[e $ ! > -> _firstTime `i -> 0 `i 37  ]
[; ;main.c: 258: {
"258
{
[; ;main.c: 259: firstTime--;
"259
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 260: if(prePwStep < pwStep)
"260
[e $ ! < -> _prePwStep `i -> _pwStep `i 38  ]
[; ;main.c: 261: {
"261
{
[; ;main.c: 262: prePwStep = pwStep;
"262
[e = _prePwStep _pwStep ]
"263
}
[e :U 38 ]
"264
}
[e :U 37 ]
[; ;main.c: 263: }
[; ;main.c: 264: }
[; ;main.c: 265: if(++count2 > 2)
"265
[e $ ! > -> =+ _count2 -> -> 1 `i `uc `i -> 2 `i 39  ]
[; ;main.c: 266: {
"266
{
[; ;main.c: 267: count2 = 0;
"267
[e = _count2 -> -> 0 `i `uc ]
[; ;main.c: 268: if(workStep > 0 && maxDuty >= 45)
"268
[e $ ! && > -> _workStep `i -> 0 `i >= -> _maxDuty `i -> 45 `i 40  ]
[; ;main.c: 269: {
"269
{
[; ;main.c: 270: if(cDuty > maxDuty)
"270
[e $ ! > -> _cDuty `i -> _maxDuty `i 41  ]
[; ;main.c: 271: {
"271
{
[; ;main.c: 272: cDuty--;
"272
[e -- _cDuty -> -> 1 `i `uc ]
[; ;main.c: 273: PWMD3L = cDuty;
"273
[e = _PWMD3L _cDuty ]
"274
}
[; ;main.c: 274: }
[e $U 42  ]
"275
[e :U 41 ]
[; ;main.c: 275: else if(cDuty < maxDuty)
[e $ ! < -> _cDuty `i -> _maxDuty `i 43  ]
[; ;main.c: 276: {
"276
{
[; ;main.c: 277: cDuty++;
"277
[e ++ _cDuty -> -> 1 `i `uc ]
[; ;main.c: 278: PWMD3L = cDuty;
"278
[e = _PWMD3L _cDuty ]
"279
}
[e :U 43 ]
"280
[e :U 42 ]
}
[e :U 40 ]
"282
}
[e :U 39 ]
[; ;main.c: 279: }
[; ;main.c: 280: }
[; ;main.c: 282: }
[; ;main.c: 283: if(workStep > 0)
"283
[e $ ! > -> _workStep `i -> 0 `i 44  ]
[; ;main.c: 284: {
"284
{
[; ;main.c: 285: PORTB &= 0xFC;
"285
[e =& _PORTB -> -> 252 `i `uc ]
[; ;main.c: 286: if((PWMCON0 & 0x08) == 0)
"286
[e $ ! == & -> _PWMCON0 `i -> 8 `i -> 0 `i 45  ]
[; ;main.c: 287: {
"287
{
[; ;main.c: 288: pwmInit();
"288
[e ( _pwmInit ..  ]
"289
}
[e :U 45 ]
[; ;main.c: 289: }
[; ;main.c: 290: if(count1s == 0 && ++count900s >= 900)
"290
[e $ ! && == -> _count1s `i -> 0 `i >= =+ _count900s -> -> 1 `i `ui -> -> 900 `i `ui 46  ]
[; ;main.c: 291: {
"291
{
[; ;main.c: 292: workStep = 0;
"292
[e = _workStep -> -> 0 `i `uc ]
"293
}
[e :U 46 ]
"294
}
[; ;main.c: 293: }
[; ;main.c: 294: }
[e $U 47  ]
"295
[e :U 44 ]
[; ;main.c: 295: else
[; ;main.c: 296: {
"296
{
[; ;main.c: 297: if(chrgFlag == 0)
"297
[e $ ! == -> _chrgFlag `i -> 0 `i 48  ]
[; ;main.c: 298: {
"298
{
[; ;main.c: 299: PORTB |= 0x03;
"299
[e =| _PORTB -> -> 3 `i `uc ]
"300
}
[e :U 48 ]
[; ;main.c: 300: }
[; ;main.c: 301: if(cDuty > 0)
"301
[e $ ! > -> _cDuty `i -> 0 `i 49  ]
[; ;main.c: 302: {
"302
{
[; ;main.c: 303: if(--cDuty == 0)
"303
[e $ ! == -> =- _cDuty -> -> 1 `i `uc `i -> 0 `i 50  ]
[; ;main.c: 304: {
"304
{
[; ;main.c: 305: pwmStop();
"305
[e ( _pwmStop ..  ]
"306
}
[e :U 50 ]
[; ;main.c: 306: }
[; ;main.c: 307: PWMD3L = cDuty;
"307
[e = _PWMD3L _cDuty ]
"308
}
[e :U 49 ]
[; ;main.c: 308: }
[; ;main.c: 309: count900s = 0;
"309
[e = _count900s -> -> 0 `i `ui ]
"310
}
[e :U 47 ]
[; ;main.c: 310: }
[; ;main.c: 311: }
"311
[e :UE 36 ]
}
"313
[v _checkBatAD `(v ~T0 @X0 1 ef ]
"314
{
[; ;main.c: 313: void checkBatAD()
[; ;main.c: 314: {
[e :U _checkBatAD ]
[f ]
[; ;main.c: 315: test_adc = ADC_Sample(1, 5);
"315
[e = _test_adc ( _ADC_Sample (2 , -> -> 1 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 316: if (0xA5 == test_adc)
"316
[e $ ! == -> 165 `i -> _test_adc `i 52  ]
[; ;main.c: 317: {
"317
{
[; ;main.c: 318: batADValue = adresult;
"318
[e = _batADValue _adresult ]
[; ;main.c: 319: if(batADValue < 1117)
"319
[e $ ! < _batADValue -> -> 1117 `i `ui 53  ]
[; ;main.c: 320: {
"320
{
[; ;main.c: 321: pwStep = 0;
"321
[e = _pwStep -> -> 0 `i `uc ]
[; ;main.c: 322: if(++count8s > 800)
"322
[e $ ! > =+ _count8s -> -> 1 `i `ui -> -> 800 `i `ui 54  ]
[; ;main.c: 323: {
"323
{
[; ;main.c: 324: count8s = 0;
"324
[e = _count8s -> -> 0 `i `ui ]
[; ;main.c: 325: lowBatFlag = 1;
"325
[e = _lowBatFlag -> -> 1 `i `uc ]
[; ;main.c: 326: if(workStep > 0)
"326
[e $ ! > -> _workStep `i -> 0 `i 55  ]
[; ;main.c: 327: {
"327
{
[; ;main.c: 328: overWorkTime = 180;
"328
[e = _overWorkTime -> -> 180 `i `uc ]
[; ;main.c: 329: preLedStep = workStep;
"329
[e = _preLedStep _workStep ]
"330
}
[e :U 55 ]
[; ;main.c: 330: }
[; ;main.c: 331: prePwStep = 0;
"331
[e = _prePwStep -> -> 0 `i `uc ]
[; ;main.c: 332: workStep = 0;
"332
[e = _workStep -> -> 0 `i `uc ]
"333
}
[e :U 54 ]
"334
}
[; ;main.c: 333: }
[; ;main.c: 334: }
[e $U 56  ]
"335
[e :U 53 ]
[; ;main.c: 335: else
[; ;main.c: 336: {
"336
{
[; ;main.c: 337: count8s = 0;
"337
[e = _count8s -> -> 0 `i `ui ]
[; ;main.c: 338: if(batADValue >= 1340)
"338
[e $ ! >= _batADValue -> -> 1340 `i `ui 57  ]
[; ;main.c: 339: {
"339
{
[; ;main.c: 340: pwStep = ((batADValue - 1340) /2) + 13;
"340
[e = _pwStep -> + / - _batADValue -> -> 1340 `i `ui -> -> 2 `i `ui -> -> 13 `i `ui `uc ]
"341
}
[; ;main.c: 341: }
[e $U 58  ]
"342
[e :U 57 ]
[; ;main.c: 342: else
[; ;main.c: 343: {
"343
{
[; ;main.c: 344: pwStep = (batADValue - 1117) / 16;
"344
[e = _pwStep -> / - _batADValue -> -> 1117 `i `ui -> -> 16 `i `ui `uc ]
"345
}
[e :U 58 ]
[; ;main.c: 345: }
[; ;main.c: 346: if(pwStep > 99)
"346
[e $ ! > -> _pwStep `i -> 99 `i 59  ]
[; ;main.c: 347: {
"347
{
[; ;main.c: 348: pwStep = 99;
"348
[e = _pwStep -> -> 99 `i `uc ]
"349
}
[e :U 59 ]
"350
}
[e :U 56 ]
[; ;main.c: 349: }
[; ;main.c: 350: }
[; ;main.c: 351: if(chrgFlag && batADValue > 1861)
"351
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _batADValue -> -> 1861 `i `ui 60  ]
[; ;main.c: 352: {
"352
{
[; ;main.c: 353: protectFlag = 1;
"353
[e = _protectFlag -> -> 1 `i `uc ]
"354
}
[e :U 60 ]
"355
}
[; ;main.c: 354: }
[; ;main.c: 355: }
[e $U 61  ]
"356
[e :U 52 ]
[; ;main.c: 356: else
[; ;main.c: 357: {
"357
{
[; ;main.c: 358: ADCON0 = 0;
"358
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 359: ADCON1 = 0;
"359
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 360: _delay((unsigned long)((100)*(16000000/4000000.0)));
"360
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"361
}
[e :U 61 ]
[; ;main.c: 361: }
[; ;main.c: 362: test_adc = ADC_Sample(2, 5);
"362
[e = _test_adc ( _ADC_Sample (2 , -> -> 2 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 363: if (0xA5 == test_adc)
"363
[e $ ! == -> 165 `i -> _test_adc `i 62  ]
[; ;main.c: 364: {
"364
{
[; ;main.c: 365: if(chrgFlag && adresult > 100)
"365
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _adresult -> -> 100 `i `ui 63  ]
[; ;main.c: 366: {
"366
{
[; ;main.c: 368: if(adresult > 810 || (batADValue - adresult) > 810)
"368
[e $ ! || > _adresult -> -> 810 `i `ui > - _batADValue _adresult -> -> 810 `i `ui 64  ]
[; ;main.c: 369: {
"369
{
[; ;main.c: 371: if(++countHalfFull > 250)
"371
[e $ ! > -> =+ _countHalfFull -> -> 1 `i `uc `i -> 250 `i 65  ]
[; ;main.c: 372: {
"372
{
[; ;main.c: 373: countHalfFull = 0;
"373
[e = _countHalfFull -> -> 0 `i `uc ]
[; ;main.c: 374: protectFlag = 2;
"374
[e = _protectFlag -> -> 2 `i `uc ]
"375
}
[e :U 65 ]
"376
}
[; ;main.c: 375: }
[; ;main.c: 376: }
[e $U 66  ]
"377
[e :U 64 ]
[; ;main.c: 377: else
[; ;main.c: 378: {
"378
{
[; ;main.c: 379: countHalfFull = 0;
"379
[e = _countHalfFull -> -> 0 `i `uc ]
"380
}
[e :U 66 ]
"381
}
[e :U 63 ]
"382
}
[; ;main.c: 380: }
[; ;main.c: 381: }
[; ;main.c: 382: }
[e $U 67  ]
"383
[e :U 62 ]
[; ;main.c: 383: else
[; ;main.c: 384: {
"384
{
[; ;main.c: 385: ADCON0 = 0;
"385
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 386: ADCON1 = 0;
"386
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 387: _delay((unsigned long)((100)*(16000000/4000000.0)));
"387
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"388
}
[e :U 67 ]
[; ;main.c: 388: }
[; ;main.c: 389: }
"389
[e :UE 51 ]
}
"400
[v _Init_System `(v ~T0 @X0 1 ef ]
"401
{
[; ;main.c: 400: void Init_System()
[; ;main.c: 401: {
[e :U _Init_System ]
[f ]
[; ;main.c: 402: asm("nop");
"402
[; <" nop ;# ">
[; ;main.c: 403: asm("clrwdt");
"403
[; <" clrwdt ;# ">
[; ;main.c: 404: OPTION_REG = 0;
"404
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 405: asm("clrwdt");
"405
[; <" clrwdt ;# ">
[; ;main.c: 406: OSCCON = 0X72;
"406
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 408: WPUA = 0B00000000;
"408
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 409: WPDA = 0x00;
"409
[e = _WPDA -> -> 0 `i `uc ]
[; ;main.c: 410: WPUB = 0x20;
"410
[e = _WPUB -> -> 32 `i `uc ]
[; ;main.c: 412: TRISA = 0x06;
"412
[e = _TRISA -> -> 6 `i `uc ]
[; ;main.c: 413: TRISB = 0x24;
"413
[e = _TRISB -> -> 36 `i `uc ]
[; ;main.c: 415: PORTA = 0X00;
"415
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 416: PORTB = 0X03;
"416
[e = _PORTB -> -> 3 `i `uc ]
[; ;main.c: 420: PR2 = 249;
"420
[e = _PR2 -> -> 249 `i `uc ]
[; ;main.c: 421: TMR2IF = 0;
"421
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 422: TMR2IE = 1;
"422
[e = _TMR2IE -> -> 1 `i `b ]
[; ;main.c: 424: T2CON = 0B00000100;
"424
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 425: INTCON = 0XC0;
"425
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 426: }
"426
[e :UE 68 ]
}
"437
[v _AD_Init `(v ~T0 @X0 1 ef ]
"438
{
[; ;main.c: 437: void AD_Init()
[; ;main.c: 438: {
[e :U _AD_Init ]
[f ]
[; ;main.c: 470: ADCON0 = 0X41;
"470
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 487: ADCON1 = 0;
"487
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 488: ANSEL0 = 0X06;
"488
[e = _ANSEL0 -> -> 6 `i `uc ]
[; ;main.c: 489: }
"489
[e :UE 69 ]
}
"492
[v _pwmInit `(v ~T0 @X0 1 ef ]
"493
{
[; ;main.c: 492: void pwmInit()
[; ;main.c: 493: {
[e :U _pwmInit ]
[f ]
[; ;main.c: 494: PWMCON1 = 0B00000000;
"494
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 495: PWMTH = 0X00;
"495
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 496: PWMTL = 100;
"496
[e = _PWMTL -> -> 100 `i `uc ]
[; ;main.c: 499: PWMD23H = 0;
"499
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 500: PWMD3L = 45;
"500
[e = _PWMD3L -> -> 45 `i `uc ]
[; ;main.c: 501: PWM23DT = 0X00;
"501
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 503: PWMCON0 = 0X68;
"503
[e = _PWMCON0 -> -> 104 `i `uc ]
[; ;main.c: 504: PWMCON2 =0X00;
"504
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 505: }
"505
[e :UE 70 ]
}
"507
[v _pwmStop `(v ~T0 @X0 1 ef ]
"508
{
[; ;main.c: 507: void pwmStop()
[; ;main.c: 508: {
[e :U _pwmStop ]
[f ]
[; ;main.c: 509: PWMCON0 &= 0XF7;
"509
[e =& _PWMCON0 -> -> 247 `i `uc ]
[; ;main.c: 510: RB4 = 0;
"510
[e = _RB4 -> -> 0 `i `b ]
[; ;main.c: 511: }
"511
[e :UE 71 ]
}
"521
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"522
{
[; ;main.c: 521: void Sleep_Mode()
[; ;main.c: 522: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 523: INTCON = 0;
"523
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 525: OPTION_REG = 0;
"525
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 527: TRISA = 0x06;
"527
[e = _TRISA -> -> 6 `i `uc ]
[; ;main.c: 528: WPUA = 0B00000000;
"528
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 529: PORTA = 0x00;
"529
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 530: TRISB = 0x24;
"530
[e = _TRISB -> -> 36 `i `uc ]
[; ;main.c: 531: PORTB = 0x03;
"531
[e = _PORTB -> -> 3 `i `uc ]
[; ;main.c: 532: WPUB = 0x20;
"532
[e = _WPUB -> -> 32 `i `uc ]
[; ;main.c: 534: ADCON0 = 0;
"534
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 535: ADCON1 = 0;
"535
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 537: PWMCON0 = 0;
"537
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 539: OSCCON = 0X70;
"539
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 541: IOCA = 0B00000000;
"541
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 542: IOCB = 0x24;
"542
[e = _IOCB -> -> 36 `i `uc ]
[; ;main.c: 544: RAIE = 1;
"544
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 545: PEIE = 1;
"545
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 546: RBIE = 1;
"546
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 547: GIE = 0;
"547
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 549: PIE1 &= 0X08;
"549
[e =& _PIE1 -> -> 8 `i `uc ]
[; ;main.c: 550: PIR1 = 0;
"550
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 551: INTCON &= 0XC8;
"551
[e =& _INTCON -> -> 200 `i `uc ]
[; ;main.c: 553: PORTA;
"553
[e _PORTA ]
[; ;main.c: 554: RAIF = 0;
"554
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 555: PORTB;
"555
[e _PORTB ]
[; ;main.c: 556: RBIF = 0;
"556
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 557: asm("clrwdt");
"557
[; <" clrwdt ;# ">
[; ;main.c: 559: asm("sleep");
"559
[; <" sleep ;# ">
[; ;main.c: 561: asm("nop");
"561
[; <" nop ;# ">
[; ;main.c: 562: asm("clrwdt");
"562
[; <" clrwdt ;# ">
[; ;main.c: 563: asm("nop");
"563
[; <" nop ;# ">
[; ;main.c: 564: asm("nop");
"564
[; <" nop ;# ">
[; ;main.c: 565: asm("nop");
"565
[; <" nop ;# ">
[; ;main.c: 566: asm("nop");
"566
[; <" nop ;# ">
[; ;main.c: 567: asm("nop");
"567
[; <" nop ;# ">
[; ;main.c: 568: if(RAIF) RAIF = 0;
"568
[e $ ! _RAIF 73  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 73 ]
[; ;main.c: 569: if(RBIF) RBIF = 0;
"569
[e $ ! _RBIF 74  ]
[e = _RBIF -> -> 0 `i `b ]
[e :U 74 ]
[; ;main.c: 570: if(TMR2IF) TMR2IF = 0;
"570
[e $ ! _TMR2IF 75  ]
[e = _TMR2IF -> -> 0 `i `b ]
[e :U 75 ]
[; ;main.c: 571: IOCA = 0B00000000;
"571
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 572: IOCB = 0B00000000;
"572
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 573: Init_System();
"573
[e ( _Init_System ..  ]
[; ;main.c: 574: AD_Init();
"574
[e ( _AD_Init ..  ]
[; ;main.c: 575: }
"575
[e :UE 72 ]
}
"597
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"598
{
[; ;main.c: 597: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 598: {
[e :U _ADC_Sample ]
"597
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"598
[f ]
"599
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 599: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"600
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 600: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"601
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 601: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 603: if ((!LDO_EN) && (adldo & 0x04) )
"603
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 77  ]
[; ;main.c: 604: {
"604
{
[; ;main.c: 606: ADCON1 = adldo;
"606
[e = _ADCON1 _adldo ]
[; ;main.c: 607: _delay((unsigned long)((100)*(16000000/4000000.0)));
"607
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"608
}
[; ;main.c: 608: }
[e $U 78  ]
"609
[e :U 77 ]
[; ;main.c: 609: else
[; ;main.c: 610: ADCON1 = adldo;
"610
[e = _ADCON1 _adldo ]
[e :U 78 ]
[; ;main.c: 612: if(adch & 0x10)
"612
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 79  ]
[; ;main.c: 613: {
"613
{
[; ;main.c: 614: CHS4 = 1;
"614
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 615: adch &= 0x0f;
"615
[e =& _adch -> -> 15 `i `uc ]
"616
}
[e :U 79 ]
"617
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 616: }
[; ;main.c: 617: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 618: for (i = 0; i < 10; i++)
"618
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 80  ]
[e $U 81  ]
"619
[e :U 80 ]
[; ;main.c: 619: {
{
[; ;main.c: 620: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"620
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 621: asm("nop");
"621
[; <" nop ;# ">
[; ;main.c: 622: asm("nop");
"622
[; <" nop ;# ">
[; ;main.c: 623: asm("nop");
"623
[; <" nop ;# ">
[; ;main.c: 624: asm("nop");
"624
[; <" nop ;# ">
[; ;main.c: 625: GODONE = 1;
"625
[e = _GODONE -> -> 1 `i `b ]
"627
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 627: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 628: while (GODONE)
"628
[e $U 83  ]
[e :U 84 ]
[; ;main.c: 629: {
"629
{
[; ;main.c: 630: _delay((unsigned long)((2)*(16000000/4000000.0)));
"630
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;main.c: 632: if (0 == (--j))
"632
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 86  ]
[; ;main.c: 633: return 0;
"633
[e ) -> -> 0 `i `uc ]
[e $UE 76  ]
[e :U 86 ]
"634
}
[e :U 83 ]
"628
[e $ _GODONE 84  ]
[e :U 85 ]
[; ;main.c: 634: }
[; ;main.c: 636: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"636
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 638: if (0 == admax)
"638
[e $ ! == -> -> 0 `i `ui _admax 87  ]
[; ;main.c: 639: {
"639
{
[; ;main.c: 640: admax = ad_temp;
"640
[e = _admax _ad_temp ]
[; ;main.c: 641: admin = ad_temp;
"641
[e = _admin _ad_temp ]
"642
}
[; ;main.c: 642: }
[e $U 88  ]
"643
[e :U 87 ]
[; ;main.c: 643: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 89  ]
[; ;main.c: 644: admax = ad_temp;
"644
[e = _admax _ad_temp ]
[e $U 90  ]
"645
[e :U 89 ]
[; ;main.c: 645: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 91  ]
[; ;main.c: 646: admin = ad_temp;
"646
[e = _admin _ad_temp ]
[e :U 91 ]
"648
[e :U 90 ]
[e :U 88 ]
[; ;main.c: 648: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"649
}
"618
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 80  ]
[e :U 81 ]
"649
}
[; ;main.c: 649: }
[; ;main.c: 650: adsum -= admax;
"650
[e =- _adsum -> _admax `ul ]
[; ;main.c: 651: if (adsum >= admin)
"651
[e $ ! >= _adsum -> _admin `ul 92  ]
[; ;main.c: 652: adsum -= admin;
"652
[e =- _adsum -> _admin `ul ]
[e $U 93  ]
"653
[e :U 92 ]
[; ;main.c: 653: else
[; ;main.c: 654: adsum = 0;
"654
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 93 ]
[; ;main.c: 656: adresult = adsum >> 3;
"656
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 658: adsum = 0;
"658
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 659: admin = 0;
"659
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 660: admax = 0;
"660
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 661: return 0xA5;
"661
[e ) -> -> 165 `i `uc ]
[e $UE 76  ]
[; ;main.c: 663: }
"663
[e :UE 76 ]
}
