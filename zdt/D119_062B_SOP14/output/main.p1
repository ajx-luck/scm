Version 3.2 HI-TECH Software Intermediate Code
"73 C:\mcuproject\scm\zdt\D119_062B_SOP14\main.c
[v _ledShow `(v ~T0 @X0 0 ef ]
[p mainexit ]
"66
[v _Init_System `(v ~T0 @X0 0 ef ]
"67
[v _AD_Init `(v ~T0 @X0 0 ef ]
"71
[v _chrgCtr `(v ~T0 @X0 0 ef ]
"72
[v _checkBatAD `(v ~T0 @X0 0 ef ]
"78
[v _setBatStep `(v ~T0 @X0 0 ef ]
"74
[v _keyCtr `(v ~T0 @X0 0 ef ]
"75
[v _workCtr `(v ~T0 @X0 0 ef ]
"68
[v _Sleep_Mode `(v ~T0 @X0 0 ef ]
"70
[v _pwmStop `(v ~T0 @X0 0 ef ]
"69
[v _pwmInit `(v ~T0 @X0 0 ef ]
"63
[v _ADC_Sample `(uc ~T0 @X0 0 ef2`uc`uc ]
[v F479 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF479 ~T0 @X0 0 e ]
[p i __delay ]
"4 C:\mcuproject\scm\zdt\D119_062B_SOP14\main.c
[p n 752 ]
"5
[p n 373 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\SC8P062BD.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;SC8P062BD.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;SC8P062BD.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;SC8P062BD.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;SC8P062BD.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;SC8P062BD.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;SC8P062BD.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;SC8P062BD.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;SC8P062BD.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMPCON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 20: volatile unsigned char CMPCON0 @ 0x0F;
"21
[v _CMPCON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;SC8P062BD.h: 21: volatile unsigned char CMPCON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;SC8P062BD.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;SC8P062BD.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;SC8P062BD.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P062BD.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;SC8P062BD.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;SC8P062BD.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;SC8P062BD.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;SC8P062BD.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;SC8P062BD.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;SC8P062BD.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;SC8P062BD.h: 44: volatile unsigned char ANSEL0 @ 0x93;
"45
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;SC8P062BD.h: 45: volatile unsigned char ANSEL1 @ 0x94;
"46
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;SC8P062BD.h: 46: volatile unsigned char ADCON0 @ 0x95;
"47
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;SC8P062BD.h: 47: volatile unsigned char ADCON1 @ 0x96;
"48
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 48: volatile unsigned char ADRESL @ 0x98;
"49
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 49: volatile unsigned char ADRESH @ 0x99;
"50
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 50: volatile unsigned char PWMD2L @ 0x9B;
"51
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 51: volatile unsigned char PWMD3L @ 0x9C;
"52
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 52: volatile unsigned char PWM23DT @ 0x9D;
"53
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 53: volatile unsigned char PWMD23H @ 0x9E;
"55
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 55: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"56
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 56: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"57
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 57: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"58
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 58: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"59
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 59: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"60
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 60: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"61
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 61: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"62
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 62: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"65
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 65: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"66
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 66: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"67
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 67: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"68
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 68: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"69
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 69: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"70
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 70: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"71
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 71: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"72
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 72: volatile bit C @ ((unsigned)&STATUS*8)+0;
"75
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P062BD.h: 75: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"76
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P062BD.h: 76: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"77
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P062BD.h: 77: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"78
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P062BD.h: 78: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"79
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P062BD.h: 79: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"80
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P062BD.h: 80: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"81
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P062BD.h: 81: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"82
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P062BD.h: 82: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"85
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;SC8P062BD.h: 85: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"86
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;SC8P062BD.h: 86: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"87
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;SC8P062BD.h: 87: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"88
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;SC8P062BD.h: 88: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"89
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;SC8P062BD.h: 89: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"90
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;SC8P062BD.h: 90: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"91
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;SC8P062BD.h: 91: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"92
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;SC8P062BD.h: 92: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"95
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;SC8P062BD.h: 95: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"96
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;SC8P062BD.h: 96: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"97
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;SC8P062BD.h: 97: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"98
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;SC8P062BD.h: 98: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"99
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;SC8P062BD.h: 99: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"100
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;SC8P062BD.h: 100: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"101
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;SC8P062BD.h: 101: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"104
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;SC8P062BD.h: 104: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"105
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;SC8P062BD.h: 105: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"106
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;SC8P062BD.h: 106: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"107
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;SC8P062BD.h: 107: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"108
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;SC8P062BD.h: 108: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"109
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;SC8P062BD.h: 109: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"110
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;SC8P062BD.h: 110: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"111
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P062BD.h: 111: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"114
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;SC8P062BD.h: 114: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"115
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;SC8P062BD.h: 115: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"116
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;SC8P062BD.h: 116: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"117
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;SC8P062BD.h: 117: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"118
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P062BD.h: 118: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"119
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;SC8P062BD.h: 119: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"120
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;SC8P062BD.h: 120: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"121
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P062BD.h: 121: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"124
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;SC8P062BD.h: 124: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"125
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;SC8P062BD.h: 125: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"126
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;SC8P062BD.h: 126: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"127
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;SC8P062BD.h: 127: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"128
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;SC8P062BD.h: 128: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"129
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;SC8P062BD.h: 129: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"130
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;SC8P062BD.h: 130: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"131
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;SC8P062BD.h: 131: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"134
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;SC8P062BD.h: 134: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"135
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;SC8P062BD.h: 135: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"136
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;SC8P062BD.h: 136: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"137
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;SC8P062BD.h: 137: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"138
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;SC8P062BD.h: 138: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"139
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;SC8P062BD.h: 139: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"140
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;SC8P062BD.h: 140: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"143
[v _CMPIF `Vb ~T0 @X0 1 e@109 ]
[; ;SC8P062BD.h: 143: volatile bit CMPIF @ ((unsigned)&PIR1*8)+5;
"144
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;SC8P062BD.h: 144: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"145
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;SC8P062BD.h: 145: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"146
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;SC8P062BD.h: 146: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"147
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;SC8P062BD.h: 147: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"150
[v _CMPIE `Vb ~T0 @X0 1 e@117 ]
[; ;SC8P062BD.h: 150: volatile bit CMPIE @ ((unsigned)&PIE1*8)+5;
"151
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;SC8P062BD.h: 151: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"152
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;SC8P062BD.h: 152: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"153
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;SC8P062BD.h: 153: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"154
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;SC8P062BD.h: 154: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"157
[v _CMPEN `Vb ~T0 @X0 1 e@127 ]
[; ;SC8P062BD.h: 157: volatile bit CMPEN @ ((unsigned)&CMPCON0*8)+7;
"158
[v _CMPPS `Vb ~T0 @X0 1 e@126 ]
[; ;SC8P062BD.h: 158: volatile bit CMPPS @ ((unsigned)&CMPCON0*8)+6;
"159
[v _CMPNS2 `Vb ~T0 @X0 1 e@125 ]
[; ;SC8P062BD.h: 159: volatile bit CMPNS2 @ ((unsigned)&CMPCON0*8)+5;
"160
[v _CMPNS1 `Vb ~T0 @X0 1 e@124 ]
[; ;SC8P062BD.h: 160: volatile bit CMPNS1 @ ((unsigned)&CMPCON0*8)+4;
"161
[v _CMPNS0 `Vb ~T0 @X0 1 e@123 ]
[; ;SC8P062BD.h: 161: volatile bit CMPNS0 @ ((unsigned)&CMPCON0*8)+3;
"162
[v _CMPNV `Vb ~T0 @X0 1 e@122 ]
[; ;SC8P062BD.h: 162: volatile bit CMPNV @ ((unsigned)&CMPCON0*8)+2;
"163
[v _CMPOUT `Vb ~T0 @X0 1 e@121 ]
[; ;SC8P062BD.h: 163: volatile bit CMPOUT @ ((unsigned)&CMPCON0*8)+1;
"164
[v _CMPOEN `Vb ~T0 @X0 1 e@120 ]
[; ;SC8P062BD.h: 164: volatile bit CMPOEN @ ((unsigned)&CMPCON0*8)+0;
"167
[v _CMPIM `Vb ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 167: volatile bit CMPIM @ ((unsigned)&CMPCON1*8)+7;
"168
[v _AN_EN `Vb ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 168: volatile bit AN_EN @ ((unsigned)&CMPCON1*8)+6;
"169
[v _RBIAS_H `Vb ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 169: volatile bit RBIAS_H @ ((unsigned)&CMPCON1*8)+5;
"170
[v _RBIAS_L `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P062BD.h: 170: volatile bit RBIAS_L @ ((unsigned)&CMPCON1*8)+4;
"171
[v _LVDS3 `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P062BD.h: 171: volatile bit LVDS3 @ ((unsigned)&CMPCON1*8)+3;
"172
[v _LVDS2 `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P062BD.h: 172: volatile bit LVDS2 @ ((unsigned)&CMPCON1*8)+2;
"173
[v _LVDS1 `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 173: volatile bit LVDS1 @ ((unsigned)&CMPCON1*8)+1;
"174
[v _LVDS0 `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P062BD.h: 174: volatile bit LVDS0 @ ((unsigned)&CMPCON1*8)+0;
"177
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;SC8P062BD.h: 177: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"178
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 178: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"179
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 179: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"180
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 180: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"181
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 181: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"182
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;SC8P062BD.h: 182: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"183
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 183: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"184
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 184: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"187
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;SC8P062BD.h: 187: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"188
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;SC8P062BD.h: 188: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"189
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;SC8P062BD.h: 189: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"190
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;SC8P062BD.h: 190: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"193
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;SC8P062BD.h: 193: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"194
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P062BD.h: 194: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"195
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;SC8P062BD.h: 195: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"196
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;SC8P062BD.h: 196: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"197
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;SC8P062BD.h: 197: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"198
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;SC8P062BD.h: 198: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"199
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;SC8P062BD.h: 199: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"200
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;SC8P062BD.h: 200: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"203
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;SC8P062BD.h: 203: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"204
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;SC8P062BD.h: 204: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"205
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;SC8P062BD.h: 205: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"206
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;SC8P062BD.h: 206: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"207
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;SC8P062BD.h: 207: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"208
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;SC8P062BD.h: 208: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"211
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;SC8P062BD.h: 211: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"212
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;SC8P062BD.h: 212: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"213
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;SC8P062BD.h: 213: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"214
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;SC8P062BD.h: 214: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"215
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;SC8P062BD.h: 215: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"216
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;SC8P062BD.h: 216: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"219
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;SC8P062BD.h: 219: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"220
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;SC8P062BD.h: 220: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"221
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;SC8P062BD.h: 221: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"222
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;SC8P062BD.h: 222: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"223
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;SC8P062BD.h: 223: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"226
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;SC8P062BD.h: 226: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"227
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;SC8P062BD.h: 227: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"228
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;SC8P062BD.h: 228: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"229
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;SC8P062BD.h: 229: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"232
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;SC8P062BD.h: 232: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"233
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;SC8P062BD.h: 233: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"234
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;SC8P062BD.h: 234: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"235
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;SC8P062BD.h: 235: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"236
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;SC8P062BD.h: 236: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"237
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;SC8P062BD.h: 237: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"240
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;SC8P062BD.h: 240: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"241
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;SC8P062BD.h: 241: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"242
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;SC8P062BD.h: 242: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"243
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;SC8P062BD.h: 243: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"244
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;SC8P062BD.h: 244: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"245
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;SC8P062BD.h: 245: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"248
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;SC8P062BD.h: 248: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"249
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;SC8P062BD.h: 249: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"250
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;SC8P062BD.h: 250: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"251
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;SC8P062BD.h: 251: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"252
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;SC8P062BD.h: 252: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"253
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;SC8P062BD.h: 253: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"256
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;SC8P062BD.h: 256: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"257
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;SC8P062BD.h: 257: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"258
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;SC8P062BD.h: 258: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"259
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;SC8P062BD.h: 259: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"260
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;SC8P062BD.h: 260: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"261
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;SC8P062BD.h: 261: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"264
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;SC8P062BD.h: 264: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"265
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;SC8P062BD.h: 265: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"266
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;SC8P062BD.h: 266: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"267
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;SC8P062BD.h: 267: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"268
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;SC8P062BD.h: 268: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"269
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;SC8P062BD.h: 269: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"272
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;SC8P062BD.h: 272: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"273
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;SC8P062BD.h: 273: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"274
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;SC8P062BD.h: 274: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"275
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;SC8P062BD.h: 275: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"276
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;SC8P062BD.h: 276: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"277
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;SC8P062BD.h: 277: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"280
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;SC8P062BD.h: 280: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"281
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;SC8P062BD.h: 281: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"282
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;SC8P062BD.h: 282: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"283
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;SC8P062BD.h: 283: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"284
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;SC8P062BD.h: 284: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"285
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;SC8P062BD.h: 285: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"288
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;SC8P062BD.h: 288: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"289
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;SC8P062BD.h: 289: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"290
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;SC8P062BD.h: 290: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"291
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;SC8P062BD.h: 291: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"292
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;SC8P062BD.h: 292: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"293
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;SC8P062BD.h: 293: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"296
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;SC8P062BD.h: 296: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"297
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;SC8P062BD.h: 297: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"298
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;SC8P062BD.h: 298: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"299
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;SC8P062BD.h: 299: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"300
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;SC8P062BD.h: 300: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"301
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;SC8P062BD.h: 301: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"302
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;SC8P062BD.h: 302: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"305
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;SC8P062BD.h: 305: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"306
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;SC8P062BD.h: 306: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"307
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;SC8P062BD.h: 307: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"308
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;SC8P062BD.h: 308: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"309
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;SC8P062BD.h: 309: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"310
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;SC8P062BD.h: 310: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"311
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;SC8P062BD.h: 311: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"312
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;SC8P062BD.h: 312: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"315
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;SC8P062BD.h: 315: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"316
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;SC8P062BD.h: 316: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"317
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;SC8P062BD.h: 317: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"318
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;SC8P062BD.h: 318: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"319
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;SC8P062BD.h: 319: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"322
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;SC8P062BD.h: 322: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"323
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;SC8P062BD.h: 323: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"324
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;SC8P062BD.h: 324: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"325
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;SC8P062BD.h: 325: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"30 C:\mcuproject\scm\zdt\D119_062B_SOP14\main.c
[v _numArray `Cuc ~T0 @X0 -> 0 `x s ]
[i _numArray
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 115 `i `uc
-> -> 118 `i `uc
..
]
[; ;main.c: 30: const static unsigned char numArray[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x73,0x76};
"32
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 32: volatile unsigned int adresult;
"33
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 33: volatile unsigned int result;
"34
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 34: volatile unsigned char test_adc;
"35
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 35: volatile unsigned int power_ad;
"36
[v _intCount `uc ~T0 @X0 1 e ]
[; ;main.c: 36: unsigned char intCount;
"37
[v _count1s `uc ~T0 @X0 1 e ]
[; ;main.c: 37: unsigned char count1s;
"38
[v _IntFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 38: unsigned char IntFlag;
"39
[v _chrgFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 39: unsigned char chrgFlag;
"40
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 40: unsigned char chrgFullFlag;
"41
[v _intCount10 `uc ~T0 @X0 1 e ]
[; ;main.c: 41: unsigned char intCount10;
"42
[v _chrgFullTime `uc ~T0 @X0 1 e ]
[; ;main.c: 42: unsigned char chrgFullTime;
"43
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 43: unsigned char workStep = 0;
"44
[v _ledCnt `uc ~T0 @X0 1 e ]
[; ;main.c: 44: unsigned char ledCnt;
"45
[v _keyCount `uc ~T0 @X0 1 e ]
[; ;main.c: 45: unsigned char keyCount;
"46
[v _longPressFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 46: unsigned char longPressFlag;
"47
[v _firstTime `uc ~T0 @X0 1 e ]
[; ;main.c: 47: unsigned char firstTime;
"48
[v _showBatTime `uc ~T0 @X0 1 e ]
[; ;main.c: 48: unsigned char showBatTime;
"49
[v _ledCntTime `uc ~T0 @X0 1 e ]
[; ;main.c: 49: unsigned char ledCntTime;
"50
[v _lowShanTime `ui ~T0 @X0 1 e ]
[; ;main.c: 50: unsigned int lowShanTime;
"51
[v _count900s `ui ~T0 @X0 1 e ]
[; ;main.c: 51: unsigned int count900s;
"52
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 52: unsigned char lowBatFlag = 0;
"53
[v _sleepTime `uc ~T0 @X0 1 e ]
[; ;main.c: 53: unsigned char sleepTime;
"54
[v _shiweiNum `uc ~T0 @X0 1 e ]
[i _shiweiNum
-> -> 0 `i `uc
]
[; ;main.c: 54: unsigned char shiweiNum = 0;
"55
[v _geweiNum `uc ~T0 @X0 1 e ]
[i _geweiNum
-> -> 0 `i `uc
]
[; ;main.c: 55: unsigned char geweiNum = 0;
"56
[v _baiweiNum `uc ~T0 @X0 1 e ]
[i _baiweiNum
-> -> 0 `i `uc
]
[; ;main.c: 56: unsigned char baiweiNum = 0;
"57
[v _motorPwmFlag `uc ~T0 @X0 1 e ]
[i _motorPwmFlag
-> -> 0 `i `uc
]
[; ;main.c: 57: unsigned char motorPwmFlag = 0;
"58
[v _count30s `ui ~T0 @X0 1 e ]
[i _count30s
-> -> 0 `i `ui
]
[; ;main.c: 58: unsigned int count30s = 0;
"59
[v _showBatStep `uc ~T0 @X0 1 e ]
[i _showBatStep
-> -> 0 `i `uc
]
[; ;main.c: 59: unsigned char showBatStep = 0;
"60
[v _curBatStep `uc ~T0 @X0 1 e ]
[i _curBatStep
-> -> 0 `i `uc
]
[; ;main.c: 60: unsigned char curBatStep = 0;
"61
[v _lowBatTime `uc ~T0 @X0 1 e ]
[i _lowBatTime
-> -> 0 `i `uc
]
[; ;main.c: 61: unsigned char lowBatTime = 0;
[; ;main.c: 63: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
[; ;main.c: 64: void DelayXms(unsigned char x);
[; ;main.c: 65: unsigned char ADC_Result(unsigned char adch);
[; ;main.c: 66: void Init_System();
[; ;main.c: 67: void AD_Init();
[; ;main.c: 68: void Sleep_Mode();
[; ;main.c: 69: void pwmInit();
[; ;main.c: 70: void pwmStop();
[; ;main.c: 71: void chrgCtr();
[; ;main.c: 72: void checkBatAD();
[; ;main.c: 73: void ledShow();
[; ;main.c: 74: void keyCtr();
[; ;main.c: 75: void workCtr();
[; ;main.c: 76: void ledCtr();
[; ;main.c: 77: char keyRead(char keyStatus);
[; ;main.c: 78: void setBatStep();
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F536 `(v ~T0 @X0 1 tf ]
"93
[v _Isr_Timer `IF536 ~T0 @X0 1 e ]
"94
{
[; ;main.c: 93: void interrupt Isr_Timer()
[; ;main.c: 94: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 95: if(TMR2IF)
"95
[e $ ! _TMR2IF 2  ]
[; ;main.c: 96: {
"96
{
[; ;main.c: 97: TMR2IF = 0;
"97
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 98: if(++intCount >= 160)
"98
[e $ ! >= -> =+ _intCount -> -> 1 `i `uc `i -> 160 `i 3  ]
[; ;main.c: 99: {
"99
{
[; ;main.c: 100: intCount = 0;
"100
[e = _intCount -> -> 0 `i `uc ]
[; ;main.c: 101: IntFlag = 1;
"101
[e = _IntFlag -> -> 1 `i `uc ]
[; ;main.c: 102: if(++count1s >= 100)
"102
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 4  ]
[; ;main.c: 103: {
"103
{
[; ;main.c: 104: count1s = 0;
"104
[e = _count1s -> -> 0 `i `uc ]
"105
}
[e :U 4 ]
"106
}
[e :U 3 ]
[; ;main.c: 105: }
[; ;main.c: 106: }
[; ;main.c: 107: ledShow();
"107
[e ( _ledShow ..  ]
[; ;main.c: 108: intCount10++;
"108
[e ++ _intCount10 -> -> 1 `i `uc ]
"109
}
[e :U 2 ]
[; ;main.c: 109: }
[; ;main.c: 111: }
"111
[e :UE 1 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"117
[v _main `(v ~T0 @X0 1 ef ]
"118
{
[; ;main.c: 117: void main()
[; ;main.c: 118: {
[e :U _main ]
[f ]
[; ;main.c: 119: Init_System();
"119
[e ( _Init_System ..  ]
[; ;main.c: 120: AD_Init();
"120
[e ( _AD_Init ..  ]
[; ;main.c: 121: shiweiNum = geweiNum = numArray[8];
"121
[e = _shiweiNum = _geweiNum *U + &U _numArray * -> -> -> 8 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 122: baiweiNum = 1;
"122
[e = _baiweiNum -> -> 1 `i `uc ]
[; ;main.c: 123: firstTime = 250;
"123
[e = _firstTime -> -> 250 `i `uc ]
[; ;main.c: 124: while (1)
"124
[e :U 7 ]
[; ;main.c: 125: {
"125
{
[; ;main.c: 126: asm("clrwdt");
"126
[; <" clrwdt ;# ">
[; ;main.c: 127: if(intCount10 > 10)
"127
[e $ ! > -> _intCount10 `i -> 10 `i 9  ]
[; ;main.c: 128: {
"128
{
[; ;main.c: 129: intCount10 = 0;
"129
[e = _intCount10 -> -> 0 `i `uc ]
"130
}
[e :U 9 ]
[; ;main.c: 130: }
[; ;main.c: 131: if(!IntFlag)
"131
[e $ ! ! != -> _IntFlag `i -> -> -> 0 `i `uc `i 10  ]
[; ;main.c: 132: continue;
"132
[e $U 6  ]
[e :U 10 ]
[; ;main.c: 133: IntFlag = 0;
"133
[e = _IntFlag -> -> 0 `i `uc ]
[; ;main.c: 134: chrgCtr();
"134
[e ( _chrgCtr ..  ]
[; ;main.c: 135: checkBatAD();
"135
[e ( _checkBatAD ..  ]
[; ;main.c: 136: setBatStep();
"136
[e ( _setBatStep ..  ]
[; ;main.c: 137: if(lowBatFlag == 0 && firstTime == 0)
"137
[e $ ! && == -> _lowBatFlag `i -> 0 `i == -> _firstTime `i -> 0 `i 11  ]
[; ;main.c: 138: {
"138
{
[; ;main.c: 139: keyCtr();
"139
[e ( _keyCtr ..  ]
"140
}
[e :U 11 ]
[; ;main.c: 140: }
[; ;main.c: 141: workCtr();
"141
[e ( _workCtr ..  ]
[; ;main.c: 142: if(chrgFlag == 0 && workStep == 0 && firstTime == 0 && showBatTime == 0)
"142
[e $ ! && && && == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _firstTime `i -> 0 `i == -> _showBatTime `i -> 0 `i 12  ]
[; ;main.c: 143: {
"143
{
[; ;main.c: 144: baiweiNum = 0;
"144
[e = _baiweiNum -> -> 0 `i `uc ]
[; ;main.c: 145: shiweiNum = geweiNum = 0;
"145
[e = _shiweiNum = _geweiNum -> -> 0 `i `uc ]
[; ;main.c: 146: if(++sleepTime >= 200)
"146
[e $ ! >= -> =+ _sleepTime -> -> 1 `i `uc `i -> 200 `i 13  ]
[; ;main.c: 147: {
"147
{
[; ;main.c: 148: sleepTime = 0;
"148
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 149: Sleep_Mode();
"149
[e ( _Sleep_Mode ..  ]
"150
}
[e :U 13 ]
"151
}
[; ;main.c: 150: }
[; ;main.c: 151: }
[e $U 14  ]
"152
[e :U 12 ]
[; ;main.c: 152: else
[; ;main.c: 153: {
"153
{
[; ;main.c: 154: sleepTime = 0;
"154
[e = _sleepTime -> -> 0 `i `uc ]
"155
}
[e :U 14 ]
"156
}
[e :U 6 ]
"124
[e $U 7  ]
[e :U 8 ]
[; ;main.c: 155: }
[; ;main.c: 156: }
[; ;main.c: 157: }
"157
[e :UE 5 ]
}
"159
[v _ledShow `(v ~T0 @X0 1 ef ]
"160
{
[; ;main.c: 159: void ledShow()
[; ;main.c: 160: {
[e :U _ledShow ]
[f ]
[; ;main.c: 161: if(++ledCntTime > 5)
"161
[e $ ! > -> =+ _ledCntTime -> -> 1 `i `uc `i -> 5 `i 16  ]
[; ;main.c: 162: {
"162
{
[; ;main.c: 163: ledCntTime = 0;
"163
[e = _ledCntTime -> -> 0 `i `uc ]
[; ;main.c: 164: if(++ledCnt > 13)
"164
[e $ ! > -> =+ _ledCnt -> -> 1 `i `uc `i -> 13 `i 17  ]
[; ;main.c: 165: {
"165
{
[; ;main.c: 166: ledCnt = 0;
"166
[e = _ledCnt -> -> 0 `i `uc ]
"167
}
[e :U 17 ]
[; ;main.c: 167: }
[; ;main.c: 168: PORTA &= 0xC1;
"168
[e =& _PORTA -> -> 193 `i `uc ]
[; ;main.c: 169: TRISA |= 0x3E;
"169
[e =| _TRISA -> -> 62 `i `uc ]
[; ;main.c: 170: switch(ledCnt)
"170
[e $U 19  ]
[; ;main.c: 171: {
"171
{
[; ;main.c: 172: case 1:
"172
[e :U 20 ]
[; ;main.c: 173: if(shiweiNum & 0x01)
"173
[e $ ! != & -> _shiweiNum `i -> 1 `i -> 0 `i 21  ]
[; ;main.c: 174: {
"174
{
[; ;main.c: 175: TRISA &= 0xFD;
"175
[e =& _TRISA -> -> 253 `i `uc ]
[; ;main.c: 176: TRISA &= 0xDF;
"176
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 177: RA1 = 1;
"177
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 178: RA5 = 0;
"178
[e = _RA5 -> -> 0 `i `b ]
"179
}
[e :U 21 ]
[; ;main.c: 179: }
[; ;main.c: 180: break;
"180
[e $U 18  ]
[; ;main.c: 181: case 2:
"181
[e :U 22 ]
[; ;main.c: 182: if(shiweiNum & 0x02)
"182
[e $ ! != & -> _shiweiNum `i -> 2 `i -> 0 `i 23  ]
[; ;main.c: 183: {
"183
{
[; ;main.c: 184: TRISA &= 0xF7;
"184
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 185: TRISA &= 0xFD;
"185
[e =& _TRISA -> -> 253 `i `uc ]
[; ;main.c: 186: RA1 = 1;
"186
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 187: RA3 = 0;
"187
[e = _RA3 -> -> 0 `i `b ]
"188
}
[e :U 23 ]
[; ;main.c: 188: }
[; ;main.c: 189: break;
"189
[e $U 18  ]
[; ;main.c: 190: case 3:
"190
[e :U 24 ]
[; ;main.c: 191: if(shiweiNum & 0x04)
"191
[e $ ! != & -> _shiweiNum `i -> 4 `i -> 0 `i 25  ]
[; ;main.c: 192: {
"192
{
[; ;main.c: 193: TRISA &= 0xF7;
"193
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 194: TRISA &= 0xEF;
"194
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 195: RA4 = 1;
"195
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 196: RA3 = 0;
"196
[e = _RA3 -> -> 0 `i `b ]
"197
}
[e :U 25 ]
[; ;main.c: 197: }
[; ;main.c: 198: break;
"198
[e $U 18  ]
[; ;main.c: 199: case 4:
"199
[e :U 26 ]
[; ;main.c: 200: if(shiweiNum & 0x08)
"200
[e $ ! != & -> _shiweiNum `i -> 8 `i -> 0 `i 27  ]
[; ;main.c: 201: {
"201
{
[; ;main.c: 202: TRISA &= 0xEF;
"202
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 203: TRISA &= 0xDF;
"203
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 204: RA5 = 1;
"204
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 205: RA4 = 0;
"205
[e = _RA4 -> -> 0 `i `b ]
"206
}
[e :U 27 ]
[; ;main.c: 206: }
[; ;main.c: 207: break;
"207
[e $U 18  ]
[; ;main.c: 208: case 5:
"208
[e :U 28 ]
[; ;main.c: 209: if(shiweiNum & 0x10)
"209
[e $ ! != & -> _shiweiNum `i -> 16 `i -> 0 `i 29  ]
[; ;main.c: 210: {
"210
{
[; ;main.c: 211: TRISA &= 0xDF;
"211
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 212: TRISA &= 0xF7;
"212
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 213: RA3 = 1;
"213
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 214: RA5 = 0;
"214
[e = _RA5 -> -> 0 `i `b ]
"215
}
[e :U 29 ]
[; ;main.c: 215: }
[; ;main.c: 216: break;
"216
[e $U 18  ]
[; ;main.c: 217: case 6:
"217
[e :U 30 ]
[; ;main.c: 218: if(shiweiNum & 0x20)
"218
[e $ ! != & -> _shiweiNum `i -> 32 `i -> 0 `i 31  ]
[; ;main.c: 219: {
"219
{
[; ;main.c: 220: TRISA &= 0xDF;
"220
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 221: TRISA &= 0xFD;
"221
[e =& _TRISA -> -> 253 `i `uc ]
[; ;main.c: 222: RA5 = 1;
"222
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 223: RA1 = 0;
"223
[e = _RA1 -> -> 0 `i `b ]
"224
}
[e :U 31 ]
[; ;main.c: 224: }
[; ;main.c: 225: break;
"225
[e $U 18  ]
[; ;main.c: 226: case 7:
"226
[e :U 32 ]
[; ;main.c: 227: if(shiweiNum & 0x40)
"227
[e $ ! != & -> _shiweiNum `i -> 64 `i -> 0 `i 33  ]
[; ;main.c: 228: {
"228
{
[; ;main.c: 229: TRISA &= 0xDF;
"229
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 230: TRISA &= 0xF7;
"230
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 231: RA5 = 1;
"231
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 232: RA3 = 0;
"232
[e = _RA3 -> -> 0 `i `b ]
"233
}
[e :U 33 ]
[; ;main.c: 233: }
[; ;main.c: 234: break;
"234
[e $U 18  ]
[; ;main.c: 235: case 8:
"235
[e :U 34 ]
[; ;main.c: 236: if(geweiNum & 0x01)
"236
[e $ ! != & -> _geweiNum `i -> 1 `i -> 0 `i 35  ]
[; ;main.c: 237: {
"237
{
[; ;main.c: 238: TRISA &= 0xFB;
"238
[e =& _TRISA -> -> 251 `i `uc ]
[; ;main.c: 239: TRISA &= 0xFD;
"239
[e =& _TRISA -> -> 253 `i `uc ]
[; ;main.c: 240: RA2 = 1;
"240
[e = _RA2 -> -> 1 `i `b ]
[; ;main.c: 241: RA1 = 0;
"241
[e = _RA1 -> -> 0 `i `b ]
"242
}
[e :U 35 ]
[; ;main.c: 242: }
[; ;main.c: 243: break;
"243
[e $U 18  ]
[; ;main.c: 244: case 9:
"244
[e :U 36 ]
[; ;main.c: 245: if(geweiNum & 0x02)
"245
[e $ ! != & -> _geweiNum `i -> 2 `i -> 0 `i 37  ]
[; ;main.c: 246: {
"246
{
[; ;main.c: 247: TRISA &= 0xFD;
"247
[e =& _TRISA -> -> 253 `i `uc ]
[; ;main.c: 248: TRISA &= 0xFB;
"248
[e =& _TRISA -> -> 251 `i `uc ]
[; ;main.c: 249: RA1 = 1;
"249
[e = _RA1 -> -> 1 `i `b ]
[; ;main.c: 250: RA2 = 0;
"250
[e = _RA2 -> -> 0 `i `b ]
"251
}
[e :U 37 ]
[; ;main.c: 251: }
[; ;main.c: 252: break;
"252
[e $U 18  ]
[; ;main.c: 253: case 10:
"253
[e :U 38 ]
[; ;main.c: 254: if(geweiNum & 0x04)
"254
[e $ ! != & -> _geweiNum `i -> 4 `i -> 0 `i 39  ]
[; ;main.c: 255: {
"255
{
[; ;main.c: 256: TRISA &= 0xFB;
"256
[e =& _TRISA -> -> 251 `i `uc ]
[; ;main.c: 257: TRISA &= 0xF7;
"257
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 258: RA3 = 1;
"258
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 259: RA2 = 0;
"259
[e = _RA2 -> -> 0 `i `b ]
"260
}
[e :U 39 ]
[; ;main.c: 260: }
[; ;main.c: 261: break;
"261
[e $U 18  ]
[; ;main.c: 262: case 11:
"262
[e :U 40 ]
[; ;main.c: 263: if(geweiNum & 0x08)
"263
[e $ ! != & -> _geweiNum `i -> 8 `i -> 0 `i 41  ]
[; ;main.c: 264: {
"264
{
[; ;main.c: 265: TRISA &= 0xDF;
"265
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 266: TRISA &= 0xEF;
"266
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 267: RA4 = 1;
"267
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 268: RA5 = 0;
"268
[e = _RA5 -> -> 0 `i `b ]
"269
}
[e :U 41 ]
[; ;main.c: 269: }
[; ;main.c: 270: break;
"270
[e $U 18  ]
[; ;main.c: 271: case 12:
"271
[e :U 42 ]
[; ;main.c: 272: if(geweiNum & 0x10)
"272
[e $ ! != & -> _geweiNum `i -> 16 `i -> 0 `i 43  ]
[; ;main.c: 273: {
"273
{
[; ;main.c: 274: TRISA &= 0xF7;
"274
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 275: TRISA &= 0xEF;
"275
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 276: RA3 = 1;
"276
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 277: RA4 = 0;
"277
[e = _RA4 -> -> 0 `i `b ]
"278
}
[e :U 43 ]
[; ;main.c: 278: }
[; ;main.c: 279: break;
"279
[e $U 18  ]
[; ;main.c: 280: case 13:
"280
[e :U 44 ]
[; ;main.c: 281: if(geweiNum & 0x20)
"281
[e $ ! != & -> _geweiNum `i -> 32 `i -> 0 `i 45  ]
[; ;main.c: 282: {
"282
{
[; ;main.c: 283: TRISA &= 0xF7;
"283
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 284: TRISA &= 0xFD;
"284
[e =& _TRISA -> -> 253 `i `uc ]
[; ;main.c: 285: RA3 = 1;
"285
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 286: RA1 = 0;
"286
[e = _RA1 -> -> 0 `i `b ]
"287
}
[e :U 45 ]
[; ;main.c: 287: }
[; ;main.c: 288: break;
"288
[e $U 18  ]
[; ;main.c: 289: case 0:
"289
[e :U 46 ]
[; ;main.c: 290: if(geweiNum & 0x40)
"290
[e $ ! != & -> _geweiNum `i -> 64 `i -> 0 `i 47  ]
[; ;main.c: 291: {
"291
{
[; ;main.c: 292: TRISA &= 0xFB;
"292
[e =& _TRISA -> -> 251 `i `uc ]
[; ;main.c: 293: TRISA &= 0xF7;
"293
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 294: RA2 = 1;
"294
[e = _RA2 -> -> 1 `i `b ]
[; ;main.c: 295: RA3 = 0;
"295
[e = _RA3 -> -> 0 `i `b ]
"296
}
[e :U 47 ]
[; ;main.c: 296: }
[; ;main.c: 297: break;
"297
[e $U 18  ]
[; ;main.c: 298: default:
"298
[e :U 48 ]
[; ;main.c: 299: break;
"299
[e $U 18  ]
"300
}
[; ;main.c: 300: }
[e $U 18  ]
"170
[e :U 19 ]
[e [\ _ledCnt , $ -> -> 1 `i `uc 20
 , $ -> -> 2 `i `uc 22
 , $ -> -> 3 `i `uc 24
 , $ -> -> 4 `i `uc 26
 , $ -> -> 5 `i `uc 28
 , $ -> -> 6 `i `uc 30
 , $ -> -> 7 `i `uc 32
 , $ -> -> 8 `i `uc 34
 , $ -> -> 9 `i `uc 36
 , $ -> -> 10 `i `uc 38
 , $ -> -> 11 `i `uc 40
 , $ -> -> 12 `i `uc 42
 , $ -> -> 13 `i `uc 44
 , $ -> -> 0 `i `uc 46
 48 ]
"300
[e :U 18 ]
"301
}
[e :U 16 ]
[; ;main.c: 301: }
[; ;main.c: 304: }
"304
[e :UE 15 ]
}
"311
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"312
{
[; ;main.c: 311: void chrgCtr()
[; ;main.c: 312: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 313: if(PORTB & 0x01)
"313
[e $ ! != & -> _PORTB `i -> 1 `i -> 0 `i 50  ]
[; ;main.c: 314: {
"314
{
[; ;main.c: 315: chrgFlag = 1;
"315
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 316: lowBatFlag = 0;
"316
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 317: if(PORTA & 0x01)
"317
[e $ ! != & -> _PORTA `i -> 1 `i -> 0 `i 51  ]
[; ;main.c: 318: {
"318
{
[; ;main.c: 319: chrgFullTime = 0;
"319
[e = _chrgFullTime -> -> 0 `i `uc ]
"320
}
[; ;main.c: 320: }
[e $U 52  ]
"321
[e :U 51 ]
[; ;main.c: 321: else
[; ;main.c: 322: {
"322
{
[; ;main.c: 323: if(++chrgFullTime >= 200)
"323
[e $ ! >= -> =+ _chrgFullTime -> -> 1 `i `uc `i -> 200 `i 53  ]
[; ;main.c: 324: {
"324
{
[; ;main.c: 325: chrgFullTime = 0;
"325
[e = _chrgFullTime -> -> 0 `i `uc ]
[; ;main.c: 326: chrgFullFlag = 1;
"326
[e = _chrgFullFlag -> -> 1 `i `uc ]
"327
}
[e :U 53 ]
"328
}
[e :U 52 ]
"329
}
[; ;main.c: 327: }
[; ;main.c: 328: }
[; ;main.c: 329: }
[e $U 54  ]
"330
[e :U 50 ]
[; ;main.c: 330: else
[; ;main.c: 331: {
"331
{
[; ;main.c: 332: chrgFlag = 0;
"332
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 333: chrgFullFlag = 0;
"333
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 334: chrgFullTime = 0;
"334
[e = _chrgFullTime -> -> 0 `i `uc ]
[; ;main.c: 335: if(power_ad < 1563)
"335
[e $ ! < _power_ad -> -> 1563 `i `ui 55  ]
[; ;main.c: 336: {
"336
{
[; ;main.c: 337: if(++lowBatTime > 200)
"337
[e $ ! > -> =+ _lowBatTime -> -> 1 `i `uc `i -> 200 `i 56  ]
[; ;main.c: 338: {
"338
{
[; ;main.c: 339: lowBatTime = 0;
"339
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 340: lowBatFlag = 1;
"340
[e = _lowBatFlag -> -> 1 `i `uc ]
"341
}
[e :U 56 ]
"342
}
[; ;main.c: 341: }
[; ;main.c: 342: }
[e $U 57  ]
"343
[e :U 55 ]
[; ;main.c: 343: else
[; ;main.c: 344: {
"344
{
[; ;main.c: 345: lowBatTime = 0;
"345
[e = _lowBatTime -> -> 0 `i `uc ]
"346
}
[e :U 57 ]
"347
}
[e :U 54 ]
[; ;main.c: 346: }
[; ;main.c: 347: }
[; ;main.c: 348: }
"348
[e :UE 49 ]
}
"352
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"353
{
[; ;main.c: 352: char keyRead(char keyStatus)
[; ;main.c: 353: {
[e :U _keyRead ]
"352
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"353
[f ]
[; ;main.c: 354: if(keyStatus)
"354
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 59  ]
[; ;main.c: 355: {
"355
{
[; ;main.c: 356: keyCount++;
"356
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 357: if(keyCount >= 100)
"357
[e $ ! >= -> _keyCount `i -> 100 `i 60  ]
[; ;main.c: 358: {
"358
{
[; ;main.c: 359: keyCount = 100;
"359
[e = _keyCount -> -> 100 `i `uc ]
[; ;main.c: 360: if(!longPressFlag)
"360
[e $ ! ! != -> _longPressFlag `i -> -> -> 0 `i `uc `i 61  ]
[; ;main.c: 361: {
"361
{
[; ;main.c: 362: longPressFlag = 1;
"362
[e = _longPressFlag -> -> 1 `i `uc ]
[; ;main.c: 363: return 2;
"363
[e ) -> -> 2 `i `uc ]
[e $UE 58  ]
"364
}
[e :U 61 ]
"365
}
[e :U 60 ]
"366
}
[; ;main.c: 364: }
[; ;main.c: 365: }
[; ;main.c: 366: }
[e $U 62  ]
"367
[e :U 59 ]
[; ;main.c: 367: else
[; ;main.c: 368: {
"368
{
[; ;main.c: 369: if(keyCount >= 100)
"369
[e $ ! >= -> _keyCount `i -> 100 `i 63  ]
[; ;main.c: 370: {
"370
{
[; ;main.c: 371: keyCount = 0;
"371
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 372: longPressFlag = 0;
"372
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 373: return 0;
"373
[e ) -> -> 0 `i `uc ]
[e $UE 58  ]
"374
}
[; ;main.c: 374: }
[e $U 64  ]
"375
[e :U 63 ]
[; ;main.c: 375: else if(keyCount >= 6)
[e $ ! >= -> _keyCount `i -> 6 `i 65  ]
[; ;main.c: 376: {
"376
{
[; ;main.c: 377: keyCount = 0;
"377
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 378: return 1;
"378
[e ) -> -> 1 `i `uc ]
[e $UE 58  ]
"379
}
[e :U 65 ]
"380
[e :U 64 ]
[; ;main.c: 379: }
[; ;main.c: 380: keyCount = 0;
[e = _keyCount -> -> 0 `i `uc ]
"381
}
[e :U 62 ]
[; ;main.c: 381: }
[; ;main.c: 382: return 0;
"382
[e ) -> -> 0 `i `uc ]
[e $UE 58  ]
[; ;main.c: 383: }
"383
[e :UE 58 ]
}
"387
[v _keyCtr `(v ~T0 @X0 1 ef ]
"388
{
[; ;main.c: 387: void keyCtr()
[; ;main.c: 388: {
[e :U _keyCtr ]
[f ]
[; ;main.c: 389: if(PORTB & 0x02)
"389
[e $ ! != & -> _PORTB `i -> 2 `i -> 0 `i 67  ]
[; ;main.c: 390: {
"390
{
[; ;main.c: 391: if(PORTB & 0x04)
"391
[e $ ! != & -> _PORTB `i -> 4 `i -> 0 `i 68  ]
[; ;main.c: 392: {
"392
{
[; ;main.c: 393: workStep = 1;
"393
[e = _workStep -> -> 1 `i `uc ]
"394
}
[; ;main.c: 394: }
[e $U 69  ]
"395
[e :U 68 ]
[; ;main.c: 395: else
[; ;main.c: 396: {
"396
{
[; ;main.c: 397: workStep = 2;
"397
[e = _workStep -> -> 2 `i `uc ]
"398
}
[e :U 69 ]
"399
}
[; ;main.c: 398: }
[; ;main.c: 399: }
[e $U 70  ]
"400
[e :U 67 ]
[; ;main.c: 400: else
[; ;main.c: 401: {
"401
{
[; ;main.c: 402: workStep = 0;
"402
[e = _workStep -> -> 0 `i `uc ]
"403
}
[e :U 70 ]
[; ;main.c: 403: }
[; ;main.c: 406: }
"406
[e :UE 66 ]
}
"409
[v _workCtr `(v ~T0 @X0 1 ef ]
"410
{
[; ;main.c: 409: void workCtr()
[; ;main.c: 410: {
[e :U _workCtr ]
[f ]
[; ;main.c: 418: if(lowShanTime > 0)
"418
[e $ ! > _lowShanTime -> -> 0 `i `ui 72  ]
[; ;main.c: 419: {
"419
{
[; ;main.c: 420: if(--lowShanTime == 0)
"420
[e $ ! == =- _lowShanTime -> -> 1 `i `ui -> -> 0 `i `ui 73  ]
[; ;main.c: 421: {
"421
{
[; ;main.c: 422: workStep = 0;
"422
[e = _workStep -> -> 0 `i `uc ]
"423
}
[e :U 73 ]
"424
}
[e :U 72 ]
[; ;main.c: 423: }
[; ;main.c: 424: }
[; ;main.c: 425: if(showBatTime > 0)
"425
[e $ ! > -> _showBatTime `i -> 0 `i 74  ]
[; ;main.c: 426: {
"426
{
[; ;main.c: 427: showBatTime--;
"427
[e -- _showBatTime -> -> 1 `i `uc ]
"428
}
[e :U 74 ]
[; ;main.c: 428: }
[; ;main.c: 429: if(firstTime > 0)
"429
[e $ ! > -> _firstTime `i -> 0 `i 75  ]
[; ;main.c: 430: {
"430
{
[; ;main.c: 431: firstTime--;
"431
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 432: if(showBatStep < curBatStep)
"432
[e $ ! < -> _showBatStep `i -> _curBatStep `i 76  ]
[; ;main.c: 433: {
"433
{
[; ;main.c: 434: showBatStep = curBatStep;
"434
[e = _showBatStep _curBatStep ]
"435
}
[e :U 76 ]
[; ;main.c: 435: }
[; ;main.c: 436: shiweiNum = numArray[8];
"436
[e = _shiweiNum *U + &U _numArray * -> -> -> 8 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 437: geweiNum = numArray[8];
"437
[e = _geweiNum *U + &U _numArray * -> -> -> 8 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"438
}
[; ;main.c: 438: }
[e $U 77  ]
"439
[e :U 75 ]
[; ;main.c: 439: else if(workStep == 0 || (lowShanTime > 0 && count1s < 50))
[e $ ! || == -> _workStep `i -> 0 `i && > _lowShanTime -> -> 0 `i `ui < -> _count1s `i -> 50 `i 78  ]
[; ;main.c: 440: {
"440
{
[; ;main.c: 441: shiweiNum = 0;
"441
[e = _shiweiNum -> -> 0 `i `uc ]
[; ;main.c: 442: geweiNum = 0;
"442
[e = _geweiNum -> -> 0 `i `uc ]
[; ;main.c: 443: pwmStop();
"443
[e ( _pwmStop ..  ]
[; ;main.c: 444: count900s = 0;
"444
[e = _count900s -> -> 0 `i `ui ]
"445
}
[; ;main.c: 445: }
[e $U 79  ]
"446
[e :U 78 ]
[; ;main.c: 446: else if(workStep == 1)
[e $ ! == -> _workStep `i -> 1 `i 80  ]
[; ;main.c: 447: {
"447
{
[; ;main.c: 448: if(chrgFlag == 0)
"448
[e $ ! == -> _chrgFlag `i -> 0 `i 81  ]
[; ;main.c: 449: {
"449
{
[; ;main.c: 450: shiweiNum = numArray[10];
"450
[e = _shiweiNum *U + &U _numArray * -> -> -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 451: geweiNum = numArray[1];
"451
[e = _geweiNum *U + &U _numArray * -> -> -> 1 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"452
}
[e :U 81 ]
[; ;main.c: 452: }
[; ;main.c: 453: if(motorPwmFlag == 0)
"453
[e $ ! == -> _motorPwmFlag `i -> 0 `i 82  ]
[; ;main.c: 454: {
"454
{
[; ;main.c: 455: pwmInit();
"455
[e ( _pwmInit ..  ]
"456
}
[e :U 82 ]
[; ;main.c: 456: }
[; ;main.c: 457: PWMD23H = 0X00;
"457
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 458: PWMD2L = 60;
"458
[e = _PWMD2L -> -> 60 `i `uc ]
"459
}
[; ;main.c: 459: }
[e $U 83  ]
"460
[e :U 80 ]
[; ;main.c: 460: else if(workStep == 2)
[e $ ! == -> _workStep `i -> 2 `i 84  ]
[; ;main.c: 461: {
"461
{
[; ;main.c: 462: if(chrgFlag == 0)
"462
[e $ ! == -> _chrgFlag `i -> 0 `i 85  ]
[; ;main.c: 463: {
"463
{
[; ;main.c: 464: shiweiNum = numArray[10];
"464
[e = _shiweiNum *U + &U _numArray * -> -> -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 465: geweiNum = numArray[2];
"465
[e = _geweiNum *U + &U _numArray * -> -> -> 2 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"466
}
[e :U 85 ]
[; ;main.c: 466: }
[; ;main.c: 467: if(motorPwmFlag == 0)
"467
[e $ ! == -> _motorPwmFlag `i -> 0 `i 86  ]
[; ;main.c: 468: {
"468
{
[; ;main.c: 469: pwmInit();
"469
[e ( _pwmInit ..  ]
"470
}
[e :U 86 ]
[; ;main.c: 470: }
[; ;main.c: 471: PWMD23H = 0X00;
"471
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 472: PWMD2L = 99;
"472
[e = _PWMD2L -> -> 99 `i `uc ]
"474
}
[e :U 84 ]
"475
[e :U 83 ]
[e :U 79 ]
[e :U 77 ]
[; ;main.c: 474: }
[; ;main.c: 475: if(chrgFlag || showBatTime > 0)
[e $ ! || != -> _chrgFlag `i -> -> -> 0 `i `uc `i > -> _showBatTime `i -> 0 `i 87  ]
[; ;main.c: 476: {
"476
{
[; ;main.c: 477: if(showBatStep >=99)
"477
[e $ ! >= -> _showBatStep `i -> 99 `i 88  ]
[; ;main.c: 478: {
"478
{
[; ;main.c: 479: shiweiNum = numArray[9];
"479
[e = _shiweiNum *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 480: geweiNum = numArray[9];
"480
[e = _geweiNum *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"481
}
[; ;main.c: 481: }
[e $U 89  ]
"482
[e :U 88 ]
[; ;main.c: 482: else if(showBatStep > 9)
[e $ ! > -> _showBatStep `i -> 9 `i 90  ]
[; ;main.c: 483: {
"483
{
[; ;main.c: 484: baiweiNum = 0;
"484
[e = _baiweiNum -> -> 0 `i `uc ]
[; ;main.c: 485: shiweiNum = numArray[showBatStep/10];
"485
[e = _shiweiNum *U + &U _numArray * -> -> / -> _showBatStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 486: if(chrgFlag && count1s < 50)
"486
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i < -> _count1s `i -> 50 `i 91  ]
[; ;main.c: 487: {
"487
{
[; ;main.c: 488: geweiNum = 0;
"488
[e = _geweiNum -> -> 0 `i `uc ]
"489
}
[; ;main.c: 489: }
[e $U 92  ]
"490
[e :U 91 ]
[; ;main.c: 490: else
[; ;main.c: 491: {
"491
{
[; ;main.c: 492: geweiNum = numArray[showBatStep%10];
"492
[e = _geweiNum *U + &U _numArray * -> -> % -> _showBatStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"493
}
[e :U 92 ]
"494
}
[; ;main.c: 493: }
[; ;main.c: 494: }
[e $U 93  ]
"495
[e :U 90 ]
[; ;main.c: 495: else
[; ;main.c: 496: {
"496
{
[; ;main.c: 497: baiweiNum = 0;
"497
[e = _baiweiNum -> -> 0 `i `uc ]
[; ;main.c: 498: shiweiNum = 0;
"498
[e = _shiweiNum -> -> 0 `i `uc ]
[; ;main.c: 499: if(chrgFlag && count1s < 50)
"499
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i < -> _count1s `i -> 50 `i 94  ]
[; ;main.c: 500: {
"500
{
[; ;main.c: 501: geweiNum = 0;
"501
[e = _geweiNum -> -> 0 `i `uc ]
"502
}
[; ;main.c: 502: }
[e $U 95  ]
"503
[e :U 94 ]
[; ;main.c: 503: else
[; ;main.c: 504: {
"504
{
[; ;main.c: 505: geweiNum = numArray[showBatStep];
"505
[e = _geweiNum *U + &U _numArray * -> _showBatStep `ux -> -> # *U &U _numArray `ui `ux ]
"506
}
[e :U 95 ]
"507
}
[e :U 93 ]
[e :U 89 ]
"509
}
[e :U 87 ]
[; ;main.c: 506: }
[; ;main.c: 507: }
[; ;main.c: 509: }
[; ;main.c: 511: }
"511
[e :UE 71 ]
}
"513
[v _setBatStep `(v ~T0 @X0 1 ef ]
"514
{
[; ;main.c: 513: void setBatStep()
[; ;main.c: 514: {
[e :U _setBatStep ]
[f ]
[; ;main.c: 515: if(lowBatFlag == 1 && lowShanTime == 0 && workStep > 0)
"515
[e $ ! && && == -> _lowBatFlag `i -> 1 `i == _lowShanTime -> -> 0 `i `ui > -> _workStep `i -> 0 `i 97  ]
[; ;main.c: 516: {
"516
{
[; ;main.c: 517: showBatStep = 0;
"517
[e = _showBatStep -> -> 0 `i `uc ]
[; ;main.c: 518: curBatStep = 0;
"518
[e = _curBatStep -> -> 0 `i `uc ]
[; ;main.c: 519: lowShanTime = 300;
"519
[e = _lowShanTime -> -> 300 `i `ui ]
"520
}
[; ;main.c: 520: }
[e $U 98  ]
"521
[e :U 97 ]
[; ;main.c: 521: else if(power_ad < 1675)
[e $ ! < _power_ad -> -> 1675 `i `ui 99  ]
[; ;main.c: 522: {
"522
{
[; ;main.c: 523: if(count1s == 0)
"523
[e $ ! == -> _count1s `i -> 0 `i 100  ]
[; ;main.c: 524: {
"524
{
[; ;main.c: 525: if(showBatStep > 1)
"525
[e $ ! > -> _showBatStep `i -> 1 `i 101  ]
[; ;main.c: 526: {
"526
{
[; ;main.c: 527: if(chrgFlag == 0)
"527
[e $ ! == -> _chrgFlag `i -> 0 `i 102  ]
[; ;main.c: 528: showBatStep--;
"528
[e -- _showBatStep -> -> 1 `i `uc ]
[e :U 102 ]
"529
}
[; ;main.c: 529: }
[e $U 103  ]
"530
[e :U 101 ]
[; ;main.c: 530: else
[; ;main.c: 531: {
"531
{
[; ;main.c: 532: showBatStep = 1;
"532
[e = _showBatStep -> -> 1 `i `uc ]
"533
}
[e :U 103 ]
[; ;main.c: 533: }
[; ;main.c: 534: curBatStep = 1;
"534
[e = _curBatStep -> -> 1 `i `uc ]
"535
}
[e :U 100 ]
[; ;main.c: 535: }
[; ;main.c: 536: curBatStep = 1;
"536
[e = _curBatStep -> -> 1 `i `uc ]
"537
}
[; ;main.c: 537: }
[e $U 104  ]
"538
[e :U 99 ]
[; ;main.c: 538: else
[; ;main.c: 539: {
"539
{
[; ;main.c: 540: if(power_ad < 1875)
"540
[e $ ! < _power_ad -> -> 1875 `i `ui 105  ]
[; ;main.c: 541: {
"541
{
[; ;main.c: 542: curBatStep = (power_ad - 1675)/10;
"542
[e = _curBatStep -> / - _power_ad -> -> 1675 `i `ui -> -> 10 `i `ui `uc ]
"543
}
[; ;main.c: 543: }
[e $U 106  ]
"544
[e :U 105 ]
[; ;main.c: 544: else
[; ;main.c: 545: {
"545
{
[; ;main.c: 546: curBatStep = 10 + ((power_ad - 1875)/5);
"546
[e = _curBatStep -> + -> -> 10 `i `ui / - _power_ad -> -> 1875 `i `ui -> -> 5 `i `ui `uc ]
"547
}
[e :U 106 ]
[; ;main.c: 547: }
[; ;main.c: 548: if(curBatStep > 99)
"548
[e $ ! > -> _curBatStep `i -> 99 `i 107  ]
[; ;main.c: 549: {
"549
{
[; ;main.c: 550: curBatStep = 99;
"550
[e = _curBatStep -> -> 99 `i `uc ]
"551
}
[e :U 107 ]
[; ;main.c: 551: }
[; ;main.c: 553: if(chrgFlag)
"553
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 108  ]
[; ;main.c: 554: {
"554
{
[; ;main.c: 555: if(chrgFullFlag)
"555
[e $ ! != -> _chrgFullFlag `i -> -> -> 0 `i `uc `i 109  ]
[; ;main.c: 556: {
"556
{
[; ;main.c: 557: if(++count30s >= 3000 && showBatStep < 99)
"557
[e $ ! && >= =+ _count30s -> -> 1 `i `ui -> -> 3000 `i `ui < -> _showBatStep `i -> 99 `i 110  ]
[; ;main.c: 558: {
"558
{
[; ;main.c: 559: count30s = 0;
"559
[e = _count30s -> -> 0 `i `ui ]
[; ;main.c: 560: showBatStep++;
"560
[e ++ _showBatStep -> -> 1 `i `uc ]
"561
}
[e :U 110 ]
"562
}
[; ;main.c: 561: }
[; ;main.c: 562: }
[e $U 111  ]
"563
[e :U 109 ]
[; ;main.c: 563: else if(curBatStep > showBatStep)
[e $ ! > -> _curBatStep `i -> _showBatStep `i 112  ]
[; ;main.c: 564: {
"564
{
[; ;main.c: 565: if(++count30s >= 30000 && showBatStep < 99)
"565
[e $ ! && >= =+ _count30s -> -> 1 `i `ui -> -> 30000 `i `ui < -> _showBatStep `i -> 99 `i 113  ]
[; ;main.c: 566: {
"566
{
[; ;main.c: 567: count30s = 0;
"567
[e = _count30s -> -> 0 `i `ui ]
[; ;main.c: 568: showBatStep++;
"568
[e ++ _showBatStep -> -> 1 `i `uc ]
"569
}
[e :U 113 ]
"571
}
[; ;main.c: 569: }
[; ;main.c: 571: }
[e $U 114  ]
"572
[e :U 112 ]
[; ;main.c: 572: else
[; ;main.c: 573: {
"573
{
[; ;main.c: 574: count30s = 0;
"574
[e = _count30s -> -> 0 `i `ui ]
"575
}
[e :U 114 ]
[e :U 111 ]
"576
}
[; ;main.c: 575: }
[; ;main.c: 576: }
[e $U 115  ]
"577
[e :U 108 ]
[; ;main.c: 577: else
[; ;main.c: 578: {
"578
{
[; ;main.c: 579: if(curBatStep < showBatStep && showBatStep > 1)
"579
[e $ ! && < -> _curBatStep `i -> _showBatStep `i > -> _showBatStep `i -> 1 `i 116  ]
[; ;main.c: 580: {
"580
{
[; ;main.c: 581: if(++count30s >= 1500 && showBatStep > 1)
"581
[e $ ! && >= =+ _count30s -> -> 1 `i `ui -> -> 1500 `i `ui > -> _showBatStep `i -> 1 `i 117  ]
[; ;main.c: 582: {
"582
{
[; ;main.c: 583: count30s = 0;
"583
[e = _count30s -> -> 0 `i `ui ]
[; ;main.c: 584: showBatStep--;
"584
[e -- _showBatStep -> -> 1 `i `uc ]
"585
}
[e :U 117 ]
"586
}
[; ;main.c: 585: }
[; ;main.c: 586: }
[e $U 118  ]
"587
[e :U 116 ]
[; ;main.c: 587: else
[; ;main.c: 588: {
"588
{
[; ;main.c: 589: count30s = 0;
"589
[e = _count30s -> -> 0 `i `ui ]
"590
}
[e :U 118 ]
"591
}
[e :U 115 ]
"593
}
[e :U 104 ]
[e :U 98 ]
[; ;main.c: 590: }
[; ;main.c: 591: }
[; ;main.c: 593: }
[; ;main.c: 594: }
"594
[e :UE 96 ]
}
"597
[v _checkBatAD `(v ~T0 @X0 1 ef ]
"598
{
[; ;main.c: 597: void checkBatAD()
[; ;main.c: 598: {
[e :U _checkBatAD ]
[f ]
[; ;main.c: 599: test_adc = ADC_Sample(12, 5);
"599
[e = _test_adc ( _ADC_Sample (2 , -> -> 12 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 600: if (0xA5 == test_adc)
"600
[e $ ! == -> 165 `i -> _test_adc `i 120  ]
[; ;main.c: 601: {
"601
{
"602
[v _power_temp `Vul ~T0 @X0 1 a ]
[; ;main.c: 602: volatile unsigned long power_temp;
[; ;main.c: 604: power_ad = adresult;
"604
[e = _power_ad _adresult ]
"605
}
[; ;main.c: 605: }
[e $U 121  ]
"606
[e :U 120 ]
[; ;main.c: 606: else
[; ;main.c: 607: {
"607
{
[; ;main.c: 608: ADCON0 = 0;
"608
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 609: ADCON1 = 0;
"609
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 610: _delay((unsigned long)((100)*(16000000/4000000.0)));
"610
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"611
}
[e :U 121 ]
[; ;main.c: 611: }
[; ;main.c: 613: }
"613
[e :UE 119 ]
}
"624
[v _Init_System `(v ~T0 @X0 1 ef ]
"625
{
[; ;main.c: 624: void Init_System()
[; ;main.c: 625: {
[e :U _Init_System ]
[f ]
[; ;main.c: 626: asm("nop");
"626
[; <" nop ;# ">
[; ;main.c: 627: asm("clrwdt");
"627
[; <" clrwdt ;# ">
[; ;main.c: 628: OPTION_REG = 0;
"628
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 629: asm("clrwdt");
"629
[; <" clrwdt ;# ">
[; ;main.c: 630: OSCCON = 0X72;
"630
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 632: WPUA = 0x00;
"632
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 633: WPDA = 0x00;
"633
[e = _WPDA -> -> 0 `i `uc ]
[; ;main.c: 634: WPUB = 0x04;
"634
[e = _WPUB -> -> 4 `i `uc ]
[; ;main.c: 636: TRISA = 0x01;
"636
[e = _TRISA -> -> 1 `i `uc ]
[; ;main.c: 637: TRISB = 0x37;
"637
[e = _TRISB -> -> 55 `i `uc ]
[; ;main.c: 639: PORTA = 0X00;
"639
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 640: PORTB = 0X00;
"640
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 644: PR2 = 249;
"644
[e = _PR2 -> -> 249 `i `uc ]
[; ;main.c: 645: TMR2IF = 0;
"645
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 646: TMR2IE = 1;
"646
[e = _TMR2IE -> -> 1 `i `b ]
[; ;main.c: 648: T2CON = 0B00000100;
"648
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 649: INTCON = 0XC0;
"649
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 650: }
"650
[e :UE 122 ]
}
"661
[v _AD_Init `(v ~T0 @X0 1 ef ]
"662
{
[; ;main.c: 661: void AD_Init()
[; ;main.c: 662: {
[e :U _AD_Init ]
[f ]
[; ;main.c: 694: ADCON0 = 0X41;
"694
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 711: ADCON1 = 0;
"711
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 712: ANSEL0 = 0X00;
"712
[e = _ANSEL0 -> -> 0 `i `uc ]
[; ;main.c: 713: ANSEL1 = 0x30;
"713
[e = _ANSEL1 -> -> 48 `i `uc ]
[; ;main.c: 714: }
"714
[e :UE 123 ]
}
"717
[v _pwmInit `(v ~T0 @X0 1 ef ]
"718
{
[; ;main.c: 717: void pwmInit()
[; ;main.c: 718: {
[e :U _pwmInit ]
[f ]
[; ;main.c: 719: PWMCON1 = 0B00000000;
"719
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 720: PWMTH = 0X00;
"720
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 721: PWMTL = 100;
"721
[e = _PWMTL -> -> 100 `i `uc ]
[; ;main.c: 724: PWMD23H = 0;
"724
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 725: PWMD2L = 60;
"725
[e = _PWMD2L -> -> 60 `i `uc ]
[; ;main.c: 726: PWM23DT = 0X00;
"726
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 728: PWMCON0 = 0X64;
"728
[e = _PWMCON0 -> -> 100 `i `uc ]
[; ;main.c: 729: PWMCON2 =0X00;
"729
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 730: motorPwmFlag = 1;
"730
[e = _motorPwmFlag -> -> 1 `i `uc ]
[; ;main.c: 731: }
"731
[e :UE 124 ]
}
"733
[v _pwmStop `(v ~T0 @X0 1 ef ]
"734
{
[; ;main.c: 733: void pwmStop()
[; ;main.c: 734: {
[e :U _pwmStop ]
[f ]
[; ;main.c: 735: PWMCON0 &= 0XFB;
"735
[e =& _PWMCON0 -> -> 251 `i `uc ]
[; ;main.c: 736: RB3 = 0;
"736
[e = _RB3 -> -> 0 `i `b ]
[; ;main.c: 737: motorPwmFlag = 0;
"737
[e = _motorPwmFlag -> -> 0 `i `uc ]
[; ;main.c: 738: }
"738
[e :UE 125 ]
}
"748
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"749
{
[; ;main.c: 748: void Sleep_Mode()
[; ;main.c: 749: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 750: INTCON = 0;
"750
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 752: OPTION_REG = 0;
"752
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 754: WPUA = 0x00;
"754
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 755: TRISA = 0x01;
"755
[e = _TRISA -> -> 1 `i `uc ]
[; ;main.c: 756: TRISB = 0x37;
"756
[e = _TRISB -> -> 55 `i `uc ]
[; ;main.c: 758: PORTA = 0X00;
"758
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 759: PORTB = 0X00;
"759
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 760: WPUB = 0x04;
"760
[e = _WPUB -> -> 4 `i `uc ]
[; ;main.c: 762: ADCON0 = 0;
"762
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 763: ADCON1 = 0;
"763
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 765: PWMCON0 = 0;
"765
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 767: OSCCON = 0X70;
"767
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 769: IOCA = 0B00000000;
"769
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 770: IOCB = 0x07;
"770
[e = _IOCB -> -> 7 `i `uc ]
[; ;main.c: 772: RAIE = 1;
"772
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 773: PEIE = 1;
"773
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 774: RBIE = 1;
"774
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 775: GIE = 0;
"775
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 777: PIE1 &= 0X08;
"777
[e =& _PIE1 -> -> 8 `i `uc ]
[; ;main.c: 778: PIR1 = 0;
"778
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 779: INTCON &= 0XC8;
"779
[e =& _INTCON -> -> 200 `i `uc ]
[; ;main.c: 781: PORTA;
"781
[e _PORTA ]
[; ;main.c: 782: RAIF = 0;
"782
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 783: PORTB;
"783
[e _PORTB ]
[; ;main.c: 784: RBIF = 0;
"784
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 785: asm("clrwdt");
"785
[; <" clrwdt ;# ">
[; ;main.c: 787: asm("sleep");
"787
[; <" sleep ;# ">
[; ;main.c: 789: asm("nop");
"789
[; <" nop ;# ">
[; ;main.c: 790: asm("clrwdt");
"790
[; <" clrwdt ;# ">
[; ;main.c: 791: asm("nop");
"791
[; <" nop ;# ">
[; ;main.c: 792: asm("nop");
"792
[; <" nop ;# ">
[; ;main.c: 793: asm("nop");
"793
[; <" nop ;# ">
[; ;main.c: 794: asm("nop");
"794
[; <" nop ;# ">
[; ;main.c: 795: asm("nop");
"795
[; <" nop ;# ">
[; ;main.c: 796: if(RAIF) RAIF = 0;
"796
[e $ ! _RAIF 127  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 127 ]
[; ;main.c: 797: if(RBIF) RBIF = 0;
"797
[e $ ! _RBIF 128  ]
[e = _RBIF -> -> 0 `i `b ]
[e :U 128 ]
[; ;main.c: 798: if(TMR2IF) TMR2IF = 0;
"798
[e $ ! _TMR2IF 129  ]
[e = _TMR2IF -> -> 0 `i `b ]
[e :U 129 ]
[; ;main.c: 799: IOCA = 0B00000000;
"799
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 800: IOCB = 0B00000000;
"800
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 801: Init_System();
"801
[e ( _Init_System ..  ]
[; ;main.c: 802: AD_Init();
"802
[e ( _AD_Init ..  ]
[; ;main.c: 803: }
"803
[e :UE 126 ]
}
"825
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"826
{
[; ;main.c: 825: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 826: {
[e :U _ADC_Sample ]
"825
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"826
[f ]
"827
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 827: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"828
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 828: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"829
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 829: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 831: if ((!LDO_EN) && (adldo & 0x04) )
"831
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 131  ]
[; ;main.c: 832: {
"832
{
[; ;main.c: 834: ADCON1 = adldo;
"834
[e = _ADCON1 _adldo ]
[; ;main.c: 835: _delay((unsigned long)((100)*(16000000/4000000.0)));
"835
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"836
}
[; ;main.c: 836: }
[e $U 132  ]
"837
[e :U 131 ]
[; ;main.c: 837: else
[; ;main.c: 838: ADCON1 = adldo;
"838
[e = _ADCON1 _adldo ]
[e :U 132 ]
[; ;main.c: 840: if(adch & 0x10)
"840
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 133  ]
[; ;main.c: 841: {
"841
{
[; ;main.c: 842: CHS4 = 1;
"842
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 843: adch &= 0x0f;
"843
[e =& _adch -> -> 15 `i `uc ]
"844
}
[e :U 133 ]
"845
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 844: }
[; ;main.c: 845: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 846: for (i = 0; i < 10; i++)
"846
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 134  ]
[e $U 135  ]
"847
[e :U 134 ]
[; ;main.c: 847: {
{
[; ;main.c: 848: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"848
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 849: asm("nop");
"849
[; <" nop ;# ">
[; ;main.c: 850: asm("nop");
"850
[; <" nop ;# ">
[; ;main.c: 851: asm("nop");
"851
[; <" nop ;# ">
[; ;main.c: 852: asm("nop");
"852
[; <" nop ;# ">
[; ;main.c: 853: GODONE = 1;
"853
[e = _GODONE -> -> 1 `i `b ]
"855
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 855: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 856: while (GODONE)
"856
[e $U 137  ]
[e :U 138 ]
[; ;main.c: 857: {
"857
{
[; ;main.c: 858: _delay((unsigned long)((2)*(16000000/4000000.0)));
"858
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;main.c: 860: if (0 == (--j))
"860
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 140  ]
[; ;main.c: 861: return 0;
"861
[e ) -> -> 0 `i `uc ]
[e $UE 130  ]
[e :U 140 ]
"862
}
[e :U 137 ]
"856
[e $ _GODONE 138  ]
[e :U 139 ]
[; ;main.c: 862: }
[; ;main.c: 864: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"864
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 866: if (0 == admax)
"866
[e $ ! == -> -> 0 `i `ui _admax 141  ]
[; ;main.c: 867: {
"867
{
[; ;main.c: 868: admax = ad_temp;
"868
[e = _admax _ad_temp ]
[; ;main.c: 869: admin = ad_temp;
"869
[e = _admin _ad_temp ]
"870
}
[; ;main.c: 870: }
[e $U 142  ]
"871
[e :U 141 ]
[; ;main.c: 871: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 143  ]
[; ;main.c: 872: admax = ad_temp;
"872
[e = _admax _ad_temp ]
[e $U 144  ]
"873
[e :U 143 ]
[; ;main.c: 873: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 145  ]
[; ;main.c: 874: admin = ad_temp;
"874
[e = _admin _ad_temp ]
[e :U 145 ]
"876
[e :U 144 ]
[e :U 142 ]
[; ;main.c: 876: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"877
}
"846
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 134  ]
[e :U 135 ]
"877
}
[; ;main.c: 877: }
[; ;main.c: 878: adsum -= admax;
"878
[e =- _adsum -> _admax `ul ]
[; ;main.c: 879: if (adsum >= admin)
"879
[e $ ! >= _adsum -> _admin `ul 146  ]
[; ;main.c: 880: adsum -= admin;
"880
[e =- _adsum -> _admin `ul ]
[e $U 147  ]
"881
[e :U 146 ]
[; ;main.c: 881: else
[; ;main.c: 882: adsum = 0;
"882
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 147 ]
[; ;main.c: 884: adresult = adsum >> 3;
"884
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 886: adsum = 0;
"886
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 887: admin = 0;
"887
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 888: admax = 0;
"888
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 889: return 0xA5;
"889
[e ) -> -> 165 `i `uc ]
[e $UE 130  ]
[; ;main.c: 891: }
"891
[e :UE 130 ]
}
