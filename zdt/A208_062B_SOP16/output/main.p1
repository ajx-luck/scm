Version 3.2 HI-TECH Software Intermediate Code
"111 C:\mcuproject\scm\zdt\A208_062B_SOP16\main.c
[v _ledShow `(v ~T0 @X0 0 ef ]
[p mainexit ]
"101
[v _Init_System `(v ~T0 @X0 0 ef ]
"102
[v _AD_Init `(v ~T0 @X0 0 ef ]
"109
[v _checkOutA `(v ~T0 @X0 0 ef ]
"116
[v _jrPwm `(v ~T0 @X0 0 ef ]
"108
[v _chrgCtr `(v ~T0 @X0 0 ef ]
"110
[v _checkBatAD `(v ~T0 @X0 0 ef ]
"112
[v _keyCtr `(v ~T0 @X0 0 ef ]
"113
[v _workCtr `(v ~T0 @X0 0 ef ]
"114
[v _ledCtr `(v ~T0 @X0 0 ef ]
"103
[v _Sleep_Mode `(v ~T0 @X0 0 ef ]
"107
[v _chrgPwmStop `(v ~T0 @X0 0 ef ]
"105
[v _pwmStop `(v ~T0 @X0 0 ef ]
"106
[v _chrgPwmInit `(v ~T0 @X0 0 ef ]
"104
[v _pwmInit `(v ~T0 @X0 0 ef ]
"98
[v _ADC_Sample `(uc ~T0 @X0 0 ef2`uc`uc ]
[v F479 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF479 ~T0 @X0 0 e ]
[p i __delay ]
"4 C:\mcuproject\scm\zdt\A208_062B_SOP16\main.c
[p n 752 ]
"5
[p n 373 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\SC8P062BD.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;SC8P062BD.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;SC8P062BD.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;SC8P062BD.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;SC8P062BD.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;SC8P062BD.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;SC8P062BD.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;SC8P062BD.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;SC8P062BD.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMPCON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 20: volatile unsigned char CMPCON0 @ 0x0F;
"21
[v _CMPCON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;SC8P062BD.h: 21: volatile unsigned char CMPCON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;SC8P062BD.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;SC8P062BD.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;SC8P062BD.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P062BD.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;SC8P062BD.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;SC8P062BD.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;SC8P062BD.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;SC8P062BD.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;SC8P062BD.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;SC8P062BD.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;SC8P062BD.h: 44: volatile unsigned char ANSEL0 @ 0x93;
"45
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;SC8P062BD.h: 45: volatile unsigned char ANSEL1 @ 0x94;
"46
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;SC8P062BD.h: 46: volatile unsigned char ADCON0 @ 0x95;
"47
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;SC8P062BD.h: 47: volatile unsigned char ADCON1 @ 0x96;
"48
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 48: volatile unsigned char ADRESL @ 0x98;
"49
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 49: volatile unsigned char ADRESH @ 0x99;
"50
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 50: volatile unsigned char PWMD2L @ 0x9B;
"51
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 51: volatile unsigned char PWMD3L @ 0x9C;
"52
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 52: volatile unsigned char PWM23DT @ 0x9D;
"53
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 53: volatile unsigned char PWMD23H @ 0x9E;
"55
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 55: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"56
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 56: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"57
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 57: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"58
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 58: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"59
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 59: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"60
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 60: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"61
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 61: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"62
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 62: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"65
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 65: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"66
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 66: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"67
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 67: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"68
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 68: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"69
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 69: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"70
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 70: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"71
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 71: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"72
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 72: volatile bit C @ ((unsigned)&STATUS*8)+0;
"75
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P062BD.h: 75: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"76
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P062BD.h: 76: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"77
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P062BD.h: 77: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"78
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P062BD.h: 78: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"79
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P062BD.h: 79: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"80
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P062BD.h: 80: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"81
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P062BD.h: 81: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"82
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P062BD.h: 82: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"85
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;SC8P062BD.h: 85: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"86
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;SC8P062BD.h: 86: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"87
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;SC8P062BD.h: 87: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"88
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;SC8P062BD.h: 88: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"89
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;SC8P062BD.h: 89: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"90
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;SC8P062BD.h: 90: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"91
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;SC8P062BD.h: 91: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"92
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;SC8P062BD.h: 92: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"95
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;SC8P062BD.h: 95: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"96
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;SC8P062BD.h: 96: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"97
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;SC8P062BD.h: 97: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"98
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;SC8P062BD.h: 98: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"99
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;SC8P062BD.h: 99: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"100
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;SC8P062BD.h: 100: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"101
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;SC8P062BD.h: 101: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"104
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;SC8P062BD.h: 104: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"105
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;SC8P062BD.h: 105: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"106
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;SC8P062BD.h: 106: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"107
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;SC8P062BD.h: 107: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"108
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;SC8P062BD.h: 108: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"109
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;SC8P062BD.h: 109: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"110
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;SC8P062BD.h: 110: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"111
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P062BD.h: 111: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"114
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;SC8P062BD.h: 114: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"115
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;SC8P062BD.h: 115: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"116
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;SC8P062BD.h: 116: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"117
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;SC8P062BD.h: 117: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"118
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P062BD.h: 118: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"119
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;SC8P062BD.h: 119: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"120
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;SC8P062BD.h: 120: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"121
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P062BD.h: 121: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"124
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;SC8P062BD.h: 124: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"125
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;SC8P062BD.h: 125: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"126
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;SC8P062BD.h: 126: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"127
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;SC8P062BD.h: 127: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"128
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;SC8P062BD.h: 128: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"129
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;SC8P062BD.h: 129: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"130
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;SC8P062BD.h: 130: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"131
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;SC8P062BD.h: 131: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"134
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;SC8P062BD.h: 134: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"135
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;SC8P062BD.h: 135: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"136
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;SC8P062BD.h: 136: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"137
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;SC8P062BD.h: 137: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"138
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;SC8P062BD.h: 138: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"139
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;SC8P062BD.h: 139: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"140
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;SC8P062BD.h: 140: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"143
[v _CMPIF `Vb ~T0 @X0 1 e@109 ]
[; ;SC8P062BD.h: 143: volatile bit CMPIF @ ((unsigned)&PIR1*8)+5;
"144
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;SC8P062BD.h: 144: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"145
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;SC8P062BD.h: 145: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"146
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;SC8P062BD.h: 146: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"147
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;SC8P062BD.h: 147: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"150
[v _CMPIE `Vb ~T0 @X0 1 e@117 ]
[; ;SC8P062BD.h: 150: volatile bit CMPIE @ ((unsigned)&PIE1*8)+5;
"151
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;SC8P062BD.h: 151: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"152
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;SC8P062BD.h: 152: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"153
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;SC8P062BD.h: 153: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"154
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;SC8P062BD.h: 154: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"157
[v _CMPEN `Vb ~T0 @X0 1 e@127 ]
[; ;SC8P062BD.h: 157: volatile bit CMPEN @ ((unsigned)&CMPCON0*8)+7;
"158
[v _CMPPS `Vb ~T0 @X0 1 e@126 ]
[; ;SC8P062BD.h: 158: volatile bit CMPPS @ ((unsigned)&CMPCON0*8)+6;
"159
[v _CMPNS2 `Vb ~T0 @X0 1 e@125 ]
[; ;SC8P062BD.h: 159: volatile bit CMPNS2 @ ((unsigned)&CMPCON0*8)+5;
"160
[v _CMPNS1 `Vb ~T0 @X0 1 e@124 ]
[; ;SC8P062BD.h: 160: volatile bit CMPNS1 @ ((unsigned)&CMPCON0*8)+4;
"161
[v _CMPNS0 `Vb ~T0 @X0 1 e@123 ]
[; ;SC8P062BD.h: 161: volatile bit CMPNS0 @ ((unsigned)&CMPCON0*8)+3;
"162
[v _CMPNV `Vb ~T0 @X0 1 e@122 ]
[; ;SC8P062BD.h: 162: volatile bit CMPNV @ ((unsigned)&CMPCON0*8)+2;
"163
[v _CMPOUT `Vb ~T0 @X0 1 e@121 ]
[; ;SC8P062BD.h: 163: volatile bit CMPOUT @ ((unsigned)&CMPCON0*8)+1;
"164
[v _CMPOEN `Vb ~T0 @X0 1 e@120 ]
[; ;SC8P062BD.h: 164: volatile bit CMPOEN @ ((unsigned)&CMPCON0*8)+0;
"167
[v _CMPIM `Vb ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 167: volatile bit CMPIM @ ((unsigned)&CMPCON1*8)+7;
"168
[v _AN_EN `Vb ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 168: volatile bit AN_EN @ ((unsigned)&CMPCON1*8)+6;
"169
[v _RBIAS_H `Vb ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 169: volatile bit RBIAS_H @ ((unsigned)&CMPCON1*8)+5;
"170
[v _RBIAS_L `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P062BD.h: 170: volatile bit RBIAS_L @ ((unsigned)&CMPCON1*8)+4;
"171
[v _LVDS3 `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P062BD.h: 171: volatile bit LVDS3 @ ((unsigned)&CMPCON1*8)+3;
"172
[v _LVDS2 `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P062BD.h: 172: volatile bit LVDS2 @ ((unsigned)&CMPCON1*8)+2;
"173
[v _LVDS1 `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 173: volatile bit LVDS1 @ ((unsigned)&CMPCON1*8)+1;
"174
[v _LVDS0 `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P062BD.h: 174: volatile bit LVDS0 @ ((unsigned)&CMPCON1*8)+0;
"177
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;SC8P062BD.h: 177: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"178
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 178: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"179
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 179: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"180
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 180: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"181
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 181: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"182
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;SC8P062BD.h: 182: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"183
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 183: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"184
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 184: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"187
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;SC8P062BD.h: 187: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"188
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;SC8P062BD.h: 188: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"189
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;SC8P062BD.h: 189: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"190
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;SC8P062BD.h: 190: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"193
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;SC8P062BD.h: 193: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"194
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P062BD.h: 194: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"195
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;SC8P062BD.h: 195: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"196
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;SC8P062BD.h: 196: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"197
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;SC8P062BD.h: 197: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"198
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;SC8P062BD.h: 198: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"199
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;SC8P062BD.h: 199: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"200
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;SC8P062BD.h: 200: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"203
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;SC8P062BD.h: 203: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"204
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;SC8P062BD.h: 204: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"205
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;SC8P062BD.h: 205: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"206
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;SC8P062BD.h: 206: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"207
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;SC8P062BD.h: 207: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"208
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;SC8P062BD.h: 208: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"211
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;SC8P062BD.h: 211: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"212
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;SC8P062BD.h: 212: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"213
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;SC8P062BD.h: 213: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"214
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;SC8P062BD.h: 214: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"215
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;SC8P062BD.h: 215: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"216
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;SC8P062BD.h: 216: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"219
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;SC8P062BD.h: 219: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"220
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;SC8P062BD.h: 220: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"221
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;SC8P062BD.h: 221: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"222
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;SC8P062BD.h: 222: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"223
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;SC8P062BD.h: 223: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"226
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;SC8P062BD.h: 226: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"227
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;SC8P062BD.h: 227: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"228
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;SC8P062BD.h: 228: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"229
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;SC8P062BD.h: 229: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"232
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;SC8P062BD.h: 232: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"233
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;SC8P062BD.h: 233: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"234
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;SC8P062BD.h: 234: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"235
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;SC8P062BD.h: 235: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"236
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;SC8P062BD.h: 236: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"237
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;SC8P062BD.h: 237: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"240
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;SC8P062BD.h: 240: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"241
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;SC8P062BD.h: 241: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"242
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;SC8P062BD.h: 242: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"243
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;SC8P062BD.h: 243: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"244
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;SC8P062BD.h: 244: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"245
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;SC8P062BD.h: 245: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"248
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;SC8P062BD.h: 248: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"249
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;SC8P062BD.h: 249: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"250
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;SC8P062BD.h: 250: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"251
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;SC8P062BD.h: 251: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"252
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;SC8P062BD.h: 252: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"253
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;SC8P062BD.h: 253: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"256
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;SC8P062BD.h: 256: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"257
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;SC8P062BD.h: 257: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"258
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;SC8P062BD.h: 258: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"259
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;SC8P062BD.h: 259: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"260
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;SC8P062BD.h: 260: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"261
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;SC8P062BD.h: 261: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"264
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;SC8P062BD.h: 264: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"265
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;SC8P062BD.h: 265: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"266
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;SC8P062BD.h: 266: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"267
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;SC8P062BD.h: 267: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"268
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;SC8P062BD.h: 268: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"269
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;SC8P062BD.h: 269: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"272
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;SC8P062BD.h: 272: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"273
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;SC8P062BD.h: 273: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"274
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;SC8P062BD.h: 274: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"275
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;SC8P062BD.h: 275: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"276
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;SC8P062BD.h: 276: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"277
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;SC8P062BD.h: 277: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"280
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;SC8P062BD.h: 280: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"281
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;SC8P062BD.h: 281: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"282
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;SC8P062BD.h: 282: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"283
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;SC8P062BD.h: 283: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"284
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;SC8P062BD.h: 284: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"285
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;SC8P062BD.h: 285: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"288
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;SC8P062BD.h: 288: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"289
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;SC8P062BD.h: 289: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"290
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;SC8P062BD.h: 290: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"291
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;SC8P062BD.h: 291: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"292
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;SC8P062BD.h: 292: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"293
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;SC8P062BD.h: 293: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"296
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;SC8P062BD.h: 296: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"297
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;SC8P062BD.h: 297: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"298
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;SC8P062BD.h: 298: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"299
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;SC8P062BD.h: 299: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"300
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;SC8P062BD.h: 300: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"301
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;SC8P062BD.h: 301: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"302
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;SC8P062BD.h: 302: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"305
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;SC8P062BD.h: 305: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"306
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;SC8P062BD.h: 306: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"307
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;SC8P062BD.h: 307: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"308
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;SC8P062BD.h: 308: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"309
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;SC8P062BD.h: 309: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"310
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;SC8P062BD.h: 310: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"311
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;SC8P062BD.h: 311: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"312
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;SC8P062BD.h: 312: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"315
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;SC8P062BD.h: 315: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"316
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;SC8P062BD.h: 316: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"317
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;SC8P062BD.h: 317: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"318
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;SC8P062BD.h: 318: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"319
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;SC8P062BD.h: 319: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"322
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;SC8P062BD.h: 322: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"323
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;SC8P062BD.h: 323: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"324
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;SC8P062BD.h: 324: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"325
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;SC8P062BD.h: 325: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"30 C:\mcuproject\scm\zdt\A208_062B_SOP16\main.c
[v _numArray `Cuc ~T0 @X0 -> 0 `x s ]
[i _numArray
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 113 `i `uc
-> -> 121 `i `uc
-> -> 80 `i `uc
-> -> 118 `i `uc
..
]
[; ;main.c: 30: const static unsigned char numArray[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x71,0x79,0x50,0x76};
"32
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 32: volatile unsigned int adresult;
"33
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 33: volatile unsigned int result;
"34
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 34: volatile unsigned char test_adc;
"35
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 35: volatile unsigned int power_ad;
"36
[v _intCount `uc ~T0 @X0 1 e ]
[; ;main.c: 36: unsigned char intCount;
"37
[v _count1s `uc ~T0 @X0 1 e ]
[; ;main.c: 37: unsigned char count1s;
"38
[v _IntFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 38: unsigned char IntFlag;
"39
[v _chrgFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 39: unsigned char chrgFlag;
"40
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 40: unsigned char chrgFullFlag;
"41
[v _intCount10 `uc ~T0 @X0 1 e ]
[; ;main.c: 41: unsigned char intCount10;
"42
[v _outADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 42: unsigned int outADValue;
"43
[v _batADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 43: unsigned int batADValue;
"44
[v _countHalfFull `uc ~T0 @X0 1 e ]
[; ;main.c: 44: unsigned char countHalfFull;
"45
[v _protectFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 45: unsigned char protectFlag;
"46
[v _workOverOutTime `uc ~T0 @X0 1 e ]
[; ;main.c: 46: unsigned char workOverOutTime;
"47
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 47: unsigned char workStep = 0;
"48
[v _ledCnt `uc ~T0 @X0 1 e ]
[; ;main.c: 48: unsigned char ledCnt;
"49
[v _ledStep `uc ~T0 @X0 1 e ]
[; ;main.c: 49: unsigned char ledStep;
"50
[v _keyCount `uc ~T0 @X0 1 e ]
[; ;main.c: 50: unsigned char keyCount;
"51
[v _keyCount2 `uc ~T0 @X0 1 e ]
[; ;main.c: 51: unsigned char keyCount2;
"52
[v _longPressFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 52: unsigned char longPressFlag;
"53
[v _longPressFlag2 `uc ~T0 @X0 1 e ]
[; ;main.c: 53: unsigned char longPressFlag2;
"54
[v _maxDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 54: unsigned char maxDuty;
"55
[v _overCount `uc ~T0 @X0 1 e ]
[; ;main.c: 55: unsigned char overCount;
"56
[v _addPowerCount `uc ~T0 @X0 1 e ]
[; ;main.c: 56: unsigned char addPowerCount;
"57
[v _tempDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 57: unsigned char tempDuty;
"58
[v _startTime `uc ~T0 @X0 1 e ]
[; ;main.c: 58: unsigned char startTime;
"59
[v _firstTime `uc ~T0 @X0 1 e ]
[; ;main.c: 59: unsigned char firstTime;
"60
[v _overChrgTime `uc ~T0 @X0 1 e ]
[; ;main.c: 60: unsigned char overChrgTime;
"61
[v _pwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 61: unsigned char pwStep;
"62
[v _prePwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 62: unsigned char prePwStep;
"63
[v _count50s `ui ~T0 @X0 1 e ]
[; ;main.c: 63: unsigned int count50s;
"64
[v _reChrgCount `uc ~T0 @X0 1 e ]
[; ;main.c: 64: unsigned char reChrgCount;
"65
[v _lockLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 65: unsigned char lockLedStep;
"66
[v _showBatTime `uc ~T0 @X0 1 e ]
[; ;main.c: 66: unsigned char showBatTime;
"67
[v _chrgMode `uc ~T0 @X0 1 e ]
[i _chrgMode
-> -> 0 `i `uc
]
[; ;main.c: 67: unsigned char chrgMode = 0;
"68
[v _chrgMaxAD `uc ~T0 @X0 1 e ]
[i _chrgMaxAD
-> -> 0 `i `uc
]
[; ;main.c: 68: unsigned char chrgMaxAD = 0;
"69
[v _lockCount `uc ~T0 @X0 1 e ]
[i _lockCount
-> -> 0 `i `uc
]
[; ;main.c: 69: unsigned char lockCount = 0;
"70
[v _fullCount `ui ~T0 @X0 1 e ]
[i _fullCount
-> -> 0 `i `ui
]
[; ;main.c: 70: unsigned int fullCount = 0;
"71
[v _addTime `uc ~T0 @X0 1 e ]
[; ;main.c: 71: unsigned char addTime;
"72
[v _subTime `uc ~T0 @X0 1 e ]
[; ;main.c: 72: unsigned char subTime;
"73
[v _chrgWaitTime `uc ~T0 @X0 1 e ]
[; ;main.c: 73: unsigned char chrgWaitTime;
"74
[v _chrgMaxDuty `uc ~T0 @X0 1 e ]
[i _chrgMaxDuty
-> -> 0 `i `uc
]
[; ;main.c: 74: unsigned char chrgMaxDuty = 0;
"75
[v _ledCntTime `uc ~T0 @X0 1 e ]
[; ;main.c: 75: unsigned char ledCntTime;
"76
[v _count5s `ui ~T0 @X0 1 e ]
[i _count5s
-> -> 0 `i `ui
]
[; ;main.c: 76: unsigned int count5s = 0;
"77
[v _overWorkTime `ui ~T0 @X0 1 e ]
[; ;main.c: 77: unsigned int overWorkTime;
"78
[v _preLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 78: unsigned char preLedStep;
"79
[v _count8s `ui ~T0 @X0 1 e ]
[; ;main.c: 79: unsigned int count8s;
"80
[v _count900s `ui ~T0 @X0 1 e ]
[; ;main.c: 80: unsigned int count900s;
"81
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 81: unsigned char lowBatFlag = 0;
"82
[v _sleepTime `uc ~T0 @X0 1 e ]
[; ;main.c: 82: unsigned char sleepTime;
"83
[v _startChrgTime `uc ~T0 @X0 1 e ]
[i _startChrgTime
-> -> 0 `i `uc
]
[; ;main.c: 83: unsigned char startChrgTime = 0;
"84
[v _shiweiNum `uc ~T0 @X0 1 e ]
[i _shiweiNum
-> -> 0 `i `uc
]
[; ;main.c: 84: unsigned char shiweiNum = 0;
"85
[v _geweiNum `uc ~T0 @X0 1 e ]
[i _geweiNum
-> -> 0 `i `uc
]
[; ;main.c: 85: unsigned char geweiNum = 0;
"86
[v _jrStep `uc ~T0 @X0 1 e ]
[i _jrStep
-> -> 0 `i `uc
]
[; ;main.c: 86: unsigned char jrStep = 0;
"87
[v _preWorkStep `uc ~T0 @X0 1 e ]
[i _preWorkStep
-> -> 0 `i `uc
]
[; ;main.c: 87: unsigned char preWorkStep = 0;
"88
[v _prejrStep `uc ~T0 @X0 1 e ]
[i _prejrStep
-> -> 0 `i `uc
]
[; ;main.c: 88: unsigned char prejrStep = 0;
"89
[v _chrgPwmFlag `uc ~T0 @X0 1 e ]
[i _chrgPwmFlag
-> -> 0 `i `uc
]
[; ;main.c: 89: unsigned char chrgPwmFlag = 0;
"90
[v _motorPwmFlag `uc ~T0 @X0 1 e ]
[i _motorPwmFlag
-> -> 0 `i `uc
]
[; ;main.c: 90: unsigned char motorPwmFlag = 0;
"91
[v _jrStartTime `ui ~T0 @X0 1 e ]
[i _jrStartTime
-> -> 0 `i `ui
]
[; ;main.c: 91: unsigned int jrStartTime = 0;
"92
[v _jrShowTime `uc ~T0 @X0 1 e ]
[i _jrShowTime
-> -> 0 `i `uc
]
[; ;main.c: 92: unsigned char jrShowTime = 0;
"93
[v _jrPwmTime `uc ~T0 @X0 1 e ]
[i _jrPwmTime
-> -> 0 `i `uc
]
[; ;main.c: 93: unsigned char jrPwmTime = 0;
"94
[v _jrDuty `uc ~T0 @X0 1 e ]
[i _jrDuty
-> -> 0 `i `uc
]
[; ;main.c: 94: unsigned char jrDuty = 0;
"95
[v _jrDutyFX `uc ~T0 @X0 1 e ]
[i _jrDutyFX
-> -> 0 `i `uc
]
[; ;main.c: 95: unsigned char jrDutyFX = 0;
"96
[v _jrWaitTime `uc ~T0 @X0 1 e ]
[i _jrWaitTime
-> -> 0 `i `uc
]
[; ;main.c: 96: unsigned char jrWaitTime = 0;
[; ;main.c: 98: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
[; ;main.c: 99: void DelayXms(unsigned char x);
[; ;main.c: 100: unsigned char ADC_Result(unsigned char adch);
[; ;main.c: 101: void Init_System();
[; ;main.c: 102: void AD_Init();
[; ;main.c: 103: void Sleep_Mode();
[; ;main.c: 104: void pwmInit();
[; ;main.c: 105: void pwmStop();
[; ;main.c: 106: void chrgPwmInit();
[; ;main.c: 107: void chrgPwmStop();
[; ;main.c: 108: void chrgCtr();
[; ;main.c: 109: void checkOutA();
[; ;main.c: 110: void checkBatAD();
[; ;main.c: 111: void ledShow();
[; ;main.c: 112: void keyCtr();
[; ;main.c: 113: void workCtr();
[; ;main.c: 114: void ledCtr();
[; ;main.c: 115: char keyRead(char keyStatus);
[; ;main.c: 116: void jrPwm();
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F574 `(v ~T0 @X0 1 tf ]
"131
[v _Isr_Timer `IF574 ~T0 @X0 1 e ]
"132
{
[; ;main.c: 131: void interrupt Isr_Timer()
[; ;main.c: 132: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 133: if(TMR2IF)
"133
[e $ ! _TMR2IF 2  ]
[; ;main.c: 134: {
"134
{
[; ;main.c: 135: TMR2IF = 0;
"135
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 136: if(++intCount >= 160)
"136
[e $ ! >= -> =+ _intCount -> -> 1 `i `uc `i -> 160 `i 3  ]
[; ;main.c: 137: {
"137
{
[; ;main.c: 138: intCount = 0;
"138
[e = _intCount -> -> 0 `i `uc ]
[; ;main.c: 139: IntFlag = 1;
"139
[e = _IntFlag -> -> 1 `i `uc ]
[; ;main.c: 140: if(++count1s >= 100)
"140
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 4  ]
[; ;main.c: 141: {
"141
{
[; ;main.c: 142: count1s = 0;
"142
[e = _count1s -> -> 0 `i `uc ]
"143
}
[e :U 4 ]
"144
}
[e :U 3 ]
[; ;main.c: 143: }
[; ;main.c: 144: }
[; ;main.c: 145: ledShow();
"145
[e ( _ledShow ..  ]
[; ;main.c: 146: intCount10++;
"146
[e ++ _intCount10 -> -> 1 `i `uc ]
"147
}
[e :U 2 ]
[; ;main.c: 147: }
[; ;main.c: 149: }
"149
[e :UE 1 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"155
[v _main `(v ~T0 @X0 1 ef ]
"156
{
[; ;main.c: 155: void main()
[; ;main.c: 156: {
[e :U _main ]
[f ]
[; ;main.c: 157: Init_System();
"157
[e ( _Init_System ..  ]
[; ;main.c: 158: AD_Init();
"158
[e ( _AD_Init ..  ]
[; ;main.c: 159: shiweiNum = geweiNum = numArray[8];
"159
[e = _shiweiNum = _geweiNum *U + &U _numArray * -> -> -> 8 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 160: firstTime = 200;
"160
[e = _firstTime -> -> 200 `i `uc ]
[; ;main.c: 161: while (1)
"161
[e :U 7 ]
[; ;main.c: 162: {
"162
{
[; ;main.c: 163: asm("clrwdt");
"163
[; <" clrwdt ;# ">
[; ;main.c: 164: if(intCount10 > 10)
"164
[e $ ! > -> _intCount10 `i -> 10 `i 9  ]
[; ;main.c: 165: {
"165
{
[; ;main.c: 166: intCount10 = 0;
"166
[e = _intCount10 -> -> 0 `i `uc ]
[; ;main.c: 167: checkOutA();
"167
[e ( _checkOutA ..  ]
"168
}
[e :U 9 ]
[; ;main.c: 168: }
[; ;main.c: 169: if(jrStartTime == 0 && jrStep > 0)
"169
[e $ ! && == _jrStartTime -> -> 0 `i `ui > -> _jrStep `i -> 0 `i 10  ]
[; ;main.c: 170: {
"170
{
[; ;main.c: 171: jrPwm();
"171
[e ( _jrPwm ..  ]
"172
}
[e :U 10 ]
[; ;main.c: 172: }
[; ;main.c: 173: if(!IntFlag)
"173
[e $ ! ! != -> _IntFlag `i -> -> -> 0 `i `uc `i 11  ]
[; ;main.c: 174: continue;
"174
[e $U 6  ]
[e :U 11 ]
[; ;main.c: 175: IntFlag = 0;
"175
[e = _IntFlag -> -> 0 `i `uc ]
[; ;main.c: 176: chrgCtr();
"176
[e ( _chrgCtr ..  ]
[; ;main.c: 177: checkBatAD();
"177
[e ( _checkBatAD ..  ]
[; ;main.c: 178: if(chrgFlag == 0 && lowBatFlag == 0 && firstTime == 0)
"178
[e $ ! && && == -> _chrgFlag `i -> 0 `i == -> _lowBatFlag `i -> 0 `i == -> _firstTime `i -> 0 `i 12  ]
[; ;main.c: 179: {
"179
{
[; ;main.c: 180: keyCtr();
"180
[e ( _keyCtr ..  ]
"181
}
[e :U 12 ]
[; ;main.c: 181: }
[; ;main.c: 182: workCtr();
"182
[e ( _workCtr ..  ]
[; ;main.c: 183: ledCtr();
"183
[e ( _ledCtr ..  ]
[; ;main.c: 184: if(chrgFlag == 0 && workStep == 0 && keyCount == 0 && firstTime == 0 && showBatTime == 0 && overWorkTime == 0)
"184
[e $ ! && && && && && == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _firstTime `i -> 0 `i == -> _showBatTime `i -> 0 `i == _overWorkTime -> -> 0 `i `ui 13  ]
[; ;main.c: 185: {
"185
{
[; ;main.c: 186: shiweiNum = geweiNum = 0;
"186
[e = _shiweiNum = _geweiNum -> -> 0 `i `uc ]
[; ;main.c: 187: if(++sleepTime >= 200)
"187
[e $ ! >= -> =+ _sleepTime -> -> 1 `i `uc `i -> 200 `i 14  ]
[; ;main.c: 188: {
"188
{
[; ;main.c: 189: sleepTime = 0;
"189
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 190: Sleep_Mode();
"190
[e ( _Sleep_Mode ..  ]
"191
}
[e :U 14 ]
"192
}
[; ;main.c: 191: }
[; ;main.c: 192: }
[e $U 15  ]
"193
[e :U 13 ]
[; ;main.c: 193: else
[; ;main.c: 194: {
"194
{
[; ;main.c: 195: sleepTime = 0;
"195
[e = _sleepTime -> -> 0 `i `uc ]
"196
}
[e :U 15 ]
"197
}
[e :U 6 ]
"161
[e $U 7  ]
[e :U 8 ]
[; ;main.c: 196: }
[; ;main.c: 197: }
[; ;main.c: 198: }
"198
[e :UE 5 ]
}
"200
[v _ledShow `(v ~T0 @X0 1 ef ]
"201
{
[; ;main.c: 200: void ledShow()
[; ;main.c: 201: {
[e :U _ledShow ]
[f ]
[; ;main.c: 202: if(++ledCntTime > 5)
"202
[e $ ! > -> =+ _ledCntTime -> -> 1 `i `uc `i -> 5 `i 17  ]
[; ;main.c: 203: {
"203
{
[; ;main.c: 204: ledCntTime = 0;
"204
[e = _ledCntTime -> -> 0 `i `uc ]
[; ;main.c: 205: if(++ledCnt > 15)
"205
[e $ ! > -> =+ _ledCnt -> -> 1 `i `uc `i -> 15 `i 18  ]
[; ;main.c: 206: {
"206
{
[; ;main.c: 207: ledCnt = 0;
"207
[e = _ledCnt -> -> 0 `i `uc ]
"208
}
[e :U 18 ]
[; ;main.c: 208: }
[; ;main.c: 209: PORTA &= 0xC7;
"209
[e =& _PORTA -> -> 199 `i `uc ]
[; ;main.c: 210: PORTB &= 0x9F;
"210
[e =& _PORTB -> -> 159 `i `uc ]
[; ;main.c: 211: TRISA |= 0x38;
"211
[e =| _TRISA -> -> 56 `i `uc ]
[; ;main.c: 212: TRISB |= 0x60;
"212
[e =| _TRISB -> -> 96 `i `uc ]
[; ;main.c: 213: switch(ledCnt)
"213
[e $U 20  ]
[; ;main.c: 214: {
"214
{
[; ;main.c: 215: case 1:
"215
[e :U 21 ]
[; ;main.c: 216: if(shiweiNum & 0x01)
"216
[e $ ! != & -> _shiweiNum `i -> 1 `i -> 0 `i 22  ]
[; ;main.c: 217: {
"217
{
[; ;main.c: 218: TRISA &= 0xF7;
"218
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 219: TRISA &= 0xEF;
"219
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 220: RA3 = 1;
"220
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 221: RA4 = 0;
"221
[e = _RA4 -> -> 0 `i `b ]
"222
}
[e :U 22 ]
[; ;main.c: 222: }
[; ;main.c: 223: break;
"223
[e $U 19  ]
[; ;main.c: 224: case 2:
"224
[e :U 23 ]
[; ;main.c: 225: if(shiweiNum & 0x02)
"225
[e $ ! != & -> _shiweiNum `i -> 2 `i -> 0 `i 24  ]
[; ;main.c: 226: {
"226
{
[; ;main.c: 227: TRISA &= 0xF7;
"227
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 228: TRISA &= 0xEF;
"228
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 229: RA4 = 1;
"229
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 230: RA3 = 0;
"230
[e = _RA3 -> -> 0 `i `b ]
"231
}
[e :U 24 ]
[; ;main.c: 231: }
[; ;main.c: 232: break;
"232
[e $U 19  ]
[; ;main.c: 233: case 3:
"233
[e :U 25 ]
[; ;main.c: 234: if(shiweiNum & 0x04)
"234
[e $ ! != & -> _shiweiNum `i -> 4 `i -> 0 `i 26  ]
[; ;main.c: 235: {
"235
{
[; ;main.c: 236: TRISA &= 0xF7;
"236
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 237: TRISB &= 0xBF;
"237
[e =& _TRISB -> -> 191 `i `uc ]
[; ;main.c: 238: RA3 = 1;
"238
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 239: RB6 = 0;
"239
[e = _RB6 -> -> 0 `i `b ]
"240
}
[e :U 26 ]
[; ;main.c: 240: }
[; ;main.c: 241: break;
"241
[e $U 19  ]
[; ;main.c: 242: case 4:
"242
[e :U 27 ]
[; ;main.c: 243: if(shiweiNum & 0x08)
"243
[e $ ! != & -> _shiweiNum `i -> 8 `i -> 0 `i 28  ]
[; ;main.c: 244: {
"244
{
[; ;main.c: 245: TRISA &= 0xEF;
"245
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 246: TRISB &= 0xBF;
"246
[e =& _TRISB -> -> 191 `i `uc ]
[; ;main.c: 247: RA4 = 1;
"247
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 248: RB6 = 0;
"248
[e = _RB6 -> -> 0 `i `b ]
"249
}
[e :U 28 ]
[; ;main.c: 249: }
[; ;main.c: 250: break;
"250
[e $U 19  ]
[; ;main.c: 251: case 5:
"251
[e :U 29 ]
[; ;main.c: 252: if(shiweiNum & 0x10)
"252
[e $ ! != & -> _shiweiNum `i -> 16 `i -> 0 `i 30  ]
[; ;main.c: 253: {
"253
{
[; ;main.c: 254: TRISA &= 0xEF;
"254
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 255: TRISB &= 0xDF;
"255
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 256: RA4 = 1;
"256
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 257: RB5 = 0;
"257
[e = _RB5 -> -> 0 `i `b ]
"258
}
[e :U 30 ]
[; ;main.c: 258: }
[; ;main.c: 259: break;
"259
[e $U 19  ]
[; ;main.c: 260: case 6:
"260
[e :U 31 ]
[; ;main.c: 261: if(shiweiNum & 0x20)
"261
[e $ ! != & -> _shiweiNum `i -> 32 `i -> 0 `i 32  ]
[; ;main.c: 262: {
"262
{
[; ;main.c: 263: TRISA &= 0xF7;
"263
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 264: TRISB &= 0xDF;
"264
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 265: RA3 = 1;
"265
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 266: RB5 = 0;
"266
[e = _RB5 -> -> 0 `i `b ]
"267
}
[e :U 32 ]
[; ;main.c: 267: }
[; ;main.c: 268: break;
"268
[e $U 19  ]
[; ;main.c: 269: case 7:
"269
[e :U 33 ]
[; ;main.c: 270: if(shiweiNum & 0x40)
"270
[e $ ! != & -> _shiweiNum `i -> 64 `i -> 0 `i 34  ]
[; ;main.c: 271: {
"271
{
[; ;main.c: 272: TRISB &= 0xBF;
"272
[e =& _TRISB -> -> 191 `i `uc ]
[; ;main.c: 273: TRISB &= 0xDF;
"273
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 274: RB6 = 1;
"274
[e = _RB6 -> -> 1 `i `b ]
[; ;main.c: 275: RB5 = 0;
"275
[e = _RB5 -> -> 0 `i `b ]
"276
}
[e :U 34 ]
[; ;main.c: 276: }
[; ;main.c: 277: break;
"277
[e $U 19  ]
[; ;main.c: 278: case 8:
"278
[e :U 35 ]
[; ;main.c: 279: if(geweiNum & 0x01)
"279
[e $ ! != & -> _geweiNum `i -> 1 `i -> 0 `i 36  ]
[; ;main.c: 280: {
"280
{
[; ;main.c: 281: TRISA &= 0xDF;
"281
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 282: TRISA &= 0xEF;
"282
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 283: RA4 = 1;
"283
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 284: RA5 = 0;
"284
[e = _RA5 -> -> 0 `i `b ]
"285
}
[e :U 36 ]
[; ;main.c: 285: }
[; ;main.c: 286: break;
"286
[e $U 19  ]
[; ;main.c: 287: case 9:
"287
[e :U 37 ]
[; ;main.c: 288: if(geweiNum & 0x02)
"288
[e $ ! != & -> _geweiNum `i -> 2 `i -> 0 `i 38  ]
[; ;main.c: 289: {
"289
{
[; ;main.c: 290: TRISA &= 0xDF;
"290
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 291: TRISA &= 0xEF;
"291
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 292: RA5 = 1;
"292
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 293: RA4 = 0;
"293
[e = _RA4 -> -> 0 `i `b ]
"294
}
[e :U 38 ]
[; ;main.c: 294: }
[; ;main.c: 295: break;
"295
[e $U 19  ]
[; ;main.c: 296: case 10:
"296
[e :U 39 ]
[; ;main.c: 297: if(geweiNum & 0x04)
"297
[e $ ! != & -> _geweiNum `i -> 4 `i -> 0 `i 40  ]
[; ;main.c: 298: {
"298
{
[; ;main.c: 299: TRISA &= 0xDF;
"299
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 300: TRISA &= 0xF7;
"300
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 301: RA3 = 1;
"301
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 302: RA5 = 0;
"302
[e = _RA5 -> -> 0 `i `b ]
"303
}
[e :U 40 ]
[; ;main.c: 303: }
[; ;main.c: 304: break;
"304
[e $U 19  ]
[; ;main.c: 305: case 11:
"305
[e :U 41 ]
[; ;main.c: 306: if(geweiNum & 0x08)
"306
[e $ ! != & -> _geweiNum `i -> 8 `i -> 0 `i 42  ]
[; ;main.c: 307: {
"307
{
[; ;main.c: 308: TRISA &= 0xDF;
"308
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 309: TRISA &= 0xF7;
"309
[e =& _TRISA -> -> 247 `i `uc ]
[; ;main.c: 310: RA5 = 1;
"310
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 311: RA3 = 0;
"311
[e = _RA3 -> -> 0 `i `b ]
"312
}
[e :U 42 ]
[; ;main.c: 312: }
[; ;main.c: 313: break;
"313
[e $U 19  ]
[; ;main.c: 314: case 12:
"314
[e :U 43 ]
[; ;main.c: 315: if(geweiNum & 0x10)
"315
[e $ ! != & -> _geweiNum `i -> 16 `i -> 0 `i 44  ]
[; ;main.c: 316: {
"316
{
[; ;main.c: 317: TRISA &= 0xDF;
"317
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 318: TRISB &= 0xBF;
"318
[e =& _TRISB -> -> 191 `i `uc ]
[; ;main.c: 319: RB6 = 1;
"319
[e = _RB6 -> -> 1 `i `b ]
[; ;main.c: 320: RA5 = 0;
"320
[e = _RA5 -> -> 0 `i `b ]
"321
}
[e :U 44 ]
[; ;main.c: 321: }
[; ;main.c: 322: break;
"322
[e $U 19  ]
[; ;main.c: 323: case 13:
"323
[e :U 45 ]
[; ;main.c: 324: if(geweiNum & 0x20)
"324
[e $ ! != & -> _geweiNum `i -> 32 `i -> 0 `i 46  ]
[; ;main.c: 325: {
"325
{
[; ;main.c: 326: TRISA &= 0xDF;
"326
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 327: TRISB &= 0xBF;
"327
[e =& _TRISB -> -> 191 `i `uc ]
[; ;main.c: 328: RA5 = 1;
"328
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 329: RB6 = 0;
"329
[e = _RB6 -> -> 0 `i `b ]
"330
}
[e :U 46 ]
[; ;main.c: 330: }
[; ;main.c: 331: break;
"331
[e $U 19  ]
[; ;main.c: 332: case 14:
"332
[e :U 47 ]
[; ;main.c: 333: if(geweiNum & 0x40)
"333
[e $ ! != & -> _geweiNum `i -> 64 `i -> 0 `i 48  ]
[; ;main.c: 334: {
"334
{
[; ;main.c: 335: TRISA &= 0xDF;
"335
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 336: TRISB &= 0xDF;
"336
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 337: RA5 = 1;
"337
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 338: RB5 = 0;
"338
[e = _RB5 -> -> 0 `i `b ]
"339
}
[e :U 48 ]
[; ;main.c: 339: }
[; ;main.c: 340: break;
"340
[e $U 19  ]
[; ;main.c: 341: case 15:
"341
[e :U 49 ]
[; ;main.c: 342: if(workStep > 0)
"342
[e $ ! > -> _workStep `i -> 0 `i 50  ]
[; ;main.c: 343: {
"343
{
[; ;main.c: 344: TRISA &= 0xEF;
"344
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 345: TRISB &= 0xDF;
"345
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 346: RB5 = 1;
"346
[e = _RB5 -> -> 1 `i `b ]
[; ;main.c: 347: RA4 = 0;
"347
[e = _RA4 -> -> 0 `i `b ]
"348
}
[e :U 50 ]
[; ;main.c: 348: }
[; ;main.c: 349: break;
"349
[e $U 19  ]
[; ;main.c: 350: case 0:
"350
[e :U 51 ]
[; ;main.c: 351: if(jrStep > 0)
"351
[e $ ! > -> _jrStep `i -> 0 `i 52  ]
[; ;main.c: 352: {
"352
{
[; ;main.c: 353: TRISA &= 0xDF;
"353
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 354: TRISB &= 0xDF;
"354
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 355: RB5 = 1;
"355
[e = _RB5 -> -> 1 `i `b ]
[; ;main.c: 356: RA5 = 0;
"356
[e = _RA5 -> -> 0 `i `b ]
"357
}
[e :U 52 ]
[; ;main.c: 357: }
[; ;main.c: 358: break;
"358
[e $U 19  ]
[; ;main.c: 359: default:
"359
[e :U 53 ]
[; ;main.c: 360: break;
"360
[e $U 19  ]
"361
}
[; ;main.c: 361: }
[e $U 19  ]
"213
[e :U 20 ]
[e [\ _ledCnt , $ -> -> 1 `i `uc 21
 , $ -> -> 2 `i `uc 23
 , $ -> -> 3 `i `uc 25
 , $ -> -> 4 `i `uc 27
 , $ -> -> 5 `i `uc 29
 , $ -> -> 6 `i `uc 31
 , $ -> -> 7 `i `uc 33
 , $ -> -> 8 `i `uc 35
 , $ -> -> 9 `i `uc 37
 , $ -> -> 10 `i `uc 39
 , $ -> -> 11 `i `uc 41
 , $ -> -> 12 `i `uc 43
 , $ -> -> 13 `i `uc 45
 , $ -> -> 14 `i `uc 47
 , $ -> -> 15 `i `uc 49
 , $ -> -> 0 `i `uc 51
 53 ]
"361
[e :U 19 ]
"362
}
[e :U 17 ]
[; ;main.c: 362: }
[; ;main.c: 365: }
"365
[e :UE 16 ]
}
"368
[v _ledCtr `(v ~T0 @X0 1 ef ]
"369
{
[; ;main.c: 368: void ledCtr()
[; ;main.c: 369: {
[e :U _ledCtr ]
[f ]
[; ;main.c: 370: if(firstTime > 0)
"370
[e $ ! > -> _firstTime `i -> 0 `i 55  ]
[; ;main.c: 371: {
"371
{
[; ;main.c: 372: firstTime--;
"372
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 373: if(prePwStep < pwStep)
"373
[e $ ! < -> _prePwStep `i -> _pwStep `i 56  ]
[; ;main.c: 374: {
"374
{
[; ;main.c: 375: prePwStep = pwStep;
"375
[e = _prePwStep _pwStep ]
"376
}
[e :U 56 ]
"377
}
[; ;main.c: 376: }
[; ;main.c: 377: }
[e $U 57  ]
"378
[e :U 55 ]
[; ;main.c: 378: else if(overWorkTime > 0)
[e $ ! > _overWorkTime -> -> 0 `i `ui 58  ]
[; ;main.c: 379: {
"379
{
[; ;main.c: 380: overWorkTime--;
"380
[e -- _overWorkTime -> -> 1 `i `ui ]
[; ;main.c: 381: shiweiNum = numArray[11];
"381
[e = _shiweiNum *U + &U _numArray * -> -> -> 11 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 382: geweiNum = numArray[12];
"382
[e = _geweiNum *U + &U _numArray * -> -> -> 12 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"383
}
[; ;main.c: 383: }
[e $U 59  ]
"384
[e :U 58 ]
[; ;main.c: 384: else if(showBatTime > 0)
[e $ ! > -> _showBatTime `i -> 0 `i 60  ]
[; ;main.c: 385: {
"385
{
[; ;main.c: 386: showBatTime--;
"386
[e -- _showBatTime -> -> 1 `i `uc ]
[; ;main.c: 387: shiweiNum = numArray[prePwStep/10];
"387
[e = _shiweiNum *U + &U _numArray * -> -> / -> _prePwStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 388: geweiNum = numArray[prePwStep%10];
"388
[e = _geweiNum *U + &U _numArray * -> -> % -> _prePwStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"389
}
[; ;main.c: 389: }
[e $U 61  ]
"390
[e :U 60 ]
[; ;main.c: 390: else if(workStep > 0)
[e $ ! > -> _workStep `i -> 0 `i 62  ]
[; ;main.c: 391: {
"391
{
[; ;main.c: 392: if(jrShowTime > 0)
"392
[e $ ! > -> _jrShowTime `i -> 0 `i 63  ]
[; ;main.c: 393: {
"393
{
[; ;main.c: 394: jrShowTime--;
"394
[e -- _jrShowTime -> -> 1 `i `uc ]
[; ;main.c: 395: shiweiNum = numArray[13];
"395
[e = _shiweiNum *U + &U _numArray * -> -> -> 13 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 396: if(jrStep > 0)
"396
[e $ ! > -> _jrStep `i -> 0 `i 64  ]
[; ;main.c: 397: {
"397
{
[; ;main.c: 398: geweiNum = numArray[13];
"398
[e = _geweiNum *U + &U _numArray * -> -> -> 13 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"399
}
[; ;main.c: 399: }
[e $U 65  ]
"400
[e :U 64 ]
[; ;main.c: 400: else
[; ;main.c: 401: {
"401
{
[; ;main.c: 402: geweiNum = numArray[0];
"402
[e = _geweiNum *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"403
}
[e :U 65 ]
"404
}
[; ;main.c: 403: }
[; ;main.c: 404: }
[e $U 66  ]
"405
[e :U 63 ]
[; ;main.c: 405: else
[; ;main.c: 406: {
"406
{
[; ;main.c: 407: shiweiNum = numArray[0];
"407
[e = _shiweiNum *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 408: geweiNum = numArray[workStep];
"408
[e = _geweiNum *U + &U _numArray * -> _workStep `ux -> -> # *U &U _numArray `ui `ux ]
"409
}
[e :U 66 ]
"410
}
[; ;main.c: 409: }
[; ;main.c: 410: }
[e $U 67  ]
"411
[e :U 62 ]
[; ;main.c: 411: else if(chrgFlag)
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 68  ]
[; ;main.c: 412: {
"412
{
[; ;main.c: 413: shiweiNum = numArray[prePwStep/10];
"413
[e = _shiweiNum *U + &U _numArray * -> -> / -> _prePwStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 414: geweiNum = numArray[prePwStep%10];
"414
[e = _geweiNum *U + &U _numArray * -> -> % -> _prePwStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"415
}
[; ;main.c: 415: }
[e $U 69  ]
"416
[e :U 68 ]
[; ;main.c: 416: else
[; ;main.c: 417: {
"417
{
[; ;main.c: 418: shiweiNum = 0;
"418
[e = _shiweiNum -> -> 0 `i `uc ]
[; ;main.c: 419: geweiNum = 0;
"419
[e = _geweiNum -> -> 0 `i `uc ]
"420
}
[e :U 69 ]
[e :U 67 ]
[e :U 61 ]
[e :U 59 ]
[e :U 57 ]
[; ;main.c: 420: }
[; ;main.c: 421: }
"421
[e :UE 54 ]
}
"425
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"426
{
[; ;main.c: 425: void chrgCtr()
[; ;main.c: 426: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 427: if(PORTB & 0x02)
"427
[e $ ! != & -> _PORTB `i -> 2 `i -> 0 `i 71  ]
[; ;main.c: 428: {
"428
{
[; ;main.c: 429: if(chrgFlag == 0)
"429
[e $ ! == -> _chrgFlag `i -> 0 `i 72  ]
[; ;main.c: 430: {
"430
{
[; ;main.c: 431: chrgFlag = 1;
"431
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 432: chrgMaxDuty = 0;
"432
[e = _chrgMaxDuty -> -> 0 `i `uc ]
[; ;main.c: 433: chrgPwmStop();
"433
[e ( _chrgPwmStop ..  ]
"434
}
[e :U 72 ]
[; ;main.c: 434: }
[; ;main.c: 435: jrStep = 0;
"435
[e = _jrStep -> -> 0 `i `uc ]
[; ;main.c: 436: workStep = 0;
"436
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 437: pwmStop();
"437
[e ( _pwmStop ..  ]
[; ;main.c: 438: lowBatFlag = 0;
"438
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 439: if(prePwStep < pwStep)
"439
[e $ ! < -> _prePwStep `i -> _pwStep `i 73  ]
[; ;main.c: 440: {
"440
{
[; ;main.c: 441: if(++count50s > 3000)
"441
[e $ ! > =+ _count50s -> -> 1 `i `ui -> -> 3000 `i `ui 74  ]
[; ;main.c: 442: {
"442
{
[; ;main.c: 443: count50s = 0;
"443
[e = _count50s -> -> 0 `i `ui ]
[; ;main.c: 444: prePwStep++;
"444
[e ++ _prePwStep -> -> 1 `i `uc ]
"445
}
[e :U 74 ]
"446
}
[; ;main.c: 445: }
[; ;main.c: 446: }
[e $U 75  ]
"447
[e :U 73 ]
[; ;main.c: 447: else
[; ;main.c: 448: {
"448
{
[; ;main.c: 449: count50s = 0;
"449
[e = _count50s -> -> 0 `i `ui ]
"450
}
[e :U 75 ]
[; ;main.c: 450: }
[; ;main.c: 451: if(protectFlag)
"451
[e $ ! != -> _protectFlag `i -> -> -> 0 `i `uc `i 76  ]
[; ;main.c: 452: {
"452
{
[; ;main.c: 453: chrgPwmStop();
"453
[e ( _chrgPwmStop ..  ]
[; ;main.c: 454: if(prePwStep < 99 && protectFlag == 1)
"454
[e $ ! && < -> _prePwStep `i -> 99 `i == -> _protectFlag `i -> 1 `i 77  ]
[; ;main.c: 455: {
"455
{
[; ;main.c: 456: if(++reChrgCount > 250)
"456
[e $ ! > -> =+ _reChrgCount -> -> 1 `i `uc `i -> 250 `i 78  ]
[; ;main.c: 457: {
"457
{
[; ;main.c: 458: reChrgCount = 0;
"458
[e = _reChrgCount -> -> 0 `i `uc ]
[; ;main.c: 459: chrgFullFlag = 0;
"459
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 460: protectFlag = 0;
"460
[e = _protectFlag -> -> 0 `i `uc ]
"461
}
[e :U 78 ]
"462
}
[; ;main.c: 461: }
[; ;main.c: 462: }
[e $U 79  ]
"463
[e :U 77 ]
[; ;main.c: 463: else
[; ;main.c: 464: {
"464
{
[; ;main.c: 465: reChrgCount = 0;
"465
[e = _reChrgCount -> -> 0 `i `uc ]
"466
}
[e :U 79 ]
[; ;main.c: 466: }
[; ;main.c: 467: return;
"467
[e $UE 70  ]
"468
}
[e :U 76 ]
[; ;main.c: 468: }
[; ;main.c: 469: if(batADValue < 1118)
"469
[e $ ! < _batADValue -> -> 1118 `i `ui 80  ]
[; ;main.c: 470: {
"470
{
[; ;main.c: 471: chrgMode = 0;
"471
[e = _chrgMode -> -> 0 `i `uc ]
[; ;main.c: 472: chrgMaxAD = 15;
"472
[e = _chrgMaxAD -> -> 15 `i `uc ]
"473
}
[; ;main.c: 473: }
[e $U 81  ]
"474
[e :U 80 ]
[; ;main.c: 474: else if(batADValue < 1530)
[e $ ! < _batADValue -> -> 1530 `i `ui 82  ]
[; ;main.c: 475: {
"475
{
[; ;main.c: 476: chrgMode = 1;
"476
[e = _chrgMode -> -> 1 `i `uc ]
[; ;main.c: 477: chrgMaxAD = 60;
"477
[e = _chrgMaxAD -> -> 60 `i `uc ]
[; ;main.c: 478: lockCount = 0;
"478
[e = _lockCount -> -> 0 `i `uc ]
"479
}
[; ;main.c: 479: }
[e $U 83  ]
"480
[e :U 82 ]
[; ;main.c: 480: else if(count1s == 0)
[e $ ! == -> _count1s `i -> 0 `i 84  ]
[; ;main.c: 481: {
"481
{
[; ;main.c: 482: if(++lockCount > 200)
"482
[e $ ! > -> =+ _lockCount -> -> 1 `i `uc `i -> 200 `i 85  ]
[; ;main.c: 483: {
"483
{
[; ;main.c: 484: lockCount = 0;
"484
[e = _lockCount -> -> 0 `i `uc ]
[; ;main.c: 485: chrgMode = 2;
"485
[e = _chrgMode -> -> 2 `i `uc ]
"486
}
[e :U 85 ]
[; ;main.c: 486: }
[; ;main.c: 488: chrgMaxAD = 60;
"488
[e = _chrgMaxAD -> -> 60 `i `uc ]
"489
}
[e :U 84 ]
"490
[e :U 83 ]
[e :U 81 ]
[; ;main.c: 489: }
[; ;main.c: 490: if(chrgMode == 2 && outADValue < 8)
[e $ ! && == -> _chrgMode `i -> 2 `i < _outADValue -> -> 8 `i `ui 86  ]
[; ;main.c: 491: {
"491
{
[; ;main.c: 492: if(++fullCount >= 200)
"492
[e $ ! >= =+ _fullCount -> -> 1 `i `ui -> -> 200 `i `ui 87  ]
[; ;main.c: 493: {
"493
{
[; ;main.c: 494: fullCount = 0;
"494
[e = _fullCount -> -> 0 `i `ui ]
[; ;main.c: 495: chrgFullFlag = 1;
"495
[e = _chrgFullFlag -> -> 1 `i `uc ]
"496
}
[e :U 87 ]
"497
}
[; ;main.c: 496: }
[; ;main.c: 497: }
[e $U 88  ]
"498
[e :U 86 ]
[; ;main.c: 498: else
[; ;main.c: 499: {
"499
{
[; ;main.c: 500: fullCount = 0;
"500
[e = _fullCount -> -> 0 `i `ui ]
"501
}
[e :U 88 ]
[; ;main.c: 501: }
[; ;main.c: 502: if(chrgFullFlag)
"502
[e $ ! != -> _chrgFullFlag `i -> -> -> 0 `i `uc `i 89  ]
[; ;main.c: 503: {
"503
{
[; ;main.c: 504: chrgPwmStop();
"504
[e ( _chrgPwmStop ..  ]
"505
}
[; ;main.c: 505: }
[e $U 90  ]
"506
[e :U 89 ]
[; ;main.c: 506: else
[; ;main.c: 507: {
"507
{
[; ;main.c: 508: if(batADValue > 1550 || outADValue > (chrgMaxAD + 2))
"508
[e $ ! || > _batADValue -> -> 1550 `i `ui > _outADValue -> + -> _chrgMaxAD `i -> 2 `i `ui 91  ]
[; ;main.c: 509: {
"509
{
[; ;main.c: 510: if(++subTime > chrgWaitTime)
"510
[e $ ! > -> =+ _subTime -> -> 1 `i `uc `i -> _chrgWaitTime `i 92  ]
[; ;main.c: 511: {
"511
{
[; ;main.c: 512: if(chrgMaxDuty > 1)
"512
[e $ ! > -> _chrgMaxDuty `i -> 1 `i 93  ]
[; ;main.c: 513: {
"513
{
[; ;main.c: 514: chrgMaxDuty--;
"514
[e -- _chrgMaxDuty -> -> 1 `i `uc ]
"515
}
[e :U 93 ]
[; ;main.c: 515: }
[; ;main.c: 516: subTime = 0;
"516
[e = _subTime -> -> 0 `i `uc ]
[; ;main.c: 517: chrgWaitTime = 50;
"517
[e = _chrgWaitTime -> -> 50 `i `uc ]
"518
}
[e :U 92 ]
[; ;main.c: 518: }
[; ;main.c: 519: addTime = 0;
"519
[e = _addTime -> -> 0 `i `uc ]
"520
}
[; ;main.c: 520: }
[e $U 94  ]
"521
[e :U 91 ]
[; ;main.c: 521: else if(batADValue < 1550 && outADValue < (chrgMaxAD - 4))
[e $ ! && < _batADValue -> -> 1550 `i `ui < _outADValue -> - -> _chrgMaxAD `i -> 4 `i `ui 95  ]
[; ;main.c: 522: {
"522
{
[; ;main.c: 523: if(++addTime > chrgWaitTime)
"523
[e $ ! > -> =+ _addTime -> -> 1 `i `uc `i -> _chrgWaitTime `i 96  ]
[; ;main.c: 524: {
"524
{
[; ;main.c: 525: addTime = 0;
"525
[e = _addTime -> -> 0 `i `uc ]
[; ;main.c: 526: if(chrgMaxDuty < 75)
"526
[e $ ! < -> _chrgMaxDuty `i -> 75 `i 97  ]
[; ;main.c: 527: {
"527
{
[; ;main.c: 528: chrgMaxDuty++;
"528
[e ++ _chrgMaxDuty -> -> 1 `i `uc ]
"529
}
[e :U 97 ]
"530
}
[e :U 96 ]
[; ;main.c: 529: }
[; ;main.c: 530: }
[; ;main.c: 531: subTime = 0;
"531
[e = _subTime -> -> 0 `i `uc ]
"532
}
[e :U 95 ]
"535
[e :U 94 ]
[; ;main.c: 532: }
[; ;main.c: 535: if(chrgPwmFlag == 0)
[e $ ! == -> _chrgPwmFlag `i -> 0 `i 98  ]
[; ;main.c: 536: {
"536
{
[; ;main.c: 537: chrgPwmInit();
"537
[e ( _chrgPwmInit ..  ]
"538
}
[e :U 98 ]
[; ;main.c: 538: }
[; ;main.c: 539: PWMD23H = 0X00;
"539
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 540: PWMD2L = chrgMaxDuty;
"540
[e = _PWMD2L _chrgMaxDuty ]
"541
}
[e :U 90 ]
"542
}
[; ;main.c: 541: }
[; ;main.c: 542: }
[e $U 99  ]
"543
[e :U 71 ]
[; ;main.c: 543: else
[; ;main.c: 544: {
"544
{
[; ;main.c: 545: startChrgTime = 0;
"545
[e = _startChrgTime -> -> 0 `i `uc ]
[; ;main.c: 546: chrgFlag = 0;
"546
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 547: chrgFullFlag = 0;
"547
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 548: protectFlag = 0;
"548
[e = _protectFlag -> -> 0 `i `uc ]
[; ;main.c: 549: chrgMode = 0;
"549
[e = _chrgMode -> -> 0 `i `uc ]
[; ;main.c: 550: chrgMaxAD = 0;
"550
[e = _chrgMaxAD -> -> 0 `i `uc ]
[; ;main.c: 551: chrgMaxDuty = 0;
"551
[e = _chrgMaxDuty -> -> 0 `i `uc ]
[; ;main.c: 552: lockCount = 0;
"552
[e = _lockCount -> -> 0 `i `uc ]
[; ;main.c: 553: lockLedStep = 0;
"553
[e = _lockLedStep -> -> 0 `i `uc ]
[; ;main.c: 554: chrgWaitTime = 20;
"554
[e = _chrgWaitTime -> -> 20 `i `uc ]
[; ;main.c: 555: chrgPwmStop();
"555
[e ( _chrgPwmStop ..  ]
[; ;main.c: 556: if(prePwStep > 0 && prePwStep > pwStep)
"556
[e $ ! && > -> _prePwStep `i -> 0 `i > -> _prePwStep `i -> _pwStep `i 100  ]
[; ;main.c: 557: {
"557
{
[; ;main.c: 558: if(++count50s > 3000)
"558
[e $ ! > =+ _count50s -> -> 1 `i `ui -> -> 3000 `i `ui 101  ]
[; ;main.c: 559: {
"559
{
[; ;main.c: 560: count50s = 0;
"560
[e = _count50s -> -> 0 `i `ui ]
[; ;main.c: 561: prePwStep--;
"561
[e -- _prePwStep -> -> 1 `i `uc ]
"562
}
[e :U 101 ]
"563
}
[; ;main.c: 562: }
[; ;main.c: 563: }
[e $U 102  ]
"564
[e :U 100 ]
[; ;main.c: 564: else
[; ;main.c: 565: {
"565
{
[; ;main.c: 566: count50s = 0;
"566
[e = _count50s -> -> 0 `i `ui ]
"567
}
[e :U 102 ]
"568
}
[e :U 99 ]
[; ;main.c: 567: }
[; ;main.c: 568: }
[; ;main.c: 569: }
"569
[e :UE 70 ]
}
"573
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"574
{
[; ;main.c: 573: char keyRead(char keyStatus)
[; ;main.c: 574: {
[e :U _keyRead ]
"573
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"574
[f ]
[; ;main.c: 575: if(keyStatus)
"575
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 104  ]
[; ;main.c: 576: {
"576
{
[; ;main.c: 577: keyCount++;
"577
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 578: if(keyCount >= 100)
"578
[e $ ! >= -> _keyCount `i -> 100 `i 105  ]
[; ;main.c: 579: {
"579
{
[; ;main.c: 580: keyCount = 100;
"580
[e = _keyCount -> -> 100 `i `uc ]
[; ;main.c: 581: if(!longPressFlag)
"581
[e $ ! ! != -> _longPressFlag `i -> -> -> 0 `i `uc `i 106  ]
[; ;main.c: 582: {
"582
{
[; ;main.c: 583: longPressFlag = 1;
"583
[e = _longPressFlag -> -> 1 `i `uc ]
[; ;main.c: 584: return 2;
"584
[e ) -> -> 2 `i `uc ]
[e $UE 103  ]
"585
}
[e :U 106 ]
"586
}
[e :U 105 ]
"587
}
[; ;main.c: 585: }
[; ;main.c: 586: }
[; ;main.c: 587: }
[e $U 107  ]
"588
[e :U 104 ]
[; ;main.c: 588: else
[; ;main.c: 589: {
"589
{
[; ;main.c: 590: if(keyCount >= 100)
"590
[e $ ! >= -> _keyCount `i -> 100 `i 108  ]
[; ;main.c: 591: {
"591
{
[; ;main.c: 592: keyCount = 0;
"592
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 593: longPressFlag = 0;
"593
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 594: return 0;
"594
[e ) -> -> 0 `i `uc ]
[e $UE 103  ]
"595
}
[; ;main.c: 595: }
[e $U 109  ]
"596
[e :U 108 ]
[; ;main.c: 596: else if(keyCount >= 6)
[e $ ! >= -> _keyCount `i -> 6 `i 110  ]
[; ;main.c: 597: {
"597
{
[; ;main.c: 598: keyCount = 0;
"598
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 599: return 1;
"599
[e ) -> -> 1 `i `uc ]
[e $UE 103  ]
"600
}
[e :U 110 ]
"601
[e :U 109 ]
[; ;main.c: 600: }
[; ;main.c: 601: keyCount = 0;
[e = _keyCount -> -> 0 `i `uc ]
"602
}
[e :U 107 ]
[; ;main.c: 602: }
[; ;main.c: 603: return 0;
"603
[e ) -> -> 0 `i `uc ]
[e $UE 103  ]
[; ;main.c: 604: }
"604
[e :UE 103 ]
}
"607
[v _keyRead2 `(uc ~T0 @X0 1 ef1`uc ]
"608
{
[; ;main.c: 607: char keyRead2(char keyStatus)
[; ;main.c: 608: {
[e :U _keyRead2 ]
"607
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"608
[f ]
[; ;main.c: 609: if(keyStatus)
"609
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 112  ]
[; ;main.c: 610: {
"610
{
[; ;main.c: 611: keyCount2++;
"611
[e ++ _keyCount2 -> -> 1 `i `uc ]
[; ;main.c: 612: if(keyCount2 >= 100)
"612
[e $ ! >= -> _keyCount2 `i -> 100 `i 113  ]
[; ;main.c: 613: {
"613
{
[; ;main.c: 614: keyCount2 = 100;
"614
[e = _keyCount2 -> -> 100 `i `uc ]
[; ;main.c: 615: if(!longPressFlag2)
"615
[e $ ! ! != -> _longPressFlag2 `i -> -> -> 0 `i `uc `i 114  ]
[; ;main.c: 616: {
"616
{
[; ;main.c: 617: longPressFlag2 = 1;
"617
[e = _longPressFlag2 -> -> 1 `i `uc ]
[; ;main.c: 618: return 2;
"618
[e ) -> -> 2 `i `uc ]
[e $UE 111  ]
"619
}
[e :U 114 ]
"620
}
[e :U 113 ]
"621
}
[; ;main.c: 619: }
[; ;main.c: 620: }
[; ;main.c: 621: }
[e $U 115  ]
"622
[e :U 112 ]
[; ;main.c: 622: else
[; ;main.c: 623: {
"623
{
[; ;main.c: 624: if(keyCount2 >= 100)
"624
[e $ ! >= -> _keyCount2 `i -> 100 `i 116  ]
[; ;main.c: 625: {
"625
{
[; ;main.c: 626: keyCount2 = 0;
"626
[e = _keyCount2 -> -> 0 `i `uc ]
[; ;main.c: 627: longPressFlag2 = 0;
"627
[e = _longPressFlag2 -> -> 0 `i `uc ]
[; ;main.c: 628: return 0;
"628
[e ) -> -> 0 `i `uc ]
[e $UE 111  ]
"629
}
[; ;main.c: 629: }
[e $U 117  ]
"630
[e :U 116 ]
[; ;main.c: 630: else if(keyCount2 >= 5)
[e $ ! >= -> _keyCount2 `i -> 5 `i 118  ]
[; ;main.c: 631: {
"631
{
[; ;main.c: 632: keyCount2 = 0;
"632
[e = _keyCount2 -> -> 0 `i `uc ]
[; ;main.c: 633: return 1;
"633
[e ) -> -> 1 `i `uc ]
[e $UE 111  ]
"634
}
[e :U 118 ]
"635
[e :U 117 ]
[; ;main.c: 634: }
[; ;main.c: 635: keyCount2 = 0;
[e = _keyCount2 -> -> 0 `i `uc ]
"636
}
[e :U 115 ]
[; ;main.c: 636: }
[; ;main.c: 637: return 0;
"637
[e ) -> -> 0 `i `uc ]
[e $UE 111  ]
[; ;main.c: 638: }
"638
[e :UE 111 ]
}
"641
[v _keyCtr `(v ~T0 @X0 1 ef ]
"642
{
[; ;main.c: 641: void keyCtr()
[; ;main.c: 642: {
[e :U _keyCtr ]
[f ]
"643
[v _kclick `uc ~T0 @X0 1 a ]
[; ;main.c: 643: char kclick = keyRead(0x01 & (~PORTB));
[e = _kclick ( _keyRead (1 -> & -> 1 `i ~ -> _PORTB `i `uc ]
[; ;main.c: 644: if(kclick == 1)
"644
[e $ ! == -> _kclick `i -> 1 `i 120  ]
[; ;main.c: 645: {
"645
{
[; ;main.c: 646: if(workStep > 0)
"646
[e $ ! > -> _workStep `i -> 0 `i 121  ]
[; ;main.c: 647: {
"647
{
[; ;main.c: 648: if(++workStep > 6)
"648
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 6 `i 122  ]
[; ;main.c: 649: {
"649
{
[; ;main.c: 650: workStep = 1;
"650
[e = _workStep -> -> 1 `i `uc ]
"651
}
[e :U 122 ]
"652
}
[; ;main.c: 651: }
[; ;main.c: 652: }
[e $U 123  ]
"653
[e :U 121 ]
[; ;main.c: 653: else if(overWorkTime > 0)
[e $ ! > _overWorkTime -> -> 0 `i `ui 124  ]
[; ;main.c: 654: {
"654
{
[; ;main.c: 655: workStep = preWorkStep;
"655
[e = _workStep _preWorkStep ]
[; ;main.c: 656: jrStep = prejrStep;
"656
[e = _jrStep _prejrStep ]
[; ;main.c: 657: overWorkTime = 0;
"657
[e = _overWorkTime -> -> 0 `i `ui ]
"658
}
[; ;main.c: 658: }
[e $U 125  ]
"659
[e :U 124 ]
[; ;main.c: 659: else if(showBatTime > 0)
[e $ ! > -> _showBatTime `i -> 0 `i 126  ]
[; ;main.c: 660: {
"660
{
[; ;main.c: 661: showBatTime = 0;
"661
[e = _showBatTime -> -> 0 `i `uc ]
"662
}
[; ;main.c: 662: }
[e $U 127  ]
"663
[e :U 126 ]
[; ;main.c: 663: else
[; ;main.c: 664: {
"664
{
[; ;main.c: 665: showBatTime = 200;
"665
[e = _showBatTime -> -> 200 `i `uc ]
[; ;main.c: 666: count1s = 0;
"666
[e = _count1s -> -> 0 `i `uc ]
"667
}
[e :U 127 ]
[e :U 125 ]
[e :U 123 ]
"668
}
[; ;main.c: 667: }
[; ;main.c: 668: }
[e $U 128  ]
"669
[e :U 120 ]
[; ;main.c: 669: else if(kclick == 2)
[e $ ! == -> _kclick `i -> 2 `i 129  ]
[; ;main.c: 670: {
"670
{
[; ;main.c: 671: if(workStep > 0)
"671
[e $ ! > -> _workStep `i -> 0 `i 130  ]
[; ;main.c: 672: {
"672
{
[; ;main.c: 673: workStep = 0;
"673
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 674: jrStep = 0;
"674
[e = _jrStep -> -> 0 `i `uc ]
"675
}
[; ;main.c: 675: }
[e $U 131  ]
"676
[e :U 130 ]
[; ;main.c: 676: else
[; ;main.c: 677: {
"677
{
[; ;main.c: 678: workStep = 1;
"678
[e = _workStep -> -> 1 `i `uc ]
[; ;main.c: 679: startTime = 30;
"679
[e = _startTime -> -> 30 `i `uc ]
[; ;main.c: 680: showBatTime = 0;
"680
[e = _showBatTime -> -> 0 `i `uc ]
[; ;main.c: 681: overWorkTime = 0;
"681
[e = _overWorkTime -> -> 0 `i `ui ]
"682
}
[e :U 131 ]
"683
}
[e :U 129 ]
"684
[e :U 128 ]
[v _kclick2 `uc ~T0 @X0 1 a ]
[; ;main.c: 682: }
[; ;main.c: 683: }
[; ;main.c: 684: char kclick2 = keyRead2(0x04 & (~PORTB));
[e = _kclick2 ( _keyRead2 (1 -> & -> 4 `i ~ -> _PORTB `i `uc ]
[; ;main.c: 685: if(kclick2 == 2 && workStep > 0)
"685
[e $ ! && == -> _kclick2 `i -> 2 `i > -> _workStep `i -> 0 `i 132  ]
[; ;main.c: 686: {
"686
{
[; ;main.c: 687: jrShowTime = 100;
"687
[e = _jrShowTime -> -> 100 `i `uc ]
[; ;main.c: 688: if(jrStep > 0)
"688
[e $ ! > -> _jrStep `i -> 0 `i 133  ]
[; ;main.c: 689: {
"689
{
[; ;main.c: 690: jrStep = 0;
"690
[e = _jrStep -> -> 0 `i `uc ]
"691
}
[; ;main.c: 691: }
[e $U 134  ]
"692
[e :U 133 ]
[; ;main.c: 692: else
[; ;main.c: 693: {
"693
{
[; ;main.c: 694: jrStep = 1;
"694
[e = _jrStep -> -> 1 `i `uc ]
[; ;main.c: 695: jrStartTime = 2000;
"695
[e = _jrStartTime -> -> 2000 `i `ui ]
"696
}
[e :U 134 ]
"697
}
[; ;main.c: 696: }
[; ;main.c: 697: }
[e $U 135  ]
"698
[e :U 132 ]
[; ;main.c: 698: else if(kclick2 == 1 && jrStep > 0)
[e $ ! && == -> _kclick2 `i -> 1 `i > -> _jrStep `i -> 0 `i 136  ]
[; ;main.c: 699: {
"699
{
[; ;main.c: 700: jrShowTime = 100;
"700
[e = _jrShowTime -> -> 100 `i `uc ]
"701
}
[e :U 136 ]
"702
[e :U 135 ]
[; ;main.c: 701: }
[; ;main.c: 702: }
[e :UE 119 ]
}
"704
[v _jrPwm `(v ~T0 @X0 1 ef ]
"705
{
[; ;main.c: 704: void jrPwm()
[; ;main.c: 705: {
[e :U _jrPwm ]
[f ]
[; ;main.c: 706: if(++jrPwmTime >= 100)
"706
[e $ ! >= -> =+ _jrPwmTime -> -> 1 `i `uc `i -> 100 `i 138  ]
[; ;main.c: 707: {
"707
{
[; ;main.c: 708: jrPwmTime = 0;
"708
[e = _jrPwmTime -> -> 0 `i `uc ]
"709
}
[e :U 138 ]
[; ;main.c: 709: }
[; ;main.c: 710: if(jrDuty > jrPwmTime && jrStep > 0)
"710
[e $ ! && > -> _jrDuty `i -> _jrPwmTime `i > -> _jrStep `i -> 0 `i 139  ]
[; ;main.c: 711: {
"711
{
[; ;main.c: 712: RB4 = 1;
"712
[e = _RB4 -> -> 1 `i `b ]
"713
}
[; ;main.c: 713: }
[e $U 140  ]
"714
[e :U 139 ]
[; ;main.c: 714: else
[; ;main.c: 715: {
"715
{
[; ;main.c: 716: RB4 = 0;
"716
[e = _RB4 -> -> 0 `i `b ]
"717
}
[e :U 140 ]
[; ;main.c: 717: }
[; ;main.c: 718: }
"718
[e :UE 137 ]
}
"720
[v _workCtr `(v ~T0 @X0 1 ef ]
"721
{
[; ;main.c: 720: void workCtr()
[; ;main.c: 721: {
[e :U _workCtr ]
[f ]
[; ;main.c: 723: if(startTime > 0)
"723
[e $ ! > -> _startTime `i -> 0 `i 142  ]
[; ;main.c: 724: {
"724
{
[; ;main.c: 725: startTime--;
"725
[e -- _startTime -> -> 1 `i `uc ]
"726
}
[e :U 142 ]
[; ;main.c: 726: }
[; ;main.c: 727: if(workStep > 0)
"727
[e $ ! > -> _workStep `i -> 0 `i 143  ]
[; ;main.c: 728: {
"728
{
[; ;main.c: 729: if(motorPwmFlag == 0)
"729
[e $ ! == -> _motorPwmFlag `i -> 0 `i 144  ]
[; ;main.c: 730: {
"730
{
[; ;main.c: 731: pwmInit();
"731
[e ( _pwmInit ..  ]
"733
}
[e :U 144 ]
[; ;main.c: 733: }
[; ;main.c: 734: maxDuty = 69 + (workStep*4);
"734
[e = _maxDuty -> + -> 69 `i * -> _workStep `i -> 4 `i `uc ]
[; ;main.c: 735: PWMD23H = 0X00;
"735
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 736: PWMD2L = maxDuty;
"736
[e = _PWMD2L _maxDuty ]
[; ;main.c: 737: if(overCount >= 5)
"737
[e $ ! >= -> _overCount `i -> 5 `i 145  ]
[; ;main.c: 738: {
"738
{
[; ;main.c: 739: if(++count5s > 300)
"739
[e $ ! > =+ _count5s -> -> 1 `i `ui -> -> 300 `i `ui 146  ]
[; ;main.c: 740: {
"740
{
[; ;main.c: 741: count5s = 0;
"741
[e = _count5s -> -> 0 `i `ui ]
[; ;main.c: 742: overWorkTime = 1000;
"742
[e = _overWorkTime -> -> 1000 `i `ui ]
[; ;main.c: 743: preWorkStep = workStep;
"743
[e = _preWorkStep _workStep ]
[; ;main.c: 744: prejrStep = jrStep;
"744
[e = _prejrStep _jrStep ]
[; ;main.c: 745: workStep = 0;
"745
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 746: jrStep = 0;
"746
[e = _jrStep -> -> 0 `i `uc ]
"747
}
[e :U 146 ]
"748
}
[; ;main.c: 747: }
[; ;main.c: 748: }
[e $U 147  ]
"749
[e :U 145 ]
[; ;main.c: 749: else
[; ;main.c: 750: {
"750
{
[; ;main.c: 751: count5s = 0;
"751
[e = _count5s -> -> 0 `i `ui ]
"752
}
[e :U 147 ]
[; ;main.c: 752: }
[; ;main.c: 753: if(count1s == 0 && ++count900s >= 900)
"753
[e $ ! && == -> _count1s `i -> 0 `i >= =+ _count900s -> -> 1 `i `ui -> -> 900 `i `ui 148  ]
[; ;main.c: 754: {
"754
{
[; ;main.c: 755: workStep = 0;
"755
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 756: jrStep = 0;
"756
[e = _jrStep -> -> 0 `i `uc ]
"757
}
[e :U 148 ]
"758
}
[; ;main.c: 757: }
[; ;main.c: 758: }
[e $U 149  ]
"759
[e :U 143 ]
[; ;main.c: 759: else
[; ;main.c: 760: {
"760
{
[; ;main.c: 761: pwmStop();
"761
[e ( _pwmStop ..  ]
[; ;main.c: 762: count900s = 0;
"762
[e = _count900s -> -> 0 `i `ui ]
"763
}
[e :U 149 ]
[; ;main.c: 763: }
[; ;main.c: 764: if(jrStep == 0)
"764
[e $ ! == -> _jrStep `i -> 0 `i 150  ]
[; ;main.c: 765: {
"765
{
[; ;main.c: 766: jrDuty = 0;
"766
[e = _jrDuty -> -> 0 `i `uc ]
[; ;main.c: 767: RB4 = 0;
"767
[e = _RB4 -> -> 0 `i `b ]
"768
}
[; ;main.c: 768: }
[e $U 151  ]
"769
[e :U 150 ]
[; ;main.c: 769: else if(jrStartTime > 0)
[e $ ! > _jrStartTime -> -> 0 `i `ui 152  ]
[; ;main.c: 770: {
"770
{
[; ;main.c: 771: RB4 = 1;
"771
[e = _RB4 -> -> 1 `i `b ]
"772
}
[; ;main.c: 772: }
[e $U 153  ]
"773
[e :U 152 ]
[; ;main.c: 773: else if(jrStep > 0)
[e $ ! > -> _jrStep `i -> 0 `i 154  ]
[; ;main.c: 774: {
"774
{
[; ;main.c: 775: if(jrDutyFX)
"775
[e $ ! != -> _jrDutyFX `i -> -> -> 0 `i `uc `i 155  ]
[; ;main.c: 776: {
"776
{
[; ;main.c: 777: if(jrDuty > 30)
"777
[e $ ! > -> _jrDuty `i -> 30 `i 156  ]
[; ;main.c: 778: {
"778
{
[; ;main.c: 779: jrDuty--;
"779
[e -- _jrDuty -> -> 1 `i `uc ]
"780
}
[; ;main.c: 780: }
[e $U 157  ]
"781
[e :U 156 ]
[; ;main.c: 781: else
[; ;main.c: 782: {
"782
{
[; ;main.c: 783: if(++jrWaitTime > 21)
"783
[e $ ! > -> =+ _jrWaitTime -> -> 1 `i `uc `i -> 21 `i 158  ]
[; ;main.c: 784: {
"784
{
[; ;main.c: 785: jrWaitTime = 0;
"785
[e = _jrWaitTime -> -> 0 `i `uc ]
[; ;main.c: 786: jrDutyFX = 0;
"786
[e = _jrDutyFX -> -> 0 `i `uc ]
"787
}
[e :U 158 ]
"788
}
[e :U 157 ]
"789
}
[; ;main.c: 787: }
[; ;main.c: 788: }
[; ;main.c: 789: }
[e $U 159  ]
"790
[e :U 155 ]
[; ;main.c: 790: else
[; ;main.c: 791: {
"791
{
[; ;main.c: 792: if(jrDuty < 100)
"792
[e $ ! < -> _jrDuty `i -> 100 `i 160  ]
[; ;main.c: 793: {
"793
{
[; ;main.c: 794: jrDuty++;
"794
[e ++ _jrDuty -> -> 1 `i `uc ]
"795
}
[; ;main.c: 795: }
[e $U 161  ]
"796
[e :U 160 ]
[; ;main.c: 796: else
[; ;main.c: 797: {
"797
{
[; ;main.c: 798: if(++jrWaitTime > 3)
"798
[e $ ! > -> =+ _jrWaitTime -> -> 1 `i `uc `i -> 3 `i 162  ]
[; ;main.c: 799: {
"799
{
[; ;main.c: 800: jrWaitTime = 0;
"800
[e = _jrWaitTime -> -> 0 `i `uc ]
[; ;main.c: 801: jrDutyFX = 1;
"801
[e = _jrDutyFX -> -> 1 `i `uc ]
"802
}
[e :U 162 ]
"803
}
[e :U 161 ]
"804
}
[e :U 159 ]
"805
}
[e :U 154 ]
"806
[e :U 153 ]
[e :U 151 ]
[; ;main.c: 802: }
[; ;main.c: 803: }
[; ;main.c: 804: }
[; ;main.c: 805: }
[; ;main.c: 806: }
[e :UE 141 ]
}
"808
[v _checkOutA `(v ~T0 @X0 1 ef ]
"809
{
[; ;main.c: 808: void checkOutA()
[; ;main.c: 809: {
[e :U _checkOutA ]
[f ]
[; ;main.c: 810: test_adc = ADC_Sample(0, 5);
"810
[e = _test_adc ( _ADC_Sample (2 , -> -> 0 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 811: if (0xA5 == test_adc)
"811
[e $ ! == -> 165 `i -> _test_adc `i 164  ]
[; ;main.c: 812: {
"812
{
[; ;main.c: 813: if(chrgFlag && adresult > 210)
"813
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _adresult -> -> 210 `i `ui 165  ]
[; ;main.c: 814: {
"814
{
[; ;main.c: 815: if(++overChrgTime > 10)
"815
[e $ ! > -> =+ _overChrgTime -> -> 1 `i `uc `i -> 10 `i 166  ]
[; ;main.c: 816: {
"816
{
[; ;main.c: 817: overChrgTime = 0;
"817
[e = _overChrgTime -> -> 0 `i `uc ]
[; ;main.c: 818: protectFlag = 2;
"818
[e = _protectFlag -> -> 2 `i `uc ]
"819
}
[e :U 166 ]
"821
}
[; ;main.c: 819: }
[; ;main.c: 821: }
[e $U 167  ]
"822
[e :U 165 ]
[; ;main.c: 822: else
[; ;main.c: 823: {
"823
{
[; ;main.c: 824: overChrgTime = 0;
"824
[e = _overChrgTime -> -> 0 `i `uc ]
"825
}
[e :U 167 ]
[; ;main.c: 825: }
[; ;main.c: 826: outADValue = adresult;
"826
[e = _outADValue _adresult ]
[; ;main.c: 828: if(workStep && (outADValue > 600))
"828
[e $ ! && != -> _workStep `i -> -> -> 0 `i `uc `i > _outADValue -> -> 600 `i `ui 168  ]
[; ;main.c: 829: {
"829
{
[; ;main.c: 830: if(++workOverOutTime > 50)
"830
[e $ ! > -> =+ _workOverOutTime -> -> 1 `i `uc `i -> 50 `i 169  ]
[; ;main.c: 831: {
"831
{
[; ;main.c: 832: workOverOutTime = 0;
"832
[e = _workOverOutTime -> -> 0 `i `uc ]
[; ;main.c: 833: workStep = 0;
"833
[e = _workStep -> -> 0 `i `uc ]
"834
}
[e :U 169 ]
"835
}
[; ;main.c: 834: }
[; ;main.c: 835: }
[e $U 170  ]
"836
[e :U 168 ]
[; ;main.c: 836: else
[; ;main.c: 837: {
"837
{
[; ;main.c: 838: workOverOutTime = 0;
"838
[e = _workOverOutTime -> -> 0 `i `uc ]
"839
}
[e :U 170 ]
"840
[v _maxtempV `uc ~T0 @X0 1 a ]
[; ;main.c: 839: }
[; ;main.c: 840: unsigned char maxtempV = 130 + (workStep * 10);
[e = _maxtempV -> + -> 130 `i * -> _workStep `i -> 10 `i `uc ]
[; ;main.c: 841: if(jrStep > 0)
"841
[e $ ! > -> _jrStep `i -> 0 `i 171  ]
[; ;main.c: 842: {
"842
{
[; ;main.c: 843: maxtempV = maxtempV - 40;
"843
[e = _maxtempV -> - -> _maxtempV `i -> 40 `i `uc ]
[; ;main.c: 844: if(workStep < 5)
"844
[e $ ! < -> _workStep `i -> 5 `i 172  ]
[; ;main.c: 845: {
"845
{
[; ;main.c: 846: maxtempV = maxtempV - 30;
"846
[e = _maxtempV -> - -> _maxtempV `i -> 30 `i `uc ]
"847
}
[e :U 172 ]
"848
}
[e :U 171 ]
[; ;main.c: 847: }
[; ;main.c: 848: }
[; ;main.c: 849: if(outADValue > maxtempV)
"849
[e $ ! > _outADValue -> _maxtempV `ui 173  ]
[; ;main.c: 850: {
"850
{
[; ;main.c: 851: if(++overCount > 5)
"851
[e $ ! > -> =+ _overCount -> -> 1 `i `uc `i -> 5 `i 174  ]
[; ;main.c: 852: {
"852
{
[; ;main.c: 853: overCount = 5;
"853
[e = _overCount -> -> 5 `i `uc ]
"854
}
[e :U 174 ]
"855
}
[; ;main.c: 854: }
[; ;main.c: 855: }
[e $U 175  ]
"856
[e :U 173 ]
[; ;main.c: 856: else
[; ;main.c: 857: {
"857
{
[; ;main.c: 859: if(overCount > 0)
"859
[e $ ! > -> _overCount `i -> 0 `i 176  ]
[; ;main.c: 860: {
"860
{
[; ;main.c: 861: overCount--;
"861
[e -- _overCount -> -> 1 `i `uc ]
"862
}
[e :U 176 ]
"864
}
[e :U 175 ]
"866
}
[; ;main.c: 862: }
[; ;main.c: 864: }
[; ;main.c: 866: }
[e $U 177  ]
"867
[e :U 164 ]
[; ;main.c: 867: else
[; ;main.c: 868: {
"868
{
[; ;main.c: 869: ADCON0 = 0;
"869
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 870: ADCON1 = 0;
"870
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 871: _delay((unsigned long)((100)*(16000000/4000000.0)));
"871
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"872
}
[e :U 177 ]
[; ;main.c: 872: }
[; ;main.c: 873: }
"873
[e :UE 163 ]
}
"875
[v _checkBatAD `(v ~T0 @X0 1 ef ]
"876
{
[; ;main.c: 875: void checkBatAD()
[; ;main.c: 876: {
[e :U _checkBatAD ]
[f ]
[; ;main.c: 877: test_adc = ADC_Sample(1, 5);
"877
[e = _test_adc ( _ADC_Sample (2 , -> -> 1 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 878: if (0xA5 == test_adc)
"878
[e $ ! == -> 165 `i -> _test_adc `i 179  ]
[; ;main.c: 879: {
"879
{
[; ;main.c: 880: batADValue = adresult;
"880
[e = _batADValue _adresult ]
[; ;main.c: 881: if(batADValue < 1117)
"881
[e $ ! < _batADValue -> -> 1117 `i `ui 180  ]
[; ;main.c: 882: {
"882
{
[; ;main.c: 883: pwStep = 0;
"883
[e = _pwStep -> -> 0 `i `uc ]
[; ;main.c: 884: if(++count8s > 800)
"884
[e $ ! > =+ _count8s -> -> 1 `i `ui -> -> 800 `i `ui 181  ]
[; ;main.c: 885: {
"885
{
[; ;main.c: 886: count8s = 0;
"886
[e = _count8s -> -> 0 `i `ui ]
[; ;main.c: 887: lowBatFlag = 1;
"887
[e = _lowBatFlag -> -> 1 `i `uc ]
[; ;main.c: 888: prePwStep = 0;
"888
[e = _prePwStep -> -> 0 `i `uc ]
[; ;main.c: 889: workStep = 0;
"889
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 890: jrStep = 0;
"890
[e = _jrStep -> -> 0 `i `uc ]
"891
}
[e :U 181 ]
"892
}
[; ;main.c: 891: }
[; ;main.c: 892: }
[e $U 182  ]
"893
[e :U 180 ]
[; ;main.c: 893: else
[; ;main.c: 894: {
"894
{
[; ;main.c: 895: count8s = 0;
"895
[e = _count8s -> -> 0 `i `ui ]
[; ;main.c: 896: if(batADValue >= 1340)
"896
[e $ ! >= _batADValue -> -> 1340 `i `ui 183  ]
[; ;main.c: 897: {
"897
{
[; ;main.c: 898: pwStep = ((batADValue - 1340) /2) + 13;
"898
[e = _pwStep -> + / - _batADValue -> -> 1340 `i `ui -> -> 2 `i `ui -> -> 13 `i `ui `uc ]
"899
}
[; ;main.c: 899: }
[e $U 184  ]
"900
[e :U 183 ]
[; ;main.c: 900: else
[; ;main.c: 901: {
"901
{
[; ;main.c: 902: pwStep = (batADValue - 1117) / 16;
"902
[e = _pwStep -> / - _batADValue -> -> 1117 `i `ui -> -> 16 `i `ui `uc ]
"903
}
[e :U 184 ]
[; ;main.c: 903: }
[; ;main.c: 904: if(pwStep > 99)
"904
[e $ ! > -> _pwStep `i -> 99 `i 185  ]
[; ;main.c: 905: {
"905
{
[; ;main.c: 906: pwStep = 99;
"906
[e = _pwStep -> -> 99 `i `uc ]
"907
}
[e :U 185 ]
"908
}
[e :U 182 ]
[; ;main.c: 907: }
[; ;main.c: 908: }
[; ;main.c: 909: if(chrgFlag && batADValue > 1861)
"909
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _batADValue -> -> 1861 `i `ui 186  ]
[; ;main.c: 910: {
"910
{
[; ;main.c: 911: protectFlag = 1;
"911
[e = _protectFlag -> -> 1 `i `uc ]
"912
}
[e :U 186 ]
"913
}
[; ;main.c: 912: }
[; ;main.c: 913: }
[e $U 187  ]
"914
[e :U 179 ]
[; ;main.c: 914: else
[; ;main.c: 915: {
"915
{
[; ;main.c: 916: ADCON0 = 0;
"916
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 917: ADCON1 = 0;
"917
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 918: _delay((unsigned long)((100)*(16000000/4000000.0)));
"918
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"919
}
[e :U 187 ]
[; ;main.c: 919: }
[; ;main.c: 949: }
"949
[e :UE 178 ]
}
"960
[v _Init_System `(v ~T0 @X0 1 ef ]
"961
{
[; ;main.c: 960: void Init_System()
[; ;main.c: 961: {
[e :U _Init_System ]
[f ]
[; ;main.c: 962: asm("nop");
"962
[; <" nop ;# ">
[; ;main.c: 963: asm("clrwdt");
"963
[; <" clrwdt ;# ">
[; ;main.c: 964: OPTION_REG = 0;
"964
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 965: asm("clrwdt");
"965
[; <" clrwdt ;# ">
[; ;main.c: 966: OSCCON = 0X72;
"966
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 968: WPUA = 0B00000000;
"968
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 969: WPDA = 0x00;
"969
[e = _WPDA -> -> 0 `i `uc ]
[; ;main.c: 970: WPUB = 0B00000000;
"970
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 972: TRISA = 0x03;
"972
[e = _TRISA -> -> 3 `i `uc ]
[; ;main.c: 973: TRISB = 0x87;
"973
[e = _TRISB -> -> 135 `i `uc ]
[; ;main.c: 975: PORTA = 0X00;
"975
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 976: PORTB = 0X00;
"976
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 980: PR2 = 249;
"980
[e = _PR2 -> -> 249 `i `uc ]
[; ;main.c: 981: TMR2IF = 0;
"981
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 982: TMR2IE = 1;
"982
[e = _TMR2IE -> -> 1 `i `b ]
[; ;main.c: 984: T2CON = 0B00000100;
"984
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 985: INTCON = 0XC0;
"985
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 986: }
"986
[e :UE 188 ]
}
"997
[v _AD_Init `(v ~T0 @X0 1 ef ]
"998
{
[; ;main.c: 997: void AD_Init()
[; ;main.c: 998: {
[e :U _AD_Init ]
[f ]
[; ;main.c: 1030: ADCON0 = 0X41;
"1030
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 1047: ADCON1 = 0;
"1047
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 1048: ANSEL0 = 0X03;
"1048
[e = _ANSEL0 -> -> 3 `i `uc ]
[; ;main.c: 1049: ANSEL1 = 0x80;
"1049
[e = _ANSEL1 -> -> 128 `i `uc ]
[; ;main.c: 1050: }
"1050
[e :UE 189 ]
}
"1053
[v _chrgPwmInit `(v ~T0 @X0 1 ef ]
"1054
{
[; ;main.c: 1053: void chrgPwmInit()
[; ;main.c: 1054: {
[e :U _chrgPwmInit ]
[f ]
[; ;main.c: 1055: chrgPwmFlag = 1;
"1055
[e = _chrgPwmFlag -> -> 1 `i `uc ]
[; ;main.c: 1056: PWMCON1 = 0B00000000;
"1056
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 1058: PWMTH = 0X00;
"1058
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 1059: PWMTL = 100;
"1059
[e = _PWMTL -> -> 100 `i `uc ]
[; ;main.c: 1063: PWMD23H = 0;
"1063
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 1064: PWMD2L = 10;
"1064
[e = _PWMD2L -> -> 10 `i `uc ]
[; ;main.c: 1065: PWM23DT = 0X00;
"1065
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 1067: PWMCON0 = 0X04;
"1067
[e = _PWMCON0 -> -> 4 `i `uc ]
[; ;main.c: 1068: PWMCON2 =0X00;
"1068
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 1069: }
"1069
[e :UE 190 ]
}
"1071
[v _chrgPwmStop `(v ~T0 @X0 1 ef ]
"1072
{
[; ;main.c: 1071: void chrgPwmStop()
[; ;main.c: 1072: {
[e :U _chrgPwmStop ]
[f ]
[; ;main.c: 1073: if(chrgPwmFlag)
"1073
[e $ ! != -> _chrgPwmFlag `i -> -> -> 0 `i `uc `i 192  ]
[; ;main.c: 1074: {
"1074
{
[; ;main.c: 1075: chrgPwmFlag = 0;
"1075
[e = _chrgPwmFlag -> -> 0 `i `uc ]
[; ;main.c: 1076: PWMCON0 &= 0xFB;
"1076
[e =& _PWMCON0 -> -> 251 `i `uc ]
[; ;main.c: 1077: RB3 = 0;
"1077
[e = _RB3 -> -> 0 `i `b ]
"1078
}
[e :U 192 ]
[; ;main.c: 1078: }
[; ;main.c: 1079: }
"1079
[e :UE 191 ]
}
"1081
[v _pwmInit `(v ~T0 @X0 1 ef ]
"1082
{
[; ;main.c: 1081: void pwmInit()
[; ;main.c: 1082: {
[e :U _pwmInit ]
[f ]
[; ;main.c: 1083: motorPwmFlag = 1;
"1083
[e = _motorPwmFlag -> -> 1 `i `uc ]
[; ;main.c: 1084: PWMCON1 = 0B11000000;
"1084
[e = _PWMCON1 -> -> 192 `i `uc ]
[; ;main.c: 1085: PWMTH = 0X00;
"1085
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 1086: PWMTL = 100;
"1086
[e = _PWMTL -> -> 100 `i `uc ]
[; ;main.c: 1089: PWMD23H = 0;
"1089
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 1090: PWMD2L = 50;
"1090
[e = _PWMD2L -> -> 50 `i `uc ]
[; ;main.c: 1091: PWM23DT = 0X00;
"1091
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 1093: PWMCON0 = 0X64;
"1093
[e = _PWMCON0 -> -> 100 `i `uc ]
[; ;main.c: 1094: PWMCON2 =0X00;
"1094
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 1095: }
"1095
[e :UE 193 ]
}
"1097
[v _pwmStop `(v ~T0 @X0 1 ef ]
"1098
{
[; ;main.c: 1097: void pwmStop()
[; ;main.c: 1098: {
[e :U _pwmStop ]
[f ]
[; ;main.c: 1099: if(motorPwmFlag)
"1099
[e $ ! != -> _motorPwmFlag `i -> -> -> 0 `i `uc `i 195  ]
[; ;main.c: 1100: {
"1100
{
[; ;main.c: 1101: motorPwmFlag = 0;
"1101
[e = _motorPwmFlag -> -> 0 `i `uc ]
[; ;main.c: 1102: PWMCON0 &= 0XFB;
"1102
[e =& _PWMCON0 -> -> 251 `i `uc ]
[; ;main.c: 1103: RA2 = 0;
"1103
[e = _RA2 -> -> 0 `i `b ]
"1104
}
[e :U 195 ]
[; ;main.c: 1104: }
[; ;main.c: 1105: }
"1105
[e :UE 194 ]
}
"1115
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"1116
{
[; ;main.c: 1115: void Sleep_Mode()
[; ;main.c: 1116: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 1117: INTCON = 0;
"1117
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 1119: OPTION_REG = 0;
"1119
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 1121: WPUA = 0B00000000;
"1121
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 1122: TRISA = 0x03;
"1122
[e = _TRISA -> -> 3 `i `uc ]
[; ;main.c: 1123: TRISB = 0x87;
"1123
[e = _TRISB -> -> 135 `i `uc ]
[; ;main.c: 1125: PORTA = 0X00;
"1125
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 1126: PORTB = 0X00;
"1126
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 1127: WPUB = 0B00000000;
"1127
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 1129: ADCON0 = 0;
"1129
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 1130: ADCON1 = 0;
"1130
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 1132: PWMCON0 = 0;
"1132
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 1134: OSCCON = 0X70;
"1134
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 1136: IOCA = 0B00000000;
"1136
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 1137: IOCB = 0B00000111;
"1137
[e = _IOCB -> -> 7 `i `uc ]
[; ;main.c: 1139: RAIE = 1;
"1139
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 1140: PEIE = 1;
"1140
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 1141: RBIE = 1;
"1141
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 1142: GIE = 0;
"1142
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 1144: PIE1 &= 0X08;
"1144
[e =& _PIE1 -> -> 8 `i `uc ]
[; ;main.c: 1145: PIR1 = 0;
"1145
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 1146: INTCON &= 0XC8;
"1146
[e =& _INTCON -> -> 200 `i `uc ]
[; ;main.c: 1148: PORTA;
"1148
[e _PORTA ]
[; ;main.c: 1149: RAIF = 0;
"1149
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 1150: PORTB;
"1150
[e _PORTB ]
[; ;main.c: 1151: RBIF = 0;
"1151
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 1152: asm("clrwdt");
"1152
[; <" clrwdt ;# ">
[; ;main.c: 1154: asm("sleep");
"1154
[; <" sleep ;# ">
[; ;main.c: 1156: asm("nop");
"1156
[; <" nop ;# ">
[; ;main.c: 1157: asm("clrwdt");
"1157
[; <" clrwdt ;# ">
[; ;main.c: 1158: asm("nop");
"1158
[; <" nop ;# ">
[; ;main.c: 1159: asm("nop");
"1159
[; <" nop ;# ">
[; ;main.c: 1160: asm("nop");
"1160
[; <" nop ;# ">
[; ;main.c: 1161: asm("nop");
"1161
[; <" nop ;# ">
[; ;main.c: 1162: asm("nop");
"1162
[; <" nop ;# ">
[; ;main.c: 1163: if(RAIF) RAIF = 0;
"1163
[e $ ! _RAIF 197  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 197 ]
[; ;main.c: 1164: if(RBIF) RBIF = 0;
"1164
[e $ ! _RBIF 198  ]
[e = _RBIF -> -> 0 `i `b ]
[e :U 198 ]
[; ;main.c: 1165: if(TMR2IF) TMR2IF = 0;
"1165
[e $ ! _TMR2IF 199  ]
[e = _TMR2IF -> -> 0 `i `b ]
[e :U 199 ]
[; ;main.c: 1166: IOCA = 0B00000000;
"1166
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 1167: IOCB = 0B00000000;
"1167
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 1168: Init_System();
"1168
[e ( _Init_System ..  ]
[; ;main.c: 1169: AD_Init();
"1169
[e ( _AD_Init ..  ]
[; ;main.c: 1170: }
"1170
[e :UE 196 ]
}
"1192
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"1193
{
[; ;main.c: 1192: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 1193: {
[e :U _ADC_Sample ]
"1192
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"1193
[f ]
"1194
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 1194: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"1195
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 1195: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"1196
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 1196: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 1198: if ((!LDO_EN) && (adldo & 0x04) )
"1198
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 201  ]
[; ;main.c: 1199: {
"1199
{
[; ;main.c: 1201: ADCON1 = adldo;
"1201
[e = _ADCON1 _adldo ]
[; ;main.c: 1202: _delay((unsigned long)((100)*(16000000/4000000.0)));
"1202
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"1203
}
[; ;main.c: 1203: }
[e $U 202  ]
"1204
[e :U 201 ]
[; ;main.c: 1204: else
[; ;main.c: 1205: ADCON1 = adldo;
"1205
[e = _ADCON1 _adldo ]
[e :U 202 ]
[; ;main.c: 1207: if(adch & 0x10)
"1207
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 203  ]
[; ;main.c: 1208: {
"1208
{
[; ;main.c: 1209: CHS4 = 1;
"1209
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 1210: adch &= 0x0f;
"1210
[e =& _adch -> -> 15 `i `uc ]
"1211
}
[e :U 203 ]
"1212
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 1211: }
[; ;main.c: 1212: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 1213: for (i = 0; i < 10; i++)
"1213
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 204  ]
[e $U 205  ]
"1214
[e :U 204 ]
[; ;main.c: 1214: {
{
[; ;main.c: 1215: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"1215
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 1216: asm("nop");
"1216
[; <" nop ;# ">
[; ;main.c: 1217: asm("nop");
"1217
[; <" nop ;# ">
[; ;main.c: 1218: asm("nop");
"1218
[; <" nop ;# ">
[; ;main.c: 1219: asm("nop");
"1219
[; <" nop ;# ">
[; ;main.c: 1220: GODONE = 1;
"1220
[e = _GODONE -> -> 1 `i `b ]
"1222
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 1222: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 1223: while (GODONE)
"1223
[e $U 207  ]
[e :U 208 ]
[; ;main.c: 1224: {
"1224
{
[; ;main.c: 1225: _delay((unsigned long)((2)*(16000000/4000000.0)));
"1225
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;main.c: 1227: if (0 == (--j))
"1227
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 210  ]
[; ;main.c: 1228: return 0;
"1228
[e ) -> -> 0 `i `uc ]
[e $UE 200  ]
[e :U 210 ]
"1229
}
[e :U 207 ]
"1223
[e $ _GODONE 208  ]
[e :U 209 ]
[; ;main.c: 1229: }
[; ;main.c: 1231: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"1231
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 1233: if (0 == admax)
"1233
[e $ ! == -> -> 0 `i `ui _admax 211  ]
[; ;main.c: 1234: {
"1234
{
[; ;main.c: 1235: admax = ad_temp;
"1235
[e = _admax _ad_temp ]
[; ;main.c: 1236: admin = ad_temp;
"1236
[e = _admin _ad_temp ]
"1237
}
[; ;main.c: 1237: }
[e $U 212  ]
"1238
[e :U 211 ]
[; ;main.c: 1238: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 213  ]
[; ;main.c: 1239: admax = ad_temp;
"1239
[e = _admax _ad_temp ]
[e $U 214  ]
"1240
[e :U 213 ]
[; ;main.c: 1240: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 215  ]
[; ;main.c: 1241: admin = ad_temp;
"1241
[e = _admin _ad_temp ]
[e :U 215 ]
"1243
[e :U 214 ]
[e :U 212 ]
[; ;main.c: 1243: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"1244
}
"1213
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 204  ]
[e :U 205 ]
"1244
}
[; ;main.c: 1244: }
[; ;main.c: 1245: adsum -= admax;
"1245
[e =- _adsum -> _admax `ul ]
[; ;main.c: 1246: if (adsum >= admin)
"1246
[e $ ! >= _adsum -> _admin `ul 216  ]
[; ;main.c: 1247: adsum -= admin;
"1247
[e =- _adsum -> _admin `ul ]
[e $U 217  ]
"1248
[e :U 216 ]
[; ;main.c: 1248: else
[; ;main.c: 1249: adsum = 0;
"1249
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 217 ]
[; ;main.c: 1251: adresult = adsum >> 3;
"1251
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 1253: adsum = 0;
"1253
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 1254: admin = 0;
"1254
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 1255: admax = 0;
"1255
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 1256: return 0xA5;
"1256
[e ) -> -> 165 `i `uc ]
[e $UE 200  ]
[; ;main.c: 1258: }
"1258
[e :UE 200 ]
}
