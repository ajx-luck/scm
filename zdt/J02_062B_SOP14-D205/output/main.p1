Version 3.2 HI-TECH Software Intermediate Code
"111 C:\mcuproject\scm\zdt\J02_062B_SOP14-D205\main.c
[v _ledShow `(v ~T0 @X0 0 ef ]
[p mainexit ]
"101
[v _Init_System `(v ~T0 @X0 0 ef ]
"102
[v _AD_Init `(v ~T0 @X0 0 ef ]
"109
[v _checkOutA `(v ~T0 @X0 0 ef ]
"108
[v _chrgCtr `(v ~T0 @X0 0 ef ]
"110
[v _checkBatAD `(v ~T0 @X0 0 ef ]
"112
[v _keyCtr `(v ~T0 @X0 0 ef ]
"113
[v _workCtr `(v ~T0 @X0 0 ef ]
"114
[v _ledCtr `(v ~T0 @X0 0 ef ]
"103
[v _Sleep_Mode `(v ~T0 @X0 0 ef ]
"107
[v _chrgPwmStop `(v ~T0 @X0 0 ef ]
"105
[v _pwmStop `(v ~T0 @X0 0 ef ]
"106
[v _chrgPwmInit `(v ~T0 @X0 0 ef ]
"104
[v _pwmInit `(v ~T0 @X0 0 ef ]
"98
[v _ADC_Sample `(uc ~T0 @X0 0 ef2`uc`uc ]
[v F479 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF479 ~T0 @X0 0 e ]
[p i __delay ]
"4 C:\mcuproject\scm\zdt\J02_062B_SOP14-D205\main.c
[p n 752 ]
"5
[p n 373 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\SC8P062BD.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;SC8P062BD.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;SC8P062BD.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;SC8P062BD.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;SC8P062BD.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;SC8P062BD.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;SC8P062BD.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;SC8P062BD.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;SC8P062BD.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMPCON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 20: volatile unsigned char CMPCON0 @ 0x0F;
"21
[v _CMPCON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;SC8P062BD.h: 21: volatile unsigned char CMPCON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;SC8P062BD.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;SC8P062BD.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;SC8P062BD.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P062BD.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;SC8P062BD.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;SC8P062BD.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;SC8P062BD.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;SC8P062BD.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;SC8P062BD.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;SC8P062BD.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;SC8P062BD.h: 44: volatile unsigned char ANSEL0 @ 0x93;
"45
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;SC8P062BD.h: 45: volatile unsigned char ANSEL1 @ 0x94;
"46
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;SC8P062BD.h: 46: volatile unsigned char ADCON0 @ 0x95;
"47
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;SC8P062BD.h: 47: volatile unsigned char ADCON1 @ 0x96;
"48
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 48: volatile unsigned char ADRESL @ 0x98;
"49
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 49: volatile unsigned char ADRESH @ 0x99;
"50
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 50: volatile unsigned char PWMD2L @ 0x9B;
"51
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 51: volatile unsigned char PWMD3L @ 0x9C;
"52
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 52: volatile unsigned char PWM23DT @ 0x9D;
"53
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 53: volatile unsigned char PWMD23H @ 0x9E;
"55
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 55: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"56
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 56: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"57
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 57: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"58
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 58: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"59
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 59: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"60
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 60: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"61
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 61: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"62
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 62: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"65
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 65: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"66
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 66: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"67
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 67: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"68
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 68: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"69
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 69: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"70
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 70: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"71
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 71: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"72
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 72: volatile bit C @ ((unsigned)&STATUS*8)+0;
"75
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P062BD.h: 75: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"76
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P062BD.h: 76: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"77
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P062BD.h: 77: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"78
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P062BD.h: 78: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"79
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P062BD.h: 79: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"80
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P062BD.h: 80: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"81
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P062BD.h: 81: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"82
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P062BD.h: 82: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"85
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;SC8P062BD.h: 85: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"86
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;SC8P062BD.h: 86: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"87
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;SC8P062BD.h: 87: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"88
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;SC8P062BD.h: 88: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"89
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;SC8P062BD.h: 89: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"90
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;SC8P062BD.h: 90: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"91
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;SC8P062BD.h: 91: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"92
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;SC8P062BD.h: 92: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"95
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;SC8P062BD.h: 95: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"96
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;SC8P062BD.h: 96: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"97
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;SC8P062BD.h: 97: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"98
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;SC8P062BD.h: 98: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"99
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;SC8P062BD.h: 99: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"100
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;SC8P062BD.h: 100: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"101
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;SC8P062BD.h: 101: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"104
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;SC8P062BD.h: 104: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"105
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;SC8P062BD.h: 105: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"106
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;SC8P062BD.h: 106: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"107
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;SC8P062BD.h: 107: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"108
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;SC8P062BD.h: 108: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"109
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;SC8P062BD.h: 109: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"110
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;SC8P062BD.h: 110: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"111
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P062BD.h: 111: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"114
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;SC8P062BD.h: 114: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"115
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;SC8P062BD.h: 115: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"116
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;SC8P062BD.h: 116: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"117
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;SC8P062BD.h: 117: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"118
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P062BD.h: 118: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"119
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;SC8P062BD.h: 119: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"120
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;SC8P062BD.h: 120: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"121
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P062BD.h: 121: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"124
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;SC8P062BD.h: 124: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"125
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;SC8P062BD.h: 125: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"126
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;SC8P062BD.h: 126: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"127
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;SC8P062BD.h: 127: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"128
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;SC8P062BD.h: 128: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"129
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;SC8P062BD.h: 129: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"130
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;SC8P062BD.h: 130: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"131
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;SC8P062BD.h: 131: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"134
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;SC8P062BD.h: 134: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"135
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;SC8P062BD.h: 135: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"136
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;SC8P062BD.h: 136: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"137
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;SC8P062BD.h: 137: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"138
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;SC8P062BD.h: 138: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"139
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;SC8P062BD.h: 139: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"140
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;SC8P062BD.h: 140: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"143
[v _CMPIF `Vb ~T0 @X0 1 e@109 ]
[; ;SC8P062BD.h: 143: volatile bit CMPIF @ ((unsigned)&PIR1*8)+5;
"144
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;SC8P062BD.h: 144: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"145
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;SC8P062BD.h: 145: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"146
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;SC8P062BD.h: 146: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"147
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;SC8P062BD.h: 147: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"150
[v _CMPIE `Vb ~T0 @X0 1 e@117 ]
[; ;SC8P062BD.h: 150: volatile bit CMPIE @ ((unsigned)&PIE1*8)+5;
"151
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;SC8P062BD.h: 151: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"152
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;SC8P062BD.h: 152: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"153
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;SC8P062BD.h: 153: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"154
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;SC8P062BD.h: 154: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"157
[v _CMPEN `Vb ~T0 @X0 1 e@127 ]
[; ;SC8P062BD.h: 157: volatile bit CMPEN @ ((unsigned)&CMPCON0*8)+7;
"158
[v _CMPPS `Vb ~T0 @X0 1 e@126 ]
[; ;SC8P062BD.h: 158: volatile bit CMPPS @ ((unsigned)&CMPCON0*8)+6;
"159
[v _CMPNS2 `Vb ~T0 @X0 1 e@125 ]
[; ;SC8P062BD.h: 159: volatile bit CMPNS2 @ ((unsigned)&CMPCON0*8)+5;
"160
[v _CMPNS1 `Vb ~T0 @X0 1 e@124 ]
[; ;SC8P062BD.h: 160: volatile bit CMPNS1 @ ((unsigned)&CMPCON0*8)+4;
"161
[v _CMPNS0 `Vb ~T0 @X0 1 e@123 ]
[; ;SC8P062BD.h: 161: volatile bit CMPNS0 @ ((unsigned)&CMPCON0*8)+3;
"162
[v _CMPNV `Vb ~T0 @X0 1 e@122 ]
[; ;SC8P062BD.h: 162: volatile bit CMPNV @ ((unsigned)&CMPCON0*8)+2;
"163
[v _CMPOUT `Vb ~T0 @X0 1 e@121 ]
[; ;SC8P062BD.h: 163: volatile bit CMPOUT @ ((unsigned)&CMPCON0*8)+1;
"164
[v _CMPOEN `Vb ~T0 @X0 1 e@120 ]
[; ;SC8P062BD.h: 164: volatile bit CMPOEN @ ((unsigned)&CMPCON0*8)+0;
"167
[v _CMPIM `Vb ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 167: volatile bit CMPIM @ ((unsigned)&CMPCON1*8)+7;
"168
[v _AN_EN `Vb ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 168: volatile bit AN_EN @ ((unsigned)&CMPCON1*8)+6;
"169
[v _RBIAS_H `Vb ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 169: volatile bit RBIAS_H @ ((unsigned)&CMPCON1*8)+5;
"170
[v _RBIAS_L `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P062BD.h: 170: volatile bit RBIAS_L @ ((unsigned)&CMPCON1*8)+4;
"171
[v _LVDS3 `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P062BD.h: 171: volatile bit LVDS3 @ ((unsigned)&CMPCON1*8)+3;
"172
[v _LVDS2 `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P062BD.h: 172: volatile bit LVDS2 @ ((unsigned)&CMPCON1*8)+2;
"173
[v _LVDS1 `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 173: volatile bit LVDS1 @ ((unsigned)&CMPCON1*8)+1;
"174
[v _LVDS0 `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P062BD.h: 174: volatile bit LVDS0 @ ((unsigned)&CMPCON1*8)+0;
"177
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;SC8P062BD.h: 177: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"178
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 178: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"179
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 179: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"180
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 180: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"181
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 181: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"182
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;SC8P062BD.h: 182: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"183
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 183: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"184
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 184: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"187
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;SC8P062BD.h: 187: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"188
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;SC8P062BD.h: 188: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"189
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;SC8P062BD.h: 189: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"190
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;SC8P062BD.h: 190: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"193
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;SC8P062BD.h: 193: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"194
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P062BD.h: 194: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"195
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;SC8P062BD.h: 195: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"196
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;SC8P062BD.h: 196: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"197
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;SC8P062BD.h: 197: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"198
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;SC8P062BD.h: 198: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"199
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;SC8P062BD.h: 199: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"200
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;SC8P062BD.h: 200: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"203
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;SC8P062BD.h: 203: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"204
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;SC8P062BD.h: 204: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"205
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;SC8P062BD.h: 205: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"206
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;SC8P062BD.h: 206: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"207
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;SC8P062BD.h: 207: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"208
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;SC8P062BD.h: 208: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"211
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;SC8P062BD.h: 211: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"212
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;SC8P062BD.h: 212: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"213
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;SC8P062BD.h: 213: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"214
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;SC8P062BD.h: 214: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"215
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;SC8P062BD.h: 215: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"216
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;SC8P062BD.h: 216: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"219
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;SC8P062BD.h: 219: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"220
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;SC8P062BD.h: 220: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"221
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;SC8P062BD.h: 221: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"222
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;SC8P062BD.h: 222: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"223
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;SC8P062BD.h: 223: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"226
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;SC8P062BD.h: 226: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"227
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;SC8P062BD.h: 227: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"228
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;SC8P062BD.h: 228: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"229
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;SC8P062BD.h: 229: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"232
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;SC8P062BD.h: 232: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"233
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;SC8P062BD.h: 233: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"234
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;SC8P062BD.h: 234: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"235
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;SC8P062BD.h: 235: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"236
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;SC8P062BD.h: 236: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"237
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;SC8P062BD.h: 237: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"240
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;SC8P062BD.h: 240: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"241
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;SC8P062BD.h: 241: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"242
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;SC8P062BD.h: 242: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"243
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;SC8P062BD.h: 243: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"244
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;SC8P062BD.h: 244: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"245
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;SC8P062BD.h: 245: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"248
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;SC8P062BD.h: 248: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"249
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;SC8P062BD.h: 249: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"250
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;SC8P062BD.h: 250: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"251
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;SC8P062BD.h: 251: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"252
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;SC8P062BD.h: 252: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"253
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;SC8P062BD.h: 253: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"256
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;SC8P062BD.h: 256: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"257
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;SC8P062BD.h: 257: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"258
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;SC8P062BD.h: 258: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"259
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;SC8P062BD.h: 259: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"260
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;SC8P062BD.h: 260: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"261
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;SC8P062BD.h: 261: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"264
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;SC8P062BD.h: 264: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"265
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;SC8P062BD.h: 265: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"266
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;SC8P062BD.h: 266: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"267
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;SC8P062BD.h: 267: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"268
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;SC8P062BD.h: 268: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"269
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;SC8P062BD.h: 269: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"272
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;SC8P062BD.h: 272: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"273
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;SC8P062BD.h: 273: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"274
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;SC8P062BD.h: 274: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"275
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;SC8P062BD.h: 275: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"276
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;SC8P062BD.h: 276: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"277
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;SC8P062BD.h: 277: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"280
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;SC8P062BD.h: 280: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"281
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;SC8P062BD.h: 281: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"282
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;SC8P062BD.h: 282: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"283
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;SC8P062BD.h: 283: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"284
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;SC8P062BD.h: 284: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"285
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;SC8P062BD.h: 285: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"288
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;SC8P062BD.h: 288: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"289
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;SC8P062BD.h: 289: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"290
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;SC8P062BD.h: 290: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"291
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;SC8P062BD.h: 291: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"292
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;SC8P062BD.h: 292: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"293
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;SC8P062BD.h: 293: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"296
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;SC8P062BD.h: 296: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"297
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;SC8P062BD.h: 297: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"298
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;SC8P062BD.h: 298: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"299
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;SC8P062BD.h: 299: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"300
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;SC8P062BD.h: 300: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"301
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;SC8P062BD.h: 301: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"302
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;SC8P062BD.h: 302: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"305
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;SC8P062BD.h: 305: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"306
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;SC8P062BD.h: 306: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"307
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;SC8P062BD.h: 307: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"308
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;SC8P062BD.h: 308: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"309
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;SC8P062BD.h: 309: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"310
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;SC8P062BD.h: 310: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"311
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;SC8P062BD.h: 311: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"312
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;SC8P062BD.h: 312: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"315
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;SC8P062BD.h: 315: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"316
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;SC8P062BD.h: 316: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"317
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;SC8P062BD.h: 317: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"318
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;SC8P062BD.h: 318: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"319
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;SC8P062BD.h: 319: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"322
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;SC8P062BD.h: 322: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"323
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;SC8P062BD.h: 323: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"324
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;SC8P062BD.h: 324: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"325
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;SC8P062BD.h: 325: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"30 C:\mcuproject\scm\zdt\J02_062B_SOP14-D205\main.c
[v _numArray `Cuc ~T0 @X0 -> 0 `x s ]
[i _numArray
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 113 `i `uc
-> -> 121 `i `uc
-> -> 80 `i `uc
-> -> 118 `i `uc
..
]
[; ;main.c: 30: const static unsigned char numArray[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x71,0x79,0x50,0x76};
"32
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 32: volatile unsigned int adresult;
"33
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 33: volatile unsigned int result;
"34
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 34: volatile unsigned char test_adc;
"35
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 35: volatile unsigned int power_ad;
"36
[v _intCount `uc ~T0 @X0 1 e ]
[; ;main.c: 36: unsigned char intCount;
"37
[v _count1s `uc ~T0 @X0 1 e ]
[; ;main.c: 37: unsigned char count1s;
"38
[v _IntFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 38: unsigned char IntFlag;
"39
[v _chrgFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 39: unsigned char chrgFlag;
"40
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 40: unsigned char chrgFullFlag;
"41
[v _intCount10 `uc ~T0 @X0 1 e ]
[; ;main.c: 41: unsigned char intCount10;
"42
[v _outADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 42: unsigned int outADValue;
"43
[v _batADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 43: unsigned int batADValue;
"44
[v _countHalfFull `uc ~T0 @X0 1 e ]
[; ;main.c: 44: unsigned char countHalfFull;
"45
[v _protectFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 45: unsigned char protectFlag;
"46
[v _workOverOutTime `uc ~T0 @X0 1 e ]
[; ;main.c: 46: unsigned char workOverOutTime;
"47
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 47: unsigned char workStep = 0;
"48
[v _ledCnt `uc ~T0 @X0 1 e ]
[; ;main.c: 48: unsigned char ledCnt;
"49
[v _ledStep `uc ~T0 @X0 1 e ]
[; ;main.c: 49: unsigned char ledStep;
"50
[v _keyCount `uc ~T0 @X0 1 e ]
[; ;main.c: 50: unsigned char keyCount;
"51
[v _keyCount2 `uc ~T0 @X0 1 e ]
[; ;main.c: 51: unsigned char keyCount2;
"52
[v _longPressFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 52: unsigned char longPressFlag;
"53
[v _longPressFlag2 `uc ~T0 @X0 1 e ]
[; ;main.c: 53: unsigned char longPressFlag2;
"54
[v _maxDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 54: unsigned char maxDuty;
"55
[v _overCount `uc ~T0 @X0 1 e ]
[; ;main.c: 55: unsigned char overCount;
"56
[v _addPowerCount `uc ~T0 @X0 1 e ]
[; ;main.c: 56: unsigned char addPowerCount;
"57
[v _tempDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 57: unsigned char tempDuty;
"58
[v _startTime `uc ~T0 @X0 1 e ]
[; ;main.c: 58: unsigned char startTime;
"59
[v _firstTime `uc ~T0 @X0 1 e ]
[; ;main.c: 59: unsigned char firstTime;
"60
[v _overChrgTime `uc ~T0 @X0 1 e ]
[; ;main.c: 60: unsigned char overChrgTime;
"61
[v _pwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 61: unsigned char pwStep;
"62
[v _prePwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 62: unsigned char prePwStep;
"63
[v _count50s `ui ~T0 @X0 1 e ]
[; ;main.c: 63: unsigned int count50s;
"64
[v _reChrgCount `uc ~T0 @X0 1 e ]
[; ;main.c: 64: unsigned char reChrgCount;
"65
[v _lockLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 65: unsigned char lockLedStep;
"66
[v _showBatTime `uc ~T0 @X0 1 e ]
[; ;main.c: 66: unsigned char showBatTime;
"67
[v _chrgMode `uc ~T0 @X0 1 e ]
[i _chrgMode
-> -> 0 `i `uc
]
[; ;main.c: 67: unsigned char chrgMode = 0;
"68
[v _chrgMaxAD `uc ~T0 @X0 1 e ]
[i _chrgMaxAD
-> -> 0 `i `uc
]
[; ;main.c: 68: unsigned char chrgMaxAD = 0;
"69
[v _lockCount `uc ~T0 @X0 1 e ]
[i _lockCount
-> -> 0 `i `uc
]
[; ;main.c: 69: unsigned char lockCount = 0;
"70
[v _fullCount `ui ~T0 @X0 1 e ]
[i _fullCount
-> -> 0 `i `ui
]
[; ;main.c: 70: unsigned int fullCount = 0;
"71
[v _addTime `uc ~T0 @X0 1 e ]
[; ;main.c: 71: unsigned char addTime;
"72
[v _subTime `uc ~T0 @X0 1 e ]
[; ;main.c: 72: unsigned char subTime;
"73
[v _chrgWaitTime `uc ~T0 @X0 1 e ]
[; ;main.c: 73: unsigned char chrgWaitTime;
"74
[v _chrgMaxDuty `uc ~T0 @X0 1 e ]
[i _chrgMaxDuty
-> -> 0 `i `uc
]
[; ;main.c: 74: unsigned char chrgMaxDuty = 0;
"75
[v _ledCntTime `uc ~T0 @X0 1 e ]
[; ;main.c: 75: unsigned char ledCntTime;
"76
[v _count5s `ui ~T0 @X0 1 e ]
[i _count5s
-> -> 0 `i `ui
]
[; ;main.c: 76: unsigned int count5s = 0;
"77
[v _overWorkTime `ui ~T0 @X0 1 e ]
[; ;main.c: 77: unsigned int overWorkTime;
"78
[v _preLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 78: unsigned char preLedStep;
"79
[v _count8s `ui ~T0 @X0 1 e ]
[; ;main.c: 79: unsigned int count8s;
"80
[v _count900s `ui ~T0 @X0 1 e ]
[; ;main.c: 80: unsigned int count900s;
"81
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 81: unsigned char lowBatFlag = 0;
"82
[v _sleepTime `uc ~T0 @X0 1 e ]
[; ;main.c: 82: unsigned char sleepTime;
"83
[v _startChrgTime `uc ~T0 @X0 1 e ]
[i _startChrgTime
-> -> 0 `i `uc
]
[; ;main.c: 83: unsigned char startChrgTime = 0;
"84
[v _shiweiNum `uc ~T0 @X0 1 e ]
[i _shiweiNum
-> -> 0 `i `uc
]
[; ;main.c: 84: unsigned char shiweiNum = 0;
"85
[v _geweiNum `uc ~T0 @X0 1 e ]
[i _geweiNum
-> -> 0 `i `uc
]
[; ;main.c: 85: unsigned char geweiNum = 0;
"86
[v _jrStep `uc ~T0 @X0 1 e ]
[i _jrStep
-> -> 0 `i `uc
]
[; ;main.c: 86: unsigned char jrStep = 0;
"87
[v _preWorkStep `uc ~T0 @X0 1 e ]
[i _preWorkStep
-> -> 0 `i `uc
]
[; ;main.c: 87: unsigned char preWorkStep = 0;
"88
[v _prejrStep `uc ~T0 @X0 1 e ]
[i _prejrStep
-> -> 0 `i `uc
]
[; ;main.c: 88: unsigned char prejrStep = 0;
"89
[v _chrgPwmFlag `uc ~T0 @X0 1 e ]
[i _chrgPwmFlag
-> -> 0 `i `uc
]
[; ;main.c: 89: unsigned char chrgPwmFlag = 0;
"90
[v _motorPwmFlag `uc ~T0 @X0 1 e ]
[i _motorPwmFlag
-> -> 0 `i `uc
]
[; ;main.c: 90: unsigned char motorPwmFlag = 0;
"91
[v _jrStartTime `ui ~T0 @X0 1 e ]
[i _jrStartTime
-> -> 0 `i `ui
]
[; ;main.c: 91: unsigned int jrStartTime = 0;
"92
[v _jrShowTime `uc ~T0 @X0 1 e ]
[i _jrShowTime
-> -> 0 `i `uc
]
[; ;main.c: 92: unsigned char jrShowTime = 0;
"93
[v _jrPwmTime `uc ~T0 @X0 1 e ]
[i _jrPwmTime
-> -> 0 `i `uc
]
[; ;main.c: 93: unsigned char jrPwmTime = 0;
"94
[v _jrDuty `uc ~T0 @X0 1 e ]
[i _jrDuty
-> -> 0 `i `uc
]
[; ;main.c: 94: unsigned char jrDuty = 0;
"95
[v _jrDutyFX `uc ~T0 @X0 1 e ]
[i _jrDutyFX
-> -> 0 `i `uc
]
[; ;main.c: 95: unsigned char jrDutyFX = 0;
"96
[v _jrWaitTime `uc ~T0 @X0 1 e ]
[i _jrWaitTime
-> -> 0 `i `uc
]
[; ;main.c: 96: unsigned char jrWaitTime = 0;
[; ;main.c: 98: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
[; ;main.c: 99: void DelayXms(unsigned char x);
[; ;main.c: 100: unsigned char ADC_Result(unsigned char adch);
[; ;main.c: 101: void Init_System();
[; ;main.c: 102: void AD_Init();
[; ;main.c: 103: void Sleep_Mode();
[; ;main.c: 104: void pwmInit();
[; ;main.c: 105: void pwmStop();
[; ;main.c: 106: void chrgPwmInit();
[; ;main.c: 107: void chrgPwmStop();
[; ;main.c: 108: void chrgCtr();
[; ;main.c: 109: void checkOutA();
[; ;main.c: 110: void checkBatAD();
[; ;main.c: 111: void ledShow();
[; ;main.c: 112: void keyCtr();
[; ;main.c: 113: void workCtr();
[; ;main.c: 114: void ledCtr();
[; ;main.c: 115: char keyRead(char keyStatus);
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F573 `(v ~T0 @X0 1 tf ]
"131
[v _Isr_Timer `IF573 ~T0 @X0 1 e ]
"132
{
[; ;main.c: 131: void interrupt Isr_Timer()
[; ;main.c: 132: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 133: if(TMR2IF)
"133
[e $ ! _TMR2IF 2  ]
[; ;main.c: 134: {
"134
{
[; ;main.c: 135: TMR2IF = 0;
"135
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 136: if(++intCount >= 160)
"136
[e $ ! >= -> =+ _intCount -> -> 1 `i `uc `i -> 160 `i 3  ]
[; ;main.c: 137: {
"137
{
[; ;main.c: 138: intCount = 0;
"138
[e = _intCount -> -> 0 `i `uc ]
[; ;main.c: 139: IntFlag = 1;
"139
[e = _IntFlag -> -> 1 `i `uc ]
[; ;main.c: 140: if(++count1s >= 100)
"140
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 4  ]
[; ;main.c: 141: {
"141
{
[; ;main.c: 142: count1s = 0;
"142
[e = _count1s -> -> 0 `i `uc ]
"143
}
[e :U 4 ]
"144
}
[e :U 3 ]
[; ;main.c: 143: }
[; ;main.c: 144: }
[; ;main.c: 145: ledShow();
"145
[e ( _ledShow ..  ]
[; ;main.c: 146: intCount10++;
"146
[e ++ _intCount10 -> -> 1 `i `uc ]
"147
}
[e :U 2 ]
[; ;main.c: 147: }
[; ;main.c: 149: }
"149
[e :UE 1 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"155
[v _main `(v ~T0 @X0 1 ef ]
"156
{
[; ;main.c: 155: void main()
[; ;main.c: 156: {
[e :U _main ]
[f ]
[; ;main.c: 157: Init_System();
"157
[e ( _Init_System ..  ]
[; ;main.c: 158: AD_Init();
"158
[e ( _AD_Init ..  ]
[; ;main.c: 159: shiweiNum = geweiNum = numArray[8];
"159
[e = _shiweiNum = _geweiNum *U + &U _numArray * -> -> -> 8 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 160: firstTime = 200;
"160
[e = _firstTime -> -> 200 `i `uc ]
[; ;main.c: 161: while (1)
"161
[e :U 7 ]
[; ;main.c: 162: {
"162
{
[; ;main.c: 163: asm("clrwdt");
"163
[; <" clrwdt ;# ">
[; ;main.c: 164: if(intCount10 > 10)
"164
[e $ ! > -> _intCount10 `i -> 10 `i 9  ]
[; ;main.c: 165: {
"165
{
[; ;main.c: 166: intCount10 = 0;
"166
[e = _intCount10 -> -> 0 `i `uc ]
[; ;main.c: 167: checkOutA();
"167
[e ( _checkOutA ..  ]
"168
}
[e :U 9 ]
[; ;main.c: 168: }
[; ;main.c: 169: if(!IntFlag)
"169
[e $ ! ! != -> _IntFlag `i -> -> -> 0 `i `uc `i 10  ]
[; ;main.c: 170: continue;
"170
[e $U 6  ]
[e :U 10 ]
[; ;main.c: 171: IntFlag = 0;
"171
[e = _IntFlag -> -> 0 `i `uc ]
[; ;main.c: 172: chrgCtr();
"172
[e ( _chrgCtr ..  ]
[; ;main.c: 173: checkBatAD();
"173
[e ( _checkBatAD ..  ]
[; ;main.c: 174: if(chrgFlag == 0 && lowBatFlag == 0 && firstTime == 0)
"174
[e $ ! && && == -> _chrgFlag `i -> 0 `i == -> _lowBatFlag `i -> 0 `i == -> _firstTime `i -> 0 `i 11  ]
[; ;main.c: 175: {
"175
{
[; ;main.c: 176: keyCtr();
"176
[e ( _keyCtr ..  ]
"177
}
[e :U 11 ]
[; ;main.c: 177: }
[; ;main.c: 178: workCtr();
"178
[e ( _workCtr ..  ]
[; ;main.c: 179: ledCtr();
"179
[e ( _ledCtr ..  ]
[; ;main.c: 180: if(chrgFlag == 0 && workStep == 0 && keyCount == 0 && firstTime == 0 && showBatTime == 0 && overWorkTime == 0)
"180
[e $ ! && && && && && == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _firstTime `i -> 0 `i == -> _showBatTime `i -> 0 `i == _overWorkTime -> -> 0 `i `ui 12  ]
[; ;main.c: 181: {
"181
{
[; ;main.c: 182: shiweiNum = geweiNum = 0;
"182
[e = _shiweiNum = _geweiNum -> -> 0 `i `uc ]
[; ;main.c: 183: if(++sleepTime >= 200)
"183
[e $ ! >= -> =+ _sleepTime -> -> 1 `i `uc `i -> 200 `i 13  ]
[; ;main.c: 184: {
"184
{
[; ;main.c: 185: sleepTime = 0;
"185
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 186: Sleep_Mode();
"186
[e ( _Sleep_Mode ..  ]
"187
}
[e :U 13 ]
"188
}
[; ;main.c: 187: }
[; ;main.c: 188: }
[e $U 14  ]
"189
[e :U 12 ]
[; ;main.c: 189: else
[; ;main.c: 190: {
"190
{
[; ;main.c: 191: sleepTime = 0;
"191
[e = _sleepTime -> -> 0 `i `uc ]
"192
}
[e :U 14 ]
"193
}
[e :U 6 ]
"161
[e $U 7  ]
[e :U 8 ]
[; ;main.c: 192: }
[; ;main.c: 193: }
[; ;main.c: 194: }
"194
[e :UE 5 ]
}
"196
[v _ledShow `(v ~T0 @X0 1 ef ]
"197
{
[; ;main.c: 196: void ledShow()
[; ;main.c: 197: {
[e :U _ledShow ]
[f ]
[; ;main.c: 198: if(++ledCntTime > 5)
"198
[e $ ! > -> =+ _ledCntTime -> -> 1 `i `uc `i -> 5 `i 16  ]
[; ;main.c: 199: {
"199
{
[; ;main.c: 200: ledCntTime = 0;
"200
[e = _ledCntTime -> -> 0 `i `uc ]
[; ;main.c: 201: if(++ledCnt > 14)
"201
[e $ ! > -> =+ _ledCnt -> -> 1 `i `uc `i -> 14 `i 17  ]
[; ;main.c: 202: {
"202
{
[; ;main.c: 203: ledCnt = 0;
"203
[e = _ledCnt -> -> 0 `i `uc ]
"204
}
[e :U 17 ]
[; ;main.c: 204: }
[; ;main.c: 205: PORTA &= 0x3F;
"205
[e =& _PORTA -> -> 63 `i `uc ]
[; ;main.c: 206: PORTB &= 0xDC;
"206
[e =& _PORTB -> -> 220 `i `uc ]
[; ;main.c: 207: TRISA |= 0x30;
"207
[e =| _TRISA -> -> 48 `i `uc ]
[; ;main.c: 208: TRISB |= 0x23;
"208
[e =| _TRISB -> -> 35 `i `uc ]
[; ;main.c: 209: switch(ledCnt)
"209
[e $U 19  ]
[; ;main.c: 210: {
"210
{
[; ;main.c: 211: case 1:
"211
[e :U 20 ]
[; ;main.c: 212: if(shiweiNum & 0x01)
"212
[e $ ! != & -> _shiweiNum `i -> 1 `i -> 0 `i 21  ]
[; ;main.c: 213: {
"213
{
[; ;main.c: 214: TRISB &= 0xDF;
"214
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 215: TRISA &= 0xEF;
"215
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 216: RB5 = 1;
"216
[e = _RB5 -> -> 1 `i `b ]
[; ;main.c: 217: RA4 = 0;
"217
[e = _RA4 -> -> 0 `i `b ]
"218
}
[e :U 21 ]
[; ;main.c: 218: }
[; ;main.c: 219: break;
"219
[e $U 18  ]
[; ;main.c: 220: case 2:
"220
[e :U 22 ]
[; ;main.c: 221: if(shiweiNum & 0x02)
"221
[e $ ! != & -> _shiweiNum `i -> 2 `i -> 0 `i 23  ]
[; ;main.c: 222: {
"222
{
[; ;main.c: 223: TRISB &= 0xDF;
"223
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 224: TRISA &= 0xEF;
"224
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 225: RA4 = 1;
"225
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 226: RB5 = 0;
"226
[e = _RB5 -> -> 0 `i `b ]
"227
}
[e :U 23 ]
[; ;main.c: 227: }
[; ;main.c: 228: break;
"228
[e $U 18  ]
[; ;main.c: 229: case 3:
"229
[e :U 24 ]
[; ;main.c: 230: if(shiweiNum & 0x04)
"230
[e $ ! != & -> _shiweiNum `i -> 4 `i -> 0 `i 25  ]
[; ;main.c: 231: {
"231
{
[; ;main.c: 232: TRISB &= 0xDF;
"232
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 233: TRISB &= 0xFD;
"233
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 234: RB5 = 1;
"234
[e = _RB5 -> -> 1 `i `b ]
[; ;main.c: 235: RB1 = 0;
"235
[e = _RB1 -> -> 0 `i `b ]
"236
}
[e :U 25 ]
[; ;main.c: 236: }
[; ;main.c: 237: break;
"237
[e $U 18  ]
[; ;main.c: 238: case 4:
"238
[e :U 26 ]
[; ;main.c: 239: if(shiweiNum & 0x08)
"239
[e $ ! != & -> _shiweiNum `i -> 8 `i -> 0 `i 27  ]
[; ;main.c: 240: {
"240
{
[; ;main.c: 241: TRISA &= 0xEF;
"241
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 242: TRISB &= 0xFD;
"242
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 243: RA4 = 1;
"243
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 244: RB1 = 0;
"244
[e = _RB1 -> -> 0 `i `b ]
"245
}
[e :U 27 ]
[; ;main.c: 245: }
[; ;main.c: 246: break;
"246
[e $U 18  ]
[; ;main.c: 247: case 5:
"247
[e :U 28 ]
[; ;main.c: 248: if(shiweiNum & 0x10)
"248
[e $ ! != & -> _shiweiNum `i -> 16 `i -> 0 `i 29  ]
[; ;main.c: 249: {
"249
{
[; ;main.c: 250: TRISA &= 0xEF;
"250
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 251: TRISB &= 0xFE;
"251
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 252: RA4 = 1;
"252
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 253: RB0 = 0;
"253
[e = _RB0 -> -> 0 `i `b ]
"254
}
[e :U 29 ]
[; ;main.c: 254: }
[; ;main.c: 255: break;
"255
[e $U 18  ]
[; ;main.c: 256: case 6:
"256
[e :U 30 ]
[; ;main.c: 257: if(shiweiNum & 0x20)
"257
[e $ ! != & -> _shiweiNum `i -> 32 `i -> 0 `i 31  ]
[; ;main.c: 258: {
"258
{
[; ;main.c: 259: TRISB &= 0xDF;
"259
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 260: TRISB &= 0xFE;
"260
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 261: RB5 = 1;
"261
[e = _RB5 -> -> 1 `i `b ]
[; ;main.c: 262: RB0 = 0;
"262
[e = _RB0 -> -> 0 `i `b ]
"263
}
[e :U 31 ]
[; ;main.c: 263: }
[; ;main.c: 264: break;
"264
[e $U 18  ]
[; ;main.c: 265: case 7:
"265
[e :U 32 ]
[; ;main.c: 266: if(shiweiNum & 0x40)
"266
[e $ ! != & -> _shiweiNum `i -> 64 `i -> 0 `i 33  ]
[; ;main.c: 267: {
"267
{
[; ;main.c: 268: TRISB &= 0xFD;
"268
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 269: TRISB &= 0xFE;
"269
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 270: RB1 = 1;
"270
[e = _RB1 -> -> 1 `i `b ]
[; ;main.c: 271: RB0 = 0;
"271
[e = _RB0 -> -> 0 `i `b ]
"272
}
[e :U 33 ]
[; ;main.c: 272: }
[; ;main.c: 273: break;
"273
[e $U 18  ]
[; ;main.c: 274: case 8:
"274
[e :U 34 ]
[; ;main.c: 275: if(geweiNum & 0x01)
"275
[e $ ! != & -> _geweiNum `i -> 1 `i -> 0 `i 35  ]
[; ;main.c: 276: {
"276
{
[; ;main.c: 277: TRISA &= 0xDF;
"277
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 278: TRISA &= 0xEF;
"278
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 279: RA4 = 1;
"279
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 280: RA5 = 0;
"280
[e = _RA5 -> -> 0 `i `b ]
"281
}
[e :U 35 ]
[; ;main.c: 281: }
[; ;main.c: 282: break;
"282
[e $U 18  ]
[; ;main.c: 283: case 9:
"283
[e :U 36 ]
[; ;main.c: 284: if(geweiNum & 0x02)
"284
[e $ ! != & -> _geweiNum `i -> 2 `i -> 0 `i 37  ]
[; ;main.c: 285: {
"285
{
[; ;main.c: 286: TRISA &= 0xDF;
"286
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 287: TRISA &= 0xEF;
"287
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 288: RA5 = 1;
"288
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 289: RA4 = 0;
"289
[e = _RA4 -> -> 0 `i `b ]
"290
}
[e :U 37 ]
[; ;main.c: 290: }
[; ;main.c: 291: break;
"291
[e $U 18  ]
[; ;main.c: 292: case 10:
"292
[e :U 38 ]
[; ;main.c: 293: if(geweiNum & 0x04)
"293
[e $ ! != & -> _geweiNum `i -> 4 `i -> 0 `i 39  ]
[; ;main.c: 294: {
"294
{
[; ;main.c: 295: TRISA &= 0xDF;
"295
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 296: TRISB &= 0xDF;
"296
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 297: RB5 = 1;
"297
[e = _RB5 -> -> 1 `i `b ]
[; ;main.c: 298: RA5 = 0;
"298
[e = _RA5 -> -> 0 `i `b ]
"299
}
[e :U 39 ]
[; ;main.c: 299: }
[; ;main.c: 300: break;
"300
[e $U 18  ]
[; ;main.c: 301: case 11:
"301
[e :U 40 ]
[; ;main.c: 302: if(geweiNum & 0x08)
"302
[e $ ! != & -> _geweiNum `i -> 8 `i -> 0 `i 41  ]
[; ;main.c: 303: {
"303
{
[; ;main.c: 304: TRISA &= 0xDF;
"304
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 305: TRISB &= 0xDF;
"305
[e =& _TRISB -> -> 223 `i `uc ]
[; ;main.c: 306: RA5 = 1;
"306
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 307: RB5 = 0;
"307
[e = _RB5 -> -> 0 `i `b ]
"308
}
[e :U 41 ]
[; ;main.c: 308: }
[; ;main.c: 309: break;
"309
[e $U 18  ]
[; ;main.c: 310: case 12:
"310
[e :U 42 ]
[; ;main.c: 311: if(geweiNum & 0x10)
"311
[e $ ! != & -> _geweiNum `i -> 16 `i -> 0 `i 43  ]
[; ;main.c: 312: {
"312
{
[; ;main.c: 313: TRISA &= 0xDF;
"313
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 314: TRISB &= 0xFD;
"314
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 315: RB1 = 1;
"315
[e = _RB1 -> -> 1 `i `b ]
[; ;main.c: 316: RA5 = 0;
"316
[e = _RA5 -> -> 0 `i `b ]
"317
}
[e :U 43 ]
[; ;main.c: 317: }
[; ;main.c: 318: break;
"318
[e $U 18  ]
[; ;main.c: 319: case 13:
"319
[e :U 44 ]
[; ;main.c: 320: if(geweiNum & 0x20)
"320
[e $ ! != & -> _geweiNum `i -> 32 `i -> 0 `i 45  ]
[; ;main.c: 321: {
"321
{
[; ;main.c: 322: TRISA &= 0xDF;
"322
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 323: TRISB &= 0xFD;
"323
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 324: RA5 = 1;
"324
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 325: RB1 = 0;
"325
[e = _RB1 -> -> 0 `i `b ]
"326
}
[e :U 45 ]
[; ;main.c: 326: }
[; ;main.c: 327: break;
"327
[e $U 18  ]
[; ;main.c: 328: case 14:
"328
[e :U 46 ]
[; ;main.c: 329: if(geweiNum & 0x40)
"329
[e $ ! != & -> _geweiNum `i -> 64 `i -> 0 `i 47  ]
[; ;main.c: 330: {
"330
{
[; ;main.c: 331: TRISA &= 0xDF;
"331
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 332: TRISB &= 0xFE;
"332
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 333: RA5 = 1;
"333
[e = _RA5 -> -> 1 `i `b ]
[; ;main.c: 334: RB0 = 0;
"334
[e = _RB0 -> -> 0 `i `b ]
"335
}
[e :U 47 ]
[; ;main.c: 335: }
[; ;main.c: 336: break;
"336
[e $U 18  ]
[; ;main.c: 337: case 15:
"337
[e :U 48 ]
[; ;main.c: 338: if(workStep > 0)
"338
[e $ ! > -> _workStep `i -> 0 `i 49  ]
[; ;main.c: 339: {
"339
{
[; ;main.c: 340: TRISA &= 0xEF;
"340
[e =& _TRISA -> -> 239 `i `uc ]
[; ;main.c: 341: TRISB &= 0xFE;
"341
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 342: RB0 = 1;
"342
[e = _RB0 -> -> 1 `i `b ]
[; ;main.c: 343: RA4 = 0;
"343
[e = _RA4 -> -> 0 `i `b ]
"344
}
[e :U 49 ]
[; ;main.c: 344: }
[; ;main.c: 345: break;
"345
[e $U 18  ]
[; ;main.c: 346: case 0:
"346
[e :U 50 ]
[; ;main.c: 347: if(workStep > 0)
"347
[e $ ! > -> _workStep `i -> 0 `i 51  ]
[; ;main.c: 348: {
"348
{
[; ;main.c: 349: TRISA &= 0xDF;
"349
[e =& _TRISA -> -> 223 `i `uc ]
[; ;main.c: 350: TRISB &= 0xFE;
"350
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 351: RB0 = 1;
"351
[e = _RB0 -> -> 1 `i `b ]
[; ;main.c: 352: RA5 = 0;
"352
[e = _RA5 -> -> 0 `i `b ]
"353
}
[e :U 51 ]
[; ;main.c: 353: }
[; ;main.c: 354: break;
"354
[e $U 18  ]
[; ;main.c: 355: default:
"355
[e :U 52 ]
[; ;main.c: 356: break;
"356
[e $U 18  ]
"357
}
[; ;main.c: 357: }
[e $U 18  ]
"209
[e :U 19 ]
[e [\ _ledCnt , $ -> -> 1 `i `uc 20
 , $ -> -> 2 `i `uc 22
 , $ -> -> 3 `i `uc 24
 , $ -> -> 4 `i `uc 26
 , $ -> -> 5 `i `uc 28
 , $ -> -> 6 `i `uc 30
 , $ -> -> 7 `i `uc 32
 , $ -> -> 8 `i `uc 34
 , $ -> -> 9 `i `uc 36
 , $ -> -> 10 `i `uc 38
 , $ -> -> 11 `i `uc 40
 , $ -> -> 12 `i `uc 42
 , $ -> -> 13 `i `uc 44
 , $ -> -> 14 `i `uc 46
 , $ -> -> 15 `i `uc 48
 , $ -> -> 0 `i `uc 50
 52 ]
"357
[e :U 18 ]
"358
}
[e :U 16 ]
[; ;main.c: 358: }
[; ;main.c: 361: }
"361
[e :UE 15 ]
}
"364
[v _ledCtr `(v ~T0 @X0 1 ef ]
"365
{
[; ;main.c: 364: void ledCtr()
[; ;main.c: 365: {
[e :U _ledCtr ]
[f ]
[; ;main.c: 366: if(firstTime > 0)
"366
[e $ ! > -> _firstTime `i -> 0 `i 54  ]
[; ;main.c: 367: {
"367
{
[; ;main.c: 368: firstTime--;
"368
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 369: if(prePwStep < pwStep)
"369
[e $ ! < -> _prePwStep `i -> _pwStep `i 55  ]
[; ;main.c: 370: {
"370
{
[; ;main.c: 371: prePwStep = pwStep;
"371
[e = _prePwStep _pwStep ]
"372
}
[e :U 55 ]
"373
}
[; ;main.c: 372: }
[; ;main.c: 373: }
[e $U 56  ]
"374
[e :U 54 ]
[; ;main.c: 374: else if(overWorkTime > 0)
[e $ ! > _overWorkTime -> -> 0 `i `ui 57  ]
[; ;main.c: 375: {
"375
{
[; ;main.c: 376: overWorkTime--;
"376
[e -- _overWorkTime -> -> 1 `i `ui ]
[; ;main.c: 377: shiweiNum = numArray[11];
"377
[e = _shiweiNum *U + &U _numArray * -> -> -> 11 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 378: geweiNum = numArray[12];
"378
[e = _geweiNum *U + &U _numArray * -> -> -> 12 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"379
}
[; ;main.c: 379: }
[e $U 58  ]
"380
[e :U 57 ]
[; ;main.c: 380: else if(showBatTime > 0)
[e $ ! > -> _showBatTime `i -> 0 `i 59  ]
[; ;main.c: 381: {
"381
{
[; ;main.c: 382: showBatTime--;
"382
[e -- _showBatTime -> -> 1 `i `uc ]
[; ;main.c: 383: shiweiNum = numArray[prePwStep/10];
"383
[e = _shiweiNum *U + &U _numArray * -> -> / -> _prePwStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 384: geweiNum = numArray[prePwStep%10];
"384
[e = _geweiNum *U + &U _numArray * -> -> % -> _prePwStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"385
}
[; ;main.c: 385: }
[e $U 60  ]
"386
[e :U 59 ]
[; ;main.c: 386: else if(workStep > 0)
[e $ ! > -> _workStep `i -> 0 `i 61  ]
[; ;main.c: 387: {
"387
{
[; ;main.c: 390: shiweiNum = numArray[workStep/10];
"390
[e = _shiweiNum *U + &U _numArray * -> -> / -> _workStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 391: geweiNum = numArray[workStep%10];
"391
[e = _geweiNum *U + &U _numArray * -> -> % -> _workStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"393
}
[; ;main.c: 393: }
[e $U 62  ]
"394
[e :U 61 ]
[; ;main.c: 394: else if(chrgFlag)
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 63  ]
[; ;main.c: 395: {
"395
{
[; ;main.c: 396: shiweiNum = numArray[prePwStep/10];
"396
[e = _shiweiNum *U + &U _numArray * -> -> / -> _prePwStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 397: geweiNum = numArray[prePwStep%10];
"397
[e = _geweiNum *U + &U _numArray * -> -> % -> _prePwStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"398
}
[; ;main.c: 398: }
[e $U 64  ]
"399
[e :U 63 ]
[; ;main.c: 399: else
[; ;main.c: 400: {
"400
{
[; ;main.c: 401: shiweiNum = 0;
"401
[e = _shiweiNum -> -> 0 `i `uc ]
[; ;main.c: 402: geweiNum = 0;
"402
[e = _geweiNum -> -> 0 `i `uc ]
"403
}
[e :U 64 ]
[e :U 62 ]
[e :U 60 ]
[e :U 58 ]
[e :U 56 ]
[; ;main.c: 403: }
[; ;main.c: 404: }
"404
[e :UE 53 ]
}
"408
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"409
{
[; ;main.c: 408: void chrgCtr()
[; ;main.c: 409: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 410: if(PORTA & 0x02)
"410
[e $ ! != & -> _PORTA `i -> 2 `i -> 0 `i 66  ]
[; ;main.c: 411: {
"411
{
[; ;main.c: 412: if(chrgFlag == 0)
"412
[e $ ! == -> _chrgFlag `i -> 0 `i 67  ]
[; ;main.c: 413: {
"413
{
[; ;main.c: 414: chrgFlag = 1;
"414
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 415: chrgMaxDuty = 0;
"415
[e = _chrgMaxDuty -> -> 0 `i `uc ]
[; ;main.c: 416: chrgPwmStop();
"416
[e ( _chrgPwmStop ..  ]
"417
}
[e :U 67 ]
[; ;main.c: 417: }
[; ;main.c: 418: jrStep = 0;
"418
[e = _jrStep -> -> 0 `i `uc ]
[; ;main.c: 419: workStep = 0;
"419
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 420: pwmStop();
"420
[e ( _pwmStop ..  ]
[; ;main.c: 421: lowBatFlag = 0;
"421
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 422: if(prePwStep < pwStep)
"422
[e $ ! < -> _prePwStep `i -> _pwStep `i 68  ]
[; ;main.c: 423: {
"423
{
[; ;main.c: 424: if(++count50s > 3000)
"424
[e $ ! > =+ _count50s -> -> 1 `i `ui -> -> 3000 `i `ui 69  ]
[; ;main.c: 425: {
"425
{
[; ;main.c: 426: count50s = 0;
"426
[e = _count50s -> -> 0 `i `ui ]
[; ;main.c: 427: prePwStep++;
"427
[e ++ _prePwStep -> -> 1 `i `uc ]
"428
}
[e :U 69 ]
"429
}
[; ;main.c: 428: }
[; ;main.c: 429: }
[e $U 70  ]
"430
[e :U 68 ]
[; ;main.c: 430: else
[; ;main.c: 431: {
"431
{
[; ;main.c: 432: count50s = 0;
"432
[e = _count50s -> -> 0 `i `ui ]
"433
}
[e :U 70 ]
[; ;main.c: 433: }
[; ;main.c: 434: if(protectFlag)
"434
[e $ ! != -> _protectFlag `i -> -> -> 0 `i `uc `i 71  ]
[; ;main.c: 435: {
"435
{
[; ;main.c: 436: chrgPwmStop();
"436
[e ( _chrgPwmStop ..  ]
[; ;main.c: 437: if(prePwStep < 99 && protectFlag == 1)
"437
[e $ ! && < -> _prePwStep `i -> 99 `i == -> _protectFlag `i -> 1 `i 72  ]
[; ;main.c: 438: {
"438
{
[; ;main.c: 439: if(++reChrgCount > 250)
"439
[e $ ! > -> =+ _reChrgCount -> -> 1 `i `uc `i -> 250 `i 73  ]
[; ;main.c: 440: {
"440
{
[; ;main.c: 441: reChrgCount = 0;
"441
[e = _reChrgCount -> -> 0 `i `uc ]
[; ;main.c: 442: chrgFullFlag = 0;
"442
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 443: protectFlag = 0;
"443
[e = _protectFlag -> -> 0 `i `uc ]
"444
}
[e :U 73 ]
"445
}
[; ;main.c: 444: }
[; ;main.c: 445: }
[e $U 74  ]
"446
[e :U 72 ]
[; ;main.c: 446: else
[; ;main.c: 447: {
"447
{
[; ;main.c: 448: reChrgCount = 0;
"448
[e = _reChrgCount -> -> 0 `i `uc ]
"449
}
[e :U 74 ]
[; ;main.c: 449: }
[; ;main.c: 450: return;
"450
[e $UE 65  ]
"451
}
[e :U 71 ]
[; ;main.c: 451: }
[; ;main.c: 452: if(batADValue < 1118)
"452
[e $ ! < _batADValue -> -> 1118 `i `ui 75  ]
[; ;main.c: 453: {
"453
{
[; ;main.c: 454: chrgMode = 0;
"454
[e = _chrgMode -> -> 0 `i `uc ]
[; ;main.c: 455: chrgMaxAD = 15;
"455
[e = _chrgMaxAD -> -> 15 `i `uc ]
"456
}
[; ;main.c: 456: }
[e $U 76  ]
"457
[e :U 75 ]
[; ;main.c: 457: else if(batADValue < 1530)
[e $ ! < _batADValue -> -> 1530 `i `ui 77  ]
[; ;main.c: 458: {
"458
{
[; ;main.c: 459: chrgMode = 1;
"459
[e = _chrgMode -> -> 1 `i `uc ]
[; ;main.c: 460: chrgMaxAD = 60;
"460
[e = _chrgMaxAD -> -> 60 `i `uc ]
[; ;main.c: 461: lockCount = 0;
"461
[e = _lockCount -> -> 0 `i `uc ]
"462
}
[; ;main.c: 462: }
[e $U 78  ]
"463
[e :U 77 ]
[; ;main.c: 463: else if(count1s == 0)
[e $ ! == -> _count1s `i -> 0 `i 79  ]
[; ;main.c: 464: {
"464
{
[; ;main.c: 465: if(++lockCount > 200)
"465
[e $ ! > -> =+ _lockCount -> -> 1 `i `uc `i -> 200 `i 80  ]
[; ;main.c: 466: {
"466
{
[; ;main.c: 467: lockCount = 0;
"467
[e = _lockCount -> -> 0 `i `uc ]
[; ;main.c: 468: chrgMode = 2;
"468
[e = _chrgMode -> -> 2 `i `uc ]
"469
}
[e :U 80 ]
[; ;main.c: 469: }
[; ;main.c: 471: chrgMaxAD = 60;
"471
[e = _chrgMaxAD -> -> 60 `i `uc ]
"472
}
[e :U 79 ]
"473
[e :U 78 ]
[e :U 76 ]
[; ;main.c: 472: }
[; ;main.c: 473: if(chrgMode == 2 && outADValue < 8)
[e $ ! && == -> _chrgMode `i -> 2 `i < _outADValue -> -> 8 `i `ui 81  ]
[; ;main.c: 474: {
"474
{
[; ;main.c: 475: if(++fullCount >= 200)
"475
[e $ ! >= =+ _fullCount -> -> 1 `i `ui -> -> 200 `i `ui 82  ]
[; ;main.c: 476: {
"476
{
[; ;main.c: 477: fullCount = 0;
"477
[e = _fullCount -> -> 0 `i `ui ]
[; ;main.c: 478: chrgFullFlag = 1;
"478
[e = _chrgFullFlag -> -> 1 `i `uc ]
"479
}
[e :U 82 ]
"480
}
[; ;main.c: 479: }
[; ;main.c: 480: }
[e $U 83  ]
"481
[e :U 81 ]
[; ;main.c: 481: else
[; ;main.c: 482: {
"482
{
[; ;main.c: 483: fullCount = 0;
"483
[e = _fullCount -> -> 0 `i `ui ]
"484
}
[e :U 83 ]
[; ;main.c: 484: }
[; ;main.c: 485: if(chrgFullFlag)
"485
[e $ ! != -> _chrgFullFlag `i -> -> -> 0 `i `uc `i 84  ]
[; ;main.c: 486: {
"486
{
[; ;main.c: 487: chrgPwmStop();
"487
[e ( _chrgPwmStop ..  ]
"488
}
[; ;main.c: 488: }
[e $U 85  ]
"489
[e :U 84 ]
[; ;main.c: 489: else
[; ;main.c: 490: {
"490
{
[; ;main.c: 491: if(batADValue > 1550 || outADValue > (chrgMaxAD + 2))
"491
[e $ ! || > _batADValue -> -> 1550 `i `ui > _outADValue -> + -> _chrgMaxAD `i -> 2 `i `ui 86  ]
[; ;main.c: 492: {
"492
{
[; ;main.c: 493: if(++subTime > chrgWaitTime)
"493
[e $ ! > -> =+ _subTime -> -> 1 `i `uc `i -> _chrgWaitTime `i 87  ]
[; ;main.c: 494: {
"494
{
[; ;main.c: 495: if(chrgMaxDuty > 1)
"495
[e $ ! > -> _chrgMaxDuty `i -> 1 `i 88  ]
[; ;main.c: 496: {
"496
{
[; ;main.c: 497: chrgMaxDuty--;
"497
[e -- _chrgMaxDuty -> -> 1 `i `uc ]
"498
}
[e :U 88 ]
[; ;main.c: 498: }
[; ;main.c: 499: subTime = 0;
"499
[e = _subTime -> -> 0 `i `uc ]
[; ;main.c: 500: chrgWaitTime = 50;
"500
[e = _chrgWaitTime -> -> 50 `i `uc ]
"501
}
[e :U 87 ]
[; ;main.c: 501: }
[; ;main.c: 502: addTime = 0;
"502
[e = _addTime -> -> 0 `i `uc ]
"503
}
[; ;main.c: 503: }
[e $U 89  ]
"504
[e :U 86 ]
[; ;main.c: 504: else if(batADValue < 1550 && outADValue < (chrgMaxAD - 4))
[e $ ! && < _batADValue -> -> 1550 `i `ui < _outADValue -> - -> _chrgMaxAD `i -> 4 `i `ui 90  ]
[; ;main.c: 505: {
"505
{
[; ;main.c: 506: if(++addTime > chrgWaitTime)
"506
[e $ ! > -> =+ _addTime -> -> 1 `i `uc `i -> _chrgWaitTime `i 91  ]
[; ;main.c: 507: {
"507
{
[; ;main.c: 508: addTime = 0;
"508
[e = _addTime -> -> 0 `i `uc ]
[; ;main.c: 509: if(chrgMaxDuty < 75)
"509
[e $ ! < -> _chrgMaxDuty `i -> 75 `i 92  ]
[; ;main.c: 510: {
"510
{
[; ;main.c: 511: chrgMaxDuty++;
"511
[e ++ _chrgMaxDuty -> -> 1 `i `uc ]
"512
}
[e :U 92 ]
"513
}
[e :U 91 ]
[; ;main.c: 512: }
[; ;main.c: 513: }
[; ;main.c: 514: subTime = 0;
"514
[e = _subTime -> -> 0 `i `uc ]
"515
}
[e :U 90 ]
"518
[e :U 89 ]
[; ;main.c: 515: }
[; ;main.c: 518: if(chrgPwmFlag == 0)
[e $ ! == -> _chrgPwmFlag `i -> 0 `i 93  ]
[; ;main.c: 519: {
"519
{
[; ;main.c: 520: chrgPwmInit();
"520
[e ( _chrgPwmInit ..  ]
"521
}
[e :U 93 ]
[; ;main.c: 521: }
[; ;main.c: 522: PWMD23H = 0X00;
"522
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 523: PWMD2L = chrgMaxDuty;
"523
[e = _PWMD2L _chrgMaxDuty ]
"524
}
[e :U 85 ]
"525
}
[; ;main.c: 524: }
[; ;main.c: 525: }
[e $U 94  ]
"526
[e :U 66 ]
[; ;main.c: 526: else
[; ;main.c: 527: {
"527
{
[; ;main.c: 528: startChrgTime = 0;
"528
[e = _startChrgTime -> -> 0 `i `uc ]
[; ;main.c: 529: chrgFlag = 0;
"529
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 530: chrgFullFlag = 0;
"530
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 531: protectFlag = 0;
"531
[e = _protectFlag -> -> 0 `i `uc ]
[; ;main.c: 532: chrgMode = 0;
"532
[e = _chrgMode -> -> 0 `i `uc ]
[; ;main.c: 533: chrgMaxAD = 0;
"533
[e = _chrgMaxAD -> -> 0 `i `uc ]
[; ;main.c: 534: chrgMaxDuty = 0;
"534
[e = _chrgMaxDuty -> -> 0 `i `uc ]
[; ;main.c: 535: lockCount = 0;
"535
[e = _lockCount -> -> 0 `i `uc ]
[; ;main.c: 536: lockLedStep = 0;
"536
[e = _lockLedStep -> -> 0 `i `uc ]
[; ;main.c: 537: chrgWaitTime = 20;
"537
[e = _chrgWaitTime -> -> 20 `i `uc ]
[; ;main.c: 538: chrgPwmStop();
"538
[e ( _chrgPwmStop ..  ]
[; ;main.c: 539: if(prePwStep > 0 && prePwStep > pwStep)
"539
[e $ ! && > -> _prePwStep `i -> 0 `i > -> _prePwStep `i -> _pwStep `i 95  ]
[; ;main.c: 540: {
"540
{
[; ;main.c: 541: if(++count50s > 3000)
"541
[e $ ! > =+ _count50s -> -> 1 `i `ui -> -> 3000 `i `ui 96  ]
[; ;main.c: 542: {
"542
{
[; ;main.c: 543: count50s = 0;
"543
[e = _count50s -> -> 0 `i `ui ]
[; ;main.c: 544: prePwStep--;
"544
[e -- _prePwStep -> -> 1 `i `uc ]
"545
}
[e :U 96 ]
"546
}
[; ;main.c: 545: }
[; ;main.c: 546: }
[e $U 97  ]
"547
[e :U 95 ]
[; ;main.c: 547: else
[; ;main.c: 548: {
"548
{
[; ;main.c: 549: count50s = 0;
"549
[e = _count50s -> -> 0 `i `ui ]
"550
}
[e :U 97 ]
"551
}
[e :U 94 ]
[; ;main.c: 550: }
[; ;main.c: 551: }
[; ;main.c: 552: }
"552
[e :UE 65 ]
}
"556
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"557
{
[; ;main.c: 556: char keyRead(char keyStatus)
[; ;main.c: 557: {
[e :U _keyRead ]
"556
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"557
[f ]
[; ;main.c: 558: if(keyStatus)
"558
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 99  ]
[; ;main.c: 559: {
"559
{
[; ;main.c: 560: keyCount++;
"560
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 561: if(keyCount >= 100)
"561
[e $ ! >= -> _keyCount `i -> 100 `i 100  ]
[; ;main.c: 562: {
"562
{
[; ;main.c: 563: keyCount = 100;
"563
[e = _keyCount -> -> 100 `i `uc ]
[; ;main.c: 564: if(!longPressFlag)
"564
[e $ ! ! != -> _longPressFlag `i -> -> -> 0 `i `uc `i 101  ]
[; ;main.c: 565: {
"565
{
[; ;main.c: 566: longPressFlag = 1;
"566
[e = _longPressFlag -> -> 1 `i `uc ]
[; ;main.c: 567: return 2;
"567
[e ) -> -> 2 `i `uc ]
[e $UE 98  ]
"568
}
[e :U 101 ]
"569
}
[e :U 100 ]
"570
}
[; ;main.c: 568: }
[; ;main.c: 569: }
[; ;main.c: 570: }
[e $U 102  ]
"571
[e :U 99 ]
[; ;main.c: 571: else
[; ;main.c: 572: {
"572
{
[; ;main.c: 573: if(keyCount >= 100)
"573
[e $ ! >= -> _keyCount `i -> 100 `i 103  ]
[; ;main.c: 574: {
"574
{
[; ;main.c: 575: keyCount = 0;
"575
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 576: longPressFlag = 0;
"576
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 577: return 0;
"577
[e ) -> -> 0 `i `uc ]
[e $UE 98  ]
"578
}
[; ;main.c: 578: }
[e $U 104  ]
"579
[e :U 103 ]
[; ;main.c: 579: else if(keyCount >= 6)
[e $ ! >= -> _keyCount `i -> 6 `i 105  ]
[; ;main.c: 580: {
"580
{
[; ;main.c: 581: keyCount = 0;
"581
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 582: return 1;
"582
[e ) -> -> 1 `i `uc ]
[e $UE 98  ]
"583
}
[e :U 105 ]
"584
[e :U 104 ]
[; ;main.c: 583: }
[; ;main.c: 584: keyCount = 0;
[e = _keyCount -> -> 0 `i `uc ]
"585
}
[e :U 102 ]
[; ;main.c: 585: }
[; ;main.c: 586: return 0;
"586
[e ) -> -> 0 `i `uc ]
[e $UE 98  ]
[; ;main.c: 587: }
"587
[e :UE 98 ]
}
"590
[v _keyRead2 `(uc ~T0 @X0 1 ef1`uc ]
"591
{
[; ;main.c: 590: char keyRead2(char keyStatus)
[; ;main.c: 591: {
[e :U _keyRead2 ]
"590
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"591
[f ]
[; ;main.c: 592: if(keyStatus)
"592
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 107  ]
[; ;main.c: 593: {
"593
{
[; ;main.c: 594: keyCount2++;
"594
[e ++ _keyCount2 -> -> 1 `i `uc ]
[; ;main.c: 595: if(keyCount2 >= 100)
"595
[e $ ! >= -> _keyCount2 `i -> 100 `i 108  ]
[; ;main.c: 596: {
"596
{
[; ;main.c: 597: keyCount2 = 100;
"597
[e = _keyCount2 -> -> 100 `i `uc ]
[; ;main.c: 598: if(!longPressFlag2)
"598
[e $ ! ! != -> _longPressFlag2 `i -> -> -> 0 `i `uc `i 109  ]
[; ;main.c: 599: {
"599
{
[; ;main.c: 600: longPressFlag2 = 1;
"600
[e = _longPressFlag2 -> -> 1 `i `uc ]
[; ;main.c: 601: return 2;
"601
[e ) -> -> 2 `i `uc ]
[e $UE 106  ]
"602
}
[e :U 109 ]
"603
}
[e :U 108 ]
"604
}
[; ;main.c: 602: }
[; ;main.c: 603: }
[; ;main.c: 604: }
[e $U 110  ]
"605
[e :U 107 ]
[; ;main.c: 605: else
[; ;main.c: 606: {
"606
{
[; ;main.c: 607: if(keyCount2 >= 100)
"607
[e $ ! >= -> _keyCount2 `i -> 100 `i 111  ]
[; ;main.c: 608: {
"608
{
[; ;main.c: 609: keyCount2 = 0;
"609
[e = _keyCount2 -> -> 0 `i `uc ]
[; ;main.c: 610: longPressFlag2 = 0;
"610
[e = _longPressFlag2 -> -> 0 `i `uc ]
[; ;main.c: 611: return 0;
"611
[e ) -> -> 0 `i `uc ]
[e $UE 106  ]
"612
}
[; ;main.c: 612: }
[e $U 112  ]
"613
[e :U 111 ]
[; ;main.c: 613: else if(keyCount2 >= 5)
[e $ ! >= -> _keyCount2 `i -> 5 `i 113  ]
[; ;main.c: 614: {
"614
{
[; ;main.c: 615: keyCount2 = 0;
"615
[e = _keyCount2 -> -> 0 `i `uc ]
[; ;main.c: 616: return 1;
"616
[e ) -> -> 1 `i `uc ]
[e $UE 106  ]
"617
}
[e :U 113 ]
"618
[e :U 112 ]
[; ;main.c: 617: }
[; ;main.c: 618: keyCount2 = 0;
[e = _keyCount2 -> -> 0 `i `uc ]
"619
}
[e :U 110 ]
[; ;main.c: 619: }
[; ;main.c: 620: return 0;
"620
[e ) -> -> 0 `i `uc ]
[e $UE 106  ]
[; ;main.c: 621: }
"621
[e :UE 106 ]
}
"624
[v _keyCtr `(v ~T0 @X0 1 ef ]
"625
{
[; ;main.c: 624: void keyCtr()
[; ;main.c: 625: {
[e :U _keyCtr ]
[f ]
"626
[v _kclick `uc ~T0 @X0 1 a ]
[; ;main.c: 626: char kclick = keyRead(0x04 & (~PORTB));
[e = _kclick ( _keyRead (1 -> & -> 4 `i ~ -> _PORTB `i `uc ]
[; ;main.c: 627: if(kclick == 1)
"627
[e $ ! == -> _kclick `i -> 1 `i 115  ]
[; ;main.c: 628: {
"628
{
[; ;main.c: 629: if(workStep > 0)
"629
[e $ ! > -> _workStep `i -> 0 `i 116  ]
[; ;main.c: 630: {
"630
{
[; ;main.c: 631: if(++workStep > 32)
"631
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 32 `i 117  ]
[; ;main.c: 632: {
"632
{
[; ;main.c: 633: workStep = 1;
"633
[e = _workStep -> -> 1 `i `uc ]
"634
}
[e :U 117 ]
"635
}
[; ;main.c: 634: }
[; ;main.c: 635: }
[e $U 118  ]
"636
[e :U 116 ]
[; ;main.c: 636: else if(showBatTime > 0)
[e $ ! > -> _showBatTime `i -> 0 `i 119  ]
[; ;main.c: 637: {
"637
{
[; ;main.c: 638: showBatTime = 0;
"638
[e = _showBatTime -> -> 0 `i `uc ]
"639
}
[; ;main.c: 639: }
[e $U 120  ]
"640
[e :U 119 ]
[; ;main.c: 640: else
[; ;main.c: 641: {
"641
{
[; ;main.c: 642: showBatTime = 200;
"642
[e = _showBatTime -> -> 200 `i `uc ]
[; ;main.c: 643: count1s = 0;
"643
[e = _count1s -> -> 0 `i `uc ]
"644
}
[e :U 120 ]
[e :U 118 ]
"645
}
[; ;main.c: 644: }
[; ;main.c: 645: }
[e $U 121  ]
"646
[e :U 115 ]
[; ;main.c: 646: else if(kclick == 2)
[e $ ! == -> _kclick `i -> 2 `i 122  ]
[; ;main.c: 647: {
"647
{
[; ;main.c: 648: if(workStep > 0)
"648
[e $ ! > -> _workStep `i -> 0 `i 123  ]
[; ;main.c: 649: {
"649
{
[; ;main.c: 650: workStep = 0;
"650
[e = _workStep -> -> 0 `i `uc ]
"651
}
[; ;main.c: 651: }
[e $U 124  ]
"652
[e :U 123 ]
[; ;main.c: 652: else
[; ;main.c: 653: {
"653
{
[; ;main.c: 654: workStep = 1;
"654
[e = _workStep -> -> 1 `i `uc ]
[; ;main.c: 655: startTime = 30;
"655
[e = _startTime -> -> 30 `i `uc ]
[; ;main.c: 656: showBatTime = 0;
"656
[e = _showBatTime -> -> 0 `i `uc ]
[; ;main.c: 657: overWorkTime = 0;
"657
[e = _overWorkTime -> -> 0 `i `ui ]
"658
}
[e :U 124 ]
"659
}
[e :U 122 ]
"660
[e :U 121 ]
[; ;main.c: 658: }
[; ;main.c: 659: }
[; ;main.c: 660: }
[e :UE 114 ]
}
"662
[v _workCtr `(v ~T0 @X0 1 ef ]
"663
{
[; ;main.c: 662: void workCtr()
[; ;main.c: 663: {
[e :U _workCtr ]
[f ]
[; ;main.c: 665: if(startTime > 0)
"665
[e $ ! > -> _startTime `i -> 0 `i 126  ]
[; ;main.c: 666: {
"666
{
[; ;main.c: 667: startTime--;
"667
[e -- _startTime -> -> 1 `i `uc ]
"668
}
[e :U 126 ]
[; ;main.c: 668: }
[; ;main.c: 669: if(workStep > 0)
"669
[e $ ! > -> _workStep `i -> 0 `i 127  ]
[; ;main.c: 670: {
"670
{
[; ;main.c: 671: if(motorPwmFlag == 0)
"671
[e $ ! == -> _motorPwmFlag `i -> 0 `i 128  ]
[; ;main.c: 672: {
"672
{
[; ;main.c: 673: pwmInit();
"673
[e ( _pwmInit ..  ]
"675
}
[e :U 128 ]
[; ;main.c: 675: }
[; ;main.c: 676: maxDuty = 60 + (workStep/2);
"676
[e = _maxDuty -> + -> 60 `i / -> _workStep `i -> 2 `i `uc ]
[; ;main.c: 677: if(overCount >= 5)
"677
[e $ ! >= -> _overCount `i -> 5 `i 129  ]
[; ;main.c: 678: {
"678
{
[; ;main.c: 679: if(++count5s > 600)
"679
[e $ ! > =+ _count5s -> -> 1 `i `ui -> -> 600 `i `ui 130  ]
[; ;main.c: 680: {
"680
{
[; ;main.c: 681: count5s = 0;
"681
[e = _count5s -> -> 0 `i `ui ]
[; ;main.c: 682: overWorkTime = 0;
"682
[e = _overWorkTime -> -> 0 `i `ui ]
[; ;main.c: 683: preWorkStep = workStep;
"683
[e = _preWorkStep _workStep ]
[; ;main.c: 684: prejrStep = jrStep;
"684
[e = _prejrStep _jrStep ]
[; ;main.c: 685: workStep = 0;
"685
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 686: jrStep = 0;
"686
[e = _jrStep -> -> 0 `i `uc ]
"687
}
[e :U 130 ]
"688
}
[; ;main.c: 687: }
[; ;main.c: 688: }
[e $U 131  ]
"689
[e :U 129 ]
[; ;main.c: 689: else
[; ;main.c: 690: {
"690
{
[; ;main.c: 691: count5s = 0;
"691
[e = _count5s -> -> 0 `i `ui ]
"692
}
[e :U 131 ]
[; ;main.c: 692: }
[; ;main.c: 693: if(count1s == 0 && ++count900s >= 900)
"693
[e $ ! && == -> _count1s `i -> 0 `i >= =+ _count900s -> -> 1 `i `ui -> -> 900 `i `ui 132  ]
[; ;main.c: 694: {
"694
{
[; ;main.c: 695: workStep = 0;
"695
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 696: jrStep = 0;
"696
[e = _jrStep -> -> 0 `i `uc ]
"697
}
[e :U 132 ]
"698
}
[; ;main.c: 697: }
[; ;main.c: 698: }
[e $U 133  ]
"699
[e :U 127 ]
[; ;main.c: 699: else
[; ;main.c: 700: {
"700
{
[; ;main.c: 701: pwmStop();
"701
[e ( _pwmStop ..  ]
[; ;main.c: 702: count900s = 0;
"702
[e = _count900s -> -> 0 `i `ui ]
"703
}
[e :U 133 ]
[; ;main.c: 703: }
[; ;main.c: 705: }
"705
[e :UE 125 ]
}
"707
[v _checkOutA `(v ~T0 @X0 1 ef ]
"708
{
[; ;main.c: 707: void checkOutA()
[; ;main.c: 708: {
[e :U _checkOutA ]
[f ]
[; ;main.c: 709: test_adc = ADC_Sample(0, 5);
"709
[e = _test_adc ( _ADC_Sample (2 , -> -> 0 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 710: if (0xA5 == test_adc)
"710
[e $ ! == -> 165 `i -> _test_adc `i 135  ]
[; ;main.c: 711: {
"711
{
[; ;main.c: 712: if(chrgFlag && adresult > 210)
"712
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _adresult -> -> 210 `i `ui 136  ]
[; ;main.c: 713: {
"713
{
[; ;main.c: 714: if(++overChrgTime > 10)
"714
[e $ ! > -> =+ _overChrgTime -> -> 1 `i `uc `i -> 10 `i 137  ]
[; ;main.c: 715: {
"715
{
[; ;main.c: 716: overChrgTime = 0;
"716
[e = _overChrgTime -> -> 0 `i `uc ]
[; ;main.c: 717: protectFlag = 2;
"717
[e = _protectFlag -> -> 2 `i `uc ]
"718
}
[e :U 137 ]
"720
}
[; ;main.c: 718: }
[; ;main.c: 720: }
[e $U 138  ]
"721
[e :U 136 ]
[; ;main.c: 721: else
[; ;main.c: 722: {
"722
{
[; ;main.c: 723: overChrgTime = 0;
"723
[e = _overChrgTime -> -> 0 `i `uc ]
"724
}
[e :U 138 ]
[; ;main.c: 724: }
[; ;main.c: 725: outADValue = adresult;
"725
[e = _outADValue _adresult ]
[; ;main.c: 727: if(workStep && (outADValue > 600))
"727
[e $ ! && != -> _workStep `i -> -> -> 0 `i `uc `i > _outADValue -> -> 600 `i `ui 139  ]
[; ;main.c: 728: {
"728
{
[; ;main.c: 729: if(++workOverOutTime > 50)
"729
[e $ ! > -> =+ _workOverOutTime -> -> 1 `i `uc `i -> 50 `i 140  ]
[; ;main.c: 730: {
"730
{
[; ;main.c: 731: workOverOutTime = 0;
"731
[e = _workOverOutTime -> -> 0 `i `uc ]
[; ;main.c: 732: workStep = 0;
"732
[e = _workStep -> -> 0 `i `uc ]
"733
}
[e :U 140 ]
"734
}
[; ;main.c: 733: }
[; ;main.c: 734: }
[e $U 141  ]
"735
[e :U 139 ]
[; ;main.c: 735: else
[; ;main.c: 736: {
"736
{
[; ;main.c: 737: workOverOutTime = 0;
"737
[e = _workOverOutTime -> -> 0 `i `uc ]
"738
}
[e :U 141 ]
"739
[v _maxtempV `uc ~T0 @X0 1 a ]
[; ;main.c: 738: }
[; ;main.c: 739: unsigned char maxtempV = 130 + (workStep * 2);
[e = _maxtempV -> + -> 130 `i * -> _workStep `i -> 2 `i `uc ]
[; ;main.c: 740: if(outADValue > maxtempV)
"740
[e $ ! > _outADValue -> _maxtempV `ui 142  ]
[; ;main.c: 741: {
"741
{
[; ;main.c: 742: if(++overCount > 5)
"742
[e $ ! > -> =+ _overCount -> -> 1 `i `uc `i -> 5 `i 143  ]
[; ;main.c: 743: {
"743
{
[; ;main.c: 744: overCount = 5;
"744
[e = _overCount -> -> 5 `i `uc ]
"745
}
[e :U 143 ]
"746
}
[; ;main.c: 745: }
[; ;main.c: 746: }
[e $U 144  ]
"747
[e :U 142 ]
[; ;main.c: 747: else
[; ;main.c: 748: {
"748
{
[; ;main.c: 750: if(overCount > 0)
"750
[e $ ! > -> _overCount `i -> 0 `i 145  ]
[; ;main.c: 751: {
"751
{
[; ;main.c: 752: overCount--;
"752
[e -- _overCount -> -> 1 `i `uc ]
"753
}
[e :U 145 ]
"754
[v _maxAout `uc ~T0 @X0 1 a ]
[; ;main.c: 753: }
[; ;main.c: 754: unsigned char maxAout = 25;
[e = _maxAout -> -> 25 `i `uc ]
[; ;main.c: 755: if(pwStep > 30)
"755
[e $ ! > -> _pwStep `i -> 30 `i 146  ]
[; ;main.c: 756: maxAout = 27;
"756
[e = _maxAout -> -> 27 `i `uc ]
[e :U 146 ]
[; ;main.c: 757: if(workStep < 5)
"757
[e $ ! < -> _workStep `i -> 5 `i 147  ]
[; ;main.c: 758: {
"758
{
[; ;main.c: 759: maxAout = maxAout - 1;
"759
[e = _maxAout -> - -> _maxAout `i -> 1 `i `uc ]
"760
}
[; ;main.c: 760: }
[e $U 148  ]
"761
[e :U 147 ]
[; ;main.c: 761: else if(workStep < 9)
[e $ ! < -> _workStep `i -> 9 `i 149  ]
[; ;main.c: 762: {
"762
{
[; ;main.c: 763: maxAout = maxAout + 3;
"763
[e = _maxAout -> + -> _maxAout `i -> 3 `i `uc ]
"764
}
[; ;main.c: 764: }
[e $U 150  ]
"765
[e :U 149 ]
[; ;main.c: 765: else if(workStep < 13)
[e $ ! < -> _workStep `i -> 13 `i 151  ]
[; ;main.c: 766: {
"766
{
[; ;main.c: 767: maxAout = maxAout + 4;
"767
[e = _maxAout -> + -> _maxAout `i -> 4 `i `uc ]
"768
}
[; ;main.c: 768: }
[e $U 152  ]
"769
[e :U 151 ]
[; ;main.c: 769: else if(workStep < 17)
[e $ ! < -> _workStep `i -> 17 `i 153  ]
[; ;main.c: 770: {
"770
{
[; ;main.c: 771: maxAout = maxAout + 5;
"771
[e = _maxAout -> + -> _maxAout `i -> 5 `i `uc ]
"772
}
[; ;main.c: 772: }
[e $U 154  ]
"773
[e :U 153 ]
[; ;main.c: 773: else if(workStep < 21)
[e $ ! < -> _workStep `i -> 21 `i 155  ]
[; ;main.c: 774: {
"774
{
[; ;main.c: 775: maxAout = maxAout + 7;
"775
[e = _maxAout -> + -> _maxAout `i -> 7 `i `uc ]
"776
}
[; ;main.c: 776: }
[e $U 156  ]
"777
[e :U 155 ]
[; ;main.c: 777: else if(workStep < 25)
[e $ ! < -> _workStep `i -> 25 `i 157  ]
[; ;main.c: 778: {
"778
{
[; ;main.c: 779: maxAout = maxAout + 9;
"779
[e = _maxAout -> + -> _maxAout `i -> 9 `i `uc ]
"780
}
[; ;main.c: 780: }
[e $U 158  ]
"781
[e :U 157 ]
[; ;main.c: 781: else if(workStep < 29)
[e $ ! < -> _workStep `i -> 29 `i 159  ]
[; ;main.c: 782: {
"782
{
[; ;main.c: 783: maxAout = maxAout + 10;
"783
[e = _maxAout -> + -> _maxAout `i -> 10 `i `uc ]
"784
}
[; ;main.c: 784: }
[e $U 160  ]
"785
[e :U 159 ]
[; ;main.c: 785: else if(workStep < 33)
[e $ ! < -> _workStep `i -> 33 `i 161  ]
[; ;main.c: 786: {
"786
{
[; ;main.c: 787: maxAout = maxAout + 11;
"787
[e = _maxAout -> + -> _maxAout `i -> 11 `i `uc ]
"788
}
[e :U 161 ]
"789
[e :U 160 ]
[e :U 158 ]
[e :U 156 ]
[e :U 154 ]
[e :U 152 ]
[e :U 150 ]
[e :U 148 ]
[; ;main.c: 788: }
[; ;main.c: 789: if(outADValue > maxAout)
[e $ ! > _outADValue -> _maxAout `ui 162  ]
[; ;main.c: 790: {
"790
{
[; ;main.c: 791: if(startTime == 0)
"791
[e $ ! == -> _startTime `i -> 0 `i 163  ]
[; ;main.c: 792: {
"792
{
[; ;main.c: 793: tempDuty = 167 + workStep;
"793
[e = _tempDuty -> + -> 167 `i -> _workStep `i `uc ]
"794
}
[; ;main.c: 794: }
[e $U 164  ]
"795
[e :U 163 ]
[; ;main.c: 795: else
[; ;main.c: 796: {
"796
{
[; ;main.c: 797: tempDuty = maxDuty;
"797
[e = _tempDuty _maxDuty ]
"798
}
[e :U 164 ]
"799
}
[; ;main.c: 798: }
[; ;main.c: 799: }
[e $U 165  ]
"800
[e :U 162 ]
[; ;main.c: 800: else
[; ;main.c: 801: {
"801
{
[; ;main.c: 802: tempDuty = maxDuty;
"802
[e = _tempDuty _maxDuty ]
"803
}
[e :U 165 ]
"805
}
[e :U 144 ]
[; ;main.c: 803: }
[; ;main.c: 805: }
[; ;main.c: 806: PWMD23H = 0X00;
"806
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 807: PWMD3L = tempDuty;
"807
[e = _PWMD3L _tempDuty ]
"808
}
[; ;main.c: 808: }
[e $U 166  ]
"809
[e :U 135 ]
[; ;main.c: 809: else
[; ;main.c: 810: {
"810
{
[; ;main.c: 811: ADCON0 = 0;
"811
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 812: ADCON1 = 0;
"812
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 813: _delay((unsigned long)((100)*(16000000/4000000.0)));
"813
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"814
}
[e :U 166 ]
[; ;main.c: 814: }
[; ;main.c: 815: }
"815
[e :UE 134 ]
}
"817
[v _checkBatAD `(v ~T0 @X0 1 ef ]
"818
{
[; ;main.c: 817: void checkBatAD()
[; ;main.c: 818: {
[e :U _checkBatAD ]
[f ]
[; ;main.c: 819: test_adc = ADC_Sample(2, 5);
"819
[e = _test_adc ( _ADC_Sample (2 , -> -> 2 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 820: if (0xA5 == test_adc)
"820
[e $ ! == -> 165 `i -> _test_adc `i 168  ]
[; ;main.c: 821: {
"821
{
[; ;main.c: 822: batADValue = adresult;
"822
[e = _batADValue _adresult ]
[; ;main.c: 823: if(batADValue < 1117)
"823
[e $ ! < _batADValue -> -> 1117 `i `ui 169  ]
[; ;main.c: 824: {
"824
{
[; ;main.c: 825: pwStep = 0;
"825
[e = _pwStep -> -> 0 `i `uc ]
[; ;main.c: 826: if(++count8s > 800)
"826
[e $ ! > =+ _count8s -> -> 1 `i `ui -> -> 800 `i `ui 170  ]
[; ;main.c: 827: {
"827
{
[; ;main.c: 828: count8s = 0;
"828
[e = _count8s -> -> 0 `i `ui ]
[; ;main.c: 829: lowBatFlag = 1;
"829
[e = _lowBatFlag -> -> 1 `i `uc ]
[; ;main.c: 830: prePwStep = 0;
"830
[e = _prePwStep -> -> 0 `i `uc ]
[; ;main.c: 831: workStep = 0;
"831
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 832: jrStep = 0;
"832
[e = _jrStep -> -> 0 `i `uc ]
"833
}
[e :U 170 ]
"834
}
[; ;main.c: 833: }
[; ;main.c: 834: }
[e $U 171  ]
"835
[e :U 169 ]
[; ;main.c: 835: else
[; ;main.c: 836: {
"836
{
[; ;main.c: 837: count8s = 0;
"837
[e = _count8s -> -> 0 `i `ui ]
[; ;main.c: 838: if(batADValue >= 1340)
"838
[e $ ! >= _batADValue -> -> 1340 `i `ui 172  ]
[; ;main.c: 839: {
"839
{
[; ;main.c: 840: pwStep = ((batADValue - 1340) /2) + 13;
"840
[e = _pwStep -> + / - _batADValue -> -> 1340 `i `ui -> -> 2 `i `ui -> -> 13 `i `ui `uc ]
"841
}
[; ;main.c: 841: }
[e $U 173  ]
"842
[e :U 172 ]
[; ;main.c: 842: else
[; ;main.c: 843: {
"843
{
[; ;main.c: 844: pwStep = (batADValue - 1117) / 16;
"844
[e = _pwStep -> / - _batADValue -> -> 1117 `i `ui -> -> 16 `i `ui `uc ]
"845
}
[e :U 173 ]
[; ;main.c: 845: }
[; ;main.c: 846: if(pwStep > 99)
"846
[e $ ! > -> _pwStep `i -> 99 `i 174  ]
[; ;main.c: 847: {
"847
{
[; ;main.c: 848: pwStep = 99;
"848
[e = _pwStep -> -> 99 `i `uc ]
"849
}
[e :U 174 ]
"850
}
[e :U 171 ]
[; ;main.c: 849: }
[; ;main.c: 850: }
[; ;main.c: 851: if(chrgFlag && batADValue > 1861)
"851
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _batADValue -> -> 1861 `i `ui 175  ]
[; ;main.c: 852: {
"852
{
[; ;main.c: 853: protectFlag = 1;
"853
[e = _protectFlag -> -> 1 `i `uc ]
"854
}
[e :U 175 ]
"855
}
[; ;main.c: 854: }
[; ;main.c: 855: }
[e $U 176  ]
"856
[e :U 168 ]
[; ;main.c: 856: else
[; ;main.c: 857: {
"857
{
[; ;main.c: 858: ADCON0 = 0;
"858
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 859: ADCON1 = 0;
"859
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 860: _delay((unsigned long)((100)*(16000000/4000000.0)));
"860
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"861
}
[e :U 176 ]
[; ;main.c: 861: }
[; ;main.c: 863: test_adc = ADC_Sample(3, 5);
"863
[e = _test_adc ( _ADC_Sample (2 , -> -> 3 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 864: if (0xA5 == test_adc)
"864
[e $ ! == -> 165 `i -> _test_adc `i 177  ]
[; ;main.c: 865: {
"865
{
[; ;main.c: 866: if(chrgFlag && adresult > 100)
"866
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _adresult -> -> 100 `i `ui 178  ]
[; ;main.c: 867: {
"867
{
[; ;main.c: 869: if(adresult > 810 || (batADValue - adresult) > 810)
"869
[e $ ! || > _adresult -> -> 810 `i `ui > - _batADValue _adresult -> -> 810 `i `ui 179  ]
[; ;main.c: 870: {
"870
{
[; ;main.c: 872: if(++countHalfFull > 250)
"872
[e $ ! > -> =+ _countHalfFull -> -> 1 `i `uc `i -> 250 `i 180  ]
[; ;main.c: 873: {
"873
{
[; ;main.c: 874: countHalfFull = 0;
"874
[e = _countHalfFull -> -> 0 `i `uc ]
[; ;main.c: 875: protectFlag = 2;
"875
[e = _protectFlag -> -> 2 `i `uc ]
"876
}
[e :U 180 ]
"877
}
[; ;main.c: 876: }
[; ;main.c: 877: }
[e $U 181  ]
"878
[e :U 179 ]
[; ;main.c: 878: else
[; ;main.c: 879: {
"879
{
[; ;main.c: 880: countHalfFull = 0;
"880
[e = _countHalfFull -> -> 0 `i `uc ]
"881
}
[e :U 181 ]
"882
}
[e :U 178 ]
"883
}
[; ;main.c: 881: }
[; ;main.c: 882: }
[; ;main.c: 883: }
[e $U 182  ]
"884
[e :U 177 ]
[; ;main.c: 884: else
[; ;main.c: 885: {
"885
{
[; ;main.c: 886: ADCON0 = 0;
"886
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 887: ADCON1 = 0;
"887
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 888: _delay((unsigned long)((100)*(16000000/4000000.0)));
"888
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"889
}
[e :U 182 ]
[; ;main.c: 889: }
[; ;main.c: 891: }
"891
[e :UE 167 ]
}
"902
[v _Init_System `(v ~T0 @X0 1 ef ]
"903
{
[; ;main.c: 902: void Init_System()
[; ;main.c: 903: {
[e :U _Init_System ]
[f ]
[; ;main.c: 904: asm("nop");
"904
[; <" nop ;# ">
[; ;main.c: 905: asm("clrwdt");
"905
[; <" clrwdt ;# ">
[; ;main.c: 906: OPTION_REG = 0;
"906
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 907: asm("clrwdt");
"907
[; <" clrwdt ;# ">
[; ;main.c: 908: OSCCON = 0X72;
"908
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 910: WPUA = 0B00000000;
"910
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 911: WPDA = 0x00;
"911
[e = _WPDA -> -> 0 `i `uc ]
[; ;main.c: 912: WPUB = 0x04;
"912
[e = _WPUB -> -> 4 `i `uc ]
[; ;main.c: 914: TRISA = 0x0F;
"914
[e = _TRISA -> -> 15 `i `uc ]
[; ;main.c: 915: TRISB = 0x04;
"915
[e = _TRISB -> -> 4 `i `uc ]
[; ;main.c: 917: PORTA = 0X00;
"917
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 918: PORTB = 0X00;
"918
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 922: PR2 = 249;
"922
[e = _PR2 -> -> 249 `i `uc ]
[; ;main.c: 923: TMR2IF = 0;
"923
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 924: TMR2IE = 1;
"924
[e = _TMR2IE -> -> 1 `i `b ]
[; ;main.c: 926: T2CON = 0B00000100;
"926
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 927: INTCON = 0XC0;
"927
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 928: }
"928
[e :UE 183 ]
}
"939
[v _AD_Init `(v ~T0 @X0 1 ef ]
"940
{
[; ;main.c: 939: void AD_Init()
[; ;main.c: 940: {
[e :U _AD_Init ]
[f ]
[; ;main.c: 972: ADCON0 = 0X41;
"972
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 989: ADCON1 = 0;
"989
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 990: ANSEL0 = 0X0D;
"990
[e = _ANSEL0 -> -> 13 `i `uc ]
[; ;main.c: 991: ANSEL1 = 0x00;
"991
[e = _ANSEL1 -> -> 0 `i `uc ]
[; ;main.c: 992: }
"992
[e :UE 184 ]
}
"995
[v _chrgPwmInit `(v ~T0 @X0 1 ef ]
"996
{
[; ;main.c: 995: void chrgPwmInit()
[; ;main.c: 996: {
[e :U _chrgPwmInit ]
[f ]
[; ;main.c: 997: chrgPwmFlag = 1;
"997
[e = _chrgPwmFlag -> -> 1 `i `uc ]
[; ;main.c: 998: PWMCON1 = 0B00000000;
"998
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 1000: PWMTH = 0X00;
"1000
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 1001: PWMTL = 100;
"1001
[e = _PWMTL -> -> 100 `i `uc ]
[; ;main.c: 1005: PWMD23H = 0;
"1005
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 1006: PWMD2L = 10;
"1006
[e = _PWMD2L -> -> 10 `i `uc ]
[; ;main.c: 1007: PWM23DT = 0X00;
"1007
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 1009: PWMCON0 = 0X04;
"1009
[e = _PWMCON0 -> -> 4 `i `uc ]
[; ;main.c: 1010: PWMCON2 =0X00;
"1010
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 1011: }
"1011
[e :UE 185 ]
}
"1013
[v _chrgPwmStop `(v ~T0 @X0 1 ef ]
"1014
{
[; ;main.c: 1013: void chrgPwmStop()
[; ;main.c: 1014: {
[e :U _chrgPwmStop ]
[f ]
[; ;main.c: 1015: if(chrgPwmFlag)
"1015
[e $ ! != -> _chrgPwmFlag `i -> -> -> 0 `i `uc `i 187  ]
[; ;main.c: 1016: {
"1016
{
[; ;main.c: 1017: chrgPwmFlag = 0;
"1017
[e = _chrgPwmFlag -> -> 0 `i `uc ]
[; ;main.c: 1018: PWMCON0 &= 0xFB;
"1018
[e =& _PWMCON0 -> -> 251 `i `uc ]
[; ;main.c: 1019: RB3 = 0;
"1019
[e = _RB3 -> -> 0 `i `b ]
"1020
}
[e :U 187 ]
[; ;main.c: 1020: }
[; ;main.c: 1021: }
"1021
[e :UE 186 ]
}
"1023
[v _pwmInit `(v ~T0 @X0 1 ef ]
"1024
{
[; ;main.c: 1023: void pwmInit()
[; ;main.c: 1024: {
[e :U _pwmInit ]
[f ]
[; ;main.c: 1025: motorPwmFlag = 1;
"1025
[e = _motorPwmFlag -> -> 1 `i `uc ]
[; ;main.c: 1026: PWMCON1 = 0B00000000;
"1026
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 1027: PWMTH = 0X00;
"1027
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 1028: PWMTL = 200;
"1028
[e = _PWMTL -> -> 200 `i `uc ]
[; ;main.c: 1031: PWMD23H = 0;
"1031
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 1032: PWMD3L = 80;
"1032
[e = _PWMD3L -> -> 80 `i `uc ]
[; ;main.c: 1033: PWM23DT = 0X00;
"1033
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 1035: PWMCON0 = 0X48;
"1035
[e = _PWMCON0 -> -> 72 `i `uc ]
[; ;main.c: 1036: PWMCON2 =0X00;
"1036
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 1037: }
"1037
[e :UE 188 ]
}
"1039
[v _pwmStop `(v ~T0 @X0 1 ef ]
"1040
{
[; ;main.c: 1039: void pwmStop()
[; ;main.c: 1040: {
[e :U _pwmStop ]
[f ]
[; ;main.c: 1041: if(motorPwmFlag)
"1041
[e $ ! != -> _motorPwmFlag `i -> -> -> 0 `i `uc `i 190  ]
[; ;main.c: 1042: {
"1042
{
[; ;main.c: 1043: motorPwmFlag = 0;
"1043
[e = _motorPwmFlag -> -> 0 `i `uc ]
[; ;main.c: 1044: PWMCON0 &= 0XF7;
"1044
[e =& _PWMCON0 -> -> 247 `i `uc ]
[; ;main.c: 1045: RB4 = 0;
"1045
[e = _RB4 -> -> 0 `i `b ]
"1046
}
[e :U 190 ]
[; ;main.c: 1046: }
[; ;main.c: 1047: }
"1047
[e :UE 189 ]
}
"1057
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"1058
{
[; ;main.c: 1057: void Sleep_Mode()
[; ;main.c: 1058: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 1059: INTCON = 0;
"1059
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 1061: OPTION_REG = 0;
"1061
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 1063: WPUA = 0B00000000;
"1063
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 1064: TRISA = 0x0F;
"1064
[e = _TRISA -> -> 15 `i `uc ]
[; ;main.c: 1065: TRISB = 0x04;
"1065
[e = _TRISB -> -> 4 `i `uc ]
[; ;main.c: 1067: PORTA = 0X00;
"1067
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 1068: PORTB = 0X00;
"1068
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 1069: WPUB = 0x04;
"1069
[e = _WPUB -> -> 4 `i `uc ]
[; ;main.c: 1071: ADCON0 = 0;
"1071
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 1072: ADCON1 = 0;
"1072
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 1074: PWMCON0 = 0;
"1074
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 1076: OSCCON = 0X70;
"1076
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 1078: IOCA = 0x02;
"1078
[e = _IOCA -> -> 2 `i `uc ]
[; ;main.c: 1079: IOCB = 0x04;
"1079
[e = _IOCB -> -> 4 `i `uc ]
[; ;main.c: 1081: RAIE = 1;
"1081
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 1082: PEIE = 1;
"1082
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 1083: RBIE = 1;
"1083
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 1084: GIE = 0;
"1084
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 1086: PIE1 &= 0X08;
"1086
[e =& _PIE1 -> -> 8 `i `uc ]
[; ;main.c: 1087: PIR1 = 0;
"1087
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 1088: INTCON &= 0XC8;
"1088
[e =& _INTCON -> -> 200 `i `uc ]
[; ;main.c: 1090: PORTA;
"1090
[e _PORTA ]
[; ;main.c: 1091: RAIF = 0;
"1091
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 1092: PORTB;
"1092
[e _PORTB ]
[; ;main.c: 1093: RBIF = 0;
"1093
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 1094: asm("clrwdt");
"1094
[; <" clrwdt ;# ">
[; ;main.c: 1096: asm("sleep");
"1096
[; <" sleep ;# ">
[; ;main.c: 1098: asm("nop");
"1098
[; <" nop ;# ">
[; ;main.c: 1099: asm("clrwdt");
"1099
[; <" clrwdt ;# ">
[; ;main.c: 1100: asm("nop");
"1100
[; <" nop ;# ">
[; ;main.c: 1101: asm("nop");
"1101
[; <" nop ;# ">
[; ;main.c: 1102: asm("nop");
"1102
[; <" nop ;# ">
[; ;main.c: 1103: asm("nop");
"1103
[; <" nop ;# ">
[; ;main.c: 1104: asm("nop");
"1104
[; <" nop ;# ">
[; ;main.c: 1105: if(RAIF) RAIF = 0;
"1105
[e $ ! _RAIF 192  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 192 ]
[; ;main.c: 1106: if(RBIF) RBIF = 0;
"1106
[e $ ! _RBIF 193  ]
[e = _RBIF -> -> 0 `i `b ]
[e :U 193 ]
[; ;main.c: 1107: if(TMR2IF) TMR2IF = 0;
"1107
[e $ ! _TMR2IF 194  ]
[e = _TMR2IF -> -> 0 `i `b ]
[e :U 194 ]
[; ;main.c: 1108: IOCA = 0B00000000;
"1108
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 1109: IOCB = 0B00000000;
"1109
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 1110: Init_System();
"1110
[e ( _Init_System ..  ]
[; ;main.c: 1111: AD_Init();
"1111
[e ( _AD_Init ..  ]
[; ;main.c: 1112: }
"1112
[e :UE 191 ]
}
"1134
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"1135
{
[; ;main.c: 1134: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 1135: {
[e :U _ADC_Sample ]
"1134
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"1135
[f ]
"1136
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 1136: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"1137
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 1137: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"1138
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 1138: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 1140: if ((!LDO_EN) && (adldo & 0x04) )
"1140
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 196  ]
[; ;main.c: 1141: {
"1141
{
[; ;main.c: 1143: ADCON1 = adldo;
"1143
[e = _ADCON1 _adldo ]
[; ;main.c: 1144: _delay((unsigned long)((100)*(16000000/4000000.0)));
"1144
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"1145
}
[; ;main.c: 1145: }
[e $U 197  ]
"1146
[e :U 196 ]
[; ;main.c: 1146: else
[; ;main.c: 1147: ADCON1 = adldo;
"1147
[e = _ADCON1 _adldo ]
[e :U 197 ]
[; ;main.c: 1149: if(adch & 0x10)
"1149
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 198  ]
[; ;main.c: 1150: {
"1150
{
[; ;main.c: 1151: CHS4 = 1;
"1151
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 1152: adch &= 0x0f;
"1152
[e =& _adch -> -> 15 `i `uc ]
"1153
}
[e :U 198 ]
"1154
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 1153: }
[; ;main.c: 1154: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 1155: for (i = 0; i < 10; i++)
"1155
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 199  ]
[e $U 200  ]
"1156
[e :U 199 ]
[; ;main.c: 1156: {
{
[; ;main.c: 1157: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"1157
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 1158: asm("nop");
"1158
[; <" nop ;# ">
[; ;main.c: 1159: asm("nop");
"1159
[; <" nop ;# ">
[; ;main.c: 1160: asm("nop");
"1160
[; <" nop ;# ">
[; ;main.c: 1161: asm("nop");
"1161
[; <" nop ;# ">
[; ;main.c: 1162: GODONE = 1;
"1162
[e = _GODONE -> -> 1 `i `b ]
"1164
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 1164: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 1165: while (GODONE)
"1165
[e $U 202  ]
[e :U 203 ]
[; ;main.c: 1166: {
"1166
{
[; ;main.c: 1167: _delay((unsigned long)((2)*(16000000/4000000.0)));
"1167
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;main.c: 1169: if (0 == (--j))
"1169
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 205  ]
[; ;main.c: 1170: return 0;
"1170
[e ) -> -> 0 `i `uc ]
[e $UE 195  ]
[e :U 205 ]
"1171
}
[e :U 202 ]
"1165
[e $ _GODONE 203  ]
[e :U 204 ]
[; ;main.c: 1171: }
[; ;main.c: 1173: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"1173
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 1175: if (0 == admax)
"1175
[e $ ! == -> -> 0 `i `ui _admax 206  ]
[; ;main.c: 1176: {
"1176
{
[; ;main.c: 1177: admax = ad_temp;
"1177
[e = _admax _ad_temp ]
[; ;main.c: 1178: admin = ad_temp;
"1178
[e = _admin _ad_temp ]
"1179
}
[; ;main.c: 1179: }
[e $U 207  ]
"1180
[e :U 206 ]
[; ;main.c: 1180: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 208  ]
[; ;main.c: 1181: admax = ad_temp;
"1181
[e = _admax _ad_temp ]
[e $U 209  ]
"1182
[e :U 208 ]
[; ;main.c: 1182: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 210  ]
[; ;main.c: 1183: admin = ad_temp;
"1183
[e = _admin _ad_temp ]
[e :U 210 ]
"1185
[e :U 209 ]
[e :U 207 ]
[; ;main.c: 1185: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"1186
}
"1155
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 199  ]
[e :U 200 ]
"1186
}
[; ;main.c: 1186: }
[; ;main.c: 1187: adsum -= admax;
"1187
[e =- _adsum -> _admax `ul ]
[; ;main.c: 1188: if (adsum >= admin)
"1188
[e $ ! >= _adsum -> _admin `ul 211  ]
[; ;main.c: 1189: adsum -= admin;
"1189
[e =- _adsum -> _admin `ul ]
[e $U 212  ]
"1190
[e :U 211 ]
[; ;main.c: 1190: else
[; ;main.c: 1191: adsum = 0;
"1191
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 212 ]
[; ;main.c: 1193: adresult = adsum >> 3;
"1193
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 1195: adsum = 0;
"1195
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 1196: admin = 0;
"1196
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 1197: admax = 0;
"1197
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 1198: return 0xA5;
"1198
[e ) -> -> 165 `i `uc ]
[e $UE 195  ]
[; ;main.c: 1200: }
"1200
[e :UE 195 ]
}
