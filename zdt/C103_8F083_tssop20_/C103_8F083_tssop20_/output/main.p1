Version 3.2 HI-TECH Software Intermediate Code
"70 C:\mcuproject\scm\zdt\C103_8F083_tssop20_\C103_8F083_tssop20_\main.c
[v _updateLed `(v ~T0 @X0 0 ef ]
[v F758 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF758 ~T0 @X0 0 e ]
[p i __delay ]
"89 C:\mcuproject\scm\zdt\C103_8F083_tssop20_\C103_8F083_tssop20_\number.h
[v _refreshLed `(v ~T0 @X0 0 ef ]
[p mainexit ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc8f083.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;sc8f083.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;sc8f083.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;sc8f083.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;sc8f083.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;sc8f083.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;sc8f083.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;sc8f083.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;sc8f083.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;sc8f083.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;sc8f083.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;sc8f083.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;sc8f083.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;sc8f083.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;sc8f083.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;sc8f083.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMP1CON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;sc8f083.h: 20: volatile unsigned char CMP1CON0 @ 0x0F;
"21
[v _CMP1CON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;sc8f083.h: 21: volatile unsigned char CMP1CON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;sc8f083.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;sc8f083.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;sc8f083.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;sc8f083.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;sc8f083.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;sc8f083.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;sc8f083.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;sc8f083.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;sc8f083.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;sc8f083.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;sc8f083.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;sc8f083.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;sc8f083.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;sc8f083.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;sc8f083.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;sc8f083.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;sc8f083.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;sc8f083.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;sc8f083.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;sc8f083.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;sc8f083.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;sc8f083.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _EECON1 `Vuc ~T0 @X0 1 e@141 ]
[; ;sc8f083.h: 44: volatile unsigned char EECON1 @ 0x8D;
"45
[v _EECON2 `Vuc ~T0 @X0 1 e@142 ]
[; ;sc8f083.h: 45: volatile unsigned char EECON2 @ 0x8E;
"46
[v _EEDAT `Vuc ~T0 @X0 1 e@143 ]
[; ;sc8f083.h: 46: volatile unsigned char EEDAT @ 0x8F;
"47
[v _EEDATH `Vuc ~T0 @X0 1 e@144 ]
[; ;sc8f083.h: 47: volatile unsigned char EEDATH @ 0x90;
"48
[v _EEADR `Vuc ~T0 @X0 1 e@145 ]
[; ;sc8f083.h: 48: volatile unsigned char EEADR @ 0x91;
"49
[v _EEADRH `Vuc ~T0 @X0 1 e@146 ]
[; ;sc8f083.h: 49: volatile unsigned char EEADRH @ 0x92;
"50
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;sc8f083.h: 50: volatile unsigned char ANSEL0 @ 0x93;
"51
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;sc8f083.h: 51: volatile unsigned char ANSEL1 @ 0x94;
"52
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;sc8f083.h: 52: volatile unsigned char ADCON0 @ 0x95;
"53
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;sc8f083.h: 53: volatile unsigned char ADCON1 @ 0x96;
"54
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;sc8f083.h: 54: volatile unsigned char ADRESL @ 0x98;
"55
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;sc8f083.h: 55: volatile unsigned char ADRESH @ 0x99;
"56
[v _CMP2CON0 `Vuc ~T0 @X0 1 e@154 ]
[; ;sc8f083.h: 56: volatile unsigned char CMP2CON0 @ 0x9A;
"57
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;sc8f083.h: 57: volatile unsigned char PWMD2L @ 0x9B;
"58
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;sc8f083.h: 58: volatile unsigned char PWMD3L @ 0x9C;
"59
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;sc8f083.h: 59: volatile unsigned char PWM23DT @ 0x9D;
"60
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;sc8f083.h: 60: volatile unsigned char PWMD23H @ 0x9E;
"61
[v _CMP2CON1 `Vuc ~T0 @X0 1 e@159 ]
[; ;sc8f083.h: 61: volatile unsigned char CMP2CON1 @ 0x9F;
"62
[v _TRISC `Vuc ~T0 @X0 1 e@261 ]
[; ;sc8f083.h: 62: volatile unsigned char TRISC @ 0x105;
"63
[v _PORTC `Vuc ~T0 @X0 1 e@262 ]
[; ;sc8f083.h: 63: volatile unsigned char PORTC @ 0x106;
"64
[v _WPUC `Vuc ~T0 @X0 1 e@264 ]
[; ;sc8f083.h: 64: volatile unsigned char WPUC @ 0x108;
"65
[v _ANSEL2 `Vuc ~T0 @X0 1 e@265 ]
[; ;sc8f083.h: 65: volatile unsigned char ANSEL2 @ 0x109;
"66
[v _TMR1L `Vuc ~T0 @X0 1 e@268 ]
[; ;sc8f083.h: 66: volatile unsigned char TMR1L @ 0x10C;
"67
[v _TMR1H `Vuc ~T0 @X0 1 e@269 ]
[; ;sc8f083.h: 67: volatile unsigned char TMR1H @ 0x10D;
"68
[v _T1CON `Vuc ~T0 @X0 1 e@270 ]
[; ;sc8f083.h: 68: volatile unsigned char T1CON @ 0x10E;
"69
[v _PIR2 `Vuc ~T0 @X0 1 e@271 ]
[; ;sc8f083.h: 69: volatile unsigned char PIR2 @ 0x10F;
"70
[v _PIE2 `Vuc ~T0 @X0 1 e@272 ]
[; ;sc8f083.h: 70: volatile unsigned char PIE2 @ 0x110;
"71
[v _KEYCON0 `Vuc ~T0 @X0 1 e@273 ]
[; ;sc8f083.h: 71: volatile unsigned char KEYCON0 @ 0x111;
"72
[v _KEYCON1 `Vuc ~T0 @X0 1 e@274 ]
[; ;sc8f083.h: 72: volatile unsigned char KEYCON1 @ 0x112;
"73
[v _KEYCON2 `Vuc ~T0 @X0 1 e@275 ]
[; ;sc8f083.h: 73: volatile unsigned char KEYCON2 @ 0x113;
"74
[v _KEYDATAL `Vuc ~T0 @X0 1 e@278 ]
[; ;sc8f083.h: 74: volatile unsigned char KEYDATAL @ 0x116;
"75
[v _KEYDATAH `Vuc ~T0 @X0 1 e@279 ]
[; ;sc8f083.h: 75: volatile unsigned char KEYDATAH @ 0x117;
"76
[v _TXSTA `Vuc ~T0 @X0 1 e@280 ]
[; ;sc8f083.h: 76: volatile unsigned char TXSTA @ 0x118;
"77
[v _RCSTA `Vuc ~T0 @X0 1 e@281 ]
[; ;sc8f083.h: 77: volatile unsigned char RCSTA @ 0x119;
"78
[v _SPBRG `Vuc ~T0 @X0 1 e@282 ]
[; ;sc8f083.h: 78: volatile unsigned char SPBRG @ 0x11A;
"79
[v _TXREG `Vuc ~T0 @X0 1 e@283 ]
[; ;sc8f083.h: 79: volatile unsigned char TXREG @ 0x11B;
"80
[v _RCREG `Vuc ~T0 @X0 1 e@284 ]
[; ;sc8f083.h: 80: volatile unsigned char RCREG @ 0x11C;
"82
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;sc8f083.h: 82: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"83
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;sc8f083.h: 83: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"84
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;sc8f083.h: 84: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"85
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;sc8f083.h: 85: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"86
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;sc8f083.h: 86: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"87
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;sc8f083.h: 87: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"88
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;sc8f083.h: 88: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"89
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;sc8f083.h: 89: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"92
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;sc8f083.h: 92: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"93
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;sc8f083.h: 93: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"94
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;sc8f083.h: 94: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"95
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;sc8f083.h: 95: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"96
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;sc8f083.h: 96: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"97
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;sc8f083.h: 97: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"98
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;sc8f083.h: 98: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"99
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;sc8f083.h: 99: volatile bit C @ ((unsigned)&STATUS*8)+0;
"102
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;sc8f083.h: 102: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"103
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;sc8f083.h: 103: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"104
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;sc8f083.h: 104: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"105
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;sc8f083.h: 105: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"106
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;sc8f083.h: 106: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"107
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;sc8f083.h: 107: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"108
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;sc8f083.h: 108: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"109
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;sc8f083.h: 109: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"112
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;sc8f083.h: 112: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"113
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;sc8f083.h: 113: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"114
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;sc8f083.h: 114: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"115
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;sc8f083.h: 115: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"116
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;sc8f083.h: 116: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"117
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;sc8f083.h: 117: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"118
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;sc8f083.h: 118: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"119
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;sc8f083.h: 119: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"122
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;sc8f083.h: 122: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"123
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;sc8f083.h: 123: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"124
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;sc8f083.h: 124: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"125
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;sc8f083.h: 125: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"126
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;sc8f083.h: 126: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"127
[v _WPDB2 `Vb ~T0 @X0 1 e@58 ]
[; ;sc8f083.h: 127: volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
"128
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;sc8f083.h: 128: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"129
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;sc8f083.h: 129: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"132
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;sc8f083.h: 132: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"133
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;sc8f083.h: 133: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"134
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;sc8f083.h: 134: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"135
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;sc8f083.h: 135: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"136
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;sc8f083.h: 136: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"137
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;sc8f083.h: 137: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"138
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;sc8f083.h: 138: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"139
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;sc8f083.h: 139: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"142
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;sc8f083.h: 142: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"143
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;sc8f083.h: 143: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"144
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;sc8f083.h: 144: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"145
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;sc8f083.h: 145: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"146
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;sc8f083.h: 146: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"147
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;sc8f083.h: 147: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"148
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;sc8f083.h: 148: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"149
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;sc8f083.h: 149: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"152
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;sc8f083.h: 152: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"153
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;sc8f083.h: 153: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"154
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;sc8f083.h: 154: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"155
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;sc8f083.h: 155: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"156
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;sc8f083.h: 156: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"157
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;sc8f083.h: 157: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"158
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;sc8f083.h: 158: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"159
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;sc8f083.h: 159: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"162
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;sc8f083.h: 162: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"163
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;sc8f083.h: 163: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"164
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;sc8f083.h: 164: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"165
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;sc8f083.h: 165: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"166
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;sc8f083.h: 166: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"167
[v _ODCONB2 `Vb ~T0 @X0 1 e@98 ]
[; ;sc8f083.h: 167: volatile bit ODCONB2 @ ((unsigned)&ODCONB*8)+2;
"168
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;sc8f083.h: 168: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"169
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;sc8f083.h: 169: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"172
[v _RCIF `Vb ~T0 @X0 1 e@111 ]
[; ;sc8f083.h: 172: volatile bit RCIF @ ((unsigned)&PIR1*8)+7;
"173
[v _TXIF `Vb ~T0 @X0 1 e@110 ]
[; ;sc8f083.h: 173: volatile bit TXIF @ ((unsigned)&PIR1*8)+6;
"174
[v _CMP1IF `Vb ~T0 @X0 1 e@109 ]
[; ;sc8f083.h: 174: volatile bit CMP1IF @ ((unsigned)&PIR1*8)+5;
"175
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;sc8f083.h: 175: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"176
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;sc8f083.h: 176: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"177
[v _TMR1IF `Vb ~T0 @X0 1 e@106 ]
[; ;sc8f083.h: 177: volatile bit TMR1IF @ ((unsigned)&PIR1*8)+2;
"178
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;sc8f083.h: 178: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"179
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;sc8f083.h: 179: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"182
[v _RCIE `Vb ~T0 @X0 1 e@119 ]
[; ;sc8f083.h: 182: volatile bit RCIE @ ((unsigned)&PIE1*8)+7;
"183
[v _TXIE `Vb ~T0 @X0 1 e@118 ]
[; ;sc8f083.h: 183: volatile bit TXIE @ ((unsigned)&PIE1*8)+6;
"184
[v _CMP1IE `Vb ~T0 @X0 1 e@117 ]
[; ;sc8f083.h: 184: volatile bit CMP1IE @ ((unsigned)&PIE1*8)+5;
"185
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;sc8f083.h: 185: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"186
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;sc8f083.h: 186: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"187
[v _TMR1IE `Vb ~T0 @X0 1 e@114 ]
[; ;sc8f083.h: 187: volatile bit TMR1IE @ ((unsigned)&PIE1*8)+2;
"188
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;sc8f083.h: 188: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"189
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;sc8f083.h: 189: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"192
[v _CMP1EN `Vb ~T0 @X0 1 e@127 ]
[; ;sc8f083.h: 192: volatile bit CMP1EN @ ((unsigned)&CMP1CON0*8)+7;
"193
[v _CMP1PS `Vb ~T0 @X0 1 e@126 ]
[; ;sc8f083.h: 193: volatile bit CMP1PS @ ((unsigned)&CMP1CON0*8)+6;
"194
[v _CMP1NS2 `Vb ~T0 @X0 1 e@125 ]
[; ;sc8f083.h: 194: volatile bit CMP1NS2 @ ((unsigned)&CMP1CON0*8)+5;
"195
[v _CMP1NS1 `Vb ~T0 @X0 1 e@124 ]
[; ;sc8f083.h: 195: volatile bit CMP1NS1 @ ((unsigned)&CMP1CON0*8)+4;
"196
[v _CMP1NS0 `Vb ~T0 @X0 1 e@123 ]
[; ;sc8f083.h: 196: volatile bit CMP1NS0 @ ((unsigned)&CMP1CON0*8)+3;
"197
[v _CMP1NV `Vb ~T0 @X0 1 e@122 ]
[; ;sc8f083.h: 197: volatile bit CMP1NV @ ((unsigned)&CMP1CON0*8)+2;
"198
[v _CMP1OUT `Vb ~T0 @X0 1 e@121 ]
[; ;sc8f083.h: 198: volatile bit CMP1OUT @ ((unsigned)&CMP1CON0*8)+1;
"199
[v _CMP1OEN `Vb ~T0 @X0 1 e@120 ]
[; ;sc8f083.h: 199: volatile bit CMP1OEN @ ((unsigned)&CMP1CON0*8)+0;
"202
[v _CMP1IM `Vb ~T0 @X0 1 e@135 ]
[; ;sc8f083.h: 202: volatile bit CMP1IM @ ((unsigned)&CMP1CON1*8)+7;
"203
[v _AN1_EN `Vb ~T0 @X0 1 e@134 ]
[; ;sc8f083.h: 203: volatile bit AN1_EN @ ((unsigned)&CMP1CON1*8)+6;
"204
[v _RBIAS1_H `Vb ~T0 @X0 1 e@133 ]
[; ;sc8f083.h: 204: volatile bit RBIAS1_H @ ((unsigned)&CMP1CON1*8)+5;
"205
[v _RBIAS1_L `Vb ~T0 @X0 1 e@132 ]
[; ;sc8f083.h: 205: volatile bit RBIAS1_L @ ((unsigned)&CMP1CON1*8)+4;
"206
[v _LVDS13 `Vb ~T0 @X0 1 e@131 ]
[; ;sc8f083.h: 206: volatile bit LVDS13 @ ((unsigned)&CMP1CON1*8)+3;
"207
[v _LVDS12 `Vb ~T0 @X0 1 e@130 ]
[; ;sc8f083.h: 207: volatile bit LVDS12 @ ((unsigned)&CMP1CON1*8)+2;
"208
[v _LVDS11 `Vb ~T0 @X0 1 e@129 ]
[; ;sc8f083.h: 208: volatile bit LVDS11 @ ((unsigned)&CMP1CON1*8)+1;
"209
[v _LVDS10 `Vb ~T0 @X0 1 e@128 ]
[; ;sc8f083.h: 209: volatile bit LVDS10 @ ((unsigned)&CMP1CON1*8)+0;
"212
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;sc8f083.h: 212: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"213
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;sc8f083.h: 213: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"214
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;sc8f083.h: 214: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"215
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;sc8f083.h: 215: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"216
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;sc8f083.h: 216: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"217
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;sc8f083.h: 217: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"218
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;sc8f083.h: 218: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"219
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;sc8f083.h: 219: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"222
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;sc8f083.h: 222: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"223
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;sc8f083.h: 223: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"224
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;sc8f083.h: 224: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"225
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;sc8f083.h: 225: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"228
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;sc8f083.h: 228: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"229
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;sc8f083.h: 229: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"230
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;sc8f083.h: 230: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"231
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;sc8f083.h: 231: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"232
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;sc8f083.h: 232: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"233
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;sc8f083.h: 233: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"234
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;sc8f083.h: 234: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"235
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;sc8f083.h: 235: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"238
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;sc8f083.h: 238: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"239
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;sc8f083.h: 239: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"240
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;sc8f083.h: 240: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"241
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;sc8f083.h: 241: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"242
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;sc8f083.h: 242: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"243
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;sc8f083.h: 243: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"246
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;sc8f083.h: 246: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"247
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;sc8f083.h: 247: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"248
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;sc8f083.h: 248: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"249
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;sc8f083.h: 249: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"250
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;sc8f083.h: 250: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"251
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;sc8f083.h: 251: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"254
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;sc8f083.h: 254: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"255
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;sc8f083.h: 255: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"256
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;sc8f083.h: 256: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"257
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;sc8f083.h: 257: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"258
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;sc8f083.h: 258: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"261
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;sc8f083.h: 261: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"262
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;sc8f083.h: 262: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"263
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;sc8f083.h: 263: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"264
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;sc8f083.h: 264: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"267
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;sc8f083.h: 267: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"268
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;sc8f083.h: 268: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"269
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;sc8f083.h: 269: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"270
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;sc8f083.h: 270: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"271
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;sc8f083.h: 271: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"272
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;sc8f083.h: 272: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"275
[v _TRISA7 `Vb ~T0 @X0 1 e@1071 ]
[; ;sc8f083.h: 275: volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
"276
[v _TRISA6 `Vb ~T0 @X0 1 e@1070 ]
[; ;sc8f083.h: 276: volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
"277
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;sc8f083.h: 277: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"278
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;sc8f083.h: 278: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"279
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;sc8f083.h: 279: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"280
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;sc8f083.h: 280: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"281
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;sc8f083.h: 281: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"282
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;sc8f083.h: 282: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"285
[v _RA7 `Vb ~T0 @X0 1 e@1079 ]
[; ;sc8f083.h: 285: volatile bit RA7 @ ((unsigned)&PORTA*8)+7;
"286
[v _RA6 `Vb ~T0 @X0 1 e@1078 ]
[; ;sc8f083.h: 286: volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
"287
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;sc8f083.h: 287: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"288
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;sc8f083.h: 288: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"289
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;sc8f083.h: 289: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"290
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;sc8f083.h: 290: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"291
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;sc8f083.h: 291: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"292
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;sc8f083.h: 292: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"295
[v _WPDA7 `Vb ~T0 @X0 1 e@1087 ]
[; ;sc8f083.h: 295: volatile bit WPDA7 @ ((unsigned)&WPDA*8)+7;
"296
[v _WPDA6 `Vb ~T0 @X0 1 e@1086 ]
[; ;sc8f083.h: 296: volatile bit WPDA6 @ ((unsigned)&WPDA*8)+6;
"297
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;sc8f083.h: 297: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"298
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;sc8f083.h: 298: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"299
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;sc8f083.h: 299: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"300
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;sc8f083.h: 300: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"301
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;sc8f083.h: 301: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"302
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;sc8f083.h: 302: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"305
[v _WPUA7 `Vb ~T0 @X0 1 e@1095 ]
[; ;sc8f083.h: 305: volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;
"306
[v _WPUA6 `Vb ~T0 @X0 1 e@1094 ]
[; ;sc8f083.h: 306: volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
"307
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;sc8f083.h: 307: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"308
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;sc8f083.h: 308: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"309
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;sc8f083.h: 309: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"310
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;sc8f083.h: 310: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"311
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;sc8f083.h: 311: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"312
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;sc8f083.h: 312: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"315
[v _IOCA7 `Vb ~T0 @X0 1 e@1103 ]
[; ;sc8f083.h: 315: volatile bit IOCA7 @ ((unsigned)&IOCA*8)+7;
"316
[v _IOCA6 `Vb ~T0 @X0 1 e@1102 ]
[; ;sc8f083.h: 316: volatile bit IOCA6 @ ((unsigned)&IOCA*8)+6;
"317
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;sc8f083.h: 317: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"318
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;sc8f083.h: 318: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"319
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;sc8f083.h: 319: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"320
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;sc8f083.h: 320: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"321
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;sc8f083.h: 321: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"322
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;sc8f083.h: 322: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"325
[v _ODCONA7 `Vb ~T0 @X0 1 e@1127 ]
[; ;sc8f083.h: 325: volatile bit ODCONA7 @ ((unsigned)&ODCONA*8)+7;
"326
[v _ODCONA6 `Vb ~T0 @X0 1 e@1126 ]
[; ;sc8f083.h: 326: volatile bit ODCONA6 @ ((unsigned)&ODCONA*8)+6;
"327
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;sc8f083.h: 327: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"328
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;sc8f083.h: 328: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"329
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;sc8f083.h: 329: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"330
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;sc8f083.h: 330: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"331
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;sc8f083.h: 331: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"332
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;sc8f083.h: 332: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"335
[v _EEPGD `Vb ~T0 @X0 1 e@1135 ]
[; ;sc8f083.h: 335: volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
"336
[v _WRERR `Vb ~T0 @X0 1 e@1131 ]
[; ;sc8f083.h: 336: volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
"337
[v _WREN `Vb ~T0 @X0 1 e@1130 ]
[; ;sc8f083.h: 337: volatile bit WREN @ ((unsigned)&EECON1*8)+2;
"338
[v _WR `Vb ~T0 @X0 1 e@1129 ]
[; ;sc8f083.h: 338: volatile bit WR @ ((unsigned)&EECON1*8)+1;
"339
[v _RD `Vb ~T0 @X0 1 e@1128 ]
[; ;sc8f083.h: 339: volatile bit RD @ ((unsigned)&EECON1*8)+0;
"342
[v _EEDAT7 `Vb ~T0 @X0 1 e@1151 ]
[; ;sc8f083.h: 342: volatile bit EEDAT7 @ ((unsigned)&EEDAT*8)+7;
"343
[v _EEDAT6 `Vb ~T0 @X0 1 e@1150 ]
[; ;sc8f083.h: 343: volatile bit EEDAT6 @ ((unsigned)&EEDAT*8)+6;
"344
[v _EEDAT5 `Vb ~T0 @X0 1 e@1149 ]
[; ;sc8f083.h: 344: volatile bit EEDAT5 @ ((unsigned)&EEDAT*8)+5;
"345
[v _EEDAT4 `Vb ~T0 @X0 1 e@1148 ]
[; ;sc8f083.h: 345: volatile bit EEDAT4 @ ((unsigned)&EEDAT*8)+4;
"346
[v _EEDAT3 `Vb ~T0 @X0 1 e@1147 ]
[; ;sc8f083.h: 346: volatile bit EEDAT3 @ ((unsigned)&EEDAT*8)+3;
"347
[v _EEDAT2 `Vb ~T0 @X0 1 e@1146 ]
[; ;sc8f083.h: 347: volatile bit EEDAT2 @ ((unsigned)&EEDAT*8)+2;
"348
[v _EEDAT1 `Vb ~T0 @X0 1 e@1145 ]
[; ;sc8f083.h: 348: volatile bit EEDAT1 @ ((unsigned)&EEDAT*8)+1;
"349
[v _EEDAT0 `Vb ~T0 @X0 1 e@1144 ]
[; ;sc8f083.h: 349: volatile bit EEDAT0 @ ((unsigned)&EEDAT*8)+0;
"352
[v _EEDATH7 `Vb ~T0 @X0 1 e@1159 ]
[; ;sc8f083.h: 352: volatile bit EEDATH7 @ ((unsigned)&EEDATH*8)+7;
"353
[v _EEDATH6 `Vb ~T0 @X0 1 e@1158 ]
[; ;sc8f083.h: 353: volatile bit EEDATH6 @ ((unsigned)&EEDATH*8)+6;
"354
[v _EEDATH5 `Vb ~T0 @X0 1 e@1157 ]
[; ;sc8f083.h: 354: volatile bit EEDATH5 @ ((unsigned)&EEDATH*8)+5;
"355
[v _EEDATH4 `Vb ~T0 @X0 1 e@1156 ]
[; ;sc8f083.h: 355: volatile bit EEDATH4 @ ((unsigned)&EEDATH*8)+4;
"356
[v _EEDATH3 `Vb ~T0 @X0 1 e@1155 ]
[; ;sc8f083.h: 356: volatile bit EEDATH3 @ ((unsigned)&EEDATH*8)+3;
"357
[v _EEDATH2 `Vb ~T0 @X0 1 e@1154 ]
[; ;sc8f083.h: 357: volatile bit EEDATH2 @ ((unsigned)&EEDATH*8)+2;
"358
[v _EEDATH1 `Vb ~T0 @X0 1 e@1153 ]
[; ;sc8f083.h: 358: volatile bit EEDATH1 @ ((unsigned)&EEDATH*8)+1;
"359
[v _EEDATH0 `Vb ~T0 @X0 1 e@1152 ]
[; ;sc8f083.h: 359: volatile bit EEDATH0 @ ((unsigned)&EEDATH*8)+0;
"362
[v _EEADR7 `Vb ~T0 @X0 1 e@1167 ]
[; ;sc8f083.h: 362: volatile bit EEADR7 @ ((unsigned)&EEADR*8)+7;
"363
[v _EEADR6 `Vb ~T0 @X0 1 e@1166 ]
[; ;sc8f083.h: 363: volatile bit EEADR6 @ ((unsigned)&EEADR*8)+6;
"364
[v _EEADR5 `Vb ~T0 @X0 1 e@1165 ]
[; ;sc8f083.h: 364: volatile bit EEADR5 @ ((unsigned)&EEADR*8)+5;
"365
[v _EEADR4 `Vb ~T0 @X0 1 e@1164 ]
[; ;sc8f083.h: 365: volatile bit EEADR4 @ ((unsigned)&EEADR*8)+4;
"366
[v _EEADR3 `Vb ~T0 @X0 1 e@1163 ]
[; ;sc8f083.h: 366: volatile bit EEADR3 @ ((unsigned)&EEADR*8)+3;
"367
[v _EEADR2 `Vb ~T0 @X0 1 e@1162 ]
[; ;sc8f083.h: 367: volatile bit EEADR2 @ ((unsigned)&EEADR*8)+2;
"368
[v _EEADR1 `Vb ~T0 @X0 1 e@1161 ]
[; ;sc8f083.h: 368: volatile bit EEADR1 @ ((unsigned)&EEADR*8)+1;
"369
[v _EEADR0 `Vb ~T0 @X0 1 e@1160 ]
[; ;sc8f083.h: 369: volatile bit EEADR0 @ ((unsigned)&EEADR*8)+0;
"372
[v _EEADRH3 `Vb ~T0 @X0 1 e@1171 ]
[; ;sc8f083.h: 372: volatile bit EEADRH3 @ ((unsigned)&EEADRH*8)+3;
"373
[v _EEADRH2 `Vb ~T0 @X0 1 e@1170 ]
[; ;sc8f083.h: 373: volatile bit EEADRH2 @ ((unsigned)&EEADRH*8)+2;
"374
[v _EEADRH1 `Vb ~T0 @X0 1 e@1169 ]
[; ;sc8f083.h: 374: volatile bit EEADRH1 @ ((unsigned)&EEADRH*8)+1;
"375
[v _EEADRH0 `Vb ~T0 @X0 1 e@1168 ]
[; ;sc8f083.h: 375: volatile bit EEADRH0 @ ((unsigned)&EEADRH*8)+0;
"378
[v _ANS7 `Vb ~T0 @X0 1 e@1183 ]
[; ;sc8f083.h: 378: volatile bit ANS7 @ ((unsigned)&ANSEL0*8)+7;
"379
[v _ANS6 `Vb ~T0 @X0 1 e@1182 ]
[; ;sc8f083.h: 379: volatile bit ANS6 @ ((unsigned)&ANSEL0*8)+6;
"380
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;sc8f083.h: 380: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"381
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;sc8f083.h: 381: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"382
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;sc8f083.h: 382: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"383
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;sc8f083.h: 383: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"384
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;sc8f083.h: 384: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"385
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;sc8f083.h: 385: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"388
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;sc8f083.h: 388: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"389
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;sc8f083.h: 389: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"390
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;sc8f083.h: 390: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"391
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;sc8f083.h: 391: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"392
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;sc8f083.h: 392: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"393
[v _ANS10 `Vb ~T0 @X0 1 e@1186 ]
[; ;sc8f083.h: 393: volatile bit ANS10 @ ((unsigned)&ANSEL1*8)+2;
"394
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;sc8f083.h: 394: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"395
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;sc8f083.h: 395: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"398
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;sc8f083.h: 398: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"399
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;sc8f083.h: 399: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"400
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;sc8f083.h: 400: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"401
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;sc8f083.h: 401: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"402
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;sc8f083.h: 402: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"403
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;sc8f083.h: 403: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"404
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;sc8f083.h: 404: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"405
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;sc8f083.h: 405: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"408
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;sc8f083.h: 408: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"409
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;sc8f083.h: 409: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"410
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;sc8f083.h: 410: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"411
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;sc8f083.h: 411: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"412
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;sc8f083.h: 412: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"415
[v _CMP2EN `Vb ~T0 @X0 1 e@1239 ]
[; ;sc8f083.h: 415: volatile bit CMP2EN @ ((unsigned)&CMP2CON0*8)+7;
"416
[v _CMP2PS `Vb ~T0 @X0 1 e@1238 ]
[; ;sc8f083.h: 416: volatile bit CMP2PS @ ((unsigned)&CMP2CON0*8)+6;
"417
[v _CMP2NS2 `Vb ~T0 @X0 1 e@1237 ]
[; ;sc8f083.h: 417: volatile bit CMP2NS2 @ ((unsigned)&CMP2CON0*8)+5;
"418
[v _CMP2NS1 `Vb ~T0 @X0 1 e@1236 ]
[; ;sc8f083.h: 418: volatile bit CMP2NS1 @ ((unsigned)&CMP2CON0*8)+4;
"419
[v _CMP2NS0 `Vb ~T0 @X0 1 e@1235 ]
[; ;sc8f083.h: 419: volatile bit CMP2NS0 @ ((unsigned)&CMP2CON0*8)+3;
"420
[v _CMP2NV `Vb ~T0 @X0 1 e@1234 ]
[; ;sc8f083.h: 420: volatile bit CMP2NV @ ((unsigned)&CMP2CON0*8)+2;
"421
[v _CMP2OUT `Vb ~T0 @X0 1 e@1233 ]
[; ;sc8f083.h: 421: volatile bit CMP2OUT @ ((unsigned)&CMP2CON0*8)+1;
"422
[v _CMP2OEN `Vb ~T0 @X0 1 e@1232 ]
[; ;sc8f083.h: 422: volatile bit CMP2OEN @ ((unsigned)&CMP2CON0*8)+0;
"425
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;sc8f083.h: 425: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"426
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;sc8f083.h: 426: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"427
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;sc8f083.h: 427: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"428
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;sc8f083.h: 428: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
"431
[v _CMP2IM `Vb ~T0 @X0 1 e@1279 ]
[; ;sc8f083.h: 431: volatile bit CMP2IM @ ((unsigned)&CMP2CON1*8)+7;
"432
[v _AN2_EN `Vb ~T0 @X0 1 e@1278 ]
[; ;sc8f083.h: 432: volatile bit AN2_EN @ ((unsigned)&CMP2CON1*8)+6;
"433
[v _RBIAS2_H `Vb ~T0 @X0 1 e@1277 ]
[; ;sc8f083.h: 433: volatile bit RBIAS2_H @ ((unsigned)&CMP2CON1*8)+5;
"434
[v _RBIAS2_L `Vb ~T0 @X0 1 e@1276 ]
[; ;sc8f083.h: 434: volatile bit RBIAS2_L @ ((unsigned)&CMP2CON1*8)+4;
"435
[v _LVDS23 `Vb ~T0 @X0 1 e@1275 ]
[; ;sc8f083.h: 435: volatile bit LVDS23 @ ((unsigned)&CMP2CON1*8)+3;
"436
[v _LVDS22 `Vb ~T0 @X0 1 e@1274 ]
[; ;sc8f083.h: 436: volatile bit LVDS22 @ ((unsigned)&CMP2CON1*8)+2;
"437
[v _LVDS21 `Vb ~T0 @X0 1 e@1273 ]
[; ;sc8f083.h: 437: volatile bit LVDS21 @ ((unsigned)&CMP2CON1*8)+1;
"438
[v _LVDS20 `Vb ~T0 @X0 1 e@1272 ]
[; ;sc8f083.h: 438: volatile bit LVDS20 @ ((unsigned)&CMP2CON1*8)+0;
"441
[v _TRISC1 `Vb ~T0 @X0 1 e@2089 ]
[; ;sc8f083.h: 441: volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
"442
[v _TRISC0 `Vb ~T0 @X0 1 e@2088 ]
[; ;sc8f083.h: 442: volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
"445
[v _RC1 `Vb ~T0 @X0 1 e@2097 ]
[; ;sc8f083.h: 445: volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
"446
[v _RC0 `Vb ~T0 @X0 1 e@2096 ]
[; ;sc8f083.h: 446: volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
"449
[v _WPUC1 `Vb ~T0 @X0 1 e@2113 ]
[; ;sc8f083.h: 449: volatile bit WPUC1 @ ((unsigned)&WPUC*8)+1;
"450
[v _WPUC0 `Vb ~T0 @X0 1 e@2112 ]
[; ;sc8f083.h: 450: volatile bit WPUC0 @ ((unsigned)&WPUC*8)+0;
"453
[v _ANS17 `Vb ~T0 @X0 1 e@2121 ]
[; ;sc8f083.h: 453: volatile bit ANS17 @ ((unsigned)&ANSEL2*8)+1;
"454
[v _ANS16 `Vb ~T0 @X0 1 e@2120 ]
[; ;sc8f083.h: 454: volatile bit ANS16 @ ((unsigned)&ANSEL2*8)+0;
"457
[v _T1GINV `Vb ~T0 @X0 1 e@2167 ]
[; ;sc8f083.h: 457: volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
"458
[v _TMR1GE `Vb ~T0 @X0 1 e@2166 ]
[; ;sc8f083.h: 458: volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
"459
[v _T1CKPS1 `Vb ~T0 @X0 1 e@2165 ]
[; ;sc8f083.h: 459: volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
"460
[v _T1CKPS0 `Vb ~T0 @X0 1 e@2164 ]
[; ;sc8f083.h: 460: volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
"461
[v _T1OSCEN `Vb ~T0 @X0 1 e@2163 ]
[; ;sc8f083.h: 461: volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
"462
[v _T1SYNC `Vb ~T0 @X0 1 e@2162 ]
[; ;sc8f083.h: 462: volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
"463
[v _TMR1CS `Vb ~T0 @X0 1 e@2161 ]
[; ;sc8f083.h: 463: volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
"464
[v _TMR1ON `Vb ~T0 @X0 1 e@2160 ]
[; ;sc8f083.h: 464: volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
"467
[v _TKIF `Vb ~T0 @X0 1 e@2174 ]
[; ;sc8f083.h: 467: volatile bit TKIF @ ((unsigned)&PIR2*8)+6;
"468
[v _CMP2IF `Vb ~T0 @X0 1 e@2173 ]
[; ;sc8f083.h: 468: volatile bit CMP2IF @ ((unsigned)&PIR2*8)+5;
"471
[v _TKIE `Vb ~T0 @X0 1 e@2182 ]
[; ;sc8f083.h: 471: volatile bit TKIE @ ((unsigned)&PIE2*8)+6;
"472
[v _CMP2IE `Vb ~T0 @X0 1 e@2181 ]
[; ;sc8f083.h: 472: volatile bit CMP2IE @ ((unsigned)&PIE2*8)+5;
"475
[v _KDONE `Vb ~T0 @X0 1 e@2191 ]
[; ;sc8f083.h: 475: volatile bit KDONE @ ((unsigned)&KEYCON0*8)+7;
"476
[v _KTOUT `Vb ~T0 @X0 1 e@2186 ]
[; ;sc8f083.h: 476: volatile bit KTOUT @ ((unsigned)&KEYCON0*8)+2;
"477
[v _KCAP `Vb ~T0 @X0 1 e@2185 ]
[; ;sc8f083.h: 477: volatile bit KCAP @ ((unsigned)&KEYCON0*8)+1;
"478
[v _KEN `Vb ~T0 @X0 1 e@2184 ]
[; ;sc8f083.h: 478: volatile bit KEN @ ((unsigned)&KEYCON0*8)+0;
"481
[v _KVREF1 `Vb ~T0 @X0 1 e@2199 ]
[; ;sc8f083.h: 481: volatile bit KVREF1 @ ((unsigned)&KEYCON1*8)+7;
"482
[v _KVREF0 `Vb ~T0 @X0 1 e@2198 ]
[; ;sc8f083.h: 482: volatile bit KVREF0 @ ((unsigned)&KEYCON1*8)+6;
"483
[v _KCLK1 `Vb ~T0 @X0 1 e@2197 ]
[; ;sc8f083.h: 483: volatile bit KCLK1 @ ((unsigned)&KEYCON1*8)+5;
"484
[v _KCLK0 `Vb ~T0 @X0 1 e@2196 ]
[; ;sc8f083.h: 484: volatile bit KCLK0 @ ((unsigned)&KEYCON1*8)+4;
"485
[v _KCHS3 `Vb ~T0 @X0 1 e@2195 ]
[; ;sc8f083.h: 485: volatile bit KCHS3 @ ((unsigned)&KEYCON1*8)+3;
"486
[v _KCHS2 `Vb ~T0 @X0 1 e@2194 ]
[; ;sc8f083.h: 486: volatile bit KCHS2 @ ((unsigned)&KEYCON1*8)+2;
"487
[v _KCHS1 `Vb ~T0 @X0 1 e@2193 ]
[; ;sc8f083.h: 487: volatile bit KCHS1 @ ((unsigned)&KEYCON1*8)+1;
"488
[v _KCHS0 `Vb ~T0 @X0 1 e@2192 ]
[; ;sc8f083.h: 488: volatile bit KCHS0 @ ((unsigned)&KEYCON1*8)+0;
"491
[v _CAP_LVBO2 `Vb ~T0 @X0 1 e@2207 ]
[; ;sc8f083.h: 491: volatile bit CAP_LVBO2 @ ((unsigned)&KEYCON2*8)+7;
"492
[v _CAP_LVBO1 `Vb ~T0 @X0 1 e@2206 ]
[; ;sc8f083.h: 492: volatile bit CAP_LVBO1 @ ((unsigned)&KEYCON2*8)+6;
"493
[v _CAP_LVBO0 `Vb ~T0 @X0 1 e@2205 ]
[; ;sc8f083.h: 493: volatile bit CAP_LVBO0 @ ((unsigned)&KEYCON2*8)+5;
"494
[v _TP_EN `Vb ~T0 @X0 1 e@2204 ]
[; ;sc8f083.h: 494: volatile bit TP_EN @ ((unsigned)&KEYCON2*8)+4;
"495
[v _TKLDOEN `Vb ~T0 @X0 1 e@2203 ]
[; ;sc8f083.h: 495: volatile bit TKLDOEN @ ((unsigned)&KEYCON2*8)+3;
"496
[v _TKLDO_SEL `Vb ~T0 @X0 1 e@2201 ]
[; ;sc8f083.h: 496: volatile bit TKLDO_SEL @ ((unsigned)&KEYCON2*8)+1;
"497
[v _TKEN `Vb ~T0 @X0 1 e@2200 ]
[; ;sc8f083.h: 497: volatile bit TKEN @ ((unsigned)&KEYCON2*8)+0;
"500
[v _CSRC `Vb ~T0 @X0 1 e@2247 ]
[; ;sc8f083.h: 500: volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
"501
[v _TX9EN `Vb ~T0 @X0 1 e@2246 ]
[; ;sc8f083.h: 501: volatile bit TX9EN @ ((unsigned)&TXSTA*8)+6;
"502
[v _TXEN `Vb ~T0 @X0 1 e@2245 ]
[; ;sc8f083.h: 502: volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
"503
[v _SYNC `Vb ~T0 @X0 1 e@2244 ]
[; ;sc8f083.h: 503: volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
"504
[v _SCKP `Vb ~T0 @X0 1 e@2243 ]
[; ;sc8f083.h: 504: volatile bit SCKP @ ((unsigned)&TXSTA*8)+3;
"505
[v _TRMT `Vb ~T0 @X0 1 e@2241 ]
[; ;sc8f083.h: 505: volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
"506
[v _TX9D `Vb ~T0 @X0 1 e@2240 ]
[; ;sc8f083.h: 506: volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
"509
[v _SPEN `Vb ~T0 @X0 1 e@2255 ]
[; ;sc8f083.h: 509: volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
"510
[v _RX9EN `Vb ~T0 @X0 1 e@2254 ]
[; ;sc8f083.h: 510: volatile bit RX9EN @ ((unsigned)&RCSTA*8)+6;
"511
[v _SREN `Vb ~T0 @X0 1 e@2253 ]
[; ;sc8f083.h: 511: volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
"512
[v _CREN `Vb ~T0 @X0 1 e@2252 ]
[; ;sc8f083.h: 512: volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
"513
[v _RCIDL `Vb ~T0 @X0 1 e@2251 ]
[; ;sc8f083.h: 513: volatile bit RCIDL @ ((unsigned)&RCSTA*8)+3;
"514
[v _FERR `Vb ~T0 @X0 1 e@2250 ]
[; ;sc8f083.h: 514: volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
"515
[v _OERR `Vb ~T0 @X0 1 e@2249 ]
[; ;sc8f083.h: 515: volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
"516
[v _RX9D `Vb ~T0 @X0 1 e@2248 ]
[; ;sc8f083.h: 516: volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"35 C:\mcuproject\scm\zdt\C103_8F083_tssop20_\C103_8F083_tssop20_\number.h
[v _ledCnt `uc ~T0 @X0 1 e ]
[i _ledCnt
-> -> 0 `i `uc
]
[; ;number.h: 35: unsigned char ledCnt = 0;
"36
[v _showNumAShi `uc ~T0 @X0 1 e ]
[i _showNumAShi
-> -> 127 `i `uc
]
[; ;number.h: 36: unsigned char showNumAShi = 0x7F;
"37
[v _showNumAge `uc ~T0 @X0 1 e ]
[i _showNumAge
-> -> 127 `i `uc
]
[; ;number.h: 37: unsigned char showNumAge = 0x7F;
"38
[v _showNumBShi `uc ~T0 @X0 1 e ]
[i _showNumBShi
-> -> 127 `i `uc
]
[; ;number.h: 38: unsigned char showNumBShi = 0x7F;
"39
[v _showNumBge `uc ~T0 @X0 1 e ]
[i _showNumBge
-> -> 127 `i `uc
]
[; ;number.h: 39: unsigned char showNumBge = 0x7F;
"41
[v _modeStep `uc ~T0 @X0 1 e ]
[i _modeStep
-> -> 0 `i `uc
]
[; ;number.h: 41: unsigned char modeStep = 0;
[; ;number.h: 44: void A1();
[; ;number.h: 45: void A2();
[; ;number.h: 46: void A3();
[; ;number.h: 47: void A4();
[; ;number.h: 48: void A5();
[; ;number.h: 49: void A6();
[; ;number.h: 50: void A7();
[; ;number.h: 52: void B1();
[; ;number.h: 53: void B2();
[; ;number.h: 54: void B3();
[; ;number.h: 55: void B4();
[; ;number.h: 56: void B5();
[; ;number.h: 57: void B6();
[; ;number.h: 58: void B7();
[; ;number.h: 60: void C1();
[; ;number.h: 61: void C2();
[; ;number.h: 62: void C3();
[; ;number.h: 63: void C4();
[; ;number.h: 64: void C5();
[; ;number.h: 65: void C6();
[; ;number.h: 66: void C7();
[; ;number.h: 68: void D1();
[; ;number.h: 69: void D2();
[; ;number.h: 70: void D3();
[; ;number.h: 71: void D4();
[; ;number.h: 72: void D5();
[; ;number.h: 73: void D6();
[; ;number.h: 74: void D7();
[; ;number.h: 76: void led1();
[; ;number.h: 77: void led2();
[; ;number.h: 78: void led3();
[; ;number.h: 79: void led4();
[; ;number.h: 80: void led5();
[; ;number.h: 81: void led6();
[; ;number.h: 82: void led7();
[; ;number.h: 83: void led8();
[; ;number.h: 84: void led9();
[; ;number.h: 85: void led10();
[; ;number.h: 86: void led11();
[; ;number.h: 87: void led12();
[; ;number.h: 89: void refreshLed();
[; ;number.h: 90: void DelayUs(unsigned char Time);
[; ;number.h: 91: void DelayMs(unsigned char Time);
[; ;number.h: 92: void DelayS(unsigned char Time);
"13 C:\mcuproject\scm\zdt\C103_8F083_tssop20_\C103_8F083_tssop20_\main.c
[v _MainTime `Vuc ~T0 @X0 1 e ]
[; ;main.c: 13: volatile unsigned char MainTime;
"14
[v _B_MainLoop `Vb ~T0 @X0 1 e ]
[v _B_OnOff `Vb ~T0 @X0 1 e ]
[; ;main.c: 14: volatile bit B_MainLoop,B_OnOff;
"15
[v _count1s `ui ~T0 @X0 1 e ]
[i _count1s
-> -> 0 `i `ui
]
[; ;main.c: 15: unsigned int count1s = 0;
"16
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 16: unsigned char workStep = 0;
"17
[v _firstTime `uc ~T0 @X0 1 e ]
[i _firstTime
-> -> 0 `i `uc
]
[; ;main.c: 17: unsigned char firstTime = 0;
"19
[v _intFlag `uc ~T0 @X0 1 e ]
[i _intFlag
-> -> 0 `i `uc
]
[; ;main.c: 19: unsigned char intFlag = 0;
"20
[v _wait30s `ui ~T0 @X0 1 e ]
[i _wait30s
-> -> 0 `i `ui
]
[; ;main.c: 20: unsigned int wait30s = 0;
"21
[v _count10ms `uc ~T0 @X0 1 e ]
[i _count10ms
-> -> 0 `i `uc
]
[; ;main.c: 21: unsigned char count10ms = 0;
"22
[v _keyCount2 `uc ~T0 @X0 1 e ]
[i _keyCount2
-> -> 0 `i `uc
]
[; ;main.c: 22: unsigned char keyCount2 = 0;
"23
[v _keyCount `uc ~T0 @X0 1 e ]
[i _keyCount
-> -> 0 `i `uc
]
[; ;main.c: 23: unsigned char keyCount = 0;
"24
[v _longPressFlag `uc ~T0 @X0 1 e ]
[i _longPressFlag
-> -> 0 `i `uc
]
[; ;main.c: 24: unsigned char longPressFlag = 0;
"25
[v _longPressFlag2 `uc ~T0 @X0 1 e ]
[i _longPressFlag2
-> -> 0 `i `uc
]
[; ;main.c: 25: unsigned char longPressFlag2 = 0;
"26
[v _startTime `uc ~T0 @X0 1 e ]
[i _startTime
-> -> 0 `i `uc
]
[; ;main.c: 26: unsigned char startTime = 0;
"27
[v _chrgFlag `uc ~T0 @X0 1 e ]
[i _chrgFlag
-> -> 0 `i `uc
]
[; ;main.c: 27: unsigned char chrgFlag = 0;
"28
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[i _chrgFullFlag
-> -> 0 `i `uc
]
[; ;main.c: 28: unsigned char chrgFullFlag = 0;
"29
[v _chrgFullTime `uc ~T0 @X0 1 e ]
[i _chrgFullTime
-> -> 0 `i `uc
]
[; ;main.c: 29: unsigned char chrgFullTime = 0;
"30
[v _batValue `ui ~T0 @X0 1 e ]
[i _batValue
-> -> 0 `i `ui
]
[; ;main.c: 30: unsigned int batValue = 0;
"31
[v _R_AIN2_DATA `ui ~T0 @X0 1 e ]
[i _R_AIN2_DATA
-> -> 0 `i `ui
]
[; ;main.c: 31: unsigned int R_AIN2_DATA = 0;
"32
[v _R_AIN6_DATA `ui ~T0 @X0 1 e ]
[i _R_AIN6_DATA
-> -> 0 `i `ui
]
[; ;main.c: 32: unsigned int R_AIN6_DATA = 0;
"33
[v _sleepTime `ui ~T0 @X0 1 e ]
[i _sleepTime
-> -> 0 `i `ui
]
[; ;main.c: 33: unsigned int sleepTime = 0;
"34
[v _refreshFlag `uc ~T0 @X0 1 e ]
[i _refreshFlag
-> -> 0 `i `uc
]
[; ;main.c: 34: unsigned char refreshFlag = 0;
"35
[v _keyNum `uc ~T0 @X0 1 e ]
[i _keyNum
-> -> 0 `i `uc
]
[; ;main.c: 35: unsigned char keyNum = 0;
"36
[v _preKeyNum `uc ~T0 @X0 1 e ]
[i _preKeyNum
-> -> 0 `i `uc
]
[; ;main.c: 36: unsigned char preKeyNum = 0;
"37
[v _pwmFlag `uc ~T0 @X0 1 e ]
[i _pwmFlag
-> -> 0 `i `uc
]
[; ;main.c: 37: unsigned char pwmFlag = 0;
"38
[v _count10s `ui ~T0 @X0 1 e ]
[i _count10s
-> -> 0 `i `ui
]
[; ;main.c: 38: unsigned int count10s = 0;
"39
[v _pwmDuty `uc ~T0 @X0 1 e ]
[i _pwmDuty
-> -> 0 `i `uc
]
[; ;main.c: 39: unsigned char pwmDuty = 0;
"40
[v _showBatValue `uc ~T0 @X0 1 e ]
[i _showBatValue
-> -> 0 `i `uc
]
[; ;main.c: 40: unsigned char showBatValue = 0;
"41
[v _showFlag `uc ~T0 @X0 1 e ]
[i _showFlag
-> -> 0 `i `uc
]
[; ;main.c: 41: unsigned char showFlag = 0;
"42
[v _addPowerTime `uc ~T0 @X0 1 e ]
[i _addPowerTime
-> -> 0 `i `uc
]
[; ;main.c: 42: unsigned char addPowerTime = 0;
"43
[v _subPowerTime `uc ~T0 @X0 1 e ]
[i _subPowerTime
-> -> 0 `i `uc
]
[; ;main.c: 43: unsigned char subPowerTime = 0;
"44
[v _count10 `uc ~T0 @X0 1 e ]
[i _count10
-> -> 0 `i `uc
]
[; ;main.c: 44: unsigned char count10 = 0;
"45
[v _keyTime `uc ~T0 @X0 1 e ]
[i _keyTime
-> -> 0 `i `uc
]
[; ;main.c: 45: unsigned char keyTime = 0;
"46
[v _count2s `uc ~T0 @X0 1 e ]
[i _count2s
-> -> 0 `i `uc
]
[; ;main.c: 46: unsigned char count2s = 0;
"47
[v _chrgStep `uc ~T0 @X0 1 e ]
[i _chrgStep
-> -> 0 `i `uc
]
[; ;main.c: 47: unsigned char chrgStep = 0;
"48
[v _count900s `uc ~T0 @X0 1 e ]
[i _count900s
-> -> 0 `i `uc
]
[; ;main.c: 48: unsigned char count900s = 0;
"49
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 49: unsigned char lowBatFlag = 0;
"50
[v _batAddCount `ui ~T0 @X0 1 e ]
[i _batAddCount
-> -> 0 `i `ui
]
[; ;main.c: 50: unsigned int batAddCount = 0;
"51
[v _batSubCount `ui ~T0 @X0 1 e ]
[i _batSubCount
-> -> 0 `i `ui
]
[; ;main.c: 51: unsigned int batSubCount = 0;
"52
[v _batSubMaxTime `ui ~T0 @X0 1 e ]
[i _batSubMaxTime
-> -> 3000 `i `ui
]
[; ;main.c: 52: unsigned int batSubMaxTime = 3000;
"53
[v _count30s `ui ~T0 @X0 1 e ]
[i _count30s
-> -> 0 `i `ui
]
[; ;main.c: 53: unsigned int count30s = 0;
"54
[v _chrgMaxData `ui ~T0 @X0 1 e ]
[i _chrgMaxData
-> -> 0 `i `ui
]
[; ;main.c: 54: unsigned int chrgMaxData = 0;
"55
[v _overTime `uc ~T0 @X0 1 e ]
[i _overTime
-> -> 0 `i `uc
]
[; ;main.c: 55: unsigned char overTime = 0;
"56
[v _showBatValueAddTime `uc ~T0 @X0 1 e ]
[i _showBatValueAddTime
-> -> 0 `i `uc
]
[; ;main.c: 56: unsigned char showBatValueAddTime = 0;
"57
[v _chrgTime `uc ~T0 @X0 1 e ]
[i _chrgTime
-> -> 0 `i `uc
]
[; ;main.c: 57: unsigned char chrgTime = 0;
"58
[v _lowBatTime `uc ~T0 @X0 1 e ]
[i _lowBatTime
-> -> 0 `i `uc
]
[; ;main.c: 58: unsigned char lowBatTime = 0;
"59
[v _numArray `Cuc ~T0 @X0 -> 0 `x s ]
[i _numArray
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 0 `i `uc
-> -> 113 `i `uc
..
]
[; ;main.c: 59: const static unsigned char numArray[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x00,0x71};
"61
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 61: volatile unsigned int adresult;
"62
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 62: volatile unsigned int result;
"63
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 63: volatile unsigned char test_adc;
"64
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 64: volatile unsigned int power_ad;
[; ;main.c: 66: void chrgCtr();
[; ;main.c: 67: void Sleep_Mode();
[; ;main.c: 68: void pwmStop();
[; ;main.c: 69: void pwmInit();
[; ;main.c: 70: void updateLed();
[; ;main.c: 71: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
"74
[v _Init_System `(v ~T0 @X0 1 ef ]
"75
{
[; ;main.c: 74: void Init_System()
[; ;main.c: 75: {
[e :U _Init_System ]
[f ]
[; ;main.c: 76: asm("nop");
"76
[; <" nop ;# ">
[; ;main.c: 77: asm("clrwdt");
"77
[; <" clrwdt ;# ">
[; ;main.c: 78: INTCON = 0;
"78
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 79: OSCCON = 0X72;
"79
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 80: OPTION_REG = 0;
"80
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 85: TRISA = 0x8D;
"85
[e = _TRISA -> -> 141 `i `uc ]
[; ;main.c: 86: PORTA = 0x10;
"86
[e = _PORTA -> -> 16 `i `uc ]
[; ;main.c: 87: TRISB = 0x00;
"87
[e = _TRISB -> -> 0 `i `uc ]
[; ;main.c: 88: PORTB = 0;
"88
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 89: WPUB = 0x00;
"89
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 90: TRISC = 0x02;
"90
[e = _TRISC -> -> 2 `i `uc ]
[; ;main.c: 91: PORTC = 0;
"91
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 93: PIE1 = 2;
"93
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 94: PR2 = 250;
"94
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 95: T2CON = 4;
"95
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 97: INTCON = 0XC0;
"97
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 98: ADCON0 = 0X41;
"98
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 99: ADON = 1;
"99
[e = _ADON -> -> 1 `i `b ]
[; ;main.c: 100: ADCON1 = 0x00;
"100
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 101: }
"101
[e :UE 1 ]
}
"111
[v _Refurbish_Sfr `(v ~T0 @X0 1 ef ]
"112
{
[; ;main.c: 111: void Refurbish_Sfr()
[; ;main.c: 112: {
[e :U _Refurbish_Sfr ]
[f ]
[; ;main.c: 114: PIE1 = 2;
"114
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 115: PR2 = 250;
"115
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 116: INTCON = 0XC0;
"116
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 117: if (4 != T2CON)
"117
[e $ ! != -> 4 `i -> _T2CON `i 3  ]
[; ;main.c: 118: T2CON = 4;
"118
[e = _T2CON -> -> 4 `i `uc ]
[e :U 3 ]
[; ;main.c: 119: }
"119
[e :UE 2 ]
}
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F877 `(v ~T0 @X0 1 tf ]
"125
[v _Isr_Timer `IF877 ~T0 @X0 1 e ]
"126
{
[; ;main.c: 125: void interrupt Isr_Timer()
[; ;main.c: 126: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 127: if(TMR2IF)
"127
[e $ ! _TMR2IF 5  ]
[; ;main.c: 128: {
"128
{
[; ;main.c: 129: TMR2IF = 0;
"129
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 130: updateLed();
"130
[e ( _updateLed ..  ]
[; ;main.c: 131: if(++MainTime >= 158)
"131
[e $ ! >= -> =+ _MainTime -> -> 1 `i `uc `i -> 158 `i 6  ]
[; ;main.c: 132: {
"132
{
[; ;main.c: 133: MainTime = 0;
"133
[e = _MainTime -> -> 0 `i `uc ]
[; ;main.c: 134: B_MainLoop = 1;
"134
[e = _B_MainLoop -> -> 1 `i `b ]
[; ;main.c: 135: if(++count1s >= 3000)
"135
[e $ ! >= =+ _count1s -> -> 1 `i `ui -> -> 3000 `i `ui 7  ]
[; ;main.c: 136: {
"136
{
[; ;main.c: 137: count1s = 0;
"137
[e = _count1s -> -> 0 `i `ui ]
[; ;main.c: 138: wait30s = 1;
"138
[e = _wait30s -> -> 1 `i `ui ]
"139
}
[e :U 7 ]
"140
}
[e :U 6 ]
"141
}
[; ;main.c: 139: }
[; ;main.c: 140: }
[; ;main.c: 141: }
[e $U 8  ]
"142
[e :U 5 ]
[; ;main.c: 142: else
[; ;main.c: 143: {
"143
{
[; ;main.c: 144: PIR1 = 0;
"144
[e = _PIR1 -> -> 0 `i `uc ]
"145
}
[e :U 8 ]
[; ;main.c: 145: }
[; ;main.c: 147: }
"147
[e :UE 4 ]
}
"156
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"157
{
[; ;main.c: 156: void Sleep_Mode()
[; ;main.c: 157: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 158: INTCON = 0;
"158
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 160: OPTION_REG = 0;
"160
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 162: TRISA = 0B10001101;
"162
[e = _TRISA -> -> 141 `i `uc ]
[; ;main.c: 163: PORTA = 0B00010000;
"163
[e = _PORTA -> -> 16 `i `uc ]
[; ;main.c: 164: WPUA = 0B00000000;
"164
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 166: TRISB = 0B00000000;
"166
[e = _TRISB -> -> 0 `i `uc ]
[; ;main.c: 167: PORTB = 0B00000000;
"167
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 168: WPUB = 0B00000000;
"168
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 170: TRISC = 0B00000010;
"170
[e = _TRISC -> -> 2 `i `uc ]
[; ;main.c: 171: PORTC = 0B00000000;
"171
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 173: ADCON0 = 0;
"173
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 174: ADCON1 = 0;
"174
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 176: PWMCON0 = 0;
"176
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 178: OSCCON = 0X70;
"178
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 179: T2CON = 0;
"179
[e = _T2CON -> -> 0 `i `uc ]
[; ;main.c: 180: IOCA = 0B10000001;
"180
[e = _IOCA -> -> 129 `i `uc ]
[; ;main.c: 181: IOCB = 0B00000000;
"181
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 183: RAIE = 1;
"183
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 184: PEIE = 1;
"184
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 186: GIE = 0;
"186
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 189: PORTA;
"189
[e _PORTA ]
[; ;main.c: 190: RAIF = 0;
"190
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 191: PORTB;
"191
[e _PORTB ]
[; ;main.c: 193: asm("clrwdt");
"193
[; <" clrwdt ;# ">
[; ;main.c: 195: asm("sleep");
"195
[; <" sleep ;# ">
[; ;main.c: 197: asm("nop");
"197
[; <" nop ;# ">
[; ;main.c: 198: asm("clrwdt");
"198
[; <" clrwdt ;# ">
[; ;main.c: 199: if(RAIF) RAIF = 0;
"199
[e $ ! _RAIF 10  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 10 ]
[; ;main.c: 201: Init_System();
"201
[e ( _Init_System ..  ]
[; ;main.c: 202: }
"202
[e :UE 9 ]
}
"224
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"225
{
[; ;main.c: 224: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 225: {
[e :U _ADC_Sample ]
"224
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"225
[f ]
"226
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 226: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"227
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 227: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"228
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 228: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 230: if ((!LDO_EN) && (adldo & 0x04) )
"230
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 12  ]
[; ;main.c: 231: {
"231
{
[; ;main.c: 233: ADCON1 = adldo;
"233
[e = _ADCON1 _adldo ]
[; ;main.c: 234: _delay((unsigned long)((100)*(8000000/4000000.0)));
"234
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
"235
}
[; ;main.c: 235: }
[e $U 13  ]
"236
[e :U 12 ]
[; ;main.c: 236: else
[; ;main.c: 237: ADCON1 = adldo;
"237
[e = _ADCON1 _adldo ]
[e :U 13 ]
[; ;main.c: 239: if(adch & 0x10)
"239
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 14  ]
[; ;main.c: 240: {
"240
{
[; ;main.c: 241: CHS4 = 1;
"241
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 242: adch &= 0x0f;
"242
[e =& _adch -> -> 15 `i `uc ]
"243
}
[e :U 14 ]
"244
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 243: }
[; ;main.c: 244: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 245: for (i = 0; i < 10; i++)
"245
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 15  ]
[e $U 16  ]
"246
[e :U 15 ]
[; ;main.c: 246: {
{
[; ;main.c: 247: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"247
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 248: asm("nop");
"248
[; <" nop ;# ">
[; ;main.c: 249: asm("nop");
"249
[; <" nop ;# ">
[; ;main.c: 250: asm("nop");
"250
[; <" nop ;# ">
[; ;main.c: 251: asm("nop");
"251
[; <" nop ;# ">
[; ;main.c: 252: GODONE = 1;
"252
[e = _GODONE -> -> 1 `i `b ]
"254
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 254: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 255: while (GODONE)
"255
[e $U 18  ]
[e :U 19 ]
[; ;main.c: 256: {
"256
{
[; ;main.c: 257: _delay((unsigned long)((2)*(8000000/4000000.0)));
"257
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 259: if (0 == (--j))
"259
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 21  ]
[; ;main.c: 260: return 0;
"260
[e ) -> -> 0 `i `uc ]
[e $UE 11  ]
[e :U 21 ]
"261
}
[e :U 18 ]
"255
[e $ _GODONE 19  ]
[e :U 20 ]
[; ;main.c: 261: }
[; ;main.c: 263: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"263
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 265: if (0 == admax)
"265
[e $ ! == -> -> 0 `i `ui _admax 22  ]
[; ;main.c: 266: {
"266
{
[; ;main.c: 267: admax = ad_temp;
"267
[e = _admax _ad_temp ]
[; ;main.c: 268: admin = ad_temp;
"268
[e = _admin _ad_temp ]
"269
}
[; ;main.c: 269: }
[e $U 23  ]
"270
[e :U 22 ]
[; ;main.c: 270: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 24  ]
[; ;main.c: 271: admax = ad_temp;
"271
[e = _admax _ad_temp ]
[e $U 25  ]
"272
[e :U 24 ]
[; ;main.c: 272: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 26  ]
[; ;main.c: 273: admin = ad_temp;
"273
[e = _admin _ad_temp ]
[e :U 26 ]
"275
[e :U 25 ]
[e :U 23 ]
[; ;main.c: 275: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"276
}
"245
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 15  ]
[e :U 16 ]
"276
}
[; ;main.c: 276: }
[; ;main.c: 277: adsum -= admax;
"277
[e =- _adsum -> _admax `ul ]
[; ;main.c: 278: if (adsum >= admin)
"278
[e $ ! >= _adsum -> _admin `ul 27  ]
[; ;main.c: 279: adsum -= admin;
"279
[e =- _adsum -> _admin `ul ]
[e $U 28  ]
"280
[e :U 27 ]
[; ;main.c: 280: else
[; ;main.c: 281: adsum = 0;
"281
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 28 ]
[; ;main.c: 283: adresult = adsum >> 3;
"283
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 285: adsum = 0;
"285
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 286: admin = 0;
"286
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 287: admax = 0;
"287
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 288: return 0xA5;
"288
[e ) -> -> 165 `i `uc ]
[e $UE 11  ]
[; ;main.c: 290: }
"290
[e :UE 11 ]
}
"294
[v _pwmInit `(v ~T0 @X0 1 ef ]
"295
{
[; ;main.c: 294: void pwmInit()
[; ;main.c: 295: {
[e :U _pwmInit ]
[f ]
[; ;main.c: 297: PWMTH = 0x00;
"297
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 298: PWMTL = 200;
"298
[e = _PWMTL -> -> 200 `i `uc ]
[; ;main.c: 299: PWMD01H = 0x00;
"299
[e = _PWMD01H -> -> 0 `i `uc ]
[; ;main.c: 300: PWMD1L = 32;
"300
[e = _PWMD1L -> -> 32 `i `uc ]
[; ;main.c: 301: PWMCON1 = 0xC0;
"301
[e = _PWMCON1 -> -> 192 `i `uc ]
[; ;main.c: 302: PWMCON2 = 0x00;
"302
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 303: PWMCON0 |= 0x62;
"303
[e =| _PWMCON0 -> -> 98 `i `uc ]
[; ;main.c: 304: }
"304
[e :UE 29 ]
}
"306
[v _pwmStop `(v ~T0 @X0 1 ef ]
"307
{
[; ;main.c: 306: void pwmStop()
[; ;main.c: 307: {
[e :U _pwmStop ]
[f ]
[; ;main.c: 308: PWMD1L = 0;
"308
[e = _PWMD1L -> -> 0 `i `uc ]
[; ;main.c: 309: PWMCON0 &= 0xFD;
"309
[e =& _PWMCON0 -> -> 253 `i `uc ]
[; ;main.c: 310: PORTA &= 0xFD;
"310
[e =& _PORTA -> -> 253 `i `uc ]
[; ;main.c: 311: }
"311
[e :UE 30 ]
}
"314
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"315
{
[; ;main.c: 314: char keyRead(char keyStatus)
[; ;main.c: 315: {
[e :U _keyRead ]
"314
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"315
[f ]
[; ;main.c: 317: if(keyStatus)
"317
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 32  ]
[; ;main.c: 318: {
"318
{
[; ;main.c: 319: keyCount++;
"319
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 320: if(keyStatus == 0x03)
"320
[e $ ! == -> _keyStatus `i -> 3 `i 33  ]
[; ;main.c: 321: {
"321
{
[; ;main.c: 322: keyNum = 3;
"322
[e = _keyNum -> -> 3 `i `uc ]
"323
}
[; ;main.c: 323: }
[e $U 34  ]
"324
[e :U 33 ]
[; ;main.c: 324: else if(keyStatus == 0x01)
[e $ ! == -> _keyStatus `i -> 1 `i 35  ]
[; ;main.c: 325: {
"325
{
[; ;main.c: 326: keyNum = 2;
"326
[e = _keyNum -> -> 2 `i `uc ]
"327
}
[; ;main.c: 327: }
[e $U 36  ]
"328
[e :U 35 ]
[; ;main.c: 328: else if(keyStatus == 0x02)
[e $ ! == -> _keyStatus `i -> 2 `i 37  ]
[; ;main.c: 329: {
"329
{
[; ;main.c: 330: keyNum = 1;
"330
[e = _keyNum -> -> 1 `i `uc ]
"331
}
[e :U 37 ]
"332
[e :U 36 ]
[e :U 34 ]
[; ;main.c: 331: }
[; ;main.c: 332: if(keyNum != preKeyNum)
[e $ ! != -> _keyNum `i -> _preKeyNum `i 38  ]
[; ;main.c: 333: {
"333
{
[; ;main.c: 334: preKeyNum = keyNum;
"334
[e = _preKeyNum _keyNum ]
[; ;main.c: 335: keyCount = 0;
"335
[e = _keyCount -> -> 0 `i `uc ]
"336
}
[e :U 38 ]
[; ;main.c: 336: }
[; ;main.c: 338: if(keyCount >= 150)
"338
[e $ ! >= -> _keyCount `i -> 150 `i 39  ]
[; ;main.c: 339: {
"339
{
[; ;main.c: 340: keyCount = 150;
"340
[e = _keyCount -> -> 150 `i `uc ]
[; ;main.c: 341: if(keyNum == 2)
"341
[e $ ! == -> _keyNum `i -> 2 `i 40  ]
[; ;main.c: 342: {
"342
{
[; ;main.c: 343: if(!longPressFlag)
"343
[e $ ! ! != -> _longPressFlag `i -> -> -> 0 `i `uc `i 41  ]
[; ;main.c: 344: {
"344
{
[; ;main.c: 345: longPressFlag = 1;
"345
[e = _longPressFlag -> -> 1 `i `uc ]
[; ;main.c: 346: return 2;
"346
[e ) -> -> 2 `i `uc ]
[e $UE 31  ]
"347
}
[e :U 41 ]
"348
}
[e :U 40 ]
"349
}
[e :U 39 ]
[; ;main.c: 347: }
[; ;main.c: 348: }
[; ;main.c: 349: }
[; ;main.c: 350: if(keyCount > 25 && (++keyTime) > 15)
"350
[e $ ! && > -> _keyCount `i -> 25 `i > -> =+ _keyTime -> -> 1 `i `uc `i -> 15 `i 42  ]
[; ;main.c: 351: {
"351
{
[; ;main.c: 352: keyTime = 0;
"352
[e = _keyTime -> -> 0 `i `uc ]
[; ;main.c: 353: return 3;
"353
[e ) -> -> 3 `i `uc ]
[e $UE 31  ]
"354
}
[e :U 42 ]
"355
}
[; ;main.c: 354: }
[; ;main.c: 355: }
[e $U 43  ]
"356
[e :U 32 ]
[; ;main.c: 356: else
[; ;main.c: 357: {
"357
{
[; ;main.c: 358: if(keyNum == 2 && keyCount >= 100)
"358
[e $ ! && == -> _keyNum `i -> 2 `i >= -> _keyCount `i -> 100 `i 44  ]
[; ;main.c: 359: {
"359
{
[; ;main.c: 360: keyCount = 0;
"360
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 361: longPressFlag = 0;
"361
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 362: return 0;
"362
[e ) -> -> 0 `i `uc ]
[e $UE 31  ]
"363
}
[; ;main.c: 363: }
[e $U 45  ]
"364
[e :U 44 ]
[; ;main.c: 364: else if(keyCount >= 4)
[e $ ! >= -> _keyCount `i -> 4 `i 46  ]
[; ;main.c: 365: {
"365
{
[; ;main.c: 366: keyCount = 0;
"366
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 367: return 1;
"367
[e ) -> -> 1 `i `uc ]
[e $UE 31  ]
"368
}
[e :U 46 ]
"369
[e :U 45 ]
[; ;main.c: 368: }
[; ;main.c: 369: longPressFlag = 0;
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 370: keyCount = 0;
"370
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 371: keyNum = 0;
"371
[e = _keyNum -> -> 0 `i `uc ]
"372
}
[e :U 43 ]
[; ;main.c: 372: }
[; ;main.c: 373: return 0;
"373
[e ) -> -> 0 `i `uc ]
[e $UE 31  ]
[; ;main.c: 374: }
"374
[e :UE 31 ]
}
"377
[v _keyCtr `(v ~T0 @X0 1 ef ]
"378
{
[; ;main.c: 377: void keyCtr()
[; ;main.c: 378: {
[e :U _keyCtr ]
[f ]
"379
[v _keyStatus `uc ~T0 @X0 1 a ]
[; ;main.c: 379: unsigned char keyStatus = (0x01 & PORTA) | (0x02 & PORTC);
[e = _keyStatus -> | & -> 1 `i -> _PORTA `i & -> 2 `i -> _PORTC `i `uc ]
"380
[v _keyClick `uc ~T0 @X0 1 a ]
[; ;main.c: 380: unsigned char keyClick = keyRead(keyStatus);
[e = _keyClick ( _keyRead (1 _keyStatus ]
[; ;main.c: 382: if(keyNum == 1)
"382
[e $ ! == -> _keyNum `i -> 1 `i 48  ]
[; ;main.c: 383: {
"383
{
[; ;main.c: 384: if(keyClick == 1)
"384
[e $ ! == -> _keyClick `i -> 1 `i 49  ]
[; ;main.c: 385: {
"385
{
[; ;main.c: 386: if(modeStep == 2 || modeStep == 3)
"386
[e $ ! || == -> _modeStep `i -> 2 `i == -> _modeStep `i -> 3 `i 50  ]
[; ;main.c: 387: {
"387
{
[; ;main.c: 388: if(++workStep > 3)
"388
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 3 `i 51  ]
[; ;main.c: 389: {
"389
{
[; ;main.c: 390: workStep = 3;
"390
[e = _workStep -> -> 3 `i `uc ]
"391
}
[e :U 51 ]
"392
}
[; ;main.c: 391: }
[; ;main.c: 392: }
[e $U 52  ]
"393
[e :U 50 ]
[; ;main.c: 393: else if(modeStep == 1)
[e $ ! == -> _modeStep `i -> 1 `i 53  ]
[; ;main.c: 394: {
"394
{
[; ;main.c: 395: if(++workStep > 99)
"395
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 99 `i 54  ]
[; ;main.c: 396: {
"396
{
[; ;main.c: 397: workStep = 99;
"397
[e = _workStep -> -> 99 `i `uc ]
"398
}
[e :U 54 ]
"399
}
[e :U 53 ]
"400
[e :U 52 ]
}
[; ;main.c: 398: }
[; ;main.c: 399: }
[; ;main.c: 400: }
[e $U 55  ]
"401
[e :U 49 ]
[; ;main.c: 401: else if(keyClick == 3 && modeStep == 1)
[e $ ! && == -> _keyClick `i -> 3 `i == -> _modeStep `i -> 1 `i 56  ]
[; ;main.c: 402: {
"402
{
[; ;main.c: 403: if(++workStep > 99)
"403
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 99 `i 57  ]
[; ;main.c: 404: {
"404
{
[; ;main.c: 405: workStep = 99;
"405
[e = _workStep -> -> 99 `i `uc ]
"406
}
[e :U 57 ]
"407
}
[e :U 56 ]
"408
[e :U 55 ]
}
[; ;main.c: 406: }
[; ;main.c: 407: }
[; ;main.c: 408: }
[e $U 58  ]
"409
[e :U 48 ]
[; ;main.c: 409: else if(keyNum == 2)
[e $ ! == -> _keyNum `i -> 2 `i 59  ]
[; ;main.c: 410: {
"410
{
[; ;main.c: 412: if(keyClick == 2)
"412
[e $ ! == -> _keyClick `i -> 2 `i 60  ]
[; ;main.c: 413: {
"413
{
[; ;main.c: 414: if(modeStep > 0)
"414
[e $ ! > -> _modeStep `i -> 0 `i 61  ]
[; ;main.c: 415: {
"415
{
[; ;main.c: 416: modeStep = 0;
"416
[e = _modeStep -> -> 0 `i `uc ]
[; ;main.c: 417: workStep = 0;
"417
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 418: count900s = 0;
"418
[e = _count900s -> -> 0 `i `uc ]
"419
}
[; ;main.c: 419: }
[e $U 62  ]
"420
[e :U 61 ]
[; ;main.c: 420: else if(lowBatFlag == 0)
[e $ ! == -> _lowBatFlag `i -> 0 `i 63  ]
[; ;main.c: 421: {
"421
{
[; ;main.c: 422: modeStep = 1;
"422
[e = _modeStep -> -> 1 `i `uc ]
[; ;main.c: 423: workStep = 50;
"423
[e = _workStep -> -> 50 `i `uc ]
[; ;main.c: 424: count900s = 0;
"424
[e = _count900s -> -> 0 `i `uc ]
"425
}
[e :U 63 ]
"426
[e :U 62 ]
}
[; ;main.c: 425: }
[; ;main.c: 426: }
[e $U 64  ]
"427
[e :U 60 ]
[; ;main.c: 427: else if(keyClick == 1 && workStep > 0)
[e $ ! && == -> _keyClick `i -> 1 `i > -> _workStep `i -> 0 `i 65  ]
[; ;main.c: 428: {
"428
{
[; ;main.c: 429: if(++modeStep > 3)
"429
[e $ ! > -> =+ _modeStep -> -> 1 `i `uc `i -> 3 `i 66  ]
[; ;main.c: 430: {
"430
{
[; ;main.c: 431: modeStep = 1;
"431
[e = _modeStep -> -> 1 `i `uc ]
[; ;main.c: 432: workStep = 50;
"432
[e = _workStep -> -> 50 `i `uc ]
"433
}
[; ;main.c: 433: }
[e $U 67  ]
"434
[e :U 66 ]
[; ;main.c: 434: else
[; ;main.c: 435: {
"435
{
[; ;main.c: 436: workStep = 1;
"436
[e = _workStep -> -> 1 `i `uc ]
[; ;main.c: 437: pwmDuty = 69;
"437
[e = _pwmDuty -> -> 69 `i `uc ]
"438
}
[e :U 67 ]
"440
}
[e :U 65 ]
"441
[e :U 64 ]
}
[; ;main.c: 438: }
[; ;main.c: 440: }
[; ;main.c: 441: }
[e $U 68  ]
"442
[e :U 59 ]
[; ;main.c: 442: else if(keyNum == 3)
[e $ ! == -> _keyNum `i -> 3 `i 69  ]
[; ;main.c: 443: {
"443
{
[; ;main.c: 444: if((keyClick == 1 || keyClick == 3) && workStep > 1)
"444
[e $ ! && || == -> _keyClick `i -> 1 `i == -> _keyClick `i -> 3 `i > -> _workStep `i -> 1 `i 70  ]
[; ;main.c: 445: {
"445
{
[; ;main.c: 446: workStep--;
"446
[e -- _workStep -> -> 1 `i `uc ]
"447
}
[e :U 70 ]
"449
}
[e :U 69 ]
"451
[e :U 68 ]
[e :U 58 ]
[; ;main.c: 447: }
[; ;main.c: 449: }
[; ;main.c: 451: }
[e :UE 47 ]
}
"453
[v _updateLed `(v ~T0 @X0 1 ef ]
"454
{
[; ;main.c: 453: void updateLed()
[; ;main.c: 454: {
[e :U _updateLed ]
[f ]
[; ;main.c: 455: if(showFlag)
"455
[e $ ! != -> _showFlag `i -> -> -> 0 `i `uc `i 72  ]
[; ;main.c: 456: {
"456
{
[; ;main.c: 457: refreshLed();
"457
[e ( _refreshLed ..  ]
"458
}
[; ;main.c: 458: }
[e $U 73  ]
"459
[e :U 72 ]
[; ;main.c: 459: else
[; ;main.c: 460: {
"460
{
[; ;main.c: 461: TRISB |= 0xFF;
"461
[e =| _TRISB -> -> 255 `i `uc ]
[; ;main.c: 462: TRISA |= 0x60;
"462
[e =| _TRISA -> -> 96 `i `uc ]
[; ;main.c: 463: PORTB &= 0x00;
"463
[e =& _PORTB -> -> 0 `i `uc ]
[; ;main.c: 464: PORTA &= 0x9F;
"464
[e =& _PORTA -> -> 159 `i `uc ]
"465
}
[e :U 73 ]
[; ;main.c: 465: }
[; ;main.c: 467: }
"467
[e :UE 71 ]
}
"470
[v _workCtr `(v ~T0 @X0 1 ef ]
"471
{
[; ;main.c: 470: void workCtr()
[; ;main.c: 471: {
[e :U _workCtr ]
[f ]
[; ;main.c: 472: if(firstTime > 0)
"472
[e $ ! > -> _firstTime `i -> 0 `i 75  ]
[; ;main.c: 473: {
"473
{
[; ;main.c: 474: firstTime--;
"474
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 475: showFlag = 1;
"475
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 476: lowBatFlag = 0;
"476
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 477: if(firstTime < 120 && showBatValue < batValue)
"477
[e $ ! && < -> _firstTime `i -> 120 `i < -> _showBatValue `ui _batValue 76  ]
[; ;main.c: 478: {
"478
{
[; ;main.c: 479: showBatValue++;
"479
[e ++ _showBatValue -> -> 1 `i `uc ]
"480
}
[e :U 76 ]
[; ;main.c: 480: }
[; ;main.c: 481: showNumAShi = 0x7F;
"481
[e = _showNumAShi -> -> 127 `i `uc ]
[; ;main.c: 482: showNumAge = 0x7F;
"482
[e = _showNumAge -> -> 127 `i `uc ]
[; ;main.c: 483: showNumBShi = 0x7F;
"483
[e = _showNumBShi -> -> 127 `i `uc ]
[; ;main.c: 484: showNumBge = 0x7F;
"484
[e = _showNumBge -> -> 127 `i `uc ]
"485
}
[; ;main.c: 485: }
[e $U 77  ]
"486
[e :U 75 ]
[; ;main.c: 486: else if(chrgFlag == 0 && workStep == 0 && keyCount == 0 && firstTime == 0)
[e $ ! && && && == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _firstTime `i -> 0 `i 78  ]
[; ;main.c: 487: {
"487
{
[; ;main.c: 488: showFlag = 0;
"488
[e = _showFlag -> -> 0 `i `uc ]
[; ;main.c: 489: PORTA |= 0x10;
"489
[e =| _PORTA -> -> 16 `i `uc ]
[; ;main.c: 490: count900s = 0;
"490
[e = _count900s -> -> 0 `i `uc ]
[; ;main.c: 491: pwmStop();
"491
[e ( _pwmStop ..  ]
[; ;main.c: 492: if(++sleepTime > 200)
"492
[e $ ! > =+ _sleepTime -> -> 1 `i `ui -> -> 200 `i `ui 79  ]
[; ;main.c: 493: {
"493
{
[; ;main.c: 494: sleepTime = 0;
"494
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 495: Sleep_Mode();
"495
[e ( _Sleep_Mode ..  ]
"496
}
[e :U 79 ]
"497
}
[; ;main.c: 496: }
[; ;main.c: 497: }
[e $U 80  ]
"498
[e :U 78 ]
[; ;main.c: 498: else
[; ;main.c: 499: {
"499
{
[; ;main.c: 500: sleepTime = 0;
"500
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 501: if(modeStep == 1)
"501
[e $ ! == -> _modeStep `i -> 1 `i 81  ]
[; ;main.c: 502: {
"502
{
[; ;main.c: 503: showFlag = 1;
"503
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 504: RA4 = 0;
"504
[e = _RA4 -> -> 0 `i `b ]
[; ;main.c: 505: pwmInit();
"505
[e ( _pwmInit ..  ]
[; ;main.c: 506: PWMD1L= 99 + workStep;
"506
[e = _PWMD1L -> + -> 99 `i -> _workStep `i `uc ]
"507
}
[; ;main.c: 507: }
[e $U 82  ]
"508
[e :U 81 ]
[; ;main.c: 508: else if(modeStep == 2)
[e $ ! == -> _modeStep `i -> 2 `i 83  ]
[; ;main.c: 509: {
"509
{
[; ;main.c: 510: showFlag = 1;
"510
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 511: RA4 = 0;
"511
[e = _RA4 -> -> 0 `i `b ]
[; ;main.c: 512: if(++count10s >= 600)
"512
[e $ ! >= =+ _count10s -> -> 1 `i `ui -> -> 600 `i `ui 84  ]
[; ;main.c: 513: {
"513
{
[; ;main.c: 514: count10s = 0;
"514
[e = _count10s -> -> 0 `i `ui ]
"515
}
[e :U 84 ]
[; ;main.c: 515: }
[; ;main.c: 516: if(count10s % 3 == 0)
"516
[e $ ! == % _count10s -> -> 3 `i `ui -> -> 0 `i `ui 85  ]
[; ;main.c: 517: {
"517
{
[; ;main.c: 518: if(count10s < 400)
"518
[e $ ! < _count10s -> -> 400 `i `ui 86  ]
[; ;main.c: 519: {
"519
{
[; ;main.c: 520: if(pwmDuty < (169 + (workStep*10)))
"520
[e $ ! < -> _pwmDuty `i + -> 169 `i * -> _workStep `i -> 10 `i 87  ]
[; ;main.c: 521: {
"521
{
[; ;main.c: 522: pwmDuty++;
"522
[e ++ _pwmDuty -> -> 1 `i `uc ]
"523
}
[e :U 87 ]
"524
}
[; ;main.c: 523: }
[; ;main.c: 524: }
[e $U 88  ]
"525
[e :U 86 ]
[; ;main.c: 525: else
[; ;main.c: 526: {
"526
{
[; ;main.c: 527: if(pwmDuty > 69)
"527
[e $ ! > -> _pwmDuty `i -> 69 `i 89  ]
[; ;main.c: 528: {
"528
{
[; ;main.c: 529: pwmDuty--;
"529
[e -- _pwmDuty -> -> 1 `i `uc ]
"530
}
[e :U 89 ]
"531
}
[e :U 88 ]
"532
}
[e :U 85 ]
[; ;main.c: 530: }
[; ;main.c: 531: }
[; ;main.c: 532: }
[; ;main.c: 533: pwmInit();
"533
[e ( _pwmInit ..  ]
[; ;main.c: 534: PWMD1L = pwmDuty;
"534
[e = _PWMD1L _pwmDuty ]
"535
}
[; ;main.c: 535: }
[e $U 90  ]
"536
[e :U 83 ]
[; ;main.c: 536: else if(modeStep == 3)
[e $ ! == -> _modeStep `i -> 3 `i 91  ]
[; ;main.c: 537: {
"537
{
[; ;main.c: 538: showFlag = 1;
"538
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 539: RA4 = 0;
"539
[e = _RA4 -> -> 0 `i `b ]
[; ;main.c: 540: if(++count10s > 125)
"540
[e $ ! > =+ _count10s -> -> 1 `i `ui -> -> 125 `i `ui 92  ]
[; ;main.c: 541: {
"541
{
[; ;main.c: 542: count10s = 0;
"542
[e = _count10s -> -> 0 `i `ui ]
"543
}
[e :U 92 ]
[; ;main.c: 543: }
[; ;main.c: 544: if(count10s < 100)
"544
[e $ ! < _count10s -> -> 100 `i `ui 93  ]
[; ;main.c: 545: {
"545
{
[; ;main.c: 546: pwmInit();
"546
[e ( _pwmInit ..  ]
[; ;main.c: 547: PWMD1L= 139 + (workStep*20);
"547
[e = _PWMD1L -> + -> 139 `i * -> _workStep `i -> 20 `i `uc ]
"548
}
[; ;main.c: 548: }
[e $U 94  ]
"549
[e :U 93 ]
[; ;main.c: 549: else if(count10s < 125)
[e $ ! < _count10s -> -> 125 `i `ui 95  ]
[; ;main.c: 550: {
"550
{
[; ;main.c: 551: pwmStop();
"551
[e ( _pwmStop ..  ]
"552
}
[e :U 95 ]
"554
[e :U 94 ]
}
[; ;main.c: 552: }
[; ;main.c: 554: }
[e $U 96  ]
"555
[e :U 91 ]
[; ;main.c: 555: else
[; ;main.c: 556: {
"556
{
[; ;main.c: 557: pwmStop();
"557
[e ( _pwmStop ..  ]
[; ;main.c: 558: RA4 = 1;
"558
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 559: if(chrgFlag)
"559
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 97  ]
[; ;main.c: 560: {
"560
{
[; ;main.c: 561: showFlag = 1;
"561
[e = _showFlag -> -> 1 `i `uc ]
"562
}
[; ;main.c: 562: }
[e $U 98  ]
"563
[e :U 97 ]
[; ;main.c: 563: else
[; ;main.c: 564: {
"564
{
[; ;main.c: 565: showFlag = 0;
"565
[e = _showFlag -> -> 0 `i `uc ]
"566
}
[e :U 98 ]
"567
}
[e :U 96 ]
[e :U 90 ]
[e :U 82 ]
"568
}
[e :U 80 ]
[e :U 77 ]
[; ;main.c: 566: }
[; ;main.c: 567: }
[; ;main.c: 568: }
[; ;main.c: 571: }
"571
[e :UE 74 ]
}
"574
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"575
{
[; ;main.c: 574: void chrgCtr()
[; ;main.c: 575: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 576: if(PORTA & 0X80)
"576
[e $ ! != & -> _PORTA `i -> 128 `i -> 0 `i 100  ]
[; ;main.c: 577: {
"577
{
[; ;main.c: 579: workStep = 0;
"579
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 580: modeStep = 0;
"580
[e = _modeStep -> -> 0 `i `uc ]
[; ;main.c: 581: lowBatFlag = 0;
"581
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 582: if(chrgFlag == 0)
"582
[e $ ! == -> _chrgFlag `i -> 0 `i 101  ]
[; ;main.c: 583: {
"583
{
[; ;main.c: 584: chrgFlag = 1;
"584
[e = _chrgFlag -> -> 1 `i `uc ]
"586
}
[e :U 101 ]
[; ;main.c: 586: }
[; ;main.c: 587: if(showBatValue >= 99)
"587
[e $ ! >= -> _showBatValue `i -> 99 `i 102  ]
[; ;main.c: 588: {
"588
{
[; ;main.c: 589: chrgFullFlag = 1;
"589
[e = _chrgFullFlag -> -> 1 `i `uc ]
"590
}
[e :U 102 ]
[; ;main.c: 590: }
[; ;main.c: 591: if(R_AIN2_DATA > 1526)
"591
[e $ ! > _R_AIN2_DATA -> -> 1526 `i `ui 103  ]
[; ;main.c: 592: {
"592
{
[; ;main.c: 593: if(chrgMaxData >= R_AIN2_DATA)
"593
[e $ ! >= _chrgMaxData _R_AIN2_DATA 104  ]
[; ;main.c: 594: {
"594
{
[; ;main.c: 595: if(++count30s > 3000)
"595
[e $ ! > =+ _count30s -> -> 1 `i `ui -> -> 3000 `i `ui 105  ]
[; ;main.c: 596: {
"596
{
[; ;main.c: 597: count30s = 0;
"597
[e = _count30s -> -> 0 `i `ui ]
[; ;main.c: 598: if(showBatValue < 99)
"598
[e $ ! < -> _showBatValue `i -> 99 `i 106  ]
[; ;main.c: 599: {
"599
{
[; ;main.c: 600: showBatValue++;
"600
[e ++ _showBatValue -> -> 1 `i `uc ]
"601
}
[e :U 106 ]
"602
}
[e :U 105 ]
"603
}
[; ;main.c: 601: }
[; ;main.c: 602: }
[; ;main.c: 603: }
[e $U 107  ]
"604
[e :U 104 ]
[; ;main.c: 604: else
[; ;main.c: 605: {
"605
{
[; ;main.c: 606: chrgMaxData = R_AIN2_DATA;
"606
[e = _chrgMaxData _R_AIN2_DATA ]
[; ;main.c: 607: count30s = 0;
"607
[e = _count30s -> -> 0 `i `ui ]
"608
}
[e :U 107 ]
"609
}
[e :U 103 ]
"610
}
[; ;main.c: 608: }
[; ;main.c: 609: }
[; ;main.c: 610: }
[e $U 108  ]
"611
[e :U 100 ]
[; ;main.c: 611: else
[; ;main.c: 612: {
"612
{
[; ;main.c: 613: chrgMaxData = 0;
"613
[e = _chrgMaxData -> -> 0 `i `ui ]
[; ;main.c: 614: count30s = 0;
"614
[e = _count30s -> -> 0 `i `ui ]
[; ;main.c: 615: chrgFullFlag = 0;
"615
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 616: chrgFlag = 0;
"616
[e = _chrgFlag -> -> 0 `i `uc ]
"624
}
[e :U 108 ]
[; ;main.c: 624: }
[; ;main.c: 625: }
"625
[e :UE 99 ]
}
"627
[v _showCtr `(v ~T0 @X0 1 ef ]
"628
{
[; ;main.c: 627: void showCtr()
[; ;main.c: 628: {
[e :U _showCtr ]
[f ]
[; ;main.c: 630: if(showBatValue >= 99)
"630
[e $ ! >= -> _showBatValue `i -> 99 `i 110  ]
[; ;main.c: 631: {
"631
{
[; ;main.c: 632: showNumAShi = 0x6F;
"632
[e = _showNumAShi -> -> 111 `i `uc ]
[; ;main.c: 633: showNumAge = 0x6F;
"633
[e = _showNumAge -> -> 111 `i `uc ]
"634
}
[; ;main.c: 634: }
[e $U 111  ]
"635
[e :U 110 ]
[; ;main.c: 635: else
[; ;main.c: 636: {
"636
{
[; ;main.c: 637: showNumAShi = numArray[(showBatValue / 10)];
"637
[e = _showNumAShi *U + &U _numArray * -> -> / -> _showBatValue `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 638: showNumAge = numArray[(showBatValue % 10)];
"638
[e = _showNumAge *U + &U _numArray * -> -> % -> _showBatValue `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"639
}
[e :U 111 ]
[; ;main.c: 639: }
[; ;main.c: 640: if(chrgFlag)
"640
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 112  ]
[; ;main.c: 641: {
"641
{
[; ;main.c: 642: if(showBatValue >= 99)
"642
[e $ ! >= -> _showBatValue `i -> 99 `i 113  ]
[; ;main.c: 643: {
"643
{
[; ;main.c: 644: showNumBShi = 0x39;
"644
[e = _showNumBShi -> -> 57 `i `uc ]
[; ;main.c: 645: showNumBge = 0x0F;
"645
[e = _showNumBge -> -> 15 `i `uc ]
"646
}
[; ;main.c: 646: }
[e $U 114  ]
"647
[e :U 113 ]
[; ;main.c: 647: else
[; ;main.c: 648: {
"648
{
[; ;main.c: 649: if(++count2s >= 50)
"649
[e $ ! >= -> =+ _count2s -> -> 1 `i `uc `i -> 50 `i 115  ]
[; ;main.c: 650: {
"650
{
[; ;main.c: 651: count2s = 0;
"651
[e = _count2s -> -> 0 `i `uc ]
[; ;main.c: 652: if(++chrgStep >= 8)
"652
[e $ ! >= -> =+ _chrgStep -> -> 1 `i `uc `i -> 8 `i 116  ]
[; ;main.c: 653: {
"653
{
[; ;main.c: 654: chrgStep = 0;
"654
[e = _chrgStep -> -> 0 `i `uc ]
"655
}
[e :U 116 ]
"656
}
[e :U 115 ]
[; ;main.c: 655: }
[; ;main.c: 656: }
[; ;main.c: 657: switch(chrgStep)
"657
[e $U 118  ]
[; ;main.c: 658: {
"658
{
[; ;main.c: 659: case 0:
"659
[e :U 119 ]
[; ;main.c: 660: showNumBShi = 0x01;
"660
[e = _showNumBShi -> -> 1 `i `uc ]
[; ;main.c: 661: showNumBge = 0x00;
"661
[e = _showNumBge -> -> 0 `i `uc ]
[; ;main.c: 662: break;
"662
[e $U 117  ]
[; ;main.c: 663: case 1:
"663
[e :U 120 ]
[; ;main.c: 664: showNumBShi = 0x01;
"664
[e = _showNumBShi -> -> 1 `i `uc ]
[; ;main.c: 665: showNumBge = 0x01;
"665
[e = _showNumBge -> -> 1 `i `uc ]
[; ;main.c: 666: break;
"666
[e $U 117  ]
[; ;main.c: 667: case 2:
"667
[e :U 121 ]
[; ;main.c: 668: showNumBShi = 0x01;
"668
[e = _showNumBShi -> -> 1 `i `uc ]
[; ;main.c: 669: showNumBge = 0x03;
"669
[e = _showNumBge -> -> 3 `i `uc ]
[; ;main.c: 670: break;
"670
[e $U 117  ]
[; ;main.c: 671: case 3:
"671
[e :U 122 ]
[; ;main.c: 672: showNumBShi = 0x01;
"672
[e = _showNumBShi -> -> 1 `i `uc ]
[; ;main.c: 673: showNumBge = 0x07;
"673
[e = _showNumBge -> -> 7 `i `uc ]
[; ;main.c: 674: break;
"674
[e $U 117  ]
[; ;main.c: 675: case 4:
"675
[e :U 123 ]
[; ;main.c: 676: showNumBShi = 0x01;
"676
[e = _showNumBShi -> -> 1 `i `uc ]
[; ;main.c: 677: showNumBge = 0x0F;
"677
[e = _showNumBge -> -> 15 `i `uc ]
[; ;main.c: 678: break;
"678
[e $U 117  ]
[; ;main.c: 679: case 5:
"679
[e :U 124 ]
[; ;main.c: 680: showNumBShi = 0x09;
"680
[e = _showNumBShi -> -> 9 `i `uc ]
[; ;main.c: 681: showNumBge = 0x0F;
"681
[e = _showNumBge -> -> 15 `i `uc ]
[; ;main.c: 682: break;
"682
[e $U 117  ]
[; ;main.c: 683: case 6:
"683
[e :U 125 ]
[; ;main.c: 684: showNumBShi = 0x19;
"684
[e = _showNumBShi -> -> 25 `i `uc ]
[; ;main.c: 685: showNumBge = 0x0F;
"685
[e = _showNumBge -> -> 15 `i `uc ]
[; ;main.c: 686: break;
"686
[e $U 117  ]
[; ;main.c: 687: case 7:
"687
[e :U 126 ]
[; ;main.c: 688: showNumBShi = 0x39;
"688
[e = _showNumBShi -> -> 57 `i `uc ]
[; ;main.c: 689: showNumBge = 0x0F;
"689
[e = _showNumBge -> -> 15 `i `uc ]
[; ;main.c: 690: break;
"690
[e $U 117  ]
[; ;main.c: 691: case 8:
"691
[e :U 127 ]
[; ;main.c: 692: showNumBShi = 0x79;
"692
[e = _showNumBShi -> -> 121 `i `uc ]
[; ;main.c: 693: showNumBge = 0x0F;
"693
[e = _showNumBge -> -> 15 `i `uc ]
[; ;main.c: 694: break;
"694
[e $U 117  ]
[; ;main.c: 695: case 9:
"695
[e :U 128 ]
[; ;main.c: 696: showNumBShi = 0x79;
"696
[e = _showNumBShi -> -> 121 `i `uc ]
[; ;main.c: 697: showNumBge = 0x4F;
"697
[e = _showNumBge -> -> 79 `i `uc ]
[; ;main.c: 698: break;
"698
[e $U 117  ]
[; ;main.c: 699: default:
"699
[e :U 129 ]
[; ;main.c: 700: break;
"700
[e $U 117  ]
"701
}
[; ;main.c: 701: }
[e $U 117  ]
"657
[e :U 118 ]
[e [\ _chrgStep , $ -> -> 0 `i `uc 119
 , $ -> -> 1 `i `uc 120
 , $ -> -> 2 `i `uc 121
 , $ -> -> 3 `i `uc 122
 , $ -> -> 4 `i `uc 123
 , $ -> -> 5 `i `uc 124
 , $ -> -> 6 `i `uc 125
 , $ -> -> 7 `i `uc 126
 , $ -> -> 8 `i `uc 127
 , $ -> -> 9 `i `uc 128
 129 ]
"701
[e :U 117 ]
"703
}
[e :U 114 ]
"705
}
[; ;main.c: 703: }
[; ;main.c: 705: }
[e $U 130  ]
"706
[e :U 112 ]
[; ;main.c: 706: else
[; ;main.c: 707: {
"707
{
[; ;main.c: 708: showNumBShi = numArray[workStep/10];
"708
[e = _showNumBShi *U + &U _numArray * -> -> / -> _workStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 709: showNumBge = numArray[workStep%10];
"709
[e = _showNumBge *U + &U _numArray * -> -> % -> _workStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"710
}
[e :U 130 ]
[; ;main.c: 710: }
[; ;main.c: 711: }
"711
[e :UE 109 ]
}
"713
[v _checkOutA `(v ~T0 @X0 1 ef ]
"714
{
[; ;main.c: 713: void checkOutA()
[; ;main.c: 714: {
[e :U _checkOutA ]
[f ]
[; ;main.c: 716: test_adc = ADC_Sample(3, 5);
"716
[e = _test_adc ( _ADC_Sample (2 , -> -> 3 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 717: if (0xA5 == test_adc)
"717
[e $ ! == -> 165 `i -> _test_adc `i 132  ]
[; ;main.c: 718: {
"718
{
[; ;main.c: 719: R_AIN6_DATA = adresult;
"719
[e = _R_AIN6_DATA _adresult ]
[; ;main.c: 720: if(R_AIN6_DATA > 1200)
"720
[e $ ! > _R_AIN6_DATA -> -> 1200 `i `ui 133  ]
[; ;main.c: 721: {
"721
{
[; ;main.c: 722: if(++overTime > 10)
"722
[e $ ! > -> =+ _overTime -> -> 1 `i `uc `i -> 10 `i 134  ]
[; ;main.c: 723: {
"723
{
[; ;main.c: 724: overTime = 0;
"724
[e = _overTime -> -> 0 `i `uc ]
[; ;main.c: 725: workStep = 0;
"725
[e = _workStep -> -> 0 `i `uc ]
"726
}
[e :U 134 ]
"727
}
[; ;main.c: 726: }
[; ;main.c: 727: }
[e $U 135  ]
"728
[e :U 133 ]
[; ;main.c: 728: else
[; ;main.c: 729: {
"729
{
[; ;main.c: 730: overTime = 0;
"730
[e = _overTime -> -> 0 `i `uc ]
"731
}
[e :U 135 ]
"732
}
[e :U 132 ]
[; ;main.c: 731: }
[; ;main.c: 732: }
[; ;main.c: 733: }
"733
[e :UE 131 ]
}
"736
[v _checkBatValue `(v ~T0 @X0 1 ef ]
"737
{
[; ;main.c: 736: void checkBatValue()
[; ;main.c: 737: {
[e :U _checkBatValue ]
[f ]
[; ;main.c: 739: test_adc = ADC_Sample(2, 5);
"739
[e = _test_adc ( _ADC_Sample (2 , -> -> 2 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 740: if (0xA5 == test_adc)
"740
[e $ ! == -> 165 `i -> _test_adc `i 137  ]
[; ;main.c: 741: {
"741
{
[; ;main.c: 742: R_AIN2_DATA = adresult;
"742
[e = _R_AIN2_DATA _adresult ]
[; ;main.c: 743: if(R_AIN2_DATA < 1220)
"743
[e $ ! < _R_AIN2_DATA -> -> 1220 `i `ui 138  ]
[; ;main.c: 744: {
"744
{
[; ;main.c: 745: batValue = 0;
"745
[e = _batValue -> -> 0 `i `ui ]
[; ;main.c: 746: if(++lowBatTime > 200)
"746
[e $ ! > -> =+ _lowBatTime -> -> 1 `i `uc `i -> 200 `i 139  ]
[; ;main.c: 747: {
"747
{
[; ;main.c: 748: lowBatTime = 0;
"748
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 749: count900s = 0;
"749
[e = _count900s -> -> 0 `i `uc ]
[; ;main.c: 750: modeStep = 0;
"750
[e = _modeStep -> -> 0 `i `uc ]
[; ;main.c: 751: workStep = 0;
"751
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 752: count900s = 0;
"752
[e = _count900s -> -> 0 `i `uc ]
[; ;main.c: 753: lowBatFlag = 1;
"753
[e = _lowBatFlag -> -> 1 `i `uc ]
[; ;main.c: 754: showBatValue = 0;
"754
[e = _showBatValue -> -> 0 `i `uc ]
"755
}
[e :U 139 ]
"756
}
[; ;main.c: 755: }
[; ;main.c: 756: }
[e $U 140  ]
"757
[e :U 138 ]
[; ;main.c: 757: else if(R_AIN2_DATA < 1330)
[e $ ! < _R_AIN2_DATA -> -> 1330 `i `ui 141  ]
[; ;main.c: 758: {
"758
{
[; ;main.c: 759: batValue = (R_AIN2_DATA - 1220)/11;
"759
[e = _batValue / - _R_AIN2_DATA -> -> 1220 `i `ui -> -> 11 `i `ui ]
[; ;main.c: 760: lowBatTime = 0;
"760
[e = _lowBatTime -> -> 0 `i `uc ]
"761
}
[; ;main.c: 761: }
[e $U 142  ]
"762
[e :U 141 ]
[; ;main.c: 762: else if(R_AIN2_DATA < 1390)
[e $ ! < _R_AIN2_DATA -> -> 1390 `i `ui 143  ]
[; ;main.c: 763: {
"763
{
[; ;main.c: 764: batValue = 10 + ((R_AIN2_DATA - 1330)/3);
"764
[e = _batValue + -> -> 10 `i `ui / - _R_AIN2_DATA -> -> 1330 `i `ui -> -> 3 `i `ui ]
"765
}
[; ;main.c: 765: }
[e $U 144  ]
"766
[e :U 143 ]
[; ;main.c: 766: else
[; ;main.c: 767: {
"767
{
[; ;main.c: 768: batValue = 30 + ((R_AIN2_DATA - 1390)/2);
"768
[e = _batValue + -> -> 30 `i `ui / - _R_AIN2_DATA -> -> 1390 `i `ui -> -> 2 `i `ui ]
[; ;main.c: 769: if(batValue >= 100)
"769
[e $ ! >= _batValue -> -> 100 `i `ui 145  ]
[; ;main.c: 770: {
"770
{
[; ;main.c: 771: batValue = 100;
"771
[e = _batValue -> -> 100 `i `ui ]
"772
}
[e :U 145 ]
"773
}
[e :U 144 ]
[e :U 142 ]
[e :U 140 ]
"775
}
[e :U 137 ]
[; ;main.c: 772: }
[; ;main.c: 773: }
[; ;main.c: 775: }
[; ;main.c: 777: }
"777
[e :UE 136 ]
}
"780
[v _taskSecond `(v ~T0 @X0 1 ef ]
"781
{
[; ;main.c: 780: void taskSecond()
[; ;main.c: 781: {
[e :U _taskSecond ]
[f ]
[; ;main.c: 782: if(wait30s == 1)
"782
[e $ ! == _wait30s -> -> 1 `i `ui 147  ]
[; ;main.c: 783: {
"783
{
[; ;main.c: 784: wait30s = 0;
"784
[e = _wait30s -> -> 0 `i `ui ]
[; ;main.c: 785: if(modeStep > 0)
"785
[e $ ! > -> _modeStep `i -> 0 `i 148  ]
[; ;main.c: 786: {
"786
{
[; ;main.c: 787: if(++count900s > 30)
"787
[e $ ! > -> =+ _count900s -> -> 1 `i `uc `i -> 30 `i 149  ]
[; ;main.c: 788: {
"788
{
[; ;main.c: 789: count900s = 0;
"789
[e = _count900s -> -> 0 `i `uc ]
[; ;main.c: 790: modeStep = 0;
"790
[e = _modeStep -> -> 0 `i `uc ]
[; ;main.c: 791: workStep = 0;
"791
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 792: count900s = 0;
"792
[e = _count900s -> -> 0 `i `uc ]
"793
}
[e :U 149 ]
"794
}
[; ;main.c: 793: }
[; ;main.c: 794: }
[e $U 150  ]
"795
[e :U 148 ]
[; ;main.c: 795: else
[; ;main.c: 796: {
"796
{
[; ;main.c: 797: count900s = 0;
"797
[e = _count900s -> -> 0 `i `uc ]
"798
}
[e :U 150 ]
[; ;main.c: 798: }
[; ;main.c: 800: if(chrgFlag)
"800
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 151  ]
[; ;main.c: 801: {
"801
{
[; ;main.c: 802: if(++showBatValueAddTime > 4 && showBatValue < 99)
"802
[e $ ! && > -> =+ _showBatValueAddTime -> -> 1 `i `uc `i -> 4 `i < -> _showBatValue `i -> 99 `i 152  ]
[; ;main.c: 803: {
"803
{
[; ;main.c: 804: showBatValueAddTime = 0;
"804
[e = _showBatValueAddTime -> -> 0 `i `uc ]
[; ;main.c: 805: showBatValue++;
"805
[e ++ _showBatValue -> -> 1 `i `uc ]
"806
}
[e :U 152 ]
[; ;main.c: 806: }
[; ;main.c: 807: if(showBatValue < batValue)
"807
[e $ ! < -> _showBatValue `ui _batValue 153  ]
[; ;main.c: 808: {
"808
{
[; ;main.c: 809: if(++chrgTime > 3)
"809
[e $ ! > -> =+ _chrgTime -> -> 1 `i `uc `i -> 3 `i 154  ]
[; ;main.c: 810: {
"810
{
[; ;main.c: 811: chrgTime = 0;
"811
[e = _chrgTime -> -> 0 `i `uc ]
[; ;main.c: 812: showBatValueAddTime = 0;
"812
[e = _showBatValueAddTime -> -> 0 `i `uc ]
[; ;main.c: 813: showBatValue++;
"813
[e ++ _showBatValue -> -> 1 `i `uc ]
"815
}
[e :U 154 ]
"816
}
[; ;main.c: 815: }
[; ;main.c: 816: }
[e $U 155  ]
"817
[e :U 153 ]
[; ;main.c: 817: else
[; ;main.c: 818: {
"818
{
[; ;main.c: 819: chrgTime = 0;
"819
[e = _chrgTime -> -> 0 `i `uc ]
"820
}
[e :U 155 ]
"821
}
[e :U 151 ]
"822
}
[e :U 147 ]
[; ;main.c: 820: }
[; ;main.c: 821: }
[; ;main.c: 822: }
[; ;main.c: 823: }
"823
[e :UE 146 ]
}
"826
[v _batCtr `(v ~T0 @X0 1 ef ]
"827
{
[; ;main.c: 826: void batCtr()
[; ;main.c: 827: {
[e :U _batCtr ]
[f ]
[; ;main.c: 828: if(chrgFlag == 0)
"828
[e $ ! == -> _chrgFlag `i -> 0 `i 157  ]
[; ;main.c: 829: {
"829
{
[; ;main.c: 830: if(batValue > 40)
"830
[e $ ! > _batValue -> -> 40 `i `ui 158  ]
[; ;main.c: 831: {
"831
{
[; ;main.c: 832: batSubMaxTime = 4500;
"832
[e = _batSubMaxTime -> -> 4500 `i `ui ]
"833
}
[; ;main.c: 833: }
[e $U 159  ]
"834
[e :U 158 ]
[; ;main.c: 834: else if(batValue > 25)
[e $ ! > _batValue -> -> 25 `i `ui 160  ]
[; ;main.c: 835: {
"835
{
[; ;main.c: 836: batSubMaxTime = 2500;
"836
[e = _batSubMaxTime -> -> 2500 `i `ui ]
"837
}
[; ;main.c: 837: }
[e $U 161  ]
"838
[e :U 160 ]
[; ;main.c: 838: else
[; ;main.c: 839: {
"839
{
[; ;main.c: 840: batSubMaxTime = 1000;
"840
[e = _batSubMaxTime -> -> 1000 `i `ui ]
"841
}
[e :U 161 ]
[e :U 159 ]
[; ;main.c: 841: }
[; ;main.c: 842: if(showBatValue > batValue)
"842
[e $ ! > -> _showBatValue `ui _batValue 162  ]
[; ;main.c: 843: {
"843
{
[; ;main.c: 844: if(++batSubCount > batSubMaxTime)
"844
[e $ ! > =+ _batSubCount -> -> 1 `i `ui _batSubMaxTime 163  ]
[; ;main.c: 845: {
"845
{
[; ;main.c: 846: batSubCount = 0;
"846
[e = _batSubCount -> -> 0 `i `ui ]
[; ;main.c: 847: showBatValue--;
"847
[e -- _showBatValue -> -> 1 `i `uc ]
"848
}
[e :U 163 ]
"850
}
[; ;main.c: 848: }
[; ;main.c: 850: }
[e $U 164  ]
"851
[e :U 162 ]
[; ;main.c: 851: else
[; ;main.c: 852: {
"852
{
[; ;main.c: 853: batSubCount = 0;
"853
[e = _batSubCount -> -> 0 `i `ui ]
"854
}
[e :U 164 ]
[; ;main.c: 854: }
[; ;main.c: 855: if(showBatValue == 0)
"855
[e $ ! == -> _showBatValue `i -> 0 `i 165  ]
[; ;main.c: 856: {
"856
{
[; ;main.c: 857: count900s = 0;
"857
[e = _count900s -> -> 0 `i `uc ]
[; ;main.c: 858: modeStep = 0;
"858
[e = _modeStep -> -> 0 `i `uc ]
[; ;main.c: 859: workStep = 0;
"859
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 860: count900s = 0;
"860
[e = _count900s -> -> 0 `i `uc ]
[; ;main.c: 861: lowBatFlag = 1;
"861
[e = _lowBatFlag -> -> 1 `i `uc ]
"862
}
[e :U 165 ]
"863
}
[e :U 157 ]
[; ;main.c: 862: }
[; ;main.c: 863: }
[; ;main.c: 865: }
"865
[e :UE 156 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"872
[v _main `(v ~T0 @X0 1 ef ]
"873
{
[; ;main.c: 872: void main()
[; ;main.c: 873: {
[e :U _main ]
[f ]
[; ;main.c: 874: Init_System();
"874
[e ( _Init_System ..  ]
[; ;main.c: 876: firstTime = 200;
"876
[e = _firstTime -> -> 200 `i `uc ]
[; ;main.c: 877: while(1)
"877
[e :U 168 ]
[; ;main.c: 878: {
"878
{
[; ;main.c: 880: if(B_MainLoop)
"880
[e $ ! _B_MainLoop 170  ]
[; ;main.c: 881: {
"881
{
[; ;main.c: 882: B_MainLoop = 0;
"882
[e = _B_MainLoop -> -> 0 `i `b ]
[; ;main.c: 883: asm("clrwdt");
"883
[; <" clrwdt ;# ">
[; ;main.c: 884: if(chrgFlag == 0)
"884
[e $ ! == -> _chrgFlag `i -> 0 `i 171  ]
[; ;main.c: 885: {
"885
{
[; ;main.c: 886: keyCtr();
"886
[e ( _keyCtr ..  ]
"887
}
[e :U 171 ]
[; ;main.c: 887: }
[; ;main.c: 888: checkBatValue();
"888
[e ( _checkBatValue ..  ]
[; ;main.c: 889: workCtr();
"889
[e ( _workCtr ..  ]
[; ;main.c: 890: chrgCtr();
"890
[e ( _chrgCtr ..  ]
[; ;main.c: 891: batCtr();
"891
[e ( _batCtr ..  ]
[; ;main.c: 892: taskSecond();
"892
[e ( _taskSecond ..  ]
[; ;main.c: 893: if(firstTime == 0)
"893
[e $ ! == -> _firstTime `i -> 0 `i 172  ]
[; ;main.c: 894: {
"894
{
[; ;main.c: 895: showCtr();
"895
[e ( _showCtr ..  ]
"896
}
[e :U 172 ]
[; ;main.c: 896: }
[; ;main.c: 897: checkOutA();
"897
[e ( _checkOutA ..  ]
"900
}
[e :U 170 ]
"901
}
[e :U 167 ]
"877
[e $U 168  ]
[e :U 169 ]
[; ;main.c: 900: }
[; ;main.c: 901: }
[; ;main.c: 902: }
"902
[e :UE 166 ]
}
