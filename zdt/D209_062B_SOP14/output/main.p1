Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"95 C:\mcuproject\scm\zdt\D209_062B_SOP14\main.c
[v _Init_System `(v ~T0 @X0 0 ef ]
"96
[v _AD_Init `(v ~T0 @X0 0 ef ]
"103
[v _checkOutA `(v ~T0 @X0 0 ef ]
"102
[v _chrgCtr `(v ~T0 @X0 0 ef ]
"104
[v _checkBatAD `(v ~T0 @X0 0 ef ]
"110
[v _setBatStep `(v ~T0 @X0 0 ef ]
"106
[v _keyCtr `(v ~T0 @X0 0 ef ]
"107
[v _workCtr `(v ~T0 @X0 0 ef ]
"108
[v _ledCtr `(v ~T0 @X0 0 ef ]
"97
[v _Sleep_Mode `(v ~T0 @X0 0 ef ]
"99
[v _pwmStop `(v ~T0 @X0 0 ef ]
"98
[v _pwmInit `(v ~T0 @X0 0 ef ]
"92
[v _ADC_Sample `(uc ~T0 @X0 0 ef2`uc`uc ]
[v F479 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF479 ~T0 @X0 0 e ]
[p i __delay ]
"4 C:\mcuproject\scm\zdt\D209_062B_SOP14\main.c
[p n 752 ]
"5
[p n 373 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\SC8P062BD.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;SC8P062BD.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;SC8P062BD.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;SC8P062BD.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;SC8P062BD.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;SC8P062BD.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;SC8P062BD.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;SC8P062BD.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;SC8P062BD.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMPCON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 20: volatile unsigned char CMPCON0 @ 0x0F;
"21
[v _CMPCON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;SC8P062BD.h: 21: volatile unsigned char CMPCON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;SC8P062BD.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;SC8P062BD.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;SC8P062BD.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P062BD.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;SC8P062BD.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;SC8P062BD.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;SC8P062BD.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;SC8P062BD.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;SC8P062BD.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;SC8P062BD.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;SC8P062BD.h: 44: volatile unsigned char ANSEL0 @ 0x93;
"45
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;SC8P062BD.h: 45: volatile unsigned char ANSEL1 @ 0x94;
"46
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;SC8P062BD.h: 46: volatile unsigned char ADCON0 @ 0x95;
"47
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;SC8P062BD.h: 47: volatile unsigned char ADCON1 @ 0x96;
"48
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 48: volatile unsigned char ADRESL @ 0x98;
"49
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 49: volatile unsigned char ADRESH @ 0x99;
"50
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 50: volatile unsigned char PWMD2L @ 0x9B;
"51
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 51: volatile unsigned char PWMD3L @ 0x9C;
"52
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 52: volatile unsigned char PWM23DT @ 0x9D;
"53
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 53: volatile unsigned char PWMD23H @ 0x9E;
"55
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 55: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"56
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 56: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"57
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 57: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"58
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 58: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"59
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 59: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"60
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 60: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"61
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 61: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"62
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 62: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"65
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 65: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"66
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 66: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"67
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 67: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"68
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 68: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"69
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 69: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"70
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 70: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"71
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 71: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"72
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 72: volatile bit C @ ((unsigned)&STATUS*8)+0;
"75
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P062BD.h: 75: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"76
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P062BD.h: 76: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"77
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P062BD.h: 77: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"78
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P062BD.h: 78: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"79
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P062BD.h: 79: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"80
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P062BD.h: 80: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"81
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P062BD.h: 81: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"82
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P062BD.h: 82: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"85
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;SC8P062BD.h: 85: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"86
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;SC8P062BD.h: 86: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"87
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;SC8P062BD.h: 87: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"88
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;SC8P062BD.h: 88: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"89
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;SC8P062BD.h: 89: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"90
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;SC8P062BD.h: 90: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"91
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;SC8P062BD.h: 91: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"92
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;SC8P062BD.h: 92: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"95
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;SC8P062BD.h: 95: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"96
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;SC8P062BD.h: 96: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"97
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;SC8P062BD.h: 97: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"98
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;SC8P062BD.h: 98: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"99
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;SC8P062BD.h: 99: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"100
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;SC8P062BD.h: 100: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"101
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;SC8P062BD.h: 101: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"104
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;SC8P062BD.h: 104: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"105
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;SC8P062BD.h: 105: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"106
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;SC8P062BD.h: 106: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"107
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;SC8P062BD.h: 107: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"108
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;SC8P062BD.h: 108: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"109
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;SC8P062BD.h: 109: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"110
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;SC8P062BD.h: 110: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"111
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P062BD.h: 111: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"114
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;SC8P062BD.h: 114: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"115
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;SC8P062BD.h: 115: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"116
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;SC8P062BD.h: 116: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"117
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;SC8P062BD.h: 117: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"118
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P062BD.h: 118: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"119
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;SC8P062BD.h: 119: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"120
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;SC8P062BD.h: 120: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"121
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P062BD.h: 121: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"124
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;SC8P062BD.h: 124: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"125
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;SC8P062BD.h: 125: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"126
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;SC8P062BD.h: 126: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"127
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;SC8P062BD.h: 127: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"128
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;SC8P062BD.h: 128: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"129
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;SC8P062BD.h: 129: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"130
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;SC8P062BD.h: 130: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"131
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;SC8P062BD.h: 131: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"134
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;SC8P062BD.h: 134: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"135
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;SC8P062BD.h: 135: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"136
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;SC8P062BD.h: 136: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"137
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;SC8P062BD.h: 137: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"138
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;SC8P062BD.h: 138: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"139
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;SC8P062BD.h: 139: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"140
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;SC8P062BD.h: 140: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"143
[v _CMPIF `Vb ~T0 @X0 1 e@109 ]
[; ;SC8P062BD.h: 143: volatile bit CMPIF @ ((unsigned)&PIR1*8)+5;
"144
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;SC8P062BD.h: 144: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"145
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;SC8P062BD.h: 145: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"146
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;SC8P062BD.h: 146: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"147
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;SC8P062BD.h: 147: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"150
[v _CMPIE `Vb ~T0 @X0 1 e@117 ]
[; ;SC8P062BD.h: 150: volatile bit CMPIE @ ((unsigned)&PIE1*8)+5;
"151
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;SC8P062BD.h: 151: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"152
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;SC8P062BD.h: 152: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"153
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;SC8P062BD.h: 153: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"154
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;SC8P062BD.h: 154: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"157
[v _CMPEN `Vb ~T0 @X0 1 e@127 ]
[; ;SC8P062BD.h: 157: volatile bit CMPEN @ ((unsigned)&CMPCON0*8)+7;
"158
[v _CMPPS `Vb ~T0 @X0 1 e@126 ]
[; ;SC8P062BD.h: 158: volatile bit CMPPS @ ((unsigned)&CMPCON0*8)+6;
"159
[v _CMPNS2 `Vb ~T0 @X0 1 e@125 ]
[; ;SC8P062BD.h: 159: volatile bit CMPNS2 @ ((unsigned)&CMPCON0*8)+5;
"160
[v _CMPNS1 `Vb ~T0 @X0 1 e@124 ]
[; ;SC8P062BD.h: 160: volatile bit CMPNS1 @ ((unsigned)&CMPCON0*8)+4;
"161
[v _CMPNS0 `Vb ~T0 @X0 1 e@123 ]
[; ;SC8P062BD.h: 161: volatile bit CMPNS0 @ ((unsigned)&CMPCON0*8)+3;
"162
[v _CMPNV `Vb ~T0 @X0 1 e@122 ]
[; ;SC8P062BD.h: 162: volatile bit CMPNV @ ((unsigned)&CMPCON0*8)+2;
"163
[v _CMPOUT `Vb ~T0 @X0 1 e@121 ]
[; ;SC8P062BD.h: 163: volatile bit CMPOUT @ ((unsigned)&CMPCON0*8)+1;
"164
[v _CMPOEN `Vb ~T0 @X0 1 e@120 ]
[; ;SC8P062BD.h: 164: volatile bit CMPOEN @ ((unsigned)&CMPCON0*8)+0;
"167
[v _CMPIM `Vb ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 167: volatile bit CMPIM @ ((unsigned)&CMPCON1*8)+7;
"168
[v _AN_EN `Vb ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 168: volatile bit AN_EN @ ((unsigned)&CMPCON1*8)+6;
"169
[v _RBIAS_H `Vb ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 169: volatile bit RBIAS_H @ ((unsigned)&CMPCON1*8)+5;
"170
[v _RBIAS_L `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P062BD.h: 170: volatile bit RBIAS_L @ ((unsigned)&CMPCON1*8)+4;
"171
[v _LVDS3 `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P062BD.h: 171: volatile bit LVDS3 @ ((unsigned)&CMPCON1*8)+3;
"172
[v _LVDS2 `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P062BD.h: 172: volatile bit LVDS2 @ ((unsigned)&CMPCON1*8)+2;
"173
[v _LVDS1 `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 173: volatile bit LVDS1 @ ((unsigned)&CMPCON1*8)+1;
"174
[v _LVDS0 `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P062BD.h: 174: volatile bit LVDS0 @ ((unsigned)&CMPCON1*8)+0;
"177
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;SC8P062BD.h: 177: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"178
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 178: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"179
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 179: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"180
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 180: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"181
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 181: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"182
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;SC8P062BD.h: 182: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"183
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 183: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"184
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 184: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"187
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;SC8P062BD.h: 187: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"188
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;SC8P062BD.h: 188: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"189
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;SC8P062BD.h: 189: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"190
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;SC8P062BD.h: 190: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"193
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;SC8P062BD.h: 193: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"194
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P062BD.h: 194: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"195
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;SC8P062BD.h: 195: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"196
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;SC8P062BD.h: 196: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"197
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;SC8P062BD.h: 197: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"198
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;SC8P062BD.h: 198: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"199
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;SC8P062BD.h: 199: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"200
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;SC8P062BD.h: 200: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"203
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;SC8P062BD.h: 203: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"204
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;SC8P062BD.h: 204: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"205
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;SC8P062BD.h: 205: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"206
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;SC8P062BD.h: 206: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"207
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;SC8P062BD.h: 207: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"208
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;SC8P062BD.h: 208: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"211
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;SC8P062BD.h: 211: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"212
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;SC8P062BD.h: 212: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"213
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;SC8P062BD.h: 213: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"214
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;SC8P062BD.h: 214: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"215
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;SC8P062BD.h: 215: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"216
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;SC8P062BD.h: 216: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"219
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;SC8P062BD.h: 219: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"220
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;SC8P062BD.h: 220: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"221
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;SC8P062BD.h: 221: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"222
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;SC8P062BD.h: 222: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"223
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;SC8P062BD.h: 223: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"226
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;SC8P062BD.h: 226: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"227
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;SC8P062BD.h: 227: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"228
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;SC8P062BD.h: 228: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"229
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;SC8P062BD.h: 229: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"232
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;SC8P062BD.h: 232: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"233
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;SC8P062BD.h: 233: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"234
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;SC8P062BD.h: 234: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"235
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;SC8P062BD.h: 235: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"236
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;SC8P062BD.h: 236: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"237
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;SC8P062BD.h: 237: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"240
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;SC8P062BD.h: 240: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"241
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;SC8P062BD.h: 241: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"242
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;SC8P062BD.h: 242: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"243
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;SC8P062BD.h: 243: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"244
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;SC8P062BD.h: 244: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"245
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;SC8P062BD.h: 245: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"248
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;SC8P062BD.h: 248: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"249
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;SC8P062BD.h: 249: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"250
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;SC8P062BD.h: 250: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"251
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;SC8P062BD.h: 251: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"252
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;SC8P062BD.h: 252: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"253
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;SC8P062BD.h: 253: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"256
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;SC8P062BD.h: 256: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"257
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;SC8P062BD.h: 257: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"258
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;SC8P062BD.h: 258: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"259
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;SC8P062BD.h: 259: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"260
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;SC8P062BD.h: 260: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"261
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;SC8P062BD.h: 261: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"264
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;SC8P062BD.h: 264: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"265
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;SC8P062BD.h: 265: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"266
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;SC8P062BD.h: 266: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"267
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;SC8P062BD.h: 267: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"268
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;SC8P062BD.h: 268: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"269
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;SC8P062BD.h: 269: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"272
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;SC8P062BD.h: 272: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"273
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;SC8P062BD.h: 273: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"274
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;SC8P062BD.h: 274: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"275
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;SC8P062BD.h: 275: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"276
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;SC8P062BD.h: 276: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"277
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;SC8P062BD.h: 277: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"280
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;SC8P062BD.h: 280: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"281
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;SC8P062BD.h: 281: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"282
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;SC8P062BD.h: 282: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"283
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;SC8P062BD.h: 283: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"284
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;SC8P062BD.h: 284: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"285
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;SC8P062BD.h: 285: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"288
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;SC8P062BD.h: 288: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"289
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;SC8P062BD.h: 289: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"290
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;SC8P062BD.h: 290: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"291
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;SC8P062BD.h: 291: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"292
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;SC8P062BD.h: 292: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"293
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;SC8P062BD.h: 293: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"296
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;SC8P062BD.h: 296: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"297
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;SC8P062BD.h: 297: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"298
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;SC8P062BD.h: 298: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"299
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;SC8P062BD.h: 299: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"300
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;SC8P062BD.h: 300: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"301
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;SC8P062BD.h: 301: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"302
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;SC8P062BD.h: 302: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"305
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;SC8P062BD.h: 305: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"306
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;SC8P062BD.h: 306: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"307
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;SC8P062BD.h: 307: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"308
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;SC8P062BD.h: 308: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"309
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;SC8P062BD.h: 309: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"310
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;SC8P062BD.h: 310: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"311
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;SC8P062BD.h: 311: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"312
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;SC8P062BD.h: 312: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"315
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;SC8P062BD.h: 315: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"316
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;SC8P062BD.h: 316: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"317
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;SC8P062BD.h: 317: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"318
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;SC8P062BD.h: 318: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"319
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;SC8P062BD.h: 319: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"322
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;SC8P062BD.h: 322: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"323
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;SC8P062BD.h: 323: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"324
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;SC8P062BD.h: 324: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"325
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;SC8P062BD.h: 325: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"29 C:\mcuproject\scm\zdt\D209_062B_SOP14\main.c
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 29: volatile unsigned int adresult;
"30
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 30: volatile unsigned int result;
"31
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 31: volatile unsigned char test_adc;
"32
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 32: volatile unsigned int power_ad;
"33
[v _intCount `uc ~T0 @X0 1 e ]
[; ;main.c: 33: unsigned char intCount;
"34
[v _count1s `uc ~T0 @X0 1 e ]
[; ;main.c: 34: unsigned char count1s;
"35
[v _IntFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 35: unsigned char IntFlag;
"36
[v _chrgFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 36: unsigned char chrgFlag;
"37
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 37: unsigned char chrgFullFlag;
"38
[v _intCount10 `uc ~T0 @X0 1 e ]
[; ;main.c: 38: unsigned char intCount10;
"39
[v _outADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 39: unsigned int outADValue;
"40
[v _batADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 40: unsigned int batADValue;
"41
[v _countHalfFull `uc ~T0 @X0 1 e ]
[; ;main.c: 41: unsigned char countHalfFull;
"42
[v _protectFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 42: unsigned char protectFlag;
"43
[v _workOverOutTime `uc ~T0 @X0 1 e ]
[; ;main.c: 43: unsigned char workOverOutTime;
"44
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 44: unsigned char workStep = 0;
"45
[v _ledCnt `uc ~T0 @X0 1 e ]
[; ;main.c: 45: unsigned char ledCnt;
"46
[v _ledStep `uc ~T0 @X0 1 e ]
[; ;main.c: 46: unsigned char ledStep;
"47
[v _keyCount `uc ~T0 @X0 1 e ]
[; ;main.c: 47: unsigned char keyCount;
"48
[v _keyCount2 `uc ~T0 @X0 1 e ]
[; ;main.c: 48: unsigned char keyCount2;
"49
[v _longPressFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 49: unsigned char longPressFlag;
"50
[v _longPressFlag2 `uc ~T0 @X0 1 e ]
[; ;main.c: 50: unsigned char longPressFlag2;
"51
[v _maxDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 51: unsigned char maxDuty;
"52
[v _overCount `uc ~T0 @X0 1 e ]
[; ;main.c: 52: unsigned char overCount;
"53
[v _addPowerCount `uc ~T0 @X0 1 e ]
[; ;main.c: 53: unsigned char addPowerCount;
"54
[v _tempDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 54: unsigned char tempDuty;
"55
[v _startTime `uc ~T0 @X0 1 e ]
[; ;main.c: 55: unsigned char startTime;
"56
[v _firstTime `uc ~T0 @X0 1 e ]
[; ;main.c: 56: unsigned char firstTime;
"57
[v _overChrgTime `uc ~T0 @X0 1 e ]
[; ;main.c: 57: unsigned char overChrgTime;
"58
[v _pwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 58: unsigned char pwStep;
"59
[v _prePwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 59: unsigned char prePwStep;
"60
[v _count50s `ui ~T0 @X0 1 e ]
[; ;main.c: 60: unsigned int count50s;
"61
[v _reChrgCount `uc ~T0 @X0 1 e ]
[; ;main.c: 61: unsigned char reChrgCount;
"62
[v _lockLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 62: unsigned char lockLedStep;
"63
[v _chrgMode `uc ~T0 @X0 1 e ]
[i _chrgMode
-> -> 0 `i `uc
]
[; ;main.c: 63: unsigned char chrgMode = 0;
"64
[v _fanDuty `uc ~T0 @X0 1 e ]
[i _fanDuty
-> -> 0 `i `uc
]
[; ;main.c: 64: unsigned char fanDuty = 0;
"65
[v _lockCount `uc ~T0 @X0 1 e ]
[i _lockCount
-> -> 0 `i `uc
]
[; ;main.c: 65: unsigned char lockCount = 0;
"66
[v _fullCount `ui ~T0 @X0 1 e ]
[i _fullCount
-> -> 0 `i `ui
]
[; ;main.c: 66: unsigned int fullCount = 0;
"67
[v _addTime `uc ~T0 @X0 1 e ]
[; ;main.c: 67: unsigned char addTime;
"68
[v _subTime `uc ~T0 @X0 1 e ]
[; ;main.c: 68: unsigned char subTime;
"69
[v _chrgWaitTime `uc ~T0 @X0 1 e ]
[; ;main.c: 69: unsigned char chrgWaitTime;
"70
[v _chrgMaxDuty `uc ~T0 @X0 1 e ]
[i _chrgMaxDuty
-> -> 0 `i `uc
]
[; ;main.c: 70: unsigned char chrgMaxDuty = 0;
"71
[v _ledCntTime `uc ~T0 @X0 1 e ]
[; ;main.c: 71: unsigned char ledCntTime;
"72
[v _count5s `ui ~T0 @X0 1 e ]
[i _count5s
-> -> 0 `i `ui
]
[; ;main.c: 72: unsigned int count5s = 0;
"73
[v _overWorkTime `ui ~T0 @X0 1 e ]
[; ;main.c: 73: unsigned int overWorkTime;
"74
[v _preLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 74: unsigned char preLedStep;
"75
[v _count8s `ui ~T0 @X0 1 e ]
[; ;main.c: 75: unsigned int count8s;
"76
[v _count900s `ui ~T0 @X0 1 e ]
[; ;main.c: 76: unsigned int count900s;
"77
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 77: unsigned char lowBatFlag = 0;
"78
[v _sleepTime `uc ~T0 @X0 1 e ]
[; ;main.c: 78: unsigned char sleepTime;
"79
[v _startChrgTime `uc ~T0 @X0 1 e ]
[i _startChrgTime
-> -> 0 `i `uc
]
[; ;main.c: 79: unsigned char startChrgTime = 0;
"80
[v _shiweiNum `uc ~T0 @X0 1 e ]
[i _shiweiNum
-> -> 0 `i `uc
]
[; ;main.c: 80: unsigned char shiweiNum = 0;
"81
[v _geweiNum `uc ~T0 @X0 1 e ]
[i _geweiNum
-> -> 0 `i `uc
]
[; ;main.c: 81: unsigned char geweiNum = 0;
"82
[v _jrStep `uc ~T0 @X0 1 e ]
[i _jrStep
-> -> 0 `i `uc
]
[; ;main.c: 82: unsigned char jrStep = 0;
"83
[v _preWorkStep `uc ~T0 @X0 1 e ]
[i _preWorkStep
-> -> 0 `i `uc
]
[; ;main.c: 83: unsigned char preWorkStep = 0;
"84
[v _fanOverTime `uc ~T0 @X0 1 e ]
[i _fanOverTime
-> -> 0 `i `uc
]
[; ;main.c: 84: unsigned char fanOverTime = 0;
"85
[v _chrgPwmFlag `uc ~T0 @X0 1 e ]
[i _chrgPwmFlag
-> -> 0 `i `uc
]
[; ;main.c: 85: unsigned char chrgPwmFlag = 0;
"86
[v _motorPwmFlag `uc ~T0 @X0 1 e ]
[i _motorPwmFlag
-> -> 0 `i `uc
]
[; ;main.c: 86: unsigned char motorPwmFlag = 0;
"87
[v _count30s `ui ~T0 @X0 1 e ]
[i _count30s
-> -> 0 `i `ui
]
[; ;main.c: 87: unsigned int count30s = 0;
"88
[v _count15s `ui ~T0 @X0 1 e ]
[i _count15s
-> -> 0 `i `ui
]
[; ;main.c: 88: unsigned int count15s = 0;
"89
[v _lowBatLock `uc ~T0 @X0 1 e ]
[i _lowBatLock
-> -> 0 `i `uc
]
[; ;main.c: 89: unsigned char lowBatLock = 0;
"90
[v _lowBatTime `uc ~T0 @X0 1 e ]
[i _lowBatTime
-> -> 0 `i `uc
]
[; ;main.c: 90: unsigned char lowBatTime = 0;
[; ;main.c: 92: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
[; ;main.c: 93: void DelayXms(unsigned char x);
[; ;main.c: 94: unsigned char ADC_Result(unsigned char adch);
[; ;main.c: 95: void Init_System();
[; ;main.c: 96: void AD_Init();
[; ;main.c: 97: void Sleep_Mode();
[; ;main.c: 98: void pwmInit();
[; ;main.c: 99: void pwmStop();
[; ;main.c: 100: void chrgPwmInit();
[; ;main.c: 101: void chrgPwmStop();
[; ;main.c: 102: void chrgCtr();
[; ;main.c: 103: void checkOutA();
[; ;main.c: 104: void checkBatAD();
[; ;main.c: 105: void ledShow();
[; ;main.c: 106: void keyCtr();
[; ;main.c: 107: void workCtr();
[; ;main.c: 108: void ledCtr();
[; ;main.c: 109: char keyRead(char keyStatus);
[; ;main.c: 110: void setBatStep();
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F570 `(v ~T0 @X0 1 tf ]
"125
[v _Isr_Timer `IF570 ~T0 @X0 1 e ]
"126
{
[; ;main.c: 125: void interrupt Isr_Timer()
[; ;main.c: 126: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 127: if(TMR2IF)
"127
[e $ ! _TMR2IF 2  ]
[; ;main.c: 128: {
"128
{
[; ;main.c: 129: TMR2IF = 0;
"129
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 130: if(++intCount >= 160)
"130
[e $ ! >= -> =+ _intCount -> -> 1 `i `uc `i -> 160 `i 3  ]
[; ;main.c: 131: {
"131
{
[; ;main.c: 132: intCount = 0;
"132
[e = _intCount -> -> 0 `i `uc ]
[; ;main.c: 133: IntFlag = 1;
"133
[e = _IntFlag -> -> 1 `i `uc ]
[; ;main.c: 134: if(++count1s >= 100)
"134
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 4  ]
[; ;main.c: 135: {
"135
{
[; ;main.c: 136: count1s = 0;
"136
[e = _count1s -> -> 0 `i `uc ]
"137
}
[e :U 4 ]
"138
}
[e :U 3 ]
[; ;main.c: 137: }
[; ;main.c: 138: }
[; ;main.c: 139: intCount10++;
"139
[e ++ _intCount10 -> -> 1 `i `uc ]
"140
}
[e :U 2 ]
[; ;main.c: 140: }
[; ;main.c: 142: }
"142
[e :UE 1 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"148
[v _main `(v ~T0 @X0 1 ef ]
"149
{
[; ;main.c: 148: void main()
[; ;main.c: 149: {
[e :U _main ]
[f ]
[; ;main.c: 150: Init_System();
"150
[e ( _Init_System ..  ]
[; ;main.c: 151: AD_Init();
"151
[e ( _AD_Init ..  ]
[; ;main.c: 152: firstTime = 200;
"152
[e = _firstTime -> -> 200 `i `uc ]
[; ;main.c: 153: while (1)
"153
[e :U 7 ]
[; ;main.c: 154: {
"154
{
[; ;main.c: 155: asm("clrwdt");
"155
[; <" clrwdt ;# ">
[; ;main.c: 156: if(workStep > 0 && intCount10 > 10)
"156
[e $ ! && > -> _workStep `i -> 0 `i > -> _intCount10 `i -> 10 `i 9  ]
[; ;main.c: 157: {
"157
{
[; ;main.c: 158: intCount10 = 0;
"158
[e = _intCount10 -> -> 0 `i `uc ]
[; ;main.c: 159: checkOutA();
"159
[e ( _checkOutA ..  ]
"160
}
[e :U 9 ]
[; ;main.c: 160: }
[; ;main.c: 161: if(!IntFlag)
"161
[e $ ! ! != -> _IntFlag `i -> -> -> 0 `i `uc `i 10  ]
[; ;main.c: 162: continue;
"162
[e $U 6  ]
[e :U 10 ]
[; ;main.c: 163: IntFlag = 0;
"163
[e = _IntFlag -> -> 0 `i `uc ]
[; ;main.c: 164: chrgCtr();
"164
[e ( _chrgCtr ..  ]
[; ;main.c: 165: checkBatAD();
"165
[e ( _checkBatAD ..  ]
[; ;main.c: 166: setBatStep();
"166
[e ( _setBatStep ..  ]
[; ;main.c: 167: if(chrgFlag == 0 && lowBatFlag == 0 && firstTime == 0)
"167
[e $ ! && && == -> _chrgFlag `i -> 0 `i == -> _lowBatFlag `i -> 0 `i == -> _firstTime `i -> 0 `i 11  ]
[; ;main.c: 168: {
"168
{
[; ;main.c: 169: keyCtr();
"169
[e ( _keyCtr ..  ]
"170
}
[e :U 11 ]
[; ;main.c: 170: }
[; ;main.c: 171: workCtr();
"171
[e ( _workCtr ..  ]
[; ;main.c: 172: ledCtr();
"172
[e ( _ledCtr ..  ]
[; ;main.c: 173: if(chrgFlag == 0 && workStep == 0 && keyCount == 0 && firstTime == 0 && overWorkTime == 0)
"173
[e $ ! && && && && == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _firstTime `i -> 0 `i == _overWorkTime -> -> 0 `i `ui 12  ]
[; ;main.c: 174: {
"174
{
[; ;main.c: 175: shiweiNum = geweiNum = 0;
"175
[e = _shiweiNum = _geweiNum -> -> 0 `i `uc ]
[; ;main.c: 176: if(++sleepTime >= 200)
"176
[e $ ! >= -> =+ _sleepTime -> -> 1 `i `uc `i -> 200 `i 13  ]
[; ;main.c: 177: {
"177
{
[; ;main.c: 178: sleepTime = 0;
"178
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 179: Sleep_Mode();
"179
[e ( _Sleep_Mode ..  ]
"180
}
[e :U 13 ]
"181
}
[; ;main.c: 180: }
[; ;main.c: 181: }
[e $U 14  ]
"182
[e :U 12 ]
[; ;main.c: 182: else
[; ;main.c: 183: {
"183
{
[; ;main.c: 184: sleepTime = 0;
"184
[e = _sleepTime -> -> 0 `i `uc ]
"185
}
[e :U 14 ]
"186
}
[e :U 6 ]
"153
[e $U 7  ]
[e :U 8 ]
[; ;main.c: 185: }
[; ;main.c: 186: }
[; ;main.c: 187: }
"187
[e :UE 5 ]
}
"191
[v _ledCtr `(v ~T0 @X0 1 ef ]
"192
{
[; ;main.c: 191: void ledCtr()
[; ;main.c: 192: {
[e :U _ledCtr ]
[f ]
[; ;main.c: 193: if(firstTime > 0)
"193
[e $ ! > -> _firstTime `i -> 0 `i 16  ]
[; ;main.c: 194: {
"194
{
[; ;main.c: 195: firstTime--;
"195
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 196: ledStep = 0;
"196
[e = _ledStep -> -> 0 `i `uc ]
[; ;main.c: 197: if(prePwStep < pwStep)
"197
[e $ ! < -> _prePwStep `i -> _pwStep `i 17  ]
[; ;main.c: 198: {
"198
{
[; ;main.c: 199: prePwStep = pwStep;
"199
[e = _prePwStep _pwStep ]
"200
}
[e :U 17 ]
"201
}
[; ;main.c: 200: }
[; ;main.c: 201: }
[e $U 18  ]
"202
[e :U 16 ]
[; ;main.c: 202: else if(overWorkTime > 0)
[e $ ! > _overWorkTime -> -> 0 `i `ui 19  ]
[; ;main.c: 203: {
"203
{
[; ;main.c: 204: overWorkTime--;
"204
[e -- _overWorkTime -> -> 1 `i `ui ]
[; ;main.c: 205: if(overWorkTime % 60 < 30)
"205
[e $ ! < % _overWorkTime -> -> 60 `i `ui -> -> 30 `i `ui 20  ]
[; ;main.c: 206: {
"206
{
[; ;main.c: 207: ledStep = 1;
"207
[e = _ledStep -> -> 1 `i `uc ]
"208
}
[; ;main.c: 208: }
[e $U 21  ]
"209
[e :U 20 ]
[; ;main.c: 209: else
[; ;main.c: 210: {
"210
{
[; ;main.c: 211: ledStep = 0;
"211
[e = _ledStep -> -> 0 `i `uc ]
"212
}
[e :U 21 ]
"213
}
[; ;main.c: 212: }
[; ;main.c: 213: }
[e $U 22  ]
"214
[e :U 19 ]
[; ;main.c: 214: else if(workStep > 0)
[e $ ! > -> _workStep `i -> 0 `i 23  ]
[; ;main.c: 215: {
"215
{
[; ;main.c: 216: ledStep = 3;
"216
[e = _ledStep -> -> 3 `i `uc ]
"217
}
[; ;main.c: 217: }
[e $U 24  ]
"218
[e :U 23 ]
[; ;main.c: 218: else if(chrgFlag)
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 25  ]
[; ;main.c: 219: {
"219
{
[; ;main.c: 220: if(prePwStep >= 99)
"220
[e $ ! >= -> _prePwStep `i -> 99 `i 26  ]
[; ;main.c: 221: {
"221
{
[; ;main.c: 222: ledStep = 2;
"222
[e = _ledStep -> -> 2 `i `uc ]
"223
}
[; ;main.c: 223: }
[e $U 27  ]
"224
[e :U 26 ]
[; ;main.c: 224: else
[; ;main.c: 225: {
"225
{
[; ;main.c: 226: ledStep = 1;
"226
[e = _ledStep -> -> 1 `i `uc ]
"227
}
[e :U 27 ]
"228
}
[; ;main.c: 227: }
[; ;main.c: 228: }
[e $U 28  ]
"229
[e :U 25 ]
[; ;main.c: 229: else
[; ;main.c: 230: {
"230
{
[; ;main.c: 231: ledStep = 0;
"231
[e = _ledStep -> -> 0 `i `uc ]
"232
}
[e :U 28 ]
[e :U 24 ]
[e :U 22 ]
[e :U 18 ]
[; ;main.c: 232: }
[; ;main.c: 233: if(ledStep == 0)
"233
[e $ ! == -> _ledStep `i -> 0 `i 29  ]
[; ;main.c: 234: {
"234
{
[; ;main.c: 235: PORTA &= 0xE3;
"235
[e =& _PORTA -> -> 227 `i `uc ]
"236
}
[; ;main.c: 236: }
[e $U 30  ]
"237
[e :U 29 ]
[; ;main.c: 237: else if(ledStep == 1)
[e $ ! == -> _ledStep `i -> 1 `i 31  ]
[; ;main.c: 238: {
"238
{
[; ;main.c: 239: RA4 = 1;
"239
[e = _RA4 -> -> 1 `i `b ]
[; ;main.c: 240: RA3 = 0;
"240
[e = _RA3 -> -> 0 `i `b ]
[; ;main.c: 241: RA2 = 0;
"241
[e = _RA2 -> -> 0 `i `b ]
"242
}
[; ;main.c: 242: }
[e $U 32  ]
"243
[e :U 31 ]
[; ;main.c: 243: else if(ledStep == 2)
[e $ ! == -> _ledStep `i -> 2 `i 33  ]
[; ;main.c: 244: {
"244
{
[; ;main.c: 245: RA4 = 0;
"245
[e = _RA4 -> -> 0 `i `b ]
[; ;main.c: 246: RA3 = 1;
"246
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 247: RA2 = 0;
"247
[e = _RA2 -> -> 0 `i `b ]
"248
}
[; ;main.c: 248: }
[e $U 34  ]
"249
[e :U 33 ]
[; ;main.c: 249: else if(ledStep == 3)
[e $ ! == -> _ledStep `i -> 3 `i 35  ]
[; ;main.c: 250: {
"250
{
[; ;main.c: 251: RA4 = 0;
"251
[e = _RA4 -> -> 0 `i `b ]
[; ;main.c: 252: RA3 = 0;
"252
[e = _RA3 -> -> 0 `i `b ]
[; ;main.c: 253: RA2 = 1;
"253
[e = _RA2 -> -> 1 `i `b ]
"254
}
[e :U 35 ]
"255
[e :U 34 ]
[e :U 32 ]
[e :U 30 ]
[; ;main.c: 254: }
[; ;main.c: 255: }
[e :UE 15 ]
}
"258
[v _setBatStep `(v ~T0 @X0 1 ef ]
"259
{
[; ;main.c: 258: void setBatStep()
[; ;main.c: 259: {
[e :U _setBatStep ]
[f ]
[; ;main.c: 260: if(lowBatLock == 1)
"260
[e $ ! == -> _lowBatLock `i -> 1 `i 37  ]
[; ;main.c: 261: {
"261
{
[; ;main.c: 262: prePwStep = 0;
"262
[e = _prePwStep -> -> 0 `i `uc ]
[; ;main.c: 263: pwStep = 0;
"263
[e = _pwStep -> -> 0 `i `uc ]
"264
}
[; ;main.c: 264: }
[e $U 38  ]
"265
[e :U 37 ]
[; ;main.c: 265: else if(power_ad < 2800)
[e $ ! < _power_ad -> -> 2800 `i `ui 39  ]
[; ;main.c: 266: {
"266
{
[; ;main.c: 267: if(count1s == 0)
"267
[e $ ! == -> _count1s `i -> 0 `i 40  ]
[; ;main.c: 268: {
"268
{
[; ;main.c: 269: if(prePwStep > 1)
"269
[e $ ! > -> _prePwStep `i -> 1 `i 41  ]
[; ;main.c: 270: {
"270
{
[; ;main.c: 271: if(chrgFlag == 0)
"271
[e $ ! == -> _chrgFlag `i -> 0 `i 42  ]
[; ;main.c: 272: prePwStep--;
"272
[e -- _prePwStep -> -> 1 `i `uc ]
[e :U 42 ]
"273
}
[; ;main.c: 273: }
[e $U 43  ]
"274
[e :U 41 ]
[; ;main.c: 274: else
[; ;main.c: 275: {
"275
{
[; ;main.c: 276: prePwStep = 1;
"276
[e = _prePwStep -> -> 1 `i `uc ]
"277
}
[e :U 43 ]
[; ;main.c: 277: }
[; ;main.c: 278: pwStep = 1;
"278
[e = _pwStep -> -> 1 `i `uc ]
"279
}
[e :U 40 ]
[; ;main.c: 279: }
[; ;main.c: 280: pwStep = 1;
"280
[e = _pwStep -> -> 1 `i `uc ]
"281
}
[; ;main.c: 281: }
[e $U 44  ]
"282
[e :U 39 ]
[; ;main.c: 282: else
[; ;main.c: 283: {
"283
{
[; ;main.c: 284: if(power_ad < 3600)
"284
[e $ ! < _power_ad -> -> 3600 `i `ui 45  ]
[; ;main.c: 285: {
"285
{
[; ;main.c: 286: pwStep = (power_ad - 2800)/80;
"286
[e = _pwStep -> / - _power_ad -> -> 2800 `i `ui -> -> 80 `i `ui `uc ]
"287
}
[; ;main.c: 287: }
[e $U 46  ]
"288
[e :U 45 ]
[; ;main.c: 288: else
[; ;main.c: 289: {
"289
{
[; ;main.c: 290: pwStep = 20 + ((power_ad - 3600)/6);
"290
[e = _pwStep -> + -> -> 20 `i `ui / - _power_ad -> -> 3600 `i `ui -> -> 6 `i `ui `uc ]
"291
}
[e :U 46 ]
[; ;main.c: 291: }
[; ;main.c: 292: if(pwStep > 99)
"292
[e $ ! > -> _pwStep `i -> 99 `i 47  ]
[; ;main.c: 293: {
"293
{
[; ;main.c: 294: pwStep = 99;
"294
[e = _pwStep -> -> 99 `i `uc ]
"295
}
[e :U 47 ]
[; ;main.c: 295: }
[; ;main.c: 297: if(chrgFlag)
"297
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 48  ]
[; ;main.c: 298: {
"298
{
[; ;main.c: 299: if(chrgFullFlag && prePwStep < 99)
"299
[e $ ! && != -> _chrgFullFlag `i -> -> -> 0 `i `uc `i < -> _prePwStep `i -> 99 `i 49  ]
[; ;main.c: 300: {
"300
{
[; ;main.c: 301: if(++count15s >= 7500)
"301
[e $ ! >= =+ _count15s -> -> 1 `i `ui -> -> 7500 `i `ui 50  ]
[; ;main.c: 302: {
"302
{
[; ;main.c: 303: count15s = 0;
"303
[e = _count15s -> -> 0 `i `ui ]
[; ;main.c: 304: prePwStep++;
"304
[e ++ _prePwStep -> -> 1 `i `uc ]
"305
}
[e :U 50 ]
"306
}
[; ;main.c: 305: }
[; ;main.c: 306: }
[e $U 51  ]
"307
[e :U 49 ]
[; ;main.c: 307: else
[; ;main.c: 308: {
"308
{
[; ;main.c: 309: count15s = 0;
"309
[e = _count15s -> -> 0 `i `ui ]
"310
}
[e :U 51 ]
[; ;main.c: 310: }
[; ;main.c: 311: if(pwStep > prePwStep)
"311
[e $ ! > -> _pwStep `i -> _prePwStep `i 52  ]
[; ;main.c: 312: {
"312
{
[; ;main.c: 313: if(++count30s >= 15000 && prePwStep < 99)
"313
[e $ ! && >= =+ _count30s -> -> 1 `i `ui -> -> 15000 `i `ui < -> _prePwStep `i -> 99 `i 53  ]
[; ;main.c: 314: {
"314
{
[; ;main.c: 315: count30s = 0;
"315
[e = _count30s -> -> 0 `i `ui ]
[; ;main.c: 316: prePwStep++;
"316
[e ++ _prePwStep -> -> 1 `i `uc ]
"317
}
[e :U 53 ]
"319
}
[; ;main.c: 317: }
[; ;main.c: 319: }
[e $U 54  ]
"320
[e :U 52 ]
[; ;main.c: 320: else
[; ;main.c: 321: {
"321
{
[; ;main.c: 322: count30s = 0;
"322
[e = _count30s -> -> 0 `i `ui ]
"323
}
[e :U 54 ]
"324
}
[; ;main.c: 323: }
[; ;main.c: 324: }
[e $U 55  ]
"325
[e :U 48 ]
[; ;main.c: 325: else
[; ;main.c: 326: {
"326
{
"327
[v _tempSubBatTime `ui ~T0 @X0 1 a ]
[; ;main.c: 327: unsigned int tempSubBatTime = 15000;
[e = _tempSubBatTime -> -> 15000 `i `ui ]
[; ;main.c: 328: if(prePwStep < 40)
"328
[e $ ! < -> _prePwStep `i -> 40 `i 56  ]
[; ;main.c: 329: {
"329
{
[; ;main.c: 330: tempSubBatTime = 8000;
"330
[e = _tempSubBatTime -> -> 8000 `i `ui ]
"331
}
[e :U 56 ]
[; ;main.c: 331: }
[; ;main.c: 332: if(pwStep < prePwStep && prePwStep > 1)
"332
[e $ ! && < -> _pwStep `i -> _prePwStep `i > -> _prePwStep `i -> 1 `i 57  ]
[; ;main.c: 333: {
"333
{
[; ;main.c: 334: if(++count30s >= tempSubBatTime && prePwStep > 1)
"334
[e $ ! && >= =+ _count30s -> -> 1 `i `ui _tempSubBatTime > -> _prePwStep `i -> 1 `i 58  ]
[; ;main.c: 335: {
"335
{
[; ;main.c: 336: count30s = 0;
"336
[e = _count30s -> -> 0 `i `ui ]
[; ;main.c: 337: prePwStep--;
"337
[e -- _prePwStep -> -> 1 `i `uc ]
"338
}
[e :U 58 ]
"339
}
[; ;main.c: 338: }
[; ;main.c: 339: }
[e $U 59  ]
"340
[e :U 57 ]
[; ;main.c: 340: else
[; ;main.c: 341: {
"341
{
[; ;main.c: 342: count30s = 0;
"342
[e = _count30s -> -> 0 `i `ui ]
"343
}
[e :U 59 ]
"344
}
[e :U 55 ]
"346
}
[e :U 44 ]
[e :U 38 ]
[; ;main.c: 343: }
[; ;main.c: 344: }
[; ;main.c: 346: }
[; ;main.c: 347: }
"347
[e :UE 36 ]
}
"350
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"351
{
[; ;main.c: 350: void chrgCtr()
[; ;main.c: 351: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 352: if(PORTB & 0x01)
"352
[e $ ! != & -> _PORTB `i -> 1 `i -> 0 `i 61  ]
[; ;main.c: 353: {
"353
{
[; ;main.c: 354: chrgFlag = 1;
"354
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 355: workStep = 0;
"355
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 356: pwmStop();
"356
[e ( _pwmStop ..  ]
[; ;main.c: 357: lowBatFlag = 0;
"357
[e = _lowBatFlag -> -> 0 `i `uc ]
"359
}
[; ;main.c: 359: }
[e $U 62  ]
"360
[e :U 61 ]
[; ;main.c: 360: else
[; ;main.c: 361: {
"361
{
[; ;main.c: 362: chrgFlag = 0;
"362
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 363: chrgFullFlag = 0;
"363
[e = _chrgFullFlag -> -> 0 `i `uc ]
"365
}
[e :U 62 ]
[; ;main.c: 365: }
[; ;main.c: 366: }
"366
[e :UE 60 ]
}
"370
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"371
{
[; ;main.c: 370: char keyRead(char keyStatus)
[; ;main.c: 371: {
[e :U _keyRead ]
"370
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"371
[f ]
[; ;main.c: 372: if(keyStatus)
"372
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 64  ]
[; ;main.c: 373: {
"373
{
[; ;main.c: 374: keyCount++;
"374
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 375: if(keyCount >= 100)
"375
[e $ ! >= -> _keyCount `i -> 100 `i 65  ]
[; ;main.c: 376: {
"376
{
[; ;main.c: 377: keyCount = 100;
"377
[e = _keyCount -> -> 100 `i `uc ]
[; ;main.c: 378: if(!longPressFlag)
"378
[e $ ! ! != -> _longPressFlag `i -> -> -> 0 `i `uc `i 66  ]
[; ;main.c: 379: {
"379
{
[; ;main.c: 380: longPressFlag = 1;
"380
[e = _longPressFlag -> -> 1 `i `uc ]
[; ;main.c: 381: return 2;
"381
[e ) -> -> 2 `i `uc ]
[e $UE 63  ]
"382
}
[e :U 66 ]
"383
}
[e :U 65 ]
"384
}
[; ;main.c: 382: }
[; ;main.c: 383: }
[; ;main.c: 384: }
[e $U 67  ]
"385
[e :U 64 ]
[; ;main.c: 385: else
[; ;main.c: 386: {
"386
{
[; ;main.c: 387: if(keyCount >= 100)
"387
[e $ ! >= -> _keyCount `i -> 100 `i 68  ]
[; ;main.c: 388: {
"388
{
[; ;main.c: 389: keyCount = 0;
"389
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 390: longPressFlag = 0;
"390
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 391: return 0;
"391
[e ) -> -> 0 `i `uc ]
[e $UE 63  ]
"392
}
[; ;main.c: 392: }
[e $U 69  ]
"393
[e :U 68 ]
[; ;main.c: 393: else if(keyCount >= 6)
[e $ ! >= -> _keyCount `i -> 6 `i 70  ]
[; ;main.c: 394: {
"394
{
[; ;main.c: 395: keyCount = 0;
"395
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 396: return 1;
"396
[e ) -> -> 1 `i `uc ]
[e $UE 63  ]
"397
}
[e :U 70 ]
"398
[e :U 69 ]
[; ;main.c: 397: }
[; ;main.c: 398: keyCount = 0;
[e = _keyCount -> -> 0 `i `uc ]
"399
}
[e :U 67 ]
[; ;main.c: 399: }
[; ;main.c: 400: return 0;
"400
[e ) -> -> 0 `i `uc ]
[e $UE 63  ]
[; ;main.c: 401: }
"401
[e :UE 63 ]
}
"404
[v _keyRead2 `(uc ~T0 @X0 1 ef1`uc ]
"405
{
[; ;main.c: 404: char keyRead2(char keyStatus)
[; ;main.c: 405: {
[e :U _keyRead2 ]
"404
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"405
[f ]
[; ;main.c: 406: if(keyStatus)
"406
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 72  ]
[; ;main.c: 407: {
"407
{
[; ;main.c: 408: keyCount2++;
"408
[e ++ _keyCount2 -> -> 1 `i `uc ]
[; ;main.c: 409: if(keyCount2 >= 100)
"409
[e $ ! >= -> _keyCount2 `i -> 100 `i 73  ]
[; ;main.c: 410: {
"410
{
[; ;main.c: 411: keyCount2 = 100;
"411
[e = _keyCount2 -> -> 100 `i `uc ]
[; ;main.c: 412: if(!longPressFlag2)
"412
[e $ ! ! != -> _longPressFlag2 `i -> -> -> 0 `i `uc `i 74  ]
[; ;main.c: 413: {
"413
{
[; ;main.c: 414: longPressFlag2 = 1;
"414
[e = _longPressFlag2 -> -> 1 `i `uc ]
[; ;main.c: 415: return 2;
"415
[e ) -> -> 2 `i `uc ]
[e $UE 71  ]
"416
}
[e :U 74 ]
"417
}
[e :U 73 ]
"418
}
[; ;main.c: 416: }
[; ;main.c: 417: }
[; ;main.c: 418: }
[e $U 75  ]
"419
[e :U 72 ]
[; ;main.c: 419: else
[; ;main.c: 420: {
"420
{
[; ;main.c: 421: if(keyCount2 >= 100)
"421
[e $ ! >= -> _keyCount2 `i -> 100 `i 76  ]
[; ;main.c: 422: {
"422
{
[; ;main.c: 423: keyCount2 = 0;
"423
[e = _keyCount2 -> -> 0 `i `uc ]
[; ;main.c: 424: longPressFlag2 = 0;
"424
[e = _longPressFlag2 -> -> 0 `i `uc ]
[; ;main.c: 425: return 0;
"425
[e ) -> -> 0 `i `uc ]
[e $UE 71  ]
"426
}
[; ;main.c: 426: }
[e $U 77  ]
"427
[e :U 76 ]
[; ;main.c: 427: else if(keyCount2 >= 5)
[e $ ! >= -> _keyCount2 `i -> 5 `i 78  ]
[; ;main.c: 428: {
"428
{
[; ;main.c: 429: keyCount2 = 0;
"429
[e = _keyCount2 -> -> 0 `i `uc ]
[; ;main.c: 430: return 1;
"430
[e ) -> -> 1 `i `uc ]
[e $UE 71  ]
"431
}
[e :U 78 ]
"432
[e :U 77 ]
[; ;main.c: 431: }
[; ;main.c: 432: keyCount2 = 0;
[e = _keyCount2 -> -> 0 `i `uc ]
"433
}
[e :U 75 ]
[; ;main.c: 433: }
[; ;main.c: 434: return 0;
"434
[e ) -> -> 0 `i `uc ]
[e $UE 71  ]
[; ;main.c: 435: }
"435
[e :UE 71 ]
}
"438
[v _keyCtr `(v ~T0 @X0 1 ef ]
"439
{
[; ;main.c: 438: void keyCtr()
[; ;main.c: 439: {
[e :U _keyCtr ]
[f ]
"440
[v _kclick `uc ~T0 @X0 1 a ]
[; ;main.c: 440: char kclick = keyRead(0x02 & (~PORTA));
[e = _kclick ( _keyRead (1 -> & -> 2 `i ~ -> _PORTA `i `uc ]
[; ;main.c: 441: if(kclick == 1)
"441
[e $ ! == -> _kclick `i -> 1 `i 80  ]
[; ;main.c: 442: {
"442
{
[; ;main.c: 443: if(workStep > 0)
"443
[e $ ! > -> _workStep `i -> 0 `i 81  ]
[; ;main.c: 444: {
"444
{
[; ;main.c: 445: if(++workStep > 3)
"445
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 3 `i 82  ]
[; ;main.c: 446: {
"446
{
[; ;main.c: 447: workStep = 1;
"447
[e = _workStep -> -> 1 `i `uc ]
"448
}
[e :U 82 ]
"449
}
[e :U 81 ]
"450
}
[; ;main.c: 448: }
[; ;main.c: 449: }
[; ;main.c: 450: }
[e $U 83  ]
"451
[e :U 80 ]
[; ;main.c: 451: else if(kclick == 2)
[e $ ! == -> _kclick `i -> 2 `i 84  ]
[; ;main.c: 452: {
"452
{
[; ;main.c: 453: if(workStep > 0)
"453
[e $ ! > -> _workStep `i -> 0 `i 85  ]
[; ;main.c: 454: {
"454
{
[; ;main.c: 455: workStep = 0;
"455
[e = _workStep -> -> 0 `i `uc ]
"456
}
[; ;main.c: 456: }
[e $U 86  ]
"457
[e :U 85 ]
[; ;main.c: 457: else
[; ;main.c: 458: {
"458
{
[; ;main.c: 459: workStep = 1;
"459
[e = _workStep -> -> 1 `i `uc ]
[; ;main.c: 460: overWorkTime = 0;
"460
[e = _overWorkTime -> -> 0 `i `ui ]
"461
}
[e :U 86 ]
"462
}
[e :U 84 ]
"463
[e :U 83 ]
[; ;main.c: 461: }
[; ;main.c: 462: }
[; ;main.c: 463: }
[e :UE 79 ]
}
"465
[v _workCtr `(v ~T0 @X0 1 ef ]
"466
{
[; ;main.c: 465: void workCtr()
[; ;main.c: 466: {
[e :U _workCtr ]
[f ]
[; ;main.c: 468: if(workStep > 0)
"468
[e $ ! > -> _workStep `i -> 0 `i 88  ]
[; ;main.c: 469: {
"469
{
[; ;main.c: 470: RB3 = 1;
"470
[e = _RB3 -> -> 1 `i `b ]
[; ;main.c: 471: if(motorPwmFlag == 0)
"471
[e $ ! == -> _motorPwmFlag `i -> 0 `i 89  ]
[; ;main.c: 472: {
"472
{
[; ;main.c: 473: pwmInit();
"473
[e ( _pwmInit ..  ]
"475
}
[e :U 89 ]
[; ;main.c: 475: }
[; ;main.c: 476: if(fanDuty < maxDuty)
"476
[e $ ! < -> _fanDuty `i -> _maxDuty `i 90  ]
[; ;main.c: 477: {
"477
{
[; ;main.c: 478: fanDuty++;
"478
[e ++ _fanDuty -> -> 1 `i `uc ]
"479
}
[; ;main.c: 479: }
[e $U 91  ]
"480
[e :U 90 ]
[; ;main.c: 480: else if(fanDuty > maxDuty)
[e $ ! > -> _fanDuty `i -> _maxDuty `i 92  ]
[; ;main.c: 481: {
"481
{
[; ;main.c: 482: fanDuty--;
"482
[e -- _fanDuty -> -> 1 `i `uc ]
"483
}
[e :U 92 ]
"484
[e :U 91 ]
[; ;main.c: 483: }
[; ;main.c: 484: maxDuty = 34 + (workStep*6);
[e = _maxDuty -> + -> 34 `i * -> _workStep `i -> 6 `i `uc ]
[; ;main.c: 485: PWMD3L = fanDuty;
"485
[e = _PWMD3L _fanDuty ]
"486
}
[; ;main.c: 486: }
[e $U 93  ]
"487
[e :U 88 ]
[; ;main.c: 487: else
[; ;main.c: 488: {
"488
{
[; ;main.c: 489: if(fanDuty > 0)
"489
[e $ ! > -> _fanDuty `i -> 0 `i 94  ]
[; ;main.c: 490: {
"490
{
[; ;main.c: 491: fanDuty--;
"491
[e -- _fanDuty -> -> 1 `i `uc ]
"492
}
[; ;main.c: 492: }
[e $U 95  ]
"493
[e :U 94 ]
[; ;main.c: 493: else
[; ;main.c: 494: {
"494
{
[; ;main.c: 495: pwmStop();
"495
[e ( _pwmStop ..  ]
[; ;main.c: 496: RB3 = 0;
"496
[e = _RB3 -> -> 0 `i `b ]
"497
}
[e :U 95 ]
"498
}
[e :U 93 ]
[; ;main.c: 497: }
[; ;main.c: 498: }
[; ;main.c: 500: }
"500
[e :UE 87 ]
}
"502
[v _checkOutA `(v ~T0 @X0 1 ef ]
"503
{
[; ;main.c: 502: void checkOutA()
[; ;main.c: 503: {
[e :U _checkOutA ]
[f ]
[; ;main.c: 504: test_adc = ADC_Sample(0, 5);
"504
[e = _test_adc ( _ADC_Sample (2 , -> -> 0 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 505: if (0xA5 == test_adc)
"505
[e $ ! == -> 165 `i -> _test_adc `i 97  ]
[; ;main.c: 506: {
"506
{
[; ;main.c: 507: if(adresult > 2662)
"507
[e $ ! > _adresult -> -> 2662 `i `ui 98  ]
[; ;main.c: 508: {
"508
{
[; ;main.c: 509: if(++fanOverTime > 50)
"509
[e $ ! > -> =+ _fanOverTime -> -> 1 `i `uc `i -> 50 `i 99  ]
[; ;main.c: 510: {
"510
{
[; ;main.c: 511: fanOverTime = 0;
"511
[e = _fanOverTime -> -> 0 `i `uc ]
[; ;main.c: 512: preWorkStep = workStep;
"512
[e = _preWorkStep _workStep ]
[; ;main.c: 513: workStep = 0;
"513
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 514: overWorkTime = 300;
"514
[e = _overWorkTime -> -> 300 `i `ui ]
"515
}
[e :U 99 ]
"516
}
[; ;main.c: 515: }
[; ;main.c: 516: }
[e $U 100  ]
"517
[e :U 98 ]
[; ;main.c: 517: else
[; ;main.c: 518: {
"518
{
[; ;main.c: 519: fanOverTime = 0;
"519
[e = _fanOverTime -> -> 0 `i `uc ]
"520
}
[e :U 100 ]
"521
}
[; ;main.c: 520: }
[; ;main.c: 521: }
[e $U 101  ]
"522
[e :U 97 ]
[; ;main.c: 522: else
[; ;main.c: 523: {
"523
{
[; ;main.c: 524: ADCON0 = 0;
"524
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 525: ADCON1 = 0;
"525
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 526: _delay((unsigned long)((100)*(16000000/4000000.0)));
"526
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"527
}
[e :U 101 ]
[; ;main.c: 527: }
[; ;main.c: 528: }
"528
[e :UE 96 ]
}
"530
[v _checkBatAD `(v ~T0 @X0 1 ef ]
"531
{
[; ;main.c: 530: void checkBatAD()
[; ;main.c: 531: {
[e :U _checkBatAD ]
[f ]
[; ;main.c: 532: test_adc = ADC_Sample(31, 0);
"532
[e = _test_adc ( _ADC_Sample (2 , -> -> 31 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 533: if (0xA5 == test_adc)
"533
[e $ ! == -> 165 `i -> _test_adc `i 103  ]
[; ;main.c: 534: {
"534
{
"535
[v _power_temp `Vul ~T0 @X0 1 a ]
[; ;main.c: 535: volatile unsigned long power_temp;
[; ;main.c: 537: power_temp = (unsigned long)(((4096UL*1.2*1000))/adresult);
"537
[e = _power_temp -> / * * -> -> 4096 `ul `d .1.2 -> -> 1000 `i `d -> _adresult `d `ul ]
[; ;main.c: 538: power_ad = (unsigned int)(power_temp);
"538
[e = _power_ad -> _power_temp `ui ]
"539
}
[; ;main.c: 539: }
[e $U 104  ]
"540
[e :U 103 ]
[; ;main.c: 540: else
[; ;main.c: 541: {
"541
{
[; ;main.c: 542: ADCON0 = 0;
"542
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 543: ADCON1 = 0;
"543
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 544: _delay((unsigned long)((100)*(16000000/4000000.0)));
"544
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"545
}
[e :U 104 ]
[; ;main.c: 545: }
[; ;main.c: 547: if(power_ad < 2800)
"547
[e $ ! < _power_ad -> -> 2800 `i `ui 105  ]
[; ;main.c: 548: {
"548
{
[; ;main.c: 549: if(++lowBatTime > 200)
"549
[e $ ! > -> =+ _lowBatTime -> -> 1 `i `uc `i -> 200 `i 106  ]
[; ;main.c: 550: {
"550
{
[; ;main.c: 551: lowBatTime = 0;
"551
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 552: lowBatLock = 1;
"552
[e = _lowBatLock -> -> 1 `i `uc ]
[; ;main.c: 553: workStep = 0;
"553
[e = _workStep -> -> 0 `i `uc ]
"554
}
[e :U 106 ]
"555
}
[; ;main.c: 554: }
[; ;main.c: 555: }
[e $U 107  ]
"556
[e :U 105 ]
[; ;main.c: 556: else
[; ;main.c: 557: {
"557
{
[; ;main.c: 558: lowBatTime = 0;
"558
[e = _lowBatTime -> -> 0 `i `uc ]
"559
}
[e :U 107 ]
[; ;main.c: 559: }
[; ;main.c: 561: }
"561
[e :UE 102 ]
}
"572
[v _Init_System `(v ~T0 @X0 1 ef ]
"573
{
[; ;main.c: 572: void Init_System()
[; ;main.c: 573: {
[e :U _Init_System ]
[f ]
[; ;main.c: 574: asm("nop");
"574
[; <" nop ;# ">
[; ;main.c: 575: asm("clrwdt");
"575
[; <" clrwdt ;# ">
[; ;main.c: 576: OPTION_REG = 0;
"576
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 577: asm("clrwdt");
"577
[; <" clrwdt ;# ">
[; ;main.c: 578: OSCCON = 0X72;
"578
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 580: WPUA = 0x02;
"580
[e = _WPUA -> -> 2 `i `uc ]
[; ;main.c: 581: WPDA = 0x00;
"581
[e = _WPDA -> -> 0 `i `uc ]
[; ;main.c: 582: WPUB = 0x00;
"582
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 584: TRISA = 0x03;
"584
[e = _TRISA -> -> 3 `i `uc ]
[; ;main.c: 585: TRISB = 0x01;
"585
[e = _TRISB -> -> 1 `i `uc ]
[; ;main.c: 587: PORTA = 0X00;
"587
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 588: PORTB = 0X00;
"588
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 592: PR2 = 249;
"592
[e = _PR2 -> -> 249 `i `uc ]
[; ;main.c: 593: TMR2IF = 0;
"593
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 594: TMR2IE = 1;
"594
[e = _TMR2IE -> -> 1 `i `b ]
[; ;main.c: 596: T2CON = 0B00000100;
"596
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 597: INTCON = 0XC0;
"597
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 598: }
"598
[e :UE 108 ]
}
"609
[v _AD_Init `(v ~T0 @X0 1 ef ]
"610
{
[; ;main.c: 609: void AD_Init()
[; ;main.c: 610: {
[e :U _AD_Init ]
[f ]
[; ;main.c: 642: ADCON0 = 0X41;
"642
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 659: ADCON1 = 0;
"659
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 660: ANSEL0 = 0X01;
"660
[e = _ANSEL0 -> -> 1 `i `uc ]
[; ;main.c: 661: ANSEL1 = 0x00;
"661
[e = _ANSEL1 -> -> 0 `i `uc ]
[; ;main.c: 662: }
"662
[e :UE 109 ]
}
"665
[v _pwmInit `(v ~T0 @X0 1 ef ]
"666
{
[; ;main.c: 665: void pwmInit()
[; ;main.c: 666: {
[e :U _pwmInit ]
[f ]
[; ;main.c: 667: motorPwmFlag = 1;
"667
[e = _motorPwmFlag -> -> 1 `i `uc ]
[; ;main.c: 668: PWMCON1 = 0B00000000;
"668
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 669: PWMTH = 0X00;
"669
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 670: PWMTL = 73;
"670
[e = _PWMTL -> -> 73 `i `uc ]
[; ;main.c: 673: PWMD23H = 0;
"673
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 674: PWMD3L = fanDuty;
"674
[e = _PWMD3L _fanDuty ]
[; ;main.c: 675: PWM23DT = 0X00;
"675
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 677: PWMCON0 = 0X08;
"677
[e = _PWMCON0 -> -> 8 `i `uc ]
[; ;main.c: 678: PWMCON2 =0X00;
"678
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 679: }
"679
[e :UE 110 ]
}
"681
[v _pwmStop `(v ~T0 @X0 1 ef ]
"682
{
[; ;main.c: 681: void pwmStop()
[; ;main.c: 682: {
[e :U _pwmStop ]
[f ]
[; ;main.c: 683: if(motorPwmFlag)
"683
[e $ ! != -> _motorPwmFlag `i -> -> -> 0 `i `uc `i 112  ]
[; ;main.c: 684: {
"684
{
[; ;main.c: 685: motorPwmFlag = 0;
"685
[e = _motorPwmFlag -> -> 0 `i `uc ]
[; ;main.c: 686: PWMCON0 &= 0XF7;
"686
[e =& _PWMCON0 -> -> 247 `i `uc ]
[; ;main.c: 687: RB4 = 0;
"687
[e = _RB4 -> -> 0 `i `b ]
"688
}
[e :U 112 ]
[; ;main.c: 688: }
[; ;main.c: 689: }
"689
[e :UE 111 ]
}
"699
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"700
{
[; ;main.c: 699: void Sleep_Mode()
[; ;main.c: 700: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 701: INTCON = 0;
"701
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 703: OPTION_REG = 0;
"703
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 705: WPUA = 0x02;
"705
[e = _WPUA -> -> 2 `i `uc ]
[; ;main.c: 706: TRISA = 0x03;
"706
[e = _TRISA -> -> 3 `i `uc ]
[; ;main.c: 707: TRISB = 0x01;
"707
[e = _TRISB -> -> 1 `i `uc ]
[; ;main.c: 709: PORTA = 0X00;
"709
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 710: PORTB = 0X00;
"710
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 713: ADCON0 = 0;
"713
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 714: ADCON1 = 0;
"714
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 716: PWMCON0 = 0;
"716
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 718: OSCCON = 0X70;
"718
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 720: IOCA = 0x02;
"720
[e = _IOCA -> -> 2 `i `uc ]
[; ;main.c: 721: IOCB = 0x01;
"721
[e = _IOCB -> -> 1 `i `uc ]
[; ;main.c: 723: RAIE = 1;
"723
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 724: PEIE = 1;
"724
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 725: RBIE = 1;
"725
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 726: GIE = 0;
"726
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 728: PIE1 &= 0X08;
"728
[e =& _PIE1 -> -> 8 `i `uc ]
[; ;main.c: 729: PIR1 = 0;
"729
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 730: INTCON &= 0XC8;
"730
[e =& _INTCON -> -> 200 `i `uc ]
[; ;main.c: 732: PORTA;
"732
[e _PORTA ]
[; ;main.c: 733: RAIF = 0;
"733
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 734: PORTB;
"734
[e _PORTB ]
[; ;main.c: 735: RBIF = 0;
"735
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 736: asm("clrwdt");
"736
[; <" clrwdt ;# ">
[; ;main.c: 738: asm("sleep");
"738
[; <" sleep ;# ">
[; ;main.c: 740: asm("nop");
"740
[; <" nop ;# ">
[; ;main.c: 741: asm("clrwdt");
"741
[; <" clrwdt ;# ">
[; ;main.c: 742: asm("nop");
"742
[; <" nop ;# ">
[; ;main.c: 743: asm("nop");
"743
[; <" nop ;# ">
[; ;main.c: 744: asm("nop");
"744
[; <" nop ;# ">
[; ;main.c: 745: asm("nop");
"745
[; <" nop ;# ">
[; ;main.c: 746: asm("nop");
"746
[; <" nop ;# ">
[; ;main.c: 747: if(RAIF) RAIF = 0;
"747
[e $ ! _RAIF 114  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 114 ]
[; ;main.c: 748: if(RBIF) RBIF = 0;
"748
[e $ ! _RBIF 115  ]
[e = _RBIF -> -> 0 `i `b ]
[e :U 115 ]
[; ;main.c: 749: if(TMR2IF) TMR2IF = 0;
"749
[e $ ! _TMR2IF 116  ]
[e = _TMR2IF -> -> 0 `i `b ]
[e :U 116 ]
[; ;main.c: 750: IOCA = 0B00000000;
"750
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 751: IOCB = 0B00000000;
"751
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 752: Init_System();
"752
[e ( _Init_System ..  ]
[; ;main.c: 753: AD_Init();
"753
[e ( _AD_Init ..  ]
[; ;main.c: 754: }
"754
[e :UE 113 ]
}
"776
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"777
{
[; ;main.c: 776: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 777: {
[e :U _ADC_Sample ]
"776
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"777
[f ]
"778
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 778: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"779
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 779: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"780
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 780: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 782: if ((!LDO_EN) && (adldo & 0x04) )
"782
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 118  ]
[; ;main.c: 783: {
"783
{
[; ;main.c: 785: ADCON1 = adldo;
"785
[e = _ADCON1 _adldo ]
[; ;main.c: 786: _delay((unsigned long)((100)*(16000000/4000000.0)));
"786
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"787
}
[; ;main.c: 787: }
[e $U 119  ]
"788
[e :U 118 ]
[; ;main.c: 788: else
[; ;main.c: 789: ADCON1 = adldo;
"789
[e = _ADCON1 _adldo ]
[e :U 119 ]
[; ;main.c: 791: if(adch & 0x10)
"791
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 120  ]
[; ;main.c: 792: {
"792
{
[; ;main.c: 793: CHS4 = 1;
"793
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 794: adch &= 0x0f;
"794
[e =& _adch -> -> 15 `i `uc ]
"795
}
[e :U 120 ]
"796
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 795: }
[; ;main.c: 796: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 797: for (i = 0; i < 10; i++)
"797
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 121  ]
[e $U 122  ]
"798
[e :U 121 ]
[; ;main.c: 798: {
{
[; ;main.c: 799: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"799
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 800: asm("nop");
"800
[; <" nop ;# ">
[; ;main.c: 801: asm("nop");
"801
[; <" nop ;# ">
[; ;main.c: 802: asm("nop");
"802
[; <" nop ;# ">
[; ;main.c: 803: asm("nop");
"803
[; <" nop ;# ">
[; ;main.c: 804: GODONE = 1;
"804
[e = _GODONE -> -> 1 `i `b ]
"806
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 806: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 807: while (GODONE)
"807
[e $U 124  ]
[e :U 125 ]
[; ;main.c: 808: {
"808
{
[; ;main.c: 809: _delay((unsigned long)((2)*(16000000/4000000.0)));
"809
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;main.c: 811: if (0 == (--j))
"811
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 127  ]
[; ;main.c: 812: return 0;
"812
[e ) -> -> 0 `i `uc ]
[e $UE 117  ]
[e :U 127 ]
"813
}
[e :U 124 ]
"807
[e $ _GODONE 125  ]
[e :U 126 ]
[; ;main.c: 813: }
[; ;main.c: 815: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"815
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 817: if (0 == admax)
"817
[e $ ! == -> -> 0 `i `ui _admax 128  ]
[; ;main.c: 818: {
"818
{
[; ;main.c: 819: admax = ad_temp;
"819
[e = _admax _ad_temp ]
[; ;main.c: 820: admin = ad_temp;
"820
[e = _admin _ad_temp ]
"821
}
[; ;main.c: 821: }
[e $U 129  ]
"822
[e :U 128 ]
[; ;main.c: 822: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 130  ]
[; ;main.c: 823: admax = ad_temp;
"823
[e = _admax _ad_temp ]
[e $U 131  ]
"824
[e :U 130 ]
[; ;main.c: 824: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 132  ]
[; ;main.c: 825: admin = ad_temp;
"825
[e = _admin _ad_temp ]
[e :U 132 ]
"827
[e :U 131 ]
[e :U 129 ]
[; ;main.c: 827: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"828
}
"797
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 121  ]
[e :U 122 ]
"828
}
[; ;main.c: 828: }
[; ;main.c: 829: adsum -= admax;
"829
[e =- _adsum -> _admax `ul ]
[; ;main.c: 830: if (adsum >= admin)
"830
[e $ ! >= _adsum -> _admin `ul 133  ]
[; ;main.c: 831: adsum -= admin;
"831
[e =- _adsum -> _admin `ul ]
[e $U 134  ]
"832
[e :U 133 ]
[; ;main.c: 832: else
[; ;main.c: 833: adsum = 0;
"833
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 134 ]
[; ;main.c: 835: adresult = adsum >> 3;
"835
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 837: adsum = 0;
"837
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 838: admin = 0;
"838
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 839: admax = 0;
"839
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 840: return 0xA5;
"840
[e ) -> -> 165 `i `uc ]
[e $UE 117  ]
[; ;main.c: 842: }
"842
[e :UE 117 ]
}
