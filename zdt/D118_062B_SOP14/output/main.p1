Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"49 C:\mcuproject\scm\zdt\D118_062B_SOP14\main.c
[v _Init_System `(v ~T0 @X0 0 ef ]
"50
[v _AD_Init `(v ~T0 @X0 0 ef ]
"52
[v _pwmCtr `(v ~T0 @X0 0 ef ]
"56
[v _chrgCtr `(v ~T0 @X0 0 ef ]
"58
[v _checkBatAD `(v ~T0 @X0 0 ef ]
"60
[v _keyCtr `(v ~T0 @X0 0 ef ]
"61
[v _workCtr `(v ~T0 @X0 0 ef ]
"62
[v _ledCtr `(v ~T0 @X0 0 ef ]
"51
[v _Sleep_Mode `(v ~T0 @X0 0 ef ]
"46
[v _ADC_Sample `(uc ~T0 @X0 0 ef2`uc`uc ]
[v F479 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF479 ~T0 @X0 0 e ]
[p i __delay ]
"4 C:\mcuproject\scm\zdt\D118_062B_SOP14\main.c
[p n 752 ]
"5
[p n 373 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\SC8P062BD.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;SC8P062BD.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;SC8P062BD.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;SC8P062BD.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;SC8P062BD.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;SC8P062BD.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;SC8P062BD.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;SC8P062BD.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;SC8P062BD.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMPCON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 20: volatile unsigned char CMPCON0 @ 0x0F;
"21
[v _CMPCON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;SC8P062BD.h: 21: volatile unsigned char CMPCON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;SC8P062BD.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;SC8P062BD.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;SC8P062BD.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P062BD.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;SC8P062BD.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;SC8P062BD.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;SC8P062BD.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;SC8P062BD.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;SC8P062BD.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;SC8P062BD.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;SC8P062BD.h: 44: volatile unsigned char ANSEL0 @ 0x93;
"45
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;SC8P062BD.h: 45: volatile unsigned char ANSEL1 @ 0x94;
"46
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;SC8P062BD.h: 46: volatile unsigned char ADCON0 @ 0x95;
"47
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;SC8P062BD.h: 47: volatile unsigned char ADCON1 @ 0x96;
"48
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 48: volatile unsigned char ADRESL @ 0x98;
"49
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 49: volatile unsigned char ADRESH @ 0x99;
"50
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 50: volatile unsigned char PWMD2L @ 0x9B;
"51
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 51: volatile unsigned char PWMD3L @ 0x9C;
"52
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 52: volatile unsigned char PWM23DT @ 0x9D;
"53
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 53: volatile unsigned char PWMD23H @ 0x9E;
"55
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 55: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"56
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 56: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"57
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 57: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"58
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 58: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"59
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 59: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"60
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 60: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"61
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 61: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"62
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 62: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"65
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 65: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"66
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 66: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"67
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 67: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"68
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 68: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"69
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 69: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"70
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 70: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"71
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 71: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"72
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 72: volatile bit C @ ((unsigned)&STATUS*8)+0;
"75
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P062BD.h: 75: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"76
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P062BD.h: 76: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"77
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P062BD.h: 77: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"78
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P062BD.h: 78: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"79
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P062BD.h: 79: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"80
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P062BD.h: 80: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"81
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P062BD.h: 81: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"82
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P062BD.h: 82: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"85
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;SC8P062BD.h: 85: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"86
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;SC8P062BD.h: 86: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"87
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;SC8P062BD.h: 87: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"88
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;SC8P062BD.h: 88: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"89
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;SC8P062BD.h: 89: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"90
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;SC8P062BD.h: 90: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"91
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;SC8P062BD.h: 91: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"92
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;SC8P062BD.h: 92: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"95
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;SC8P062BD.h: 95: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"96
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;SC8P062BD.h: 96: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"97
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;SC8P062BD.h: 97: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"98
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;SC8P062BD.h: 98: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"99
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;SC8P062BD.h: 99: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"100
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;SC8P062BD.h: 100: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"101
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;SC8P062BD.h: 101: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"104
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;SC8P062BD.h: 104: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"105
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;SC8P062BD.h: 105: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"106
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;SC8P062BD.h: 106: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"107
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;SC8P062BD.h: 107: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"108
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;SC8P062BD.h: 108: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"109
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;SC8P062BD.h: 109: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"110
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;SC8P062BD.h: 110: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"111
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P062BD.h: 111: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"114
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;SC8P062BD.h: 114: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"115
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;SC8P062BD.h: 115: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"116
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;SC8P062BD.h: 116: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"117
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;SC8P062BD.h: 117: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"118
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P062BD.h: 118: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"119
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;SC8P062BD.h: 119: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"120
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;SC8P062BD.h: 120: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"121
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P062BD.h: 121: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"124
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;SC8P062BD.h: 124: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"125
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;SC8P062BD.h: 125: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"126
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;SC8P062BD.h: 126: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"127
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;SC8P062BD.h: 127: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"128
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;SC8P062BD.h: 128: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"129
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;SC8P062BD.h: 129: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"130
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;SC8P062BD.h: 130: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"131
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;SC8P062BD.h: 131: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"134
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;SC8P062BD.h: 134: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"135
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;SC8P062BD.h: 135: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"136
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;SC8P062BD.h: 136: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"137
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;SC8P062BD.h: 137: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"138
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;SC8P062BD.h: 138: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"139
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;SC8P062BD.h: 139: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"140
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;SC8P062BD.h: 140: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"143
[v _CMPIF `Vb ~T0 @X0 1 e@109 ]
[; ;SC8P062BD.h: 143: volatile bit CMPIF @ ((unsigned)&PIR1*8)+5;
"144
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;SC8P062BD.h: 144: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"145
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;SC8P062BD.h: 145: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"146
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;SC8P062BD.h: 146: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"147
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;SC8P062BD.h: 147: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"150
[v _CMPIE `Vb ~T0 @X0 1 e@117 ]
[; ;SC8P062BD.h: 150: volatile bit CMPIE @ ((unsigned)&PIE1*8)+5;
"151
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;SC8P062BD.h: 151: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"152
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;SC8P062BD.h: 152: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"153
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;SC8P062BD.h: 153: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"154
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;SC8P062BD.h: 154: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"157
[v _CMPEN `Vb ~T0 @X0 1 e@127 ]
[; ;SC8P062BD.h: 157: volatile bit CMPEN @ ((unsigned)&CMPCON0*8)+7;
"158
[v _CMPPS `Vb ~T0 @X0 1 e@126 ]
[; ;SC8P062BD.h: 158: volatile bit CMPPS @ ((unsigned)&CMPCON0*8)+6;
"159
[v _CMPNS2 `Vb ~T0 @X0 1 e@125 ]
[; ;SC8P062BD.h: 159: volatile bit CMPNS2 @ ((unsigned)&CMPCON0*8)+5;
"160
[v _CMPNS1 `Vb ~T0 @X0 1 e@124 ]
[; ;SC8P062BD.h: 160: volatile bit CMPNS1 @ ((unsigned)&CMPCON0*8)+4;
"161
[v _CMPNS0 `Vb ~T0 @X0 1 e@123 ]
[; ;SC8P062BD.h: 161: volatile bit CMPNS0 @ ((unsigned)&CMPCON0*8)+3;
"162
[v _CMPNV `Vb ~T0 @X0 1 e@122 ]
[; ;SC8P062BD.h: 162: volatile bit CMPNV @ ((unsigned)&CMPCON0*8)+2;
"163
[v _CMPOUT `Vb ~T0 @X0 1 e@121 ]
[; ;SC8P062BD.h: 163: volatile bit CMPOUT @ ((unsigned)&CMPCON0*8)+1;
"164
[v _CMPOEN `Vb ~T0 @X0 1 e@120 ]
[; ;SC8P062BD.h: 164: volatile bit CMPOEN @ ((unsigned)&CMPCON0*8)+0;
"167
[v _CMPIM `Vb ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 167: volatile bit CMPIM @ ((unsigned)&CMPCON1*8)+7;
"168
[v _AN_EN `Vb ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 168: volatile bit AN_EN @ ((unsigned)&CMPCON1*8)+6;
"169
[v _RBIAS_H `Vb ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 169: volatile bit RBIAS_H @ ((unsigned)&CMPCON1*8)+5;
"170
[v _RBIAS_L `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P062BD.h: 170: volatile bit RBIAS_L @ ((unsigned)&CMPCON1*8)+4;
"171
[v _LVDS3 `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P062BD.h: 171: volatile bit LVDS3 @ ((unsigned)&CMPCON1*8)+3;
"172
[v _LVDS2 `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P062BD.h: 172: volatile bit LVDS2 @ ((unsigned)&CMPCON1*8)+2;
"173
[v _LVDS1 `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 173: volatile bit LVDS1 @ ((unsigned)&CMPCON1*8)+1;
"174
[v _LVDS0 `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P062BD.h: 174: volatile bit LVDS0 @ ((unsigned)&CMPCON1*8)+0;
"177
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;SC8P062BD.h: 177: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"178
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 178: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"179
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 179: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"180
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 180: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"181
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 181: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"182
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;SC8P062BD.h: 182: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"183
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 183: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"184
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 184: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"187
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;SC8P062BD.h: 187: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"188
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;SC8P062BD.h: 188: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"189
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;SC8P062BD.h: 189: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"190
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;SC8P062BD.h: 190: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"193
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;SC8P062BD.h: 193: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"194
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P062BD.h: 194: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"195
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;SC8P062BD.h: 195: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"196
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;SC8P062BD.h: 196: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"197
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;SC8P062BD.h: 197: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"198
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;SC8P062BD.h: 198: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"199
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;SC8P062BD.h: 199: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"200
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;SC8P062BD.h: 200: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"203
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;SC8P062BD.h: 203: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"204
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;SC8P062BD.h: 204: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"205
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;SC8P062BD.h: 205: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"206
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;SC8P062BD.h: 206: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"207
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;SC8P062BD.h: 207: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"208
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;SC8P062BD.h: 208: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"211
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;SC8P062BD.h: 211: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"212
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;SC8P062BD.h: 212: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"213
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;SC8P062BD.h: 213: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"214
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;SC8P062BD.h: 214: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"215
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;SC8P062BD.h: 215: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"216
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;SC8P062BD.h: 216: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"219
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;SC8P062BD.h: 219: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"220
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;SC8P062BD.h: 220: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"221
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;SC8P062BD.h: 221: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"222
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;SC8P062BD.h: 222: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"223
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;SC8P062BD.h: 223: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"226
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;SC8P062BD.h: 226: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"227
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;SC8P062BD.h: 227: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"228
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;SC8P062BD.h: 228: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"229
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;SC8P062BD.h: 229: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"232
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;SC8P062BD.h: 232: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"233
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;SC8P062BD.h: 233: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"234
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;SC8P062BD.h: 234: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"235
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;SC8P062BD.h: 235: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"236
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;SC8P062BD.h: 236: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"237
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;SC8P062BD.h: 237: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"240
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;SC8P062BD.h: 240: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"241
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;SC8P062BD.h: 241: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"242
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;SC8P062BD.h: 242: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"243
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;SC8P062BD.h: 243: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"244
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;SC8P062BD.h: 244: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"245
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;SC8P062BD.h: 245: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"248
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;SC8P062BD.h: 248: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"249
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;SC8P062BD.h: 249: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"250
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;SC8P062BD.h: 250: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"251
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;SC8P062BD.h: 251: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"252
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;SC8P062BD.h: 252: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"253
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;SC8P062BD.h: 253: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"256
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;SC8P062BD.h: 256: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"257
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;SC8P062BD.h: 257: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"258
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;SC8P062BD.h: 258: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"259
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;SC8P062BD.h: 259: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"260
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;SC8P062BD.h: 260: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"261
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;SC8P062BD.h: 261: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"264
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;SC8P062BD.h: 264: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"265
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;SC8P062BD.h: 265: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"266
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;SC8P062BD.h: 266: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"267
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;SC8P062BD.h: 267: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"268
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;SC8P062BD.h: 268: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"269
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;SC8P062BD.h: 269: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"272
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;SC8P062BD.h: 272: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"273
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;SC8P062BD.h: 273: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"274
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;SC8P062BD.h: 274: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"275
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;SC8P062BD.h: 275: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"276
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;SC8P062BD.h: 276: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"277
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;SC8P062BD.h: 277: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"280
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;SC8P062BD.h: 280: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"281
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;SC8P062BD.h: 281: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"282
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;SC8P062BD.h: 282: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"283
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;SC8P062BD.h: 283: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"284
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;SC8P062BD.h: 284: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"285
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;SC8P062BD.h: 285: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"288
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;SC8P062BD.h: 288: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"289
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;SC8P062BD.h: 289: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"290
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;SC8P062BD.h: 290: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"291
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;SC8P062BD.h: 291: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"292
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;SC8P062BD.h: 292: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"293
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;SC8P062BD.h: 293: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"296
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;SC8P062BD.h: 296: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"297
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;SC8P062BD.h: 297: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"298
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;SC8P062BD.h: 298: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"299
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;SC8P062BD.h: 299: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"300
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;SC8P062BD.h: 300: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"301
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;SC8P062BD.h: 301: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"302
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;SC8P062BD.h: 302: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"305
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;SC8P062BD.h: 305: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"306
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;SC8P062BD.h: 306: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"307
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;SC8P062BD.h: 307: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"308
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;SC8P062BD.h: 308: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"309
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;SC8P062BD.h: 309: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"310
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;SC8P062BD.h: 310: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"311
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;SC8P062BD.h: 311: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"312
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;SC8P062BD.h: 312: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"315
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;SC8P062BD.h: 315: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"316
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;SC8P062BD.h: 316: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"317
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;SC8P062BD.h: 317: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"318
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;SC8P062BD.h: 318: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"319
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;SC8P062BD.h: 319: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"322
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;SC8P062BD.h: 322: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"323
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;SC8P062BD.h: 323: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"324
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;SC8P062BD.h: 324: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"325
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;SC8P062BD.h: 325: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"18 C:\mcuproject\scm\zdt\D118_062B_SOP14\main.c
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 18: volatile unsigned int adresult;
"19
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 19: volatile unsigned int result;
"20
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 20: volatile unsigned char test_adc;
"21
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 21: volatile unsigned int power_ad;
"22
[v _intCount `uc ~T0 @X0 1 e ]
[; ;main.c: 22: unsigned char intCount;
"23
[v _count1s `uc ~T0 @X0 1 e ]
[; ;main.c: 23: unsigned char count1s;
"24
[v _IntFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 24: unsigned char IntFlag;
"25
[v _chrgFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 25: unsigned char chrgFlag;
"26
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 26: unsigned char chrgFullFlag;
"27
[v _intCount10 `uc ~T0 @X0 1 e ]
[; ;main.c: 27: unsigned char intCount10;
"28
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 28: unsigned char workStep = 0;
"29
[v _ledCnt `uc ~T0 @X0 1 e ]
[; ;main.c: 29: unsigned char ledCnt;
"30
[v _ledStep `uc ~T0 @X0 1 e ]
[; ;main.c: 30: unsigned char ledStep;
"31
[v _keyCount `uc ~T0 @X0 1 e ]
[; ;main.c: 31: unsigned char keyCount;
"32
[v _longPressFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 32: unsigned char longPressFlag;
"33
[v _firstTime `uc ~T0 @X0 1 e ]
[; ;main.c: 33: unsigned char firstTime;
"34
[v _showBatTime `uc ~T0 @X0 1 e ]
[; ;main.c: 34: unsigned char showBatTime;
"35
[v _fullCount `ui ~T0 @X0 1 e ]
[i _fullCount
-> -> 0 `i `ui
]
[; ;main.c: 35: unsigned int fullCount = 0;
"36
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 36: unsigned char lowBatFlag = 0;
"37
[v _sleepTime `uc ~T0 @X0 1 e ]
[; ;main.c: 37: unsigned char sleepTime;
"38
[v _shanshuoTime `uc ~T0 @X0 1 e ]
[i _shanshuoTime
-> -> 0 `i `uc
]
[; ;main.c: 38: unsigned char shanshuoTime = 0;
"39
[v _motorDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 39: unsigned char motorDuty;
"40
[v _motorCount `uc ~T0 @X0 1 e ]
[; ;main.c: 40: unsigned char motorCount;
"41
[v _motorMaxCount `uc ~T0 @X0 1 e ]
[; ;main.c: 41: unsigned char motorMaxCount;
"42
[v _preStep `uc ~T0 @X0 1 e ]
[; ;main.c: 42: unsigned char preStep;
"43
[v _count500ms `uc ~T0 @X0 1 e ]
[; ;main.c: 43: unsigned char count500ms;
"44
[v _lowBatTime `uc ~T0 @X0 1 e ]
[; ;main.c: 44: unsigned char lowBatTime;
[; ;main.c: 46: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
[; ;main.c: 47: void DelayXms(unsigned char x);
[; ;main.c: 48: unsigned char ADC_Result(unsigned char adch);
[; ;main.c: 49: void Init_System();
[; ;main.c: 50: void AD_Init();
[; ;main.c: 51: void Sleep_Mode();
[; ;main.c: 52: void pwmCtr();
[; ;main.c: 53: void pwmStop();
[; ;main.c: 54: void chrgPwmInit();
[; ;main.c: 55: void chrgPwmStop();
[; ;main.c: 56: void chrgCtr();
[; ;main.c: 57: void checkOutA();
[; ;main.c: 58: void checkBatAD();
[; ;main.c: 59: void ledShow();
[; ;main.c: 60: void keyCtr();
[; ;main.c: 61: void workCtr();
[; ;main.c: 62: void ledCtr();
[; ;main.c: 63: char keyRead(char keyStatus);
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F534 `(v ~T0 @X0 1 tf ]
"78
[v _Isr_Timer `IF534 ~T0 @X0 1 e ]
"79
{
[; ;main.c: 78: void interrupt Isr_Timer()
[; ;main.c: 79: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 80: if(TMR2IF)
"80
[e $ ! _TMR2IF 2  ]
[; ;main.c: 81: {
"81
{
[; ;main.c: 82: TMR2IF = 0;
"82
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 83: if(++intCount >= 160)
"83
[e $ ! >= -> =+ _intCount -> -> 1 `i `uc `i -> 160 `i 3  ]
[; ;main.c: 84: {
"84
{
[; ;main.c: 85: intCount = 0;
"85
[e = _intCount -> -> 0 `i `uc ]
[; ;main.c: 86: IntFlag = 1;
"86
[e = _IntFlag -> -> 1 `i `uc ]
[; ;main.c: 87: if(++count1s >= 100)
"87
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 4  ]
[; ;main.c: 88: {
"88
{
[; ;main.c: 89: count1s = 0;
"89
[e = _count1s -> -> 0 `i `uc ]
"90
}
[e :U 4 ]
"91
}
[e :U 3 ]
[; ;main.c: 90: }
[; ;main.c: 91: }
[; ;main.c: 92: intCount10++;
"92
[e ++ _intCount10 -> -> 1 `i `uc ]
"93
}
[e :U 2 ]
[; ;main.c: 93: }
[; ;main.c: 95: }
"95
[e :UE 1 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"101
[v _main `(v ~T0 @X0 1 ef ]
"102
{
[; ;main.c: 101: void main()
[; ;main.c: 102: {
[e :U _main ]
[f ]
[; ;main.c: 103: Init_System();
"103
[e ( _Init_System ..  ]
[; ;main.c: 104: AD_Init();
"104
[e ( _AD_Init ..  ]
[; ;main.c: 105: firstTime = 200;
"105
[e = _firstTime -> -> 200 `i `uc ]
[; ;main.c: 106: while (1)
"106
[e :U 7 ]
[; ;main.c: 107: {
"107
{
[; ;main.c: 108: asm("clrwdt");
"108
[; <" clrwdt ;# ">
[; ;main.c: 109: if(workStep > 0)
"109
[e $ ! > -> _workStep `i -> 0 `i 9  ]
[; ;main.c: 110: {
"110
{
[; ;main.c: 111: pwmCtr();
"111
[e ( _pwmCtr ..  ]
"112
}
[e :U 9 ]
[; ;main.c: 112: }
[; ;main.c: 113: if(!IntFlag)
"113
[e $ ! ! != -> _IntFlag `i -> -> -> 0 `i `uc `i 10  ]
[; ;main.c: 114: continue;
"114
[e $U 6  ]
[e :U 10 ]
[; ;main.c: 115: IntFlag = 0;
"115
[e = _IntFlag -> -> 0 `i `uc ]
[; ;main.c: 116: chrgCtr();
"116
[e ( _chrgCtr ..  ]
[; ;main.c: 117: checkBatAD();
"117
[e ( _checkBatAD ..  ]
[; ;main.c: 118: if(chrgFlag == 0)
"118
[e $ ! == -> _chrgFlag `i -> 0 `i 11  ]
[; ;main.c: 119: {
"119
{
[; ;main.c: 120: keyCtr();
"120
[e ( _keyCtr ..  ]
"121
}
[e :U 11 ]
[; ;main.c: 121: }
[; ;main.c: 122: workCtr();
"122
[e ( _workCtr ..  ]
[; ;main.c: 123: ledCtr();
"123
[e ( _ledCtr ..  ]
[; ;main.c: 124: if(chrgFlag == 0 && workStep == 0 && keyCount == 0 && firstTime == 0 && shanshuoTime == 0)
"124
[e $ ! && && && && == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _firstTime `i -> 0 `i == -> _shanshuoTime `i -> 0 `i 12  ]
[; ;main.c: 125: {
"125
{
[; ;main.c: 126: if(++sleepTime >= 200)
"126
[e $ ! >= -> =+ _sleepTime -> -> 1 `i `uc `i -> 200 `i 13  ]
[; ;main.c: 127: {
"127
{
[; ;main.c: 128: sleepTime = 0;
"128
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 129: Sleep_Mode();
"129
[e ( _Sleep_Mode ..  ]
"130
}
[e :U 13 ]
"131
}
[; ;main.c: 130: }
[; ;main.c: 131: }
[e $U 14  ]
"132
[e :U 12 ]
[; ;main.c: 132: else
[; ;main.c: 133: {
"133
{
[; ;main.c: 134: sleepTime = 0;
"134
[e = _sleepTime -> -> 0 `i `uc ]
"135
}
[e :U 14 ]
"136
}
[e :U 6 ]
"106
[e $U 7  ]
[e :U 8 ]
[; ;main.c: 135: }
[; ;main.c: 136: }
[; ;main.c: 137: }
"137
[e :UE 5 ]
}
"141
[v _ledCtr `(v ~T0 @X0 1 ef ]
"142
{
[; ;main.c: 141: void ledCtr()
[; ;main.c: 142: {
[e :U _ledCtr ]
[f ]
[; ;main.c: 143: if(firstTime > 0)
"143
[e $ ! > -> _firstTime `i -> 0 `i 16  ]
[; ;main.c: 144: {
"144
{
[; ;main.c: 145: firstTime--;
"145
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 146: PORTA = 0x00;
"146
[e = _PORTA -> -> 0 `i `uc ]
"147
}
[; ;main.c: 147: }
[e $U 17  ]
"148
[e :U 16 ]
[; ;main.c: 148: else if(shanshuoTime > 0)
[e $ ! > -> _shanshuoTime `i -> 0 `i 18  ]
[; ;main.c: 149: {
"149
{
[; ;main.c: 150: shanshuoTime--;
"150
[e -- _shanshuoTime -> -> 1 `i `uc ]
[; ;main.c: 151: if(shanshuoTime % 50 < 25)
"151
[e $ ! < % -> _shanshuoTime `i -> 50 `i -> 25 `i 19  ]
[; ;main.c: 152: {
"152
{
[; ;main.c: 153: PORTA = 0x0E;
"153
[e = _PORTA -> -> 14 `i `uc ]
"154
}
[; ;main.c: 154: }
[e $U 20  ]
"155
[e :U 19 ]
[; ;main.c: 155: else
[; ;main.c: 156: {
"156
{
[; ;main.c: 157: PORTA = 0x00;
"157
[e = _PORTA -> -> 0 `i `uc ]
"158
}
[e :U 20 ]
"159
}
[; ;main.c: 158: }
[; ;main.c: 159: }
[e $U 21  ]
"160
[e :U 18 ]
[; ;main.c: 160: else if(workStep > 0)
[e $ ! > -> _workStep `i -> 0 `i 22  ]
[; ;main.c: 161: {
"161
{
[; ;main.c: 162: preStep = workStep;
"162
[e = _preStep _workStep ]
"163
}
[; ;main.c: 163: }
[e $U 23  ]
"164
[e :U 22 ]
[; ;main.c: 164: else if(chrgFlag)
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 24  ]
[; ;main.c: 165: {
"165
{
[; ;main.c: 166: if(chrgFullFlag)
"166
[e $ ! != -> _chrgFullFlag `i -> -> -> 0 `i `uc `i 25  ]
[; ;main.c: 167: {
"167
{
[; ;main.c: 169: PORTA = 0x00;
"169
[e = _PORTA -> -> 0 `i `uc ]
"170
}
[; ;main.c: 170: }
[e $U 26  ]
"171
[e :U 25 ]
[; ;main.c: 171: else
[; ;main.c: 172: {
"172
{
[; ;main.c: 174: if(++count500ms > 50)
"174
[e $ ! > -> =+ _count500ms -> -> 1 `i `uc `i -> 50 `i 27  ]
[; ;main.c: 175: {
"175
{
[; ;main.c: 176: count500ms = 0;
"176
[e = _count500ms -> -> 0 `i `uc ]
[; ;main.c: 177: if(++ledStep > 3)
"177
[e $ ! > -> =+ _ledStep -> -> 1 `i `uc `i -> 3 `i 28  ]
[; ;main.c: 178: {
"178
{
[; ;main.c: 179: ledStep = 1;
"179
[e = _ledStep -> -> 1 `i `uc ]
"180
}
[e :U 28 ]
"181
}
[e :U 27 ]
[; ;main.c: 180: }
[; ;main.c: 181: }
[; ;main.c: 182: if(ledStep == 3)
"182
[e $ ! == -> _ledStep `i -> 3 `i 29  ]
[; ;main.c: 183: {
"183
{
[; ;main.c: 184: PORTA = 0x00;
"184
[e = _PORTA -> -> 0 `i `uc ]
"185
}
[; ;main.c: 185: }
[e $U 30  ]
"186
[e :U 29 ]
[; ;main.c: 186: else if(ledStep == 2)
[e $ ! == -> _ledStep `i -> 2 `i 31  ]
[; ;main.c: 187: {
"187
{
[; ;main.c: 188: PORTA = 0x08;
"188
[e = _PORTA -> -> 8 `i `uc ]
"189
}
[; ;main.c: 189: }
[e $U 32  ]
"190
[e :U 31 ]
[; ;main.c: 190: else if(ledStep == 1)
[e $ ! == -> _ledStep `i -> 1 `i 33  ]
[; ;main.c: 191: {
"191
{
[; ;main.c: 192: PORTA = 0x0C;
"192
[e = _PORTA -> -> 12 `i `uc ]
"193
}
[; ;main.c: 193: }
[e $U 34  ]
"194
[e :U 33 ]
[; ;main.c: 194: else if(ledStep == 0)
[e $ ! == -> _ledStep `i -> 0 `i 35  ]
[; ;main.c: 195: {
"195
{
[; ;main.c: 196: PORTA = 0x0E;
"196
[e = _PORTA -> -> 14 `i `uc ]
"197
}
[e :U 35 ]
"198
[e :U 34 ]
[e :U 32 ]
[e :U 30 ]
}
[e :U 26 ]
"199
}
[; ;main.c: 197: }
[; ;main.c: 198: }
[; ;main.c: 199: }
[e $U 36  ]
"200
[e :U 24 ]
[; ;main.c: 200: else
[; ;main.c: 201: {
"201
{
[; ;main.c: 202: PORTA = 0x0E;
"202
[e = _PORTA -> -> 14 `i `uc ]
"203
}
[e :U 36 ]
[e :U 23 ]
[e :U 21 ]
[e :U 17 ]
[; ;main.c: 203: }
[; ;main.c: 205: }
"205
[e :UE 15 ]
}
"209
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"210
{
[; ;main.c: 209: void chrgCtr()
[; ;main.c: 210: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 211: if(PORTB & 0x20)
"211
[e $ ! != & -> _PORTB `i -> 32 `i -> 0 `i 38  ]
[; ;main.c: 212: {
"212
{
[; ;main.c: 213: chrgFlag = 1;
"213
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 214: workStep = 0;
"214
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 215: lowBatFlag = 0;
"215
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 216: if(PORTB & 0x10)
"216
[e $ ! != & -> _PORTB `i -> 16 `i -> 0 `i 39  ]
[; ;main.c: 217: {
"217
{
[; ;main.c: 218: if(++fullCount > 200)
"218
[e $ ! > =+ _fullCount -> -> 1 `i `ui -> -> 200 `i `ui 40  ]
[; ;main.c: 219: {
"219
{
[; ;main.c: 220: fullCount = 0;
"220
[e = _fullCount -> -> 0 `i `ui ]
[; ;main.c: 221: chrgFullFlag = 1;
"221
[e = _chrgFullFlag -> -> 1 `i `uc ]
"222
}
[e :U 40 ]
"223
}
[; ;main.c: 222: }
[; ;main.c: 223: }
[e $U 41  ]
"224
[e :U 39 ]
[; ;main.c: 224: else if(power_ad > 4180)
[e $ ! > _power_ad -> -> 4180 `i `ui 42  ]
[; ;main.c: 225: {
"225
{
[; ;main.c: 226: if(++fullCount > 200)
"226
[e $ ! > =+ _fullCount -> -> 1 `i `ui -> -> 200 `i `ui 43  ]
[; ;main.c: 227: {
"227
{
[; ;main.c: 228: fullCount = 0;
"228
[e = _fullCount -> -> 0 `i `ui ]
[; ;main.c: 229: chrgFullFlag = 1;
"229
[e = _chrgFullFlag -> -> 1 `i `uc ]
"230
}
[e :U 43 ]
"231
}
[; ;main.c: 230: }
[; ;main.c: 231: }
[e $U 44  ]
"232
[e :U 42 ]
[; ;main.c: 232: else
[; ;main.c: 233: {
"233
{
[; ;main.c: 234: fullCount = 0;
"234
[e = _fullCount -> -> 0 `i `ui ]
"235
}
[e :U 44 ]
[e :U 41 ]
"236
}
[; ;main.c: 235: }
[; ;main.c: 236: }
[e $U 45  ]
"237
[e :U 38 ]
[; ;main.c: 237: else
[; ;main.c: 238: {
"238
{
[; ;main.c: 239: chrgFlag = 0;
"239
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 240: chrgFullFlag = 0;
"240
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 241: fullCount = 0;
"241
[e = _fullCount -> -> 0 `i `ui ]
[; ;main.c: 242: if(power_ad < 2800)
"242
[e $ ! < _power_ad -> -> 2800 `i `ui 46  ]
[; ;main.c: 243: {
"243
{
[; ;main.c: 244: if(++lowBatTime >= 200)
"244
[e $ ! >= -> =+ _lowBatTime -> -> 1 `i `uc `i -> 200 `i 47  ]
[; ;main.c: 245: {
"245
{
[; ;main.c: 246: lowBatTime = 0;
"246
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 247: if(workStep > 0)
"247
[e $ ! > -> _workStep `i -> 0 `i 48  ]
[; ;main.c: 248: {
"248
{
[; ;main.c: 249: workStep = 0;
"249
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 250: lowBatFlag = 1;
"250
[e = _lowBatFlag -> -> 1 `i `uc ]
[; ;main.c: 251: shanshuoTime = 250;
"251
[e = _shanshuoTime -> -> 250 `i `uc ]
"252
}
[e :U 48 ]
"253
}
[e :U 47 ]
"254
}
[; ;main.c: 252: }
[; ;main.c: 253: }
[; ;main.c: 254: }
[e $U 49  ]
"255
[e :U 46 ]
[; ;main.c: 255: else
[; ;main.c: 256: {
"256
{
[; ;main.c: 257: lowBatTime = 0;
"257
[e = _lowBatTime -> -> 0 `i `uc ]
"258
}
[e :U 49 ]
"259
}
[e :U 45 ]
[; ;main.c: 258: }
[; ;main.c: 259: }
[; ;main.c: 260: }
"260
[e :UE 37 ]
}
"264
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"265
{
[; ;main.c: 264: char keyRead(char keyStatus)
[; ;main.c: 265: {
[e :U _keyRead ]
"264
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"265
[f ]
[; ;main.c: 266: if(keyStatus)
"266
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 51  ]
[; ;main.c: 267: {
"267
{
[; ;main.c: 268: keyCount++;
"268
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 269: if(keyCount >= 100)
"269
[e $ ! >= -> _keyCount `i -> 100 `i 52  ]
[; ;main.c: 270: {
"270
{
[; ;main.c: 271: keyCount = 100;
"271
[e = _keyCount -> -> 100 `i `uc ]
[; ;main.c: 272: if(!longPressFlag)
"272
[e $ ! ! != -> _longPressFlag `i -> -> -> 0 `i `uc `i 53  ]
[; ;main.c: 273: {
"273
{
[; ;main.c: 274: longPressFlag = 1;
"274
[e = _longPressFlag -> -> 1 `i `uc ]
[; ;main.c: 275: return 2;
"275
[e ) -> -> 2 `i `uc ]
[e $UE 50  ]
"276
}
[e :U 53 ]
"277
}
[e :U 52 ]
"278
}
[; ;main.c: 276: }
[; ;main.c: 277: }
[; ;main.c: 278: }
[e $U 54  ]
"279
[e :U 51 ]
[; ;main.c: 279: else
[; ;main.c: 280: {
"280
{
[; ;main.c: 281: if(keyCount >= 100)
"281
[e $ ! >= -> _keyCount `i -> 100 `i 55  ]
[; ;main.c: 282: {
"282
{
[; ;main.c: 283: keyCount = 0;
"283
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 284: longPressFlag = 0;
"284
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 285: return 0;
"285
[e ) -> -> 0 `i `uc ]
[e $UE 50  ]
"286
}
[; ;main.c: 286: }
[e $U 56  ]
"287
[e :U 55 ]
[; ;main.c: 287: else if(keyCount >= 6)
[e $ ! >= -> _keyCount `i -> 6 `i 57  ]
[; ;main.c: 288: {
"288
{
[; ;main.c: 289: keyCount = 0;
"289
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 290: return 1;
"290
[e ) -> -> 1 `i `uc ]
[e $UE 50  ]
"291
}
[e :U 57 ]
"292
[e :U 56 ]
[; ;main.c: 291: }
[; ;main.c: 292: keyCount = 0;
[e = _keyCount -> -> 0 `i `uc ]
"293
}
[e :U 54 ]
[; ;main.c: 293: }
[; ;main.c: 294: return 0;
"294
[e ) -> -> 0 `i `uc ]
[e $UE 50  ]
[; ;main.c: 295: }
"295
[e :UE 50 ]
}
"297
[v _keyCtr `(v ~T0 @X0 1 ef ]
"298
{
[; ;main.c: 297: void keyCtr()
[; ;main.c: 298: {
[e :U _keyCtr ]
[f ]
"299
[v _kclick `uc ~T0 @X0 1 a ]
[; ;main.c: 299: char kclick = keyRead(0x04 & (~PORTB));
[e = _kclick ( _keyRead (1 -> & -> 4 `i ~ -> _PORTB `i `uc ]
[; ;main.c: 300: if(kclick == 1)
"300
[e $ ! == -> _kclick `i -> 1 `i 59  ]
[; ;main.c: 301: {
"301
{
[; ;main.c: 302: if(workStep > 0)
"302
[e $ ! > -> _workStep `i -> 0 `i 60  ]
[; ;main.c: 303: {
"303
{
[; ;main.c: 304: if(++workStep > 3)
"304
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 3 `i 61  ]
[; ;main.c: 305: {
"305
{
[; ;main.c: 306: workStep = 1;
"306
[e = _workStep -> -> 1 `i `uc ]
"307
}
[e :U 61 ]
"308
}
[; ;main.c: 307: }
[; ;main.c: 308: }
[e $U 62  ]
"309
[e :U 60 ]
[; ;main.c: 309: else if(showBatTime > 0)
[e $ ! > -> _showBatTime `i -> 0 `i 63  ]
[; ;main.c: 310: {
"310
{
[; ;main.c: 311: showBatTime = 0;
"311
[e = _showBatTime -> -> 0 `i `uc ]
"312
}
[; ;main.c: 312: }
[e $U 64  ]
"313
[e :U 63 ]
[; ;main.c: 313: else
[; ;main.c: 314: {
"314
{
[; ;main.c: 315: showBatTime = 200;
"315
[e = _showBatTime -> -> 200 `i `uc ]
[; ;main.c: 316: count1s = 0;
"316
[e = _count1s -> -> 0 `i `uc ]
"317
}
[e :U 64 ]
[e :U 62 ]
"318
}
[; ;main.c: 317: }
[; ;main.c: 318: }
[e $U 65  ]
"319
[e :U 59 ]
[; ;main.c: 319: else if(kclick == 2)
[e $ ! == -> _kclick `i -> 2 `i 66  ]
[; ;main.c: 320: {
"320
{
[; ;main.c: 321: if(workStep > 0)
"321
[e $ ! > -> _workStep `i -> 0 `i 67  ]
[; ;main.c: 322: {
"322
{
[; ;main.c: 323: workStep = 0;
"323
[e = _workStep -> -> 0 `i `uc ]
"324
}
[; ;main.c: 324: }
[e $U 68  ]
"325
[e :U 67 ]
[; ;main.c: 325: else if(lowBatFlag)
[e $ ! != -> _lowBatFlag `i -> -> -> 0 `i `uc `i 69  ]
[; ;main.c: 326: {
"326
{
[; ;main.c: 327: shanshuoTime = 250;
"327
[e = _shanshuoTime -> -> 250 `i `uc ]
"328
}
[; ;main.c: 328: }
[e $U 70  ]
"329
[e :U 69 ]
[; ;main.c: 329: else
[; ;main.c: 330: {
"330
{
[; ;main.c: 331: if(preStep > 0)
"331
[e $ ! > -> _preStep `i -> 0 `i 71  ]
[; ;main.c: 332: {
"332
{
[; ;main.c: 333: workStep = preStep;
"333
[e = _workStep _preStep ]
"334
}
[; ;main.c: 334: }
[e $U 72  ]
"335
[e :U 71 ]
[; ;main.c: 335: else
[; ;main.c: 336: {
"336
{
[; ;main.c: 337: workStep = 1;
"337
[e = _workStep -> -> 1 `i `uc ]
"338
}
[e :U 72 ]
[; ;main.c: 338: }
[; ;main.c: 339: showBatTime = 0;
"339
[e = _showBatTime -> -> 0 `i `uc ]
"340
}
[e :U 70 ]
[e :U 68 ]
"341
}
[e :U 66 ]
"342
[e :U 65 ]
[; ;main.c: 340: }
[; ;main.c: 341: }
[; ;main.c: 342: }
[e :UE 58 ]
}
"345
[v _pwmCtr `(v ~T0 @X0 1 ef ]
"346
{
[; ;main.c: 345: void pwmCtr()
[; ;main.c: 346: {
[e :U _pwmCtr ]
[f ]
[; ;main.c: 347: if(motorDuty > motorCount)
"347
[e $ ! > -> _motorDuty `i -> _motorCount `i 74  ]
[; ;main.c: 348: {
"348
{
[; ;main.c: 349: RB3 = 1;
"349
[e = _RB3 -> -> 1 `i `b ]
"350
}
[; ;main.c: 350: }
[e $U 75  ]
"351
[e :U 74 ]
[; ;main.c: 351: else
[; ;main.c: 352: {
"352
{
[; ;main.c: 353: RB3 = 0;
"353
[e = _RB3 -> -> 0 `i `b ]
"354
}
[e :U 75 ]
[; ;main.c: 354: }
[; ;main.c: 355: if(++motorCount > (motorMaxCount - 1))
"355
[e $ ! > -> =+ _motorCount -> -> 1 `i `uc `i - -> _motorMaxCount `i -> 1 `i 76  ]
[; ;main.c: 356: {
"356
{
[; ;main.c: 357: motorCount = 0;
"357
[e = _motorCount -> -> 0 `i `uc ]
"358
}
[e :U 76 ]
[; ;main.c: 358: }
[; ;main.c: 359: }
"359
[e :UE 73 ]
}
"361
[v _workCtr `(v ~T0 @X0 1 ef ]
"362
{
[; ;main.c: 361: void workCtr()
[; ;main.c: 362: {
[e :U _workCtr ]
[f ]
[; ;main.c: 364: if(workStep == 1)
"364
[e $ ! == -> _workStep `i -> 1 `i 78  ]
[; ;main.c: 365: {
"365
{
[; ;main.c: 366: PORTA = 0x0C;
"366
[e = _PORTA -> -> 12 `i `uc ]
[; ;main.c: 367: motorMaxCount = 10;
"367
[e = _motorMaxCount -> -> 10 `i `uc ]
[; ;main.c: 368: motorDuty = 8;
"368
[e = _motorDuty -> -> 8 `i `uc ]
"369
}
[; ;main.c: 369: }
[e $U 79  ]
"370
[e :U 78 ]
[; ;main.c: 370: else if(workStep == 2)
[e $ ! == -> _workStep `i -> 2 `i 80  ]
[; ;main.c: 371: {
"371
{
[; ;main.c: 372: PORTA = 0x0A;
"372
[e = _PORTA -> -> 10 `i `uc ]
[; ;main.c: 373: motorMaxCount = 10;
"373
[e = _motorMaxCount -> -> 10 `i `uc ]
[; ;main.c: 374: motorDuty = 9;
"374
[e = _motorDuty -> -> 9 `i `uc ]
"375
}
[; ;main.c: 375: }
[e $U 81  ]
"376
[e :U 80 ]
[; ;main.c: 376: else if(workStep == 3)
[e $ ! == -> _workStep `i -> 3 `i 82  ]
[; ;main.c: 377: {
"377
{
[; ;main.c: 378: PORTA = 0x06;
"378
[e = _PORTA -> -> 6 `i `uc ]
[; ;main.c: 379: motorMaxCount = 10;
"379
[e = _motorMaxCount -> -> 10 `i `uc ]
[; ;main.c: 380: motorDuty = 10;
"380
[e = _motorDuty -> -> 10 `i `uc ]
"381
}
[; ;main.c: 381: }
[e $U 83  ]
"382
[e :U 82 ]
[; ;main.c: 382: else
[; ;main.c: 383: {
"383
{
[; ;main.c: 384: PORTB = 0x00;
"384
[e = _PORTB -> -> 0 `i `uc ]
"385
}
[e :U 83 ]
[e :U 81 ]
[e :U 79 ]
[; ;main.c: 385: }
[; ;main.c: 386: }
"386
[e :UE 77 ]
}
"389
[v _checkBatAD `(v ~T0 @X0 1 ef ]
"390
{
[; ;main.c: 389: void checkBatAD()
[; ;main.c: 390: {
[e :U _checkBatAD ]
[f ]
[; ;main.c: 391: test_adc = ADC_Sample(31, 0);
"391
[e = _test_adc ( _ADC_Sample (2 , -> -> 31 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 392: if (0xA5 == test_adc)
"392
[e $ ! == -> 165 `i -> _test_adc `i 85  ]
[; ;main.c: 393: {
"393
{
"394
[v _power_temp `Vul ~T0 @X0 1 a ]
[; ;main.c: 394: volatile unsigned long power_temp;
[; ;main.c: 396: power_temp = (unsigned long)(((4096UL*1.2*1000))/adresult);
"396
[e = _power_temp -> / * * -> -> 4096 `ul `d .1.2 -> -> 1000 `i `d -> _adresult `d `ul ]
[; ;main.c: 397: power_ad = (unsigned int)(power_temp);
"397
[e = _power_ad -> _power_temp `ui ]
"398
}
[; ;main.c: 398: }
[e $U 86  ]
"399
[e :U 85 ]
[; ;main.c: 399: else
[; ;main.c: 400: {
"400
{
[; ;main.c: 401: ADCON0 = 0;
"401
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 402: ADCON1 = 0;
"402
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 403: _delay((unsigned long)((100)*(16000000/4000000.0)));
"403
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"404
}
[e :U 86 ]
[; ;main.c: 404: }
[; ;main.c: 406: }
"406
[e :UE 84 ]
}
"417
[v _Init_System `(v ~T0 @X0 1 ef ]
"418
{
[; ;main.c: 417: void Init_System()
[; ;main.c: 418: {
[e :U _Init_System ]
[f ]
[; ;main.c: 419: asm("nop");
"419
[; <" nop ;# ">
[; ;main.c: 420: asm("clrwdt");
"420
[; <" clrwdt ;# ">
[; ;main.c: 421: OPTION_REG = 0;
"421
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 422: asm("clrwdt");
"422
[; <" clrwdt ;# ">
[; ;main.c: 423: OSCCON = 0X72;
"423
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 425: WPUA = 0B00000000;
"425
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 426: WPDA = 0x00;
"426
[e = _WPDA -> -> 0 `i `uc ]
[; ;main.c: 427: WPUB = 0x14;
"427
[e = _WPUB -> -> 20 `i `uc ]
[; ;main.c: 429: TRISA = 0x00;
"429
[e = _TRISA -> -> 0 `i `uc ]
[; ;main.c: 430: TRISB = 0x34;
"430
[e = _TRISB -> -> 52 `i `uc ]
[; ;main.c: 432: PORTA = 0X0E;
"432
[e = _PORTA -> -> 14 `i `uc ]
[; ;main.c: 433: PORTB = 0X00;
"433
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 437: PR2 = 249;
"437
[e = _PR2 -> -> 249 `i `uc ]
[; ;main.c: 438: TMR2IF = 0;
"438
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 439: TMR2IE = 1;
"439
[e = _TMR2IE -> -> 1 `i `b ]
[; ;main.c: 441: T2CON = 0B00000100;
"441
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 442: INTCON = 0XC0;
"442
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 443: }
"443
[e :UE 87 ]
}
"454
[v _AD_Init `(v ~T0 @X0 1 ef ]
"455
{
[; ;main.c: 454: void AD_Init()
[; ;main.c: 455: {
[e :U _AD_Init ]
[f ]
[; ;main.c: 487: ADCON0 = 0X41;
"487
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 504: ADCON1 = 0;
"504
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 505: ANSEL0 = 0X00;
"505
[e = _ANSEL0 -> -> 0 `i `uc ]
[; ;main.c: 506: }
"506
[e :UE 88 ]
}
"516
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"517
{
[; ;main.c: 516: void Sleep_Mode()
[; ;main.c: 517: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 518: INTCON = 0;
"518
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 520: OPTION_REG = 0;
"520
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 522: TRISA = 0x00;
"522
[e = _TRISA -> -> 0 `i `uc ]
[; ;main.c: 523: TRISB = 0x34;
"523
[e = _TRISB -> -> 52 `i `uc ]
[; ;main.c: 525: PORTA = 0X0E;
"525
[e = _PORTA -> -> 14 `i `uc ]
[; ;main.c: 526: PORTB = 0X00;
"526
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 528: ADCON0 = 0;
"528
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 529: ADCON1 = 0;
"529
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 531: PWMCON0 = 0;
"531
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 533: OSCCON = 0X70;
"533
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 535: IOCA = 0B00000000;
"535
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 536: IOCB = 0x24;
"536
[e = _IOCB -> -> 36 `i `uc ]
[; ;main.c: 538: RAIE = 1;
"538
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 539: PEIE = 1;
"539
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 540: RBIE = 1;
"540
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 541: GIE = 0;
"541
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 543: PIE1 &= 0X08;
"543
[e =& _PIE1 -> -> 8 `i `uc ]
[; ;main.c: 544: PIR1 = 0;
"544
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 545: INTCON &= 0XC8;
"545
[e =& _INTCON -> -> 200 `i `uc ]
[; ;main.c: 547: PORTA;
"547
[e _PORTA ]
[; ;main.c: 548: RAIF = 0;
"548
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 549: PORTB;
"549
[e _PORTB ]
[; ;main.c: 550: RBIF = 0;
"550
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 551: asm("clrwdt");
"551
[; <" clrwdt ;# ">
[; ;main.c: 553: asm("sleep");
"553
[; <" sleep ;# ">
[; ;main.c: 555: asm("nop");
"555
[; <" nop ;# ">
[; ;main.c: 556: asm("clrwdt");
"556
[; <" clrwdt ;# ">
[; ;main.c: 557: asm("nop");
"557
[; <" nop ;# ">
[; ;main.c: 558: asm("nop");
"558
[; <" nop ;# ">
[; ;main.c: 559: asm("nop");
"559
[; <" nop ;# ">
[; ;main.c: 560: asm("nop");
"560
[; <" nop ;# ">
[; ;main.c: 561: asm("nop");
"561
[; <" nop ;# ">
[; ;main.c: 562: if(RAIF) RAIF = 0;
"562
[e $ ! _RAIF 90  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 90 ]
[; ;main.c: 563: if(RBIF) RBIF = 0;
"563
[e $ ! _RBIF 91  ]
[e = _RBIF -> -> 0 `i `b ]
[e :U 91 ]
[; ;main.c: 564: if(TMR2IF) TMR2IF = 0;
"564
[e $ ! _TMR2IF 92  ]
[e = _TMR2IF -> -> 0 `i `b ]
[e :U 92 ]
[; ;main.c: 565: IOCA = 0B00000000;
"565
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 566: IOCB = 0B00000000;
"566
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 567: Init_System();
"567
[e ( _Init_System ..  ]
[; ;main.c: 568: AD_Init();
"568
[e ( _AD_Init ..  ]
[; ;main.c: 569: }
"569
[e :UE 89 ]
}
"591
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"592
{
[; ;main.c: 591: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 592: {
[e :U _ADC_Sample ]
"591
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"592
[f ]
"593
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 593: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"594
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 594: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"595
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 595: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 597: if ((!LDO_EN) && (adldo & 0x04) )
"597
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 94  ]
[; ;main.c: 598: {
"598
{
[; ;main.c: 600: ADCON1 = adldo;
"600
[e = _ADCON1 _adldo ]
[; ;main.c: 601: _delay((unsigned long)((100)*(16000000/4000000.0)));
"601
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"602
}
[; ;main.c: 602: }
[e $U 95  ]
"603
[e :U 94 ]
[; ;main.c: 603: else
[; ;main.c: 604: ADCON1 = adldo;
"604
[e = _ADCON1 _adldo ]
[e :U 95 ]
[; ;main.c: 606: if(adch & 0x10)
"606
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 96  ]
[; ;main.c: 607: {
"607
{
[; ;main.c: 608: CHS4 = 1;
"608
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 609: adch &= 0x0f;
"609
[e =& _adch -> -> 15 `i `uc ]
"610
}
[e :U 96 ]
"611
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 610: }
[; ;main.c: 611: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 612: for (i = 0; i < 10; i++)
"612
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 97  ]
[e $U 98  ]
"613
[e :U 97 ]
[; ;main.c: 613: {
{
[; ;main.c: 614: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"614
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 615: asm("nop");
"615
[; <" nop ;# ">
[; ;main.c: 616: asm("nop");
"616
[; <" nop ;# ">
[; ;main.c: 617: asm("nop");
"617
[; <" nop ;# ">
[; ;main.c: 618: asm("nop");
"618
[; <" nop ;# ">
[; ;main.c: 619: GODONE = 1;
"619
[e = _GODONE -> -> 1 `i `b ]
"621
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 621: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 622: while (GODONE)
"622
[e $U 100  ]
[e :U 101 ]
[; ;main.c: 623: {
"623
{
[; ;main.c: 624: _delay((unsigned long)((2)*(16000000/4000000.0)));
"624
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;main.c: 626: if (0 == (--j))
"626
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 103  ]
[; ;main.c: 627: return 0;
"627
[e ) -> -> 0 `i `uc ]
[e $UE 93  ]
[e :U 103 ]
"628
}
[e :U 100 ]
"622
[e $ _GODONE 101  ]
[e :U 102 ]
[; ;main.c: 628: }
[; ;main.c: 630: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"630
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 632: if (0 == admax)
"632
[e $ ! == -> -> 0 `i `ui _admax 104  ]
[; ;main.c: 633: {
"633
{
[; ;main.c: 634: admax = ad_temp;
"634
[e = _admax _ad_temp ]
[; ;main.c: 635: admin = ad_temp;
"635
[e = _admin _ad_temp ]
"636
}
[; ;main.c: 636: }
[e $U 105  ]
"637
[e :U 104 ]
[; ;main.c: 637: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 106  ]
[; ;main.c: 638: admax = ad_temp;
"638
[e = _admax _ad_temp ]
[e $U 107  ]
"639
[e :U 106 ]
[; ;main.c: 639: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 108  ]
[; ;main.c: 640: admin = ad_temp;
"640
[e = _admin _ad_temp ]
[e :U 108 ]
"642
[e :U 107 ]
[e :U 105 ]
[; ;main.c: 642: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"643
}
"612
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 97  ]
[e :U 98 ]
"643
}
[; ;main.c: 643: }
[; ;main.c: 644: adsum -= admax;
"644
[e =- _adsum -> _admax `ul ]
[; ;main.c: 645: if (adsum >= admin)
"645
[e $ ! >= _adsum -> _admin `ul 109  ]
[; ;main.c: 646: adsum -= admin;
"646
[e =- _adsum -> _admin `ul ]
[e $U 110  ]
"647
[e :U 109 ]
[; ;main.c: 647: else
[; ;main.c: 648: adsum = 0;
"648
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 110 ]
[; ;main.c: 650: adresult = adsum >> 3;
"650
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 652: adsum = 0;
"652
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 653: admin = 0;
"653
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 654: admax = 0;
"654
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 655: return 0xA5;
"655
[e ) -> -> 165 `i `uc ]
[e $UE 93  ]
[; ;main.c: 657: }
"657
[e :UE 93 ]
}
