Version 3.2 HI-TECH Software Intermediate Code
"26 C:\mcuproject\scm\zdt\D17-jl_SC8F6790_tssop20\D17_SC8F6790_tssop20\Touch_Kscan_Library.h
[v _KeyFlag `Vuc ~T0 @X0 -> 0 `x e ]
"19
[v _SystemEnterSleep `(v ~T0 @X0 0 ef ]
[p mainexit ]
"18
[v _CheckTouchKey `(v ~T0 @X0 0 ef ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"16 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc8f679x.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;sc8f679x.h: 16: volatile unsigned char INDF @ 0x00;
"17
[v _TMR0 `Vuc ~T0 @X0 1 e@1 ]
[; ;sc8f679x.h: 17: volatile unsigned char TMR0 @ 0x01;
"18
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;sc8f679x.h: 18: volatile unsigned char PCL @ 0x02;
"19
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;sc8f679x.h: 19: volatile unsigned char STATUS @ 0x03;
"20
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;sc8f679x.h: 20: volatile unsigned char FSR @ 0x04;
"21
[v _PORTA `Vuc ~T0 @X0 1 e@5 ]
[; ;sc8f679x.h: 21: volatile unsigned char PORTA @ 0x05;
"22
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;sc8f679x.h: 22: volatile unsigned char PORTB @ 0x06;
"23
[v _WPUA `Vuc ~T0 @X0 1 e@7 ]
[; ;sc8f679x.h: 23: volatile unsigned char WPUA @ 0x07;
"24
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;sc8f679x.h: 24: volatile unsigned char WPUB @ 0x08;
"25
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;sc8f679x.h: 25: volatile unsigned char IOCB @ 0x09;
"26
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;sc8f679x.h: 26: volatile unsigned char PCLATH @ 0x0A;
"27
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;sc8f679x.h: 27: volatile unsigned char INTCON @ 0x0B;
"28
[v _PIR1 `Vuc ~T0 @X0 1 e@12 ]
[; ;sc8f679x.h: 28: volatile unsigned char PIR1 @ 0x0C;
"29
[v _PIE1 `Vuc ~T0 @X0 1 e@13 ]
[; ;sc8f679x.h: 29: volatile unsigned char PIE1 @ 0x0D;
"30
[v _PWMD23H `Vuc ~T0 @X0 1 e@14 ]
[; ;sc8f679x.h: 30: volatile unsigned char PWMD23H @ 0x0E;
"31
[v _PWM01DT `Vuc ~T0 @X0 1 e@15 ]
[; ;sc8f679x.h: 31: volatile unsigned char PWM01DT @ 0x0F;
"32
[v _PWM23DT `Vuc ~T0 @X0 1 e@16 ]
[; ;sc8f679x.h: 32: volatile unsigned char PWM23DT @ 0x10;
"33
[v _TMR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;sc8f679x.h: 33: volatile unsigned char TMR2 @ 0x11;
"34
[v _T2CON `Vuc ~T0 @X0 1 e@18 ]
[; ;sc8f679x.h: 34: volatile unsigned char T2CON @ 0x12;
"35
[v _PWMCON0 `Vuc ~T0 @X0 1 e@19 ]
[; ;sc8f679x.h: 35: volatile unsigned char PWMCON0 @ 0x13;
"36
[v _PWMCON1 `Vuc ~T0 @X0 1 e@20 ]
[; ;sc8f679x.h: 36: volatile unsigned char PWMCON1 @ 0x14;
"37
[v _PWMTL `Vuc ~T0 @X0 1 e@21 ]
[; ;sc8f679x.h: 37: volatile unsigned char PWMTL @ 0x15;
"38
[v _PWMTH `Vuc ~T0 @X0 1 e@22 ]
[; ;sc8f679x.h: 38: volatile unsigned char PWMTH @ 0x16;
"39
[v _PWMD0L `Vuc ~T0 @X0 1 e@23 ]
[; ;sc8f679x.h: 39: volatile unsigned char PWMD0L @ 0x17;
"40
[v _PWMD1L `Vuc ~T0 @X0 1 e@24 ]
[; ;sc8f679x.h: 40: volatile unsigned char PWMD1L @ 0x18;
"41
[v _PWMD2L `Vuc ~T0 @X0 1 e@25 ]
[; ;sc8f679x.h: 41: volatile unsigned char PWMD2L @ 0x19;
"42
[v _PWMD3L `Vuc ~T0 @X0 1 e@26 ]
[; ;sc8f679x.h: 42: volatile unsigned char PWMD3L @ 0x1A;
"43
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;sc8f679x.h: 43: volatile unsigned char PWMD4L @ 0x1B;
"44
[v _PWMD01H `Vuc ~T0 @X0 1 e@28 ]
[; ;sc8f679x.h: 44: volatile unsigned char PWMD01H @ 0x1C;
"45
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;sc8f679x.h: 45: volatile unsigned char PWMCON2 @ 0x1D;
"46
[v _PWM4TL `Vuc ~T0 @X0 1 e@30 ]
[; ;sc8f679x.h: 46: volatile unsigned char PWM4TL @ 0x1E;
"47
[v _OPTION_REG `Vuc ~T0 @X0 1 e@129 ]
[; ;sc8f679x.h: 47: volatile unsigned char OPTION_REG @ 0x81;
"48
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;sc8f679x.h: 48: volatile unsigned char TRISA @ 0x85;
"49
[v _TRISB `Vuc ~T0 @X0 1 e@134 ]
[; ;sc8f679x.h: 49: volatile unsigned char TRISB @ 0x86;
"50
[v _WPDB `Vuc ~T0 @X0 1 e@135 ]
[; ;sc8f679x.h: 50: volatile unsigned char WPDB @ 0x87;
"51
[v _OSCCON `Vuc ~T0 @X0 1 e@136 ]
[; ;sc8f679x.h: 51: volatile unsigned char OSCCON @ 0x88;
"52
[v _EECON1 `Vuc ~T0 @X0 1 e@140 ]
[; ;sc8f679x.h: 52: volatile unsigned char EECON1 @ 0x8C;
"53
[v _EECON2 `Vuc ~T0 @X0 1 e@141 ]
[; ;sc8f679x.h: 53: volatile unsigned char EECON2 @ 0x8D;
"54
[v _EEDAT `Vuc ~T0 @X0 1 e@142 ]
[; ;sc8f679x.h: 54: volatile unsigned char EEDAT @ 0x8E;
"55
[v _EEDATH `Vuc ~T0 @X0 1 e@143 ]
[; ;sc8f679x.h: 55: volatile unsigned char EEDATH @ 0x8F;
"56
[v _EEADR `Vuc ~T0 @X0 1 e@144 ]
[; ;sc8f679x.h: 56: volatile unsigned char EEADR @ 0x90;
"57
[v _PR2 `Vuc ~T0 @X0 1 e@145 ]
[; ;sc8f679x.h: 57: volatile unsigned char PR2 @ 0x91;
"58
[v _KEYCON0 `Vuc ~T0 @X0 1 e@146 ]
[; ;sc8f679x.h: 58: volatile unsigned char KEYCON0 @ 0x92;
"59
[v _KEYCON1 `Vuc ~T0 @X0 1 e@147 ]
[; ;sc8f679x.h: 59: volatile unsigned char KEYCON1 @ 0x93;
"60
[v _KEYDATAL `Vuc ~T0 @X0 1 e@148 ]
[; ;sc8f679x.h: 60: volatile unsigned char KEYDATAL @ 0x94;
"61
[v _KEYDATAH `Vuc ~T0 @X0 1 e@149 ]
[; ;sc8f679x.h: 61: volatile unsigned char KEYDATAH @ 0x95;
"62
[v _EEADRH `Vuc ~T0 @X0 1 e@150 ]
[; ;sc8f679x.h: 62: volatile unsigned char EEADRH @ 0x96;
"63
[v _KEYCON2 `Vuc ~T0 @X0 1 e@151 ]
[; ;sc8f679x.h: 63: volatile unsigned char KEYCON2 @ 0x97;
"64
[v _OPA0CON `Vuc ~T0 @X0 1 e@152 ]
[; ;sc8f679x.h: 64: volatile unsigned char OPA0CON @ 0x98;
"65
[v _OPA0ADJ `Vuc ~T0 @X0 1 e@153 ]
[; ;sc8f679x.h: 65: volatile unsigned char OPA0ADJ @ 0x99;
"66
[v _OPA1CON `Vuc ~T0 @X0 1 e@154 ]
[; ;sc8f679x.h: 66: volatile unsigned char OPA1CON @ 0x9A;
"67
[v _OPA1ADJ `Vuc ~T0 @X0 1 e@155 ]
[; ;sc8f679x.h: 67: volatile unsigned char OPA1ADJ @ 0x9B;
"68
[v _ADCON1 `Vuc ~T0 @X0 1 e@156 ]
[; ;sc8f679x.h: 68: volatile unsigned char ADCON1 @ 0x9C;
"69
[v _ADCON0 `Vuc ~T0 @X0 1 e@157 ]
[; ;sc8f679x.h: 69: volatile unsigned char ADCON0 @ 0x9D;
"70
[v _ADRESL `Vuc ~T0 @X0 1 e@158 ]
[; ;sc8f679x.h: 70: volatile unsigned char ADRESL @ 0x9E;
"71
[v _ADRESH `Vuc ~T0 @X0 1 e@159 ]
[; ;sc8f679x.h: 71: volatile unsigned char ADRESH @ 0x9F;
"72
[v _BUZCON `Vuc ~T0 @X0 1 e@261 ]
[; ;sc8f679x.h: 72: volatile unsigned char BUZCON @ 0x105;
"73
[v _PIR2 `Vuc ~T0 @X0 1 e@263 ]
[; ;sc8f679x.h: 73: volatile unsigned char PIR2 @ 0x107;
"74
[v _PIE2 `Vuc ~T0 @X0 1 e@264 ]
[; ;sc8f679x.h: 74: volatile unsigned char PIE2 @ 0x108;
"75
[v _IICADD `Vuc ~T0 @X0 1 e@265 ]
[; ;sc8f679x.h: 75: volatile unsigned char IICADD @ 0x109;
"76
[v _IICCON `Vuc ~T0 @X0 1 e@268 ]
[; ;sc8f679x.h: 76: volatile unsigned char IICCON @ 0x10C;
"77
[v _IICCON2 `Vuc ~T0 @X0 1 e@269 ]
[; ;sc8f679x.h: 77: volatile unsigned char IICCON2 @ 0x10D;
"78
[v _IICBUF `Vuc ~T0 @X0 1 e@270 ]
[; ;sc8f679x.h: 78: volatile unsigned char IICBUF @ 0x10E;
"79
[v _IICSTAT `Vuc ~T0 @X0 1 e@271 ]
[; ;sc8f679x.h: 79: volatile unsigned char IICSTAT @ 0x10F;
"80
[v _ANSEL0 `Vuc ~T0 @X0 1 e@272 ]
[; ;sc8f679x.h: 80: volatile unsigned char ANSEL0 @ 0x110;
"81
[v _ANSEL1 `Vuc ~T0 @X0 1 e@273 ]
[; ;sc8f679x.h: 81: volatile unsigned char ANSEL1 @ 0x111;
"82
[v _ANSEL2 `Vuc ~T0 @X0 1 e@274 ]
[; ;sc8f679x.h: 82: volatile unsigned char ANSEL2 @ 0x112;
"83
[v _WPDA `Vuc ~T0 @X0 1 e@275 ]
[; ;sc8f679x.h: 83: volatile unsigned char WPDA @ 0x113;
"84
[v _WPDC `Vuc ~T0 @X0 1 e@276 ]
[; ;sc8f679x.h: 84: volatile unsigned char WPDC @ 0x114;
"85
[v _WPUC `Vuc ~T0 @X0 1 e@277 ]
[; ;sc8f679x.h: 85: volatile unsigned char WPUC @ 0x115;
"86
[v _CMPCON `Vuc ~T0 @X0 1 e@278 ]
[; ;sc8f679x.h: 86: volatile unsigned char CMPCON @ 0x116;
"87
[v _TXSTA `Vuc ~T0 @X0 1 e@279 ]
[; ;sc8f679x.h: 87: volatile unsigned char TXSTA @ 0x117;
"88
[v _RCSTA `Vuc ~T0 @X0 1 e@280 ]
[; ;sc8f679x.h: 88: volatile unsigned char RCSTA @ 0x118;
"89
[v _SPBRG `Vuc ~T0 @X0 1 e@281 ]
[; ;sc8f679x.h: 89: volatile unsigned char SPBRG @ 0x119;
"90
[v _TXREG `Vuc ~T0 @X0 1 e@282 ]
[; ;sc8f679x.h: 90: volatile unsigned char TXREG @ 0x11A;
"91
[v _RCREG `Vuc ~T0 @X0 1 e@283 ]
[; ;sc8f679x.h: 91: volatile unsigned char RCREG @ 0x11B;
"92
[v _SPIBUF `Vuc ~T0 @X0 1 e@284 ]
[; ;sc8f679x.h: 92: volatile unsigned char SPIBUF @ 0x11C;
"93
[v _SPICON `Vuc ~T0 @X0 1 e@285 ]
[; ;sc8f679x.h: 93: volatile unsigned char SPICON @ 0x11D;
"94
[v _SPICON2 `Vuc ~T0 @X0 1 e@286 ]
[; ;sc8f679x.h: 94: volatile unsigned char SPICON2 @ 0x11E;
"95
[v _LVDCON `Vuc ~T0 @X0 1 e@287 ]
[; ;sc8f679x.h: 95: volatile unsigned char LVDCON @ 0x11F;
"96
[v _PORTC `Vuc ~T0 @X0 1 e@389 ]
[; ;sc8f679x.h: 96: volatile unsigned char PORTC @ 0x185;
"97
[v _TRISC `Vuc ~T0 @X0 1 e@390 ]
[; ;sc8f679x.h: 97: volatile unsigned char TRISC @ 0x186;
"98
[v _IOCC `Vuc ~T0 @X0 1 e@391 ]
[; ;sc8f679x.h: 98: volatile unsigned char IOCC @ 0x187;
"99
[v _IOCA `Vuc ~T0 @X0 1 e@392 ]
[; ;sc8f679x.h: 99: volatile unsigned char IOCA @ 0x188;
"100
[v _PWMIOS0 `Vuc ~T0 @X0 1 e@396 ]
[; ;sc8f679x.h: 100: volatile unsigned char PWMIOS0 @ 0x18C;
"101
[v _PWMIOS1 `Vuc ~T0 @X0 1 e@397 ]
[; ;sc8f679x.h: 101: volatile unsigned char PWMIOS1 @ 0x18D;
"102
[v _PWMIOS2 `Vuc ~T0 @X0 1 e@398 ]
[; ;sc8f679x.h: 102: volatile unsigned char PWMIOS2 @ 0x18E;
"103
[v _LCDCON `Vuc ~T0 @X0 1 e@399 ]
[; ;sc8f679x.h: 103: volatile unsigned char LCDCON @ 0x18F;
"104
[v _CSSEL0 `Vuc ~T0 @X0 1 e@400 ]
[; ;sc8f679x.h: 104: volatile unsigned char CSSEL0 @ 0x190;
"105
[v _CSSEL1 `Vuc ~T0 @X0 1 e@401 ]
[; ;sc8f679x.h: 105: volatile unsigned char CSSEL1 @ 0x191;
"106
[v _CSSEL2 `Vuc ~T0 @X0 1 e@402 ]
[; ;sc8f679x.h: 106: volatile unsigned char CSSEL2 @ 0x192;
"107
[v _CSEN0 `Vuc ~T0 @X0 1 e@403 ]
[; ;sc8f679x.h: 107: volatile unsigned char CSEN0 @ 0x193;
"108
[v _CSEN1 `Vuc ~T0 @X0 1 e@404 ]
[; ;sc8f679x.h: 108: volatile unsigned char CSEN1 @ 0x194;
"109
[v _CSEN2 `Vuc ~T0 @X0 1 e@405 ]
[; ;sc8f679x.h: 109: volatile unsigned char CSEN2 @ 0x195;
"110
[v _TABLE_SPL `Vuc ~T0 @X0 1 e@406 ]
[; ;sc8f679x.h: 110: volatile unsigned char TABLE_SPL @ 0x196;
"111
[v _TABLE_SPH `Vuc ~T0 @X0 1 e@407 ]
[; ;sc8f679x.h: 111: volatile unsigned char TABLE_SPH @ 0x197;
"112
[v _TABLE_DATAH `Vuc ~T0 @X0 1 e@408 ]
[; ;sc8f679x.h: 112: volatile unsigned char TABLE_DATAH @ 0x198;
"113
[v _TMR1L `Vuc ~T0 @X0 1 e@409 ]
[; ;sc8f679x.h: 113: volatile unsigned char TMR1L @ 0x199;
"114
[v _TMR1H `Vuc ~T0 @X0 1 e@410 ]
[; ;sc8f679x.h: 114: volatile unsigned char TMR1H @ 0x19A;
"115
[v _T1CON `Vuc ~T0 @X0 1 e@411 ]
[; ;sc8f679x.h: 115: volatile unsigned char T1CON @ 0x19B;
"119
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;sc8f679x.h: 119: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"120
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;sc8f679x.h: 120: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"121
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;sc8f679x.h: 121: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"122
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;sc8f679x.h: 122: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"123
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;sc8f679x.h: 123: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"124
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;sc8f679x.h: 124: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"125
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;sc8f679x.h: 125: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"126
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;sc8f679x.h: 126: volatile bit C @ ((unsigned)&STATUS*8)+0;
"129
[v _RA7 `Vb ~T0 @X0 1 e@47 ]
[; ;sc8f679x.h: 129: volatile bit RA7 @ ((unsigned)&PORTA*8)+7;
"130
[v _RA6 `Vb ~T0 @X0 1 e@46 ]
[; ;sc8f679x.h: 130: volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
"131
[v _RA5 `Vb ~T0 @X0 1 e@45 ]
[; ;sc8f679x.h: 131: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"132
[v _RA4 `Vb ~T0 @X0 1 e@44 ]
[; ;sc8f679x.h: 132: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"133
[v _RA3 `Vb ~T0 @X0 1 e@43 ]
[; ;sc8f679x.h: 133: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"134
[v _RA2 `Vb ~T0 @X0 1 e@42 ]
[; ;sc8f679x.h: 134: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"135
[v _RA1 `Vb ~T0 @X0 1 e@41 ]
[; ;sc8f679x.h: 135: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"136
[v _RA0 `Vb ~T0 @X0 1 e@40 ]
[; ;sc8f679x.h: 136: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"139
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;sc8f679x.h: 139: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"140
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;sc8f679x.h: 140: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"141
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;sc8f679x.h: 141: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"142
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;sc8f679x.h: 142: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"143
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;sc8f679x.h: 143: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"144
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;sc8f679x.h: 144: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"145
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;sc8f679x.h: 145: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"146
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;sc8f679x.h: 146: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"149
[v _WPUA7 `Vb ~T0 @X0 1 e@63 ]
[; ;sc8f679x.h: 149: volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;
"150
[v _WPUA6 `Vb ~T0 @X0 1 e@62 ]
[; ;sc8f679x.h: 150: volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
"151
[v _WPUA5 `Vb ~T0 @X0 1 e@61 ]
[; ;sc8f679x.h: 151: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"152
[v _WPUA4 `Vb ~T0 @X0 1 e@60 ]
[; ;sc8f679x.h: 152: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"153
[v _WPUA3 `Vb ~T0 @X0 1 e@59 ]
[; ;sc8f679x.h: 153: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"154
[v _WPUA2 `Vb ~T0 @X0 1 e@58 ]
[; ;sc8f679x.h: 154: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"155
[v _WPUA1 `Vb ~T0 @X0 1 e@57 ]
[; ;sc8f679x.h: 155: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"156
[v _WPUA0 `Vb ~T0 @X0 1 e@56 ]
[; ;sc8f679x.h: 156: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"159
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;sc8f679x.h: 159: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"160
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;sc8f679x.h: 160: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"161
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;sc8f679x.h: 161: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"162
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;sc8f679x.h: 162: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"163
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;sc8f679x.h: 163: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"164
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;sc8f679x.h: 164: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"165
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;sc8f679x.h: 165: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"166
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;sc8f679x.h: 166: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"169
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;sc8f679x.h: 169: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"170
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;sc8f679x.h: 170: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"171
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;sc8f679x.h: 171: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"172
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;sc8f679x.h: 172: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"173
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;sc8f679x.h: 173: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"174
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;sc8f679x.h: 174: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"175
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;sc8f679x.h: 175: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"176
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;sc8f679x.h: 176: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"179
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;sc8f679x.h: 179: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"180
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;sc8f679x.h: 180: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"181
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;sc8f679x.h: 181: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"182
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;sc8f679x.h: 182: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"183
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;sc8f679x.h: 183: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"184
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;sc8f679x.h: 184: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"185
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;sc8f679x.h: 185: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"186
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;sc8f679x.h: 186: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"189
[v _TMR1IF `Vb ~T0 @X0 1 e@103 ]
[; ;sc8f679x.h: 189: volatile bit TMR1IF @ ((unsigned)&PIR1*8)+7;
"190
[v _EEIF `Vb ~T0 @X0 1 e@102 ]
[; ;sc8f679x.h: 190: volatile bit EEIF @ ((unsigned)&PIR1*8)+6;
"191
[v _RCIF `Vb ~T0 @X0 1 e@101 ]
[; ;sc8f679x.h: 191: volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
"192
[v _TXIF `Vb ~T0 @X0 1 e@100 ]
[; ;sc8f679x.h: 192: volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
"193
[v _SPIIF `Vb ~T0 @X0 1 e@99 ]
[; ;sc8f679x.h: 193: volatile bit SPIIF @ ((unsigned)&PIR1*8)+3;
"194
[v _PWMIF `Vb ~T0 @X0 1 e@98 ]
[; ;sc8f679x.h: 194: volatile bit PWMIF @ ((unsigned)&PIR1*8)+2;
"195
[v _TMR2IF `Vb ~T0 @X0 1 e@97 ]
[; ;sc8f679x.h: 195: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"196
[v _ADIF `Vb ~T0 @X0 1 e@96 ]
[; ;sc8f679x.h: 196: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"199
[v _TMR1IE `Vb ~T0 @X0 1 e@111 ]
[; ;sc8f679x.h: 199: volatile bit TMR1IE @ ((unsigned)&PIE1*8)+7;
"200
[v _EEIE `Vb ~T0 @X0 1 e@110 ]
[; ;sc8f679x.h: 200: volatile bit EEIE @ ((unsigned)&PIE1*8)+6;
"201
[v _RCIE `Vb ~T0 @X0 1 e@109 ]
[; ;sc8f679x.h: 201: volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
"202
[v _TXIE `Vb ~T0 @X0 1 e@108 ]
[; ;sc8f679x.h: 202: volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
"203
[v _SPIIE `Vb ~T0 @X0 1 e@107 ]
[; ;sc8f679x.h: 203: volatile bit SPIIE @ ((unsigned)&PIE1*8)+3;
"204
[v _PWMIE `Vb ~T0 @X0 1 e@106 ]
[; ;sc8f679x.h: 204: volatile bit PWMIE @ ((unsigned)&PIE1*8)+2;
"205
[v _TMR2IE `Vb ~T0 @X0 1 e@105 ]
[; ;sc8f679x.h: 205: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"206
[v _ADIE `Vb ~T0 @X0 1 e@104 ]
[; ;sc8f679x.h: 206: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"209
[v _PWMD39 `Vb ~T0 @X0 1 e@117 ]
[; ;sc8f679x.h: 209: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"210
[v _PWMD38 `Vb ~T0 @X0 1 e@116 ]
[; ;sc8f679x.h: 210: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"211
[v _PWMD29 `Vb ~T0 @X0 1 e@113 ]
[; ;sc8f679x.h: 211: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"212
[v _PWMD28 `Vb ~T0 @X0 1 e@112 ]
[; ;sc8f679x.h: 212: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
"215
[v _CLK_SEL `Vb ~T0 @X0 1 e@151 ]
[; ;sc8f679x.h: 215: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"216
[v _TOUTPS3 `Vb ~T0 @X0 1 e@150 ]
[; ;sc8f679x.h: 216: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"217
[v _TOUTPS2 `Vb ~T0 @X0 1 e@149 ]
[; ;sc8f679x.h: 217: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"218
[v _TOUTPS1 `Vb ~T0 @X0 1 e@148 ]
[; ;sc8f679x.h: 218: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"219
[v _TOUTPS0 `Vb ~T0 @X0 1 e@147 ]
[; ;sc8f679x.h: 219: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"220
[v _TMR2ON `Vb ~T0 @X0 1 e@146 ]
[; ;sc8f679x.h: 220: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"221
[v _T2CKPS1 `Vb ~T0 @X0 1 e@145 ]
[; ;sc8f679x.h: 221: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"222
[v _T2CKPS0 `Vb ~T0 @X0 1 e@144 ]
[; ;sc8f679x.h: 222: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"225
[v _CLKDIV2 `Vb ~T0 @X0 1 e@159 ]
[; ;sc8f679x.h: 225: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"226
[v _CLKDIV1 `Vb ~T0 @X0 1 e@158 ]
[; ;sc8f679x.h: 226: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"227
[v _CLKDIV0 `Vb ~T0 @X0 1 e@157 ]
[; ;sc8f679x.h: 227: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"228
[v _PWM4EN `Vb ~T0 @X0 1 e@156 ]
[; ;sc8f679x.h: 228: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"229
[v _PWM3EN `Vb ~T0 @X0 1 e@155 ]
[; ;sc8f679x.h: 229: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"230
[v _PWM2EN `Vb ~T0 @X0 1 e@154 ]
[; ;sc8f679x.h: 230: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"231
[v _PWM1EN `Vb ~T0 @X0 1 e@153 ]
[; ;sc8f679x.h: 231: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"232
[v _PWM0EN `Vb ~T0 @X0 1 e@152 ]
[; ;sc8f679x.h: 232: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"235
[v _PWM2DTEN `Vb ~T0 @X0 1 e@165 ]
[; ;sc8f679x.h: 235: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"236
[v _PWM0DTEN `Vb ~T0 @X0 1 e@164 ]
[; ;sc8f679x.h: 236: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"237
[v _DT_DIV1 `Vb ~T0 @X0 1 e@161 ]
[; ;sc8f679x.h: 237: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"238
[v _DT_DIV0 `Vb ~T0 @X0 1 e@160 ]
[; ;sc8f679x.h: 238: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"241
[v _PWMD49 `Vb ~T0 @X0 1 e@181 ]
[; ;sc8f679x.h: 241: volatile bit PWMD49 @ ((unsigned)&PWMTH*8)+5;
"242
[v _PWMD48 `Vb ~T0 @X0 1 e@180 ]
[; ;sc8f679x.h: 242: volatile bit PWMD48 @ ((unsigned)&PWMTH*8)+4;
"243
[v _PWM4T9 `Vb ~T0 @X0 1 e@179 ]
[; ;sc8f679x.h: 243: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"244
[v _PWM4T8 `Vb ~T0 @X0 1 e@178 ]
[; ;sc8f679x.h: 244: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"245
[v _PWMT9 `Vb ~T0 @X0 1 e@177 ]
[; ;sc8f679x.h: 245: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"246
[v _PWMT8 `Vb ~T0 @X0 1 e@176 ]
[; ;sc8f679x.h: 246: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"249
[v _PWMD19 `Vb ~T0 @X0 1 e@229 ]
[; ;sc8f679x.h: 249: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"250
[v _PWMD18 `Vb ~T0 @X0 1 e@228 ]
[; ;sc8f679x.h: 250: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"251
[v _PWMD09 `Vb ~T0 @X0 1 e@225 ]
[; ;sc8f679x.h: 251: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"252
[v _PWMD08 `Vb ~T0 @X0 1 e@224 ]
[; ;sc8f679x.h: 252: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"255
[v _BUZEN `Vb ~T0 @X0 1 e@239 ]
[; ;sc8f679x.h: 255: volatile bit BUZEN @ ((unsigned)&PWMCON2*8)+7;
"256
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;sc8f679x.h: 256: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"257
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;sc8f679x.h: 257: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"258
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;sc8f679x.h: 258: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"259
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;sc8f679x.h: 259: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"260
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;sc8f679x.h: 260: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"263
[v _INTEDG `Vb ~T0 @X0 1 e@1038 ]
[; ;sc8f679x.h: 263: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"264
[v _T0CS `Vb ~T0 @X0 1 e@1037 ]
[; ;sc8f679x.h: 264: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"265
[v _T0SE `Vb ~T0 @X0 1 e@1036 ]
[; ;sc8f679x.h: 265: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"266
[v _PSA `Vb ~T0 @X0 1 e@1035 ]
[; ;sc8f679x.h: 266: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"267
[v _PS2 `Vb ~T0 @X0 1 e@1034 ]
[; ;sc8f679x.h: 267: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"268
[v _PS1 `Vb ~T0 @X0 1 e@1033 ]
[; ;sc8f679x.h: 268: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"269
[v _PS0 `Vb ~T0 @X0 1 e@1032 ]
[; ;sc8f679x.h: 269: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"272
[v _TRISA7 `Vb ~T0 @X0 1 e@1071 ]
[; ;sc8f679x.h: 272: volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
"273
[v _TRISA6 `Vb ~T0 @X0 1 e@1070 ]
[; ;sc8f679x.h: 273: volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
"274
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;sc8f679x.h: 274: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"275
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;sc8f679x.h: 275: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"276
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;sc8f679x.h: 276: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"277
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;sc8f679x.h: 277: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"278
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;sc8f679x.h: 278: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"279
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;sc8f679x.h: 279: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"282
[v _TRISB7 `Vb ~T0 @X0 1 e@1079 ]
[; ;sc8f679x.h: 282: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"283
[v _TRISB6 `Vb ~T0 @X0 1 e@1078 ]
[; ;sc8f679x.h: 283: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"284
[v _TRISB5 `Vb ~T0 @X0 1 e@1077 ]
[; ;sc8f679x.h: 284: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"285
[v _TRISB4 `Vb ~T0 @X0 1 e@1076 ]
[; ;sc8f679x.h: 285: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"286
[v _TRISB3 `Vb ~T0 @X0 1 e@1075 ]
[; ;sc8f679x.h: 286: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"287
[v _TRISB2 `Vb ~T0 @X0 1 e@1074 ]
[; ;sc8f679x.h: 287: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"288
[v _TRISB1 `Vb ~T0 @X0 1 e@1073 ]
[; ;sc8f679x.h: 288: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"289
[v _TRISB0 `Vb ~T0 @X0 1 e@1072 ]
[; ;sc8f679x.h: 289: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"292
[v _WPDB7 `Vb ~T0 @X0 1 e@1087 ]
[; ;sc8f679x.h: 292: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"293
[v _WPDB6 `Vb ~T0 @X0 1 e@1086 ]
[; ;sc8f679x.h: 293: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"294
[v _WPDB5 `Vb ~T0 @X0 1 e@1085 ]
[; ;sc8f679x.h: 294: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"295
[v _WPDB4 `Vb ~T0 @X0 1 e@1084 ]
[; ;sc8f679x.h: 295: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"296
[v _WPDB3 `Vb ~T0 @X0 1 e@1083 ]
[; ;sc8f679x.h: 296: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"297
[v _WPDB2 `Vb ~T0 @X0 1 e@1082 ]
[; ;sc8f679x.h: 297: volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
"298
[v _WPDB1 `Vb ~T0 @X0 1 e@1081 ]
[; ;sc8f679x.h: 298: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"299
[v _WPDB0 `Vb ~T0 @X0 1 e@1080 ]
[; ;sc8f679x.h: 299: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"302
[v _IRCF2 `Vb ~T0 @X0 1 e@1094 ]
[; ;sc8f679x.h: 302: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"303
[v _IRCF1 `Vb ~T0 @X0 1 e@1093 ]
[; ;sc8f679x.h: 303: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"304
[v _IRCF0 `Vb ~T0 @X0 1 e@1092 ]
[; ;sc8f679x.h: 304: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"305
[v _SWDTEN `Vb ~T0 @X0 1 e@1089 ]
[; ;sc8f679x.h: 305: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"308
[v _EEPGD `Vb ~T0 @X0 1 e@1127 ]
[; ;sc8f679x.h: 308: volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
"309
[v _WRERR `Vb ~T0 @X0 1 e@1123 ]
[; ;sc8f679x.h: 309: volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
"310
[v _WREN `Vb ~T0 @X0 1 e@1122 ]
[; ;sc8f679x.h: 310: volatile bit WREN @ ((unsigned)&EECON1*8)+2;
"311
[v _WR `Vb ~T0 @X0 1 e@1121 ]
[; ;sc8f679x.h: 311: volatile bit WR @ ((unsigned)&EECON1*8)+1;
"312
[v _RD `Vb ~T0 @X0 1 e@1120 ]
[; ;sc8f679x.h: 312: volatile bit RD @ ((unsigned)&EECON1*8)+0;
"315
[v _EEDAT7 `Vb ~T0 @X0 1 e@1143 ]
[; ;sc8f679x.h: 315: volatile bit EEDAT7 @ ((unsigned)&EEDAT*8)+7;
"316
[v _EEDAT6 `Vb ~T0 @X0 1 e@1142 ]
[; ;sc8f679x.h: 316: volatile bit EEDAT6 @ ((unsigned)&EEDAT*8)+6;
"317
[v _EEDAT5 `Vb ~T0 @X0 1 e@1141 ]
[; ;sc8f679x.h: 317: volatile bit EEDAT5 @ ((unsigned)&EEDAT*8)+5;
"318
[v _EEDAT4 `Vb ~T0 @X0 1 e@1140 ]
[; ;sc8f679x.h: 318: volatile bit EEDAT4 @ ((unsigned)&EEDAT*8)+4;
"319
[v _EEDAT3 `Vb ~T0 @X0 1 e@1139 ]
[; ;sc8f679x.h: 319: volatile bit EEDAT3 @ ((unsigned)&EEDAT*8)+3;
"320
[v _EEDAT2 `Vb ~T0 @X0 1 e@1138 ]
[; ;sc8f679x.h: 320: volatile bit EEDAT2 @ ((unsigned)&EEDAT*8)+2;
"321
[v _EEDAT1 `Vb ~T0 @X0 1 e@1137 ]
[; ;sc8f679x.h: 321: volatile bit EEDAT1 @ ((unsigned)&EEDAT*8)+1;
"322
[v _EEDAT0 `Vb ~T0 @X0 1 e@1136 ]
[; ;sc8f679x.h: 322: volatile bit EEDAT0 @ ((unsigned)&EEDAT*8)+0;
"325
[v _EEDATH7 `Vb ~T0 @X0 1 e@1151 ]
[; ;sc8f679x.h: 325: volatile bit EEDATH7 @ ((unsigned)&EEDATH*8)+7;
"326
[v _EEDATH6 `Vb ~T0 @X0 1 e@1150 ]
[; ;sc8f679x.h: 326: volatile bit EEDATH6 @ ((unsigned)&EEDATH*8)+6;
"327
[v _EEDATH5 `Vb ~T0 @X0 1 e@1149 ]
[; ;sc8f679x.h: 327: volatile bit EEDATH5 @ ((unsigned)&EEDATH*8)+5;
"328
[v _EEDATH4 `Vb ~T0 @X0 1 e@1148 ]
[; ;sc8f679x.h: 328: volatile bit EEDATH4 @ ((unsigned)&EEDATH*8)+4;
"329
[v _EEDATH3 `Vb ~T0 @X0 1 e@1147 ]
[; ;sc8f679x.h: 329: volatile bit EEDATH3 @ ((unsigned)&EEDATH*8)+3;
"330
[v _EEDATH2 `Vb ~T0 @X0 1 e@1146 ]
[; ;sc8f679x.h: 330: volatile bit EEDATH2 @ ((unsigned)&EEDATH*8)+2;
"331
[v _EEDATH1 `Vb ~T0 @X0 1 e@1145 ]
[; ;sc8f679x.h: 331: volatile bit EEDATH1 @ ((unsigned)&EEDATH*8)+1;
"332
[v _EEDATH0 `Vb ~T0 @X0 1 e@1144 ]
[; ;sc8f679x.h: 332: volatile bit EEDATH0 @ ((unsigned)&EEDATH*8)+0;
"335
[v _EEADR7 `Vb ~T0 @X0 1 e@1159 ]
[; ;sc8f679x.h: 335: volatile bit EEADR7 @ ((unsigned)&EEADR*8)+7;
"336
[v _EEADR6 `Vb ~T0 @X0 1 e@1158 ]
[; ;sc8f679x.h: 336: volatile bit EEADR6 @ ((unsigned)&EEADR*8)+6;
"337
[v _EEADR5 `Vb ~T0 @X0 1 e@1157 ]
[; ;sc8f679x.h: 337: volatile bit EEADR5 @ ((unsigned)&EEADR*8)+5;
"338
[v _EEADR4 `Vb ~T0 @X0 1 e@1156 ]
[; ;sc8f679x.h: 338: volatile bit EEADR4 @ ((unsigned)&EEADR*8)+4;
"339
[v _EEADR3 `Vb ~T0 @X0 1 e@1155 ]
[; ;sc8f679x.h: 339: volatile bit EEADR3 @ ((unsigned)&EEADR*8)+3;
"340
[v _EEADR2 `Vb ~T0 @X0 1 e@1154 ]
[; ;sc8f679x.h: 340: volatile bit EEADR2 @ ((unsigned)&EEADR*8)+2;
"341
[v _EEADR1 `Vb ~T0 @X0 1 e@1153 ]
[; ;sc8f679x.h: 341: volatile bit EEADR1 @ ((unsigned)&EEADR*8)+1;
"342
[v _EEADR0 `Vb ~T0 @X0 1 e@1152 ]
[; ;sc8f679x.h: 342: volatile bit EEADR0 @ ((unsigned)&EEADR*8)+0;
"345
[v _KDONE `Vb ~T0 @X0 1 e@1175 ]
[; ;sc8f679x.h: 345: volatile bit KDONE @ ((unsigned)&KEYCON0*8)+7;
"346
[v _KCAPK2 `Vb ~T0 @X0 1 e@1173 ]
[; ;sc8f679x.h: 346: volatile bit KCAPK2 @ ((unsigned)&KEYCON0*8)+5;
"347
[v _KCAPK1 `Vb ~T0 @X0 1 e@1172 ]
[; ;sc8f679x.h: 347: volatile bit KCAPK1 @ ((unsigned)&KEYCON0*8)+4;
"348
[v _KCAPK0 `Vb ~T0 @X0 1 e@1171 ]
[; ;sc8f679x.h: 348: volatile bit KCAPK0 @ ((unsigned)&KEYCON0*8)+3;
"349
[v _KOUT `Vb ~T0 @X0 1 e@1170 ]
[; ;sc8f679x.h: 349: volatile bit KOUT @ ((unsigned)&KEYCON0*8)+2;
"350
[v _KCAP `Vb ~T0 @X0 1 e@1169 ]
[; ;sc8f679x.h: 350: volatile bit KCAP @ ((unsigned)&KEYCON0*8)+1;
"351
[v _KEN `Vb ~T0 @X0 1 e@1168 ]
[; ;sc8f679x.h: 351: volatile bit KEN @ ((unsigned)&KEYCON0*8)+0;
"354
[v _KVREF1 `Vb ~T0 @X0 1 e@1183 ]
[; ;sc8f679x.h: 354: volatile bit KVREF1 @ ((unsigned)&KEYCON1*8)+7;
"355
[v _KVREF0 `Vb ~T0 @X0 1 e@1182 ]
[; ;sc8f679x.h: 355: volatile bit KVREF0 @ ((unsigned)&KEYCON1*8)+6;
"356
[v _KCLK1 `Vb ~T0 @X0 1 e@1181 ]
[; ;sc8f679x.h: 356: volatile bit KCLK1 @ ((unsigned)&KEYCON1*8)+5;
"357
[v _KCLK0 `Vb ~T0 @X0 1 e@1180 ]
[; ;sc8f679x.h: 357: volatile bit KCLK0 @ ((unsigned)&KEYCON1*8)+4;
"358
[v _KCHS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;sc8f679x.h: 358: volatile bit KCHS3 @ ((unsigned)&KEYCON1*8)+3;
"359
[v _KCHS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;sc8f679x.h: 359: volatile bit KCHS2 @ ((unsigned)&KEYCON1*8)+2;
"360
[v _KCHS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;sc8f679x.h: 360: volatile bit KCHS1 @ ((unsigned)&KEYCON1*8)+1;
"361
[v _KCHS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;sc8f679x.h: 361: volatile bit KCHS0 @ ((unsigned)&KEYCON1*8)+0;
"364
[v _EEADRH3 `Vb ~T0 @X0 1 e@1203 ]
[; ;sc8f679x.h: 364: volatile bit EEADRH3 @ ((unsigned)&EEADRH*8)+3;
"365
[v _EEADRH2 `Vb ~T0 @X0 1 e@1202 ]
[; ;sc8f679x.h: 365: volatile bit EEADRH2 @ ((unsigned)&EEADRH*8)+2;
"366
[v _EEADRH1 `Vb ~T0 @X0 1 e@1201 ]
[; ;sc8f679x.h: 366: volatile bit EEADRH1 @ ((unsigned)&EEADRH*8)+1;
"367
[v _EEADRH0 `Vb ~T0 @X0 1 e@1200 ]
[; ;sc8f679x.h: 367: volatile bit EEADRH0 @ ((unsigned)&EEADRH*8)+0;
"370
[v _CAP_LVBO2 `Vb ~T0 @X0 1 e@1215 ]
[; ;sc8f679x.h: 370: volatile bit CAP_LVBO2 @ ((unsigned)&KEYCON2*8)+7;
"371
[v _CAP_LVBO1 `Vb ~T0 @X0 1 e@1214 ]
[; ;sc8f679x.h: 371: volatile bit CAP_LVBO1 @ ((unsigned)&KEYCON2*8)+6;
"372
[v _CAP_LVBO0 `Vb ~T0 @X0 1 e@1213 ]
[; ;sc8f679x.h: 372: volatile bit CAP_LVBO0 @ ((unsigned)&KEYCON2*8)+5;
"373
[v _TKEN `Vb ~T0 @X0 1 e@1208 ]
[; ;sc8f679x.h: 373: volatile bit TKEN @ ((unsigned)&KEYCON2*8)+0;
"376
[v _OPA0EN `Vb ~T0 @X0 1 e@1223 ]
[; ;sc8f679x.h: 376: volatile bit OPA0EN @ ((unsigned)&OPA0CON*8)+7;
"377
[v _OPA0OEN `Vb ~T0 @X0 1 e@1222 ]
[; ;sc8f679x.h: 377: volatile bit OPA0OEN @ ((unsigned)&OPA0CON*8)+6;
"378
[v _CMP0MODE `Vb ~T0 @X0 1 e@1221 ]
[; ;sc8f679x.h: 378: volatile bit CMP0MODE @ ((unsigned)&OPA0CON*8)+5;
"379
[v _OPA0_ADC `Vb ~T0 @X0 1 e@1220 ]
[; ;sc8f679x.h: 379: volatile bit OPA0_ADC @ ((unsigned)&OPA0CON*8)+4;
"380
[v _OPA0FT `Vb ~T0 @X0 1 e@1216 ]
[; ;sc8f679x.h: 380: volatile bit OPA0FT @ ((unsigned)&OPA0CON*8)+0;
"383
[v _OPA0OUT `Vb ~T0 @X0 1 e@1231 ]
[; ;sc8f679x.h: 383: volatile bit OPA0OUT @ ((unsigned)&OPA0ADJ*8)+7;
"384
[v _OPA0COFM `Vb ~T0 @X0 1 e@1230 ]
[; ;sc8f679x.h: 384: volatile bit OPA0COFM @ ((unsigned)&OPA0ADJ*8)+6;
"385
[v _OPA0CRS `Vb ~T0 @X0 1 e@1229 ]
[; ;sc8f679x.h: 385: volatile bit OPA0CRS @ ((unsigned)&OPA0ADJ*8)+5;
"386
[v _OPA0_ADJ4 `Vb ~T0 @X0 1 e@1228 ]
[; ;sc8f679x.h: 386: volatile bit OPA0_ADJ4 @ ((unsigned)&OPA0ADJ*8)+4;
"387
[v _OPA0_ADJ3 `Vb ~T0 @X0 1 e@1227 ]
[; ;sc8f679x.h: 387: volatile bit OPA0_ADJ3 @ ((unsigned)&OPA0ADJ*8)+3;
"388
[v _OPA0_ADJ2 `Vb ~T0 @X0 1 e@1226 ]
[; ;sc8f679x.h: 388: volatile bit OPA0_ADJ2 @ ((unsigned)&OPA0ADJ*8)+2;
"389
[v _OPA0_ADJ1 `Vb ~T0 @X0 1 e@1225 ]
[; ;sc8f679x.h: 389: volatile bit OPA0_ADJ1 @ ((unsigned)&OPA0ADJ*8)+1;
"390
[v _OPA0_ADJ0 `Vb ~T0 @X0 1 e@1224 ]
[; ;sc8f679x.h: 390: volatile bit OPA0_ADJ0 @ ((unsigned)&OPA0ADJ*8)+0;
"393
[v _OPA1EN `Vb ~T0 @X0 1 e@1239 ]
[; ;sc8f679x.h: 393: volatile bit OPA1EN @ ((unsigned)&OPA1CON*8)+7;
"394
[v _OPA1OEN `Vb ~T0 @X0 1 e@1238 ]
[; ;sc8f679x.h: 394: volatile bit OPA1OEN @ ((unsigned)&OPA1CON*8)+6;
"395
[v _CMP1MODE `Vb ~T0 @X0 1 e@1237 ]
[; ;sc8f679x.h: 395: volatile bit CMP1MODE @ ((unsigned)&OPA1CON*8)+5;
"396
[v _OPA1_ADC `Vb ~T0 @X0 1 e@1236 ]
[; ;sc8f679x.h: 396: volatile bit OPA1_ADC @ ((unsigned)&OPA1CON*8)+4;
"397
[v _OPA1FT `Vb ~T0 @X0 1 e@1232 ]
[; ;sc8f679x.h: 397: volatile bit OPA1FT @ ((unsigned)&OPA1CON*8)+0;
"400
[v _OPA1OUT `Vb ~T0 @X0 1 e@1247 ]
[; ;sc8f679x.h: 400: volatile bit OPA1OUT @ ((unsigned)&OPA1ADJ*8)+7;
"401
[v _OPA1COFM `Vb ~T0 @X0 1 e@1246 ]
[; ;sc8f679x.h: 401: volatile bit OPA1COFM @ ((unsigned)&OPA1ADJ*8)+6;
"402
[v _OPA1CRS `Vb ~T0 @X0 1 e@1245 ]
[; ;sc8f679x.h: 402: volatile bit OPA1CRS @ ((unsigned)&OPA1ADJ*8)+5;
"403
[v _OPA1_ADJ4 `Vb ~T0 @X0 1 e@1244 ]
[; ;sc8f679x.h: 403: volatile bit OPA1_ADJ4 @ ((unsigned)&OPA1ADJ*8)+4;
"404
[v _OPA1_ADJ3 `Vb ~T0 @X0 1 e@1243 ]
[; ;sc8f679x.h: 404: volatile bit OPA1_ADJ3 @ ((unsigned)&OPA1ADJ*8)+3;
"405
[v _OPA1_ADJ2 `Vb ~T0 @X0 1 e@1242 ]
[; ;sc8f679x.h: 405: volatile bit OPA1_ADJ2 @ ((unsigned)&OPA1ADJ*8)+2;
"406
[v _OPA1_ADJ1 `Vb ~T0 @X0 1 e@1241 ]
[; ;sc8f679x.h: 406: volatile bit OPA1_ADJ1 @ ((unsigned)&OPA1ADJ*8)+1;
"407
[v _OPA1_ADJ0 `Vb ~T0 @X0 1 e@1240 ]
[; ;sc8f679x.h: 407: volatile bit OPA1_ADJ0 @ ((unsigned)&OPA1ADJ*8)+0;
"410
[v _ADFM `Vb ~T0 @X0 1 e@1255 ]
[; ;sc8f679x.h: 410: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"411
[v _CHS4 `Vb ~T0 @X0 1 e@1254 ]
[; ;sc8f679x.h: 411: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"412
[v _LDO_EN `Vb ~T0 @X0 1 e@1250 ]
[; ;sc8f679x.h: 412: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"413
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1249 ]
[; ;sc8f679x.h: 413: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"414
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1248 ]
[; ;sc8f679x.h: 414: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"417
[v _ADCS1 `Vb ~T0 @X0 1 e@1263 ]
[; ;sc8f679x.h: 417: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"418
[v _ADCS0 `Vb ~T0 @X0 1 e@1262 ]
[; ;sc8f679x.h: 418: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"419
[v _CHS3 `Vb ~T0 @X0 1 e@1261 ]
[; ;sc8f679x.h: 419: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"420
[v _CHS2 `Vb ~T0 @X0 1 e@1260 ]
[; ;sc8f679x.h: 420: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"421
[v _CHS1 `Vb ~T0 @X0 1 e@1259 ]
[; ;sc8f679x.h: 421: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"422
[v _CHS0 `Vb ~T0 @X0 1 e@1258 ]
[; ;sc8f679x.h: 422: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"423
[v _GODONE `Vb ~T0 @X0 1 e@1257 ]
[; ;sc8f679x.h: 423: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"424
[v _ADON `Vb ~T0 @X0 1 e@1256 ]
[; ;sc8f679x.h: 424: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"427
[v _BUZDIV1 `Vb ~T0 @X0 1 e@2095 ]
[; ;sc8f679x.h: 427: volatile bit BUZDIV1 @ ((unsigned)&BUZCON*8)+7;
"428
[v _BUZDIV0 `Vb ~T0 @X0 1 e@2094 ]
[; ;sc8f679x.h: 428: volatile bit BUZDIV0 @ ((unsigned)&BUZCON*8)+6;
"429
[v _BUZDATA5 `Vb ~T0 @X0 1 e@2093 ]
[; ;sc8f679x.h: 429: volatile bit BUZDATA5 @ ((unsigned)&BUZCON*8)+5;
"430
[v _BUZDATA4 `Vb ~T0 @X0 1 e@2092 ]
[; ;sc8f679x.h: 430: volatile bit BUZDATA4 @ ((unsigned)&BUZCON*8)+4;
"431
[v _BUZDATA3 `Vb ~T0 @X0 1 e@2091 ]
[; ;sc8f679x.h: 431: volatile bit BUZDATA3 @ ((unsigned)&BUZCON*8)+3;
"432
[v _BUZDATA2 `Vb ~T0 @X0 1 e@2090 ]
[; ;sc8f679x.h: 432: volatile bit BUZDATA2 @ ((unsigned)&BUZCON*8)+2;
"433
[v _BUZDATA1 `Vb ~T0 @X0 1 e@2089 ]
[; ;sc8f679x.h: 433: volatile bit BUZDATA1 @ ((unsigned)&BUZCON*8)+1;
"434
[v _BUZDATA0 `Vb ~T0 @X0 1 e@2088 ]
[; ;sc8f679x.h: 434: volatile bit BUZDATA0 @ ((unsigned)&BUZCON*8)+0;
"437
[v _TKIF `Vb ~T0 @X0 1 e@2110 ]
[; ;sc8f679x.h: 437: volatile bit TKIF @ ((unsigned)&PIR2*8)+6;
"438
[v _IICIF `Vb ~T0 @X0 1 e@2108 ]
[; ;sc8f679x.h: 438: volatile bit IICIF @ ((unsigned)&PIR2*8)+4;
"439
[v _BCLIF `Vb ~T0 @X0 1 e@2107 ]
[; ;sc8f679x.h: 439: volatile bit BCLIF @ ((unsigned)&PIR2*8)+3;
"440
[v _RCCIF `Vb ~T0 @X0 1 e@2106 ]
[; ;sc8f679x.h: 440: volatile bit RCCIF @ ((unsigned)&PIR2*8)+2;
"441
[v _RACIF `Vb ~T0 @X0 1 e@2105 ]
[; ;sc8f679x.h: 441: volatile bit RACIF @ ((unsigned)&PIR2*8)+1;
"442
[v _LVDIF `Vb ~T0 @X0 1 e@2104 ]
[; ;sc8f679x.h: 442: volatile bit LVDIF @ ((unsigned)&PIR2*8)+0;
"445
[v _TKIE `Vb ~T0 @X0 1 e@2118 ]
[; ;sc8f679x.h: 445: volatile bit TKIE @ ((unsigned)&PIE2*8)+6;
"446
[v _IICIE `Vb ~T0 @X0 1 e@2116 ]
[; ;sc8f679x.h: 446: volatile bit IICIE @ ((unsigned)&PIE2*8)+4;
"447
[v _BCLIE `Vb ~T0 @X0 1 e@2115 ]
[; ;sc8f679x.h: 447: volatile bit BCLIE @ ((unsigned)&PIE2*8)+3;
"448
[v _RCCIE `Vb ~T0 @X0 1 e@2114 ]
[; ;sc8f679x.h: 448: volatile bit RCCIE @ ((unsigned)&PIE2*8)+2;
"449
[v _RACIE `Vb ~T0 @X0 1 e@2113 ]
[; ;sc8f679x.h: 449: volatile bit RACIE @ ((unsigned)&PIE2*8)+1;
"450
[v _LVDIE `Vb ~T0 @X0 1 e@2112 ]
[; ;sc8f679x.h: 450: volatile bit LVDIE @ ((unsigned)&PIE2*8)+0;
"453
[v _IICWCOL `Vb ~T0 @X0 1 e@2151 ]
[; ;sc8f679x.h: 453: volatile bit IICWCOL @ ((unsigned)&IICCON*8)+7;
"454
[v _SSPOV `Vb ~T0 @X0 1 e@2150 ]
[; ;sc8f679x.h: 454: volatile bit SSPOV @ ((unsigned)&IICCON*8)+6;
"455
[v _IICEN `Vb ~T0 @X0 1 e@2149 ]
[; ;sc8f679x.h: 455: volatile bit IICEN @ ((unsigned)&IICCON*8)+5;
"456
[v _IICCKP `Vb ~T0 @X0 1 e@2148 ]
[; ;sc8f679x.h: 456: volatile bit IICCKP @ ((unsigned)&IICCON*8)+4;
"457
[v _IICTOS1 `Vb ~T0 @X0 1 e@2147 ]
[; ;sc8f679x.h: 457: volatile bit IICTOS1 @ ((unsigned)&IICCON*8)+3;
"458
[v _IICTOS0 `Vb ~T0 @X0 1 e@2146 ]
[; ;sc8f679x.h: 458: volatile bit IICTOS0 @ ((unsigned)&IICCON*8)+2;
"459
[v _IICM1 `Vb ~T0 @X0 1 e@2145 ]
[; ;sc8f679x.h: 459: volatile bit IICM1 @ ((unsigned)&IICCON*8)+1;
"460
[v _IICM0 `Vb ~T0 @X0 1 e@2144 ]
[; ;sc8f679x.h: 460: volatile bit IICM0 @ ((unsigned)&IICCON*8)+0;
"463
[v _GCEN `Vb ~T0 @X0 1 e@2159 ]
[; ;sc8f679x.h: 463: volatile bit GCEN @ ((unsigned)&IICCON2*8)+7;
"464
[v _ACKSTAT `Vb ~T0 @X0 1 e@2158 ]
[; ;sc8f679x.h: 464: volatile bit ACKSTAT @ ((unsigned)&IICCON2*8)+6;
"465
[v _ACKDT `Vb ~T0 @X0 1 e@2157 ]
[; ;sc8f679x.h: 465: volatile bit ACKDT @ ((unsigned)&IICCON2*8)+5;
"466
[v _ACKEN `Vb ~T0 @X0 1 e@2156 ]
[; ;sc8f679x.h: 466: volatile bit ACKEN @ ((unsigned)&IICCON2*8)+4;
"467
[v _RCEN `Vb ~T0 @X0 1 e@2155 ]
[; ;sc8f679x.h: 467: volatile bit RCEN @ ((unsigned)&IICCON2*8)+3;
"468
[v _PEN `Vb ~T0 @X0 1 e@2154 ]
[; ;sc8f679x.h: 468: volatile bit PEN @ ((unsigned)&IICCON2*8)+2;
"469
[v _RSEN `Vb ~T0 @X0 1 e@2153 ]
[; ;sc8f679x.h: 469: volatile bit RSEN @ ((unsigned)&IICCON2*8)+1;
"470
[v _SEN `Vb ~T0 @X0 1 e@2152 ]
[; ;sc8f679x.h: 470: volatile bit SEN @ ((unsigned)&IICCON2*8)+0;
"473
[v _IDLE `Vb ~T0 @X0 1 e@2174 ]
[; ;sc8f679x.h: 473: volatile bit IDLE @ ((unsigned)&IICSTAT*8)+6;
"474
[v _DA `Vb ~T0 @X0 1 e@2173 ]
[; ;sc8f679x.h: 474: volatile bit DA @ ((unsigned)&IICSTAT*8)+5;
"475
[v _P `Vb ~T0 @X0 1 e@2172 ]
[; ;sc8f679x.h: 475: volatile bit P @ ((unsigned)&IICSTAT*8)+4;
"476
[v _S `Vb ~T0 @X0 1 e@2171 ]
[; ;sc8f679x.h: 476: volatile bit S @ ((unsigned)&IICSTAT*8)+3;
"477
[v _RW `Vb ~T0 @X0 1 e@2170 ]
[; ;sc8f679x.h: 477: volatile bit RW @ ((unsigned)&IICSTAT*8)+2;
"478
[v _IICTOF `Vb ~T0 @X0 1 e@2169 ]
[; ;sc8f679x.h: 478: volatile bit IICTOF @ ((unsigned)&IICSTAT*8)+1;
"479
[v _BF `Vb ~T0 @X0 1 e@2168 ]
[; ;sc8f679x.h: 479: volatile bit BF @ ((unsigned)&IICSTAT*8)+0;
"482
[v _ANS7 `Vb ~T0 @X0 1 e@2183 ]
[; ;sc8f679x.h: 482: volatile bit ANS7 @ ((unsigned)&ANSEL0*8)+7;
"483
[v _ANS6 `Vb ~T0 @X0 1 e@2182 ]
[; ;sc8f679x.h: 483: volatile bit ANS6 @ ((unsigned)&ANSEL0*8)+6;
"484
[v _ANS5 `Vb ~T0 @X0 1 e@2181 ]
[; ;sc8f679x.h: 484: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"485
[v _ANS4 `Vb ~T0 @X0 1 e@2180 ]
[; ;sc8f679x.h: 485: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"486
[v _ANS3 `Vb ~T0 @X0 1 e@2179 ]
[; ;sc8f679x.h: 486: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"487
[v _ANS2 `Vb ~T0 @X0 1 e@2178 ]
[; ;sc8f679x.h: 487: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"488
[v _ANS1 `Vb ~T0 @X0 1 e@2177 ]
[; ;sc8f679x.h: 488: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"489
[v _ANS0 `Vb ~T0 @X0 1 e@2176 ]
[; ;sc8f679x.h: 489: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"492
[v _ANS13 `Vb ~T0 @X0 1 e@2189 ]
[; ;sc8f679x.h: 492: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"493
[v _ANS12 `Vb ~T0 @X0 1 e@2188 ]
[; ;sc8f679x.h: 493: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"494
[v _ANS11 `Vb ~T0 @X0 1 e@2187 ]
[; ;sc8f679x.h: 494: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"495
[v _ANS10 `Vb ~T0 @X0 1 e@2186 ]
[; ;sc8f679x.h: 495: volatile bit ANS10 @ ((unsigned)&ANSEL1*8)+2;
"496
[v _ANS9 `Vb ~T0 @X0 1 e@2185 ]
[; ;sc8f679x.h: 496: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"497
[v _ANS8 `Vb ~T0 @X0 1 e@2184 ]
[; ;sc8f679x.h: 497: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"500
[v _ANS19 `Vb ~T0 @X0 1 e@2195 ]
[; ;sc8f679x.h: 500: volatile bit ANS19 @ ((unsigned)&ANSEL2*8)+3;
"501
[v _ANS18 `Vb ~T0 @X0 1 e@2194 ]
[; ;sc8f679x.h: 501: volatile bit ANS18 @ ((unsigned)&ANSEL2*8)+2;
"502
[v _ANS17 `Vb ~T0 @X0 1 e@2193 ]
[; ;sc8f679x.h: 502: volatile bit ANS17 @ ((unsigned)&ANSEL2*8)+1;
"503
[v _ANS16 `Vb ~T0 @X0 1 e@2192 ]
[; ;sc8f679x.h: 503: volatile bit ANS16 @ ((unsigned)&ANSEL2*8)+0;
"506
[v _WPDA7 `Vb ~T0 @X0 1 e@2207 ]
[; ;sc8f679x.h: 506: volatile bit WPDA7 @ ((unsigned)&WPDA*8)+7;
"507
[v _WPDA6 `Vb ~T0 @X0 1 e@2206 ]
[; ;sc8f679x.h: 507: volatile bit WPDA6 @ ((unsigned)&WPDA*8)+6;
"508
[v _WPDA5 `Vb ~T0 @X0 1 e@2205 ]
[; ;sc8f679x.h: 508: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"509
[v _WPDA4 `Vb ~T0 @X0 1 e@2204 ]
[; ;sc8f679x.h: 509: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"510
[v _WPDA3 `Vb ~T0 @X0 1 e@2203 ]
[; ;sc8f679x.h: 510: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"511
[v _WPDA2 `Vb ~T0 @X0 1 e@2202 ]
[; ;sc8f679x.h: 511: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"512
[v _WPDA1 `Vb ~T0 @X0 1 e@2201 ]
[; ;sc8f679x.h: 512: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"513
[v _WPDA0 `Vb ~T0 @X0 1 e@2200 ]
[; ;sc8f679x.h: 513: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"516
[v _WPDC1 `Vb ~T0 @X0 1 e@2209 ]
[; ;sc8f679x.h: 516: volatile bit WPDC1 @ ((unsigned)&WPDC*8)+1;
"517
[v _WPDC0 `Vb ~T0 @X0 1 e@2208 ]
[; ;sc8f679x.h: 517: volatile bit WPDC0 @ ((unsigned)&WPDC*8)+0;
"520
[v _WPUC1 `Vb ~T0 @X0 1 e@2217 ]
[; ;sc8f679x.h: 520: volatile bit WPUC1 @ ((unsigned)&WPUC*8)+1;
"521
[v _WPUC0 `Vb ~T0 @X0 1 e@2216 ]
[; ;sc8f679x.h: 521: volatile bit WPUC0 @ ((unsigned)&WPUC*8)+0;
"524
[v _CMP1S_SEL `Vb ~T0 @X0 1 e@2231 ]
[; ;sc8f679x.h: 524: volatile bit CMP1S_SEL @ ((unsigned)&CMPCON*8)+7;
"525
[v _CMP1REF2 `Vb ~T0 @X0 1 e@2230 ]
[; ;sc8f679x.h: 525: volatile bit CMP1REF2 @ ((unsigned)&CMPCON*8)+6;
"526
[v _CMP1REF1 `Vb ~T0 @X0 1 e@2229 ]
[; ;sc8f679x.h: 526: volatile bit CMP1REF1 @ ((unsigned)&CMPCON*8)+5;
"527
[v _CMP1REF0 `Vb ~T0 @X0 1 e@2228 ]
[; ;sc8f679x.h: 527: volatile bit CMP1REF0 @ ((unsigned)&CMPCON*8)+4;
"528
[v _CMP0S_SEL `Vb ~T0 @X0 1 e@2227 ]
[; ;sc8f679x.h: 528: volatile bit CMP0S_SEL @ ((unsigned)&CMPCON*8)+3;
"529
[v _CMP0REF2 `Vb ~T0 @X0 1 e@2226 ]
[; ;sc8f679x.h: 529: volatile bit CMP0REF2 @ ((unsigned)&CMPCON*8)+2;
"530
[v _CMP0REF1 `Vb ~T0 @X0 1 e@2225 ]
[; ;sc8f679x.h: 530: volatile bit CMP0REF1 @ ((unsigned)&CMPCON*8)+1;
"531
[v _CMP0REF0 `Vb ~T0 @X0 1 e@2224 ]
[; ;sc8f679x.h: 531: volatile bit CMP0REF0 @ ((unsigned)&CMPCON*8)+0;
"534
[v _CSRC `Vb ~T0 @X0 1 e@2239 ]
[; ;sc8f679x.h: 534: volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
"535
[v _TX9EN `Vb ~T0 @X0 1 e@2238 ]
[; ;sc8f679x.h: 535: volatile bit TX9EN @ ((unsigned)&TXSTA*8)+6;
"536
[v _TXEN `Vb ~T0 @X0 1 e@2237 ]
[; ;sc8f679x.h: 536: volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
"537
[v _SYNC `Vb ~T0 @X0 1 e@2236 ]
[; ;sc8f679x.h: 537: volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
"538
[v _SCKP `Vb ~T0 @X0 1 e@2235 ]
[; ;sc8f679x.h: 538: volatile bit SCKP @ ((unsigned)&TXSTA*8)+3;
"539
[v _STOPBIT `Vb ~T0 @X0 1 e@2234 ]
[; ;sc8f679x.h: 539: volatile bit STOPBIT @ ((unsigned)&TXSTA*8)+2;
"540
[v _TRMT `Vb ~T0 @X0 1 e@2233 ]
[; ;sc8f679x.h: 540: volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
"541
[v _TX9D `Vb ~T0 @X0 1 e@2232 ]
[; ;sc8f679x.h: 541: volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
"544
[v _SPEN `Vb ~T0 @X0 1 e@2247 ]
[; ;sc8f679x.h: 544: volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
"545
[v _RX9EN `Vb ~T0 @X0 1 e@2246 ]
[; ;sc8f679x.h: 545: volatile bit RX9EN @ ((unsigned)&RCSTA*8)+6;
"546
[v _SREN `Vb ~T0 @X0 1 e@2245 ]
[; ;sc8f679x.h: 546: volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
"547
[v _CREN `Vb ~T0 @X0 1 e@2244 ]
[; ;sc8f679x.h: 547: volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
"548
[v _RCIDL `Vb ~T0 @X0 1 e@2243 ]
[; ;sc8f679x.h: 548: volatile bit RCIDL @ ((unsigned)&RCSTA*8)+3;
"549
[v _FERR `Vb ~T0 @X0 1 e@2242 ]
[; ;sc8f679x.h: 549: volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
"550
[v _OERR `Vb ~T0 @X0 1 e@2241 ]
[; ;sc8f679x.h: 550: volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
"551
[v _RX9D `Vb ~T0 @X0 1 e@2240 ]
[; ;sc8f679x.h: 551: volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
"554
[v _SPIWCOL `Vb ~T0 @X0 1 e@2287 ]
[; ;sc8f679x.h: 554: volatile bit SPIWCOL @ ((unsigned)&SPICON*8)+7;
"555
[v _SPIOV `Vb ~T0 @X0 1 e@2286 ]
[; ;sc8f679x.h: 555: volatile bit SPIOV @ ((unsigned)&SPICON*8)+6;
"556
[v _SPIEN `Vb ~T0 @X0 1 e@2285 ]
[; ;sc8f679x.h: 556: volatile bit SPIEN @ ((unsigned)&SPICON*8)+5;
"557
[v _SPICKP `Vb ~T0 @X0 1 e@2284 ]
[; ;sc8f679x.h: 557: volatile bit SPICKP @ ((unsigned)&SPICON*8)+4;
"558
[v _SPIM3 `Vb ~T0 @X0 1 e@2283 ]
[; ;sc8f679x.h: 558: volatile bit SPIM3 @ ((unsigned)&SPICON*8)+3;
"559
[v _SPIM2 `Vb ~T0 @X0 1 e@2282 ]
[; ;sc8f679x.h: 559: volatile bit SPIM2 @ ((unsigned)&SPICON*8)+2;
"560
[v _SPIM1 `Vb ~T0 @X0 1 e@2281 ]
[; ;sc8f679x.h: 560: volatile bit SPIM1 @ ((unsigned)&SPICON*8)+1;
"561
[v _SPIM0 `Vb ~T0 @X0 1 e@2280 ]
[; ;sc8f679x.h: 561: volatile bit SPIM0 @ ((unsigned)&SPICON*8)+0;
"564
[v _CKE `Vb ~T0 @X0 1 e@2294 ]
[; ;sc8f679x.h: 564: volatile bit CKE @ ((unsigned)&SPICON2*8)+6;
"565
[v _MODE `Vb ~T0 @X0 1 e@2293 ]
[; ;sc8f679x.h: 565: volatile bit MODE @ ((unsigned)&SPICON2*8)+5;
"566
[v _SPIBF `Vb ~T0 @X0 1 e@2288 ]
[; ;sc8f679x.h: 566: volatile bit SPIBF @ ((unsigned)&SPICON2*8)+0;
"569
[v _LVD_RES `Vb ~T0 @X0 1 e@2303 ]
[; ;sc8f679x.h: 569: volatile bit LVD_RES @ ((unsigned)&LVDCON*8)+7;
"570
[v _LVD_SEL2 `Vb ~T0 @X0 1 e@2299 ]
[; ;sc8f679x.h: 570: volatile bit LVD_SEL2 @ ((unsigned)&LVDCON*8)+3;
"571
[v _LVD_SEL1 `Vb ~T0 @X0 1 e@2298 ]
[; ;sc8f679x.h: 571: volatile bit LVD_SEL1 @ ((unsigned)&LVDCON*8)+2;
"572
[v _LVD_SEL0 `Vb ~T0 @X0 1 e@2297 ]
[; ;sc8f679x.h: 572: volatile bit LVD_SEL0 @ ((unsigned)&LVDCON*8)+1;
"573
[v _LVDEN `Vb ~T0 @X0 1 e@2296 ]
[; ;sc8f679x.h: 573: volatile bit LVDEN @ ((unsigned)&LVDCON*8)+0;
"576
[v _RC1 `Vb ~T0 @X0 1 e@3113 ]
[; ;sc8f679x.h: 576: volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
"577
[v _RC0 `Vb ~T0 @X0 1 e@3112 ]
[; ;sc8f679x.h: 577: volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
"580
[v _TRISC1 `Vb ~T0 @X0 1 e@3121 ]
[; ;sc8f679x.h: 580: volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
"581
[v _TRISC0 `Vb ~T0 @X0 1 e@3120 ]
[; ;sc8f679x.h: 581: volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
"584
[v _IOCC1 `Vb ~T0 @X0 1 e@3129 ]
[; ;sc8f679x.h: 584: volatile bit IOCC1 @ ((unsigned)&IOCC*8)+1;
"585
[v _IOCC0 `Vb ~T0 @X0 1 e@3128 ]
[; ;sc8f679x.h: 585: volatile bit IOCC0 @ ((unsigned)&IOCC*8)+0;
"588
[v _IOCA7 `Vb ~T0 @X0 1 e@3143 ]
[; ;sc8f679x.h: 588: volatile bit IOCA7 @ ((unsigned)&IOCA*8)+7;
"589
[v _IOCA6 `Vb ~T0 @X0 1 e@3142 ]
[; ;sc8f679x.h: 589: volatile bit IOCA6 @ ((unsigned)&IOCA*8)+6;
"590
[v _IOCA5 `Vb ~T0 @X0 1 e@3141 ]
[; ;sc8f679x.h: 590: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"591
[v _IOCA4 `Vb ~T0 @X0 1 e@3140 ]
[; ;sc8f679x.h: 591: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"592
[v _IOCA3 `Vb ~T0 @X0 1 e@3139 ]
[; ;sc8f679x.h: 592: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"593
[v _IOCA2 `Vb ~T0 @X0 1 e@3138 ]
[; ;sc8f679x.h: 593: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"594
[v _IOCA1 `Vb ~T0 @X0 1 e@3137 ]
[; ;sc8f679x.h: 594: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"595
[v _IOCA0 `Vb ~T0 @X0 1 e@3136 ]
[; ;sc8f679x.h: 595: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"598
[v _PWM1IOS2 `Vb ~T0 @X0 1 e@3174 ]
[; ;sc8f679x.h: 598: volatile bit PWM1IOS2 @ ((unsigned)&PWMIOS0*8)+6;
"599
[v _PWM1IOS1 `Vb ~T0 @X0 1 e@3173 ]
[; ;sc8f679x.h: 599: volatile bit PWM1IOS1 @ ((unsigned)&PWMIOS0*8)+5;
"600
[v _PWM1IOS0 `Vb ~T0 @X0 1 e@3172 ]
[; ;sc8f679x.h: 600: volatile bit PWM1IOS0 @ ((unsigned)&PWMIOS0*8)+4;
"601
[v _PWM0IOS2 `Vb ~T0 @X0 1 e@3170 ]
[; ;sc8f679x.h: 601: volatile bit PWM0IOS2 @ ((unsigned)&PWMIOS0*8)+2;
"602
[v _PWM0IOS1 `Vb ~T0 @X0 1 e@3169 ]
[; ;sc8f679x.h: 602: volatile bit PWM0IOS1 @ ((unsigned)&PWMIOS0*8)+1;
"603
[v _PWM0IOS0 `Vb ~T0 @X0 1 e@3168 ]
[; ;sc8f679x.h: 603: volatile bit PWM0IOS0 @ ((unsigned)&PWMIOS0*8)+0;
"606
[v _PWM3IOS2 `Vb ~T0 @X0 1 e@3182 ]
[; ;sc8f679x.h: 606: volatile bit PWM3IOS2 @ ((unsigned)&PWMIOS1*8)+6;
"607
[v _PWM3IOS1 `Vb ~T0 @X0 1 e@3181 ]
[; ;sc8f679x.h: 607: volatile bit PWM3IOS1 @ ((unsigned)&PWMIOS1*8)+5;
"608
[v _PWM3IOS0 `Vb ~T0 @X0 1 e@3180 ]
[; ;sc8f679x.h: 608: volatile bit PWM3IOS0 @ ((unsigned)&PWMIOS1*8)+4;
"609
[v _PWM2IOS2 `Vb ~T0 @X0 1 e@3178 ]
[; ;sc8f679x.h: 609: volatile bit PWM2IOS2 @ ((unsigned)&PWMIOS1*8)+2;
"610
[v _PWM2IOS1 `Vb ~T0 @X0 1 e@3177 ]
[; ;sc8f679x.h: 610: volatile bit PWM2IOS1 @ ((unsigned)&PWMIOS1*8)+1;
"611
[v _PWM2IOS0 `Vb ~T0 @X0 1 e@3176 ]
[; ;sc8f679x.h: 611: volatile bit PWM2IOS0 @ ((unsigned)&PWMIOS1*8)+0;
"614
[v _PWM4IOS2 `Vb ~T0 @X0 1 e@3186 ]
[; ;sc8f679x.h: 614: volatile bit PWM4IOS2 @ ((unsigned)&PWMIOS2*8)+2;
"615
[v _PWM4IOS1 `Vb ~T0 @X0 1 e@3185 ]
[; ;sc8f679x.h: 615: volatile bit PWM4IOS1 @ ((unsigned)&PWMIOS2*8)+1;
"616
[v _PWM4IOS0 `Vb ~T0 @X0 1 e@3184 ]
[; ;sc8f679x.h: 616: volatile bit PWM4IOS0 @ ((unsigned)&PWMIOS2*8)+0;
"619
[v _LCDEN `Vb ~T0 @X0 1 e@3199 ]
[; ;sc8f679x.h: 619: volatile bit LCDEN @ ((unsigned)&LCDCON*8)+7;
"620
[v _FRAME `Vb ~T0 @X0 1 e@3198 ]
[; ;sc8f679x.h: 620: volatile bit FRAME @ ((unsigned)&LCDCON*8)+6;
"621
[v _BIAS `Vb ~T0 @X0 1 e@3197 ]
[; ;sc8f679x.h: 621: volatile bit BIAS @ ((unsigned)&LCDCON*8)+5;
"622
[v _LCDISLE1 `Vb ~T0 @X0 1 e@3193 ]
[; ;sc8f679x.h: 622: volatile bit LCDISLE1 @ ((unsigned)&LCDCON*8)+1;
"623
[v _LCDISLE0 `Vb ~T0 @X0 1 e@3192 ]
[; ;sc8f679x.h: 623: volatile bit LCDISLE0 @ ((unsigned)&LCDCON*8)+0;
"626
[v _CS7SEL `Vb ~T0 @X0 1 e@3207 ]
[; ;sc8f679x.h: 626: volatile bit CS7SEL @ ((unsigned)&CSSEL0*8)+7;
"627
[v _CS6SEL `Vb ~T0 @X0 1 e@3206 ]
[; ;sc8f679x.h: 627: volatile bit CS6SEL @ ((unsigned)&CSSEL0*8)+6;
"628
[v _CS5SEL `Vb ~T0 @X0 1 e@3205 ]
[; ;sc8f679x.h: 628: volatile bit CS5SEL @ ((unsigned)&CSSEL0*8)+5;
"629
[v _CS4SEL `Vb ~T0 @X0 1 e@3204 ]
[; ;sc8f679x.h: 629: volatile bit CS4SEL @ ((unsigned)&CSSEL0*8)+4;
"630
[v _CS3SEL `Vb ~T0 @X0 1 e@3203 ]
[; ;sc8f679x.h: 630: volatile bit CS3SEL @ ((unsigned)&CSSEL0*8)+3;
"631
[v _CS2SEL `Vb ~T0 @X0 1 e@3202 ]
[; ;sc8f679x.h: 631: volatile bit CS2SEL @ ((unsigned)&CSSEL0*8)+2;
"632
[v _CS1SEL `Vb ~T0 @X0 1 e@3201 ]
[; ;sc8f679x.h: 632: volatile bit CS1SEL @ ((unsigned)&CSSEL0*8)+1;
"633
[v _CS0SEL `Vb ~T0 @X0 1 e@3200 ]
[; ;sc8f679x.h: 633: volatile bit CS0SEL @ ((unsigned)&CSSEL0*8)+0;
"636
[v _CS15SEL `Vb ~T0 @X0 1 e@3215 ]
[; ;sc8f679x.h: 636: volatile bit CS15SEL @ ((unsigned)&CSSEL1*8)+7;
"637
[v _CS14SEL `Vb ~T0 @X0 1 e@3214 ]
[; ;sc8f679x.h: 637: volatile bit CS14SEL @ ((unsigned)&CSSEL1*8)+6;
"638
[v _CS13SEL `Vb ~T0 @X0 1 e@3213 ]
[; ;sc8f679x.h: 638: volatile bit CS13SEL @ ((unsigned)&CSSEL1*8)+5;
"639
[v _CS12SEL `Vb ~T0 @X0 1 e@3212 ]
[; ;sc8f679x.h: 639: volatile bit CS12SEL @ ((unsigned)&CSSEL1*8)+4;
"640
[v _CS11SEL `Vb ~T0 @X0 1 e@3211 ]
[; ;sc8f679x.h: 640: volatile bit CS11SEL @ ((unsigned)&CSSEL1*8)+3;
"641
[v _CS10SEL `Vb ~T0 @X0 1 e@3210 ]
[; ;sc8f679x.h: 641: volatile bit CS10SEL @ ((unsigned)&CSSEL1*8)+2;
"642
[v _CS9SEL `Vb ~T0 @X0 1 e@3209 ]
[; ;sc8f679x.h: 642: volatile bit CS9SEL @ ((unsigned)&CSSEL1*8)+1;
"643
[v _CS8SEL `Vb ~T0 @X0 1 e@3208 ]
[; ;sc8f679x.h: 643: volatile bit CS8SEL @ ((unsigned)&CSSEL1*8)+0;
"646
[v _CS17SEL `Vb ~T0 @X0 1 e@3217 ]
[; ;sc8f679x.h: 646: volatile bit CS17SEL @ ((unsigned)&CSSEL2*8)+1;
"647
[v _CS16SEL `Vb ~T0 @X0 1 e@3216 ]
[; ;sc8f679x.h: 647: volatile bit CS16SEL @ ((unsigned)&CSSEL2*8)+0;
"650
[v _CS7EN `Vb ~T0 @X0 1 e@3231 ]
[; ;sc8f679x.h: 650: volatile bit CS7EN @ ((unsigned)&CSEN0*8)+7;
"651
[v _CS6EN `Vb ~T0 @X0 1 e@3230 ]
[; ;sc8f679x.h: 651: volatile bit CS6EN @ ((unsigned)&CSEN0*8)+6;
"652
[v _CS5EN `Vb ~T0 @X0 1 e@3229 ]
[; ;sc8f679x.h: 652: volatile bit CS5EN @ ((unsigned)&CSEN0*8)+5;
"653
[v _CS4EN `Vb ~T0 @X0 1 e@3228 ]
[; ;sc8f679x.h: 653: volatile bit CS4EN @ ((unsigned)&CSEN0*8)+4;
"654
[v _CS3EN `Vb ~T0 @X0 1 e@3227 ]
[; ;sc8f679x.h: 654: volatile bit CS3EN @ ((unsigned)&CSEN0*8)+3;
"655
[v _CS2EN `Vb ~T0 @X0 1 e@3226 ]
[; ;sc8f679x.h: 655: volatile bit CS2EN @ ((unsigned)&CSEN0*8)+2;
"656
[v _CS1EN `Vb ~T0 @X0 1 e@3225 ]
[; ;sc8f679x.h: 656: volatile bit CS1EN @ ((unsigned)&CSEN0*8)+1;
"657
[v _CS0EN `Vb ~T0 @X0 1 e@3224 ]
[; ;sc8f679x.h: 657: volatile bit CS0EN @ ((unsigned)&CSEN0*8)+0;
"660
[v _CS15EN `Vb ~T0 @X0 1 e@3239 ]
[; ;sc8f679x.h: 660: volatile bit CS15EN @ ((unsigned)&CSEN1*8)+7;
"661
[v _CS14EN `Vb ~T0 @X0 1 e@3238 ]
[; ;sc8f679x.h: 661: volatile bit CS14EN @ ((unsigned)&CSEN1*8)+6;
"662
[v _CS13EN `Vb ~T0 @X0 1 e@3237 ]
[; ;sc8f679x.h: 662: volatile bit CS13EN @ ((unsigned)&CSEN1*8)+5;
"663
[v _CS12EN `Vb ~T0 @X0 1 e@3236 ]
[; ;sc8f679x.h: 663: volatile bit CS12EN @ ((unsigned)&CSEN1*8)+4;
"664
[v _CS11EN `Vb ~T0 @X0 1 e@3235 ]
[; ;sc8f679x.h: 664: volatile bit CS11EN @ ((unsigned)&CSEN1*8)+3;
"665
[v _CS10EN `Vb ~T0 @X0 1 e@3234 ]
[; ;sc8f679x.h: 665: volatile bit CS10EN @ ((unsigned)&CSEN1*8)+2;
"666
[v _CS9EN `Vb ~T0 @X0 1 e@3233 ]
[; ;sc8f679x.h: 666: volatile bit CS9EN @ ((unsigned)&CSEN1*8)+1;
"667
[v _CS8EN `Vb ~T0 @X0 1 e@3232 ]
[; ;sc8f679x.h: 667: volatile bit CS8EN @ ((unsigned)&CSEN1*8)+0;
"670
[v _CS17EN `Vb ~T0 @X0 1 e@3241 ]
[; ;sc8f679x.h: 670: volatile bit CS17EN @ ((unsigned)&CSEN2*8)+1;
"671
[v _CS16EN `Vb ~T0 @X0 1 e@3240 ]
[; ;sc8f679x.h: 671: volatile bit CS16EN @ ((unsigned)&CSEN2*8)+0;
"674
[v _T1GINV `Vb ~T0 @X0 1 e@3295 ]
[; ;sc8f679x.h: 674: volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
"675
[v _TMR1GE `Vb ~T0 @X0 1 e@3294 ]
[; ;sc8f679x.h: 675: volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
"676
[v _T1CKPS1 `Vb ~T0 @X0 1 e@3293 ]
[; ;sc8f679x.h: 676: volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
"677
[v _T1CKPS0 `Vb ~T0 @X0 1 e@3292 ]
[; ;sc8f679x.h: 677: volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
"678
[v _T0OSCEN `Vb ~T0 @X0 1 e@3291 ]
[; ;sc8f679x.h: 678: volatile bit T0OSCEN @ ((unsigned)&T1CON*8)+3;
"679
[v _T1SYNC `Vb ~T0 @X0 1 e@3290 ]
[; ;sc8f679x.h: 679: volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
"680
[v _TMR1CS `Vb ~T0 @X0 1 e@3289 ]
[; ;sc8f679x.h: 680: volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
"681
[v _TMR1ON `Vb ~T0 @X0 1 e@3288 ]
[; ;sc8f679x.h: 681: volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"12 C:\mcuproject\scm\zdt\D17-jl_SC8F6790_tssop20\D17_SC8F6790_tssop20\Touch_Kscan_Library.h
[p n 752,759 ]
"5 C:\mcuproject\scm\zdt\D17-jl_SC8F6790_tssop20\D17_SC8F6790_tssop20\TouchKeyConst.h
[v _C_OPTION_REG_ `Cuc ~T0 @X0 1 e ]
[i _C_OPTION_REG_
-> -> 10 `i `uc
]
[; ;TouchKeyConst.h: 5: const unsigned char C_OPTION_REG_ = 0x0A;
[; ;Touch_Kscan_Library.h: 18: extern void CheckTouchKey(void);
[; ;Touch_Kscan_Library.h: 19: extern void SystemEnterSleep();
[; ;Touch_Kscan_Library.h: 20: extern volatile bit b_kerr;
[; ;Touch_Kscan_Library.h: 26: extern volatile unsigned char KeyFlag[2];
"63 C:\mcuproject\scm\zdt\D17-jl_SC8F6790_tssop20\D17_SC8F6790_tssop20\Touch_Kscan_Library.h
[v _Table_KeyChannel `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyChannel
:U ..
"64
-> | | -> 64 `i -> 16 `i -> 8 `i `uc
"65
-> | | -> 64 `i -> 16 `i -> 9 `i `uc
"67
-> | | -> 64 `i -> 16 `i -> 10 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 63: const unsigned char Table_KeyChannel[] = {
[; ;Touch_Kscan_Library.h: 64: 0x40|0x10|0x08,
[; ;Touch_Kscan_Library.h: 65: 0x40|0x10|0x09,
[; ;Touch_Kscan_Library.h: 66: 0x40|0x10|0x0A
[; ;Touch_Kscan_Library.h: 67: };
"70
[v _Table_KeyCap `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyCap
:U ..
"71
-> | -> 56 `i -> 2 `i `uc
"72
-> | -> 24 `i -> 2 `i `uc
"74
-> | -> 0 `i -> 2 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 70: const unsigned char Table_KeyCap[] = {
[; ;Touch_Kscan_Library.h: 71: 0x38 | 0x2,
[; ;Touch_Kscan_Library.h: 72: 0x18 | 0x2,
[; ;Touch_Kscan_Library.h: 73: 0x00 | 0x2
[; ;Touch_Kscan_Library.h: 74: };
"77
[v _Table_KeyDown `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyDown
:U ..
"78
-> -> 10 `i `uc
"79
-> -> 10 `i `uc
"81
-> -> 10 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 77: const unsigned char Table_KeyDown[] = {
[; ;Touch_Kscan_Library.h: 78: 10,
[; ;Touch_Kscan_Library.h: 79: 10,
[; ;Touch_Kscan_Library.h: 80: 10
[; ;Touch_Kscan_Library.h: 81: };
"91
[v _KeyResSum `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 91: unsigned int KeyResSum[3];
"92
[v _KeyOldValue0 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 92: unsigned int KeyOldValue0[3];
"93
[v _KeyOldValue1 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 93: unsigned int KeyOldValue1[3];
"94
[v _KeyOldValue2 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 94: unsigned int KeyOldValue2[3];
"95
[v _KeyReference `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 95: unsigned int KeyReference[3];
"96
[v _KeyUpShake `uc ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 96: unsigned char KeyUpShake[3];
"98
[v _KeyValidTime `Cui ~T0 @X0 1 e ]
[i _KeyValidTime
-> * -> 60 `i / -> 1000 `i -> 4 `i `ui
]
[; ;Touch_Kscan_Library.h: 98: const unsigned int KeyValidTime = 60*(1000/4);
"99
[v _KeyTotalNumber `Cuc ~T0 @X0 1 e ]
[i _KeyTotalNumber
-> -> 3 `i `uc
]
[; ;Touch_Kscan_Library.h: 99: const unsigned char KeyTotalNumber = 3;
"100
[v _KeyShakeCounter `Cuc ~T0 @X0 1 e ]
[i _KeyShakeCounter
-> -> 1 `i `uc
]
[; ;Touch_Kscan_Library.h: 100: const unsigned char KeyShakeCounter = 1;
"101
[v _KeyValidNumber `Cuc ~T0 @X0 1 e ]
[i _KeyValidNumber
-> -> 3 `i `uc
]
[; ;Touch_Kscan_Library.h: 101: const unsigned char KeyValidNumber = 3;
"103
[v _KeyWakeUpEn `Cui ~T0 @X0 1 e ]
[i _KeyWakeUpEn
-> -> 7 `i `ui
]
[; ;Touch_Kscan_Library.h: 103: const unsigned int KeyWakeUpEn = 0x0007;
"106
[v _WaterModeSel `Cuc ~T0 @X0 1 e ]
[i _WaterModeSel
-> -> 1 `i `uc
]
[; ;Touch_Kscan_Library.h: 106: const unsigned char WaterModeSel = 1;
"17 C:\mcuproject\scm\zdt\D17-jl_SC8F6790_tssop20\D17_SC8F6790_tssop20\main.c
[v _numArray `Cuc ~T0 @X0 -> 0 `x s ]
[i _numArray
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
-> -> 113 `i `uc
-> -> 121 `i `uc
-> -> 80 `i `uc
-> -> 115 `i `uc
..
]
[; ;main.c: 17: const static unsigned char numArray[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x71,0x79,0x50,0x73};
"19
[v _MainTime `Vuc ~T0 @X0 1 e ]
[; ;main.c: 19: volatile unsigned char MainTime;
"20
[v _B_MainLoop `Vb ~T0 @X0 1 e ]
[v _B_OnOff `Vb ~T0 @X0 1 e ]
[; ;main.c: 20: volatile bit B_MainLoop, B_OnOff;
"21
[v _firstTime `ui ~T0 @X0 1 e ]
[i _firstTime
-> -> 0 `i `ui
]
[; ;main.c: 21: unsigned int firstTime = 0;
"22
[v _keyCount1 `ui ~T0 @X0 1 e ]
[i _keyCount1
-> -> 0 `i `ui
]
[; ;main.c: 22: unsigned int keyCount1 = 0;
"23
[v _keyCount2 `ui ~T0 @X0 1 e ]
[i _keyCount2
-> -> 0 `i `ui
]
[; ;main.c: 23: unsigned int keyCount2 = 0;
"24
[v _keyCount3 `ui ~T0 @X0 1 e ]
[i _keyCount3
-> -> 0 `i `ui
]
[; ;main.c: 24: unsigned int keyCount3 = 0;
"25
[v _longKeyFalg `uc ~T0 @X0 1 e ]
[i _longKeyFalg
-> -> 0 `i `uc
]
[; ;main.c: 25: unsigned char longKeyFalg = 0;
"26
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 26: unsigned char workStep = 0;
"27
[v _zeroStep `uc ~T0 @X0 1 e ]
[i _zeroStep
-> -> 0 `i `uc
]
[; ;main.c: 27: unsigned char zeroStep = 0;
"28
[v _ledLightTime `ui ~T0 @X0 1 e ]
[i _ledLightTime
-> -> 0 `i `ui
]
[; ;main.c: 28: unsigned int ledLightTime = 0;
"29
[v _shanShuoTime `uc ~T0 @X0 1 e ]
[i _shanShuoTime
-> -> 0 `i `uc
]
[; ;main.c: 29: unsigned char shanShuoTime = 0;
"30
[v _lowBatLockFlag `uc ~T0 @X0 1 e ]
[i _lowBatLockFlag
-> -> 0 `i `uc
]
[; ;main.c: 30: unsigned char lowBatLockFlag = 0;
"31
[v _showFlag `uc ~T0 @X0 1 e ]
[i _showFlag
-> -> 0 `i `uc
]
[; ;main.c: 31: unsigned char showFlag = 0;
"32
[v _showShiWei `uc ~T0 @X0 1 e ]
[i _showShiWei
-> -> 0 `i `uc
]
[; ;main.c: 32: unsigned char showShiWei = 0;
"33
[v _showGeWei `uc ~T0 @X0 1 e ]
[i _showGeWei
-> -> 0 `i `uc
]
[; ;main.c: 33: unsigned char showGeWei = 0;
"34
[v _showLed1 `uc ~T0 @X0 1 e ]
[i _showLed1
-> -> 0 `i `uc
]
[; ;main.c: 34: unsigned char showLed1 = 0;
"35
[v _showLed2 `uc ~T0 @X0 1 e ]
[i _showLed2
-> -> 0 `i `uc
]
[; ;main.c: 35: unsigned char showLed2 = 0;
"36
[v _count64ms `uc ~T0 @X0 1 e ]
[i _count64ms
-> -> 0 `i `uc
]
[; ;main.c: 36: unsigned char count64ms = 0;
"37
[v _count1s `uc ~T0 @X0 1 e ]
[i _count1s
-> -> 0 `i `uc
]
[; ;main.c: 37: unsigned char count1s = 0;
"38
[v _chrgFlag `uc ~T0 @X0 1 e ]
[i _chrgFlag
-> -> 0 `i `uc
]
[; ;main.c: 38: unsigned char chrgFlag = 0;
"39
[v _batValue `uc ~T0 @X0 1 e ]
[i _batValue
-> -> 0 `i `uc
]
[; ;main.c: 39: unsigned char batValue = 0;
"40
[v _batResult `ui ~T0 @X0 1 e ]
[i _batResult
-> -> 0 `i `ui
]
[; ;main.c: 40: unsigned int batResult = 0;
"41
[v _preBatValue `uc ~T0 @X0 1 e ]
[i _preBatValue
-> -> 0 `i `uc
]
[; ;main.c: 41: unsigned char preBatValue = 0;
"42
[v _chrgResult `ui ~T0 @X0 1 e ]
[i _chrgResult
-> -> 0 `i `ui
]
[; ;main.c: 42: unsigned int chrgResult = 0;
"43
[v _outResult `ui ~T0 @X0 1 e ]
[i _outResult
-> -> 0 `i `ui
]
[; ;main.c: 43: unsigned int outResult = 0;
"44
[v _NoTouchTime `uc ~T0 @X0 1 e ]
[i _NoTouchTime
-> -> 0 `i `uc
]
[; ;main.c: 44: unsigned char NoTouchTime = 0;
"45
[v _count50 `uc ~T0 @X0 1 e ]
[i _count50
-> -> 0 `i `uc
]
[; ;main.c: 45: unsigned char count50 = 0;
"46
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[i _chrgFullFlag
-> -> 0 `i `uc
]
[; ;main.c: 46: unsigned char chrgFullFlag = 0;
"47
[v _chrgDuty `uc ~T0 @X0 1 e ]
[i _chrgDuty
-> -> 0 `i `uc
]
[; ;main.c: 47: unsigned char chrgDuty = 0;
"48
[v _addTime `uc ~T0 @X0 1 e ]
[i _addTime
-> -> 0 `i `uc
]
[; ;main.c: 48: unsigned char addTime = 0;
"49
[v _subTime `uc ~T0 @X0 1 e ]
[i _subTime
-> -> 0 `i `uc
]
[; ;main.c: 49: unsigned char subTime = 0;
"50
[v _count15s `uc ~T0 @X0 1 e ]
[i _count15s
-> -> 0 `i `uc
]
[; ;main.c: 50: unsigned char count15s = 0;
"51
[v _chrgLockFlag `uc ~T0 @X0 1 e ]
[i _chrgLockFlag
-> -> 0 `i `uc
]
[; ;main.c: 51: unsigned char chrgLockFlag = 0;
"52
[v _chrgFullTime `ui ~T0 @X0 1 e ]
[i _chrgFullTime
-> -> 0 `i `ui
]
[; ;main.c: 52: unsigned int chrgFullTime = 0;
"53
[v _count900s `ui ~T0 @X0 1 e ]
[i _count900s
-> -> 0 `i `ui
]
[; ;main.c: 53: unsigned int count900s = 0;
"54
[v _sleepTime `ui ~T0 @X0 1 e ]
[i _sleepTime
-> -> 0 `i `ui
]
[; ;main.c: 54: unsigned int sleepTime = 0;
"55
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 55: unsigned char lowBatFlag = 0;
"56
[v _lowBatTime `uc ~T0 @X0 1 e ]
[i _lowBatTime
-> -> 0 `i `uc
]
[; ;main.c: 56: unsigned char lowBatTime = 0;
"57
[v _tempResult `ui ~T0 @X0 1 e ]
[i _tempResult
-> -> 0 `i `ui
]
[; ;main.c: 57: unsigned int tempResult = 0;
"58
[v _checkTempTime `uc ~T0 @X0 1 e ]
[i _checkTempTime
-> -> 0 `i `uc
]
[; ;main.c: 58: unsigned char checkTempTime = 0;
"59
[v _chrgBatStep `uc ~T0 @X0 1 e ]
[i _chrgBatStep
-> -> 0 `i `uc
]
[; ;main.c: 59: unsigned char chrgBatStep = 0;
"60
[v _chrgBatStepTime `uc ~T0 @X0 1 e ]
[i _chrgBatStepTime
-> -> 0 `i `uc
]
[; ;main.c: 60: unsigned char chrgBatStepTime = 0;
"61
[v _key1ProtectTime `uc ~T0 @X0 1 e ]
[i _key1ProtectTime
-> -> 0 `i `uc
]
[; ;main.c: 61: unsigned char key1ProtectTime = 0;
"62
[v _key2ProtectTime `uc ~T0 @X0 1 e ]
[i _key2ProtectTime
-> -> 0 `i `uc
]
[; ;main.c: 62: unsigned char key2ProtectTime = 0;
"63
[v _key3ProtectTime `uc ~T0 @X0 1 e ]
[i _key3ProtectTime
-> -> 0 `i `uc
]
[; ;main.c: 63: unsigned char key3ProtectTime = 0;
"64
[v _keyCancelTime `uc ~T0 @X0 1 e ]
[i _keyCancelTime
-> -> 0 `i `uc
]
[; ;main.c: 64: unsigned char keyCancelTime = 0;
"65
[v _preZero `uc ~T0 @X0 1 e ]
[i _preZero
-> -> 0 `i `uc
]
[; ;main.c: 65: unsigned char preZero = 0;
"66
[v _tempDuty `uc ~T0 @X0 1 e ]
[i _tempDuty
-> -> 0 `i `uc
]
[; ;main.c: 66: unsigned char tempDuty = 0;
"67
[v _maxDuty `uc ~T0 @X0 1 e ]
[i _maxDuty
-> -> 0 `i `uc
]
[; ;main.c: 67: unsigned char maxDuty = 0;
"68
[v _checkTime `uc ~T0 @X0 1 e ]
[i _checkTime
-> -> 0 `i `uc
]
[; ;main.c: 68: unsigned char checkTime = 0;
"69
[v _startTime `uc ~T0 @X0 1 e ]
[i _startTime
-> -> 0 `i `uc
]
[; ;main.c: 69: unsigned char startTime = 0;
[; ;main.c: 71: void initTM1650();
[; ;main.c: 72: unsigned int Read_ADC(unsigned char ADCchannel,unsigned char ADCLDORef);
[; ;main.c: 73: void checkChrgAD();
[; ;main.c: 74: void gotoSleep();
[; ;main.c: 75: void checkTempAD();
[; ;main.c: 76: void checkOutAD();
[; ;main.c: 77: void tm1650cmd(unsigned char digAddr,unsigned char seg_data);
[; ;main.c: 78: unsigned char TM1650_read();
"81
[v _Init_System `(v ~T0 @X0 1 ef ]
"82
{
[; ;main.c: 81: void Init_System()
[; ;main.c: 82: {
[e :U _Init_System ]
[f ]
[; ;main.c: 83: asm("nop");
"83
[; <" nop ;# ">
[; ;main.c: 84: asm("clrwdt");
"84
[; <" clrwdt ;# ">
[; ;main.c: 85: INTCON = 0;
"85
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 86: OSCCON = 0X71;
"86
[e = _OSCCON -> -> 113 `i `uc ]
[; ;main.c: 87: OPTION_REG = 0;
"87
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 88: SWDTEN = 1;
"88
[e = _SWDTEN -> -> 1 `i `b ]
[; ;main.c: 89: asm("clrwdt");
"89
[; <" clrwdt ;# ">
[; ;main.c: 93: TRISA = 0x22;
"93
[e = _TRISA -> -> 34 `i `uc ]
[; ;main.c: 94: PORTA = 0;
"94
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 95: TRISB = 0x18;
"95
[e = _TRISB -> -> 24 `i `uc ]
[; ;main.c: 96: PORTB = 0;
"96
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 97: WPUB = 0x00;
"97
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 98: TRISC = 0;
"98
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 99: PORTC = 0;
"99
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 100: WPUC = 0x00;
"100
[e = _WPUC -> -> 0 `i `uc ]
[; ;main.c: 101: ANSEL0 = 0x01;
"101
[e = _ANSEL0 -> -> 1 `i `uc ]
[; ;main.c: 102: ANSEL1 = 0x06;
"102
[e = _ANSEL1 -> -> 6 `i `uc ]
[; ;main.c: 103: ANSEL2 = 0x01;
"103
[e = _ANSEL2 -> -> 1 `i `uc ]
[; ;main.c: 105: PIE1 = 2;
"105
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 106: PR2 = 250;
"106
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 107: T2CON = 4;
"107
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 109: INTCON = 0XC0;
"109
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 110: ADCON0 = 0XC1;
"110
[e = _ADCON0 -> -> 193 `i `uc ]
[; ;main.c: 111: ADON = 1;
"111
[e = _ADON -> -> 1 `i `b ]
[; ;main.c: 112: }
"112
[e :UE 1 ]
}
"122
[v _Refurbish_Sfr `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 122: void Refurbish_Sfr() {
[e :U _Refurbish_Sfr ]
[f ]
[; ;main.c: 124: PIE1 = 2;
"124
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 125: PR2 = 250;
"125
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 126: INTCON = 0XC0;
"126
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 127: if (4 != T2CON)
"127
[e $ ! != -> 4 `i -> _T2CON `i 3  ]
[; ;main.c: 128: T2CON = 4;
"128
[e = _T2CON -> -> 4 `i `uc ]
[e :U 3 ]
[; ;main.c: 129: }
"129
[e :UE 2 ]
}
"132
[v _KeyServer `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 132: void KeyServer() {
[e :U _KeyServer ]
[f ]
[; ;main.c: 133: if(key1ProtectTime > 0)
"133
[e $ ! > -> _key1ProtectTime `i -> 0 `i 5  ]
[; ;main.c: 134: {
"134
{
[; ;main.c: 135: key1ProtectTime--;
"135
[e -- _key1ProtectTime -> -> 1 `i `uc ]
"136
}
[e :U 5 ]
[; ;main.c: 136: }
[; ;main.c: 137: if(key2ProtectTime > 0)
"137
[e $ ! > -> _key2ProtectTime `i -> 0 `i 6  ]
[; ;main.c: 138: {
"138
{
[; ;main.c: 139: key2ProtectTime--;
"139
[e -- _key2ProtectTime -> -> 1 `i `uc ]
"140
}
[e :U 6 ]
[; ;main.c: 140: }
[; ;main.c: 141: if(key3ProtectTime > 0)
"141
[e $ ! > -> _key3ProtectTime `i -> 0 `i 7  ]
[; ;main.c: 142: {
"142
{
[; ;main.c: 143: key3ProtectTime--;
"143
[e -- _key3ProtectTime -> -> 1 `i `uc ]
"144
}
[e :U 7 ]
"145
[v F1063 `uc ~T0 @X0 1 s KeyOldFlag ]
[i F1063
-> -> 0 `i `uc
]
[; ;main.c: 144: }
[; ;main.c: 145: static unsigned char KeyOldFlag = 0;
[; ;main.c: 146: if (KeyFlag[0]) {
"146
[e $ ! != -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> -> -> 0 `i `Vuc `i 8  ]
{
[; ;main.c: 147: NoTouchTime = 0;
"147
[e = _NoTouchTime -> -> 0 `i `uc ]
[; ;main.c: 148: sleepTime = 0;
"148
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 149: if ((KeyFlag[0] & 0x2) && key2ProtectTime == 0 && key3ProtectTime == 0) {
"149
[e $ ! && && != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 2 `i -> 0 `i == -> _key2ProtectTime `i -> 0 `i == -> _key3ProtectTime `i -> 0 `i 9  ]
{
[; ;main.c: 151: key1ProtectTime = 5;
"151
[e = _key1ProtectTime -> -> 5 `i `uc ]
[; ;main.c: 152: if(++keyCount1 > 45)
"152
[e $ ! > =+ _keyCount1 -> -> 1 `i `ui -> -> 45 `i `ui 10  ]
[; ;main.c: 153: {
"153
{
[; ;main.c: 154: keyCount1 = 45;
"154
[e = _keyCount1 -> -> 45 `i `ui ]
[; ;main.c: 155: if(workStep > 1 && ++count50 > 25)
"155
[e $ ! && > -> _workStep `i -> 1 `i > -> =+ _count50 -> -> 1 `i `uc `i -> 25 `i 11  ]
[; ;main.c: 156: {
"156
{
[; ;main.c: 157: workStep--;
"157
[e -- _workStep -> -> 1 `i `uc ]
[; ;main.c: 158: count50 = 0;
"158
[e = _count50 -> -> 0 `i `uc ]
"159
}
[e :U 11 ]
"160
}
[e :U 10 ]
"161
}
[e :U 9 ]
[; ;main.c: 159: }
[; ;main.c: 160: }
[; ;main.c: 161: }
[; ;main.c: 162: if ((KeyFlag[0] & 0x1) && key1ProtectTime == 0 && key3ProtectTime == 0) {
"162
[e $ ! && && != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 1 `i -> 0 `i == -> _key1ProtectTime `i -> 0 `i == -> _key3ProtectTime `i -> 0 `i 12  ]
{
[; ;main.c: 164: key2ProtectTime = 5;
"164
[e = _key2ProtectTime -> -> 5 `i `uc ]
[; ;main.c: 165: if(++keyCount2 > 45)
"165
[e $ ! > =+ _keyCount2 -> -> 1 `i `ui -> -> 45 `i `ui 13  ]
[; ;main.c: 166: {
"166
{
[; ;main.c: 167: keyCount2 = 45;
"167
[e = _keyCount2 -> -> 45 `i `ui ]
[; ;main.c: 168: if(workStep < 20 && (workStep > 0 || ledLightTime > 0) && ++count50 > 25)
"168
[e $ ! && && < -> _workStep `i -> 20 `i || > -> _workStep `i -> 0 `i > _ledLightTime -> -> 0 `i `ui > -> =+ _count50 -> -> 1 `i `uc `i -> 25 `i 14  ]
[; ;main.c: 169: {
"169
{
[; ;main.c: 170: workStep++;
"170
[e ++ _workStep -> -> 1 `i `uc ]
[; ;main.c: 171: count50 = 0;
"171
[e = _count50 -> -> 0 `i `uc ]
"172
}
[e :U 14 ]
[; ;main.c: 172: }
[; ;main.c: 173: if(workStep == 1)
"173
[e $ ! == -> _workStep `i -> 1 `i 15  ]
[; ;main.c: 174: {
"174
{
[; ;main.c: 175: startTime = 50;
"175
[e = _startTime -> -> 50 `i `uc ]
"176
}
[e :U 15 ]
"177
}
[e :U 13 ]
"178
}
[e :U 12 ]
[; ;main.c: 176: }
[; ;main.c: 177: }
[; ;main.c: 178: }
[; ;main.c: 179: if ((KeyFlag[0] & 0x4) && key2ProtectTime == 0 && key1ProtectTime == 0) {
"179
[e $ ! && && != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 4 `i -> 0 `i == -> _key2ProtectTime `i -> 0 `i == -> _key1ProtectTime `i -> 0 `i 16  ]
{
[; ;main.c: 181: key3ProtectTime = 5;
"181
[e = _key3ProtectTime -> -> 5 `i `uc ]
[; ;main.c: 182: if(++keyCount3 > 200)
"182
[e $ ! > =+ _keyCount3 -> -> 1 `i `ui -> -> 200 `i `ui 17  ]
[; ;main.c: 183: {
"183
{
[; ;main.c: 184: keyCount3 = 200;
"184
[e = _keyCount3 -> -> 200 `i `ui ]
[; ;main.c: 185: if(longKeyFalg == 0)
"185
[e $ ! == -> _longKeyFalg `i -> 0 `i 18  ]
[; ;main.c: 186: {
"186
{
[; ;main.c: 187: longKeyFalg = 1;
"187
[e = _longKeyFalg -> -> 1 `i `uc ]
[; ;main.c: 188: if(workStep > 0 || ledLightTime > 0)
"188
[e $ ! || > -> _workStep `i -> 0 `i > _ledLightTime -> -> 0 `i `ui 19  ]
[; ;main.c: 189: {
"189
{
[; ;main.c: 190: workStep = 0;
"190
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 191: zeroStep = 12;
"191
[e = _zeroStep -> -> 12 `i `uc ]
[; ;main.c: 192: ledLightTime = 0;
"192
[e = _ledLightTime -> -> 0 `i `ui ]
"193
}
[; ;main.c: 193: }
[e $U 20  ]
"194
[e :U 19 ]
[; ;main.c: 194: else if(lowBatFlag == 0)
[e $ ! == -> _lowBatFlag `i -> 0 `i 21  ]
[; ;main.c: 195: {
"195
{
[; ;main.c: 196: workStep = 0;
"196
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 197: zeroStep = 0;
"197
[e = _zeroStep -> -> 0 `i `uc ]
[; ;main.c: 198: ledLightTime = 300;
"198
[e = _ledLightTime -> -> 300 `i `ui ]
[; ;main.c: 199: if(lowBatLockFlag)
"199
[e $ ! != -> _lowBatLockFlag `i -> -> -> 0 `i `uc `i 22  ]
[; ;main.c: 200: {
"200
{
[; ;main.c: 201: shanShuoTime = 250;
"201
[e = _shanShuoTime -> -> 250 `i `uc ]
"202
}
[e :U 22 ]
"203
}
[e :U 21 ]
"204
[e :U 20 ]
}
[; ;main.c: 202: }
[; ;main.c: 203: }
[; ;main.c: 204: }
[e $U 23  ]
"205
[e :U 18 ]
[; ;main.c: 205: else if(zeroStep > 0 && ++count64ms >= 12)
[e $ ! && > -> _zeroStep `i -> 0 `i >= -> =+ _count64ms -> -> 1 `i `uc `i -> 12 `i 24  ]
[; ;main.c: 206: {
"206
{
[; ;main.c: 207: zeroStep--;
"207
[e -- _zeroStep -> -> 1 `i `uc ]
[; ;main.c: 208: count64ms = 0;
"208
[e = _count64ms -> -> 0 `i `uc ]
"209
}
[e :U 24 ]
"210
[e :U 23 ]
}
[e :U 17 ]
[; ;main.c: 209: }
[; ;main.c: 210: }
[; ;main.c: 211: if(lowBatFlag == 0 && ledLightTime == 0 && longKeyFalg == 0 && keyCount3 % 16 == 0)
"211
[e $ ! && && && == -> _lowBatFlag `i -> 0 `i == _ledLightTime -> -> 0 `i `ui == -> _longKeyFalg `i -> 0 `i == % _keyCount3 -> -> 16 `i `ui -> -> 0 `i `ui 25  ]
[; ;main.c: 212: {
"212
{
[; ;main.c: 213: zeroStep++;
"213
[e ++ _zeroStep -> -> 1 `i `uc ]
[; ;main.c: 214: preZero = zeroStep;
"214
[e = _preZero _zeroStep ]
"215
}
[e :U 25 ]
"216
}
[e :U 16 ]
[; ;main.c: 215: }
[; ;main.c: 216: }
[; ;main.c: 217: keyCancelTime = 0;
"217
[e = _keyCancelTime -> -> 0 `i `uc ]
"218
}
[; ;main.c: 218: }
[e $U 26  ]
"219
[e :U 8 ]
[; ;main.c: 219: else
[; ;main.c: 220: {
"220
{
[; ;main.c: 221: if(++keyCancelTime > 5)
"221
[e $ ! > -> =+ _keyCancelTime -> -> 1 `i `uc `i -> 5 `i 27  ]
[; ;main.c: 222: {
"222
{
[; ;main.c: 223: keyCancelTime = 0;
"223
[e = _keyCancelTime -> -> 0 `i `uc ]
[; ;main.c: 224: if(keyCount1 > 5 && workStep > 1)
"224
[e $ ! && > _keyCount1 -> -> 5 `i `ui > -> _workStep `i -> 1 `i 28  ]
[; ;main.c: 225: {
"225
{
[; ;main.c: 226: workStep--;
"226
[e -- _workStep -> -> 1 `i `uc ]
"227
}
[e :U 28 ]
[; ;main.c: 227: }
[; ;main.c: 228: keyCount1 = 0;
"228
[e = _keyCount1 -> -> 0 `i `ui ]
[; ;main.c: 230: if(keyCount2 > 5 && workStep < 20 && (workStep > 0 || ledLightTime > 0))
"230
[e $ ! && && > _keyCount2 -> -> 5 `i `ui < -> _workStep `i -> 20 `i || > -> _workStep `i -> 0 `i > _ledLightTime -> -> 0 `i `ui 29  ]
[; ;main.c: 231: {
"231
{
[; ;main.c: 232: workStep++;
"232
[e ++ _workStep -> -> 1 `i `uc ]
[; ;main.c: 233: if(workStep == 1)
"233
[e $ ! == -> _workStep `i -> 1 `i 30  ]
[; ;main.c: 234: {
"234
{
[; ;main.c: 235: startTime = 50;
"235
[e = _startTime -> -> 50 `i `uc ]
"236
}
[e :U 30 ]
"237
}
[e :U 29 ]
[; ;main.c: 236: }
[; ;main.c: 237: }
[; ;main.c: 238: keyCount2 = 0;
"238
[e = _keyCount2 -> -> 0 `i `ui ]
"239
}
[e :U 27 ]
[; ;main.c: 239: }
[; ;main.c: 246: if(preZero == 1 || preZero == 2)
"246
[e $ ! || == -> _preZero `i -> 1 `i == -> _preZero `i -> 2 `i 31  ]
[; ;main.c: 247: {
"247
{
[; ;main.c: 248: preZero = 0;
"248
[e = _preZero -> -> 0 `i `uc ]
[; ;main.c: 249: zeroStep = 3;
"249
[e = _zeroStep -> -> 3 `i `uc ]
"250
}
[e :U 31 ]
[; ;main.c: 250: }
[; ;main.c: 251: longKeyFalg = 0;
"251
[e = _longKeyFalg -> -> 0 `i `uc ]
[; ;main.c: 252: keyCount3 = 0;
"252
[e = _keyCount3 -> -> 0 `i `ui ]
[; ;main.c: 253: if(zeroStep > 0 && ++count64ms >= 12)
"253
[e $ ! && > -> _zeroStep `i -> 0 `i >= -> =+ _count64ms -> -> 1 `i `uc `i -> 12 `i 32  ]
[; ;main.c: 254: {
"254
{
[; ;main.c: 255: zeroStep--;
"255
[e -- _zeroStep -> -> 1 `i `uc ]
[; ;main.c: 256: count64ms = 0;
"256
[e = _count64ms -> -> 0 `i `uc ]
"257
}
[e :U 32 ]
"258
}
[e :U 26 ]
[; ;main.c: 257: }
[; ;main.c: 258: }
[; ;main.c: 259: }
"259
[e :UE 4 ]
}
"272
[v _Read_ADC `(ui ~T0 @X0 1 ef2`uc`uc ]
"273
{
[; ;main.c: 272: unsigned int Read_ADC(unsigned char ADCchannel,unsigned char ADCLDORef)
[; ;main.c: 273: {
[e :U _Read_ADC ]
"272
[v _ADCchannel `uc ~T0 @X0 1 r1 ]
[v _ADCLDORef `uc ~T0 @X0 1 r2 ]
"273
[f ]
"274
[v _Adc_Result `ui ~T0 @X0 1 a ]
"275
[v _Adc_ResultSum `ui ~T0 @X0 1 a ]
[; ;main.c: 274: unsigned int Adc_Result;
[; ;main.c: 275: unsigned int Adc_ResultSum = 0;
[e = _Adc_ResultSum -> -> 0 `i `ui ]
"276
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 276: unsigned char i=200;
[e = _i -> -> 200 `i `uc ]
[; ;main.c: 278: if(ADCLDORef==0)
"278
[e $ ! == -> _ADCLDORef `i -> 0 `i 34  ]
[; ;main.c: 279: {
"279
{
[; ;main.c: 280: ADCON1 = 0B00000000;
"280
[e = _ADCON1 -> -> 0 `i `uc ]
"281
}
[; ;main.c: 281: }
[e $U 35  ]
"282
[e :U 34 ]
[; ;main.c: 282: else if(ADCLDORef==1)
[e $ ! == -> _ADCLDORef `i -> 1 `i 36  ]
[; ;main.c: 283: {
"283
{
[; ;main.c: 284: ADCON1 = 0B00000101;
"284
[e = _ADCON1 -> -> 5 `i `uc ]
"285
}
[; ;main.c: 285: }
[e $U 37  ]
"286
[e :U 36 ]
[; ;main.c: 286: else
[; ;main.c: 287: {
"287
{
[; ;main.c: 288: ADCON1 = 0B00000110;
"288
[e = _ADCON1 -> -> 6 `i `uc ]
"289
}
[e :U 37 ]
[e :U 35 ]
[; ;main.c: 289: }
[; ;main.c: 291: CHS4 = 0;
"291
[e = _CHS4 -> -> 0 `i `b ]
[; ;main.c: 292: if(ADCchannel >=16)
"292
[e $ ! >= -> _ADCchannel `i -> 16 `i 38  ]
[; ;main.c: 293: {
"293
{
[; ;main.c: 294: ADCchannel -= 16;
"294
[e =- _ADCchannel -> -> 16 `i `uc ]
[; ;main.c: 295: CHS4 = 1;
"295
[e = _CHS4 -> -> 1 `i `b ]
"296
}
[e :U 38 ]
[; ;main.c: 296: }
[; ;main.c: 298: ADCON0 &= 0b11000011;
"298
[e =& _ADCON0 -> -> 195 `i `uc ]
[; ;main.c: 299: ADCON0 |= ADCchannel<<2;
"299
[e =| _ADCON0 -> << -> _ADCchannel `i -> 2 `i `uc ]
[; ;main.c: 300: asm("nop");
"300
[; <" nop ;# ">
[; ;main.c: 301: GODONE = 1;
"301
[e = _GODONE -> -> 1 `i `b ]
[; ;main.c: 302: while(GODONE==1&&i>0)
"302
[e $U 39  ]
[e :U 40 ]
[; ;main.c: 303: {
"303
{
[; ;main.c: 304: i--;
"304
[e -- _i -> -> 1 `i `uc ]
[; ;main.c: 305: asm("nop");
"305
[; <" nop ;# ">
"306
}
[e :U 39 ]
"302
[e $ && == -> _GODONE `i -> 1 `i > -> _i `i -> 0 `i 40  ]
[e :U 41 ]
[; ;main.c: 306: }
[; ;main.c: 307: Adc_Result = ADRESH<<4;
"307
[e = _Adc_Result -> << -> _ADRESH `i -> 4 `i `ui ]
[; ;main.c: 308: Adc_Result += ADRESL>>4;
"308
[e =+ _Adc_Result -> >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 309: return Adc_Result;
"309
[e ) _Adc_Result ]
[e $UE 33  ]
[; ;main.c: 311: }
"311
[e :UE 33 ]
}
"313
[v _checkOutAD `(v ~T0 @X0 1 ef ]
"314
{
[; ;main.c: 313: void checkOutAD()
[; ;main.c: 314: {
[e :U _checkOutAD ]
[f ]
[; ;main.c: 315: outResult = Read_ADC(9,1);
"315
[e = _outResult ( _Read_ADC (2 , -> -> 9 `i `uc -> -> 1 `i `uc ]
"316
[v _maxAout `uc ~T0 @X0 1 a ]
[; ;main.c: 316: unsigned char maxAout = 37;
[e = _maxAout -> -> 37 `i `uc ]
[; ;main.c: 317: if(batValue > 30)
"317
[e $ ! > -> _batValue `i -> 30 `i 43  ]
[; ;main.c: 318: maxAout = 39;
"318
[e = _maxAout -> -> 39 `i `uc ]
[e :U 43 ]
[; ;main.c: 319: maxAout = maxAout + workStep;
"319
[e = _maxAout -> + -> _maxAout `i -> _workStep `i `uc ]
[; ;main.c: 321: if(outResult > maxAout)
"321
[e $ ! > _outResult -> _maxAout `ui 44  ]
[; ;main.c: 322: {
"322
{
[; ;main.c: 323: if(++checkTime > 2)
"323
[e $ ! > -> =+ _checkTime -> -> 1 `i `uc `i -> 2 `i 45  ]
[; ;main.c: 324: {
"324
{
[; ;main.c: 325: checkTime = 2;
"325
[e = _checkTime -> -> 2 `i `uc ]
[; ;main.c: 326: if(startTime == 0)
"326
[e $ ! == -> _startTime `i -> 0 `i 46  ]
[; ;main.c: 327: {
"327
{
[; ;main.c: 328: tempDuty = 80 + workStep;
"328
[e = _tempDuty -> + -> 80 `i -> _workStep `i `uc ]
"329
}
[; ;main.c: 329: }
[e $U 47  ]
"330
[e :U 46 ]
[; ;main.c: 330: else
[; ;main.c: 331: {
"331
{
[; ;main.c: 332: tempDuty = maxDuty;
"332
[e = _tempDuty _maxDuty ]
"333
}
[e :U 47 ]
"334
}
[e :U 45 ]
"335
}
[; ;main.c: 333: }
[; ;main.c: 334: }
[; ;main.c: 335: }
[e $U 48  ]
"336
[e :U 44 ]
[; ;main.c: 336: else
[; ;main.c: 337: {
"337
{
[; ;main.c: 338: checkTime = 0;
"338
[e = _checkTime -> -> 0 `i `uc ]
[; ;main.c: 339: tempDuty = maxDuty;
"339
[e = _tempDuty _maxDuty ]
"340
}
[e :U 48 ]
[; ;main.c: 340: }
[; ;main.c: 341: PWMD0L = tempDuty;
"341
[e = _PWMD0L _tempDuty ]
[; ;main.c: 342: }
"342
[e :UE 42 ]
}
"344
[v _checkChrgAD `(v ~T0 @X0 1 ef ]
"345
{
[; ;main.c: 344: void checkChrgAD()
[; ;main.c: 345: {
[e :U _checkChrgAD ]
[f ]
[; ;main.c: 346: chrgResult = Read_ADC(16,1);
"346
[e = _chrgResult ( _Read_ADC (2 , -> -> 16 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 347: }
"347
[e :UE 49 ]
}
"349
[v _checkTempAD `(v ~T0 @X0 1 ef ]
"350
{
[; ;main.c: 349: void checkTempAD()
[; ;main.c: 350: {
[e :U _checkTempAD ]
[f ]
[; ;main.c: 351: PORTA |= 0x01;
"351
[e =| _PORTA -> -> 1 `i `uc ]
[; ;main.c: 352: tempResult = Read_ADC(1,1);
"352
[e = _tempResult ( _Read_ADC (2 , -> -> 1 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 353: if(tempResult < 130)
"353
[e $ ! < _tempResult -> -> 130 `i `ui 51  ]
[; ;main.c: 354: {
"354
{
[; ;main.c: 356: if(++checkTempTime > 200)
"356
[e $ ! > -> =+ _checkTempTime -> -> 1 `i `uc `i -> 200 `i 52  ]
[; ;main.c: 357: {
"357
{
[; ;main.c: 358: checkTempTime = 0;
"358
[e = _checkTempTime -> -> 0 `i `uc ]
[; ;main.c: 359: workStep = 0;
"359
[e = _workStep -> -> 0 `i `uc ]
"361
}
[e :U 52 ]
"362
}
[; ;main.c: 361: }
[; ;main.c: 362: }
[e $U 53  ]
"363
[e :U 51 ]
[; ;main.c: 363: else
[; ;main.c: 364: {
"364
{
[; ;main.c: 365: checkTempTime = 0;
"365
[e = _checkTempTime -> -> 0 `i `uc ]
"366
}
[e :U 53 ]
[; ;main.c: 366: }
[; ;main.c: 367: }
"367
[e :UE 50 ]
}
"369
[v _checkBat `(v ~T0 @X0 1 ef ]
"370
{
[; ;main.c: 369: void checkBat()
[; ;main.c: 370: {
[e :U _checkBat ]
[f ]
[; ;main.c: 371: batResult = Read_ADC(10,1);
"371
[e = _batResult ( _Read_ADC (2 , -> -> 10 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 372: if(batResult < 1118)
"372
[e $ ! < _batResult -> -> 1118 `i `ui 55  ]
[; ;main.c: 373: {
"373
{
[; ;main.c: 374: batValue = 0;
"374
[e = _batValue -> -> 0 `i `uc ]
[; ;main.c: 375: if(workStep > 0 && ++lowBatTime > 200)
"375
[e $ ! && > -> _workStep `i -> 0 `i > -> =+ _lowBatTime -> -> 1 `i `uc `i -> 200 `i 56  ]
[; ;main.c: 376: {
"376
{
[; ;main.c: 377: lowBatTime = 0;
"377
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 378: lowBatFlag = 1;
"378
[e = _lowBatFlag -> -> 1 `i `uc ]
[; ;main.c: 379: workStep = 0;
"379
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 380: zeroStep = 12;
"380
[e = _zeroStep -> -> 12 `i `uc ]
[; ;main.c: 381: ledLightTime = 0;
"381
[e = _ledLightTime -> -> 0 `i `ui ]
"382
}
[e :U 56 ]
"383
}
[; ;main.c: 382: }
[; ;main.c: 383: }
[e $U 57  ]
"384
[e :U 55 ]
[; ;main.c: 384: else
[; ;main.c: 385: {
"385
{
[; ;main.c: 386: lowBatTime = 0;
"386
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 387: if(batResult >= 1376)
"387
[e $ ! >= _batResult -> -> 1376 `i `ui 58  ]
[; ;main.c: 388: {
"388
{
[; ;main.c: 389: batValue = ((batResult - 1376) /2) + 16;
"389
[e = _batValue -> + / - _batResult -> -> 1376 `i `ui -> -> 2 `i `ui -> -> 16 `i `ui `uc ]
"390
}
[; ;main.c: 390: }
[e $U 59  ]
"391
[e :U 58 ]
[; ;main.c: 391: else
[; ;main.c: 392: {
"392
{
[; ;main.c: 393: batValue = (batResult - 1118) / 16;
"393
[e = _batValue -> / - _batResult -> -> 1118 `i `ui -> -> 16 `i `ui `uc ]
"394
}
[e :U 59 ]
[; ;main.c: 394: }
[; ;main.c: 396: if(batValue > 99)
"396
[e $ ! > -> _batValue `i -> 99 `i 60  ]
[; ;main.c: 397: batValue = 99;
"397
[e = _batValue -> -> 99 `i `uc ]
[e :U 60 ]
"398
}
[e :U 57 ]
[; ;main.c: 398: }
[; ;main.c: 399: }
"399
[e :UE 54 ]
}
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F1072 `(v ~T0 @X0 1 tf ]
"405
[v _Isr_Timer `IF1072 ~T0 @X0 1 e ]
"406
{
[; ;main.c: 405: void interrupt Isr_Timer()
[; ;main.c: 406: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 407: if(TMR2IF)
"407
[e $ ! _TMR2IF 62  ]
[; ;main.c: 408: {
"408
{
[; ;main.c: 409: TMR2IF = 0;
"409
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 410: if(++MainTime >= 32)
"410
[e $ ! >= -> =+ _MainTime -> -> 1 `i `uc `i -> 32 `i 63  ]
[; ;main.c: 411: {
"411
{
[; ;main.c: 412: MainTime = 0;
"412
[e = _MainTime -> -> 0 `i `uc ]
[; ;main.c: 413: B_MainLoop = 1;
"413
[e = _B_MainLoop -> -> 1 `i `b ]
"414
}
[e :U 63 ]
"415
}
[; ;main.c: 414: }
[; ;main.c: 415: }
[e $U 64  ]
"416
[e :U 62 ]
[; ;main.c: 416: else
[; ;main.c: 417: {
"417
{
[; ;main.c: 418: PIR1 = 0;
"418
[e = _PIR1 -> -> 0 `i `uc ]
"419
}
[e :U 64 ]
[; ;main.c: 419: }
[; ;main.c: 421: if(RACIF)
"421
[e $ ! _RACIF 65  ]
[; ;main.c: 422: {
"422
{
[; ;main.c: 423: RACIF = 0;
"423
[e = _RACIF -> -> 0 `i `b ]
[; ;main.c: 424: PORTA;
"424
[e _PORTA ]
"426
}
[e :U 65 ]
[; ;main.c: 426: }
[; ;main.c: 429: if(RCCIF)
"429
[e $ ! _RCCIF 66  ]
[; ;main.c: 430: {
"430
{
[; ;main.c: 431: RCCIF = 0;
"431
[e = _RCCIF -> -> 0 `i `b ]
[; ;main.c: 432: PORTC;
"432
[e _PORTC ]
"434
}
[e :U 66 ]
[; ;main.c: 434: }
[; ;main.c: 435: }
"435
[e :UE 61 ]
}
"437
[v _WorkSleep `(v ~T0 @X0 1 ef ]
"438
{
[; ;main.c: 437: void WorkSleep()
[; ;main.c: 438: {
[e :U _WorkSleep ]
[f ]
"441
[v F1074 `uc ~T0 @X0 1 s time ]
[; ;main.c: 441: static unsigned char time;
[; ;main.c: 443: if(B_OnOff)time = 0;
"443
[e $ ! _B_OnOff 68  ]
[e = F1074 -> -> 0 `i `uc ]
[e :U 68 ]
[; ;main.c: 448: time = 0;
"448
[e = F1074 -> -> 0 `i `uc ]
[; ;main.c: 449: INTCON = 0;
"449
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 450: PIE1 = 0;
"450
[e = _PIE1 -> -> 0 `i `uc ]
[; ;main.c: 451: PIE2 = 0;
"451
[e = _PIE2 -> -> 0 `i `uc ]
[; ;main.c: 452: PIR1 = 0;
"452
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 453: PIR2 = 0;
"453
[e = _PIR2 -> -> 0 `i `uc ]
[; ;main.c: 454: T2CON = 0;
"454
[e = _T2CON -> -> 0 `i `uc ]
[; ;main.c: 455: ADCON1 = 0;
"455
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 456: SWDTEN = 0;
"456
[e = _SWDTEN -> -> 0 `i `b ]
[; ;main.c: 457: asm("clrwdt");
"457
[; <" clrwdt ;# ">
[; ;main.c: 459: ADCON0 = 0;
"459
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 462: TRISA = 0x22;
"462
[e = _TRISA -> -> 34 `i `uc ]
[; ;main.c: 463: PORTA = 0;
"463
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 464: TRISB = 0x18;
"464
[e = _TRISB -> -> 24 `i `uc ]
[; ;main.c: 465: TRISC = 0x00;
"465
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 466: PORTC = 0x01;
"466
[e = _PORTC -> -> 1 `i `uc ]
[; ;main.c: 467: PORTB = 0x80;
"467
[e = _PORTB -> -> 128 `i `uc ]
[; ;main.c: 468: RACIF = 0;
"468
[e = _RACIF -> -> 0 `i `b ]
[; ;main.c: 469: IOCA = 0x20;
"469
[e = _IOCA -> -> 32 `i `uc ]
[; ;main.c: 470: RACIE = 1;
"470
[e = _RACIE -> -> 1 `i `b ]
[; ;main.c: 471: PORTA;
"471
[e _PORTA ]
[; ;main.c: 483: SystemEnterSleep();
"483
[e ( _SystemEnterSleep ..  ]
[; ;main.c: 484: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"484
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 485: if(RACIF)
"485
[e $ ! _RACIF 69  ]
[; ;main.c: 486: {
"486
{
[; ;main.c: 487: RACIF = 0;
"487
[e = _RACIF -> -> 0 `i `b ]
[; ;main.c: 488: PORTA;
"488
[e _PORTA ]
"489
}
[e :U 69 ]
[; ;main.c: 489: }
[; ;main.c: 490: if(RCCIF)
"490
[e $ ! _RCCIF 70  ]
[; ;main.c: 491: {
"491
{
[; ;main.c: 492: RCCIF = 0;
"492
[e = _RCCIF -> -> 0 `i `b ]
[; ;main.c: 493: PORTC;
"493
[e _PORTC ]
"494
}
[e :U 70 ]
[; ;main.c: 494: }
[; ;main.c: 496: Refurbish_Sfr();
"496
[e ( _Refurbish_Sfr ..  ]
[; ;main.c: 497: Init_System();
"497
[e ( _Init_System ..  ]
[; ;main.c: 500: }
"500
[e :UE 67 ]
}
"505
[v _TM1650_START `(v ~T0 @X0 1 ef ]
"506
{
[; ;main.c: 505: void TM1650_START()
[; ;main.c: 506: {
[e :U _TM1650_START ]
[f ]
[; ;main.c: 507: RC0=1;
"507
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 508: RB7=1;
"508
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 509: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"509
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 510: RB7=0;
"510
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 511: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"511
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 512: RC0=0;
"512
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 513: }
"513
[e :UE 71 ]
}
"516
[v _TM1650_STOP `(v ~T0 @X0 1 ef ]
"517
{
[; ;main.c: 516: void TM1650_STOP()
[; ;main.c: 517: {
[e :U _TM1650_STOP ]
[f ]
[; ;main.c: 518: RB7=0;
"518
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 519: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"519
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 520: RC0=1;
"520
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 521: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"521
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 522: RB7=1;
"522
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 523: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"523
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 524: RC0=0;
"524
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 525: RB7=0;
"525
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 526: }
"526
[e :UE 72 ]
}
"530
[v _write_8bit `(v ~T0 @X0 1 ef1`uc ]
"531
{
[; ;main.c: 530: void write_8bit( unsigned char dat)
[; ;main.c: 531: {
[e :U _write_8bit ]
"530
[v _dat `uc ~T0 @X0 1 r1 ]
"531
[f ]
"532
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 532: unsigned char i;
[; ;main.c: 533: RC0=0;
"533
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 534: for(i=0;i<8;i++)
"534
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 74  ]
[e $U 75  ]
"535
[e :U 74 ]
[; ;main.c: 535: {
{
[; ;main.c: 536: if(dat&0x80)
"536
[e $ ! != & -> _dat `i -> 128 `i -> 0 `i 77  ]
[; ;main.c: 537: {
"537
{
[; ;main.c: 538: RB7=1;
"538
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 539: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"539
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 540: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"540
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 541: RC0=1;
"541
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 542: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"542
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 543: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"543
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 544: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"544
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 545: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"545
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 546: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"546
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 547: RC0=0;
"547
[e = _RC0 -> -> 0 `i `b ]
"548
}
[; ;main.c: 548: }
[e $U 78  ]
"549
[e :U 77 ]
[; ;main.c: 549: else
[; ;main.c: 550: {
"550
{
[; ;main.c: 551: RB7=0;
"551
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 552: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"552
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 553: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"553
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 554: RC0=1;
"554
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 555: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"555
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 556: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"556
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 557: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"557
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 558: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"558
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 559: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"559
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 560: RC0=0;
"560
[e = _RC0 -> -> 0 `i `b ]
"561
}
[e :U 78 ]
[; ;main.c: 561: }
[; ;main.c: 562: dat<<=1;
"562
[e =<< _dat -> 1 `i ]
"563
}
"534
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 74  ]
[e :U 75 ]
"563
}
[; ;main.c: 563: }
[; ;main.c: 564: RB7=1;
"564
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 565: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"565
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 566: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"566
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 567: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"567
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 568: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"568
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 569: RC0=1;
"569
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 570: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"570
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 571: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"571
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 572: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"572
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 573: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"573
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 574: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"574
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 575: RC0=0;
"575
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 576: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"576
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 577: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"577
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 578: }
"578
[e :UE 73 ]
}
"587
[v _read_8bit `(uc ~T0 @X0 1 ef ]
"588
{
[; ;main.c: 587: unsigned char read_8bit()
[; ;main.c: 588: {
[e :U _read_8bit ]
[f ]
"589
[v _dat `uc ~T0 @X0 1 a ]
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 589: unsigned char dat,i;
[; ;main.c: 590: RB7=1;
"590
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 591: dat=0;
"591
[e = _dat -> -> 0 `i `uc ]
[; ;main.c: 592: for(i=0;i<8;i++)
"592
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 80  ]
[e $U 81  ]
"593
[e :U 80 ]
[; ;main.c: 593: {
{
[; ;main.c: 594: RC0=1;
"594
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 595: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"595
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 596: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"596
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 597: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"597
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 598: dat<<=1;
"598
[e =<< _dat -> 1 `i ]
[; ;main.c: 599: if(RB7)
"599
[e $ ! _RB7 83  ]
[; ;main.c: 600: dat++;
"600
[e ++ _dat -> -> 1 `i `uc ]
[e :U 83 ]
[; ;main.c: 601: RC0=0;
"601
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 602: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"602
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 603: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"603
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 604: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"604
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 605: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"605
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
"606
}
"592
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 80  ]
[e :U 81 ]
"606
}
[; ;main.c: 606: }
[; ;main.c: 607: RB7=0;
"607
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 608: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"608
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 609: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"609
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 610: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"610
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 611: RC0=1;
"611
[e = _RC0 -> -> 1 `i `b ]
[; ;main.c: 612: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"612
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 613: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"613
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 614: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"614
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 615: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"615
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 616: RC0=0;
"616
[e = _RC0 -> -> 0 `i `b ]
[; ;main.c: 617: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"617
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 619: return dat ;
"619
[e ) _dat ]
[e $UE 79  ]
[; ;main.c: 620: }
"620
[e :UE 79 ]
}
"622
[v _TM1650_read `(uc ~T0 @X0 1 ef ]
"623
{
[; ;main.c: 622: unsigned char TM1650_read()
[; ;main.c: 623: {
[e :U _TM1650_read ]
[f ]
"624
[v _key `uc ~T0 @X0 1 a ]
[; ;main.c: 624: unsigned char key;
[; ;main.c: 625: TM1650_START();
"625
[e ( _TM1650_START ..  ]
[; ;main.c: 626: write_8bit(0x48);
"626
[e ( _write_8bit (1 -> -> 72 `i `uc ]
[; ;main.c: 627: key=read_8bit();
"627
[e = _key ( _read_8bit ..  ]
[; ;main.c: 628: TM1650_STOP();
"628
[e ( _TM1650_STOP ..  ]
[; ;main.c: 629: return key;
"629
[e ) _key ]
[e $UE 84  ]
[; ;main.c: 630: }
"630
[e :UE 84 ]
}
"632
[v _tm1650cmd `(v ~T0 @X0 1 ef2`uc`uc ]
"633
{
[; ;main.c: 632: void tm1650cmd(unsigned char digAddr,unsigned char seg_data)
[; ;main.c: 633: {
[e :U _tm1650cmd ]
"632
[v _digAddr `uc ~T0 @X0 1 r1 ]
[v _seg_data `uc ~T0 @X0 1 r2 ]
"633
[f ]
[; ;main.c: 634: TM1650_START();
"634
[e ( _TM1650_START ..  ]
[; ;main.c: 635: write_8bit(digAddr);
"635
[e ( _write_8bit (1 _digAddr ]
[; ;main.c: 636: write_8bit(seg_data);
"636
[e ( _write_8bit (1 _seg_data ]
[; ;main.c: 637: TM1650_STOP();
"637
[e ( _TM1650_STOP ..  ]
[; ;main.c: 638: }
"638
[e :UE 85 ]
}
"641
[v _initTM1650 `(v ~T0 @X0 1 ef ]
"642
{
[; ;main.c: 641: void initTM1650()
[; ;main.c: 642: {
[e :U _initTM1650 ]
[f ]
[; ;main.c: 643: tm1650cmd(0X48,0x11);
"643
[e ( _tm1650cmd (2 , -> -> 72 `i `uc -> -> 17 `i `uc ]
[; ;main.c: 644: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"644
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 645: tm1650cmd(0X68,0xFF);
"645
[e ( _tm1650cmd (2 , -> -> 104 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 646: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"646
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 647: tm1650cmd(0X6A,0xFF);
"647
[e ( _tm1650cmd (2 , -> -> 106 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 648: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"648
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 649: tm1650cmd(0X6C,0xFF);
"649
[e ( _tm1650cmd (2 , -> -> 108 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 650: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"650
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 651: tm1650cmd(0X6E,0xFF);
"651
[e ( _tm1650cmd (2 , -> -> 110 `i `uc -> -> 255 `i `uc ]
[; ;main.c: 654: }
"654
[e :UE 86 ]
}
"656
[v _refreshTM1650 `(v ~T0 @X0 1 ef ]
"657
{
[; ;main.c: 656: void refreshTM1650()
[; ;main.c: 657: {
[e :U _refreshTM1650 ]
[f ]
[; ;main.c: 658: if(showFlag)
"658
[e $ ! != -> _showFlag `i -> -> -> 0 `i `uc `i 88  ]
[; ;main.c: 659: {
"659
{
[; ;main.c: 660: tm1650cmd(0X48,0x21);
"660
[e ( _tm1650cmd (2 , -> -> 72 `i `uc -> -> 33 `i `uc ]
[; ;main.c: 661: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"661
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 662: tm1650cmd(0X68,showLed2);
"662
[e ( _tm1650cmd (2 , -> -> 104 `i `uc _showLed2 ]
[; ;main.c: 663: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"663
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 664: tm1650cmd(0X6A,showShiWei);
"664
[e ( _tm1650cmd (2 , -> -> 106 `i `uc _showShiWei ]
[; ;main.c: 665: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"665
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 666: tm1650cmd(0X6C,showGeWei);
"666
[e ( _tm1650cmd (2 , -> -> 108 `i `uc _showGeWei ]
[; ;main.c: 667: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"667
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 668: tm1650cmd(0X6E,showLed1);
"668
[e ( _tm1650cmd (2 , -> -> 110 `i `uc _showLed1 ]
"669
}
[; ;main.c: 669: }
[e $U 89  ]
"670
[e :U 88 ]
[; ;main.c: 670: else if(sleepTime < 10)
[e $ ! < _sleepTime -> -> 10 `i `ui 90  ]
[; ;main.c: 671: {
"671
{
[; ;main.c: 672: tm1650cmd(0X68,0);
"672
[e ( _tm1650cmd (2 , -> -> 104 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 673: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"673
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 674: tm1650cmd(0X6A,0);
"674
[e ( _tm1650cmd (2 , -> -> 106 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 675: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"675
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 676: tm1650cmd(0X6C,0);
"676
[e ( _tm1650cmd (2 , -> -> 108 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 677: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"677
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 678: tm1650cmd(0X6E,0);
"678
[e ( _tm1650cmd (2 , -> -> 110 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 679: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"679
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 680: tm1650cmd(0X48,0x00);
"680
[e ( _tm1650cmd (2 , -> -> 72 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 681: asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");;
"681
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; <" nop ;# ">
[; ;main.c: 682: showShiWei = 0x00;
"682
[e = _showShiWei -> -> 0 `i `uc ]
[; ;main.c: 683: showGeWei = 0x00;
"683
[e = _showGeWei -> -> 0 `i `uc ]
[; ;main.c: 684: showLed1 = 0x00;
"684
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 685: showLed2 = 0x00;
"685
[e = _showLed2 -> -> 0 `i `uc ]
"686
}
[e :U 90 ]
"687
[e :U 89 ]
[; ;main.c: 686: }
[; ;main.c: 687: }
[e :UE 87 ]
}
"690
[v _setZeroStep `(v ~T0 @X0 1 ef ]
"691
{
[; ;main.c: 690: void setZeroStep()
[; ;main.c: 691: {
[e :U _setZeroStep ]
[f ]
[; ;main.c: 692: if(zeroStep == 0)
"692
[e $ ! == -> _zeroStep `i -> 0 `i 92  ]
[; ;main.c: 693: {
"693
{
[; ;main.c: 694: showLed1 = 0x00;
"694
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 695: showLed2 = 0x00;
"695
[e = _showLed2 -> -> 0 `i `uc ]
"696
}
[; ;main.c: 696: }
[e $U 93  ]
"697
[e :U 92 ]
[; ;main.c: 697: else if(zeroStep == 1)
[e $ ! == -> _zeroStep `i -> 1 `i 94  ]
[; ;main.c: 698: {
"698
{
[; ;main.c: 699: showLed1 = 0xE1;
"699
[e = _showLed1 -> -> 225 `i `uc ]
[; ;main.c: 700: showLed2 = 0x00;
"700
[e = _showLed2 -> -> 0 `i `uc ]
"701
}
[; ;main.c: 701: }
[e $U 95  ]
"702
[e :U 94 ]
[; ;main.c: 702: else if(zeroStep == 2)
[e $ ! == -> _zeroStep `i -> 2 `i 96  ]
[; ;main.c: 703: {
"703
{
[; ;main.c: 704: showLed1 = 0xE3;
"704
[e = _showLed1 -> -> 227 `i `uc ]
[; ;main.c: 705: showLed2 = 0x00;
"705
[e = _showLed2 -> -> 0 `i `uc ]
"706
}
[; ;main.c: 706: }
[e $U 97  ]
"707
[e :U 96 ]
[; ;main.c: 707: else if(zeroStep == 3)
[e $ ! == -> _zeroStep `i -> 3 `i 98  ]
[; ;main.c: 708: {
"708
{
[; ;main.c: 709: showLed1 = 0xE7;
"709
[e = _showLed1 -> -> 231 `i `uc ]
[; ;main.c: 710: showLed2 = 0x00;
"710
[e = _showLed2 -> -> 0 `i `uc ]
"711
}
[; ;main.c: 711: }
[e $U 99  ]
"712
[e :U 98 ]
[; ;main.c: 712: else if(zeroStep == 4)
[e $ ! == -> _zeroStep `i -> 4 `i 100  ]
[; ;main.c: 713: {
"713
{
[; ;main.c: 714: showLed1 = 0xFF;
"714
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 715: showLed2 = 0x00;
"715
[e = _showLed2 -> -> 0 `i `uc ]
"716
}
[; ;main.c: 716: }
[e $U 101  ]
"717
[e :U 100 ]
[; ;main.c: 717: else if(zeroStep == 5)
[e $ ! == -> _zeroStep `i -> 5 `i 102  ]
[; ;main.c: 718: {
"718
{
[; ;main.c: 719: showLed1 = 0xFF;
"719
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 720: showLed2 = 0x01;
"720
[e = _showLed2 -> -> 1 `i `uc ]
"721
}
[; ;main.c: 721: }
[e $U 103  ]
"722
[e :U 102 ]
[; ;main.c: 722: else if(zeroStep == 6)
[e $ ! == -> _zeroStep `i -> 6 `i 104  ]
[; ;main.c: 723: {
"723
{
[; ;main.c: 724: showLed1 = 0xFF;
"724
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 725: showLed2 = 0x03;
"725
[e = _showLed2 -> -> 3 `i `uc ]
"726
}
[; ;main.c: 726: }
[e $U 105  ]
"727
[e :U 104 ]
[; ;main.c: 727: else if(zeroStep == 7)
[e $ ! == -> _zeroStep `i -> 7 `i 106  ]
[; ;main.c: 728: {
"728
{
[; ;main.c: 729: showLed1 = 0xFF;
"729
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 730: showLed2 = 0x07;
"730
[e = _showLed2 -> -> 7 `i `uc ]
"731
}
[; ;main.c: 731: }
[e $U 107  ]
"732
[e :U 106 ]
[; ;main.c: 732: else if(zeroStep == 8)
[e $ ! == -> _zeroStep `i -> 8 `i 108  ]
[; ;main.c: 733: {
"733
{
[; ;main.c: 734: showLed1 = 0xFF;
"734
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 735: showLed2 = 0x0F;
"735
[e = _showLed2 -> -> 15 `i `uc ]
"736
}
[; ;main.c: 736: }
[e $U 109  ]
"737
[e :U 108 ]
[; ;main.c: 737: else if(zeroStep == 9)
[e $ ! == -> _zeroStep `i -> 9 `i 110  ]
[; ;main.c: 738: {
"738
{
[; ;main.c: 739: showLed1 = 0xFF;
"739
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 740: showLed2 = 0x2F;
"740
[e = _showLed2 -> -> 47 `i `uc ]
"741
}
[; ;main.c: 741: }
[e $U 111  ]
"742
[e :U 110 ]
[; ;main.c: 742: else if(zeroStep == 10)
[e $ ! == -> _zeroStep `i -> 10 `i 112  ]
[; ;main.c: 743: {
"743
{
[; ;main.c: 744: showLed1 = 0xFF;
"744
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 745: showLed2 = 0x6F;
"745
[e = _showLed2 -> -> 111 `i `uc ]
"746
}
[; ;main.c: 746: }
[e $U 113  ]
"747
[e :U 112 ]
[; ;main.c: 747: else if(zeroStep == 11)
[e $ ! == -> _zeroStep `i -> 11 `i 114  ]
[; ;main.c: 748: {
"748
{
[; ;main.c: 749: showLed1 = 0xFF;
"749
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 750: showLed2 = 0xEF;
"750
[e = _showLed2 -> -> 239 `i `uc ]
"751
}
[; ;main.c: 751: }
[e $U 115  ]
"752
[e :U 114 ]
[; ;main.c: 752: else if(zeroStep == 12)
[e $ ! == -> _zeroStep `i -> 12 `i 116  ]
[; ;main.c: 753: {
"753
{
[; ;main.c: 754: showLed1 = 0xFF;
"754
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 755: showLed2 = 0xEF;
"755
[e = _showLed2 -> -> 239 `i `uc ]
"756
}
[e :U 116 ]
"757
[e :U 115 ]
[e :U 113 ]
[e :U 111 ]
[e :U 109 ]
[e :U 107 ]
[e :U 105 ]
[e :U 103 ]
[e :U 101 ]
[e :U 99 ]
[e :U 97 ]
[e :U 95 ]
[e :U 93 ]
[; ;main.c: 756: }
[; ;main.c: 757: }
[e :UE 91 ]
}
"760
[v _setZeroStep2 `(v ~T0 @X0 1 ef ]
"761
{
[; ;main.c: 760: void setZeroStep2()
[; ;main.c: 761: {
[e :U _setZeroStep2 ]
[f ]
[; ;main.c: 762: if(zeroStep == 0)
"762
[e $ ! == -> _zeroStep `i -> 0 `i 118  ]
[; ;main.c: 763: {
"763
{
[; ;main.c: 764: showLed1 = 0x00;
"764
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 765: showLed2 = 0x00;
"765
[e = _showLed2 -> -> 0 `i `uc ]
"766
}
[; ;main.c: 766: }
[e $U 119  ]
"767
[e :U 118 ]
[; ;main.c: 767: else if(zeroStep == 1)
[e $ ! == -> _zeroStep `i -> 1 `i 120  ]
[; ;main.c: 768: {
"768
{
[; ;main.c: 769: showLed1 = 0x01;
"769
[e = _showLed1 -> -> 1 `i `uc ]
[; ;main.c: 770: showLed2 = 0x00;
"770
[e = _showLed2 -> -> 0 `i `uc ]
"771
}
[; ;main.c: 771: }
[e $U 121  ]
"772
[e :U 120 ]
[; ;main.c: 772: else if(zeroStep == 2)
[e $ ! == -> _zeroStep `i -> 2 `i 122  ]
[; ;main.c: 773: {
"773
{
[; ;main.c: 774: showLed1 = 0x02;
"774
[e = _showLed1 -> -> 2 `i `uc ]
[; ;main.c: 775: showLed2 = 0x00;
"775
[e = _showLed2 -> -> 0 `i `uc ]
"776
}
[; ;main.c: 776: }
[e $U 123  ]
"777
[e :U 122 ]
[; ;main.c: 777: else if(zeroStep == 3)
[e $ ! == -> _zeroStep `i -> 3 `i 124  ]
[; ;main.c: 778: {
"778
{
[; ;main.c: 779: showLed1 = 0x04;
"779
[e = _showLed1 -> -> 4 `i `uc ]
[; ;main.c: 780: showLed2 = 0x00;
"780
[e = _showLed2 -> -> 0 `i `uc ]
"781
}
[; ;main.c: 781: }
[e $U 125  ]
"782
[e :U 124 ]
[; ;main.c: 782: else if(zeroStep == 4)
[e $ ! == -> _zeroStep `i -> 4 `i 126  ]
[; ;main.c: 783: {
"783
{
[; ;main.c: 784: showLed1 = 0x10;
"784
[e = _showLed1 -> -> 16 `i `uc ]
[; ;main.c: 785: showLed2 = 0x00;
"785
[e = _showLed2 -> -> 0 `i `uc ]
"786
}
[; ;main.c: 786: }
[e $U 127  ]
"787
[e :U 126 ]
[; ;main.c: 787: else if(zeroStep == 5)
[e $ ! == -> _zeroStep `i -> 5 `i 128  ]
[; ;main.c: 788: {
"788
{
[; ;main.c: 789: showLed1 = 0x00;
"789
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 790: showLed2 = 0x01;
"790
[e = _showLed2 -> -> 1 `i `uc ]
"791
}
[; ;main.c: 791: }
[e $U 129  ]
"792
[e :U 128 ]
[; ;main.c: 792: else if(zeroStep == 6)
[e $ ! == -> _zeroStep `i -> 6 `i 130  ]
[; ;main.c: 793: {
"793
{
[; ;main.c: 794: showLed1 = 0x00;
"794
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 795: showLed2 = 0x02;
"795
[e = _showLed2 -> -> 2 `i `uc ]
"796
}
[; ;main.c: 796: }
[e $U 131  ]
"797
[e :U 130 ]
[; ;main.c: 797: else if(zeroStep == 7)
[e $ ! == -> _zeroStep `i -> 7 `i 132  ]
[; ;main.c: 798: {
"798
{
[; ;main.c: 799: showLed1 = 0x00;
"799
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 800: showLed2 = 0x04;
"800
[e = _showLed2 -> -> 4 `i `uc ]
"801
}
[; ;main.c: 801: }
[e $U 133  ]
"802
[e :U 132 ]
[; ;main.c: 802: else if(zeroStep == 8)
[e $ ! == -> _zeroStep `i -> 8 `i 134  ]
[; ;main.c: 803: {
"803
{
[; ;main.c: 804: showLed1 = 0x00;
"804
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 805: showLed2 = 0x08;
"805
[e = _showLed2 -> -> 8 `i `uc ]
"806
}
[; ;main.c: 806: }
[e $U 135  ]
"807
[e :U 134 ]
[; ;main.c: 807: else if(zeroStep == 9)
[e $ ! == -> _zeroStep `i -> 9 `i 136  ]
[; ;main.c: 808: {
"808
{
[; ;main.c: 809: showLed1 = 0x00;
"809
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 810: showLed2 = 0x20;
"810
[e = _showLed2 -> -> 32 `i `uc ]
"811
}
[; ;main.c: 811: }
[e $U 137  ]
"812
[e :U 136 ]
[; ;main.c: 812: else if(zeroStep == 10)
[e $ ! == -> _zeroStep `i -> 10 `i 138  ]
[; ;main.c: 813: {
"813
{
[; ;main.c: 814: showLed1 = 0x00;
"814
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 815: showLed2 = 0x40;
"815
[e = _showLed2 -> -> 64 `i `uc ]
"816
}
[; ;main.c: 816: }
[e $U 139  ]
"817
[e :U 138 ]
[; ;main.c: 817: else if(zeroStep == 11)
[e $ ! == -> _zeroStep `i -> 11 `i 140  ]
[; ;main.c: 818: {
"818
{
[; ;main.c: 819: showLed1 = 0x00;
"819
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 820: showLed2 = 0x80;
"820
[e = _showLed2 -> -> 128 `i `uc ]
"821
}
[; ;main.c: 821: }
[e $U 141  ]
"822
[e :U 140 ]
[; ;main.c: 822: else if(zeroStep == 12)
[e $ ! == -> _zeroStep `i -> 12 `i 142  ]
[; ;main.c: 823: {
"823
{
[; ;main.c: 824: showLed1 = 0x00;
"824
[e = _showLed1 -> -> 0 `i `uc ]
[; ;main.c: 825: showLed2 = 0x10;
"825
[e = _showLed2 -> -> 16 `i `uc ]
"826
}
[e :U 142 ]
"827
[e :U 141 ]
[e :U 139 ]
[e :U 137 ]
[e :U 135 ]
[e :U 133 ]
[e :U 131 ]
[e :U 129 ]
[e :U 127 ]
[e :U 125 ]
[e :U 123 ]
[e :U 121 ]
[e :U 119 ]
[; ;main.c: 826: }
[; ;main.c: 827: }
[e :UE 117 ]
}
"829
[v _showCtr `(v ~T0 @X0 1 ef ]
"830
{
[; ;main.c: 829: void showCtr()
[; ;main.c: 830: {
[e :U _showCtr ]
[f ]
[; ;main.c: 831: if(firstTime > 0)
"831
[e $ ! > _firstTime -> -> 0 `i `ui 144  ]
[; ;main.c: 832: {
"832
{
[; ;main.c: 833: showFlag = 1;
"833
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 834: sleepTime = 0;
"834
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 835: initTM1650();
"835
[e ( _initTM1650 ..  ]
"836
}
[; ;main.c: 836: }
[e $U 145  ]
"837
[e :U 144 ]
[; ;main.c: 837: else if(workStep > 0)
[e $ ! > -> _workStep `i -> 0 `i 146  ]
[; ;main.c: 838: {
"838
{
[; ;main.c: 839: showFlag = 1;
"839
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 840: sleepTime = 0;
"840
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 841: showLed1 = 0xFF;
"841
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 842: showLed2 = 0xFF;
"842
[e = _showLed2 -> -> 255 `i `uc ]
[; ;main.c: 843: showShiWei = numArray[workStep / 10];
"843
[e = _showShiWei *U + &U _numArray * -> -> / -> _workStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 844: showGeWei = numArray[workStep % 10];
"844
[e = _showGeWei *U + &U _numArray * -> -> % -> _workStep `i -> 10 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"845
}
[; ;main.c: 845: }
[e $U 147  ]
"846
[e :U 146 ]
[; ;main.c: 846: else if(ledLightTime > 0)
[e $ ! > _ledLightTime -> -> 0 `i `ui 148  ]
[; ;main.c: 847: {
"847
{
[; ;main.c: 848: showFlag = 1;
"848
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 849: sleepTime = 0;
"849
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 850: if(preBatValue >= 85)
"850
[e $ ! >= -> _preBatValue `i -> 85 `i 149  ]
[; ;main.c: 851: {
"851
{
[; ;main.c: 852: showShiWei = numArray[9];
"852
[e = _showShiWei *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 853: showGeWei = numArray[9];
"853
[e = _showGeWei *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"854
}
[; ;main.c: 854: }
[e $U 150  ]
"855
[e :U 149 ]
[; ;main.c: 855: else if(preBatValue > 60)
[e $ ! > -> _preBatValue `i -> 60 `i 151  ]
[; ;main.c: 856: {
"856
{
[; ;main.c: 857: showShiWei = numArray[8];
"857
[e = _showShiWei *U + &U _numArray * -> -> -> 8 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 858: showGeWei = numArray[0];
"858
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"859
}
[; ;main.c: 859: }
[e $U 152  ]
"860
[e :U 151 ]
[; ;main.c: 860: else if(preBatValue > 40)
[e $ ! > -> _preBatValue `i -> 40 `i 153  ]
[; ;main.c: 861: {
"861
{
[; ;main.c: 862: showShiWei = numArray[6];
"862
[e = _showShiWei *U + &U _numArray * -> -> -> 6 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 863: showGeWei = numArray[0];
"863
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"864
}
[; ;main.c: 864: }
[e $U 154  ]
"865
[e :U 153 ]
[; ;main.c: 865: else if(preBatValue > 20)
[e $ ! > -> _preBatValue `i -> 20 `i 155  ]
[; ;main.c: 866: {
"866
{
[; ;main.c: 867: showShiWei = numArray[4];
"867
[e = _showShiWei *U + &U _numArray * -> -> -> 4 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 868: showGeWei = numArray[0];
"868
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"869
}
[; ;main.c: 869: }
[e $U 156  ]
"870
[e :U 155 ]
[; ;main.c: 870: else if(preBatValue > 0)
[e $ ! > -> _preBatValue `i -> 0 `i 157  ]
[; ;main.c: 871: {
"871
{
[; ;main.c: 872: showShiWei = numArray[2];
"872
[e = _showShiWei *U + &U _numArray * -> -> -> 2 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 873: showGeWei = numArray[0];
"873
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"874
}
[; ;main.c: 874: }
[e $U 158  ]
"875
[e :U 157 ]
[; ;main.c: 875: else
[; ;main.c: 876: {
"876
{
[; ;main.c: 877: showShiWei = numArray[0];
"877
[e = _showShiWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 878: showGeWei = numArray[0];
"878
[e = _showGeWei *U + &U _numArray * -> -> -> 0 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"879
}
[e :U 158 ]
[e :U 156 ]
[e :U 154 ]
[e :U 152 ]
[e :U 150 ]
[; ;main.c: 879: }
[; ;main.c: 880: showLed1 = 0xFF;
"880
[e = _showLed1 -> -> 255 `i `uc ]
[; ;main.c: 881: showLed2 = 0xFF;
"881
[e = _showLed2 -> -> 255 `i `uc ]
"882
}
[; ;main.c: 882: }
[e $U 159  ]
"883
[e :U 148 ]
[; ;main.c: 883: else if(chrgFlag)
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 160  ]
[; ;main.c: 884: {
"884
{
[; ;main.c: 885: showFlag = 1;
"885
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 886: sleepTime = 0;
"886
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 887: if(++chrgBatStepTime > 63)
"887
[e $ ! > -> =+ _chrgBatStepTime -> -> 1 `i `uc `i -> 63 `i 161  ]
[; ;main.c: 888: {
"888
{
[; ;main.c: 889: chrgBatStepTime = 0;
"889
[e = _chrgBatStepTime -> -> 0 `i `uc ]
[; ;main.c: 890: if(preBatValue >= 99)
"890
[e $ ! >= -> _preBatValue `i -> 99 `i 162  ]
[; ;main.c: 891: {
"891
{
[; ;main.c: 892: zeroStep = 0;
"892
[e = _zeroStep -> -> 0 `i `uc ]
[; ;main.c: 893: showShiWei = numArray[9];
"893
[e = _showShiWei *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
[; ;main.c: 894: showGeWei = numArray[9];
"894
[e = _showGeWei *U + &U _numArray * -> -> -> 9 `i `ui `ux -> -> # *U &U _numArray `ui `ux ]
"895
}
[; ;main.c: 895: }
[e $U 163  ]
"896
[e :U 162 ]
[; ;main.c: 896: else
[; ;main.c: 897: {
"897
{
[; ;main.c: 898: if(++zeroStep > 12)
"898
[e $ ! > -> =+ _zeroStep -> -> 1 `i `uc `i -> 12 `i 164  ]
[; ;main.c: 899: {
"899
{
[; ;main.c: 900: zeroStep = 1;
"900
[e = _zeroStep -> -> 1 `i `uc ]
"901
}
[e :U 164 ]
[; ;main.c: 901: }
[; ;main.c: 902: showShiWei = 0x00;
"902
[e = _showShiWei -> -> 0 `i `uc ]
[; ;main.c: 903: showGeWei = 0x00;
"903
[e = _showGeWei -> -> 0 `i `uc ]
"904
}
[e :U 163 ]
"905
}
[e :U 161 ]
[; ;main.c: 904: }
[; ;main.c: 905: }
[; ;main.c: 906: setZeroStep2();
"906
[e ( _setZeroStep2 ..  ]
"908
}
[; ;main.c: 908: }
[e $U 165  ]
"909
[e :U 160 ]
[; ;main.c: 909: else if(zeroStep > 0)
[e $ ! > -> _zeroStep `i -> 0 `i 166  ]
[; ;main.c: 910: {
"910
{
[; ;main.c: 911: showFlag = 1;
"911
[e = _showFlag -> -> 1 `i `uc ]
[; ;main.c: 912: sleepTime = 0;
"912
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 913: showShiWei = showGeWei = 0;
"913
[e = _showShiWei = _showGeWei -> -> 0 `i `uc ]
[; ;main.c: 914: setZeroStep();
"914
[e ( _setZeroStep ..  ]
"915
}
[; ;main.c: 915: }
[e $U 167  ]
"916
[e :U 166 ]
[; ;main.c: 916: else
[; ;main.c: 917: {
"917
{
[; ;main.c: 918: if(sleepTime > 10 && sleepTime % 20 == 0)
"918
[e $ ! && > _sleepTime -> -> 10 `i `ui == % _sleepTime -> -> 20 `i `ui -> -> 0 `i `ui 168  ]
[; ;main.c: 919: {
"919
{
[; ;main.c: 920: showFlag = 0;
"920
[e = _showFlag -> -> 0 `i `uc ]
[; ;main.c: 921: tm1650cmd(0X48,0x04);
"921
[e ( _tm1650cmd (2 , -> -> 72 `i `uc -> -> 4 `i `uc ]
[; ;main.c: 922: PORTC |= 0x01;
"922
[e =| _PORTC -> -> 1 `i `uc ]
[; ;main.c: 923: PORTB |= 0x80;
"923
[e =| _PORTB -> -> 128 `i `uc ]
"924
}
[e :U 168 ]
[; ;main.c: 924: }
[; ;main.c: 925: if(++sleepTime > 200)
"925
[e $ ! > =+ _sleepTime -> -> 1 `i `ui -> -> 200 `i `ui 169  ]
[; ;main.c: 926: {
"926
{
[; ;main.c: 927: sleepTime = 0;
"927
[e = _sleepTime -> -> 0 `i `ui ]
[; ;main.c: 928: WorkSleep();
"928
[e ( _WorkSleep ..  ]
"929
}
[e :U 169 ]
"931
}
[e :U 167 ]
[e :U 165 ]
[e :U 159 ]
[e :U 147 ]
[e :U 145 ]
[; ;main.c: 929: }
[; ;main.c: 931: }
[; ;main.c: 932: }
"932
[e :UE 143 ]
}
"934
[v _workCtr `(v ~T0 @X0 1 ef ]
"935
{
[; ;main.c: 934: void workCtr()
[; ;main.c: 935: {
[e :U _workCtr ]
[f ]
[; ;main.c: 936: if(startTime > 0)
"936
[e $ ! > -> _startTime `i -> 0 `i 171  ]
[; ;main.c: 937: {
"937
{
[; ;main.c: 938: startTime--;
"938
[e -- _startTime -> -> 1 `i `uc ]
"939
}
[e :U 171 ]
[; ;main.c: 939: }
[; ;main.c: 940: if(workStep > 0)
"940
[e $ ! > -> _workStep `i -> 0 `i 172  ]
[; ;main.c: 941: {
"941
{
[; ;main.c: 942: checkTempAD();
"942
[e ( _checkTempAD ..  ]
[; ;main.c: 943: PWMIOS0 = 0x01;
"943
[e = _PWMIOS0 -> -> 1 `i `uc ]
[; ;main.c: 944: PWMTH = 0x00;
"944
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 945: PWMTL = 100;
"945
[e = _PWMTL -> -> 100 `i `uc ]
[; ;main.c: 946: PWMD01H = 0x00;
"946
[e = _PWMD01H -> -> 0 `i `uc ]
[; ;main.c: 947: maxDuty = 40 + workStep;
"947
[e = _maxDuty -> + -> 40 `i -> _workStep `i `uc ]
[; ;main.c: 948: PWMCON1 = 0x00;
"948
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 949: PWMCON2 = 0x00;
"949
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 950: PWMCON0 = 0x41;
"950
[e = _PWMCON0 -> -> 65 `i `uc ]
[; ;main.c: 951: checkOutAD();
"951
[e ( _checkOutAD ..  ]
"952
}
[; ;main.c: 952: }
[e $U 173  ]
"953
[e :U 172 ]
[; ;main.c: 953: else if(chrgFlag && chrgFullFlag == 0 && chrgLockFlag == 0)
[e $ ! && && != -> _chrgFlag `i -> -> -> 0 `i `uc `i == -> _chrgFullFlag `i -> 0 `i == -> _chrgLockFlag `i -> 0 `i 174  ]
[; ;main.c: 954: {
"954
{
[; ;main.c: 955: if(chrgResult < 70 && batResult <= 1555)
"955
[e $ ! && < _chrgResult -> -> 70 `i `ui <= _batResult -> -> 1555 `i `ui 175  ]
[; ;main.c: 956: {
"956
{
[; ;main.c: 957: if(++addTime > 10 && chrgDuty < 35)
"957
[e $ ! && > -> =+ _addTime -> -> 1 `i `uc `i -> 10 `i < -> _chrgDuty `i -> 35 `i 176  ]
[; ;main.c: 958: {
"958
{
[; ;main.c: 959: addTime = 0;
"959
[e = _addTime -> -> 0 `i `uc ]
[; ;main.c: 960: chrgDuty++;
"960
[e ++ _chrgDuty -> -> 1 `i `uc ]
"961
}
[e :U 176 ]
"962
}
[; ;main.c: 961: }
[; ;main.c: 962: }
[e $U 177  ]
"963
[e :U 175 ]
[; ;main.c: 963: else
[; ;main.c: 964: {
"964
{
[; ;main.c: 965: addTime = 0;
"965
[e = _addTime -> -> 0 `i `uc ]
"966
}
[e :U 177 ]
[; ;main.c: 966: }
[; ;main.c: 967: if(chrgResult > 80 || batResult > 1555)
"967
[e $ ! || > _chrgResult -> -> 80 `i `ui > _batResult -> -> 1555 `i `ui 178  ]
[; ;main.c: 968: {
"968
{
[; ;main.c: 969: if(++subTime > 10 && chrgDuty > 10)
"969
[e $ ! && > -> =+ _subTime -> -> 1 `i `uc `i -> 10 `i > -> _chrgDuty `i -> 10 `i 179  ]
[; ;main.c: 970: {
"970
{
[; ;main.c: 971: subTime = 0;
"971
[e = _subTime -> -> 0 `i `uc ]
[; ;main.c: 972: chrgDuty--;
"972
[e -- _chrgDuty -> -> 1 `i `uc ]
"973
}
[e :U 179 ]
"974
}
[; ;main.c: 973: }
[; ;main.c: 974: }
[e $U 180  ]
"975
[e :U 178 ]
[; ;main.c: 975: else
[; ;main.c: 976: {
"976
{
[; ;main.c: 977: subTime = 0;
"977
[e = _subTime -> -> 0 `i `uc ]
"978
}
[e :U 180 ]
[; ;main.c: 978: }
[; ;main.c: 979: PWMIOS1 = 0x20;
"979
[e = _PWMIOS1 -> -> 32 `i `uc ]
[; ;main.c: 980: PWMTH = 0x00;
"980
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 981: PWMTL = 70;
"981
[e = _PWMTL -> -> 70 `i `uc ]
[; ;main.c: 982: PWMD23H = 0x00;
"982
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 983: PWMD3L = chrgDuty;
"983
[e = _PWMD3L _chrgDuty ]
[; ;main.c: 984: PWMCON1 = 0x00;
"984
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 985: PWMCON2 = 0x00;
"985
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 986: PWMCON0 = 0x08;
"986
[e = _PWMCON0 -> -> 8 `i `uc ]
"987
}
[; ;main.c: 987: }
[e $U 181  ]
"988
[e :U 174 ]
[; ;main.c: 988: else
[; ;main.c: 989: {
"989
{
[; ;main.c: 990: PWMCON0 = 0x00;
"990
[e = _PWMCON0 -> -> 0 `i `uc ]
"991
}
[e :U 181 ]
[e :U 173 ]
[; ;main.c: 991: }
[; ;main.c: 992: }
"992
[e :UE 170 ]
}
"994
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"995
{
[; ;main.c: 994: void chrgCtr()
[; ;main.c: 995: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 996: if(0x20 & PORTA)
"996
[e $ ! != & -> 32 `i -> _PORTA `i -> 0 `i 183  ]
[; ;main.c: 997: {
"997
{
[; ;main.c: 998: checkChrgAD();
"998
[e ( _checkChrgAD ..  ]
[; ;main.c: 999: chrgFlag = 1;
"999
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 1000: workStep = 0;
"1000
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 1001: lowBatFlag = 0;
"1001
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 1002: ledLightTime = 0;
"1002
[e = _ledLightTime -> -> 0 `i `ui ]
[; ;main.c: 1003: if(batResult > 1555)
"1003
[e $ ! > _batResult -> -> 1555 `i `ui 184  ]
[; ;main.c: 1004: {
"1004
{
[; ;main.c: 1005: if(++chrgFullTime > 2500)
"1005
[e $ ! > =+ _chrgFullTime -> -> 1 `i `ui -> -> 2500 `i `ui 185  ]
[; ;main.c: 1006: {
"1006
{
[; ;main.c: 1007: chrgFullTime = 0;
"1007
[e = _chrgFullTime -> -> 0 `i `ui ]
[; ;main.c: 1008: chrgFullFlag = 1;
"1008
[e = _chrgFullFlag -> -> 1 `i `uc ]
"1009
}
[e :U 185 ]
"1010
}
[; ;main.c: 1009: }
[; ;main.c: 1010: }
[e $U 186  ]
"1011
[e :U 184 ]
[; ;main.c: 1011: else
[; ;main.c: 1012: {
"1012
{
[; ;main.c: 1013: chrgFullTime = 0;
"1013
[e = _chrgFullTime -> -> 0 `i `ui ]
"1014
}
[e :U 186 ]
"1015
}
[; ;main.c: 1014: }
[; ;main.c: 1015: }
[e $U 187  ]
"1016
[e :U 183 ]
[; ;main.c: 1016: else
[; ;main.c: 1017: {
"1017
{
[; ;main.c: 1018: if(chrgFlag)
"1018
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 188  ]
[; ;main.c: 1019: {
"1019
{
[; ;main.c: 1020: zeroStep = 0;
"1020
[e = _zeroStep -> -> 0 `i `uc ]
"1021
}
[e :U 188 ]
[; ;main.c: 1021: }
[; ;main.c: 1022: chrgFlag = 0;
"1022
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 1023: chrgFullFlag = 0;
"1023
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 1024: chrgFullTime = 0;
"1024
[e = _chrgFullTime -> -> 0 `i `ui ]
[; ;main.c: 1025: chrgDuty = 0;
"1025
[e = _chrgDuty -> -> 0 `i `uc ]
[; ;main.c: 1026: chrgLockFlag = 0;
"1026
[e = _chrgLockFlag -> -> 0 `i `uc ]
"1027
}
[e :U 187 ]
[; ;main.c: 1027: }
[; ;main.c: 1028: }
"1028
[e :UE 182 ]
}
"1030
[v _task1 `(v ~T0 @X0 1 ef ]
"1031
{
[; ;main.c: 1030: void task1()
[; ;main.c: 1031: {
[e :U _task1 ]
[f ]
[; ;main.c: 1032: if(firstTime > 0)
"1032
[e $ ! > _firstTime -> -> 0 `i `ui 190  ]
[; ;main.c: 1033: {
"1033
{
[; ;main.c: 1034: firstTime--;
"1034
[e -- _firstTime -> -> 1 `i `ui ]
[; ;main.c: 1035: if(preBatValue < batValue)
"1035
[e $ ! < -> _preBatValue `i -> _batValue `i 191  ]
[; ;main.c: 1036: {
"1036
{
[; ;main.c: 1037: preBatValue = batValue;
"1037
[e = _preBatValue _batValue ]
"1038
}
[e :U 191 ]
"1039
}
[; ;main.c: 1038: }
[; ;main.c: 1039: }
[e $U 192  ]
"1040
[e :U 190 ]
[; ;main.c: 1040: else
[; ;main.c: 1041: {
"1041
{
[; ;main.c: 1042: refreshTM1650();
"1042
[e ( _refreshTM1650 ..  ]
"1043
}
[e :U 192 ]
[; ;main.c: 1043: }
[; ;main.c: 1044: if(++count1s >= 250)
"1044
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 250 `i 193  ]
[; ;main.c: 1045: {
"1045
{
[; ;main.c: 1046: count1s = 0;
"1046
[e = _count1s -> -> 0 `i `uc ]
[; ;main.c: 1047: if(workStep > 0)
"1047
[e $ ! > -> _workStep `i -> 0 `i 194  ]
[; ;main.c: 1048: {
"1048
{
[; ;main.c: 1049: if(++count900s > 675)
"1049
[e $ ! > =+ _count900s -> -> 1 `i `ui -> -> 675 `i `ui 195  ]
[; ;main.c: 1050: {
"1050
{
[; ;main.c: 1051: count900s = 0;
"1051
[e = _count900s -> -> 0 `i `ui ]
[; ;main.c: 1052: workStep = 0;
"1052
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 1053: zeroStep = 0;
"1053
[e = _zeroStep -> -> 0 `i `uc ]
[; ;main.c: 1054: ledLightTime = 0;
"1054
[e = _ledLightTime -> -> 0 `i `ui ]
"1055
}
[e :U 195 ]
"1056
}
[; ;main.c: 1055: }
[; ;main.c: 1056: }
[e $U 196  ]
"1057
[e :U 194 ]
[; ;main.c: 1057: else
[; ;main.c: 1058: {
"1058
{
[; ;main.c: 1059: count900s = 0;
"1059
[e = _count900s -> -> 0 `i `ui ]
"1060
}
[e :U 196 ]
[; ;main.c: 1060: }
[; ;main.c: 1061: if(ledLightTime > 0)
"1061
[e $ ! > _ledLightTime -> -> 0 `i `ui 197  ]
[; ;main.c: 1062: {
"1062
{
[; ;main.c: 1063: ledLightTime--;
"1063
[e -- _ledLightTime -> -> 1 `i `ui ]
"1064
}
[e :U 197 ]
[; ;main.c: 1064: }
[; ;main.c: 1065: if(chrgFlag)
"1065
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 198  ]
[; ;main.c: 1066: {
"1066
{
[; ;main.c: 1067: if(preBatValue < 99 && preBatValue < batValue)
"1067
[e $ ! && < -> _preBatValue `i -> 99 `i < -> _preBatValue `i -> _batValue `i 199  ]
[; ;main.c: 1068: {
"1068
{
[; ;main.c: 1069: if(++count15s >= 15)
"1069
[e $ ! >= -> =+ _count15s -> -> 1 `i `uc `i -> 15 `i 200  ]
[; ;main.c: 1070: {
"1070
{
[; ;main.c: 1071: count15s = 0;
"1071
[e = _count15s -> -> 0 `i `uc ]
[; ;main.c: 1072: preBatValue++;
"1072
[e ++ _preBatValue -> -> 1 `i `uc ]
"1073
}
[e :U 200 ]
"1074
}
[; ;main.c: 1073: }
[; ;main.c: 1074: }
[e $U 201  ]
"1075
[e :U 199 ]
[; ;main.c: 1075: else
[; ;main.c: 1076: {
"1076
{
[; ;main.c: 1077: count15s = 0;
"1077
[e = _count15s -> -> 0 `i `uc ]
"1078
}
[e :U 201 ]
"1079
}
[; ;main.c: 1078: }
[; ;main.c: 1079: }
[e $U 202  ]
"1080
[e :U 198 ]
[; ;main.c: 1080: else
[; ;main.c: 1081: {
"1081
{
[; ;main.c: 1082: if(preBatValue > 0 && preBatValue > batValue)
"1082
[e $ ! && > -> _preBatValue `i -> 0 `i > -> _preBatValue `i -> _batValue `i 203  ]
[; ;main.c: 1083: {
"1083
{
[; ;main.c: 1084: if(++count15s >= 15)
"1084
[e $ ! >= -> =+ _count15s -> -> 1 `i `uc `i -> 15 `i 204  ]
[; ;main.c: 1085: {
"1085
{
[; ;main.c: 1086: count15s = 0;
"1086
[e = _count15s -> -> 0 `i `uc ]
[; ;main.c: 1087: preBatValue--;
"1087
[e -- _preBatValue -> -> 1 `i `uc ]
"1088
}
[e :U 204 ]
"1089
}
[; ;main.c: 1088: }
[; ;main.c: 1089: }
[e $U 205  ]
"1090
[e :U 203 ]
[; ;main.c: 1090: else
[; ;main.c: 1091: {
"1091
{
[; ;main.c: 1092: count15s = 0;
"1092
[e = _count15s -> -> 0 `i `uc ]
"1093
}
[e :U 205 ]
"1094
}
[e :U 202 ]
"1095
}
[e :U 193 ]
[; ;main.c: 1093: }
[; ;main.c: 1094: }
[; ;main.c: 1095: }
[; ;main.c: 1097: }
"1097
[e :UE 189 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"1103
[v _main `(v ~T0 @X0 1 ef ]
"1104
{
[; ;main.c: 1103: void main()
[; ;main.c: 1104: {
[e :U _main ]
[f ]
[; ;main.c: 1105: Init_System();
"1105
[e ( _Init_System ..  ]
[; ;main.c: 1106: initTM1650();
"1106
[e ( _initTM1650 ..  ]
[; ;main.c: 1107: firstTime = 250;
"1107
[e = _firstTime -> -> 250 `i `ui ]
[; ;main.c: 1108: while(1)
"1108
[e :U 208 ]
[; ;main.c: 1109: {
"1109
{
[; ;main.c: 1110: if(B_MainLoop)
"1110
[e $ ! _B_MainLoop 210  ]
[; ;main.c: 1111: {
"1111
{
[; ;main.c: 1112: B_MainLoop = 0;
"1112
[e = _B_MainLoop -> -> 0 `i `b ]
[; ;main.c: 1113: asm("clrwdt");
"1113
[; <" clrwdt ;# ">
[; ;main.c: 1115: CheckTouchKey();
"1115
[e ( _CheckTouchKey ..  ]
[; ;main.c: 1117: Refurbish_Sfr();
"1117
[e ( _Refurbish_Sfr ..  ]
[; ;main.c: 1118: if(chrgFlag == 0)
"1118
[e $ ! == -> _chrgFlag `i -> 0 `i 211  ]
[; ;main.c: 1119: KeyServer();
"1119
[e ( _KeyServer ..  ]
[e :U 211 ]
[; ;main.c: 1120: showCtr();
"1120
[e ( _showCtr ..  ]
[; ;main.c: 1121: workCtr();
"1121
[e ( _workCtr ..  ]
[; ;main.c: 1122: checkBat();
"1122
[e ( _checkBat ..  ]
[; ;main.c: 1123: chrgCtr();
"1123
[e ( _chrgCtr ..  ]
[; ;main.c: 1124: task1();
"1124
[e ( _task1 ..  ]
"1126
}
[e :U 210 ]
"1127
}
[e :U 207 ]
"1108
[e $U 208  ]
[e :U 209 ]
[; ;main.c: 1126: }
[; ;main.c: 1127: }
[; ;main.c: 1128: }
"1128
[e :UE 206 ]
}
