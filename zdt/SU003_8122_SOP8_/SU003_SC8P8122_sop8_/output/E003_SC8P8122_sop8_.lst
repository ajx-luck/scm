

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jul 08 14:31:20 2025

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P8122AD
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	pa_nodes0,global,class=CODE,delta=2
    41                           	dabs	1,0x7E,2
    42  0000                     
    43                           ; Version 1.45
    44                           ; Generated 16/11/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	strings
    79  0386                     __pstrings:	
    80  0386                     stringtab:	
    81  0386                     __stringtab:	
    82  0386                     stringcode:	
    83                           ;	String table - string pointers are 1 byte each
    84                           
    85  0386                     stringdir:	
    86  0386  3003               	movlw	high stringdir
    87  0387  008A               	movwf	10
    88  0388  0804               	movf	4,w
    89  0389  0A84               	incf	4,f
    90  038A  0782               	addwf	2,f
    91  038B                     __stringbase:	
    92  038B  3400               	retlw	0
    93  038C                     __end_of__stringtab:	
    94  038C                     _Table_KeyFalg:	
    95  038C  3401               	retlw	1
    96  038D  3402               	retlw	2
    97  038E  3404               	retlw	4
    98  038F  3408               	retlw	8
    99  0390  3410               	retlw	16
   100  0391  3420               	retlw	32
   101  0392  3440               	retlw	64
   102  0393  3480               	retlw	128
   103  0394                     __end_of_Table_KeyFalg:	
   104  0394                     _Table_KeyDown:	
   105  0394  340A               	retlw	10
   106  0395                     __end_of_Table_KeyDown:	
   107  0395                     _Table_KeyChannel:	
   108  0395  3444               	retlw	68
   109  0396                     __end_of_Table_KeyChannel:	
   110  001F                     _PWM01DT	set	31
   111  001E                     _PWMD01H	set	30
   112  001D                     _PWMCON2	set	29
   113  001C                     _PWMT4L	set	28
   114  001B                     _PWMD4L	set	27
   115  0019                     _PWMD0L	set	25
   116  0018                     _PWMTH	set	24
   117  0017                     _PWMTL	set	23
   118  0016                     _PWMCON1	set	22
   119  0015                     _PWMCON0	set	21
   120  0014                     _OSCCON	set	20
   121  0013                     _T2CON	set	19
   122  0011                     _PR2	set	17
   123  000E                     _PIE1	set	14
   124  000D                     _PIR1	set	13
   125  000B                     _INTCON	set	11
   126  0006                     _PORTB	set	6
   127  0005                     _TRISB	set	5
   128  0001                     _OPTION_REG	set	1
   129  0069                     _TMR2IF	set	105
   130  0058                     _RBIF	set	88
   131  0059                     _INTF	set	89
   132  0030                     _RB0	set	48
   133  0031                     _RB1	set	49
   134  0032                     _RB2	set	50
   135  0036                     _RB6	set	54
   136  002E                     _TRISB6	set	46
   137  0081                     _TMR0	set	129
   138  0117                     _KEYDATAH	set	279
   139  0116                     _KEYDATAL	set	278
   140  0113                     _KEYCON2	set	275
   141  0112                     _KEYCON1	set	274
   142  0111                     _KEYCON0	set	273
   143  0110                     _PIE2	set	272
   144  010F                     _PIR2	set	271
   145                           
   146                           	psect	cinit
   147  000B                     start_initialization:	
   148                           ; #config settings
   149                           
   150  000B                     __initialization:	
   151  000B  3020               	movlw	low __pbssBANK0
   152                           
   153                           ; Clear objects allocated to BITCOMMON
   154  000C  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   155                           
   156                           ; Clear objects allocated to COMMON
   157  000D  01F9               	clrf	__pbssCOMMON& (0+127)
   158  000E  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   159  000F  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   160                           
   161                           ; Clear objects allocated to BANK0
   162  0010  1383               	bcf	3,7	;select IRP bank0
   163  0011  0084               	movwf	4
   164  0012  3039               	movlw	low (__pbssBANK0+25)
   165  0013  23D6               	fcall	clear_ram0
   166  0014                     end_of_initialization:	
   167                           ;End of C runtime variable initialization code
   168                           
   169  0014                     __end_of__initialization:	
   170  0014  0183               	clrf	3
   171  0015  2AD4               	ljmp	_main	;jump to C main() function
   172                           
   173                           	psect	bitbssCOMMON
   174  03C0                     __pbitbssCOMMON:	
   175  03C0                     _b_ksleep:	
   176  03C0                     	ds	1
   177  03C1                     _b_kerr:	
   178  03C1                     	ds	1
   179  03C2                     _b_kclr:	
   180  03C2                     	ds	1
   181  03C3                     _b_kover1:	
   182  03C3                     	ds	1
   183  03C4                     _b_kover:	
   184  03C4                     	ds	1
   185  03C5                     _B_OnOff:	
   186  03C5                     	ds	1
   187  03C6                     _B_MainLoop:	
   188  03C6                     	ds	1
   189                           
   190                           	psect	bssCOMMON
   191  0079                     __pbssCOMMON:	
   192  0079                     _KeyResSum:	
   193  0079                     	ds	2
   194  007B                     _KeyFlag:	
   195  007B                     	ds	1
   196                           
   197                           	psect	bssBANK0
   198  0020                     __pbssBANK0:	
   199  0020                     CheckValidTime@F419:	
   200  0020                     	ds	2
   201  0022                     _KeyData:	
   202  0022                     	ds	2
   203  0024                     _KeyOldData:	
   204  0024                     	ds	2
   205  0026                     _KeyReference:	
   206  0026                     	ds	2
   207  0028                     _KeyOldValue2:	
   208  0028                     	ds	2
   209  002A                     _KeyOldValue1:	
   210  002A                     	ds	2
   211  002C                     _KeyOldValue0:	
   212  002C                     	ds	2
   213  002E                     TurnKeyFlags@F416:	
   214  002E                     	ds	1
   215  002F                     TurnKeyFlags@F415:	
   216  002F                     	ds	1
   217  0030                     CheckKeyOldValue@F410:	
   218  0030                     	ds	1
   219  0031                     _KeyMaxSub:	
   220  0031                     	ds	1
   221  0032                     _KeyCounter:	
   222  0032                     	ds	1
   223  0033                     WorkSleep@time:	
   224  0033                     	ds	1
   225  0034                     KeyServer@KeyOldFlag:	
   226  0034                     	ds	1
   227  0035                     _closeTime:	
   228  0035                     	ds	1
   229  0036                     _workStep:	
   230  0036                     	ds	1
   231  0037                     _MainTime:	
   232  0037                     	ds	1
   233  0038                     _KeyUpShake:	
   234  0038                     	ds	1
   235                           
   236                           	psect	clrtext
   237  03D6                     clear_ram0:	
   238                           ;	Called with FSR containing the base address, and
   239                           ;	W with the last address+1
   240                           
   241  03D6  0064               	clrwdt	;clear the watchdog before getting into this loop
   242  03D7                     clrloop0:	
   243  03D7  0180               	clrf	0	;clear RAM location pointed to by FSR
   244  03D8  0A84               	incf	4,f	;increment pointer
   245  03D9  0604               	xorwf	4,w	;XOR with final address
   246  03DA  1903               	btfsc	3,2	;have we reached the end yet?
   247  03DB  3400               	retlw	0	;all done for this memory range, return
   248  03DC  0604               	xorwf	4,w	;XOR again to restore value
   249  03DD  2BD7               	goto	clrloop0	;do the next byte
   250                           
   251                           	psect	cstackCOMMON
   252  0070                     __pcstackCOMMON:	
   253  0070                     ?_pwm02Stop:	
   254  0070                     ?_pwm2Init:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ?_pwm0Stop:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_pwm0Init:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ?_pwm2Stop:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_pwm02Init:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ?_SystemEnterSleep:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_CheckTouchKey:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_Init_System:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_Refurbish_Sfr:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     ?_KeyServer:	
   282                           ; 1 bytes @ 0x0
   283                           
   284  0070                     ?_Isr_Timer:	
   285                           ; 1 bytes @ 0x0
   286                           
   287  0070                     ??_Isr_Timer:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_WorkSleep:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_main:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_KeyIsIn:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_KeyClearOne:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_KeyClearIn:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_KeyStopClear:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_ClearResSum:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_KeyHave:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_GetTouchKeyValue:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_CheckOnceResult:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_CheckKeyOldValue:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_TurnKeyFlags:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_CheckValidTime:	
   327                           ; 1 bytes @ 0x0
   328                           
   329                           
   330                           ; 1 bytes @ 0x0
   331  0070                     	ds	2
   332  0072                     ??_pwm02Stop:	
   333  0072                     ??_pwm2Init:	
   334                           ; 1 bytes @ 0x2
   335                           
   336  0072                     ??_pwm0Stop:	
   337                           ; 1 bytes @ 0x2
   338                           
   339  0072                     ??_pwm0Init:	
   340                           ; 1 bytes @ 0x2
   341                           
   342  0072                     ??_pwm2Stop:	
   343                           ; 1 bytes @ 0x2
   344                           
   345  0072                     ??_pwm02Init:	
   346                           ; 1 bytes @ 0x2
   347                           
   348  0072                     ?_JudgeKeyOldData:	
   349                           ; 1 bytes @ 0x2
   350                           
   351  0072                     ?_RKeyOldData:	
   352                           ; 1 bytes @ 0x2
   353                           
   354  0072                     ??_Init_System:	
   355                           ; 1 bytes @ 0x2
   356                           
   357  0072                     ??_Refurbish_Sfr:	
   358                           ; 1 bytes @ 0x2
   359                           
   360  0072                     ??_KeyServer:	
   361                           ; 1 bytes @ 0x2
   362                           
   363  0072                     ??_KeyIsIn:	
   364                           ; 1 bytes @ 0x2
   365                           
   366  0072                     ??_KeyClearOne:	
   367                           ; 1 bytes @ 0x2
   368                           
   369  0072                     ??_ClearResSum:	
   370                           ; 1 bytes @ 0x2
   371                           
   372  0072                     ??_KeyHave:	
   373                           ; 1 bytes @ 0x2
   374                           
   375  0072                     ??_CheckValidTime:	
   376                           ; 1 bytes @ 0x2
   377                           
   378  0072                     KeyIsIn@377:	
   379                           ; 1 bytes @ 0x2
   380                           
   381  0072                     KeyClearOne@381:	
   382                           ; 1 bytes @ 0x2
   383                           
   384  0072                     ClearResSum@388:	
   385                           ; 1 bytes @ 0x2
   386                           
   387  0072                     KeyHave@390:	
   388                           ; 1 bytes @ 0x2
   389                           
   390  0072                     JudgeKeyOldData@428:	
   391                           ; 1 bytes @ 0x2
   392                           
   393  0072                     RKeyOldData@431:	
   394                           ; 2 bytes @ 0x2
   395                           
   396                           
   397                           ; 2 bytes @ 0x2
   398  0072                     	ds	1
   399  0073                     ??_KeyStopClear:	
   400  0073                     ??_GetTouchKeyValue:	
   401                           ; 1 bytes @ 0x3
   402                           
   403  0073                     KeyIsIn@378:	
   404                           ; 1 bytes @ 0x3
   405                           
   406  0073                     KeyStopClear@385:	
   407                           ; 1 bytes @ 0x3
   408                           
   409  0073                     GetTouchKeyValue@395:	
   410                           ; 1 bytes @ 0x3
   411                           
   412                           
   413                           ; 2 bytes @ 0x3
   414  0073                     	ds	1
   415  0074                     ??_JudgeKeyOldData:	
   416  0074                     ??_RKeyOldData:	
   417                           ; 1 bytes @ 0x4
   418                           
   419  0074                     ??_KeyClearIn:	
   420                           ; 1 bytes @ 0x4
   421                           
   422  0074                     ??_CheckOnceResult:	
   423                           ; 1 bytes @ 0x4
   424                           
   425  0074                     KeyClearIn@383:	
   426                           ; 1 bytes @ 0x4
   427                           
   428  0074                     JudgeKeyOldData@427:	
   429                           ; 1 bytes @ 0x4
   430                           
   431                           
   432                           ; 1 bytes @ 0x4
   433  0074                     	ds	1
   434  0075                     ??_TurnKeyFlags:	
   435  0075                     GetTouchKeyValue@394:	
   436                           ; 1 bytes @ 0x5
   437                           
   438  0075                     JudgeKeyOldData@429:	
   439                           ; 1 bytes @ 0x5
   440                           
   441                           
   442                           ; 2 bytes @ 0x5
   443  0075                     	ds	1
   444  0076                     GetTouchKeyValue@393:	
   445  0076                     RKeyOldData@430:	
   446                           ; 1 bytes @ 0x6
   447                           
   448                           
   449                           ; 1 bytes @ 0x6
   450  0076                     	ds	1
   451  0077                     ??_WorkSleep:	
   452  0077                     ??_CheckKeyOldValue:	
   453                           ; 1 bytes @ 0x7
   454                           
   455                           
   456                           ; 1 bytes @ 0x7
   457  0077                     	ds	1
   458  0078                     ??_CheckTouchKey:	
   459  0078                     ??_main:	
   460                           ; 1 bytes @ 0x8
   461                           
   462                           
   463                           	psect	cstackBANK0
   464  0039                     __pcstackBANK0:	
   465                           ; 1 bytes @ 0x8
   466                           
   467  0039                     ??_SystemEnterSleep:	
   468  0039                     CheckOnceResult@406:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0039                     CheckKeyOldValue@412:	
   472                           ; 2 bytes @ 0x0
   473                           
   474                           
   475                           ; 2 bytes @ 0x0
   476  0039                     	ds	2
   477  003B                     CheckOnceResult@403:	
   478  003B                     CheckKeyOldValue@411:	
   479                           ; 1 bytes @ 0x2
   480                           
   481  003B                     SystemEnterSleep@424:	
   482                           ; 1 bytes @ 0x2
   483                           
   484                           
   485                           ; 2 bytes @ 0x2
   486  003B                     	ds	1
   487  003C                     CheckOnceResult@405:	
   488                           
   489                           ; 2 bytes @ 0x3
   490  003C                     	ds	1
   491  003D                     SystemEnterSleep@426:	
   492                           
   493                           ; 2 bytes @ 0x4
   494  003D                     	ds	1
   495  003E                     CheckOnceResult@402:	
   496                           
   497                           ; 1 bytes @ 0x5
   498  003E                     	ds	1
   499  003F                     CheckOnceResult@404:	
   500  003F                     SystemEnterSleep@425:	
   501                           ; 2 bytes @ 0x6
   502                           
   503                           
   504                           ; 2 bytes @ 0x6
   505  003F                     	ds	2
   506  0041                     CheckOnceResult@401:	
   507  0041                     SystemEnterSleep@423:	
   508                           ; 1 bytes @ 0x8
   509                           
   510                           
   511                           ; 1 bytes @ 0x8
   512  0041                     	ds	1
   513                           
   514                           	psect	maintext
   515  02D4                     __pmaintext:	
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 262 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      void 
   528 ;; Registers used:
   529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : B00/0
   532 ;;		On exit  : 300/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1
   535 ;;      Params:         0       0       0
   536 ;;      Locals:         0       0       0
   537 ;;      Temps:          0       0       0
   538 ;;      Totals:         0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels required when called:    6
   541 ;; This function calls:
   542 ;;		_CheckTouchKey
   543 ;;		_Init_System
   544 ;;		_KeyServer
   545 ;;		_Refurbish_Sfr
   546 ;;		_WorkSleep
   547 ;;		_pwm02Stop
   548 ;; This function is called by:
   549 ;;		Startup code after reset
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           
   554                           ;psect for function _main
   555  02D4                     _main:	
   556                           
   557                           ;main.c: 264: Init_System();
   558                           
   559                           ;incstack = 0
   560                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   561  02D4  234E               	fcall	_Init_System
   562  02D5                     l2896:	
   563                           
   564                           ;main.c: 266: {
   565                           ;main.c: 267: if(B_MainLoop)
   566  02D5  1F78               	btfss	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
   567  02D6  2AD5               	goto	l2896
   568                           
   569                           ;main.c: 268: {
   570                           ;main.c: 269: B_MainLoop = 0;
   571  02D7  1378               	bcf	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
   572  02D8  0064               	clrwdt	;# 
   573                           
   574                           ;main.c: 272: CheckTouchKey();
   575  02D9  2262               	fcall	_CheckTouchKey
   576                           
   577                           ;main.c: 274: Refurbish_Sfr();
   578  02DA  2396               	fcall	_Refurbish_Sfr
   579                           
   580                           ;main.c: 275: KeyServer();
   581  02DB  2208               	fcall	_KeyServer
   582                           
   583                           ;main.c: 277: if(workStep == 0)
   584  02DC  0836               	movf	_workStep,w
   585  02DD  1D03               	btfss	3,2
   586  02DE  2AE3               	goto	l497
   587                           
   588                           ;main.c: 278: {
   589                           ;main.c: 279: RB1 = 0;
   590  02DF  1086               	bcf	6,1	;volatile
   591                           
   592                           ;main.c: 280: pwm02Stop();
   593  02E0  23EC               	fcall	_pwm02Stop
   594                           
   595                           ;main.c: 281: WorkSleep();
   596  02E1  22F0               	fcall	_WorkSleep
   597                           
   598                           ;main.c: 282: }
   599  02E2  2AD5               	goto	l2896
   600  02E3                     l497:	
   601                           
   602                           ;main.c: 283: else
   603                           ;main.c: 284: {
   604                           ;main.c: 285: RB1 = 1;
   605  02E3  1486               	bsf	6,1	;volatile
   606                           
   607                           ;main.c: 286: if(PORTB & 0x08)
   608  02E4  1D86               	btfss	6,3	;volatile
   609  02E5  2AE8               	goto	l2916
   610                           
   611                           ;main.c: 287: {
   612                           ;main.c: 288: closeTime = 0;
   613  02E6  01B5               	clrf	_closeTime
   614                           
   615                           ;main.c: 289: }
   616  02E7  2AD5               	goto	l2896
   617  02E8                     l2916:	
   618                           
   619                           ;main.c: 290: else
   620                           ;main.c: 291: {
   621                           ;main.c: 292: if(++closeTime > 50)
   622  02E8  3033               	movlw	51
   623  02E9  0AB5               	incf	_closeTime,f
   624  02EA  0235               	subwf	_closeTime,w
   625  02EB  1C03               	skipc
   626  02EC  2AD5               	goto	l2896
   627                           
   628                           ;main.c: 293: {
   629                           ;main.c: 294: closeTime = 0;
   630  02ED  01B5               	clrf	_closeTime
   631                           
   632                           ;main.c: 295: workStep = 0;
   633  02EE  01B6               	clrf	_workStep
   634  02EF  2AD5               	goto	l2896
   635  02F0                     __end_of_main:	
   636                           
   637                           	psect	text1
   638  02F0                     __ptext1:	
   639 ;; *************** function _WorkSleep *****************
   640 ;; Defined at:
   641 ;;		line 214 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 300/0
   652 ;;		On exit  : 300/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1
   655 ;;      Params:         0       0       0
   656 ;;      Locals:         0       0       0
   657 ;;      Temps:          0       0       0
   658 ;;      Totals:         0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    4
   662 ;; This function calls:
   663 ;;		_Refurbish_Sfr
   664 ;;		_SystemEnterSleep
   665 ;; This function is called by:
   666 ;;		_main
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _WorkSleep
   672  02F0                     _WorkSleep:	
   673                           
   674                           ;main.c: 217: static unsigned char time;
   675                           ;main.c: 219: if(B_OnOff)time = 0;
   676                           
   677                           ;incstack = 0
   678                           ; Regs used in _WorkSleep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   679  02F0  1AF8               	btfsc	_B_OnOff/(0+8),_B_OnOff& (0+7)	;volatile
   680  02F1  01B3               	clrf	WorkSleep@time
   681                           
   682                           ;main.c: 221: if(++time >= 125)
   683  02F2  307D               	movlw	125
   684  02F3  0AB3               	incf	WorkSleep@time,f
   685  02F4  0233               	subwf	WorkSleep@time,w
   686  02F5  1C03               	skipc
   687  02F6  0008               	return
   688                           
   689                           ;main.c: 222: {
   690                           ;main.c: 223: time = 0;
   691  02F7  01B3               	clrf	WorkSleep@time
   692                           
   693                           ;main.c: 224: INTCON = 0;
   694  02F8  018B               	clrf	11	;volatile
   695                           
   696                           ;main.c: 225: PIE1 = 0;
   697  02F9  018E               	clrf	14	;volatile
   698                           
   699                           ;main.c: 226: PIE2 = 0;
   700  02FA  1703               	bsf	3,6	;RP1=1, select bank2
   701  02FB  0190               	clrf	16	;volatile
   702                           
   703                           ;main.c: 227: PIR1 = 0;
   704  02FC  1303               	bcf	3,6	;RP1=0, select bank0
   705  02FD  018D               	clrf	13	;volatile
   706                           
   707                           ;main.c: 228: PIR2 = 0;
   708  02FE  1703               	bsf	3,6	;RP1=1, select bank2
   709  02FF  018F               	clrf	15	;volatile
   710                           
   711                           ;main.c: 229: T2CON = 0;
   712  0300  1303               	bcf	3,6	;RP1=0, select bank0
   713  0301  0193               	clrf	19	;volatile
   714                           
   715                           ;main.c: 233: TRISB = 0x08;
   716  0302  3008               	movlw	8
   717  0303  0085               	movwf	5	;volatile
   718                           
   719                           ;main.c: 234: PORTB = 0;
   720  0304  0186               	clrf	6	;volatile
   721                           
   722                           ;main.c: 247: SystemEnterSleep();
   723  0305  20FD               	fcall	_SystemEnterSleep
   724                           
   725                           ;main.c: 248: if(RBIF)
   726  0306  1C0B               	btfss	11,0	;volatile
   727  0307  2B0A               	goto	l2856
   728                           
   729                           ;main.c: 249: {
   730                           ;main.c: 250: RBIF = 0;
   731  0308  100B               	bcf	11,0	;volatile
   732                           
   733                           ;main.c: 251: PORTB;
   734  0309  0806               	movf	6,w	;volatile
   735  030A                     l2856:	
   736                           
   737                           ;main.c: 252: }
   738                           ;main.c: 254: Refurbish_Sfr();
   739  030A  2B96               	ljmp	l2142
   740  030B                     __end_of_WorkSleep:	
   741                           
   742                           	psect	text2
   743  00FD                     __ptext2:	
   744 ;; *************** function _SystemEnterSleep *****************
   745 ;; Defined at:
   746 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;  425             2    6[BANK0 ] unsigned int 
   751 ;;  426             2    4[BANK0 ] unsigned int 
   752 ;;  424             2    2[BANK0 ] unsigned int 
   753 ;;  423             1    8[BANK0 ] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 300/0
   760 ;;		On exit  : 300/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1
   763 ;;      Params:         0       0       0
   764 ;;      Locals:         0       7       0
   765 ;;      Temps:          0       2       0
   766 ;;      Totals:         0       9       0
   767 ;;Total ram usage:        9 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    3
   770 ;; This function calls:
   771 ;;		_ClearResSum
   772 ;;		_GetTouchKeyValue
   773 ;;		_JudgeKeyOldData
   774 ;;		_RKeyOldData
   775 ;; This function is called by:
   776 ;;		_WorkSleep
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _SystemEnterSleep
   782  00FD                     _SystemEnterSleep:	
   783  00FD                     l1049:	
   784                           ;incstack = 0
   785                           ; Regs used in _SystemEnterSleep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   786                           
   787  00FD  0064               	clrwdt	;# 
   788  00FE  1683               	bsf	3,5	;RP0=1, select bank1
   789  00FF  1303               	bcf	3,6	;RP1=0, select bank1
   790  0100  0181               	clrf	1	;volatile
   791  0101  3007               	movlw	7
   792  0102  1283               	bcf	3,5	;RP0=0, select bank0
   793  0103  0481               	iorwf	1,f	;volatile
   794  0104  1581               	bsf	1,3	;volatile
   795  0105  0064               	clrwdt	;# 
   796  0106  300B               	movlw	11
   797  0107  1283               	bcf	3,5	;RP0=0, select bank0
   798  0108  1303               	bcf	3,6	;RP1=0, select bank0
   799  0109  0081               	movwf	1	;volatile
   800  010A  0064               	clrwdt	;# 
   801  010B  1283               	bcf	3,5	;RP0=0, select bank2
   802  010C  1703               	bsf	3,6	;RP1=1, select bank2
   803  010D  0191               	clrf	17	;volatile
   804  010E  0193               	clrf	19	;volatile
   805  010F  1303               	bcf	3,6	;RP1=0, select bank0
   806  0110  1305               	bcf	5,6	;volatile
   807  0111  1306               	bcf	6,6	;volatile
   808  0112  3072               	movlw	114
   809  0113  0094               	movwf	20	;volatile
   810  0114  0063               	sleep	;# 
   811  0115  0000               	nop	;# 
   812  0116  0064               	clrwdt	;# 
   813  0117  1283               	bcf	3,5	;RP0=0, select bank0
   814  0118  1303               	bcf	3,6	;RP1=0, select bank0
   815  0119  0094               	movwf	20	;volatile
   816  011A  3079               	movlw	121
   817  011B  1703               	bsf	3,6	;RP1=1, select bank2
   818  011C  0093               	movwf	19	;volatile
   819  011D  23DE               	fcall	_ClearResSum
   820  011E  1478               	bsf	_b_ksleep/(0+8),_b_ksleep& (0+7)	;volatile
   821  011F  2172               	fcall	_GetTouchKeyValue
   822  0120  1283               	bcf	3,5	;RP0=0, select bank0
   823  0121  1303               	bcf	3,6	;RP1=0, select bank0
   824  0122  01C1               	clrf	SystemEnterSleep@423
   825  0123  01BB               	clrf	SystemEnterSleep@424
   826  0124  0ABB               	incf	SystemEnterSleep@424,f
   827  0125  01BC               	clrf	SystemEnterSleep@424+1
   828  0126  180B               	btfsc	11,0	;volatile
   829  0127  292A               	goto	l2680
   830  0128  1C8B               	btfss	11,1	;volatile
   831  0129  2931               	goto	l1055
   832  012A                     l2680:	
   833  012A  23DE               	fcall	_ClearResSum
   834  012B  1283               	bcf	3,5	;RP0=0, select bank0
   835  012C  1303               	bcf	3,6	;RP1=0, select bank0
   836  012D  01B2               	clrf	_KeyCounter
   837  012E  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
   838  012F  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
   839  0130  0008               	return
   840  0131                     l1055:	
   841  0131  1C3B               	btfss	SystemEnterSleep@424,0
   842  0132  296A               	goto	l2712
   843  0133  1003               	clrc
   844  0134  0D41               	rlf	SystemEnterSleep@423,w
   845  0135  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
   846  0136  0084               	movwf	4
   847  0137  0800               	movf	0,w
   848  0138  00BF               	movwf	SystemEnterSleep@425
   849  0139  0A84               	incf	4,f
   850  013A  0800               	movf	0,w
   851  013B  00C0               	movwf	SystemEnterSleep@425+1
   852  013C  00BE               	movwf	SystemEnterSleep@426+1
   853  013D  083F               	movf	SystemEnterSleep@425,w
   854  013E  00BD               	movwf	SystemEnterSleep@426
   855  013F  083F               	movf	SystemEnterSleep@425,w
   856  0140  0440               	iorwf	SystemEnterSleep@425+1,w
   857  0141  1903               	btfsc	3,2
   858  0142  296A               	goto	l2712
   859  0143  0841               	movf	SystemEnterSleep@423,w
   860  0144  3E09               	addlw	low ((_Table_KeyDown-__stringbase)| (0+32768))
   861  0145  0084               	movwf	4
   862  0146  2386               	fcall	stringdir
   863  0147  07BD               	addwf	SystemEnterSleep@426,f
   864  0148  1803               	skipnc
   865  0149  0ABE               	incf	SystemEnterSleep@426+1,f
   866  014A  1003               	clrc
   867  014B  0D41               	rlf	SystemEnterSleep@423,w
   868  014C  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
   869  014D  0084               	movwf	4
   870  014E  1383               	bcf	3,7	;select IRP bank0
   871  014F  0800               	movf	0,w
   872  0150  00B9               	movwf	??_SystemEnterSleep
   873  0151  0A84               	incf	4,f
   874  0152  0800               	movf	0,w
   875  0153  00BA               	movwf	??_SystemEnterSleep+1
   876  0154  083E               	movf	SystemEnterSleep@426+1,w
   877  0155  023A               	subwf	??_SystemEnterSleep+1,w
   878  0156  1D03               	skipz
   879  0157  295A               	goto	u1455
   880  0158  083D               	movf	SystemEnterSleep@426,w
   881  0159  0239               	subwf	??_SystemEnterSleep,w
   882  015A                     u1455:	
   883  015A  1803               	btfsc	3,0
   884  015B  292A               	goto	l2680
   885  015C  0840               	movf	SystemEnterSleep@425+1,w
   886  015D  00F3               	movwf	JudgeKeyOldData@428+1
   887  015E  083F               	movf	SystemEnterSleep@425,w
   888  015F  00F2               	movwf	JudgeKeyOldData@428
   889  0160  0841               	movf	SystemEnterSleep@423,w
   890  0161  21BE               	fcall	_JudgeKeyOldData
   891  0162  1283               	bcf	3,5	;RP0=0, select bank0
   892  0163  1303               	bcf	3,6	;RP1=0, select bank0
   893  0164  0840               	movf	SystemEnterSleep@425+1,w
   894  0165  00F3               	movwf	RKeyOldData@431+1
   895  0166  083F               	movf	SystemEnterSleep@425,w
   896  0167  00F2               	movwf	RKeyOldData@431
   897  0168  0841               	movf	SystemEnterSleep@423,w
   898  0169  22AF               	fcall	_RKeyOldData
   899  016A                     l2712:	
   900  016A  1283               	bcf	3,5	;RP0=0, select bank0
   901  016B  1303               	bcf	3,6	;RP1=0, select bank0
   902  016C  1003               	clrc
   903  016D  0DBB               	rlf	SystemEnterSleep@424,f
   904  016E  0DBC               	rlf	SystemEnterSleep@424+1,f
   905  016F  0FC1               	incfsz	SystemEnterSleep@423,f
   906  0170  28FD               	goto	l1049
   907  0171  2931               	goto	l1055
   908  0172                     __end_of_SystemEnterSleep:	
   909                           
   910                           	psect	text3
   911  0396                     __ptext3:	
   912 ;; *************** function _Refurbish_Sfr *****************
   913 ;; Defined at:
   914 ;;		line 51 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 300/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1
   928 ;;      Params:         0       0       0
   929 ;;      Locals:         0       0       0
   930 ;;      Temps:          0       0       0
   931 ;;      Totals:         0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_WorkSleep
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _Refurbish_Sfr
   945  0396                     _Refurbish_Sfr:	
   946  0396                     l2142:	
   947                           ;incstack = 0
   948                           ; Regs used in _Refurbish_Sfr: [wreg+status,2+status,0]
   949                           
   950                           
   951                           ;main.c: 54: PIE1 = 2;
   952  0396  3002               	movlw	2
   953  0397  1283               	bcf	3,5	;RP0=0, select bank0
   954  0398  1303               	bcf	3,6	;RP1=0, select bank0
   955  0399  008E               	movwf	14	;volatile
   956                           
   957                           ;main.c: 55: PR2 = 250;
   958  039A  30FA               	movlw	250
   959  039B  0091               	movwf	17	;volatile
   960                           
   961                           ;main.c: 56: INTCON = 0XC0;
   962  039C  30C0               	movlw	192
   963  039D  008B               	movwf	11	;volatile
   964                           
   965                           ;main.c: 57: if (4 != T2CON)
   966  039E  3004               	movlw	4
   967  039F  0613               	xorwf	19,w	;volatile
   968  03A0  1903               	btfsc	3,2
   969  03A1  0008               	return
   970                           
   971                           ;main.c: 58: T2CON = 4;
   972  03A2  3004               	movlw	4
   973  03A3  0093               	movwf	19	;volatile
   974  03A4  0008               	return
   975  03A5                     __end_of_Refurbish_Sfr:	
   976                           
   977                           	psect	text4
   978  0208                     __ptext4:	
   979 ;; *************** function _KeyServer *****************
   980 ;; Defined at:
   981 ;;		line 65 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 300/0
   992 ;;		On exit  : 300/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1
   995 ;;      Params:         0       0       0
   996 ;;      Locals:         0       0       0
   997 ;;      Temps:          0       0       0
   998 ;;      Totals:         0       0       0
   999 ;;Total ram usage:        0 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    2
  1002 ;; This function calls:
  1003 ;;		_pwm02Init
  1004 ;;		_pwm02Stop
  1005 ;;		_pwm0Init
  1006 ;;		_pwm0Stop
  1007 ;;		_pwm2Init
  1008 ;;		_pwm2Stop
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           
  1015                           ;psect for function _KeyServer
  1016  0208                     _KeyServer:	
  1017                           
  1018                           ;main.c: 67: static unsigned char KeyOldFlag = 0;
  1019                           ;main.c: 68: if (KeyFlag[0])
  1020                           
  1021                           ;incstack = 0
  1022                           ; Regs used in _KeyServer: [wreg+status,2+status,0+pclath+cstack]
  1023  0208  087B               	movf	_KeyFlag,w	;volatile
  1024  0209  1903               	btfsc	3,2
  1025  020A  2A34               	goto	l2484
  1026                           
  1027                           ;main.c: 69: {
  1028                           ;main.c: 70: if (KeyFlag[0] != KeyOldFlag)
  1029  020B  087B               	movf	_KeyFlag,w	;volatile
  1030  020C  0634               	xorwf	KeyServer@KeyOldFlag,w
  1031  020D  1903               	skipnz
  1032  020E  0008               	return
  1033                           
  1034                           ;main.c: 71: {
  1035                           ;main.c: 73: KeyOldFlag ^= KeyFlag[0];
  1036  020F  087B               	movf	_KeyFlag,w	;volatile
  1037  0210  06B4               	xorwf	KeyServer@KeyOldFlag,f
  1038                           
  1039                           ;main.c: 74: if ((KeyOldFlag & 0x1) && (KeyFlag[0] & 0x1))
  1040  0211  1834               	btfsc	KeyServer@KeyOldFlag,0
  1041  0212  1C7B               	btfss	_KeyFlag,0	;volatile
  1042  0213  2A31               	goto	l2482
  1043                           
  1044                           ;main.c: 75: {
  1045                           ;main.c: 77: if(++workStep > 3)
  1046  0214  3004               	movlw	4
  1047  0215  0AB6               	incf	_workStep,f
  1048  0216  0236               	subwf	_workStep,w
  1049  0217  1803               	btfsc	3,0
  1050                           
  1051                           ;main.c: 78: {
  1052                           ;main.c: 79: workStep = 0;
  1053  0218  01B6               	clrf	_workStep
  1054                           
  1055                           ;main.c: 80: }
  1056                           ;main.c: 81: if(workStep == 0)
  1057  0219  0836               	movf	_workStep,w
  1058  021A  1D03               	btfss	3,2
  1059  021B  2A1E               	goto	l2464
  1060                           
  1061                           ;main.c: 82: {
  1062                           ;main.c: 83: pwm02Stop();
  1063  021C  23EC               	fcall	_pwm02Stop
  1064                           
  1065                           ;main.c: 84: }
  1066  021D  2A2F               	goto	l2480
  1067  021E                     l2464:	
  1068                           
  1069                           ;main.c: 85: else if(workStep == 1)
  1070  021E  0B36               	decfsz	_workStep,w
  1071  021F  2A23               	goto	l2470
  1072                           
  1073                           ;main.c: 86: {
  1074                           ;main.c: 87: pwm2Init();
  1075  0220  23C0               	fcall	_pwm2Init
  1076                           
  1077                           ;main.c: 88: pwm0Stop();
  1078  0221  23F4               	fcall	_pwm0Stop
  1079                           
  1080                           ;main.c: 89: }
  1081  0222  2A2F               	goto	l2480
  1082  0223                     l2470:	
  1083                           
  1084                           ;main.c: 90: else if(workStep == 2)
  1085  0223  3002               	movlw	2
  1086  0224  0636               	xorwf	_workStep,w
  1087  0225  1D03               	btfss	3,2
  1088  0226  2A2A               	goto	l2476
  1089                           
  1090                           ;main.c: 91: {
  1091                           ;main.c: 92: pwm0Init();
  1092  0227  23A5               	fcall	_pwm0Init
  1093                           
  1094                           ;main.c: 93: pwm2Stop();
  1095  0228  23F1               	fcall	_pwm2Stop
  1096                           
  1097                           ;main.c: 94: }
  1098  0229  2A2F               	goto	l2480
  1099  022A                     l2476:	
  1100                           
  1101                           ;main.c: 95: else if(workStep == 3)
  1102  022A  3003               	movlw	3
  1103  022B  0636               	xorwf	_workStep,w
  1104  022C  1D03               	btfss	3,2
  1105  022D  2A2F               	goto	l2480
  1106                           
  1107                           ;main.c: 96: {
  1108                           ;main.c: 97: pwm02Init();
  1109  022E  2362               	fcall	_pwm02Init
  1110  022F                     l2480:	
  1111                           
  1112                           ;main.c: 98: }
  1113                           ;main.c: 99: B_OnOff = !B_OnOff;
  1114  022F  3020               	movlw	(0+1) shl (_B_OnOff& (0+7))
  1115  0230  06F8               	xorwf	_B_OnOff/(0+8),f
  1116  0231                     l2482:	
  1117                           
  1118                           ;main.c: 100: }
  1119                           ;main.c: 102: KeyOldFlag = KeyFlag[0];
  1120  0231  087B               	movf	_KeyFlag,w	;volatile
  1121  0232  00B4               	movwf	KeyServer@KeyOldFlag
  1122  0233  0008               	return
  1123  0234                     l2484:	
  1124                           
  1125                           ;main.c: 105: else
  1126                           ;main.c: 106: {
  1127                           ;main.c: 107: KeyOldFlag = 0;
  1128  0234  01B4               	clrf	KeyServer@KeyOldFlag
  1129  0235  0008               	return
  1130  0236                     __end_of_KeyServer:	
  1131                           
  1132                           	psect	text5
  1133  03F1                     __ptext5:	
  1134 ;; *************** function _pwm2Stop *****************
  1135 ;; Defined at:
  1136 ;;		line 129 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		None
  1145 ;; Tracked objects:
  1146 ;;		On entry : 300/0
  1147 ;;		On exit  : 300/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1
  1150 ;;      Params:         0       0       0
  1151 ;;      Locals:         0       0       0
  1152 ;;      Temps:          0       0       0
  1153 ;;      Totals:         0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_KeyServer
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _pwm2Stop
  1166  03F1                     _pwm2Stop:	
  1167                           
  1168                           ;main.c: 131: PWMCON0 &= 0XEF;
  1169                           
  1170                           ;incstack = 0
  1171                           ; Regs used in _pwm2Stop: []
  1172  03F1  1215               	bcf	21,4	;volatile
  1173                           
  1174                           ;main.c: 132: RB2 = 0;
  1175  03F2  1106               	bcf	6,2	;volatile
  1176  03F3  0008               	return
  1177  03F4                     __end_of_pwm2Stop:	
  1178                           
  1179                           	psect	text6
  1180  03C0                     __ptext6:	
  1181 ;; *************** function _pwm2Init *****************
  1182 ;; Defined at:
  1183 ;;		line 111 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2
  1192 ;; Tracked objects:
  1193 ;;		On entry : 300/0
  1194 ;;		On exit  : 300/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1
  1197 ;;      Params:         0       0       0
  1198 ;;      Locals:         0       0       0
  1199 ;;      Temps:          0       0       0
  1200 ;;      Totals:         0       0       0
  1201 ;;Total ram usage:        0 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    1
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_KeyServer
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function _pwm2Init
  1213  03C0                     _pwm2Init:	
  1214                           
  1215                           ;main.c: 114: TRISB |= 0x04;
  1216                           
  1217                           ;incstack = 0
  1218                           ; Regs used in _pwm2Init: [wreg+status,2]
  1219  03C0  1505               	bsf	5,2	;volatile
  1220                           
  1221                           ;main.c: 115: PWMCON1 = 0B00000000;
  1222  03C1  0196               	clrf	22	;volatile
  1223                           
  1224                           ;main.c: 116: PWMTH = 0X00;
  1225  03C2  0198               	clrf	24	;volatile
  1226                           
  1227                           ;main.c: 117: PWMT4L = 100;
  1228  03C3  3064               	movlw	100
  1229  03C4  009C               	movwf	28	;volatile
  1230                           
  1231                           ;main.c: 120: PWMD4L = 80;
  1232  03C5  3050               	movlw	80
  1233  03C6  009B               	movwf	27	;volatile
  1234                           
  1235                           ;main.c: 123: PWMCON0 = 0X70;
  1236  03C7  3070               	movlw	112
  1237  03C8  0095               	movwf	21	;volatile
  1238                           
  1239                           ;main.c: 124: PWMCON2 =0X00;
  1240  03C9  019D               	clrf	29	;volatile
  1241                           
  1242                           ;main.c: 125: TRISB &= 0xFB;
  1243  03CA  1105               	bcf	5,2	;volatile
  1244  03CB  0008               	return
  1245  03CC                     __end_of_pwm2Init:	
  1246                           
  1247                           	psect	text7
  1248  03F4                     __ptext7:	
  1249 ;; *************** function _pwm0Stop *****************
  1250 ;; Defined at:
  1251 ;;		line 155 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		None
  1260 ;; Tracked objects:
  1261 ;;		On entry : 300/0
  1262 ;;		On exit  : 300/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMMON   BANK0   BANK1
  1265 ;;      Params:         0       0       0
  1266 ;;      Locals:         0       0       0
  1267 ;;      Temps:          0       0       0
  1268 ;;      Totals:         0       0       0
  1269 ;;Total ram usage:        0 bytes
  1270 ;; Hardware stack levels used:    1
  1271 ;; Hardware stack levels required when called:    1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_KeyServer
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function _pwm0Stop
  1281  03F4                     _pwm0Stop:	
  1282                           
  1283                           ;main.c: 157: PWMCON0 &= 0XFE;
  1284                           
  1285                           ;incstack = 0
  1286                           ; Regs used in _pwm0Stop: []
  1287  03F4  1015               	bcf	21,0	;volatile
  1288                           
  1289                           ;main.c: 158: RB0 = 0;
  1290  03F5  1006               	bcf	6,0	;volatile
  1291  03F6  0008               	return
  1292  03F7                     __end_of_pwm0Stop:	
  1293                           
  1294                           	psect	text8
  1295  03A5                     __ptext8:	
  1296 ;; *************** function _pwm0Init *****************
  1297 ;; Defined at:
  1298 ;;		line 137 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 300/0
  1309 ;;		On exit  : 300/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1
  1312 ;;      Params:         0       0       0
  1313 ;;      Locals:         0       0       0
  1314 ;;      Temps:          0       0       0
  1315 ;;      Totals:         0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_KeyServer
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function _pwm0Init
  1328  03A5                     _pwm0Init:	
  1329                           
  1330                           ;main.c: 139: TRISB |= 0x01;
  1331                           
  1332                           ;incstack = 0
  1333                           ; Regs used in _pwm0Init: [wreg+status,2]
  1334  03A5  1405               	bsf	5,0	;volatile
  1335                           
  1336                           ;main.c: 140: PWMCON1 = 0B00000000;
  1337  03A6  0196               	clrf	22	;volatile
  1338                           
  1339                           ;main.c: 141: PWMTH = 0X00;
  1340  03A7  0198               	clrf	24	;volatile
  1341                           
  1342                           ;main.c: 142: PWMTL = 100;
  1343  03A8  3064               	movlw	100
  1344  03A9  0097               	movwf	23	;volatile
  1345                           
  1346                           ;main.c: 145: PWMD01H = 0;
  1347  03AA  019E               	clrf	30	;volatile
  1348                           
  1349                           ;main.c: 146: PWMD0L = 80;
  1350  03AB  3050               	movlw	80
  1351  03AC  0099               	movwf	25	;volatile
  1352                           
  1353                           ;main.c: 147: PWM01DT = 0X00;
  1354  03AD  019F               	clrf	31	;volatile
  1355                           
  1356                           ;main.c: 149: PWMCON0 = 0X61;
  1357  03AE  3061               	movlw	97
  1358  03AF  0095               	movwf	21	;volatile
  1359                           
  1360                           ;main.c: 150: PWMCON2 =0X00;
  1361  03B0  019D               	clrf	29	;volatile
  1362                           
  1363                           ;main.c: 151: TRISB &= 0xFE;
  1364  03B1  1005               	bcf	5,0	;volatile
  1365  03B2  0008               	return
  1366  03B3                     __end_of_pwm0Init:	
  1367                           
  1368                           	psect	text9
  1369  03EC                     __ptext9:	
  1370 ;; *************** function _pwm02Stop *****************
  1371 ;; Defined at:
  1372 ;;		line 184 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0
  1381 ;; Tracked objects:
  1382 ;;		On entry : 300/0
  1383 ;;		On exit  : 300/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1
  1386 ;;      Params:         0       0       0
  1387 ;;      Locals:         0       0       0
  1388 ;;      Temps:          0       0       0
  1389 ;;      Totals:         0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    1
  1393 ;; This function calls:
  1394 ;;		Nothing
  1395 ;; This function is called by:
  1396 ;;		_KeyServer
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _pwm02Stop
  1403  03EC                     _pwm02Stop:	
  1404                           
  1405                           ;main.c: 186: PWMCON0 &= 0XEE;
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _pwm02Stop: [wreg+status,2+status,0]
  1409  03EC  30EE               	movlw	238
  1410  03ED  0595               	andwf	21,f	;volatile
  1411                           
  1412                           ;main.c: 187: PORTB &= 0xFA;
  1413  03EE  30FA               	movlw	250
  1414  03EF  0586               	andwf	6,f	;volatile
  1415  03F0  0008               	return
  1416  03F1                     __end_of_pwm02Stop:	
  1417                           
  1418                           	psect	text10
  1419  0362                     __ptext10:	
  1420 ;; *************** function _pwm02Init *****************
  1421 ;; Defined at:
  1422 ;;		line 162 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 300/0
  1433 ;;		On exit  : 300/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1
  1436 ;;      Params:         0       0       0
  1437 ;;      Locals:         0       0       0
  1438 ;;      Temps:          0       0       0
  1439 ;;      Totals:         0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_KeyServer
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _pwm02Init
  1452  0362                     _pwm02Init:	
  1453                           
  1454                           ;main.c: 164: TRISB |= 0x05;
  1455                           
  1456                           ;incstack = 0
  1457                           ; Regs used in _pwm02Init: [wreg+status,2+status,0]
  1458  0362  3005               	movlw	5
  1459  0363  0485               	iorwf	5,f	;volatile
  1460                           
  1461                           ;main.c: 165: PWMCON1 = 0B00000000;
  1462  0364  0196               	clrf	22	;volatile
  1463                           
  1464                           ;main.c: 166: PWMTH = 0X00;
  1465  0365  0198               	clrf	24	;volatile
  1466                           
  1467                           ;main.c: 167: PWMTL = 100;
  1468  0366  3064               	movlw	100
  1469  0367  0097               	movwf	23	;volatile
  1470                           
  1471                           ;main.c: 168: PWMT4L = 100;
  1472  0368  009C               	movwf	28	;volatile
  1473                           
  1474                           ;main.c: 171: PWMD4L = 94;
  1475  0369  305E               	movlw	94
  1476  036A  009B               	movwf	27	;volatile
  1477                           
  1478                           ;main.c: 174: PWMD01H = 0;
  1479  036B  019E               	clrf	30	;volatile
  1480                           
  1481                           ;main.c: 175: PWMD0L = 94;
  1482  036C  0099               	movwf	25	;volatile
  1483                           
  1484                           ;main.c: 176: PWM01DT = 0X00;
  1485  036D  019F               	clrf	31	;volatile
  1486                           
  1487                           ;main.c: 178: PWMCON0 = 0X71;
  1488  036E  3071               	movlw	113
  1489  036F  0095               	movwf	21	;volatile
  1490                           
  1491                           ;main.c: 179: PWMCON2 =0X00;
  1492  0370  019D               	clrf	29	;volatile
  1493                           
  1494                           ;main.c: 180: TRISB &= 0xFA;
  1495  0371  30FA               	movlw	250
  1496  0372  0585               	andwf	5,f	;volatile
  1497  0373  0008               	return
  1498  0374                     __end_of_pwm02Init:	
  1499                           
  1500                           	psect	text11
  1501  034E                     __ptext11:	
  1502 ;; *************** function _Init_System *****************
  1503 ;; Defined at:
  1504 ;;		line 22 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2
  1513 ;; Tracked objects:
  1514 ;;		On entry : B00/0
  1515 ;;		On exit  : 300/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1
  1518 ;;      Params:         0       0       0
  1519 ;;      Locals:         0       0       0
  1520 ;;      Temps:          0       0       0
  1521 ;;      Totals:         0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    1
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           
  1533                           ;psect for function _Init_System
  1534  034E                     _Init_System:	
  1535                           
  1536                           ;incstack = 0
  1537                           ; Regs used in _Init_System: [wreg+status,2]
  1538  034E  0000               	nop	;# 
  1539  034F  0064               	clrwdt	;# 
  1540                           
  1541                           ;main.c: 26: INTCON = 0;
  1542  0350  018B               	clrf	11	;volatile
  1543                           
  1544                           ;main.c: 27: OSCCON = 0X72;
  1545  0351  3072               	movlw	114
  1546  0352  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0353  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0354  0094               	movwf	20	;volatile
  1549                           
  1550                           ;main.c: 28: OPTION_REG = 0;
  1551  0355  0181               	clrf	1	;volatile
  1552                           
  1553                           ;main.c: 33: TRISB = 0x08;
  1554  0356  3008               	movlw	8
  1555  0357  0085               	movwf	5	;volatile
  1556                           
  1557                           ;main.c: 34: PORTB = 0;
  1558  0358  0186               	clrf	6	;volatile
  1559                           
  1560                           ;main.c: 36: PIE1 = 2;
  1561  0359  3002               	movlw	2
  1562  035A  008E               	movwf	14	;volatile
  1563                           
  1564                           ;main.c: 37: PR2 = 250;
  1565  035B  30FA               	movlw	250
  1566  035C  0091               	movwf	17	;volatile
  1567                           
  1568                           ;main.c: 38: T2CON = 4;
  1569  035D  3004               	movlw	4
  1570  035E  0093               	movwf	19	;volatile
  1571                           
  1572                           ;main.c: 40: INTCON = 0XC0;
  1573  035F  30C0               	movlw	192
  1574  0360  008B               	movwf	11	;volatile
  1575  0361  0008               	return
  1576  0362                     __end_of_Init_System:	
  1577                           
  1578                           	psect	text12
  1579  0262                     __ptext12:	
  1580 ;; *************** function _CheckTouchKey *****************
  1581 ;; Defined at:
  1582 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;		None
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;		None
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  1    wreg      void 
  1589 ;; Registers used:
  1590 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1
  1596 ;;      Params:         0       0       0
  1597 ;;      Locals:         0       0       0
  1598 ;;      Temps:          0       0       0
  1599 ;;      Totals:         0       0       0
  1600 ;;Total ram usage:        0 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    5
  1603 ;; This function calls:
  1604 ;;		_CheckKeyOldValue
  1605 ;;		_CheckOnceResult
  1606 ;;		_CheckValidTime
  1607 ;;		_ClearResSum
  1608 ;;		_GetTouchKeyValue
  1609 ;;		_KeyStopClear
  1610 ;;		_TurnKeyFlags
  1611 ;; This function is called by:
  1612 ;;		_main
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616                           
  1617                           ;psect for function _CheckTouchKey
  1618  0262                     _CheckTouchKey:	
  1619                           
  1620                           ;incstack = 0
  1621                           ; Regs used in _CheckTouchKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1622  0262  1A78               	btfsc	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1623  0263  2A6F               	goto	l1037
  1624  0264  2172               	fcall	_GetTouchKeyValue
  1625  0265  3008               	movlw	8
  1626  0266  1283               	bcf	3,5	;RP0=0, select bank0
  1627  0267  1303               	bcf	3,6	;RP1=0, select bank0
  1628  0268  0AB2               	incf	_KeyCounter,f
  1629  0269  0232               	subwf	_KeyCounter,w
  1630  026A  1C03               	skipc
  1631  026B  2A88               	goto	l2892
  1632  026C  01B2               	clrf	_KeyCounter
  1633  026D  1678               	bsf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1634  026E  2A88               	goto	l2892
  1635  026F                     l1037:	
  1636  026F  19F8               	btfsc	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1637  0270  2A84               	goto	l2886
  1638  0271  2016               	fcall	_CheckOnceResult
  1639  0272  2289               	fcall	_TurnKeyFlags
  1640  0273  15F8               	bsf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1641  0274  18F8               	btfsc	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  1642  0275  2A7C               	goto	l2876
  1643  0276  3002               	movlw	2
  1644  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0279  0232               	subwf	_KeyCounter,w
  1647  027A  1C03               	skipc
  1648  027B  2A80               	goto	l2884
  1649  027C                     l2876:	
  1650  027C  2374               	fcall	_KeyStopClear
  1651  027D  10F8               	bcf	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  1652  027E  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1653  027F  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1654  0280                     l2884:	
  1655  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0281  1303               	bcf	3,6	;RP1=0, select bank0
  1657  0282  01B2               	clrf	_KeyCounter
  1658  0283  2A88               	goto	l2892
  1659  0284                     l2886:	
  1660  0284  2236               	fcall	_CheckKeyOldValue
  1661  0285  23DE               	fcall	_ClearResSum
  1662  0286  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1663  0287  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1664  0288                     l2892:	
  1665  0288  2B24               	ljmp	l2418	;# 
  1666  0289                     __end_of_CheckTouchKey:	
  1667                           
  1668                           	psect	text13
  1669  0289                     __ptext13:	
  1670 ;; *************** function _TurnKeyFlags *****************
  1671 ;; Defined at:
  1672 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;		None
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMMON   BANK0   BANK1
  1686 ;;      Params:         0       0       0
  1687 ;;      Locals:         0       0       0
  1688 ;;      Temps:          0       0       0
  1689 ;;      Totals:         0       0       0
  1690 ;;Total ram usage:        0 bytes
  1691 ;; Hardware stack levels used:    1
  1692 ;; Hardware stack levels required when called:    4
  1693 ;; This function calls:
  1694 ;;		_KeyClearIn
  1695 ;; This function is called by:
  1696 ;;		_CheckTouchKey
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _TurnKeyFlags
  1702  0289                     _TurnKeyFlags:	
  1703                           
  1704                           ;incstack = 0
  1705                           ; Regs used in _TurnKeyFlags: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1706  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1707  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1708  028B  0822               	movf	_KeyData,w	;volatile
  1709  028C  1903               	btfsc	3,2
  1710  028D  2AA4               	goto	l2828
  1711  028E  01AE               	clrf	TurnKeyFlags@F416
  1712  028F  0822               	movf	_KeyData,w	;volatile
  1713  0290  0624               	xorwf	_KeyOldData,w	;volatile
  1714  0291  1D03               	skipz
  1715  0292  2A9F               	goto	l1018
  1716  0293  3002               	movlw	2
  1717  0294  0AAF               	incf	TurnKeyFlags@F415,f
  1718  0295  022F               	subwf	TurnKeyFlags@F415,w
  1719  0296  1C03               	skipc
  1720  0297  0008               	return
  1721  0298  01AF               	clrf	TurnKeyFlags@F415
  1722  0299  0822               	movf	_KeyData,w	;volatile
  1723  029A  00FB               	movwf	_KeyFlag	;volatile
  1724  029B  1978               	btfsc	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1725  029C  0008               	return
  1726  029D  1578               	bsf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1727  029E  2BB3               	ljmp	l2596
  1728  029F                     l1018:	
  1729  029F  1178               	bcf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1730  02A0  0822               	movf	_KeyData,w	;volatile
  1731  02A1  00A4               	movwf	_KeyOldData	;volatile
  1732  02A2  01AF               	clrf	TurnKeyFlags@F415
  1733  02A3  0008               	return
  1734  02A4                     l2828:	
  1735  02A4  01AF               	clrf	TurnKeyFlags@F415
  1736  02A5  01A4               	clrf	_KeyOldData	;volatile
  1737  02A6  3002               	movlw	2
  1738  02A7  0AAE               	incf	TurnKeyFlags@F416,f
  1739  02A8  022E               	subwf	TurnKeyFlags@F416,w
  1740  02A9  1C03               	skipc
  1741  02AA  0008               	return
  1742  02AB  01AE               	clrf	TurnKeyFlags@F416
  1743  02AC  01FB               	clrf	_KeyFlag	;volatile
  1744  02AD  1178               	bcf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1745  02AE  0008               	return
  1746  02AF                     __end_of_TurnKeyFlags:	
  1747                           
  1748                           	psect	text14
  1749  03B3                     __ptext14:	
  1750 ;; *************** function _KeyClearIn *****************
  1751 ;; Defined at:
  1752 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  383             1    4[COMMON] unsigned char 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 300/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1
  1766 ;;      Params:         0       0       0
  1767 ;;      Locals:         1       0       0
  1768 ;;      Temps:          0       0       0
  1769 ;;      Totals:         1       0       0
  1770 ;;Total ram usage:        1 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    3
  1773 ;; This function calls:
  1774 ;;		_KeyClearOne
  1775 ;;		_KeyIsIn
  1776 ;; This function is called by:
  1777 ;;		_TurnKeyFlags
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function _KeyClearIn
  1783  03B3                     _KeyClearIn:	
  1784  03B3                     l2596:	
  1785                           ;incstack = 0
  1786                           ; Regs used in _KeyClearIn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1787                           
  1788  03B3  01F4               	clrf	KeyClearIn@383
  1789  03B4                     l2602:	
  1790  03B4  0874               	movf	KeyClearIn@383,w
  1791  03B5  23CC               	fcall	_KeyIsIn
  1792  03B6  3A00               	xorlw	0
  1793  03B7  1D03               	skipz
  1794  03B8  2BBB               	goto	l2606
  1795  03B9  0874               	movf	KeyClearIn@383,w
  1796  03BA  230B               	fcall	_KeyClearOne
  1797  03BB                     l2606:	
  1798  03BB  0AF4               	incf	KeyClearIn@383,f
  1799  03BC  0874               	movf	KeyClearIn@383,w
  1800  03BD  1D03               	btfss	3,2
  1801  03BE  0008               	return
  1802  03BF  2BB4               	goto	l2602
  1803  03C0                     __end_of_KeyClearIn:	
  1804                           
  1805                           	psect	text15
  1806  0374                     __ptext15:	
  1807 ;; *************** function _KeyStopClear *****************
  1808 ;; Defined at:
  1809 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  385             1    3[COMMON] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1
  1823 ;;      Params:         0       0       0
  1824 ;;      Locals:         1       0       0
  1825 ;;      Temps:          0       0       0
  1826 ;;      Totals:         1       0       0
  1827 ;;Total ram usage:        1 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    2
  1830 ;; This function calls:
  1831 ;;		_KeyClearOne
  1832 ;; This function is called by:
  1833 ;;		_CheckTouchKey
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _KeyStopClear
  1839  0374                     _KeyStopClear:	
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _KeyStopClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1843  0374  01FB               	clrf	_KeyFlag	;volatile
  1844  0375  01F3               	clrf	KeyStopClear@385
  1845  0376                     l2288:	
  1846  0376  1003               	clrc
  1847  0377  0D73               	rlf	KeyStopClear@385,w
  1848  0378  2380               	fcall	PL14	;call to abstracted procedure
  1849  0379  0873               	movf	KeyStopClear@385,w
  1850  037A  230B               	fcall	_KeyClearOne
  1851  037B  0AF3               	incf	KeyStopClear@385,f
  1852  037C  0873               	movf	KeyStopClear@385,w
  1853  037D  1D03               	btfss	3,2
  1854  037E  0008               	return
  1855  037F  2B76               	goto	l2288
  1856  0380                     __end_of_KeyStopClear:	
  1857  0380                     PL14:	
  1858  0380  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  1859  0381  0084               	movwf	4
  1860  0382  0180               	clrf	0
  1861  0383  0A84               	incf	4,f
  1862  0384  0180               	clrf	0
  1863  0385  0008               	return
  1864  0386                     __end_ofPL14:	
  1865                           
  1866                           	psect	text16
  1867  0172                     __ptext16:	
  1868 ;; *************** function _GetTouchKeyValue *****************
  1869 ;; Defined at:
  1870 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  395             2    3[COMMON] unsigned int 
  1875 ;;  393             1    6[COMMON] unsigned char 
  1876 ;;  394             1    5[COMMON] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/200
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1
  1886 ;;      Params:         0       0       0
  1887 ;;      Locals:         4       0       0
  1888 ;;      Temps:          0       0       0
  1889 ;;      Totals:         4       0       0
  1890 ;;Total ram usage:        4 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    2
  1893 ;; This function calls:
  1894 ;;		_ClearResSum
  1895 ;; This function is called by:
  1896 ;;		_CheckTouchKey
  1897 ;;		_SystemEnterSleep
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           
  1902                           ;psect for function _GetTouchKeyValue
  1903  0172                     _GetTouchKeyValue:	
  1904                           
  1905                           ;incstack = 0
  1906                           ; Regs used in _GetTouchKeyValue: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1907  0172  01F6               	clrf	GetTouchKeyValue@393
  1908  0173  01F5               	clrf	GetTouchKeyValue@394
  1909  0174  0AF5               	incf	GetTouchKeyValue@394,f
  1910  0175                     l2070:	
  1911  0175  1C78               	btfss	_b_ksleep/(0+8),_b_ksleep& (0+7)	;volatile
  1912  0176  2979               	goto	l2074
  1913  0177  1C75               	btfss	GetTouchKeyValue@394,0
  1914  0178  29B7               	goto	l2106
  1915  0179                     l2074:	
  1916  0179  1283               	bcf	3,5	;RP0=0, select bank2
  1917  017A  1703               	bsf	3,6	;RP1=1, select bank2
  1918  017B  0191               	clrf	17	;volatile
  1919  017C  0192               	clrf	18	;volatile
  1920  017D  3079               	movlw	121
  1921  017E  0093               	movwf	19	;volatile
  1922  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0180  1305               	bcf	5,6	;volatile
  1924  0181  1306               	bcf	6,6	;volatile
  1925  0182  2983               	nop2	;2 cycle nop
  1926  0183  2984               	nop2	;2 cycle nop
  1927  0184  2985               	nop2	;2 cycle nop
  1928  0185  2986               	nop2	;2 cycle nop
  1929  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0188  1705               	bsf	5,6	;volatile
  1932  0189  3002               	movlw	2
  1933  018A  1703               	bsf	3,6	;RP1=1, select bank2
  1934  018B  0091               	movwf	17	;volatile
  1935  018C  0876               	movf	GetTouchKeyValue@393,w
  1936  018D  3E0A               	addlw	low ((_Table_KeyChannel-__stringbase)| (0+32768))
  1937  018E  0084               	movwf	4
  1938  018F  2386               	fcall	stringdir
  1939  0190  0092               	movwf	18	;volatile
  1940  0191  2992               	nop2	;2 cycle nop
  1941  0192  2993               	nop2	;2 cycle nop
  1942  0193  1283               	bcf	3,5	;RP0=0, select bank2
  1943  0194  1703               	bsf	3,6	;RP1=1, select bank2
  1944  0195  1411               	bsf	17,0	;volatile
  1945  0196  3040               	movlw	64
  1946  0197  00F3               	movwf	GetTouchKeyValue@395
  1947  0198  301F               	movlw	31
  1948  0199  00F4               	movwf	GetTouchKeyValue@395+1
  1949  019A                     l968:	
  1950  019A  1B91               	btfsc	17,7	;volatile
  1951  019B  29A8               	goto	l2104
  1952  019C  3001               	movlw	1
  1953  019D  02F3               	subwf	GetTouchKeyValue@395,f
  1954  019E  1C03               	skipc
  1955  019F  03F4               	decf	GetTouchKeyValue@395+1,f
  1956  01A0  0873               	movf	GetTouchKeyValue@395,w
  1957  01A1  0474               	iorwf	GetTouchKeyValue@395+1,w
  1958  01A2  1D03               	btfss	3,2
  1959  01A3  299A               	goto	l968
  1960  01A4  30FF               	movlw	255
  1961  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1962  01A6  00B2               	movwf	_KeyCounter
  1963  01A7  2BDE               	ljmp	l2034
  1964  01A8                     l2104:	
  1965  01A8  1003               	clrc
  1966  01A9  0D76               	rlf	GetTouchKeyValue@393,w
  1967  01AA  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  1968  01AB  0084               	movwf	4
  1969  01AC  0816               	movf	22,w	;volatile
  1970  01AD  0780               	addwf	0,f
  1971  01AE  0F84               	incfsz	4,f
  1972  01AF  0800               	movf	0,w
  1973  01B0  1803               	skipnc
  1974  01B1  0A00               	incf	0,w
  1975  01B2  00FF               	movwf	127
  1976  01B3  0817               	movf	23,w	;volatile
  1977  01B4  077F               	addwf	127,w
  1978  01B5  0080               	movwf	0
  1979  01B6  0384               	decf	4,f
  1980  01B7                     l2106:	
  1981  01B7  1003               	clrc
  1982  01B8  0DF5               	rlf	GetTouchKeyValue@394,f
  1983  01B9  0AF6               	incf	GetTouchKeyValue@393,f
  1984  01BA  1903               	btfsc	3,2
  1985  01BB  2975               	goto	l2070
  1986  01BC  1078               	bcf	_b_ksleep/(0+8),_b_ksleep& (0+7)	;# 
  1987  01BD  0008               	return
  1988  01BE                     __end_of_GetTouchKeyValue:	
  1989                           
  1990                           	psect	text17
  1991  03DE                     __ptext17:	
  1992 ;; *************** function _ClearResSum *****************
  1993 ;; Defined at:
  1994 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  388             1    2[COMMON] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/200
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1
  2008 ;;      Params:         0       0       0
  2009 ;;      Locals:         1       0       0
  2010 ;;      Temps:          0       0       0
  2011 ;;      Totals:         1       0       0
  2012 ;;Total ram usage:        1 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_GetTouchKeyValue
  2019 ;;		_CheckTouchKey
  2020 ;;		_SystemEnterSleep
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _ClearResSum
  2026  03DE                     _ClearResSum:	
  2027  03DE                     l2034:	
  2028                           ;incstack = 0
  2029                           ; Regs used in _ClearResSum: [wreg-fsr0h+status,2+status,0]
  2030                           
  2031  03DE  01F2               	clrf	ClearResSum@388
  2032  03DF                     l2036:	
  2033  03DF  1003               	clrc
  2034  03E0  0D72               	rlf	ClearResSum@388,w
  2035  03E1  2380               	fcall	PL14	;call to abstracted procedure
  2036  03E2  0FF2               	incfsz	ClearResSum@388,f
  2037  03E3  0008               	return
  2038  03E4  2BDF               	goto	l2036
  2039  03E5                     __end_of_ClearResSum:	
  2040                           
  2041                           	psect	text18
  2042  0324                     __ptext18:	
  2043 ;; *************** function _CheckValidTime *****************
  2044 ;; Defined at:
  2045 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1
  2059 ;;      Params:         0       0       0
  2060 ;;      Locals:         0       0       0
  2061 ;;      Temps:          0       0       0
  2062 ;;      Totals:         0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; Hardware stack levels required when called:    1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_CheckTouchKey
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function _CheckValidTime
  2075  0324                     _CheckValidTime:	
  2076  0324                     l2418:	
  2077                           ;incstack = 0
  2078                           ; Regs used in _CheckValidTime: [wreg+status,2+status,0]
  2079                           
  2080  0324  087B               	movf	_KeyFlag,w	;volatile
  2081  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0327  1903               	btfsc	3,2
  2084  0328  2B36               	goto	L1
  2085  0329  0AA0               	incf	CheckValidTime@F419,f
  2086  032A  1903               	skipnz
  2087  032B  0AA1               	incf	CheckValidTime@F419+1,f
  2088  032C  303A               	movlw	58
  2089  032D  0221               	subwf	CheckValidTime@F419+1,w
  2090  032E  3098               	movlw	152
  2091  032F  1903               	skipnz
  2092  0330  0220               	subwf	CheckValidTime@F419,w
  2093  0331  1C03               	skipc
  2094  0332  0008               	return
  2095  0333  14F8               	bsf	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  2096  0334  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0335  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0336                     L1:	
  2099  0336  01A0               	clrf	CheckValidTime@F419
  2100  0337  01A1               	clrf	CheckValidTime@F419+1
  2101  0338  0008               	return
  2102  0339                     __end_of_CheckValidTime:	
  2103                           
  2104                           	psect	text19
  2105  0016                     __ptext19:	
  2106 ;; *************** function _CheckOnceResult *****************
  2107 ;; Defined at:
  2108 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  404             2    6[BANK0 ] unsigned int 
  2113 ;;  405             2    3[BANK0 ] unsigned int 
  2114 ;;  406             2    0[BANK0 ] unsigned int 
  2115 ;;  401             1    8[BANK0 ] unsigned char 
  2116 ;;  402             1    5[BANK0 ] unsigned char 
  2117 ;;  403             1    2[BANK0 ] unsigned char 
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1
  2127 ;;      Params:         0       0       0
  2128 ;;      Locals:         0       9       0
  2129 ;;      Temps:          4       0       0
  2130 ;;      Totals:         4       9       0
  2131 ;;Total ram usage:       13 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    3
  2134 ;; This function calls:
  2135 ;;		_KeyClearOne
  2136 ;;		_KeyHave
  2137 ;;		_KeyIsIn
  2138 ;; This function is called by:
  2139 ;;		_CheckTouchKey
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _CheckOnceResult
  2145  0016                     _CheckOnceResult:	
  2146                           
  2147                           ;incstack = 0
  2148                           ; Regs used in _CheckOnceResult: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2149  0016  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0017  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0018  01C1               	clrf	CheckOnceResult@401
  2152  0019  01A2               	clrf	_KeyData	;volatile
  2153  001A  01B1               	clrf	_KeyMaxSub
  2154  001B                     l2720:	
  2155  001B  0841               	movf	CheckOnceResult@401,w
  2156  001C  3907               	andlw	7
  2157  001D  3E01               	addlw	low ((_Table_KeyFalg-__stringbase)| (0+32768))
  2158  001E  0084               	movwf	4
  2159  001F  2386               	fcall	stringdir
  2160  0020  00BB               	movwf	CheckOnceResult@403
  2161  0021  1003               	clrc
  2162  0022  0D41               	rlf	CheckOnceResult@401,w
  2163  0023  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  2164  0024  0084               	movwf	4
  2165  0025  3003               	movlw	3
  2166  0026                     u1475:	
  2167  0026  0A84               	incf	4,f
  2168  0027  1003               	clrc
  2169  0028  0C80               	rrf	0,f
  2170  0029  0384               	decf	4,f
  2171  002A  0C80               	rrf	0,f
  2172  002B  3EFF               	addlw	-1
  2173  002C  1D03               	skipz
  2174  002D  2826               	goto	u1475
  2175  002E  1003               	clrc
  2176  002F  0D41               	rlf	CheckOnceResult@401,w
  2177  0030  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  2178  0031  0084               	movwf	4
  2179  0032  0800               	movf	0,w
  2180  0033  00BF               	movwf	CheckOnceResult@404
  2181  0034  0A84               	incf	4,f
  2182  0035  0800               	movf	0,w
  2183  0036  00C0               	movwf	CheckOnceResult@404+1
  2184  0037  0841               	movf	CheckOnceResult@401,w
  2185  0038  3E09               	addlw	low ((_Table_KeyDown-__stringbase)| (0+32768))
  2186  0039  0084               	movwf	4
  2187  003A  2386               	fcall	stringdir
  2188  003B  00BE               	movwf	CheckOnceResult@402
  2189  003C  00BC               	movwf	CheckOnceResult@405
  2190  003D  01BD               	clrf	CheckOnceResult@405+1
  2191  003E  083F               	movf	CheckOnceResult@404,w
  2192  003F  07BC               	addwf	CheckOnceResult@405,f
  2193  0040  1803               	skipnc
  2194  0041  0ABD               	incf	CheckOnceResult@405+1,f
  2195  0042  0840               	movf	CheckOnceResult@404+1,w
  2196  0043  07BD               	addwf	CheckOnceResult@405+1,f
  2197  0044  0841               	movf	CheckOnceResult@401,w
  2198  0045  23CC               	fcall	_KeyIsIn
  2199  0046  3A00               	xorlw	0
  2200  0047  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0048  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0049  1003               	clrc
  2203  004A  1D03               	skipz
  2204  004B  28A3               	goto	L4
  2205  004C  0D41               	rlf	CheckOnceResult@401,w
  2206  004D  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2207  004E  0084               	movwf	4
  2208  004F  1383               	bcf	3,7	;select IRP bank0
  2209  0050  0800               	movf	0,w
  2210  0051  00B9               	movwf	CheckOnceResult@406
  2211  0052  0A84               	incf	4,f
  2212  0053  0800               	movf	0,w
  2213  0054  00BA               	movwf	CheckOnceResult@406+1
  2214  0055  1003               	clrc
  2215  0056  0D41               	rlf	CheckOnceResult@401,w
  2216  0057  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2217  0058  20F6               	fcall	PL6	;call to abstracted procedure
  2218  0059  023D               	subwf	CheckOnceResult@405+1,w
  2219  005A  1D03               	skipz
  2220  005B  285E               	goto	u1495
  2221  005C  0874               	movf	??_CheckOnceResult,w
  2222  005D  023C               	subwf	CheckOnceResult@405,w
  2223  005E                     u1495:	
  2224  005E  1803               	skipnc
  2225  005F  286C               	goto	l2738
  2226  0060  1003               	clrc
  2227  0061  0D41               	rlf	CheckOnceResult@401,w
  2228  0062  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2229  0063  20F6               	fcall	PL6	;call to abstracted procedure
  2230  0064  083F               	movf	CheckOnceResult@404,w
  2231  0065  0274               	subwf	??_CheckOnceResult,w
  2232  0066  00BF               	movwf	CheckOnceResult@404
  2233  0067  0840               	movf	CheckOnceResult@404+1,w
  2234  0068  1C03               	skipc
  2235  0069  0A40               	incf	CheckOnceResult@404+1,w
  2236  006A  0275               	subwf	??_CheckOnceResult+1,w
  2237  006B  288F               	goto	L2
  2238  006C                     l2738:	
  2239  006C  083A               	movf	CheckOnceResult@406+1,w
  2240  006D  023D               	subwf	CheckOnceResult@405+1,w
  2241  006E  1D03               	skipz
  2242  006F  2872               	goto	u1505
  2243  0070  0839               	movf	CheckOnceResult@406,w
  2244  0071  023C               	subwf	CheckOnceResult@405,w
  2245  0072                     u1505:	
  2246  0072  1803               	skipnc
  2247  0073  28DF               	goto	l2784
  2248  0074  1003               	clrc
  2249  0075  0D41               	rlf	CheckOnceResult@401,w
  2250  0076  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2251  0077  20F6               	fcall	PL6	;call to abstracted procedure
  2252  0078  023D               	subwf	CheckOnceResult@405+1,w
  2253  0079  1D03               	skipz
  2254  007A  287D               	goto	u1515
  2255  007B  0874               	movf	??_CheckOnceResult,w
  2256  007C  023C               	subwf	CheckOnceResult@405,w
  2257  007D                     u1515:	
  2258  007D  1803               	skipnc
  2259  007E  28DF               	goto	l2784
  2260  007F  1003               	clrc
  2261  0080  0D41               	rlf	CheckOnceResult@401,w
  2262  0081  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2263  0082  0084               	movwf	4
  2264  0083  0839               	movf	CheckOnceResult@406,w
  2265  0084  0080               	movwf	0
  2266  0085  0A84               	incf	4,f
  2267  0086  083A               	movf	CheckOnceResult@406+1,w
  2268  0087  0080               	movwf	0
  2269  0088  083F               	movf	CheckOnceResult@404,w
  2270  0089  0239               	subwf	CheckOnceResult@406,w
  2271  008A  00BF               	movwf	CheckOnceResult@404
  2272  008B  0840               	movf	CheckOnceResult@404+1,w
  2273  008C  1C03               	skipc
  2274  008D  0A40               	incf	CheckOnceResult@404+1,w
  2275  008E  023A               	subwf	CheckOnceResult@406+1,w
  2276  008F                     L2:	
  2277  008F  00C0               	movwf	CheckOnceResult@404+1
  2278  0090  0841               	movf	CheckOnceResult@401,w
  2279  0091  3E38               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2280  0092  0084               	movwf	4
  2281  0093  0180               	clrf	0
  2282  0094  0840               	movf	CheckOnceResult@404+1,w
  2283  0095  1903               	btfsc	3,2
  2284  0096  2899               	goto	l2752
  2285  0097  30FF               	movlw	255
  2286  0098  289A               	goto	L3
  2287  0099                     l2752:	
  2288  0099  083F               	movf	CheckOnceResult@404,w
  2289  009A                     L3:	
  2290  009A  00BE               	movwf	CheckOnceResult@402
  2291  009B  0231               	subwf	_KeyMaxSub,w
  2292  009C  1803               	skipnc
  2293  009D  28A1               	goto	l2758
  2294  009E  083E               	movf	CheckOnceResult@402,w
  2295  009F  00B1               	movwf	_KeyMaxSub
  2296  00A0  28DD               	goto	l2782
  2297  00A1                     l2758:	
  2298  00A1  0AB2               	incf	_KeyCounter,f
  2299  00A2  28DF               	goto	l2784
  2300  00A3                     L4:	
  2301  00A3  0D41               	rlf	CheckOnceResult@401,w
  2302  00A4  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2303  00A5  0084               	movwf	4
  2304  00A6  1383               	bcf	3,7	;select IRP bank0
  2305  00A7  0800               	movf	0,w
  2306  00A8  00F4               	movwf	??_CheckOnceResult
  2307  00A9  0A84               	incf	4,f
  2308  00AA  0800               	movf	0,w
  2309  00AB  00F5               	movwf	??_CheckOnceResult+1
  2310  00AC  0874               	movf	??_CheckOnceResult,w
  2311  00AD  3E01               	addlw	1
  2312  00AE  00F6               	movwf	??_CheckOnceResult+2
  2313  00AF  0875               	movf	??_CheckOnceResult+1,w
  2314  00B0  1803               	skipnc
  2315  00B1  3E01               	addlw	1
  2316  00B2  00F7               	movwf	??_CheckOnceResult+3
  2317  00B3  083D               	movf	CheckOnceResult@405+1,w
  2318  00B4  0277               	subwf	??_CheckOnceResult+3,w
  2319  00B5  1D03               	skipz
  2320  00B6  28B9               	goto	u1545
  2321  00B7  083C               	movf	CheckOnceResult@405,w
  2322  00B8  0276               	subwf	??_CheckOnceResult+2,w
  2323  00B9                     u1545:	
  2324  00B9  1C03               	btfss	3,0
  2325  00BA  28DF               	goto	l2784
  2326  00BB  1003               	clrc
  2327  00BC  0D41               	rlf	CheckOnceResult@401,w
  2328  00BD  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2329  00BE  0084               	movwf	4
  2330  00BF  0800               	movf	0,w
  2331  00C0  20E4               	fcall	PL4	;call to abstracted procedure
  2332  00C1  1C03               	skipc
  2333  00C2  28CB               	goto	l2772
  2334  00C3  1003               	clrc
  2335  00C4  0D41               	rlf	CheckOnceResult@401,w
  2336  00C5  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2337  00C6  0084               	movwf	4
  2338  00C7  0800               	movf	0,w
  2339  00C8  20E4               	fcall	PL4	;call to abstracted procedure
  2340  00C9  1803               	skipnc
  2341  00CA  28D6               	goto	l2776
  2342  00CB                     l2772:	
  2343  00CB  0841               	movf	CheckOnceResult@401,w
  2344  00CC  3E38               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2345  00CD  0084               	movwf	4
  2346  00CE  3009               	movlw	9
  2347  00CF  0A80               	incf	0,f
  2348  00D0  0200               	subwf	0,w
  2349  00D1  1C03               	skipc
  2350  00D2  28DA               	goto	l2780
  2351  00D3  0841               	movf	CheckOnceResult@401,w
  2352  00D4  230B               	fcall	_KeyClearOne
  2353  00D5  28DF               	goto	l2784
  2354  00D6                     l2776:	
  2355  00D6  0841               	movf	CheckOnceResult@401,w
  2356  00D7  3E38               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2357  00D8  0084               	movwf	4
  2358  00D9  0180               	clrf	0
  2359  00DA                     l2780:	
  2360  00DA  0822               	movf	_KeyData,w	;volatile
  2361  00DB  1D03               	btfss	3,2
  2362  00DC  28DF               	goto	l2784
  2363  00DD                     l2782:	
  2364  00DD  083B               	movf	CheckOnceResult@403,w
  2365  00DE  23E5               	fcall	_KeyHave
  2366  00DF                     l2784:	
  2367  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2368  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  2369  00E1  0FC1               	incfsz	CheckOnceResult@401,f
  2370  00E2  0008               	return
  2371  00E3  281B               	goto	l2720
  2372  00E4                     __end_of_CheckOnceResult:	
  2373  00E4                     PL4:	
  2374  00E4  00F4               	movwf	??_CheckOnceResult
  2375  00E5  0A84               	incf	4,f
  2376  00E6  0800               	movf	0,w
  2377  00E7  00F5               	movwf	??_CheckOnceResult+1
  2378  00E8  083E               	movf	CheckOnceResult@402,w
  2379  00E9  0774               	addwf	??_CheckOnceResult,w
  2380  00EA  00F6               	movwf	??_CheckOnceResult+2
  2381  00EB  0875               	movf	??_CheckOnceResult+1,w
  2382  00EC  1803               	skipnc
  2383  00ED  0A75               	incf	??_CheckOnceResult+1,w
  2384  00EE  00F7               	movwf	??_CheckOnceResult+3
  2385  00EF  0840               	movf	CheckOnceResult@404+1,w
  2386  00F0  0277               	subwf	??_CheckOnceResult+3,w
  2387  00F1  1D03               	skipz
  2388  00F2  0008               	return
  2389  00F3  083F               	movf	CheckOnceResult@404,w
  2390  00F4  0276               	subwf	??_CheckOnceResult+2,w
  2391  00F5  0008               	return
  2392  00F6                     __end_ofPL4:	
  2393  00F6                     PL6:	
  2394  00F6  0084               	movwf	4
  2395  00F7  0800               	movf	0,w
  2396  00F8  00F4               	movwf	??_CheckOnceResult
  2397  00F9  0A84               	incf	4,f
  2398  00FA  0800               	movf	0,w
  2399  00FB  00F5               	movwf	??_CheckOnceResult+1
  2400  00FC  0008               	return
  2401  00FD                     __end_ofPL6:	
  2402                           
  2403                           	psect	text20
  2404  03E5                     __ptext20:	
  2405 ;; *************** function _KeyHave *****************
  2406 ;; Defined at:
  2407 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  390             1    wreg     unsigned char 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  390             1    2[COMMON] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      void 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0
  2416 ;; Tracked objects:
  2417 ;;		On entry : B00/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1
  2421 ;;      Params:         0       0       0
  2422 ;;      Locals:         1       0       0
  2423 ;;      Temps:          0       0       0
  2424 ;;      Totals:         1       0       0
  2425 ;;Total ram usage:        1 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_CheckOnceResult
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function _KeyHave
  2437  03E5                     _KeyHave:	
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _KeyHave: [wreg+status,2+status,0]
  2441                           ;KeyHave@390 stored from wreg
  2442  03E5  00F2               	movwf	KeyHave@390
  2443  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2444  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2445  03E8  0AB2               	incf	_KeyCounter,f
  2446  03E9  0872               	movf	KeyHave@390,w
  2447  03EA  00A2               	movwf	_KeyData	;volatile
  2448  03EB  0008               	return
  2449  03EC                     __end_of_KeyHave:	
  2450                           
  2451                           	psect	text21
  2452  030B                     __ptext21:	
  2453 ;; *************** function _KeyClearOne *****************
  2454 ;; Defined at:
  2455 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  381             1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  381             1    2[COMMON] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1
  2469 ;;      Params:         0       0       0
  2470 ;;      Locals:         1       0       0
  2471 ;;      Temps:          0       0       0
  2472 ;;      Totals:         1       0       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used:    1
  2475 ;; Hardware stack levels required when called:    1
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_KeyClearIn
  2480 ;;		_KeyStopClear
  2481 ;;		_CheckOnceResult
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function _KeyClearOne
  2487  030B                     _KeyClearOne:	
  2488                           
  2489                           ;incstack = 0
  2490                           ; Regs used in _KeyClearOne: [wreg-fsr0h+status,2+status,0]
  2491                           ;KeyClearOne@381 stored from wreg
  2492  030B  00F2               	movwf	KeyClearOne@381
  2493  030C  1003               	clrc
  2494  030D  0D72               	rlf	KeyClearOne@381,w
  2495  030E  3E2C               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2496  030F  0084               	movwf	4
  2497  0310  1383               	bcf	3,7	;select IRP bank0
  2498  0311  231E               	fcall	PL12	;call to abstracted procedure
  2499  0312  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2500  0313  0084               	movwf	4
  2501  0314  231E               	fcall	PL12	;call to abstracted procedure
  2502  0315  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2503  0316  0084               	movwf	4
  2504  0317  231E               	fcall	PL12	;call to abstracted procedure
  2505  0318  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2506  0319  0084               	movwf	4
  2507  031A  0180               	clrf	0
  2508  031B  0A84               	incf	4,f
  2509  031C  0180               	clrf	0	;# 
  2510  031D  0008               	return
  2511  031E                     __end_of_KeyClearOne:	
  2512  031E                     PL12:	
  2513  031E  0180               	clrf	0
  2514  031F  0A84               	incf	4,f
  2515  0320  0180               	clrf	0
  2516  0321  1003               	clrc
  2517  0322  0D72               	rlf	KeyClearOne@381,w
  2518  0323  0008               	return
  2519  0324                     __end_ofPL12:	
  2520                           
  2521                           	psect	text22
  2522  0236                     __ptext22:	
  2523 ;; *************** function _CheckKeyOldValue *****************
  2524 ;; Defined at:
  2525 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;		None
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  412             2    0[BANK0 ] unsigned int 
  2530 ;;  411             1    2[BANK0 ] unsigned char 
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1
  2540 ;;      Params:         0       0       0
  2541 ;;      Locals:         0       3       0
  2542 ;;      Temps:          0       0       0
  2543 ;;      Totals:         0       3       0
  2544 ;;Total ram usage:        3 bytes
  2545 ;; Hardware stack levels used:    1
  2546 ;; Hardware stack levels required when called:    3
  2547 ;; This function calls:
  2548 ;;		_JudgeKeyOldData
  2549 ;;		_KeyIsIn
  2550 ;;		_RKeyOldData
  2551 ;; This function is called by:
  2552 ;;		_CheckTouchKey
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _CheckKeyOldValue
  2558  0236                     _CheckKeyOldValue:	
  2559  0236  3004               	movlw	4
  2560                           
  2561                           ;incstack = 0
  2562                           ; Regs used in _CheckKeyOldValue: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2563  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2564  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2565  0239  01BB               	clrf	CheckKeyOldValue@411
  2566  023A  0AB0               	incf	CheckKeyOldValue@F410,f
  2567  023B  0230               	subwf	CheckKeyOldValue@F410,w
  2568  023C  1C03               	btfss	3,0
  2569  023D  0008               	return
  2570  023E  01B0               	clrf	CheckKeyOldValue@F410
  2571  023F                     l2796:	
  2572  023F  1003               	clrc
  2573  0240  0D3B               	rlf	CheckKeyOldValue@411,w
  2574  0241  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  2575  0242  0084               	movwf	4
  2576  0243  0800               	movf	0,w
  2577  0244  00B9               	movwf	CheckKeyOldValue@412
  2578  0245  0A84               	incf	4,f
  2579  0246  0800               	movf	0,w
  2580  0247  00BA               	movwf	CheckKeyOldValue@412+1
  2581  0248  083B               	movf	CheckKeyOldValue@411,w
  2582  0249  23CC               	fcall	_KeyIsIn
  2583  024A  3A00               	xorlw	0
  2584  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2585  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2586  024D  1D03               	skipz
  2587  024E  2A57               	goto	L5
  2588  024F  083A               	movf	CheckKeyOldValue@412+1,w
  2589  0250  00F3               	movwf	JudgeKeyOldData@428+1
  2590  0251  0839               	movf	CheckKeyOldValue@412,w
  2591  0252  00F2               	movwf	JudgeKeyOldData@428
  2592  0253  083B               	movf	CheckKeyOldValue@411,w
  2593  0254  21BE               	fcall	_JudgeKeyOldData
  2594  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0257                     L5:	
  2597  0257  083A               	movf	CheckKeyOldValue@412+1,w
  2598  0258  00F3               	movwf	RKeyOldData@431+1
  2599  0259  0839               	movf	CheckKeyOldValue@412,w
  2600  025A  00F2               	movwf	RKeyOldData@431
  2601  025B  083B               	movf	CheckKeyOldValue@411,w
  2602  025C  22AF               	fcall	_RKeyOldData
  2603  025D  1283               	bcf	3,5	;RP0=0, select bank0
  2604  025E  1303               	bcf	3,6	;RP1=0, select bank0
  2605  025F  0FBB               	incfsz	CheckKeyOldValue@411,f
  2606  0260  0008               	return
  2607  0261  2A3F               	goto	l2796
  2608  0262                     __end_of_CheckKeyOldValue:	
  2609                           
  2610                           	psect	text23
  2611  02AF                     __ptext23:	
  2612 ;; *************** function _RKeyOldData *****************
  2613 ;; Defined at:
  2614 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  430             1    wreg     unsigned char 
  2617 ;;  431             2    2[COMMON] unsigned int 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  430             1    6[COMMON] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2624 ;; Tracked objects:
  2625 ;;		On entry : 300/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1
  2629 ;;      Params:         2       0       0
  2630 ;;      Locals:         1       0       0
  2631 ;;      Temps:          2       0       0
  2632 ;;      Totals:         5       0       0
  2633 ;;Total ram usage:        5 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; Hardware stack levels required when called:    1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_CheckKeyOldValue
  2640 ;;		_SystemEnterSleep
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _RKeyOldData
  2646  02AF                     _RKeyOldData:	
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _RKeyOldData: [wreg-fsr0h+status,2+status,0]
  2650                           ;RKeyOldData@430 stored from wreg
  2651  02AF  00F6               	movwf	RKeyOldData@430
  2652  02B0  1003               	clrc
  2653  02B1  0D76               	rlf	RKeyOldData@430,w
  2654  02B2  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2655  02B3  0084               	movwf	4
  2656  02B4  1383               	bcf	3,7	;select IRP bank0
  2657  02B5  22CC               	fcall	PL10	;call to abstracted procedure
  2658  02B6  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2659  02B7  22C1               	fcall	PL8	;call to abstracted procedure
  2660  02B8  22CC               	fcall	PL10	;call to abstracted procedure
  2661  02B9  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2662  02BA  22C1               	fcall	PL8	;call to abstracted procedure
  2663  02BB  0872               	movf	RKeyOldData@431,w
  2664  02BC  0080               	movwf	0
  2665  02BD  0A84               	incf	4,f
  2666  02BE  0873               	movf	RKeyOldData@431+1,w
  2667  02BF  0080               	movwf	0	;# 
  2668  02C0  0008               	return
  2669  02C1                     __end_of_RKeyOldData:	
  2670  02C1                     PL8:	
  2671  02C1  0084               	movwf	4
  2672  02C2  0874               	movf	??_RKeyOldData,w
  2673  02C3  0080               	movwf	0
  2674  02C4  0A84               	incf	4,f
  2675  02C5  0875               	movf	??_RKeyOldData+1,w
  2676  02C6  0080               	movwf	0
  2677  02C7  1003               	clrc
  2678  02C8  0D76               	rlf	RKeyOldData@430,w
  2679  02C9  3E2C               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2680  02CA  0084               	movwf	4
  2681  02CB  0008               	return
  2682  02CC                     __end_ofPL8:	
  2683  02CC                     PL10:	
  2684  02CC  0800               	movf	0,w
  2685  02CD  00F4               	movwf	??_RKeyOldData
  2686  02CE  0A84               	incf	4,f
  2687  02CF  0800               	movf	0,w
  2688  02D0  00F5               	movwf	??_RKeyOldData+1
  2689  02D1  1003               	clrc
  2690  02D2  0D76               	rlf	RKeyOldData@430,w
  2691  02D3  0008               	return
  2692  02D4                     __end_ofPL10:	
  2693                           
  2694                           	psect	text24
  2695  03CC                     __ptext24:	
  2696 ;; *************** function _KeyIsIn *****************
  2697 ;; Defined at:
  2698 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  377             1    wreg     unsigned char 
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  377             1    2[COMMON] unsigned char 
  2703 ;;  378             1    3[COMMON] unsigned char 
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      unsigned char 
  2706 ;; Registers used:
  2707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1
  2713 ;;      Params:         0       0       0
  2714 ;;      Locals:         2       0       0
  2715 ;;      Temps:          0       0       0
  2716 ;;      Totals:         2       0       0
  2717 ;;Total ram usage:        2 bytes
  2718 ;; Hardware stack levels used:    2
  2719 ;; Hardware stack levels required when called:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_KeyClearIn
  2724 ;;		_CheckOnceResult
  2725 ;;		_CheckKeyOldValue
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _KeyIsIn
  2731  03CC                     _KeyIsIn:	
  2732                           
  2733                           ;incstack = 0
  2734                           ; Regs used in _KeyIsIn: [wreg-fsr0h+status,2+status,0+pclath]
  2735                           ;KeyIsIn@377 stored from wreg
  2736  03CC  00F2               	movwf	KeyIsIn@377
  2737  03CD  3907               	andlw	7
  2738  03CE  3E01               	addlw	low ((_Table_KeyFalg-__stringbase)| (0+32768))
  2739  03CF  0084               	movwf	4
  2740  03D0  2386               	fcall	stringdir
  2741  03D1  00F3               	movwf	KeyIsIn@378
  2742  03D2  087B               	movf	_KeyFlag,w	;volatile
  2743  03D3  05F3               	andwf	KeyIsIn@378,f
  2744  03D4  0873               	movf	KeyIsIn@378,w
  2745  03D5  0008               	return
  2746  03D6                     __end_of_KeyIsIn:	
  2747                           
  2748                           	psect	text25
  2749  01BE                     __ptext25:	
  2750 ;; *************** function _JudgeKeyOldData *****************
  2751 ;; Defined at:
  2752 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  427             1    wreg     unsigned char 
  2755 ;;  428             2    2[COMMON] unsigned int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  427             1    4[COMMON] unsigned char 
  2758 ;;  429             2    5[COMMON] unsigned int 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2763 ;; Tracked objects:
  2764 ;;		On entry : 300/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1
  2768 ;;      Params:         2       0       0
  2769 ;;      Locals:         3       0       0
  2770 ;;      Temps:          0       0       0
  2771 ;;      Totals:         5       0       0
  2772 ;;Total ram usage:        5 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_CheckKeyOldValue
  2779 ;;		_SystemEnterSleep
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _JudgeKeyOldData
  2785  01BE                     _JudgeKeyOldData:	
  2786                           
  2787                           ;incstack = 0
  2788                           ; Regs used in _JudgeKeyOldData: [wreg-fsr0h+status,2+status,0]
  2789                           ;JudgeKeyOldData@427 stored from wreg
  2790  01BE  00F4               	movwf	JudgeKeyOldData@427
  2791  01BF  1003               	clrc
  2792  01C0  0D74               	rlf	JudgeKeyOldData@427,w
  2793  01C1  3E2C               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2794  01C2  0084               	movwf	4
  2795  01C3  1383               	bcf	3,7	;select IRP bank0
  2796  01C4  21FA               	fcall	PL2	;call to abstracted procedure
  2797  01C5  1903               	skipnz
  2798  01C6  0275               	subwf	JudgeKeyOldData@429,w
  2799  01C7  1C03               	skipc
  2800  01C8  29D1               	goto	L6
  2801  01C9  30FF               	movlw	255
  2802  01CA  0276               	subwf	JudgeKeyOldData@429+1,w
  2803  01CB  30FE               	movlw	254
  2804  01CC  1903               	skipnz
  2805  01CD  0275               	subwf	JudgeKeyOldData@429,w
  2806  01CE  1C03               	skipc
  2807  01CF  0008               	return
  2808  01D0  1003               	clrc
  2809  01D1                     L6:	
  2810  01D1  0D74               	rlf	JudgeKeyOldData@427,w
  2811  01D2  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2812  01D3  0084               	movwf	4
  2813  01D4  21FA               	fcall	PL2	;call to abstracted procedure
  2814  01D5  1903               	skipnz
  2815  01D6  0275               	subwf	JudgeKeyOldData@429,w
  2816  01D7  1C03               	skipc
  2817  01D8  29E1               	goto	L7
  2818  01D9  30FF               	movlw	255
  2819  01DA  0276               	subwf	JudgeKeyOldData@429+1,w
  2820  01DB  30FE               	movlw	254
  2821  01DC  1903               	skipnz
  2822  01DD  0275               	subwf	JudgeKeyOldData@429,w
  2823  01DE  1C03               	skipc
  2824  01DF  0008               	return
  2825  01E0  1003               	clrc
  2826  01E1                     L7:	
  2827  01E1  0D74               	rlf	JudgeKeyOldData@427,w
  2828  01E2  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2829  01E3  0084               	movwf	4
  2830  01E4  21FA               	fcall	PL2	;call to abstracted procedure
  2831  01E5  1903               	skipnz
  2832  01E6  0275               	subwf	JudgeKeyOldData@429,w
  2833  01E7  1C03               	skipc
  2834  01E8  29F1               	goto	L8
  2835  01E9  30FF               	movlw	255
  2836  01EA  0276               	subwf	JudgeKeyOldData@429+1,w
  2837  01EB  30FE               	movlw	254
  2838  01EC  1903               	skipnz
  2839  01ED  0275               	subwf	JudgeKeyOldData@429,w
  2840  01EE  1C03               	skipc
  2841  01EF  0008               	return
  2842  01F0  1003               	clrc
  2843  01F1                     L8:	
  2844  01F1  0D74               	rlf	JudgeKeyOldData@427,w
  2845  01F2  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2846  01F3  0084               	movwf	4
  2847  01F4  0872               	movf	JudgeKeyOldData@428,w
  2848  01F5  0080               	movwf	0
  2849  01F6  0A84               	incf	4,f
  2850  01F7  0873               	movf	JudgeKeyOldData@428+1,w
  2851  01F8  0080               	movwf	0
  2852  01F9  0008               	return
  2853  01FA                     __end_of_JudgeKeyOldData:	
  2854  01FA                     PL2:	
  2855  01FA  0800               	movf	0,w
  2856  01FB  00F5               	movwf	JudgeKeyOldData@429
  2857  01FC  0A84               	incf	4,f
  2858  01FD  0800               	movf	0,w
  2859  01FE  00F6               	movwf	JudgeKeyOldData@429+1
  2860  01FF  0872               	movf	JudgeKeyOldData@428,w
  2861  0200  02F5               	subwf	JudgeKeyOldData@429,f
  2862  0201  0873               	movf	JudgeKeyOldData@428+1,w
  2863  0202  1C03               	skipc
  2864  0203  03F6               	decf	JudgeKeyOldData@429+1,f
  2865  0204  02F6               	subwf	JudgeKeyOldData@429+1,f
  2866  0205  3000               	movlw	0
  2867  0206  0276               	subwf	JudgeKeyOldData@429+1,w
  2868  0207  3403               	retlw	3
  2869  0208                     __end_ofPL2:	
  2870                           
  2871                           	psect	text26
  2872  0339                     __ptext26:	
  2873 ;; *************** function _Isr_Timer *****************
  2874 ;; Defined at:
  2875 ;;		line 196 in file "C:\mcuproject\scm\zdt\E003_8122_SOP8_\E003_SC8P8122_sop8_\main.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 300/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1
  2889 ;;      Params:         0       0       0
  2890 ;;      Locals:         0       0       0
  2891 ;;      Temps:          2       0       0
  2892 ;;      Totals:         2       0       0
  2893 ;;Total ram usage:        2 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		Interrupt level 1
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           
  2903                           ;psect for function _Isr_Timer
  2904  0339                     _Isr_Timer:	
  2905                           
  2906                           ;main.c: 198: if(TMR2IF)
  2907  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2908  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2909  033B  1C8D               	btfss	13,1	;volatile
  2910  033C  2B46               	goto	i1l2554
  2911                           
  2912                           ;main.c: 199: {
  2913                           ;main.c: 200: TMR2IF = 0;
  2914  033D  108D               	bcf	13,1	;volatile
  2915                           
  2916                           ;main.c: 201: if(++MainTime >= 32)
  2917  033E  3020               	movlw	32
  2918  033F  0AB7               	incf	_MainTime,f	;volatile
  2919  0340  0237               	subwf	_MainTime,w	;volatile
  2920  0341  1C03               	skipc
  2921  0342  2B47               	goto	i1l482
  2922                           
  2923                           ;main.c: 202: {
  2924                           ;main.c: 203: MainTime = 0;
  2925  0343  01B7               	clrf	_MainTime	;volatile
  2926                           
  2927                           ;main.c: 204: B_MainLoop = 1;
  2928  0344  1778               	bsf	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
  2929  0345  2B47               	goto	i1l482
  2930  0346                     i1l2554:	
  2931                           
  2932                           ;main.c: 207: else
  2933                           ;main.c: 208: {
  2934                           ;main.c: 209: PIR1 = 0;
  2935  0346  018D               	clrf	13	;volatile
  2936  0347                     i1l482:	
  2937  0347  0871               	movf	??_Isr_Timer+1,w
  2938  0348  008A               	movwf	10
  2939  0349  0E70               	swapf	??_Isr_Timer^(0+-128),w
  2940  034A  0083               	movwf	3
  2941  034B  0EFE               	swapf	126,f
  2942  034C  0E7E               	swapf	126,w
  2943  034D  0009               	retfie
  2944  034E                     __end_of_Isr_Timer:	
  2945  007E                     btemp	set	126	;btemp
  2946  007E                     wtemp0	set	126
  2947                           
  2948                           	psect	intentry
  2949  0004                     __pintentry:	
  2950                           ;incstack = 0
  2951                           ; Regs used in _Isr_Timer: [wreg+status,2+status,0]
  2952                           
  2953  0004                     interrupt_function:	
  2954  007E                     saved_w	set	btemp
  2955  0004  00FE               	movwf	btemp
  2956  0005  0E03               	swapf	3,w
  2957  0006  00F0               	movwf	??_Isr_Timer
  2958  0007  080A               	movf	10,w
  2959  0008  00F1               	movwf	??_Isr_Timer+1
  2960  0009  2B39               	ljmp	_Isr_Timer


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      9      34
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SystemEnterSleep->_GetTouchKeyValue
    _SystemEnterSleep->_JudgeKeyOldData
    _SystemEnterSleep->_RKeyOldData
    _CheckTouchKey->_CheckOnceResult
    _TurnKeyFlags->_KeyClearIn
    _KeyClearIn->_KeyIsIn
    _KeyStopClear->_KeyClearOne
    _GetTouchKeyValue->_ClearResSum
    _CheckOnceResult->_KeyIsIn
    _CheckKeyOldValue->_JudgeKeyOldData
    _CheckKeyOldValue->_RKeyOldData

Critical Paths under _Isr_Timer in COMMON

    None.

Critical Paths under _main in BANK0

    _WorkSleep->_SystemEnterSleep
    _CheckTouchKey->_CheckOnceResult

Critical Paths under _Isr_Timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr_Timer in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4737
                      _CheckTouchKey
                        _Init_System
                          _KeyServer
                      _Refurbish_Sfr
                          _WorkSleep
                          _pwm02Stop
 ---------------------------------------------------------------------------------
 (1) _WorkSleep                                            0     0      0    1417
                      _Refurbish_Sfr
                   _SystemEnterSleep
 ---------------------------------------------------------------------------------
 (2) _SystemEnterSleep                                     9     9      0    1417
                                              0 BANK0      9     9      0
                        _ClearResSum
                   _GetTouchKeyValue
                    _JudgeKeyOldData
                        _RKeyOldData
 ---------------------------------------------------------------------------------
 (2) _Refurbish_Sfr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeyServer                                            0     0      0       0
                          _pwm02Init
                          _pwm02Stop
                           _pwm0Init
                           _pwm0Stop
                           _pwm2Init
                           _pwm2Stop
 ---------------------------------------------------------------------------------
 (2) _pwm2Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm2Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm0Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm0Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm02Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm02Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckTouchKey                                        0     0      0    3320
                   _CheckKeyOldValue
                    _CheckOnceResult
                     _CheckValidTime
                        _ClearResSum
                   _GetTouchKeyValue
                       _KeyStopClear
                       _TurnKeyFlags
 ---------------------------------------------------------------------------------
 (2) _TurnKeyFlags                                         0     0      0     286
                         _KeyClearIn
 ---------------------------------------------------------------------------------
 (3) _KeyClearIn                                           1     1      0     286
                                              4 COMMON     1     1      0
                        _KeyClearOne
                            _KeyIsIn
 ---------------------------------------------------------------------------------
 (2) _KeyStopClear                                         1     1      0     178
                                              3 COMMON     1     1      0
                        _KeyClearOne
 ---------------------------------------------------------------------------------
 (3) _GetTouchKeyValue                                     4     4      0     159
                                              3 COMMON     4     4      0
                        _ClearResSum
 ---------------------------------------------------------------------------------
 (4) _ClearResSum                                          1     1      0      45
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckValidTime                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CheckOnceResult                                     13    13      0    1507
                                              4 COMMON     4     4      0
                                              0 BANK0      9     9      0
                        _KeyClearOne
                            _KeyHave
                            _KeyIsIn
 ---------------------------------------------------------------------------------
 (3) _KeyHave                                              1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _KeyClearOne                                          1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckKeyOldValue                                     3     3      0    1145
                                              0 BANK0      3     3      0
                    _JudgeKeyOldData
                            _KeyIsIn
                        _RKeyOldData
 ---------------------------------------------------------------------------------
 (3) _RKeyOldData                                          5     3      2     294
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _KeyIsIn                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _JudgeKeyOldData                                      5     3      2     560
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Isr_Timer                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckTouchKey
     _CheckKeyOldValue
       _JudgeKeyOldData
       _KeyIsIn
       _RKeyOldData
     _CheckOnceResult
       _KeyClearOne
       _KeyHave
       _KeyIsIn
     _CheckValidTime
     _ClearResSum
     _GetTouchKeyValue
       _ClearResSum
     _KeyStopClear
       _KeyClearOne
     _TurnKeyFlags
       _KeyClearIn
         _KeyClearOne
         _KeyIsIn
   _Init_System
   _KeyServer
     _pwm02Init
     _pwm02Stop
     _pwm0Init
     _pwm0Stop
     _pwm2Init
     _pwm2Stop
   _Refurbish_Sfr
   _WorkSleep
     _Refurbish_Sfr
     _SystemEnterSleep
       _ClearResSum
       _GetTouchKeyValue
         _ClearResSum
       _JudgeKeyOldData
       _RKeyOldData
   _pwm02Stop

 _Isr_Timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0      2E       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jul 08 14:31:20 2025

                        pc 0002                         PL2 01FA                         PL4 00E4  
                       PL6 00F6                         PL8 02C1              ??_KeyClearOne 0072  
    __size_of_TurnKeyFlags 0026                         fsr 0004           ??_CheckValidTime 0072  
                      PL10 02CC                        PL12 031E                        PL14 0380  
                      l497 02E3                        l968 019A                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RB6 0036  
                      _PR2 0011                        fsr0 0004                        indf 0000  
        ?_GetTouchKeyValue 0070   __end_of_Table_KeyChannel 0396         ??_GetTouchKeyValue 0073  
                     l1018 029F                       l1037 026F                       l1055 0131  
                     l2104 01A8                       l1049 00FD                       l2034 03DE  
                     l2106 01B7                       l2036 03DF                       l2070 0175  
                     l2142 0396                       l2074 0179                       l2418 0324  
                     l2602 03B4                       l2606 03BB                       l2470 0223  
                     l2720 001B                       l2288 0376                       l2480 022F  
                     l2464 021E                       l2712 016A                       l2482 0231  
                     l2476 022A                       l2484 0234                       l2752 0099  
                     l2680 012A                       l2738 006C                       l2780 00DA  
                     l2772 00CB                       l2596 03B3                       l2828 02A4  
                     l2916 02E8                       l2782 00DD                       l2758 00A1  
                     l2776 00D6                       l2784 00DF                       l2856 030A  
                     l2796 023F                       l2884 0280                       l2876 027C  
                     l2892 0288                       l2886 0284                       l2896 02D5  
                     u1505 0072                       u1515 007D                       u1455 015A  
                     u1545 00B9                       u1475 0026                       u1495 005E  
                     _PIE1 000E                       _PIE2 0110                       _INTF 0059  
                     _RBIF 0058                       _PIR1 000D                       _PIR2 010F  
                     _TMR0 0081                       _main 02D4                       btemp 007E  
            ?_KeyStopClear 0070                       start 000A               _TurnKeyFlags 0289  
          __end_of_KeyIsIn 03D6            __end_of_KeyHave 03EC           ?_JudgeKeyOldData 0072  
            ??_Init_System 0072                      ?_main 0070                      _T2CON 0013  
 __end_of_SystemEnterSleep 0172                      i1l482 0347                      _PORTB 0006  
                    _TRISB 0005                      _PWMTH 0018                      _PWMTL 0017  
      __end_of_KeyClearOne 031E                 _KeyClearIn 03B3                _RKeyOldData 02AF  
           __pbitbssCOMMON 03C0                      pclath 000A                _ClearResSum 03DE  
               _KeyCounter 0032                 _KeyOldData 0024             ??_KeyStopClear 0073  
                    status 0003                      wtemp0 007E                 _KeyUpShake 0038  
          __initialization 000B               __end_of_main 02F0                     ??_main 0078  
         TurnKeyFlags@F415 002F           TurnKeyFlags@F416 002E        __end_of_Init_System 0362  
                   i1l2554 0346                     _INTCON 000B         __size_of_KeyServer 002E  
                   _OSCCON 0014                     _TMR2IF 0069                     _PWMD0L 0019  
                   _PWMD4L 001B                     _PWMT4L 001C                     _TRISB6 002E  
                ??_KeyIsIn 0072                  ??_KeyHave 0072         __size_of_Isr_Timer 0015  
__size_of_CheckKeyOldValue 002C                     _b_kclr 03C2                     _b_kerr 03C1  
              _KeyClearOne 030B           __end_of_pwm0Init 03B3           __end_of_pwm2Init 03CC  
         __end_of_pwm0Stop 03F7           __end_of_pwm2Stop 03F4              _Table_KeyFalg 038C  
            _Table_KeyDown 0394                     saved_w 007E     __size_of_CheckTouchKey 0027  
              ?_KeyClearIn 0070            _CheckOnceResult 0016    __end_of__initialization 0014  
       __size_of_WorkSleep 001B             __pcstackCOMMON 0070                _Init_System 034E  
               __end_ofPL2 0208                 __end_ofPL4 00F6                 __end_ofPL6 00FD  
               __end_ofPL8 02CC          __end_of_KeyServer 0236       __end_of_KeyStopClear 0380  
        __end_of_Isr_Timer 034E                 __pbssBANK0 0020             RKeyOldData@430 0076  
           RKeyOldData@431 0072         __size_of_pwm02Init 0012  __size_of_GetTouchKeyValue 004C  
       __size_of_pwm02Stop 0005              _CheckTouchKey 0262                 __pmaintext 02D4  
               __pintentry 0004        __size_of_KeyClearIn 000D          __end_of_WorkSleep 030B  
        ?_SystemEnterSleep 0070    __end_of_CheckOnceResult 00E4                    _KEYCON0 0111  
                  _KEYCON1 0112                    _KEYCON2 0113                    _PWM01DT 001F  
       ??_SystemEnterSleep 0039                    _B_OnOff 03C5                    _PWMD01H 001E  
   __size_of_Refurbish_Sfr 000F                    _PWMCON0 0015                    _PWMCON1 0016  
                  _PWMCON2 001D                 __stringtab 0386               ?_RKeyOldData 0072  
             ?_ClearResSum 0070             ClearResSum@388 0072                    _KeyData 0022  
                  _KeyFlag 007B                    _KeyIsIn 03CC                    _KeyHave 03E5  
                ?_pwm0Init 0070                  ?_pwm2Init 0070                  ?_pwm0Stop 0070  
                ?_pwm2Stop 0070             ?_CheckTouchKey 0070           _CheckKeyOldValue 0236  
                  _b_kover 03C4                    __ptext1 02F0                    __ptext2 00FD  
                  __ptext3 0396                    __ptext4 0208                    __ptext5 03F1  
                  __ptext6 03C0                    __ptext7 03F4                    __ptext8 03A5  
                  __ptext9 03EC   __size_of_JudgeKeyOldData 003C          __end_of_pwm02Init 0374  
        __end_of_pwm02Stop 03F1    __size_of_CheckValidTime 0015                    clrloop0 03D7  
     end_of_initialization 0014            KeyStopClear@385 0073                 ??_pwm0Init 0072  
               ??_pwm2Init 0072                 ??_pwm0Stop 0072                 ??_pwm2Stop 0072  
            _Refurbish_Sfr 0396               _KeyOldValue0 002C               _KeyOldValue1 002A  
             _KeyOldValue2 0028      __size_of_KeyStopClear 000C       CheckKeyOldValue@F410 0030  
             ?_KeyClearOne 0070               _KeyReference 0026           ?_CheckOnceResult 0070  
             ??_KeyClearIn 0074         CheckOnceResult@401 0041         CheckOnceResult@402 003E  
       CheckOnceResult@403 003B         CheckOnceResult@404 003F         CheckOnceResult@405 003C  
       CheckOnceResult@406 0039            ??_CheckTouchKey 0078               _KeyStopClear 0374  
         _GetTouchKeyValue 0172             ?_Refurbish_Sfr 0070               ?_Init_System 0070  
       __end_of_KeyClearIn 03C0              WorkSleep@time 0033                  _KeyMaxSub 0031  
                _KeyResSum 0079                __end_ofPL10 02D4                __end_ofPL12 0324  
              __end_ofPL14 0386        start_initialization 000B                  _KeyServer 0208  
                _Isr_Timer 0339          ??_JudgeKeyOldData 0074       __size_of_RKeyOldData 0012  
     __size_of_ClearResSum 0007              ?_TurnKeyFlags 0070                __pbssCOMMON 0079  
               ?_KeyServer 0070                  ___latbits 0000              __pcstackBANK0 0039  
                _WorkSleep 02F0             _CheckValidTime 0324   __end_of_CheckKeyOldValue 0262  
               ?_Isr_Timer 0070        KeyServer@KeyOldFlag 0034                   ?_KeyIsIn 0070  
                 ?_KeyHave 0070  __size_of_SystemEnterSleep 0075            ??_Refurbish_Sfr 0072  
           ??_TurnKeyFlags 0075          __size_of_pwm0Init 000E          __size_of_pwm2Init 000C  
        __size_of_pwm0Stop 0003          __size_of_pwm2Stop 0003                  _closeTime 0035  
                __pstrings 0386       __size_of_KeyClearOne 0013     __end_of_CheckValidTime 0339  
      GetTouchKeyValue@393 0076        GetTouchKeyValue@394 0075        GetTouchKeyValue@395 0073  
               ?_WorkSleep 0070                  _pwm02Init 0362                  _pwm02Stop 03EC  
                 _KEYDATAH 0117                   _KEYDATAL 0116          interrupt_function 0004  
                clear_ram0 03D6        CheckKeyOldValue@411 003B        CheckKeyOldValue@412 0039  
              __stringbase 038B       __size_of_Init_System 0014      __end_of_Table_KeyFalg 0394  
    __end_of_Table_KeyDown 0395   __end_of_GetTouchKeyValue 01BE            ?_CheckValidTime 0070  
              ??_KeyServer 0072                 ?_pwm02Init 0070                 ?_pwm02Stop 0070  
              ??_Isr_Timer 0070                   _MainTime 0037         JudgeKeyOldData@427 0074  
       JudgeKeyOldData@428 0072         JudgeKeyOldData@429 0075           __size_of_KeyIsIn 000A  
         __size_of_KeyHave 0007           _Table_KeyChannel 0395         __end_of__stringtab 038C  
          _JudgeKeyOldData 01BE                   _b_kover1 03C3                   _b_ksleep 03C0  
     __end_of_TurnKeyFlags 02AF                ??_WorkSleep 0077                   __ptext10 0362  
                 __ptext11 034E                   __ptext20 03E5                   __ptext12 0262  
                 __ptext21 030B                   __ptext13 0289                   __ptext22 0236  
                 __ptext14 03B3                   __ptext23 02AF                   __ptext15 0374  
                 __ptext24 03CC                   __ptext16 0172                   __ptext25 01BE  
                 __ptext17 03DE                   __ptext26 0339                   __ptext18 0324  
                 __ptext19 0016   __size_of_CheckOnceResult 00CE              __size_of_main 001C  
         _SystemEnterSleep 00FD                   _pwm0Init 03A5                   _pwm2Init 03C0  
                 _pwm0Stop 03F4      __end_of_CheckTouchKey 0289                   _pwm2Stop 03F1  
                 _workStep 0036                ??_pwm02Init 0072          ?_CheckKeyOldValue 0070  
              ??_pwm02Stop 0072              ??_RKeyOldData 0074                   intlevel1 0000  
            ??_ClearResSum 0072         ??_CheckKeyOldValue 0077                  stringcode 0386  
  __end_of_JudgeKeyOldData 01FA                 _B_MainLoop 03C6                 _OPTION_REG 0001  
      SystemEnterSleep@423 0041        SystemEnterSleep@424 003B        SystemEnterSleep@425 003F  
      SystemEnterSleep@426 003D                   stringdir 0386                   stringtab 0386  
           KeyClearOne@381 0072              KeyClearIn@383 0074         CheckValidTime@F419 0020  
      __end_of_RKeyOldData 02C1                 KeyIsIn@377 0072                 KeyIsIn@378 0073  
               KeyHave@390 0072      __end_of_Refurbish_Sfr 03A5        __end_of_ClearResSum 03E5  
        ??_CheckOnceResult 0074  
