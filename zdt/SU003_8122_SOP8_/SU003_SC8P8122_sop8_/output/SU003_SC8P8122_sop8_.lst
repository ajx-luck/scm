

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Aug 06 17:33:42 2025

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P8122AD
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	pa_nodes0,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	strings
    80  0391                     __pstrings:	
    81  0391                     stringtab:	
    82  0391                     __stringtab:	
    83  0391                     stringcode:	
    84                           ;	String table - string pointers are 1 byte each
    85                           
    86  0391                     stringdir:	
    87  0391  3003               	movlw	high stringdir
    88  0392  008A               	movwf	10
    89  0393  0804               	movf	4,w
    90  0394  0A84               	incf	4,f
    91  0395  0782               	addwf	2,f
    92  0396                     __stringbase:	
    93  0396  3400               	retlw	0
    94  0397                     __end_of__stringtab:	
    95  0397                     _Table_KeyFalg:	
    96  0397  3401               	retlw	1
    97  0398  3402               	retlw	2
    98  0399  3404               	retlw	4
    99  039A  3408               	retlw	8
   100  039B  3410               	retlw	16
   101  039C  3420               	retlw	32
   102  039D  3440               	retlw	64
   103  039E  3480               	retlw	128
   104  039F                     __end_of_Table_KeyFalg:	
   105  039F                     _Table_KeyDown:	
   106  039F  340A               	retlw	10
   107  03A0                     __end_of_Table_KeyDown:	
   108  03A0                     _Table_KeyChannel:	
   109  03A0  3444               	retlw	68
   110  03A1                     __end_of_Table_KeyChannel:	
   111  001F                     _PWM01DT	set	31
   112  001E                     _PWMD01H	set	30
   113  001D                     _PWMCON2	set	29
   114  001C                     _PWMT4L	set	28
   115  001B                     _PWMD4L	set	27
   116  0019                     _PWMD0L	set	25
   117  0018                     _PWMTH	set	24
   118  0017                     _PWMTL	set	23
   119  0016                     _PWMCON1	set	22
   120  0015                     _PWMCON0	set	21
   121  0014                     _OSCCON	set	20
   122  0013                     _T2CON	set	19
   123  0011                     _PR2	set	17
   124  0010                     _CMPCON1	set	16
   125  000F                     _CMPCON0	set	15
   126  000E                     _PIE1	set	14
   127  000D                     _PIR1	set	13
   128  000B                     _INTCON	set	11
   129  0006                     _PORTB	set	6
   130  0005                     _TRISB	set	5
   131  0001                     _OPTION_REG	set	1
   132  0069                     _TMR2IF	set	105
   133  0058                     _RBIF	set	88
   134  0059                     _INTF	set	89
   135  0030                     _RB0	set	48
   136  0031                     _RB1	set	49
   137  0032                     _RB2	set	50
   138  0036                     _RB6	set	54
   139  002E                     _TRISB6	set	46
   140  0081                     _TMR0	set	129
   141  0117                     _KEYDATAH	set	279
   142  0116                     _KEYDATAL	set	278
   143  0113                     _KEYCON2	set	275
   144  0112                     _KEYCON1	set	274
   145  0111                     _KEYCON0	set	273
   146  0110                     _PIE2	set	272
   147  010F                     _PIR2	set	271
   148                           
   149                           	psect	cinit
   150  000B                     start_initialization:	
   151                           ; #config settings
   152                           
   153  000B                     __initialization:	
   154  000B  3020               	movlw	low __pbssBANK0
   155                           
   156                           ; Clear objects allocated to BITCOMMON
   157  000C  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   158                           
   159                           ; Clear objects allocated to COMMON
   160  000D  01F9               	clrf	__pbssCOMMON& (0+127)
   161  000E  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   162  000F  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   163                           
   164                           ; Clear objects allocated to BANK0
   165  0010  1383               	bcf	3,7	;select IRP bank0
   166  0011  0084               	movwf	4
   167  0012  303A               	movlw	low (__pbssBANK0+26)
   168  0013  23E1               	fcall	clear_ram0
   169  0014                     end_of_initialization:	
   170                           ;End of C runtime variable initialization code
   171                           
   172  0014                     __end_of__initialization:	
   173  0014  0183               	clrf	3
   174  0015  2A60               	ljmp	_main	;jump to C main() function
   175                           
   176                           	psect	bitbssCOMMON
   177  03C0                     __pbitbssCOMMON:	
   178  03C0                     _b_ksleep:	
   179  03C0                     	ds	1
   180  03C1                     _b_kerr:	
   181  03C1                     	ds	1
   182  03C2                     _b_kclr:	
   183  03C2                     	ds	1
   184  03C3                     _b_kover1:	
   185  03C3                     	ds	1
   186  03C4                     _b_kover:	
   187  03C4                     	ds	1
   188  03C5                     _B_OnOff:	
   189  03C5                     	ds	1
   190  03C6                     _B_MainLoop:	
   191  03C6                     	ds	1
   192                           
   193                           	psect	bssCOMMON
   194  0079                     __pbssCOMMON:	
   195  0079                     _KeyResSum:	
   196  0079                     	ds	2
   197  007B                     _KeyFlag:	
   198  007B                     	ds	1
   199                           
   200                           	psect	bssBANK0
   201  0020                     __pbssBANK0:	
   202  0020                     CheckValidTime@F419:	
   203  0020                     	ds	2
   204  0022                     _KeyData:	
   205  0022                     	ds	2
   206  0024                     _KeyOldData:	
   207  0024                     	ds	2
   208  0026                     _KeyReference:	
   209  0026                     	ds	2
   210  0028                     _KeyOldValue2:	
   211  0028                     	ds	2
   212  002A                     _KeyOldValue1:	
   213  002A                     	ds	2
   214  002C                     _KeyOldValue0:	
   215  002C                     	ds	2
   216  002E                     TurnKeyFlags@F416:	
   217  002E                     	ds	1
   218  002F                     TurnKeyFlags@F415:	
   219  002F                     	ds	1
   220  0030                     CheckKeyOldValue@F410:	
   221  0030                     	ds	1
   222  0031                     _KeyMaxSub:	
   223  0031                     	ds	1
   224  0032                     _KeyCounter:	
   225  0032                     	ds	1
   226  0033                     WorkSleep@time:	
   227  0033                     	ds	1
   228  0034                     KeyServer@KeyOldFlag:	
   229  0034                     	ds	1
   230  0035                     _lvdTime:	
   231  0035                     	ds	1
   232  0036                     _closeTime:	
   233  0036                     	ds	1
   234  0037                     _workStep:	
   235  0037                     	ds	1
   236  0038                     _MainTime:	
   237  0038                     	ds	1
   238  0039                     _KeyUpShake:	
   239  0039                     	ds	1
   240                           
   241                           	psect	clrtext
   242  03E1                     clear_ram0:	
   243                           ;	Called with FSR containing the base address, and
   244                           ;	W with the last address+1
   245                           
   246  03E1  0064               	clrwdt	;clear the watchdog before getting into this loop
   247  03E2                     clrloop0:	
   248  03E2  0180               	clrf	0	;clear RAM location pointed to by FSR
   249  03E3  0A84               	incf	4,f	;increment pointer
   250  03E4  0604               	xorwf	4,w	;XOR with final address
   251  03E5  1903               	btfsc	3,2	;have we reached the end yet?
   252  03E6  3400               	retlw	0	;all done for this memory range, return
   253  03E7  0604               	xorwf	4,w	;XOR again to restore value
   254  03E8  2BE2               	goto	clrloop0	;do the next byte
   255                           
   256                           	psect	cstackCOMMON
   257  0070                     __pcstackCOMMON:	
   258  0070                     ?_pwm02Stop:	
   259  0070                     ?_pwm2Init:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_pwm0Stop:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_pwm0Init:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_pwm2Stop:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_pwm02Init:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_SystemEnterSleep:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_CheckTouchKey:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_Init_System:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_Refurbish_Sfr:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_KeyServer:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_checkLvd:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_Isr_Timer:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ??_Isr_Timer:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_WorkSleep:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_main:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_KeyIsIn:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_KeyClearOne:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_KeyClearIn:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_KeyStopClear:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_ClearResSum:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_KeyHave:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_GetTouchKeyValue:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_CheckOnceResult:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_CheckKeyOldValue:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_TurnKeyFlags:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_CheckValidTime:	
   335                           ; 1 bytes @ 0x0
   336                           
   337                           
   338                           ; 1 bytes @ 0x0
   339  0070                     	ds	2
   340  0072                     ??_pwm02Stop:	
   341  0072                     ??_pwm2Init:	
   342                           ; 1 bytes @ 0x2
   343                           
   344  0072                     ??_pwm0Stop:	
   345                           ; 1 bytes @ 0x2
   346                           
   347  0072                     ??_pwm0Init:	
   348                           ; 1 bytes @ 0x2
   349                           
   350  0072                     ??_pwm2Stop:	
   351                           ; 1 bytes @ 0x2
   352                           
   353  0072                     ??_pwm02Init:	
   354                           ; 1 bytes @ 0x2
   355                           
   356  0072                     ?_JudgeKeyOldData:	
   357                           ; 1 bytes @ 0x2
   358                           
   359  0072                     ?_RKeyOldData:	
   360                           ; 1 bytes @ 0x2
   361                           
   362  0072                     ??_Init_System:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ??_Refurbish_Sfr:	
   366                           ; 1 bytes @ 0x2
   367                           
   368  0072                     ??_KeyServer:	
   369                           ; 1 bytes @ 0x2
   370                           
   371  0072                     ??_checkLvd:	
   372                           ; 1 bytes @ 0x2
   373                           
   374  0072                     ??_KeyIsIn:	
   375                           ; 1 bytes @ 0x2
   376                           
   377  0072                     ??_KeyClearOne:	
   378                           ; 1 bytes @ 0x2
   379                           
   380  0072                     ??_ClearResSum:	
   381                           ; 1 bytes @ 0x2
   382                           
   383  0072                     ??_KeyHave:	
   384                           ; 1 bytes @ 0x2
   385                           
   386  0072                     ??_CheckValidTime:	
   387                           ; 1 bytes @ 0x2
   388                           
   389  0072                     KeyIsIn@377:	
   390                           ; 1 bytes @ 0x2
   391                           
   392  0072                     KeyClearOne@381:	
   393                           ; 1 bytes @ 0x2
   394                           
   395  0072                     ClearResSum@388:	
   396                           ; 1 bytes @ 0x2
   397                           
   398  0072                     KeyHave@390:	
   399                           ; 1 bytes @ 0x2
   400                           
   401  0072                     JudgeKeyOldData@428:	
   402                           ; 1 bytes @ 0x2
   403                           
   404  0072                     RKeyOldData@431:	
   405                           ; 2 bytes @ 0x2
   406                           
   407                           
   408                           ; 2 bytes @ 0x2
   409  0072                     	ds	1
   410  0073                     ??_KeyStopClear:	
   411  0073                     ??_GetTouchKeyValue:	
   412                           ; 1 bytes @ 0x3
   413                           
   414  0073                     KeyIsIn@378:	
   415                           ; 1 bytes @ 0x3
   416                           
   417  0073                     KeyStopClear@385:	
   418                           ; 1 bytes @ 0x3
   419                           
   420  0073                     GetTouchKeyValue@395:	
   421                           ; 1 bytes @ 0x3
   422                           
   423                           
   424                           ; 2 bytes @ 0x3
   425  0073                     	ds	1
   426  0074                     ??_JudgeKeyOldData:	
   427  0074                     ??_RKeyOldData:	
   428                           ; 1 bytes @ 0x4
   429                           
   430  0074                     ??_KeyClearIn:	
   431                           ; 1 bytes @ 0x4
   432                           
   433  0074                     ??_CheckOnceResult:	
   434                           ; 1 bytes @ 0x4
   435                           
   436  0074                     KeyClearIn@383:	
   437                           ; 1 bytes @ 0x4
   438                           
   439  0074                     JudgeKeyOldData@427:	
   440                           ; 1 bytes @ 0x4
   441                           
   442                           
   443                           ; 1 bytes @ 0x4
   444  0074                     	ds	1
   445  0075                     ??_TurnKeyFlags:	
   446  0075                     GetTouchKeyValue@394:	
   447                           ; 1 bytes @ 0x5
   448                           
   449  0075                     JudgeKeyOldData@429:	
   450                           ; 1 bytes @ 0x5
   451                           
   452                           
   453                           ; 2 bytes @ 0x5
   454  0075                     	ds	1
   455  0076                     GetTouchKeyValue@393:	
   456  0076                     RKeyOldData@430:	
   457                           ; 1 bytes @ 0x6
   458                           
   459                           
   460                           ; 1 bytes @ 0x6
   461  0076                     	ds	1
   462  0077                     ??_WorkSleep:	
   463  0077                     ??_CheckKeyOldValue:	
   464                           ; 1 bytes @ 0x7
   465                           
   466                           
   467                           ; 1 bytes @ 0x7
   468  0077                     	ds	1
   469  0078                     ??_CheckTouchKey:	
   470  0078                     ??_main:	
   471                           ; 1 bytes @ 0x8
   472                           
   473                           
   474                           	psect	cstackBANK0
   475  003A                     __pcstackBANK0:	
   476                           ; 1 bytes @ 0x8
   477                           
   478  003A                     ??_SystemEnterSleep:	
   479  003A                     CheckOnceResult@406:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  003A                     CheckKeyOldValue@412:	
   483                           ; 2 bytes @ 0x0
   484                           
   485                           
   486                           ; 2 bytes @ 0x0
   487  003A                     	ds	2
   488  003C                     CheckOnceResult@403:	
   489  003C                     CheckKeyOldValue@411:	
   490                           ; 1 bytes @ 0x2
   491                           
   492  003C                     SystemEnterSleep@424:	
   493                           ; 1 bytes @ 0x2
   494                           
   495                           
   496                           ; 2 bytes @ 0x2
   497  003C                     	ds	1
   498  003D                     CheckOnceResult@405:	
   499                           
   500                           ; 2 bytes @ 0x3
   501  003D                     	ds	1
   502  003E                     SystemEnterSleep@426:	
   503                           
   504                           ; 2 bytes @ 0x4
   505  003E                     	ds	1
   506  003F                     CheckOnceResult@402:	
   507                           
   508                           ; 1 bytes @ 0x5
   509  003F                     	ds	1
   510  0040                     CheckOnceResult@404:	
   511  0040                     SystemEnterSleep@425:	
   512                           ; 2 bytes @ 0x6
   513                           
   514                           
   515                           ; 2 bytes @ 0x6
   516  0040                     	ds	2
   517  0042                     CheckOnceResult@401:	
   518  0042                     SystemEnterSleep@423:	
   519                           ; 1 bytes @ 0x8
   520                           
   521                           
   522                           ; 1 bytes @ 0x8
   523  0042                     	ds	1
   524                           
   525                           	psect	maintext
   526  0260                     __pmaintext:	
   527 ;;
   528 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   529 ;;
   530 ;; *************** function _main *****************
   531 ;; Defined at:
   532 ;;		line 270 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   541 ;; Tracked objects:
   542 ;;		On entry : B00/0
   543 ;;		On exit  : 300/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1
   546 ;;      Params:         0       0       0
   547 ;;      Locals:         0       0       0
   548 ;;      Temps:          0       0       0
   549 ;;      Totals:         0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels required when called:    6
   552 ;; This function calls:
   553 ;;		_CheckTouchKey
   554 ;;		_Init_System
   555 ;;		_KeyServer
   556 ;;		_Refurbish_Sfr
   557 ;;		_WorkSleep
   558 ;;		_checkLvd
   559 ;;		_pwm02Stop
   560 ;; This function is called by:
   561 ;;		Startup code after reset
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           
   566                           ;psect for function _main
   567  0260                     _main:	
   568                           
   569                           ;main.c: 272: Init_System();
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   573  0260  2359               	fcall	_Init_System
   574                           
   575                           ;main.c: 273: checkLvd();
   576  0261  23F7               	fcall	_checkLvd
   577  0262                     l2929:	
   578                           
   579                           ;main.c: 275: {
   580                           ;main.c: 276: if(B_MainLoop)
   581  0262  1F78               	btfss	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
   582  0263  2A62               	goto	l2929
   583                           
   584                           ;main.c: 277: {
   585                           ;main.c: 278: B_MainLoop = 0;
   586  0264  1378               	bcf	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
   587  0265  0064               	clrwdt	;# 
   588                           
   589                           ;main.c: 281: CheckTouchKey();
   590  0266  2288               	fcall	_CheckTouchKey
   591                           
   592                           ;main.c: 283: Refurbish_Sfr();
   593  0267  23A1               	fcall	_Refurbish_Sfr
   594                           
   595                           ;main.c: 284: KeyServer();
   596  0268  2208               	fcall	_KeyServer
   597                           
   598                           ;main.c: 286: if(workStep == 0)
   599  0269  0837               	movf	_workStep,w
   600  026A  1D03               	btfss	3,2
   601  026B  2A70               	goto	l501
   602                           
   603                           ;main.c: 287: {
   604                           ;main.c: 288: RB1 = 0;
   605  026C  1086               	bcf	6,1	;volatile
   606                           
   607                           ;main.c: 289: pwm02Stop();
   608  026D  23FC               	fcall	_pwm02Stop
   609                           
   610                           ;main.c: 290: WorkSleep();
   611  026E  22FA               	fcall	_WorkSleep
   612                           
   613                           ;main.c: 291: }
   614  026F  2A62               	goto	l2929
   615  0270                     l501:	
   616                           
   617                           ;main.c: 292: else
   618                           ;main.c: 293: {
   619                           ;main.c: 294: if(CMPCON0 & 0x02)
   620  0270  1C8F               	btfss	15,1	;volatile
   621  0271  2A74               	goto	l2949
   622                           
   623                           ;main.c: 295: {
   624                           ;main.c: 296: lvdTime = 0;
   625  0272  01B5               	clrf	_lvdTime
   626                           
   627                           ;main.c: 297: }
   628  0273  2A7B               	goto	l2953
   629  0274                     l2949:	
   630                           
   631                           ;main.c: 298: else
   632                           ;main.c: 299: {
   633                           ;main.c: 300: if(++lvdTime > 200)
   634  0274  30C9               	movlw	201
   635  0275  0AB5               	incf	_lvdTime,f
   636  0276  0235               	subwf	_lvdTime,w
   637  0277  1C03               	skipc
   638  0278  2A7B               	goto	l2953
   639                           
   640                           ;main.c: 301: {
   641                           ;main.c: 302: lvdTime = 0;
   642  0279  01B5               	clrf	_lvdTime
   643                           
   644                           ;main.c: 303: workStep = 0;
   645  027A  01B7               	clrf	_workStep
   646  027B                     l2953:	
   647                           
   648                           ;main.c: 304: }
   649                           ;main.c: 305: }
   650                           ;main.c: 306: RB1 = 1;
   651  027B  1486               	bsf	6,1	;volatile
   652                           
   653                           ;main.c: 307: if(PORTB & 0x08)
   654  027C  1D86               	btfss	6,3	;volatile
   655  027D  2A80               	goto	l2959
   656                           
   657                           ;main.c: 308: {
   658                           ;main.c: 309: closeTime = 0;
   659  027E  01B6               	clrf	_closeTime
   660                           
   661                           ;main.c: 310: }
   662  027F  2A62               	goto	l2929
   663  0280                     l2959:	
   664                           
   665                           ;main.c: 311: else
   666                           ;main.c: 312: {
   667                           ;main.c: 313: if(++closeTime > 50)
   668  0280  3033               	movlw	51
   669  0281  0AB6               	incf	_closeTime,f
   670  0282  0236               	subwf	_closeTime,w
   671  0283  1C03               	skipc
   672  0284  2A62               	goto	l2929
   673                           
   674                           ;main.c: 314: {
   675                           ;main.c: 315: closeTime = 0;
   676  0285  01B6               	clrf	_closeTime
   677                           
   678                           ;main.c: 316: workStep = 0;
   679  0286  01B7               	clrf	_workStep
   680  0287  2A62               	goto	l2929
   681  0288                     __end_of_main:	
   682                           
   683                           	psect	text1
   684  02FA                     __ptext1:	
   685 ;; *************** function _WorkSleep *****************
   686 ;; Defined at:
   687 ;;		line 221 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 300/0
   698 ;;		On exit  : 300/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1
   701 ;;      Params:         0       0       0
   702 ;;      Locals:         0       0       0
   703 ;;      Temps:          0       0       0
   704 ;;      Totals:         0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    4
   708 ;; This function calls:
   709 ;;		_Refurbish_Sfr
   710 ;;		_SystemEnterSleep
   711 ;;		_checkLvd
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _WorkSleep
   719  02FA                     _WorkSleep:	
   720                           
   721                           ;main.c: 224: static unsigned char time;
   722                           ;main.c: 227: if(++time >= 125)
   723                           
   724                           ;incstack = 0
   725                           ; Regs used in _WorkSleep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   726  02FA  307D               	movlw	125
   727  02FB  0AB3               	incf	WorkSleep@time,f
   728  02FC  0233               	subwf	WorkSleep@time,w
   729  02FD  1C03               	skipc
   730  02FE  0008               	return
   731                           
   732                           ;main.c: 228: {
   733                           ;main.c: 229: time = 0;
   734  02FF  01B3               	clrf	WorkSleep@time
   735                           
   736                           ;main.c: 230: INTCON = 0;
   737  0300  018B               	clrf	11	;volatile
   738                           
   739                           ;main.c: 231: PIE1 = 0;
   740  0301  018E               	clrf	14	;volatile
   741                           
   742                           ;main.c: 232: PIE2 = 0;
   743  0302  1703               	bsf	3,6	;RP1=1, select bank2
   744  0303  0190               	clrf	16	;volatile
   745                           
   746                           ;main.c: 233: PIR1 = 0;
   747  0304  1303               	bcf	3,6	;RP1=0, select bank0
   748  0305  018D               	clrf	13	;volatile
   749                           
   750                           ;main.c: 234: PIR2 = 0;
   751  0306  1703               	bsf	3,6	;RP1=1, select bank2
   752  0307  018F               	clrf	15	;volatile
   753                           
   754                           ;main.c: 235: T2CON = 0;
   755  0308  1303               	bcf	3,6	;RP1=0, select bank0
   756  0309  0193               	clrf	19	;volatile
   757                           
   758                           ;main.c: 239: TRISB = 0x08;
   759  030A  3008               	movlw	8
   760  030B  0085               	movwf	5	;volatile
   761                           
   762                           ;main.c: 240: PORTB = 0;
   763  030C  0186               	clrf	6	;volatile
   764                           
   765                           ;main.c: 241: CMPCON1 = 0x00;
   766  030D  0190               	clrf	16	;volatile
   767                           
   768                           ;main.c: 242: CMPCON0 = 0x00;
   769  030E  018F               	clrf	15	;volatile
   770                           
   771                           ;main.c: 254: SystemEnterSleep();
   772  030F  20FD               	fcall	_SystemEnterSleep
   773                           
   774                           ;main.c: 255: if(RBIF)
   775  0310  1C0B               	btfss	11,0	;volatile
   776  0311  2B14               	goto	l2887
   777                           
   778                           ;main.c: 256: {
   779                           ;main.c: 257: RBIF = 0;
   780  0312  100B               	bcf	11,0	;volatile
   781                           
   782                           ;main.c: 258: PORTB;
   783  0313  0806               	movf	6,w	;volatile
   784  0314                     l2887:	
   785                           
   786                           ;main.c: 259: }
   787                           ;main.c: 261: Refurbish_Sfr();
   788  0314  23A1               	fcall	_Refurbish_Sfr
   789                           
   790                           ;main.c: 262: checkLvd();
   791  0315  2BF7               	ljmp	l2225
   792  0316                     __end_of_WorkSleep:	
   793                           
   794                           	psect	text2
   795  03F7                     __ptext2:	
   796 ;; *************** function _checkLvd *****************
   797 ;; Defined at:
   798 ;;		line 191 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;		None
   803 ;; Return value:  Size  Location     Type
   804 ;;                  1    wreg      void 
   805 ;; Registers used:
   806 ;;		wreg
   807 ;; Tracked objects:
   808 ;;		On entry : 300/0
   809 ;;		On exit  : 300/0
   810 ;;		Unchanged: 0/0
   811 ;; Data sizes:     COMMON   BANK0   BANK1
   812 ;;      Params:         0       0       0
   813 ;;      Locals:         0       0       0
   814 ;;      Temps:          0       0       0
   815 ;;      Totals:         0       0       0
   816 ;;Total ram usage:        0 bytes
   817 ;; Hardware stack levels used:    1
   818 ;; Hardware stack levels required when called:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_WorkSleep
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _checkLvd
   829  03F7                     _checkLvd:	
   830  03F7                     l2225:	
   831                           ;incstack = 0
   832                           ; Regs used in _checkLvd: [wreg]
   833                           
   834                           
   835                           ;main.c: 193: CMPCON1 = 0x28;
   836  03F7  3028               	movlw	40
   837  03F8  0090               	movwf	16	;volatile
   838                           
   839                           ;main.c: 194: CMPCON0 = 0xA8;
   840  03F9  30A8               	movlw	168
   841  03FA  008F               	movwf	15	;volatile
   842  03FB  0008               	return
   843  03FC                     __end_of_checkLvd:	
   844                           
   845                           	psect	text3
   846  00FD                     __ptext3:	
   847 ;; *************** function _SystemEnterSleep *****************
   848 ;; Defined at:
   849 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  425             2    6[BANK0 ] unsigned int 
   854 ;;  426             2    4[BANK0 ] unsigned int 
   855 ;;  424             2    2[BANK0 ] unsigned int 
   856 ;;  423             1    8[BANK0 ] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 300/0
   863 ;;		On exit  : 300/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMMON   BANK0   BANK1
   866 ;;      Params:         0       0       0
   867 ;;      Locals:         0       7       0
   868 ;;      Temps:          0       2       0
   869 ;;      Totals:         0       9       0
   870 ;;Total ram usage:        9 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    3
   873 ;; This function calls:
   874 ;;		_ClearResSum
   875 ;;		_GetTouchKeyValue
   876 ;;		_JudgeKeyOldData
   877 ;;		_RKeyOldData
   878 ;; This function is called by:
   879 ;;		_WorkSleep
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           
   884                           ;psect for function _SystemEnterSleep
   885  00FD                     _SystemEnterSleep:	
   886  00FD                     l1056:	
   887                           ;incstack = 0
   888                           ; Regs used in _SystemEnterSleep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   889                           
   890  00FD  0064               	clrwdt	;# 
   891  00FE  1683               	bsf	3,5	;RP0=1, select bank1
   892  00FF  1303               	bcf	3,6	;RP1=0, select bank1
   893  0100  0181               	clrf	1	;volatile
   894  0101  3007               	movlw	7
   895  0102  1283               	bcf	3,5	;RP0=0, select bank0
   896  0103  0481               	iorwf	1,f	;volatile
   897  0104  1581               	bsf	1,3	;volatile
   898  0105  0064               	clrwdt	;# 
   899  0106  300B               	movlw	11
   900  0107  1283               	bcf	3,5	;RP0=0, select bank0
   901  0108  1303               	bcf	3,6	;RP1=0, select bank0
   902  0109  0081               	movwf	1	;volatile
   903  010A  0064               	clrwdt	;# 
   904  010B  1283               	bcf	3,5	;RP0=0, select bank2
   905  010C  1703               	bsf	3,6	;RP1=1, select bank2
   906  010D  0191               	clrf	17	;volatile
   907  010E  0193               	clrf	19	;volatile
   908  010F  1303               	bcf	3,6	;RP1=0, select bank0
   909  0110  1305               	bcf	5,6	;volatile
   910  0111  1306               	bcf	6,6	;volatile
   911  0112  3072               	movlw	114
   912  0113  0094               	movwf	20	;volatile
   913  0114  0063               	sleep	;# 
   914  0115  0000               	nop	;# 
   915  0116  0064               	clrwdt	;# 
   916  0117  1283               	bcf	3,5	;RP0=0, select bank0
   917  0118  1303               	bcf	3,6	;RP1=0, select bank0
   918  0119  0094               	movwf	20	;volatile
   919  011A  3079               	movlw	121
   920  011B  1703               	bsf	3,6	;RP1=1, select bank2
   921  011C  0093               	movwf	19	;volatile
   922  011D  23E9               	fcall	_ClearResSum
   923  011E  1478               	bsf	_b_ksleep/(0+8),_b_ksleep& (0+7)	;volatile
   924  011F  2172               	fcall	_GetTouchKeyValue
   925  0120  1283               	bcf	3,5	;RP0=0, select bank0
   926  0121  1303               	bcf	3,6	;RP1=0, select bank0
   927  0122  01C2               	clrf	SystemEnterSleep@423
   928  0123  01BC               	clrf	SystemEnterSleep@424
   929  0124  0ABC               	incf	SystemEnterSleep@424,f
   930  0125  01BD               	clrf	SystemEnterSleep@424+1
   931  0126  180B               	btfsc	11,0	;volatile
   932  0127  292A               	goto	l2711
   933  0128  1C8B               	btfss	11,1	;volatile
   934  0129  2931               	goto	l1062
   935  012A                     l2711:	
   936  012A  23E9               	fcall	_ClearResSum
   937  012B  1283               	bcf	3,5	;RP0=0, select bank0
   938  012C  1303               	bcf	3,6	;RP1=0, select bank0
   939  012D  01B2               	clrf	_KeyCounter
   940  012E  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
   941  012F  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
   942  0130  0008               	return
   943  0131                     l1062:	
   944  0131  1C3C               	btfss	SystemEnterSleep@424,0
   945  0132  296A               	goto	l2743
   946  0133  1003               	clrc
   947  0134  0D42               	rlf	SystemEnterSleep@423,w
   948  0135  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
   949  0136  0084               	movwf	4
   950  0137  0800               	movf	0,w
   951  0138  00C0               	movwf	SystemEnterSleep@425
   952  0139  0A84               	incf	4,f
   953  013A  0800               	movf	0,w
   954  013B  00C1               	movwf	SystemEnterSleep@425+1
   955  013C  00BF               	movwf	SystemEnterSleep@426+1
   956  013D  0840               	movf	SystemEnterSleep@425,w
   957  013E  00BE               	movwf	SystemEnterSleep@426
   958  013F  0840               	movf	SystemEnterSleep@425,w
   959  0140  0441               	iorwf	SystemEnterSleep@425+1,w
   960  0141  1903               	btfsc	3,2
   961  0142  296A               	goto	l2743
   962  0143  0842               	movf	SystemEnterSleep@423,w
   963  0144  3E09               	addlw	low ((_Table_KeyDown-__stringbase)| (0+32768))
   964  0145  0084               	movwf	4
   965  0146  2391               	fcall	stringdir
   966  0147  07BE               	addwf	SystemEnterSleep@426,f
   967  0148  1803               	skipnc
   968  0149  0ABF               	incf	SystemEnterSleep@426+1,f
   969  014A  1003               	clrc
   970  014B  0D42               	rlf	SystemEnterSleep@423,w
   971  014C  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
   972  014D  0084               	movwf	4
   973  014E  1383               	bcf	3,7	;select IRP bank0
   974  014F  0800               	movf	0,w
   975  0150  00BA               	movwf	??_SystemEnterSleep
   976  0151  0A84               	incf	4,f
   977  0152  0800               	movf	0,w
   978  0153  00BB               	movwf	??_SystemEnterSleep+1
   979  0154  083F               	movf	SystemEnterSleep@426+1,w
   980  0155  023B               	subwf	??_SystemEnterSleep+1,w
   981  0156  1D03               	skipz
   982  0157  295A               	goto	u1475
   983  0158  083E               	movf	SystemEnterSleep@426,w
   984  0159  023A               	subwf	??_SystemEnterSleep,w
   985  015A                     u1475:	
   986  015A  1803               	btfsc	3,0
   987  015B  292A               	goto	l2711
   988  015C  0841               	movf	SystemEnterSleep@425+1,w
   989  015D  00F3               	movwf	JudgeKeyOldData@428+1
   990  015E  0840               	movf	SystemEnterSleep@425,w
   991  015F  00F2               	movwf	JudgeKeyOldData@428
   992  0160  0842               	movf	SystemEnterSleep@423,w
   993  0161  21BE               	fcall	_JudgeKeyOldData
   994  0162  1283               	bcf	3,5	;RP0=0, select bank0
   995  0163  1303               	bcf	3,6	;RP1=0, select bank0
   996  0164  0841               	movf	SystemEnterSleep@425+1,w
   997  0165  00F3               	movwf	RKeyOldData@431+1
   998  0166  0840               	movf	SystemEnterSleep@425,w
   999  0167  00F2               	movwf	RKeyOldData@431
  1000  0168  0842               	movf	SystemEnterSleep@423,w
  1001  0169  22D5               	fcall	_RKeyOldData
  1002  016A                     l2743:	
  1003  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1004  016B  1303               	bcf	3,6	;RP1=0, select bank0
  1005  016C  1003               	clrc
  1006  016D  0DBC               	rlf	SystemEnterSleep@424,f
  1007  016E  0DBD               	rlf	SystemEnterSleep@424+1,f
  1008  016F  0FC2               	incfsz	SystemEnterSleep@423,f
  1009  0170  28FD               	goto	l1056
  1010  0171  2931               	goto	l1062
  1011  0172                     __end_of_SystemEnterSleep:	
  1012                           
  1013                           	psect	text4
  1014  03A1                     __ptext4:	
  1015 ;; *************** function _Refurbish_Sfr *****************
  1016 ;; Defined at:
  1017 ;;		line 52 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 300/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1
  1031 ;;      Params:         0       0       0
  1032 ;;      Locals:         0       0       0
  1033 ;;      Temps:          0       0       0
  1034 ;;      Totals:         0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_WorkSleep
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function _Refurbish_Sfr
  1048  03A1                     _Refurbish_Sfr:	
  1049                           
  1050                           ;main.c: 55: PIE1 = 2;
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _Refurbish_Sfr: [wreg+status,2+status,0]
  1054  03A1  3002               	movlw	2
  1055  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  1056  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  1057  03A4  008E               	movwf	14	;volatile
  1058                           
  1059                           ;main.c: 56: PR2 = 250;
  1060  03A5  30FA               	movlw	250
  1061  03A6  0091               	movwf	17	;volatile
  1062                           
  1063                           ;main.c: 57: INTCON = 0XC0;
  1064  03A7  30C0               	movlw	192
  1065  03A8  008B               	movwf	11	;volatile
  1066                           
  1067                           ;main.c: 58: if (4 != T2CON)
  1068  03A9  3004               	movlw	4
  1069  03AA  0613               	xorwf	19,w	;volatile
  1070  03AB  1903               	btfsc	3,2
  1071  03AC  0008               	return
  1072                           
  1073                           ;main.c: 59: T2CON = 4;
  1074  03AD  3004               	movlw	4
  1075  03AE  0093               	movwf	19	;volatile
  1076  03AF  0008               	return
  1077  03B0                     __end_of_Refurbish_Sfr:	
  1078                           
  1079                           	psect	text5
  1080  0208                     __ptext5:	
  1081 ;; *************** function _KeyServer *****************
  1082 ;; Defined at:
  1083 ;;		line 66 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 300/0
  1094 ;;		On exit  : 300/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1
  1097 ;;      Params:         0       0       0
  1098 ;;      Locals:         0       0       0
  1099 ;;      Temps:          0       0       0
  1100 ;;      Totals:         0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    2
  1104 ;; This function calls:
  1105 ;;		_pwm02Init
  1106 ;;		_pwm02Stop
  1107 ;;		_pwm0Init
  1108 ;;		_pwm0Stop
  1109 ;;		_pwm2Init
  1110 ;;		_pwm2Stop
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _KeyServer
  1118  0208                     _KeyServer:	
  1119                           
  1120                           ;main.c: 68: static unsigned char KeyOldFlag = 0;
  1121                           ;main.c: 69: if (KeyFlag[0])
  1122                           
  1123                           ;incstack = 0
  1124                           ; Regs used in _KeyServer: [wreg+status,2+status,0+pclath+cstack]
  1125  0208  087B               	movf	_KeyFlag,w	;volatile
  1126  0209  1903               	btfsc	3,2
  1127  020A  2A32               	goto	l2503
  1128                           
  1129                           ;main.c: 70: {
  1130                           ;main.c: 71: if (KeyFlag[0] != KeyOldFlag)
  1131  020B  087B               	movf	_KeyFlag,w	;volatile
  1132  020C  0634               	xorwf	KeyServer@KeyOldFlag,w
  1133  020D  1903               	skipnz
  1134  020E  0008               	return
  1135                           
  1136                           ;main.c: 72: {
  1137                           ;main.c: 74: KeyOldFlag ^= KeyFlag[0];
  1138  020F  087B               	movf	_KeyFlag,w	;volatile
  1139  0210  06B4               	xorwf	KeyServer@KeyOldFlag,f
  1140                           
  1141                           ;main.c: 75: if ((KeyOldFlag & 0x1) && (KeyFlag[0] & 0x1))
  1142  0211  1834               	btfsc	KeyServer@KeyOldFlag,0
  1143  0212  1C7B               	btfss	_KeyFlag,0	;volatile
  1144  0213  2A2F               	goto	l2501
  1145                           
  1146                           ;main.c: 76: {
  1147                           ;main.c: 78: if(++workStep > 3)
  1148  0214  3004               	movlw	4
  1149  0215  0AB7               	incf	_workStep,f
  1150  0216  0237               	subwf	_workStep,w
  1151  0217  1803               	btfsc	3,0
  1152                           
  1153                           ;main.c: 79: {
  1154                           ;main.c: 80: workStep = 0;
  1155  0218  01B7               	clrf	_workStep
  1156                           
  1157                           ;main.c: 81: }
  1158                           ;main.c: 82: if(workStep == 0)
  1159  0219  0837               	movf	_workStep,w
  1160  021A  1D03               	btfss	3,2
  1161  021B  2A1E               	goto	l2485
  1162                           
  1163                           ;main.c: 83: {
  1164                           ;main.c: 84: pwm02Stop();
  1165  021C  23FC               	fcall	_pwm02Stop
  1166                           
  1167                           ;main.c: 85: }
  1168  021D  2A2F               	goto	l2501
  1169  021E                     l2485:	
  1170                           
  1171                           ;main.c: 86: else if(workStep == 1)
  1172  021E  0B37               	decfsz	_workStep,w
  1173  021F  2A23               	goto	l2491
  1174                           
  1175                           ;main.c: 87: {
  1176                           ;main.c: 88: pwm2Init();
  1177  0220  23CB               	fcall	_pwm2Init
  1178                           
  1179                           ;main.c: 89: pwm0Stop();
  1180  0221  2404               	fcall	_pwm0Stop
  1181                           
  1182                           ;main.c: 90: }
  1183  0222  2A2F               	goto	l2501
  1184  0223                     l2491:	
  1185                           
  1186                           ;main.c: 91: else if(workStep == 2)
  1187  0223  3002               	movlw	2
  1188  0224  0637               	xorwf	_workStep,w
  1189  0225  1D03               	btfss	3,2
  1190  0226  2A2A               	goto	l2497
  1191                           
  1192                           ;main.c: 92: {
  1193                           ;main.c: 93: pwm0Init();
  1194  0227  23B0               	fcall	_pwm0Init
  1195                           
  1196                           ;main.c: 94: pwm2Stop();
  1197  0228  2401               	fcall	_pwm2Stop
  1198                           
  1199                           ;main.c: 95: }
  1200  0229  2A2F               	goto	l2501
  1201  022A                     l2497:	
  1202                           
  1203                           ;main.c: 96: else if(workStep == 3)
  1204  022A  3003               	movlw	3
  1205  022B  0637               	xorwf	_workStep,w
  1206  022C  1D03               	btfss	3,2
  1207  022D  2A2F               	goto	l2501
  1208                           
  1209                           ;main.c: 97: {
  1210                           ;main.c: 98: pwm02Init();
  1211  022E  236D               	fcall	_pwm02Init
  1212  022F                     l2501:	
  1213                           
  1214                           ;main.c: 99: }
  1215                           ;main.c: 101: }
  1216                           ;main.c: 103: KeyOldFlag = KeyFlag[0];
  1217  022F  087B               	movf	_KeyFlag,w	;volatile
  1218  0230  00B4               	movwf	KeyServer@KeyOldFlag
  1219  0231  0008               	return
  1220  0232                     l2503:	
  1221                           
  1222                           ;main.c: 106: else
  1223                           ;main.c: 107: {
  1224                           ;main.c: 108: KeyOldFlag = 0;
  1225  0232  01B4               	clrf	KeyServer@KeyOldFlag
  1226  0233  0008               	return
  1227  0234                     __end_of_KeyServer:	
  1228                           
  1229                           	psect	text6
  1230  0401                     __ptext6:	
  1231 ;; *************** function _pwm2Stop *****************
  1232 ;; Defined at:
  1233 ;;		line 130 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		None
  1242 ;; Tracked objects:
  1243 ;;		On entry : 300/0
  1244 ;;		On exit  : 300/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1
  1247 ;;      Params:         0       0       0
  1248 ;;      Locals:         0       0       0
  1249 ;;      Temps:          0       0       0
  1250 ;;      Totals:         0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_KeyServer
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           
  1262                           ;psect for function _pwm2Stop
  1263  0401                     _pwm2Stop:	
  1264                           
  1265                           ;main.c: 132: PWMCON0 &= 0XEF;
  1266                           
  1267                           ;incstack = 0
  1268                           ; Regs used in _pwm2Stop: []
  1269  0401  1215               	bcf	21,4	;volatile
  1270                           
  1271                           ;main.c: 133: RB2 = 0;
  1272  0402  1106               	bcf	6,2	;volatile
  1273  0403  0008               	return
  1274  0404                     __end_of_pwm2Stop:	
  1275                           
  1276                           	psect	text7
  1277  03CB                     __ptext7:	
  1278 ;; *************** function _pwm2Init *****************
  1279 ;; Defined at:
  1280 ;;		line 112 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2
  1289 ;; Tracked objects:
  1290 ;;		On entry : 300/0
  1291 ;;		On exit  : 300/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1
  1294 ;;      Params:         0       0       0
  1295 ;;      Locals:         0       0       0
  1296 ;;      Temps:          0       0       0
  1297 ;;      Totals:         0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_KeyServer
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _pwm2Init
  1310  03CB                     _pwm2Init:	
  1311                           
  1312                           ;main.c: 115: TRISB |= 0x04;
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _pwm2Init: [wreg+status,2]
  1316  03CB  1505               	bsf	5,2	;volatile
  1317                           
  1318                           ;main.c: 116: PWMCON1 = 0B00000000;
  1319  03CC  0196               	clrf	22	;volatile
  1320                           
  1321                           ;main.c: 117: PWMTH = 0X00;
  1322  03CD  0198               	clrf	24	;volatile
  1323                           
  1324                           ;main.c: 118: PWMT4L = 100;
  1325  03CE  3064               	movlw	100
  1326  03CF  009C               	movwf	28	;volatile
  1327                           
  1328                           ;main.c: 121: PWMD4L = 80;
  1329  03D0  3050               	movlw	80
  1330  03D1  009B               	movwf	27	;volatile
  1331                           
  1332                           ;main.c: 124: PWMCON0 = 0X70;
  1333  03D2  3070               	movlw	112
  1334  03D3  0095               	movwf	21	;volatile
  1335                           
  1336                           ;main.c: 125: PWMCON2 =0X00;
  1337  03D4  019D               	clrf	29	;volatile
  1338                           
  1339                           ;main.c: 126: TRISB &= 0xFB;
  1340  03D5  1105               	bcf	5,2	;volatile
  1341  03D6  0008               	return
  1342  03D7                     __end_of_pwm2Init:	
  1343                           
  1344                           	psect	text8
  1345  0404                     __ptext8:	
  1346 ;; *************** function _pwm0Stop *****************
  1347 ;; Defined at:
  1348 ;;		line 155 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		None
  1357 ;; Tracked objects:
  1358 ;;		On entry : 300/0
  1359 ;;		On exit  : 300/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1
  1362 ;;      Params:         0       0       0
  1363 ;;      Locals:         0       0       0
  1364 ;;      Temps:          0       0       0
  1365 ;;      Totals:         0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    1
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_KeyServer
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           
  1377                           ;psect for function _pwm0Stop
  1378  0404                     _pwm0Stop:	
  1379                           
  1380                           ;main.c: 157: PWMCON0 &= 0XFE;
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _pwm0Stop: []
  1384  0404  1015               	bcf	21,0	;volatile
  1385                           
  1386                           ;main.c: 158: RB0 = 0;
  1387  0405  1006               	bcf	6,0	;volatile
  1388  0406  0008               	return
  1389  0407                     __end_of_pwm0Stop:	
  1390                           
  1391                           	psect	text9
  1392  03B0                     __ptext9:	
  1393 ;; *************** function _pwm0Init *****************
  1394 ;; Defined at:
  1395 ;;		line 137 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2
  1404 ;; Tracked objects:
  1405 ;;		On entry : 300/0
  1406 ;;		On exit  : 300/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1
  1409 ;;      Params:         0       0       0
  1410 ;;      Locals:         0       0       0
  1411 ;;      Temps:          0       0       0
  1412 ;;      Totals:         0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used:    1
  1415 ;; Hardware stack levels required when called:    1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_KeyServer
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _pwm0Init
  1425  03B0                     _pwm0Init:	
  1426                           
  1427                           ;main.c: 139: TRISB |= 0x01;
  1428                           
  1429                           ;incstack = 0
  1430                           ; Regs used in _pwm0Init: [wreg+status,2]
  1431  03B0  1405               	bsf	5,0	;volatile
  1432                           
  1433                           ;main.c: 140: PWMCON1 = 0B00000000;
  1434  03B1  0196               	clrf	22	;volatile
  1435                           
  1436                           ;main.c: 141: PWMTH = 0X00;
  1437  03B2  0198               	clrf	24	;volatile
  1438                           
  1439                           ;main.c: 142: PWMTL = 100;
  1440  03B3  3064               	movlw	100
  1441  03B4  0097               	movwf	23	;volatile
  1442                           
  1443                           ;main.c: 145: PWMD01H = 0;
  1444  03B5  019E               	clrf	30	;volatile
  1445                           
  1446                           ;main.c: 146: PWMD0L = 80;
  1447  03B6  3050               	movlw	80
  1448  03B7  0099               	movwf	25	;volatile
  1449                           
  1450                           ;main.c: 147: PWM01DT = 0X00;
  1451  03B8  019F               	clrf	31	;volatile
  1452                           
  1453                           ;main.c: 149: PWMCON0 = 0X61;
  1454  03B9  3061               	movlw	97
  1455  03BA  0095               	movwf	21	;volatile
  1456                           
  1457                           ;main.c: 150: PWMCON2 =0X00;
  1458  03BB  019D               	clrf	29	;volatile
  1459                           
  1460                           ;main.c: 151: TRISB &= 0xFE;
  1461  03BC  1005               	bcf	5,0	;volatile
  1462  03BD  0008               	return
  1463  03BE                     __end_of_pwm0Init:	
  1464                           
  1465                           	psect	text10
  1466  03FC                     __ptext10:	
  1467 ;; *************** function _pwm02Stop *****************
  1468 ;; Defined at:
  1469 ;;		line 184 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 300/0
  1480 ;;		On exit  : 300/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1
  1483 ;;      Params:         0       0       0
  1484 ;;      Locals:         0       0       0
  1485 ;;      Temps:          0       0       0
  1486 ;;      Totals:         0       0       0
  1487 ;;Total ram usage:        0 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_KeyServer
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _pwm02Stop
  1500  03FC                     _pwm02Stop:	
  1501                           
  1502                           ;main.c: 186: PWMCON0 &= 0XEE;
  1503                           
  1504                           ;incstack = 0
  1505                           ; Regs used in _pwm02Stop: [wreg+status,2+status,0]
  1506  03FC  30EE               	movlw	238
  1507  03FD  0595               	andwf	21,f	;volatile
  1508                           
  1509                           ;main.c: 187: PORTB &= 0xFA;
  1510  03FE  30FA               	movlw	250
  1511  03FF  0586               	andwf	6,f	;volatile
  1512  0400  0008               	return
  1513  0401                     __end_of_pwm02Stop:	
  1514                           
  1515                           	psect	text11
  1516  036D                     __ptext11:	
  1517 ;; *************** function _pwm02Init *****************
  1518 ;; Defined at:
  1519 ;;		line 162 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, status,2, status,0
  1528 ;; Tracked objects:
  1529 ;;		On entry : 300/0
  1530 ;;		On exit  : 300/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1
  1533 ;;      Params:         0       0       0
  1534 ;;      Locals:         0       0       0
  1535 ;;      Temps:          0       0       0
  1536 ;;      Totals:         0       0       0
  1537 ;;Total ram usage:        0 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    1
  1540 ;; This function calls:
  1541 ;;		Nothing
  1542 ;; This function is called by:
  1543 ;;		_KeyServer
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           
  1548                           ;psect for function _pwm02Init
  1549  036D                     _pwm02Init:	
  1550                           
  1551                           ;main.c: 164: TRISB |= 0x05;
  1552                           
  1553                           ;incstack = 0
  1554                           ; Regs used in _pwm02Init: [wreg+status,2+status,0]
  1555  036D  3005               	movlw	5
  1556  036E  0485               	iorwf	5,f	;volatile
  1557                           
  1558                           ;main.c: 165: PWMCON1 = 0B00000000;
  1559  036F  0196               	clrf	22	;volatile
  1560                           
  1561                           ;main.c: 166: PWMTH = 0X00;
  1562  0370  0198               	clrf	24	;volatile
  1563                           
  1564                           ;main.c: 167: PWMTL = 100;
  1565  0371  3064               	movlw	100
  1566  0372  0097               	movwf	23	;volatile
  1567                           
  1568                           ;main.c: 168: PWMT4L = 100;
  1569  0373  009C               	movwf	28	;volatile
  1570                           
  1571                           ;main.c: 171: PWMD4L = 94;
  1572  0374  305E               	movlw	94
  1573  0375  009B               	movwf	27	;volatile
  1574                           
  1575                           ;main.c: 174: PWMD01H = 0;
  1576  0376  019E               	clrf	30	;volatile
  1577                           
  1578                           ;main.c: 175: PWMD0L = 94;
  1579  0377  0099               	movwf	25	;volatile
  1580                           
  1581                           ;main.c: 176: PWM01DT = 0X00;
  1582  0378  019F               	clrf	31	;volatile
  1583                           
  1584                           ;main.c: 178: PWMCON0 = 0X71;
  1585  0379  3071               	movlw	113
  1586  037A  0095               	movwf	21	;volatile
  1587                           
  1588                           ;main.c: 179: PWMCON2 =0X00;
  1589  037B  019D               	clrf	29	;volatile
  1590                           
  1591                           ;main.c: 180: TRISB &= 0xFA;
  1592  037C  30FA               	movlw	250
  1593  037D  0585               	andwf	5,f	;volatile
  1594  037E  0008               	return
  1595  037F                     __end_of_pwm02Init:	
  1596                           
  1597                           	psect	text12
  1598  0359                     __ptext12:	
  1599 ;; *************** function _Init_System *****************
  1600 ;; Defined at:
  1601 ;;		line 23 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2
  1610 ;; Tracked objects:
  1611 ;;		On entry : B00/0
  1612 ;;		On exit  : 300/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1
  1615 ;;      Params:         0       0       0
  1616 ;;      Locals:         0       0       0
  1617 ;;      Temps:          0       0       0
  1618 ;;      Totals:         0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _Init_System
  1631  0359                     _Init_System:	
  1632                           
  1633                           ;incstack = 0
  1634                           ; Regs used in _Init_System: [wreg+status,2]
  1635  0359  0000               	nop	;# 
  1636  035A  0064               	clrwdt	;# 
  1637                           
  1638                           ;main.c: 27: INTCON = 0;
  1639  035B  018B               	clrf	11	;volatile
  1640                           
  1641                           ;main.c: 28: OSCCON = 0X72;
  1642  035C  3072               	movlw	114
  1643  035D  1283               	bcf	3,5	;RP0=0, select bank0
  1644  035E  1303               	bcf	3,6	;RP1=0, select bank0
  1645  035F  0094               	movwf	20	;volatile
  1646                           
  1647                           ;main.c: 29: OPTION_REG = 0;
  1648  0360  0181               	clrf	1	;volatile
  1649                           
  1650                           ;main.c: 34: TRISB = 0x08;
  1651  0361  3008               	movlw	8
  1652  0362  0085               	movwf	5	;volatile
  1653                           
  1654                           ;main.c: 35: PORTB = 0;
  1655  0363  0186               	clrf	6	;volatile
  1656                           
  1657                           ;main.c: 37: PIE1 = 2;
  1658  0364  3002               	movlw	2
  1659  0365  008E               	movwf	14	;volatile
  1660                           
  1661                           ;main.c: 38: PR2 = 250;
  1662  0366  30FA               	movlw	250
  1663  0367  0091               	movwf	17	;volatile
  1664                           
  1665                           ;main.c: 39: T2CON = 4;
  1666  0368  3004               	movlw	4
  1667  0369  0093               	movwf	19	;volatile
  1668                           
  1669                           ;main.c: 41: INTCON = 0XC0;
  1670  036A  30C0               	movlw	192
  1671  036B  008B               	movwf	11	;volatile
  1672  036C  0008               	return
  1673  036D                     __end_of_Init_System:	
  1674                           
  1675                           	psect	text13
  1676  0288                     __ptext13:	
  1677 ;; *************** function _CheckTouchKey *****************
  1678 ;; Defined at:
  1679 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1
  1693 ;;      Params:         0       0       0
  1694 ;;      Locals:         0       0       0
  1695 ;;      Temps:          0       0       0
  1696 ;;      Totals:         0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    5
  1700 ;; This function calls:
  1701 ;;		_CheckKeyOldValue
  1702 ;;		_CheckOnceResult
  1703 ;;		_CheckValidTime
  1704 ;;		_ClearResSum
  1705 ;;		_GetTouchKeyValue
  1706 ;;		_KeyStopClear
  1707 ;;		_TurnKeyFlags
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           
  1714                           ;psect for function _CheckTouchKey
  1715  0288                     _CheckTouchKey:	
  1716                           
  1717                           ;incstack = 0
  1718                           ; Regs used in _CheckTouchKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1719  0288  1A78               	btfsc	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1720  0289  2A95               	goto	l1044
  1721  028A  2172               	fcall	_GetTouchKeyValue
  1722  028B  3008               	movlw	8
  1723  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1724  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1725  028E  0AB2               	incf	_KeyCounter,f
  1726  028F  0232               	subwf	_KeyCounter,w
  1727  0290  1C03               	skipc
  1728  0291  2AAE               	goto	l2925
  1729  0292  01B2               	clrf	_KeyCounter
  1730  0293  1678               	bsf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1731  0294  2AAE               	goto	l2925
  1732  0295                     l1044:	
  1733  0295  19F8               	btfsc	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1734  0296  2AAA               	goto	l2919
  1735  0297  2016               	fcall	_CheckOnceResult
  1736  0298  22AF               	fcall	_TurnKeyFlags
  1737  0299  15F8               	bsf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1738  029A  18F8               	btfsc	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  1739  029B  2AA2               	goto	l2909
  1740  029C  3002               	movlw	2
  1741  029D  1283               	bcf	3,5	;RP0=0, select bank0
  1742  029E  1303               	bcf	3,6	;RP1=0, select bank0
  1743  029F  0232               	subwf	_KeyCounter,w
  1744  02A0  1C03               	skipc
  1745  02A1  2AA6               	goto	l2917
  1746  02A2                     l2909:	
  1747  02A2  237F               	fcall	_KeyStopClear
  1748  02A3  10F8               	bcf	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  1749  02A4  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1750  02A5  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1751  02A6                     l2917:	
  1752  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1753  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1754  02A8  01B2               	clrf	_KeyCounter
  1755  02A9  2AAE               	goto	l2925
  1756  02AA                     l2919:	
  1757  02AA  2234               	fcall	_CheckKeyOldValue
  1758  02AB  23E9               	fcall	_ClearResSum
  1759  02AC  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1760  02AD  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1761  02AE                     l2925:	
  1762  02AE  2B2F               	ljmp	l2439	;# 
  1763  02AF                     __end_of_CheckTouchKey:	
  1764                           
  1765                           	psect	text14
  1766  02AF                     __ptext14:	
  1767 ;; *************** function _TurnKeyFlags *****************
  1768 ;; Defined at:
  1769 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1
  1783 ;;      Params:         0       0       0
  1784 ;;      Locals:         0       0       0
  1785 ;;      Temps:          0       0       0
  1786 ;;      Totals:         0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; Hardware stack levels required when called:    4
  1790 ;; This function calls:
  1791 ;;		_KeyClearIn
  1792 ;; This function is called by:
  1793 ;;		_CheckTouchKey
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _TurnKeyFlags
  1799  02AF                     _TurnKeyFlags:	
  1800                           
  1801                           ;incstack = 0
  1802                           ; Regs used in _TurnKeyFlags: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1803  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1804  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1805  02B1  0822               	movf	_KeyData,w	;volatile
  1806  02B2  1903               	btfsc	3,2
  1807  02B3  2ACA               	goto	l2859
  1808  02B4  01AE               	clrf	TurnKeyFlags@F416
  1809  02B5  0822               	movf	_KeyData,w	;volatile
  1810  02B6  0624               	xorwf	_KeyOldData,w	;volatile
  1811  02B7  1D03               	skipz
  1812  02B8  2AC5               	goto	l1025
  1813  02B9  3002               	movlw	2
  1814  02BA  0AAF               	incf	TurnKeyFlags@F415,f
  1815  02BB  022F               	subwf	TurnKeyFlags@F415,w
  1816  02BC  1C03               	skipc
  1817  02BD  0008               	return
  1818  02BE  01AF               	clrf	TurnKeyFlags@F415
  1819  02BF  0822               	movf	_KeyData,w	;volatile
  1820  02C0  00FB               	movwf	_KeyFlag	;volatile
  1821  02C1  1978               	btfsc	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1822  02C2  0008               	return
  1823  02C3  1578               	bsf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1824  02C4  2BBE               	ljmp	l2627
  1825  02C5                     l1025:	
  1826  02C5  1178               	bcf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1827  02C6  0822               	movf	_KeyData,w	;volatile
  1828  02C7  00A4               	movwf	_KeyOldData	;volatile
  1829  02C8  01AF               	clrf	TurnKeyFlags@F415
  1830  02C9  0008               	return
  1831  02CA                     l2859:	
  1832  02CA  01AF               	clrf	TurnKeyFlags@F415
  1833  02CB  01A4               	clrf	_KeyOldData	;volatile
  1834  02CC  3002               	movlw	2
  1835  02CD  0AAE               	incf	TurnKeyFlags@F416,f
  1836  02CE  022E               	subwf	TurnKeyFlags@F416,w
  1837  02CF  1C03               	skipc
  1838  02D0  0008               	return
  1839  02D1  01AE               	clrf	TurnKeyFlags@F416
  1840  02D2  01FB               	clrf	_KeyFlag	;volatile
  1841  02D3  1178               	bcf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1842  02D4  0008               	return
  1843  02D5                     __end_of_TurnKeyFlags:	
  1844                           
  1845                           	psect	text15
  1846  03BE                     __ptext15:	
  1847 ;; *************** function _KeyClearIn *****************
  1848 ;; Defined at:
  1849 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  383             1    4[COMMON] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 300/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1
  1863 ;;      Params:         0       0       0
  1864 ;;      Locals:         1       0       0
  1865 ;;      Temps:          0       0       0
  1866 ;;      Totals:         1       0       0
  1867 ;;Total ram usage:        1 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    3
  1870 ;; This function calls:
  1871 ;;		_KeyClearOne
  1872 ;;		_KeyIsIn
  1873 ;; This function is called by:
  1874 ;;		_TurnKeyFlags
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _KeyClearIn
  1880  03BE                     _KeyClearIn:	
  1881  03BE                     l2627:	
  1882                           ;incstack = 0
  1883                           ; Regs used in _KeyClearIn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1884                           
  1885  03BE  01F4               	clrf	KeyClearIn@383
  1886  03BF                     l2633:	
  1887  03BF  0874               	movf	KeyClearIn@383,w
  1888  03C0  23D7               	fcall	_KeyIsIn
  1889  03C1  3A00               	xorlw	0
  1890  03C2  1D03               	skipz
  1891  03C3  2BC6               	goto	l2637
  1892  03C4  0874               	movf	KeyClearIn@383,w
  1893  03C5  2316               	fcall	_KeyClearOne
  1894  03C6                     l2637:	
  1895  03C6  0AF4               	incf	KeyClearIn@383,f
  1896  03C7  0874               	movf	KeyClearIn@383,w
  1897  03C8  1D03               	btfss	3,2
  1898  03C9  0008               	return
  1899  03CA  2BBF               	goto	l2633
  1900  03CB                     __end_of_KeyClearIn:	
  1901                           
  1902                           	psect	text16
  1903  037F                     __ptext16:	
  1904 ;; *************** function _KeyStopClear *****************
  1905 ;; Defined at:
  1906 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;		None
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;  385             1    3[COMMON] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMMON   BANK0   BANK1
  1920 ;;      Params:         0       0       0
  1921 ;;      Locals:         1       0       0
  1922 ;;      Temps:          0       0       0
  1923 ;;      Totals:         1       0       0
  1924 ;;Total ram usage:        1 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    2
  1927 ;; This function calls:
  1928 ;;		_KeyClearOne
  1929 ;; This function is called by:
  1930 ;;		_CheckTouchKey
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           
  1935                           ;psect for function _KeyStopClear
  1936  037F                     _KeyStopClear:	
  1937                           
  1938                           ;incstack = 0
  1939                           ; Regs used in _KeyStopClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1940  037F  01FB               	clrf	_KeyFlag	;volatile
  1941  0380  01F3               	clrf	KeyStopClear@385
  1942  0381                     l2309:	
  1943  0381  1003               	clrc
  1944  0382  0D73               	rlf	KeyStopClear@385,w
  1945  0383  238B               	fcall	PL14	;call to abstracted procedure
  1946  0384  0873               	movf	KeyStopClear@385,w
  1947  0385  2316               	fcall	_KeyClearOne
  1948  0386  0AF3               	incf	KeyStopClear@385,f
  1949  0387  0873               	movf	KeyStopClear@385,w
  1950  0388  1D03               	btfss	3,2
  1951  0389  0008               	return
  1952  038A  2B81               	goto	l2309
  1953  038B                     __end_of_KeyStopClear:	
  1954  038B                     PL14:	
  1955  038B  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  1956  038C  0084               	movwf	4
  1957  038D  0180               	clrf	0
  1958  038E  0A84               	incf	4,f
  1959  038F  0180               	clrf	0
  1960  0390  0008               	return
  1961  0391                     __end_ofPL14:	
  1962                           
  1963                           	psect	text17
  1964  0172                     __ptext17:	
  1965 ;; *************** function _GetTouchKeyValue *****************
  1966 ;; Defined at:
  1967 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  395             2    3[COMMON] unsigned int 
  1972 ;;  393             1    6[COMMON] unsigned char 
  1973 ;;  394             1    5[COMMON] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/200
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1
  1983 ;;      Params:         0       0       0
  1984 ;;      Locals:         4       0       0
  1985 ;;      Temps:          0       0       0
  1986 ;;      Totals:         4       0       0
  1987 ;;Total ram usage:        4 bytes
  1988 ;; Hardware stack levels used:    1
  1989 ;; Hardware stack levels required when called:    2
  1990 ;; This function calls:
  1991 ;;		_ClearResSum
  1992 ;; This function is called by:
  1993 ;;		_CheckTouchKey
  1994 ;;		_SystemEnterSleep
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function _GetTouchKeyValue
  2000  0172                     _GetTouchKeyValue:	
  2001                           
  2002                           ;incstack = 0
  2003                           ; Regs used in _GetTouchKeyValue: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2004  0172  01F6               	clrf	GetTouchKeyValue@393
  2005  0173  01F5               	clrf	GetTouchKeyValue@394
  2006  0174  0AF5               	incf	GetTouchKeyValue@394,f
  2007  0175                     l2089:	
  2008  0175  1C78               	btfss	_b_ksleep/(0+8),_b_ksleep& (0+7)	;volatile
  2009  0176  2979               	goto	l2093
  2010  0177  1C75               	btfss	GetTouchKeyValue@394,0
  2011  0178  29B7               	goto	l2125
  2012  0179                     l2093:	
  2013  0179  1283               	bcf	3,5	;RP0=0, select bank2
  2014  017A  1703               	bsf	3,6	;RP1=1, select bank2
  2015  017B  0191               	clrf	17	;volatile
  2016  017C  0192               	clrf	18	;volatile
  2017  017D  3079               	movlw	121
  2018  017E  0093               	movwf	19	;volatile
  2019  017F  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0180  1305               	bcf	5,6	;volatile
  2021  0181  1306               	bcf	6,6	;volatile
  2022  0182  2983               	nop2	;2 cycle nop
  2023  0183  2984               	nop2	;2 cycle nop
  2024  0184  2985               	nop2	;2 cycle nop
  2025  0185  2986               	nop2	;2 cycle nop
  2026  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0188  1705               	bsf	5,6	;volatile
  2029  0189  3002               	movlw	2
  2030  018A  1703               	bsf	3,6	;RP1=1, select bank2
  2031  018B  0091               	movwf	17	;volatile
  2032  018C  0876               	movf	GetTouchKeyValue@393,w
  2033  018D  3E0A               	addlw	low ((_Table_KeyChannel-__stringbase)| (0+32768))
  2034  018E  0084               	movwf	4
  2035  018F  2391               	fcall	stringdir
  2036  0190  0092               	movwf	18	;volatile
  2037  0191  2992               	nop2	;2 cycle nop
  2038  0192  2993               	nop2	;2 cycle nop
  2039  0193  1283               	bcf	3,5	;RP0=0, select bank2
  2040  0194  1703               	bsf	3,6	;RP1=1, select bank2
  2041  0195  1411               	bsf	17,0	;volatile
  2042  0196  3040               	movlw	64
  2043  0197  00F3               	movwf	GetTouchKeyValue@395
  2044  0198  301F               	movlw	31
  2045  0199  00F4               	movwf	GetTouchKeyValue@395+1
  2046  019A                     l975:	
  2047  019A  1B91               	btfsc	17,7	;volatile
  2048  019B  29A8               	goto	l2123
  2049  019C  3001               	movlw	1
  2050  019D  02F3               	subwf	GetTouchKeyValue@395,f
  2051  019E  1C03               	skipc
  2052  019F  03F4               	decf	GetTouchKeyValue@395+1,f
  2053  01A0  0873               	movf	GetTouchKeyValue@395,w
  2054  01A1  0474               	iorwf	GetTouchKeyValue@395+1,w
  2055  01A2  1D03               	btfss	3,2
  2056  01A3  299A               	goto	l975
  2057  01A4  30FF               	movlw	255
  2058  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2059  01A6  00B2               	movwf	_KeyCounter
  2060  01A7  2BE9               	ljmp	l2053
  2061  01A8                     l2123:	
  2062  01A8  1003               	clrc
  2063  01A9  0D76               	rlf	GetTouchKeyValue@393,w
  2064  01AA  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  2065  01AB  0084               	movwf	4
  2066  01AC  0816               	movf	22,w	;volatile
  2067  01AD  0780               	addwf	0,f
  2068  01AE  0F84               	incfsz	4,f
  2069  01AF  0800               	movf	0,w
  2070  01B0  1803               	skipnc
  2071  01B1  0A00               	incf	0,w
  2072  01B2  00FF               	movwf	127
  2073  01B3  0817               	movf	23,w	;volatile
  2074  01B4  077F               	addwf	127,w
  2075  01B5  0080               	movwf	0
  2076  01B6  0384               	decf	4,f
  2077  01B7                     l2125:	
  2078  01B7  1003               	clrc
  2079  01B8  0DF5               	rlf	GetTouchKeyValue@394,f
  2080  01B9  0AF6               	incf	GetTouchKeyValue@393,f
  2081  01BA  1903               	btfsc	3,2
  2082  01BB  2975               	goto	l2089
  2083  01BC  1078               	bcf	_b_ksleep/(0+8),_b_ksleep& (0+7)	;# 
  2084  01BD  0008               	return
  2085  01BE                     __end_of_GetTouchKeyValue:	
  2086                           
  2087                           	psect	text18
  2088  03E9                     __ptext18:	
  2089 ;; *************** function _ClearResSum *****************
  2090 ;; Defined at:
  2091 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  388             1    2[COMMON] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/200
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1
  2105 ;;      Params:         0       0       0
  2106 ;;      Locals:         1       0       0
  2107 ;;      Temps:          0       0       0
  2108 ;;      Totals:         1       0       0
  2109 ;;Total ram usage:        1 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_GetTouchKeyValue
  2116 ;;		_CheckTouchKey
  2117 ;;		_SystemEnterSleep
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _ClearResSum
  2123  03E9                     _ClearResSum:	
  2124  03E9                     l2053:	
  2125                           ;incstack = 0
  2126                           ; Regs used in _ClearResSum: [wreg-fsr0h+status,2+status,0]
  2127                           
  2128  03E9  01F2               	clrf	ClearResSum@388
  2129  03EA                     l2055:	
  2130  03EA  1003               	clrc
  2131  03EB  0D72               	rlf	ClearResSum@388,w
  2132  03EC  238B               	fcall	PL14	;call to abstracted procedure
  2133  03ED  0FF2               	incfsz	ClearResSum@388,f
  2134  03EE  0008               	return
  2135  03EF  2BEA               	goto	l2055
  2136  03F0                     __end_of_ClearResSum:	
  2137                           
  2138                           	psect	text19
  2139  032F                     __ptext19:	
  2140 ;; *************** function _CheckValidTime *****************
  2141 ;; Defined at:
  2142 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1
  2156 ;;      Params:         0       0       0
  2157 ;;      Locals:         0       0       0
  2158 ;;      Temps:          0       0       0
  2159 ;;      Totals:         0       0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    1
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_CheckTouchKey
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _CheckValidTime
  2172  032F                     _CheckValidTime:	
  2173  032F                     l2439:	
  2174                           ;incstack = 0
  2175                           ; Regs used in _CheckValidTime: [wreg+status,2+status,0]
  2176                           
  2177  032F  087B               	movf	_KeyFlag,w	;volatile
  2178  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0332  1903               	btfsc	3,2
  2181  0333  2B41               	goto	L1
  2182  0334  0AA0               	incf	CheckValidTime@F419,f
  2183  0335  1903               	skipnz
  2184  0336  0AA1               	incf	CheckValidTime@F419+1,f
  2185  0337  303A               	movlw	58
  2186  0338  0221               	subwf	CheckValidTime@F419+1,w
  2187  0339  3098               	movlw	152
  2188  033A  1903               	skipnz
  2189  033B  0220               	subwf	CheckValidTime@F419,w
  2190  033C  1C03               	skipc
  2191  033D  0008               	return
  2192  033E  14F8               	bsf	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  2193  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2194  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2195  0341                     L1:	
  2196  0341  01A0               	clrf	CheckValidTime@F419
  2197  0342  01A1               	clrf	CheckValidTime@F419+1
  2198  0343  0008               	return
  2199  0344                     __end_of_CheckValidTime:	
  2200                           
  2201                           	psect	text20
  2202  0016                     __ptext20:	
  2203 ;; *************** function _CheckOnceResult *****************
  2204 ;; Defined at:
  2205 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  404             2    6[BANK0 ] unsigned int 
  2210 ;;  405             2    3[BANK0 ] unsigned int 
  2211 ;;  406             2    0[BANK0 ] unsigned int 
  2212 ;;  401             1    8[BANK0 ] unsigned char 
  2213 ;;  402             1    5[BANK0 ] unsigned char 
  2214 ;;  403             1    2[BANK0 ] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1
  2224 ;;      Params:         0       0       0
  2225 ;;      Locals:         0       9       0
  2226 ;;      Temps:          4       0       0
  2227 ;;      Totals:         4       9       0
  2228 ;;Total ram usage:       13 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    3
  2231 ;; This function calls:
  2232 ;;		_KeyClearOne
  2233 ;;		_KeyHave
  2234 ;;		_KeyIsIn
  2235 ;; This function is called by:
  2236 ;;		_CheckTouchKey
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _CheckOnceResult
  2242  0016                     _CheckOnceResult:	
  2243                           
  2244                           ;incstack = 0
  2245                           ; Regs used in _CheckOnceResult: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2246  0016  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0017  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0018  01C2               	clrf	CheckOnceResult@401
  2249  0019  01A2               	clrf	_KeyData	;volatile
  2250  001A  01B1               	clrf	_KeyMaxSub
  2251  001B                     l2751:	
  2252  001B  0842               	movf	CheckOnceResult@401,w
  2253  001C  3907               	andlw	7
  2254  001D  3E01               	addlw	low ((_Table_KeyFalg-__stringbase)| (0+32768))
  2255  001E  0084               	movwf	4
  2256  001F  2391               	fcall	stringdir
  2257  0020  00BC               	movwf	CheckOnceResult@403
  2258  0021  1003               	clrc
  2259  0022  0D42               	rlf	CheckOnceResult@401,w
  2260  0023  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  2261  0024  0084               	movwf	4
  2262  0025  3003               	movlw	3
  2263  0026                     u1495:	
  2264  0026  0A84               	incf	4,f
  2265  0027  1003               	clrc
  2266  0028  0C80               	rrf	0,f
  2267  0029  0384               	decf	4,f
  2268  002A  0C80               	rrf	0,f
  2269  002B  3EFF               	addlw	-1
  2270  002C  1D03               	skipz
  2271  002D  2826               	goto	u1495
  2272  002E  1003               	clrc
  2273  002F  0D42               	rlf	CheckOnceResult@401,w
  2274  0030  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  2275  0031  0084               	movwf	4
  2276  0032  0800               	movf	0,w
  2277  0033  00C0               	movwf	CheckOnceResult@404
  2278  0034  0A84               	incf	4,f
  2279  0035  0800               	movf	0,w
  2280  0036  00C1               	movwf	CheckOnceResult@404+1
  2281  0037  0842               	movf	CheckOnceResult@401,w
  2282  0038  3E09               	addlw	low ((_Table_KeyDown-__stringbase)| (0+32768))
  2283  0039  0084               	movwf	4
  2284  003A  2391               	fcall	stringdir
  2285  003B  00BF               	movwf	CheckOnceResult@402
  2286  003C  00BD               	movwf	CheckOnceResult@405
  2287  003D  01BE               	clrf	CheckOnceResult@405+1
  2288  003E  0840               	movf	CheckOnceResult@404,w
  2289  003F  07BD               	addwf	CheckOnceResult@405,f
  2290  0040  1803               	skipnc
  2291  0041  0ABE               	incf	CheckOnceResult@405+1,f
  2292  0042  0841               	movf	CheckOnceResult@404+1,w
  2293  0043  07BE               	addwf	CheckOnceResult@405+1,f
  2294  0044  0842               	movf	CheckOnceResult@401,w
  2295  0045  23D7               	fcall	_KeyIsIn
  2296  0046  3A00               	xorlw	0
  2297  0047  1283               	bcf	3,5	;RP0=0, select bank0
  2298  0048  1303               	bcf	3,6	;RP1=0, select bank0
  2299  0049  1003               	clrc
  2300  004A  1D03               	skipz
  2301  004B  28A3               	goto	L4
  2302  004C  0D42               	rlf	CheckOnceResult@401,w
  2303  004D  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2304  004E  0084               	movwf	4
  2305  004F  1383               	bcf	3,7	;select IRP bank0
  2306  0050  0800               	movf	0,w
  2307  0051  00BA               	movwf	CheckOnceResult@406
  2308  0052  0A84               	incf	4,f
  2309  0053  0800               	movf	0,w
  2310  0054  00BB               	movwf	CheckOnceResult@406+1
  2311  0055  1003               	clrc
  2312  0056  0D42               	rlf	CheckOnceResult@401,w
  2313  0057  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2314  0058  20F6               	fcall	PL6	;call to abstracted procedure
  2315  0059  023E               	subwf	CheckOnceResult@405+1,w
  2316  005A  1D03               	skipz
  2317  005B  285E               	goto	u1515
  2318  005C  0874               	movf	??_CheckOnceResult,w
  2319  005D  023D               	subwf	CheckOnceResult@405,w
  2320  005E                     u1515:	
  2321  005E  1803               	skipnc
  2322  005F  286C               	goto	l2769
  2323  0060  1003               	clrc
  2324  0061  0D42               	rlf	CheckOnceResult@401,w
  2325  0062  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2326  0063  20F6               	fcall	PL6	;call to abstracted procedure
  2327  0064  0840               	movf	CheckOnceResult@404,w
  2328  0065  0274               	subwf	??_CheckOnceResult,w
  2329  0066  00C0               	movwf	CheckOnceResult@404
  2330  0067  0841               	movf	CheckOnceResult@404+1,w
  2331  0068  1C03               	skipc
  2332  0069  0A41               	incf	CheckOnceResult@404+1,w
  2333  006A  0275               	subwf	??_CheckOnceResult+1,w
  2334  006B  288F               	goto	L2
  2335  006C                     l2769:	
  2336  006C  083B               	movf	CheckOnceResult@406+1,w
  2337  006D  023E               	subwf	CheckOnceResult@405+1,w
  2338  006E  1D03               	skipz
  2339  006F  2872               	goto	u1525
  2340  0070  083A               	movf	CheckOnceResult@406,w
  2341  0071  023D               	subwf	CheckOnceResult@405,w
  2342  0072                     u1525:	
  2343  0072  1803               	skipnc
  2344  0073  28DF               	goto	l2815
  2345  0074  1003               	clrc
  2346  0075  0D42               	rlf	CheckOnceResult@401,w
  2347  0076  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2348  0077  20F6               	fcall	PL6	;call to abstracted procedure
  2349  0078  023E               	subwf	CheckOnceResult@405+1,w
  2350  0079  1D03               	skipz
  2351  007A  287D               	goto	u1535
  2352  007B  0874               	movf	??_CheckOnceResult,w
  2353  007C  023D               	subwf	CheckOnceResult@405,w
  2354  007D                     u1535:	
  2355  007D  1803               	skipnc
  2356  007E  28DF               	goto	l2815
  2357  007F  1003               	clrc
  2358  0080  0D42               	rlf	CheckOnceResult@401,w
  2359  0081  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2360  0082  0084               	movwf	4
  2361  0083  083A               	movf	CheckOnceResult@406,w
  2362  0084  0080               	movwf	0
  2363  0085  0A84               	incf	4,f
  2364  0086  083B               	movf	CheckOnceResult@406+1,w
  2365  0087  0080               	movwf	0
  2366  0088  0840               	movf	CheckOnceResult@404,w
  2367  0089  023A               	subwf	CheckOnceResult@406,w
  2368  008A  00C0               	movwf	CheckOnceResult@404
  2369  008B  0841               	movf	CheckOnceResult@404+1,w
  2370  008C  1C03               	skipc
  2371  008D  0A41               	incf	CheckOnceResult@404+1,w
  2372  008E  023B               	subwf	CheckOnceResult@406+1,w
  2373  008F                     L2:	
  2374  008F  00C1               	movwf	CheckOnceResult@404+1
  2375  0090  0842               	movf	CheckOnceResult@401,w
  2376  0091  3E39               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2377  0092  0084               	movwf	4
  2378  0093  0180               	clrf	0
  2379  0094  0841               	movf	CheckOnceResult@404+1,w
  2380  0095  1903               	btfsc	3,2
  2381  0096  2899               	goto	l2783
  2382  0097  30FF               	movlw	255
  2383  0098  289A               	goto	L3
  2384  0099                     l2783:	
  2385  0099  0840               	movf	CheckOnceResult@404,w
  2386  009A                     L3:	
  2387  009A  00BF               	movwf	CheckOnceResult@402
  2388  009B  0231               	subwf	_KeyMaxSub,w
  2389  009C  1803               	skipnc
  2390  009D  28A1               	goto	l2789
  2391  009E  083F               	movf	CheckOnceResult@402,w
  2392  009F  00B1               	movwf	_KeyMaxSub
  2393  00A0  28DD               	goto	l2813
  2394  00A1                     l2789:	
  2395  00A1  0AB2               	incf	_KeyCounter,f
  2396  00A2  28DF               	goto	l2815
  2397  00A3                     L4:	
  2398  00A3  0D42               	rlf	CheckOnceResult@401,w
  2399  00A4  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2400  00A5  0084               	movwf	4
  2401  00A6  1383               	bcf	3,7	;select IRP bank0
  2402  00A7  0800               	movf	0,w
  2403  00A8  00F4               	movwf	??_CheckOnceResult
  2404  00A9  0A84               	incf	4,f
  2405  00AA  0800               	movf	0,w
  2406  00AB  00F5               	movwf	??_CheckOnceResult+1
  2407  00AC  0874               	movf	??_CheckOnceResult,w
  2408  00AD  3E01               	addlw	1
  2409  00AE  00F6               	movwf	??_CheckOnceResult+2
  2410  00AF  0875               	movf	??_CheckOnceResult+1,w
  2411  00B0  1803               	skipnc
  2412  00B1  3E01               	addlw	1
  2413  00B2  00F7               	movwf	??_CheckOnceResult+3
  2414  00B3  083E               	movf	CheckOnceResult@405+1,w
  2415  00B4  0277               	subwf	??_CheckOnceResult+3,w
  2416  00B5  1D03               	skipz
  2417  00B6  28B9               	goto	u1565
  2418  00B7  083D               	movf	CheckOnceResult@405,w
  2419  00B8  0276               	subwf	??_CheckOnceResult+2,w
  2420  00B9                     u1565:	
  2421  00B9  1C03               	btfss	3,0
  2422  00BA  28DF               	goto	l2815
  2423  00BB  1003               	clrc
  2424  00BC  0D42               	rlf	CheckOnceResult@401,w
  2425  00BD  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2426  00BE  0084               	movwf	4
  2427  00BF  0800               	movf	0,w
  2428  00C0  20E4               	fcall	PL4	;call to abstracted procedure
  2429  00C1  1C03               	skipc
  2430  00C2  28CB               	goto	l2803
  2431  00C3  1003               	clrc
  2432  00C4  0D42               	rlf	CheckOnceResult@401,w
  2433  00C5  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2434  00C6  0084               	movwf	4
  2435  00C7  0800               	movf	0,w
  2436  00C8  20E4               	fcall	PL4	;call to abstracted procedure
  2437  00C9  1803               	skipnc
  2438  00CA  28D6               	goto	l2807
  2439  00CB                     l2803:	
  2440  00CB  0842               	movf	CheckOnceResult@401,w
  2441  00CC  3E39               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2442  00CD  0084               	movwf	4
  2443  00CE  3009               	movlw	9
  2444  00CF  0A80               	incf	0,f
  2445  00D0  0200               	subwf	0,w
  2446  00D1  1C03               	skipc
  2447  00D2  28DA               	goto	l2811
  2448  00D3  0842               	movf	CheckOnceResult@401,w
  2449  00D4  2316               	fcall	_KeyClearOne
  2450  00D5  28DF               	goto	l2815
  2451  00D6                     l2807:	
  2452  00D6  0842               	movf	CheckOnceResult@401,w
  2453  00D7  3E39               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2454  00D8  0084               	movwf	4
  2455  00D9  0180               	clrf	0
  2456  00DA                     l2811:	
  2457  00DA  0822               	movf	_KeyData,w	;volatile
  2458  00DB  1D03               	btfss	3,2
  2459  00DC  28DF               	goto	l2815
  2460  00DD                     l2813:	
  2461  00DD  083C               	movf	CheckOnceResult@403,w
  2462  00DE  23F0               	fcall	_KeyHave
  2463  00DF                     l2815:	
  2464  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2465  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  2466  00E1  0FC2               	incfsz	CheckOnceResult@401,f
  2467  00E2  0008               	return
  2468  00E3  281B               	goto	l2751
  2469  00E4                     __end_of_CheckOnceResult:	
  2470  00E4                     PL4:	
  2471  00E4  00F4               	movwf	??_CheckOnceResult
  2472  00E5  0A84               	incf	4,f
  2473  00E6  0800               	movf	0,w
  2474  00E7  00F5               	movwf	??_CheckOnceResult+1
  2475  00E8  083F               	movf	CheckOnceResult@402,w
  2476  00E9  0774               	addwf	??_CheckOnceResult,w
  2477  00EA  00F6               	movwf	??_CheckOnceResult+2
  2478  00EB  0875               	movf	??_CheckOnceResult+1,w
  2479  00EC  1803               	skipnc
  2480  00ED  0A75               	incf	??_CheckOnceResult+1,w
  2481  00EE  00F7               	movwf	??_CheckOnceResult+3
  2482  00EF  0841               	movf	CheckOnceResult@404+1,w
  2483  00F0  0277               	subwf	??_CheckOnceResult+3,w
  2484  00F1  1D03               	skipz
  2485  00F2  0008               	return
  2486  00F3  0840               	movf	CheckOnceResult@404,w
  2487  00F4  0276               	subwf	??_CheckOnceResult+2,w
  2488  00F5  0008               	return
  2489  00F6                     __end_ofPL4:	
  2490  00F6                     PL6:	
  2491  00F6  0084               	movwf	4
  2492  00F7  0800               	movf	0,w
  2493  00F8  00F4               	movwf	??_CheckOnceResult
  2494  00F9  0A84               	incf	4,f
  2495  00FA  0800               	movf	0,w
  2496  00FB  00F5               	movwf	??_CheckOnceResult+1
  2497  00FC  0008               	return
  2498  00FD                     __end_ofPL6:	
  2499                           
  2500                           	psect	text21
  2501  03F0                     __ptext21:	
  2502 ;; *************** function _KeyHave *****************
  2503 ;; Defined at:
  2504 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  390             1    wreg     unsigned char 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  390             1    2[COMMON] unsigned char 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  1    wreg      void 
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : B00/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMMON   BANK0   BANK1
  2518 ;;      Params:         0       0       0
  2519 ;;      Locals:         1       0       0
  2520 ;;      Temps:          0       0       0
  2521 ;;      Totals:         1       0       0
  2522 ;;Total ram usage:        1 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_CheckOnceResult
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function _KeyHave
  2534  03F0                     _KeyHave:	
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in _KeyHave: [wreg+status,2+status,0]
  2538                           ;KeyHave@390 stored from wreg
  2539  03F0  00F2               	movwf	KeyHave@390
  2540  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2541  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2542  03F3  0AB2               	incf	_KeyCounter,f
  2543  03F4  0872               	movf	KeyHave@390,w
  2544  03F5  00A2               	movwf	_KeyData	;volatile
  2545  03F6  0008               	return
  2546  03F7                     __end_of_KeyHave:	
  2547                           
  2548                           	psect	text22
  2549  0316                     __ptext22:	
  2550 ;; *************** function _KeyClearOne *****************
  2551 ;; Defined at:
  2552 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;  381             1    wreg     unsigned char 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  381             1    2[COMMON] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1
  2566 ;;      Params:         0       0       0
  2567 ;;      Locals:         1       0       0
  2568 ;;      Temps:          0       0       0
  2569 ;;      Totals:         1       0       0
  2570 ;;Total ram usage:        1 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    1
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_KeyClearIn
  2577 ;;		_KeyStopClear
  2578 ;;		_CheckOnceResult
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _KeyClearOne
  2584  0316                     _KeyClearOne:	
  2585                           
  2586                           ;incstack = 0
  2587                           ; Regs used in _KeyClearOne: [wreg-fsr0h+status,2+status,0]
  2588                           ;KeyClearOne@381 stored from wreg
  2589  0316  00F2               	movwf	KeyClearOne@381
  2590  0317  1003               	clrc
  2591  0318  0D72               	rlf	KeyClearOne@381,w
  2592  0319  3E2C               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2593  031A  0084               	movwf	4
  2594  031B  1383               	bcf	3,7	;select IRP bank0
  2595  031C  2329               	fcall	PL12	;call to abstracted procedure
  2596  031D  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2597  031E  0084               	movwf	4
  2598  031F  2329               	fcall	PL12	;call to abstracted procedure
  2599  0320  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2600  0321  0084               	movwf	4
  2601  0322  2329               	fcall	PL12	;call to abstracted procedure
  2602  0323  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2603  0324  0084               	movwf	4
  2604  0325  0180               	clrf	0
  2605  0326  0A84               	incf	4,f
  2606  0327  0180               	clrf	0	;# 
  2607  0328  0008               	return
  2608  0329                     __end_of_KeyClearOne:	
  2609  0329                     PL12:	
  2610  0329  0180               	clrf	0
  2611  032A  0A84               	incf	4,f
  2612  032B  0180               	clrf	0
  2613  032C  1003               	clrc
  2614  032D  0D72               	rlf	KeyClearOne@381,w
  2615  032E  0008               	return
  2616  032F                     __end_ofPL12:	
  2617                           
  2618                           	psect	text23
  2619  0234                     __ptext23:	
  2620 ;; *************** function _CheckKeyOldValue *****************
  2621 ;; Defined at:
  2622 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  412             2    0[BANK0 ] unsigned int 
  2627 ;;  411             1    2[BANK0 ] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1
  2637 ;;      Params:         0       0       0
  2638 ;;      Locals:         0       3       0
  2639 ;;      Temps:          0       0       0
  2640 ;;      Totals:         0       3       0
  2641 ;;Total ram usage:        3 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    3
  2644 ;; This function calls:
  2645 ;;		_JudgeKeyOldData
  2646 ;;		_KeyIsIn
  2647 ;;		_RKeyOldData
  2648 ;; This function is called by:
  2649 ;;		_CheckTouchKey
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _CheckKeyOldValue
  2655  0234                     _CheckKeyOldValue:	
  2656  0234  3004               	movlw	4
  2657                           
  2658                           ;incstack = 0
  2659                           ; Regs used in _CheckKeyOldValue: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2660  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0237  01BC               	clrf	CheckKeyOldValue@411
  2663  0238  0AB0               	incf	CheckKeyOldValue@F410,f
  2664  0239  0230               	subwf	CheckKeyOldValue@F410,w
  2665  023A  1C03               	btfss	3,0
  2666  023B  0008               	return
  2667  023C  01B0               	clrf	CheckKeyOldValue@F410
  2668  023D                     l2827:	
  2669  023D  1003               	clrc
  2670  023E  0D3C               	rlf	CheckKeyOldValue@411,w
  2671  023F  3E79               	addlw	(low (_KeyResSum| 0))& (0+255)
  2672  0240  0084               	movwf	4
  2673  0241  0800               	movf	0,w
  2674  0242  00BA               	movwf	CheckKeyOldValue@412
  2675  0243  0A84               	incf	4,f
  2676  0244  0800               	movf	0,w
  2677  0245  00BB               	movwf	CheckKeyOldValue@412+1
  2678  0246  083C               	movf	CheckKeyOldValue@411,w
  2679  0247  23D7               	fcall	_KeyIsIn
  2680  0248  3A00               	xorlw	0
  2681  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2682  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2683  024B  1D03               	skipz
  2684  024C  2A55               	goto	L5
  2685  024D  083B               	movf	CheckKeyOldValue@412+1,w
  2686  024E  00F3               	movwf	JudgeKeyOldData@428+1
  2687  024F  083A               	movf	CheckKeyOldValue@412,w
  2688  0250  00F2               	movwf	JudgeKeyOldData@428
  2689  0251  083C               	movf	CheckKeyOldValue@411,w
  2690  0252  21BE               	fcall	_JudgeKeyOldData
  2691  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0255                     L5:	
  2694  0255  083B               	movf	CheckKeyOldValue@412+1,w
  2695  0256  00F3               	movwf	RKeyOldData@431+1
  2696  0257  083A               	movf	CheckKeyOldValue@412,w
  2697  0258  00F2               	movwf	RKeyOldData@431
  2698  0259  083C               	movf	CheckKeyOldValue@411,w
  2699  025A  22D5               	fcall	_RKeyOldData
  2700  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2701  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2702  025D  0FBC               	incfsz	CheckKeyOldValue@411,f
  2703  025E  0008               	return
  2704  025F  2A3D               	goto	l2827
  2705  0260                     __end_of_CheckKeyOldValue:	
  2706                           
  2707                           	psect	text24
  2708  02D5                     __ptext24:	
  2709 ;; *************** function _RKeyOldData *****************
  2710 ;; Defined at:
  2711 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  430             1    wreg     unsigned char 
  2714 ;;  431             2    2[COMMON] unsigned int 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  430             1    6[COMMON] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 300/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1
  2726 ;;      Params:         2       0       0
  2727 ;;      Locals:         1       0       0
  2728 ;;      Temps:          2       0       0
  2729 ;;      Totals:         5       0       0
  2730 ;;Total ram usage:        5 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    1
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_CheckKeyOldValue
  2737 ;;		_SystemEnterSleep
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           
  2742                           ;psect for function _RKeyOldData
  2743  02D5                     _RKeyOldData:	
  2744                           
  2745                           ;incstack = 0
  2746                           ; Regs used in _RKeyOldData: [wreg-fsr0h+status,2+status,0]
  2747                           ;RKeyOldData@430 stored from wreg
  2748  02D5  00F6               	movwf	RKeyOldData@430
  2749  02D6  1003               	clrc
  2750  02D7  0D76               	rlf	RKeyOldData@430,w
  2751  02D8  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2752  02D9  0084               	movwf	4
  2753  02DA  1383               	bcf	3,7	;select IRP bank0
  2754  02DB  22F2               	fcall	PL10	;call to abstracted procedure
  2755  02DC  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2756  02DD  22E7               	fcall	PL8	;call to abstracted procedure
  2757  02DE  22F2               	fcall	PL10	;call to abstracted procedure
  2758  02DF  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2759  02E0  22E7               	fcall	PL8	;call to abstracted procedure
  2760  02E1  0872               	movf	RKeyOldData@431,w
  2761  02E2  0080               	movwf	0
  2762  02E3  0A84               	incf	4,f
  2763  02E4  0873               	movf	RKeyOldData@431+1,w
  2764  02E5  0080               	movwf	0	;# 
  2765  02E6  0008               	return
  2766  02E7                     __end_of_RKeyOldData:	
  2767  02E7                     PL8:	
  2768  02E7  0084               	movwf	4
  2769  02E8  0874               	movf	??_RKeyOldData,w
  2770  02E9  0080               	movwf	0
  2771  02EA  0A84               	incf	4,f
  2772  02EB  0875               	movf	??_RKeyOldData+1,w
  2773  02EC  0080               	movwf	0
  2774  02ED  1003               	clrc
  2775  02EE  0D76               	rlf	RKeyOldData@430,w
  2776  02EF  3E2C               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2777  02F0  0084               	movwf	4
  2778  02F1  0008               	return
  2779  02F2                     __end_ofPL8:	
  2780  02F2                     PL10:	
  2781  02F2  0800               	movf	0,w
  2782  02F3  00F4               	movwf	??_RKeyOldData
  2783  02F4  0A84               	incf	4,f
  2784  02F5  0800               	movf	0,w
  2785  02F6  00F5               	movwf	??_RKeyOldData+1
  2786  02F7  1003               	clrc
  2787  02F8  0D76               	rlf	RKeyOldData@430,w
  2788  02F9  0008               	return
  2789  02FA                     __end_ofPL10:	
  2790                           
  2791                           	psect	text25
  2792  03D7                     __ptext25:	
  2793 ;; *************** function _KeyIsIn *****************
  2794 ;; Defined at:
  2795 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  377             1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  377             1    2[COMMON] unsigned char 
  2800 ;;  378             1    3[COMMON] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      unsigned char 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1
  2810 ;;      Params:         0       0       0
  2811 ;;      Locals:         2       0       0
  2812 ;;      Temps:          0       0       0
  2813 ;;      Totals:         2       0       0
  2814 ;;Total ram usage:        2 bytes
  2815 ;; Hardware stack levels used:    2
  2816 ;; Hardware stack levels required when called:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_KeyClearIn
  2821 ;;		_CheckOnceResult
  2822 ;;		_CheckKeyOldValue
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _KeyIsIn
  2828  03D7                     _KeyIsIn:	
  2829                           
  2830                           ;incstack = 0
  2831                           ; Regs used in _KeyIsIn: [wreg-fsr0h+status,2+status,0+pclath]
  2832                           ;KeyIsIn@377 stored from wreg
  2833  03D7  00F2               	movwf	KeyIsIn@377
  2834  03D8  3907               	andlw	7
  2835  03D9  3E01               	addlw	low ((_Table_KeyFalg-__stringbase)| (0+32768))
  2836  03DA  0084               	movwf	4
  2837  03DB  2391               	fcall	stringdir
  2838  03DC  00F3               	movwf	KeyIsIn@378
  2839  03DD  087B               	movf	_KeyFlag,w	;volatile
  2840  03DE  05F3               	andwf	KeyIsIn@378,f
  2841  03DF  0873               	movf	KeyIsIn@378,w
  2842  03E0  0008               	return
  2843  03E1                     __end_of_KeyIsIn:	
  2844                           
  2845                           	psect	text26
  2846  01BE                     __ptext26:	
  2847 ;; *************** function _JudgeKeyOldData *****************
  2848 ;; Defined at:
  2849 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  427             1    wreg     unsigned char 
  2852 ;;  428             2    2[COMMON] unsigned int 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  427             1    4[COMMON] unsigned char 
  2855 ;;  429             2    5[COMMON] unsigned int 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2860 ;; Tracked objects:
  2861 ;;		On entry : 300/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1
  2865 ;;      Params:         2       0       0
  2866 ;;      Locals:         3       0       0
  2867 ;;      Temps:          0       0       0
  2868 ;;      Totals:         5       0       0
  2869 ;;Total ram usage:        5 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_CheckKeyOldValue
  2876 ;;		_SystemEnterSleep
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           
  2881                           ;psect for function _JudgeKeyOldData
  2882  01BE                     _JudgeKeyOldData:	
  2883                           
  2884                           ;incstack = 0
  2885                           ; Regs used in _JudgeKeyOldData: [wreg-fsr0h+status,2+status,0]
  2886                           ;JudgeKeyOldData@427 stored from wreg
  2887  01BE  00F4               	movwf	JudgeKeyOldData@427
  2888  01BF  1003               	clrc
  2889  01C0  0D74               	rlf	JudgeKeyOldData@427,w
  2890  01C1  3E2C               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2891  01C2  0084               	movwf	4
  2892  01C3  1383               	bcf	3,7	;select IRP bank0
  2893  01C4  21FA               	fcall	PL2	;call to abstracted procedure
  2894  01C5  1903               	skipnz
  2895  01C6  0275               	subwf	JudgeKeyOldData@429,w
  2896  01C7  1C03               	skipc
  2897  01C8  29D1               	goto	L6
  2898  01C9  30FF               	movlw	255
  2899  01CA  0276               	subwf	JudgeKeyOldData@429+1,w
  2900  01CB  30FE               	movlw	254
  2901  01CC  1903               	skipnz
  2902  01CD  0275               	subwf	JudgeKeyOldData@429,w
  2903  01CE  1C03               	skipc
  2904  01CF  0008               	return
  2905  01D0  1003               	clrc
  2906  01D1                     L6:	
  2907  01D1  0D74               	rlf	JudgeKeyOldData@427,w
  2908  01D2  3E2A               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2909  01D3  0084               	movwf	4
  2910  01D4  21FA               	fcall	PL2	;call to abstracted procedure
  2911  01D5  1903               	skipnz
  2912  01D6  0275               	subwf	JudgeKeyOldData@429,w
  2913  01D7  1C03               	skipc
  2914  01D8  29E1               	goto	L7
  2915  01D9  30FF               	movlw	255
  2916  01DA  0276               	subwf	JudgeKeyOldData@429+1,w
  2917  01DB  30FE               	movlw	254
  2918  01DC  1903               	skipnz
  2919  01DD  0275               	subwf	JudgeKeyOldData@429,w
  2920  01DE  1C03               	skipc
  2921  01DF  0008               	return
  2922  01E0  1003               	clrc
  2923  01E1                     L7:	
  2924  01E1  0D74               	rlf	JudgeKeyOldData@427,w
  2925  01E2  3E28               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2926  01E3  0084               	movwf	4
  2927  01E4  21FA               	fcall	PL2	;call to abstracted procedure
  2928  01E5  1903               	skipnz
  2929  01E6  0275               	subwf	JudgeKeyOldData@429,w
  2930  01E7  1C03               	skipc
  2931  01E8  29F1               	goto	L8
  2932  01E9  30FF               	movlw	255
  2933  01EA  0276               	subwf	JudgeKeyOldData@429+1,w
  2934  01EB  30FE               	movlw	254
  2935  01EC  1903               	skipnz
  2936  01ED  0275               	subwf	JudgeKeyOldData@429,w
  2937  01EE  1C03               	skipc
  2938  01EF  0008               	return
  2939  01F0  1003               	clrc
  2940  01F1                     L8:	
  2941  01F1  0D74               	rlf	JudgeKeyOldData@427,w
  2942  01F2  3E26               	addlw	(low (_KeyReference| 0))& (0+255)
  2943  01F3  0084               	movwf	4
  2944  01F4  0872               	movf	JudgeKeyOldData@428,w
  2945  01F5  0080               	movwf	0
  2946  01F6  0A84               	incf	4,f
  2947  01F7  0873               	movf	JudgeKeyOldData@428+1,w
  2948  01F8  0080               	movwf	0
  2949  01F9  0008               	return
  2950  01FA                     __end_of_JudgeKeyOldData:	
  2951  01FA                     PL2:	
  2952  01FA  0800               	movf	0,w
  2953  01FB  00F5               	movwf	JudgeKeyOldData@429
  2954  01FC  0A84               	incf	4,f
  2955  01FD  0800               	movf	0,w
  2956  01FE  00F6               	movwf	JudgeKeyOldData@429+1
  2957  01FF  0872               	movf	JudgeKeyOldData@428,w
  2958  0200  02F5               	subwf	JudgeKeyOldData@429,f
  2959  0201  0873               	movf	JudgeKeyOldData@428+1,w
  2960  0202  1C03               	skipc
  2961  0203  03F6               	decf	JudgeKeyOldData@429+1,f
  2962  0204  02F6               	subwf	JudgeKeyOldData@429+1,f
  2963  0205  3000               	movlw	0
  2964  0206  0276               	subwf	JudgeKeyOldData@429+1,w
  2965  0207  3403               	retlw	3
  2966  0208                     __end_ofPL2:	
  2967                           
  2968                           	psect	text27
  2969  0344                     __ptext27:	
  2970 ;; *************** function _Isr_Timer *****************
  2971 ;; Defined at:
  2972 ;;		line 203 in file "C:\mcuproject\scm\zdt\SU003_8122_SOP8_\SU003_SC8P8122_sop8_\main.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 300/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMMON   BANK0   BANK1
  2986 ;;      Params:         0       0       0
  2987 ;;      Locals:         0       0       0
  2988 ;;      Temps:          2       0       0
  2989 ;;      Totals:         2       0       0
  2990 ;;Total ram usage:        2 bytes
  2991 ;; Hardware stack levels used:    1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		Interrupt level 1
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           
  3000                           ;psect for function _Isr_Timer
  3001  0344                     _Isr_Timer:	
  3002                           
  3003                           ;main.c: 205: if(TMR2IF)
  3004  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3006  0346  1C8D               	btfss	13,1	;volatile
  3007  0347  2B51               	goto	i1l2575
  3008                           
  3009                           ;main.c: 206: {
  3010                           ;main.c: 207: TMR2IF = 0;
  3011  0348  108D               	bcf	13,1	;volatile
  3012                           
  3013                           ;main.c: 208: if(++MainTime >= 32)
  3014  0349  3020               	movlw	32
  3015  034A  0AB8               	incf	_MainTime,f	;volatile
  3016  034B  0238               	subwf	_MainTime,w	;volatile
  3017  034C  1C03               	skipc
  3018  034D  2B52               	goto	i1l487
  3019                           
  3020                           ;main.c: 209: {
  3021                           ;main.c: 210: MainTime = 0;
  3022  034E  01B8               	clrf	_MainTime	;volatile
  3023                           
  3024                           ;main.c: 211: B_MainLoop = 1;
  3025  034F  1778               	bsf	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
  3026  0350  2B52               	goto	i1l487
  3027  0351                     i1l2575:	
  3028                           
  3029                           ;main.c: 214: else
  3030                           ;main.c: 215: {
  3031                           ;main.c: 216: PIR1 = 0;
  3032  0351  018D               	clrf	13	;volatile
  3033  0352                     i1l487:	
  3034  0352  0871               	movf	??_Isr_Timer+1,w
  3035  0353  008A               	movwf	10
  3036  0354  0E70               	swapf	??_Isr_Timer^(0+-128),w
  3037  0355  0083               	movwf	3
  3038  0356  0EFE               	swapf	126,f
  3039  0357  0E7E               	swapf	126,w
  3040  0358  0009               	retfie
  3041  0359                     __end_of_Isr_Timer:	
  3042  007E                     btemp	set	126	;btemp
  3043  007E                     wtemp0	set	126
  3044                           
  3045                           	psect	intentry
  3046  0004                     __pintentry:	
  3047                           ;incstack = 0
  3048                           ; Regs used in _Isr_Timer: [wreg+status,2+status,0]
  3049                           
  3050  0004                     interrupt_function:	
  3051  007E                     saved_w	set	btemp
  3052  0004  00FE               	movwf	btemp
  3053  0005  0E03               	swapf	3,w
  3054  0006  00F0               	movwf	??_Isr_Timer
  3055  0007  080A               	movf	10,w
  3056  0008  00F1               	movwf	??_Isr_Timer+1
  3057  0009  2B44               	ljmp	_Isr_Timer


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      9      35
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SystemEnterSleep->_GetTouchKeyValue
    _SystemEnterSleep->_JudgeKeyOldData
    _SystemEnterSleep->_RKeyOldData
    _CheckTouchKey->_CheckOnceResult
    _TurnKeyFlags->_KeyClearIn
    _KeyClearIn->_KeyIsIn
    _KeyStopClear->_KeyClearOne
    _GetTouchKeyValue->_ClearResSum
    _CheckOnceResult->_KeyIsIn
    _CheckKeyOldValue->_JudgeKeyOldData
    _CheckKeyOldValue->_RKeyOldData

Critical Paths under _Isr_Timer in COMMON

    None.

Critical Paths under _main in BANK0

    _WorkSleep->_SystemEnterSleep
    _CheckTouchKey->_CheckOnceResult

Critical Paths under _Isr_Timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr_Timer in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4737
                      _CheckTouchKey
                        _Init_System
                          _KeyServer
                      _Refurbish_Sfr
                          _WorkSleep
                           _checkLvd
                          _pwm02Stop
 ---------------------------------------------------------------------------------
 (1) _WorkSleep                                            0     0      0    1417
                      _Refurbish_Sfr
                   _SystemEnterSleep
                           _checkLvd
 ---------------------------------------------------------------------------------
 (1) _checkLvd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SystemEnterSleep                                     9     9      0    1417
                                              0 BANK0      9     9      0
                        _ClearResSum
                   _GetTouchKeyValue
                    _JudgeKeyOldData
                        _RKeyOldData
 ---------------------------------------------------------------------------------
 (2) _Refurbish_Sfr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeyServer                                            0     0      0       0
                          _pwm02Init
                          _pwm02Stop
                           _pwm0Init
                           _pwm0Stop
                           _pwm2Init
                           _pwm2Stop
 ---------------------------------------------------------------------------------
 (2) _pwm2Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm2Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm0Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm0Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm02Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm02Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckTouchKey                                        0     0      0    3320
                   _CheckKeyOldValue
                    _CheckOnceResult
                     _CheckValidTime
                        _ClearResSum
                   _GetTouchKeyValue
                       _KeyStopClear
                       _TurnKeyFlags
 ---------------------------------------------------------------------------------
 (2) _TurnKeyFlags                                         0     0      0     286
                         _KeyClearIn
 ---------------------------------------------------------------------------------
 (3) _KeyClearIn                                           1     1      0     286
                                              4 COMMON     1     1      0
                        _KeyClearOne
                            _KeyIsIn
 ---------------------------------------------------------------------------------
 (2) _KeyStopClear                                         1     1      0     178
                                              3 COMMON     1     1      0
                        _KeyClearOne
 ---------------------------------------------------------------------------------
 (3) _GetTouchKeyValue                                     4     4      0     159
                                              3 COMMON     4     4      0
                        _ClearResSum
 ---------------------------------------------------------------------------------
 (4) _ClearResSum                                          1     1      0      45
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckValidTime                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CheckOnceResult                                     13    13      0    1507
                                              4 COMMON     4     4      0
                                              0 BANK0      9     9      0
                        _KeyClearOne
                            _KeyHave
                            _KeyIsIn
 ---------------------------------------------------------------------------------
 (3) _KeyHave                                              1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _KeyClearOne                                          1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckKeyOldValue                                     3     3      0    1145
                                              0 BANK0      3     3      0
                    _JudgeKeyOldData
                            _KeyIsIn
                        _RKeyOldData
 ---------------------------------------------------------------------------------
 (3) _RKeyOldData                                          5     3      2     294
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _KeyIsIn                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _JudgeKeyOldData                                      5     3      2     560
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Isr_Timer                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckTouchKey
     _CheckKeyOldValue
       _JudgeKeyOldData
       _KeyIsIn
       _RKeyOldData
     _CheckOnceResult
       _KeyClearOne
       _KeyHave
       _KeyIsIn
     _CheckValidTime
     _ClearResSum
     _GetTouchKeyValue
       _ClearResSum
     _KeyStopClear
       _KeyClearOne
     _TurnKeyFlags
       _KeyClearIn
         _KeyClearOne
         _KeyIsIn
   _Init_System
   _KeyServer
     _pwm02Init
     _pwm02Stop
     _pwm0Init
     _pwm0Stop
     _pwm2Init
     _pwm2Stop
   _Refurbish_Sfr
   _WorkSleep
     _Refurbish_Sfr
     _SystemEnterSleep
       _ClearResSum
       _GetTouchKeyValue
         _ClearResSum
       _JudgeKeyOldData
       _RKeyOldData
     _checkLvd
   _checkLvd
   _pwm02Stop

 _Isr_Timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      9      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0      2F       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Aug 06 17:33:42 2025

                        pc 0002                         PL2 01FA                         PL4 00E4  
                       PL6 00F6                         PL8 02E7              ??_KeyClearOne 0072  
    __size_of_TurnKeyFlags 0026                         fsr 0004           ??_CheckValidTime 0072  
                      PL10 02F2                        PL12 0329                        PL14 038B  
                      l501 0270                        l975 019A                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RB6 0036  
                      _PR2 0011                        fsr0 0004                        indf 0000  
        ?_GetTouchKeyValue 0070   __end_of_Table_KeyChannel 03A1         ??_GetTouchKeyValue 0073  
                     l1025 02C5                       l1044 0295                       l1062 0131  
                     l1056 00FD                       l2123 01A8                       l2053 03E9  
                     l2125 01B7                       l2055 03EA                       l2225 03F7  
                     l2093 0179                       l2309 0381                       l2501 022F  
                     l2503 0232                       l2089 0175                       l2439 032F  
                     l2711 012A                       l2633 03BF                       l2811 00DA  
                     l2803 00CB                       l2627 03BE                       l2491 0223  
                     l2813 00DD                       l2637 03C6                       l2485 021E  
                     l2807 00D6                       l2815 00DF                       l2751 001B  
                     l2743 016A                       l2497 022A                       l2827 023D  
                     l2917 02A6                       l2909 02A2                       l2925 02AE  
                     l2783 0099                       l2919 02AA                       l2769 006C  
                     l2953 027B                       l2929 0262                       l2859 02CA  
                     l2789 00A1                       l2949 0274                       l2887 0314  
                     l2959 0280                       u1515 005E                       u1525 0072  
                     u1535 007D                       u1475 015A                       u1565 00B9  
                     u1495 0026                       _PIE1 000E                       _PIE2 0110  
                     _INTF 0059                       _RBIF 0058                       _PIR1 000D  
                     _PIR2 010F                       _TMR0 0081                       _main 0260  
                     btemp 007E              ?_KeyStopClear 0070                       start 000A  
             _TurnKeyFlags 02AF            __end_of_KeyIsIn 03E1            __end_of_KeyHave 03F7  
         ?_JudgeKeyOldData 0072              ??_Init_System 0072                      ?_main 0070  
                    _T2CON 0013   __end_of_SystemEnterSleep 0172                      i1l487 0352  
                    _PORTB 0006                      _TRISB 0005                      _PWMTH 0018  
                    _PWMTL 0017        __end_of_KeyClearOne 0329                 _KeyClearIn 03BE  
              _RKeyOldData 02D5             __pbitbssCOMMON 03C0                      pclath 000A  
              _ClearResSum 03E9                 _KeyCounter 0032                 _KeyOldData 0024  
           ??_KeyStopClear 0073                      status 0003                      wtemp0 007E  
               _KeyUpShake 0039            __initialization 000B               __end_of_main 0288  
                   ??_main 0078           TurnKeyFlags@F415 002F           TurnKeyFlags@F416 002E  
      __end_of_Init_System 036D                     i1l2575 0351                     _INTCON 000B  
       __size_of_KeyServer 002C                     _OSCCON 0014                     _TMR2IF 0069  
                   _PWMD0L 0019                     _PWMD4L 001B                     _PWMT4L 001C  
                   _TRISB6 002E           __end_of_checkLvd 03FC                  ??_KeyIsIn 0072  
                ??_KeyHave 0072         __size_of_Isr_Timer 0015  __size_of_CheckKeyOldValue 002C  
                   _b_kclr 03C2                     _b_kerr 03C1                _KeyClearOne 0316  
         __end_of_pwm0Init 03BE           __end_of_pwm2Init 03D7           __end_of_pwm0Stop 0407  
         __end_of_pwm2Stop 0404              _Table_KeyFalg 0397              _Table_KeyDown 039F  
                   saved_w 007E     __size_of_CheckTouchKey 0027                ?_KeyClearIn 0070  
          _CheckOnceResult 0016    __end_of__initialization 0014         __size_of_WorkSleep 001C  
           __pcstackCOMMON 0070                _Init_System 0359                 __end_ofPL2 0208  
               __end_ofPL4 00F6                 __end_ofPL6 00FD                 __end_ofPL8 02F2  
        __end_of_KeyServer 0234       __end_of_KeyStopClear 038B          __end_of_Isr_Timer 0359  
               __pbssBANK0 0020             RKeyOldData@430 0076             RKeyOldData@431 0072  
       __size_of_pwm02Init 0012  __size_of_GetTouchKeyValue 004C         __size_of_pwm02Stop 0005  
            _CheckTouchKey 0288                 __pmaintext 0260                 __pintentry 0004  
      __size_of_KeyClearIn 000D                    _CMPCON0 000F                    _CMPCON1 0010  
        __end_of_WorkSleep 0316          ?_SystemEnterSleep 0070    __end_of_CheckOnceResult 00E4  
                  _KEYCON0 0111                    _KEYCON1 0112                    _KEYCON2 0113  
                ?_checkLvd 0070                    _PWM01DT 001F         ??_SystemEnterSleep 003A  
                  _B_OnOff 03C5                    _PWMD01H 001E     __size_of_Refurbish_Sfr 000F  
                  _PWMCON0 0015                    _PWMCON1 0016                    _PWMCON2 001D  
               __stringtab 0391               ?_RKeyOldData 0072               ?_ClearResSum 0070  
           ClearResSum@388 0072                    _KeyData 0022                    _KeyFlag 007B  
                  _KeyIsIn 03D7                    _KeyHave 03F0                  ?_pwm0Init 0070  
                ?_pwm2Init 0070                  ?_pwm0Stop 0070                  ?_pwm2Stop 0070  
           ?_CheckTouchKey 0070           _CheckKeyOldValue 0234                    _b_kover 03C4  
                  __ptext1 02FA                    __ptext2 03F7                    __ptext3 00FD  
                  __ptext4 03A1                    __ptext5 0208                    __ptext6 0401  
                  __ptext7 03CB                    __ptext8 0404                    __ptext9 03B0  
               ??_checkLvd 0072   __size_of_JudgeKeyOldData 003C          __end_of_pwm02Init 037F  
                  _lvdTime 0035          __end_of_pwm02Stop 0401    __size_of_CheckValidTime 0015  
                  clrloop0 03E2       end_of_initialization 0014            KeyStopClear@385 0073  
               ??_pwm0Init 0072                 ??_pwm2Init 0072                 ??_pwm0Stop 0072  
               ??_pwm2Stop 0072              _Refurbish_Sfr 03A1               _KeyOldValue0 002C  
             _KeyOldValue1 002A               _KeyOldValue2 0028      __size_of_KeyStopClear 000C  
     CheckKeyOldValue@F410 0030               ?_KeyClearOne 0070               _KeyReference 0026  
         ?_CheckOnceResult 0070               ??_KeyClearIn 0074         CheckOnceResult@401 0042  
       CheckOnceResult@402 003F         CheckOnceResult@403 003C         CheckOnceResult@404 0040  
       CheckOnceResult@405 003D         CheckOnceResult@406 003A            ??_CheckTouchKey 0078  
             _KeyStopClear 037F           _GetTouchKeyValue 0172             ?_Refurbish_Sfr 0070  
             ?_Init_System 0070         __end_of_KeyClearIn 03CB              WorkSleep@time 0033  
                _KeyMaxSub 0031                  _KeyResSum 0079                __end_ofPL10 02FA  
              __end_ofPL12 032F                __end_ofPL14 0391        start_initialization 000B  
                _KeyServer 0208                  _Isr_Timer 0344          ??_JudgeKeyOldData 0074  
     __size_of_RKeyOldData 0012       __size_of_ClearResSum 0007              ?_TurnKeyFlags 0070  
              __pbssCOMMON 0079                 ?_KeyServer 0070                  ___latbits 0000  
            __pcstackBANK0 003A                  _WorkSleep 02FA             _CheckValidTime 032F  
        __size_of_checkLvd 0005   __end_of_CheckKeyOldValue 0260                 ?_Isr_Timer 0070  
      KeyServer@KeyOldFlag 0034                   ?_KeyIsIn 0070                   ?_KeyHave 0070  
__size_of_SystemEnterSleep 0075            ??_Refurbish_Sfr 0072             ??_TurnKeyFlags 0075  
        __size_of_pwm0Init 000E          __size_of_pwm2Init 000C          __size_of_pwm0Stop 0003  
        __size_of_pwm2Stop 0003                  _closeTime 0036                  __pstrings 0391  
     __size_of_KeyClearOne 0013     __end_of_CheckValidTime 0344        GetTouchKeyValue@393 0076  
      GetTouchKeyValue@394 0075        GetTouchKeyValue@395 0073                 ?_WorkSleep 0070  
                _pwm02Init 036D                  _pwm02Stop 03FC                   _KEYDATAH 0117  
                 _KEYDATAL 0116          interrupt_function 0004                  clear_ram0 03E1  
      CheckKeyOldValue@411 003C        CheckKeyOldValue@412 003A                __stringbase 0396  
     __size_of_Init_System 0014      __end_of_Table_KeyFalg 039F      __end_of_Table_KeyDown 03A0  
 __end_of_GetTouchKeyValue 01BE            ?_CheckValidTime 0070                ??_KeyServer 0072  
               ?_pwm02Init 0070                 ?_pwm02Stop 0070                ??_Isr_Timer 0070  
                 _MainTime 0038         JudgeKeyOldData@427 0074         JudgeKeyOldData@428 0072  
       JudgeKeyOldData@429 0075           __size_of_KeyIsIn 000A           __size_of_KeyHave 0007  
         _Table_KeyChannel 03A0         __end_of__stringtab 0397            _JudgeKeyOldData 01BE  
                 _b_kover1 03C3                   _b_ksleep 03C0                   _checkLvd 03F7  
     __end_of_TurnKeyFlags 02D5                ??_WorkSleep 0077                   __ptext10 03FC  
                 __ptext11 036D                   __ptext20 0016                   __ptext12 0359  
                 __ptext21 03F0                   __ptext13 0288                   __ptext22 0316  
                 __ptext14 02AF                   __ptext23 0234                   __ptext15 03BE  
                 __ptext24 02D5                   __ptext16 037F                   __ptext25 03D7  
                 __ptext17 0172                   __ptext26 01BE                   __ptext18 03E9  
                 __ptext27 0344                   __ptext19 032F   __size_of_CheckOnceResult 00CE  
            __size_of_main 0028           _SystemEnterSleep 00FD                   _pwm0Init 03B0  
                 _pwm2Init 03CB                   _pwm0Stop 0404      __end_of_CheckTouchKey 02AF  
                 _pwm2Stop 0401                   _workStep 0037                ??_pwm02Init 0072  
        ?_CheckKeyOldValue 0070                ??_pwm02Stop 0072              ??_RKeyOldData 0074  
                 intlevel1 0000              ??_ClearResSum 0072         ??_CheckKeyOldValue 0077  
                stringcode 0391    __end_of_JudgeKeyOldData 01FA                 _B_MainLoop 03C6  
               _OPTION_REG 0001        SystemEnterSleep@423 0042        SystemEnterSleep@424 003C  
      SystemEnterSleep@425 0040        SystemEnterSleep@426 003E                   stringdir 0391  
                 stringtab 0391             KeyClearOne@381 0072              KeyClearIn@383 0074  
       CheckValidTime@F419 0020        __end_of_RKeyOldData 02E7                 KeyIsIn@377 0072  
               KeyIsIn@378 0073                 KeyHave@390 0072      __end_of_Refurbish_Sfr 03B0  
      __end_of_ClearResSum 03F0          ??_CheckOnceResult 0074  
