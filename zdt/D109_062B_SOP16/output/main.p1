Version 3.2 HI-TECH Software Intermediate Code
"93 C:\mcuproject\scm\zdt\D109_062B_SOP16\main.c
[v _ledShow `(v ~T0 @X0 0 ef ]
[p mainexit ]
"83
[v _Init_System `(v ~T0 @X0 0 ef ]
"84
[v _AD_Init `(v ~T0 @X0 0 ef ]
"91
[v _checkOutA `(v ~T0 @X0 0 ef ]
"90
[v _chrgCtr `(v ~T0 @X0 0 ef ]
"92
[v _checkBatAD `(v ~T0 @X0 0 ef ]
"94
[v _keyCtr `(v ~T0 @X0 0 ef ]
"95
[v _workCtr `(v ~T0 @X0 0 ef ]
"96
[v _ledCtr `(v ~T0 @X0 0 ef ]
"85
[v _Sleep_Mode `(v ~T0 @X0 0 ef ]
"86
[v _pwmInit `(v ~T0 @X0 0 ef ]
"87
[v _pwmStop `(v ~T0 @X0 0 ef ]
"80
[v _ADC_Sample `(uc ~T0 @X0 0 ef2`uc`uc ]
[v F479 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF479 ~T0 @X0 0 e ]
[p i __delay ]
"4 C:\mcuproject\scm\zdt\D109_062B_SOP16\main.c
[p n 752 ]
"5
[p n 373 ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\SC8P062BD.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;SC8P062BD.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;SC8P062BD.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;SC8P062BD.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;SC8P062BD.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;SC8P062BD.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;SC8P062BD.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;SC8P062BD.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;SC8P062BD.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMPCON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 20: volatile unsigned char CMPCON0 @ 0x0F;
"21
[v _CMPCON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;SC8P062BD.h: 21: volatile unsigned char CMPCON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;SC8P062BD.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;SC8P062BD.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;SC8P062BD.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P062BD.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;SC8P062BD.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;SC8P062BD.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;SC8P062BD.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;SC8P062BD.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;SC8P062BD.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;SC8P062BD.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;SC8P062BD.h: 44: volatile unsigned char ANSEL0 @ 0x93;
"45
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;SC8P062BD.h: 45: volatile unsigned char ANSEL1 @ 0x94;
"46
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;SC8P062BD.h: 46: volatile unsigned char ADCON0 @ 0x95;
"47
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;SC8P062BD.h: 47: volatile unsigned char ADCON1 @ 0x96;
"48
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 48: volatile unsigned char ADRESL @ 0x98;
"49
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 49: volatile unsigned char ADRESH @ 0x99;
"50
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 50: volatile unsigned char PWMD2L @ 0x9B;
"51
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 51: volatile unsigned char PWMD3L @ 0x9C;
"52
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 52: volatile unsigned char PWM23DT @ 0x9D;
"53
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 53: volatile unsigned char PWMD23H @ 0x9E;
"55
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;SC8P062BD.h: 55: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"56
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;SC8P062BD.h: 56: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"57
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;SC8P062BD.h: 57: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"58
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;SC8P062BD.h: 58: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"59
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;SC8P062BD.h: 59: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"60
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;SC8P062BD.h: 60: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"61
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;SC8P062BD.h: 61: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"62
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;SC8P062BD.h: 62: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"65
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;SC8P062BD.h: 65: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"66
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;SC8P062BD.h: 66: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"67
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;SC8P062BD.h: 67: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"68
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;SC8P062BD.h: 68: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"69
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;SC8P062BD.h: 69: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"70
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P062BD.h: 70: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"71
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;SC8P062BD.h: 71: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"72
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P062BD.h: 72: volatile bit C @ ((unsigned)&STATUS*8)+0;
"75
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P062BD.h: 75: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"76
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P062BD.h: 76: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"77
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P062BD.h: 77: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"78
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P062BD.h: 78: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"79
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P062BD.h: 79: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"80
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P062BD.h: 80: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"81
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P062BD.h: 81: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"82
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P062BD.h: 82: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"85
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;SC8P062BD.h: 85: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"86
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;SC8P062BD.h: 86: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"87
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;SC8P062BD.h: 87: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"88
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;SC8P062BD.h: 88: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"89
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;SC8P062BD.h: 89: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"90
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;SC8P062BD.h: 90: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"91
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;SC8P062BD.h: 91: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"92
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;SC8P062BD.h: 92: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"95
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;SC8P062BD.h: 95: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"96
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;SC8P062BD.h: 96: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"97
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;SC8P062BD.h: 97: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"98
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;SC8P062BD.h: 98: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"99
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;SC8P062BD.h: 99: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"100
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;SC8P062BD.h: 100: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"101
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;SC8P062BD.h: 101: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"104
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;SC8P062BD.h: 104: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"105
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;SC8P062BD.h: 105: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"106
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;SC8P062BD.h: 106: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"107
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;SC8P062BD.h: 107: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"108
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;SC8P062BD.h: 108: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"109
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;SC8P062BD.h: 109: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"110
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;SC8P062BD.h: 110: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"111
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P062BD.h: 111: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"114
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;SC8P062BD.h: 114: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"115
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;SC8P062BD.h: 115: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"116
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;SC8P062BD.h: 116: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"117
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;SC8P062BD.h: 117: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"118
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P062BD.h: 118: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"119
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;SC8P062BD.h: 119: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"120
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;SC8P062BD.h: 120: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"121
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P062BD.h: 121: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"124
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;SC8P062BD.h: 124: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"125
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;SC8P062BD.h: 125: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"126
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;SC8P062BD.h: 126: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"127
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;SC8P062BD.h: 127: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"128
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;SC8P062BD.h: 128: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"129
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;SC8P062BD.h: 129: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"130
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;SC8P062BD.h: 130: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"131
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;SC8P062BD.h: 131: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"134
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;SC8P062BD.h: 134: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"135
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;SC8P062BD.h: 135: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"136
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;SC8P062BD.h: 136: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"137
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;SC8P062BD.h: 137: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"138
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;SC8P062BD.h: 138: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"139
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;SC8P062BD.h: 139: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"140
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;SC8P062BD.h: 140: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"143
[v _CMPIF `Vb ~T0 @X0 1 e@109 ]
[; ;SC8P062BD.h: 143: volatile bit CMPIF @ ((unsigned)&PIR1*8)+5;
"144
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;SC8P062BD.h: 144: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"145
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;SC8P062BD.h: 145: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"146
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;SC8P062BD.h: 146: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"147
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;SC8P062BD.h: 147: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"150
[v _CMPIE `Vb ~T0 @X0 1 e@117 ]
[; ;SC8P062BD.h: 150: volatile bit CMPIE @ ((unsigned)&PIE1*8)+5;
"151
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;SC8P062BD.h: 151: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"152
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;SC8P062BD.h: 152: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"153
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;SC8P062BD.h: 153: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"154
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;SC8P062BD.h: 154: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"157
[v _CMPEN `Vb ~T0 @X0 1 e@127 ]
[; ;SC8P062BD.h: 157: volatile bit CMPEN @ ((unsigned)&CMPCON0*8)+7;
"158
[v _CMPPS `Vb ~T0 @X0 1 e@126 ]
[; ;SC8P062BD.h: 158: volatile bit CMPPS @ ((unsigned)&CMPCON0*8)+6;
"159
[v _CMPNS2 `Vb ~T0 @X0 1 e@125 ]
[; ;SC8P062BD.h: 159: volatile bit CMPNS2 @ ((unsigned)&CMPCON0*8)+5;
"160
[v _CMPNS1 `Vb ~T0 @X0 1 e@124 ]
[; ;SC8P062BD.h: 160: volatile bit CMPNS1 @ ((unsigned)&CMPCON0*8)+4;
"161
[v _CMPNS0 `Vb ~T0 @X0 1 e@123 ]
[; ;SC8P062BD.h: 161: volatile bit CMPNS0 @ ((unsigned)&CMPCON0*8)+3;
"162
[v _CMPNV `Vb ~T0 @X0 1 e@122 ]
[; ;SC8P062BD.h: 162: volatile bit CMPNV @ ((unsigned)&CMPCON0*8)+2;
"163
[v _CMPOUT `Vb ~T0 @X0 1 e@121 ]
[; ;SC8P062BD.h: 163: volatile bit CMPOUT @ ((unsigned)&CMPCON0*8)+1;
"164
[v _CMPOEN `Vb ~T0 @X0 1 e@120 ]
[; ;SC8P062BD.h: 164: volatile bit CMPOEN @ ((unsigned)&CMPCON0*8)+0;
"167
[v _CMPIM `Vb ~T0 @X0 1 e@135 ]
[; ;SC8P062BD.h: 167: volatile bit CMPIM @ ((unsigned)&CMPCON1*8)+7;
"168
[v _AN_EN `Vb ~T0 @X0 1 e@134 ]
[; ;SC8P062BD.h: 168: volatile bit AN_EN @ ((unsigned)&CMPCON1*8)+6;
"169
[v _RBIAS_H `Vb ~T0 @X0 1 e@133 ]
[; ;SC8P062BD.h: 169: volatile bit RBIAS_H @ ((unsigned)&CMPCON1*8)+5;
"170
[v _RBIAS_L `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P062BD.h: 170: volatile bit RBIAS_L @ ((unsigned)&CMPCON1*8)+4;
"171
[v _LVDS3 `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P062BD.h: 171: volatile bit LVDS3 @ ((unsigned)&CMPCON1*8)+3;
"172
[v _LVDS2 `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P062BD.h: 172: volatile bit LVDS2 @ ((unsigned)&CMPCON1*8)+2;
"173
[v _LVDS1 `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P062BD.h: 173: volatile bit LVDS1 @ ((unsigned)&CMPCON1*8)+1;
"174
[v _LVDS0 `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P062BD.h: 174: volatile bit LVDS0 @ ((unsigned)&CMPCON1*8)+0;
"177
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;SC8P062BD.h: 177: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"178
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;SC8P062BD.h: 178: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"179
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;SC8P062BD.h: 179: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"180
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;SC8P062BD.h: 180: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"181
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;SC8P062BD.h: 181: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"182
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;SC8P062BD.h: 182: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"183
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;SC8P062BD.h: 183: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"184
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;SC8P062BD.h: 184: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"187
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;SC8P062BD.h: 187: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"188
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;SC8P062BD.h: 188: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"189
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;SC8P062BD.h: 189: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"190
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;SC8P062BD.h: 190: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"193
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;SC8P062BD.h: 193: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"194
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P062BD.h: 194: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"195
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;SC8P062BD.h: 195: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"196
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;SC8P062BD.h: 196: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"197
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;SC8P062BD.h: 197: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"198
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;SC8P062BD.h: 198: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"199
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;SC8P062BD.h: 199: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"200
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;SC8P062BD.h: 200: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"203
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;SC8P062BD.h: 203: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"204
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;SC8P062BD.h: 204: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"205
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;SC8P062BD.h: 205: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"206
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;SC8P062BD.h: 206: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"207
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;SC8P062BD.h: 207: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"208
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;SC8P062BD.h: 208: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"211
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;SC8P062BD.h: 211: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"212
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;SC8P062BD.h: 212: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"213
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;SC8P062BD.h: 213: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"214
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;SC8P062BD.h: 214: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"215
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;SC8P062BD.h: 215: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"216
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;SC8P062BD.h: 216: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"219
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;SC8P062BD.h: 219: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"220
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;SC8P062BD.h: 220: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"221
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;SC8P062BD.h: 221: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"222
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;SC8P062BD.h: 222: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"223
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;SC8P062BD.h: 223: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"226
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;SC8P062BD.h: 226: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"227
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;SC8P062BD.h: 227: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"228
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;SC8P062BD.h: 228: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"229
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;SC8P062BD.h: 229: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"232
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;SC8P062BD.h: 232: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"233
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;SC8P062BD.h: 233: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"234
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;SC8P062BD.h: 234: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"235
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;SC8P062BD.h: 235: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"236
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;SC8P062BD.h: 236: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"237
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;SC8P062BD.h: 237: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"240
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;SC8P062BD.h: 240: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"241
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;SC8P062BD.h: 241: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"242
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;SC8P062BD.h: 242: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"243
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;SC8P062BD.h: 243: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"244
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;SC8P062BD.h: 244: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"245
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;SC8P062BD.h: 245: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"248
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;SC8P062BD.h: 248: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"249
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;SC8P062BD.h: 249: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"250
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;SC8P062BD.h: 250: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"251
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;SC8P062BD.h: 251: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"252
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;SC8P062BD.h: 252: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"253
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;SC8P062BD.h: 253: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"256
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;SC8P062BD.h: 256: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"257
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;SC8P062BD.h: 257: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"258
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;SC8P062BD.h: 258: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"259
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;SC8P062BD.h: 259: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"260
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;SC8P062BD.h: 260: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"261
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;SC8P062BD.h: 261: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"264
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;SC8P062BD.h: 264: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"265
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;SC8P062BD.h: 265: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"266
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;SC8P062BD.h: 266: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"267
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;SC8P062BD.h: 267: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"268
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;SC8P062BD.h: 268: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"269
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;SC8P062BD.h: 269: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"272
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;SC8P062BD.h: 272: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"273
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;SC8P062BD.h: 273: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"274
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;SC8P062BD.h: 274: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"275
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;SC8P062BD.h: 275: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"276
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;SC8P062BD.h: 276: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"277
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;SC8P062BD.h: 277: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"280
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;SC8P062BD.h: 280: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"281
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;SC8P062BD.h: 281: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"282
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;SC8P062BD.h: 282: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"283
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;SC8P062BD.h: 283: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"284
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;SC8P062BD.h: 284: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"285
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;SC8P062BD.h: 285: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"288
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;SC8P062BD.h: 288: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"289
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;SC8P062BD.h: 289: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"290
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;SC8P062BD.h: 290: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"291
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;SC8P062BD.h: 291: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"292
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;SC8P062BD.h: 292: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"293
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;SC8P062BD.h: 293: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"296
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;SC8P062BD.h: 296: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"297
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;SC8P062BD.h: 297: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"298
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;SC8P062BD.h: 298: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"299
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;SC8P062BD.h: 299: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"300
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;SC8P062BD.h: 300: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"301
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;SC8P062BD.h: 301: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"302
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;SC8P062BD.h: 302: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"305
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;SC8P062BD.h: 305: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"306
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;SC8P062BD.h: 306: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"307
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;SC8P062BD.h: 307: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"308
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;SC8P062BD.h: 308: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"309
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;SC8P062BD.h: 309: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"310
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;SC8P062BD.h: 310: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"311
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;SC8P062BD.h: 311: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"312
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;SC8P062BD.h: 312: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"315
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;SC8P062BD.h: 315: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"316
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;SC8P062BD.h: 316: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"317
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;SC8P062BD.h: 317: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"318
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;SC8P062BD.h: 318: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"319
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;SC8P062BD.h: 319: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"322
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;SC8P062BD.h: 322: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"323
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;SC8P062BD.h: 323: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"324
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;SC8P062BD.h: 324: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"325
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;SC8P062BD.h: 325: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"26 C:\mcuproject\scm\zdt\D109_062B_SOP16\main.c
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 26: volatile unsigned int adresult;
"27
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 27: volatile unsigned int result;
"28
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 28: volatile unsigned char test_adc;
"29
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 29: volatile unsigned int power_ad;
"30
[v _intCount `uc ~T0 @X0 1 e ]
[; ;main.c: 30: unsigned char intCount;
"31
[v _count1s `uc ~T0 @X0 1 e ]
[; ;main.c: 31: unsigned char count1s;
"32
[v _IntFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 32: unsigned char IntFlag;
"33
[v _chrgFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 33: unsigned char chrgFlag;
"34
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 34: unsigned char chrgFullFlag;
"35
[v _intCount10 `uc ~T0 @X0 1 e ]
[; ;main.c: 35: unsigned char intCount10;
"36
[v _outADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 36: unsigned int outADValue;
"37
[v _batADValue `ui ~T0 @X0 1 e ]
[; ;main.c: 37: unsigned int batADValue;
"38
[v _countHalfFull `uc ~T0 @X0 1 e ]
[; ;main.c: 38: unsigned char countHalfFull;
"39
[v _protectFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 39: unsigned char protectFlag;
"40
[v _workOverOutTime `uc ~T0 @X0 1 e ]
[; ;main.c: 40: unsigned char workOverOutTime;
"41
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 41: unsigned char workStep = 0;
"42
[v _ledCnt `uc ~T0 @X0 1 e ]
[; ;main.c: 42: unsigned char ledCnt;
"43
[v _ledStep `uc ~T0 @X0 1 e ]
[; ;main.c: 43: unsigned char ledStep;
"44
[v _keyCount `uc ~T0 @X0 1 e ]
[; ;main.c: 44: unsigned char keyCount;
"45
[v _longPressFlag `uc ~T0 @X0 1 e ]
[; ;main.c: 45: unsigned char longPressFlag;
"46
[v _maxDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 46: unsigned char maxDuty;
"47
[v _overCount `uc ~T0 @X0 1 e ]
[; ;main.c: 47: unsigned char overCount;
"48
[v _addPowerCount `uc ~T0 @X0 1 e ]
[; ;main.c: 48: unsigned char addPowerCount;
"49
[v _tempDuty `uc ~T0 @X0 1 e ]
[; ;main.c: 49: unsigned char tempDuty;
"50
[v _startTime `uc ~T0 @X0 1 e ]
[; ;main.c: 50: unsigned char startTime;
"51
[v _firstTime `uc ~T0 @X0 1 e ]
[; ;main.c: 51: unsigned char firstTime;
"52
[v _overChrgTime `uc ~T0 @X0 1 e ]
[; ;main.c: 52: unsigned char overChrgTime;
"53
[v _pwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 53: unsigned char pwStep;
"54
[v _prePwStep `uc ~T0 @X0 1 e ]
[; ;main.c: 54: unsigned char prePwStep;
"55
[v _count50s `ui ~T0 @X0 1 e ]
[; ;main.c: 55: unsigned int count50s;
"56
[v _reChrgCount `uc ~T0 @X0 1 e ]
[; ;main.c: 56: unsigned char reChrgCount;
"57
[v _lockLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 57: unsigned char lockLedStep;
"58
[v _showBatTime `uc ~T0 @X0 1 e ]
[; ;main.c: 58: unsigned char showBatTime;
"59
[v _chrgMode `uc ~T0 @X0 1 e ]
[i _chrgMode
-> -> 0 `i `uc
]
[; ;main.c: 59: unsigned char chrgMode = 0;
"60
[v _chrgMaxAD `uc ~T0 @X0 1 e ]
[i _chrgMaxAD
-> -> 0 `i `uc
]
[; ;main.c: 60: unsigned char chrgMaxAD = 0;
"61
[v _lockCount `uc ~T0 @X0 1 e ]
[i _lockCount
-> -> 0 `i `uc
]
[; ;main.c: 61: unsigned char lockCount = 0;
"62
[v _fullCount `ui ~T0 @X0 1 e ]
[i _fullCount
-> -> 0 `i `ui
]
[; ;main.c: 62: unsigned int fullCount = 0;
"63
[v _addTime `uc ~T0 @X0 1 e ]
[; ;main.c: 63: unsigned char addTime;
"64
[v _subTime `uc ~T0 @X0 1 e ]
[; ;main.c: 64: unsigned char subTime;
"65
[v _chrgWaitTime `uc ~T0 @X0 1 e ]
[; ;main.c: 65: unsigned char chrgWaitTime;
"66
[v _chrgMaxDuty `uc ~T0 @X0 1 e ]
[i _chrgMaxDuty
-> -> 0 `i `uc
]
[; ;main.c: 66: unsigned char chrgMaxDuty = 0;
"67
[v _ledCntTime `uc ~T0 @X0 1 e ]
[; ;main.c: 67: unsigned char ledCntTime;
"68
[v _count5s `ui ~T0 @X0 1 e ]
[i _count5s
-> -> 0 `i `ui
]
[; ;main.c: 68: unsigned int count5s = 0;
"69
[v _overWorkTime `uc ~T0 @X0 1 e ]
[; ;main.c: 69: unsigned char overWorkTime;
"70
[v _preLedStep `uc ~T0 @X0 1 e ]
[; ;main.c: 70: unsigned char preLedStep;
"71
[v _count8s `ui ~T0 @X0 1 e ]
[; ;main.c: 71: unsigned int count8s;
"72
[v _count900s `ui ~T0 @X0 1 e ]
[; ;main.c: 72: unsigned int count900s;
"73
[v _lowBatFlag `uc ~T0 @X0 1 e ]
[i _lowBatFlag
-> -> 0 `i `uc
]
[; ;main.c: 73: unsigned char lowBatFlag = 0;
"74
[v _sleepTime `uc ~T0 @X0 1 e ]
[; ;main.c: 74: unsigned char sleepTime;
"75
[v _startChrgTime `uc ~T0 @X0 1 e ]
[i _startChrgTime
-> -> 0 `i `uc
]
[; ;main.c: 75: unsigned char startChrgTime = 0;
"76
[v _ledTime `uc ~T0 @X0 1 e ]
[i _ledTime
-> -> 0 `i `uc
]
[; ;main.c: 76: unsigned char ledTime = 0;
"77
[v _ledDuty `uc ~T0 @X0 1 e ]
[i _ledDuty
-> -> 0 `i `uc
]
[; ;main.c: 77: unsigned char ledDuty = 0;
"78
[v _ledBreathTime `uc ~T0 @X0 1 e ]
[i _ledBreathTime
-> -> 0 `i `uc
]
[; ;main.c: 78: unsigned char ledBreathTime = 0;
[; ;main.c: 80: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
[; ;main.c: 81: void DelayXms(unsigned char x);
[; ;main.c: 82: unsigned char ADC_Result(unsigned char adch);
[; ;main.c: 83: void Init_System();
[; ;main.c: 84: void AD_Init();
[; ;main.c: 85: void Sleep_Mode();
[; ;main.c: 86: void pwmInit();
[; ;main.c: 87: void pwmStop();
[; ;main.c: 88: void chrgPwmInit();
[; ;main.c: 89: void chrgPwmStop();
[; ;main.c: 90: void chrgCtr();
[; ;main.c: 91: void checkOutA();
[; ;main.c: 92: void checkBatAD();
[; ;main.c: 93: void ledShow();
[; ;main.c: 94: void keyCtr();
[; ;main.c: 95: void workCtr();
[; ;main.c: 96: void ledCtr();
[; ;main.c: 97: char keyRead(char keyStatus);
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F560 `(v ~T0 @X0 1 tf ]
"112
[v _Isr_Timer `IF560 ~T0 @X0 1 e ]
"113
{
[; ;main.c: 112: void interrupt Isr_Timer()
[; ;main.c: 113: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 114: if(TMR2IF)
"114
[e $ ! _TMR2IF 2  ]
[; ;main.c: 115: {
"115
{
[; ;main.c: 116: TMR2IF = 0;
"116
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 117: if(++intCount >= 160)
"117
[e $ ! >= -> =+ _intCount -> -> 1 `i `uc `i -> 160 `i 3  ]
[; ;main.c: 118: {
"118
{
[; ;main.c: 119: intCount = 0;
"119
[e = _intCount -> -> 0 `i `uc ]
[; ;main.c: 120: IntFlag = 1;
"120
[e = _IntFlag -> -> 1 `i `uc ]
[; ;main.c: 121: if(++count1s >= 100)
"121
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 4  ]
[; ;main.c: 122: {
"122
{
[; ;main.c: 123: count1s = 0;
"123
[e = _count1s -> -> 0 `i `uc ]
"124
}
[e :U 4 ]
"125
}
[e :U 3 ]
[; ;main.c: 124: }
[; ;main.c: 125: }
[; ;main.c: 126: ledShow();
"126
[e ( _ledShow ..  ]
[; ;main.c: 127: intCount10++;
"127
[e ++ _intCount10 -> -> 1 `i `uc ]
"128
}
[e :U 2 ]
[; ;main.c: 128: }
[; ;main.c: 130: }
"130
[e :UE 1 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"136
[v _main `(v ~T0 @X0 1 ef ]
"137
{
[; ;main.c: 136: void main()
[; ;main.c: 137: {
[e :U _main ]
[f ]
[; ;main.c: 138: Init_System();
"138
[e ( _Init_System ..  ]
[; ;main.c: 139: AD_Init();
"139
[e ( _AD_Init ..  ]
[; ;main.c: 140: firstTime = 100;
"140
[e = _firstTime -> -> 100 `i `uc ]
[; ;main.c: 141: while (1)
"141
[e :U 7 ]
[; ;main.c: 142: {
"142
{
[; ;main.c: 143: asm("clrwdt");
"143
[; <" clrwdt ;# ">
[; ;main.c: 144: if(intCount10 > 10)
"144
[e $ ! > -> _intCount10 `i -> 10 `i 9  ]
[; ;main.c: 145: {
"145
{
[; ;main.c: 146: intCount10 = 0;
"146
[e = _intCount10 -> -> 0 `i `uc ]
[; ;main.c: 147: checkOutA();
"147
[e ( _checkOutA ..  ]
"148
}
[e :U 9 ]
[; ;main.c: 148: }
[; ;main.c: 149: if(!IntFlag)
"149
[e $ ! ! != -> _IntFlag `i -> -> -> 0 `i `uc `i 10  ]
[; ;main.c: 150: continue;
"150
[e $U 6  ]
[e :U 10 ]
[; ;main.c: 151: IntFlag = 0;
"151
[e = _IntFlag -> -> 0 `i `uc ]
[; ;main.c: 152: chrgCtr();
"152
[e ( _chrgCtr ..  ]
[; ;main.c: 153: checkBatAD();
"153
[e ( _checkBatAD ..  ]
[; ;main.c: 154: if(chrgFlag == 0 && lowBatFlag == 0)
"154
[e $ ! && == -> _chrgFlag `i -> 0 `i == -> _lowBatFlag `i -> 0 `i 11  ]
[; ;main.c: 155: {
"155
{
[; ;main.c: 156: keyCtr();
"156
[e ( _keyCtr ..  ]
"157
}
[e :U 11 ]
[; ;main.c: 157: }
[; ;main.c: 158: workCtr();
"158
[e ( _workCtr ..  ]
[; ;main.c: 159: ledCtr();
"159
[e ( _ledCtr ..  ]
[; ;main.c: 160: if(chrgFlag == 0 && workStep == 0 && keyCount == 0 && firstTime == 0 && showBatTime == 0)
"160
[e $ ! && && && && == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _firstTime `i -> 0 `i == -> _showBatTime `i -> 0 `i 12  ]
[; ;main.c: 161: {
"161
{
[; ;main.c: 162: if(++sleepTime >= 200)
"162
[e $ ! >= -> =+ _sleepTime -> -> 1 `i `uc `i -> 200 `i 13  ]
[; ;main.c: 163: {
"163
{
[; ;main.c: 164: sleepTime = 0;
"164
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 165: Sleep_Mode();
"165
[e ( _Sleep_Mode ..  ]
"166
}
[e :U 13 ]
"167
}
[; ;main.c: 166: }
[; ;main.c: 167: }
[e $U 14  ]
"168
[e :U 12 ]
[; ;main.c: 168: else
[; ;main.c: 169: {
"169
{
[; ;main.c: 170: sleepTime = 0;
"170
[e = _sleepTime -> -> 0 `i `uc ]
"171
}
[e :U 14 ]
"172
}
[e :U 6 ]
"141
[e $U 7  ]
[e :U 8 ]
[; ;main.c: 171: }
[; ;main.c: 172: }
[; ;main.c: 173: }
"173
[e :UE 5 ]
}
"175
[v _ledShow `(v ~T0 @X0 1 ef ]
"176
{
[; ;main.c: 175: void ledShow()
[; ;main.c: 176: {
[e :U _ledShow ]
[f ]
[; ;main.c: 178: if(++ledCntTime > 30)
"178
[e $ ! > -> =+ _ledCntTime -> -> 1 `i `uc `i -> 30 `i 16  ]
[; ;main.c: 179: {
"179
{
[; ;main.c: 180: ledCntTime = 0;
"180
[e = _ledCntTime -> -> 0 `i `uc ]
[; ;main.c: 181: if(++ledCnt > 5)
"181
[e $ ! > -> =+ _ledCnt -> -> 1 `i `uc `i -> 5 `i 17  ]
[; ;main.c: 182: {
"182
{
[; ;main.c: 183: ledCnt = 0;
"183
[e = _ledCnt -> -> 0 `i `uc ]
"184
}
[e :U 17 ]
[; ;main.c: 184: }
[; ;main.c: 185: PORTB &= 0x7C;
"185
[e =& _PORTB -> -> 124 `i `uc ]
[; ;main.c: 186: TRISB |= 0x83;
"186
[e =| _TRISB -> -> 131 `i `uc ]
[; ;main.c: 187: switch(ledCnt)
"187
[e $U 19  ]
[; ;main.c: 188: {
"188
{
[; ;main.c: 189: case 1:
"189
[e :U 20 ]
[; ;main.c: 190: if(ledStep > 0)
"190
[e $ ! > -> _ledStep `i -> 0 `i 21  ]
[; ;main.c: 191: {
"191
{
[; ;main.c: 192: TRISB &= 0xFD;
"192
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 193: TRISB &= 0xFE;
"193
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 194: RB1 = 1;
"194
[e = _RB1 -> -> 1 `i `b ]
[; ;main.c: 195: RB0 = 0;
"195
[e = _RB0 -> -> 0 `i `b ]
"196
}
[e :U 21 ]
[; ;main.c: 196: }
[; ;main.c: 197: break;
"197
[e $U 18  ]
[; ;main.c: 198: case 2:
"198
[e :U 22 ]
[; ;main.c: 199: if(ledStep > 1)
"199
[e $ ! > -> _ledStep `i -> 1 `i 23  ]
[; ;main.c: 200: {
"200
{
[; ;main.c: 201: TRISB &= 0xFE;
"201
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 202: TRISB &= 0x7F;
"202
[e =& _TRISB -> -> 127 `i `uc ]
[; ;main.c: 203: RB7 = 1;
"203
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 204: RB0 = 0;
"204
[e = _RB0 -> -> 0 `i `b ]
"205
}
[e :U 23 ]
[; ;main.c: 205: }
[; ;main.c: 206: break;
"206
[e $U 18  ]
[; ;main.c: 207: case 3:
"207
[e :U 24 ]
[; ;main.c: 208: if(ledStep > 2)
"208
[e $ ! > -> _ledStep `i -> 2 `i 25  ]
[; ;main.c: 209: {
"209
{
[; ;main.c: 210: TRISB &= 0xFE;
"210
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 211: TRISB &= 0x7F;
"211
[e =& _TRISB -> -> 127 `i `uc ]
[; ;main.c: 212: RB0 = 1;
"212
[e = _RB0 -> -> 1 `i `b ]
[; ;main.c: 213: RB7 = 0;
"213
[e = _RB7 -> -> 0 `i `b ]
"214
}
[e :U 25 ]
[; ;main.c: 214: }
[; ;main.c: 215: break;
"215
[e $U 18  ]
[; ;main.c: 216: case 4:
"216
[e :U 26 ]
[; ;main.c: 217: if(ledStep > 3)
"217
[e $ ! > -> _ledStep `i -> 3 `i 27  ]
[; ;main.c: 218: {
"218
{
[; ;main.c: 219: TRISB &= 0xFD;
"219
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 220: TRISB &= 0x7F;
"220
[e =& _TRISB -> -> 127 `i `uc ]
[; ;main.c: 221: RB1 = 1;
"221
[e = _RB1 -> -> 1 `i `b ]
[; ;main.c: 222: RB7 = 0;
"222
[e = _RB7 -> -> 0 `i `b ]
"223
}
[e :U 27 ]
[; ;main.c: 223: }
[; ;main.c: 224: break;
"224
[e $U 18  ]
[; ;main.c: 225: case 5:
"225
[e :U 28 ]
[; ;main.c: 226: if(ledStep > 4)
"226
[e $ ! > -> _ledStep `i -> 4 `i 29  ]
[; ;main.c: 227: {
"227
{
[; ;main.c: 228: TRISB &= 0xFD;
"228
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 229: TRISB &= 0xFE;
"229
[e =& _TRISB -> -> 254 `i `uc ]
[; ;main.c: 230: RB0 = 1;
"230
[e = _RB0 -> -> 1 `i `b ]
[; ;main.c: 231: RB1 = 0;
"231
[e = _RB1 -> -> 0 `i `b ]
"232
}
[e :U 29 ]
[; ;main.c: 232: }
[; ;main.c: 233: break;
"233
[e $U 18  ]
[; ;main.c: 234: case 0:
"234
[e :U 30 ]
[; ;main.c: 235: if(ledStep > 5)
"235
[e $ ! > -> _ledStep `i -> 5 `i 31  ]
[; ;main.c: 236: {
"236
{
[; ;main.c: 237: TRISB &= 0xFD;
"237
[e =& _TRISB -> -> 253 `i `uc ]
[; ;main.c: 238: TRISB &= 0x7F;
"238
[e =& _TRISB -> -> 127 `i `uc ]
[; ;main.c: 239: RB7 = 1;
"239
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 240: RB1 = 0;
"240
[e = _RB1 -> -> 0 `i `b ]
"241
}
[e :U 31 ]
[; ;main.c: 241: }
[; ;main.c: 242: break;
"242
[e $U 18  ]
[; ;main.c: 243: default:
"243
[e :U 32 ]
[; ;main.c: 244: break;
"244
[e $U 18  ]
"245
}
[; ;main.c: 245: }
[e $U 18  ]
"187
[e :U 19 ]
[e [\ _ledCnt , $ -> -> 1 `i `uc 20
 , $ -> -> 2 `i `uc 22
 , $ -> -> 3 `i `uc 24
 , $ -> -> 4 `i `uc 26
 , $ -> -> 5 `i `uc 28
 , $ -> -> 0 `i `uc 30
 32 ]
"245
[e :U 18 ]
"246
}
[e :U 16 ]
[; ;main.c: 246: }
[; ;main.c: 249: }
"249
[e :UE 15 ]
}
"252
[v _ledCtr `(v ~T0 @X0 1 ef ]
"253
{
[; ;main.c: 252: void ledCtr()
[; ;main.c: 253: {
[e :U _ledCtr ]
[f ]
[; ;main.c: 254: if(firstTime > 0)
"254
[e $ ! > -> _firstTime `i -> 0 `i 34  ]
[; ;main.c: 255: {
"255
{
[; ;main.c: 256: firstTime--;
"256
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 257: ledStep = 6;
"257
[e = _ledStep -> -> 6 `i `uc ]
[; ;main.c: 258: if(prePwStep < pwStep)
"258
[e $ ! < -> _prePwStep `i -> _pwStep `i 35  ]
[; ;main.c: 259: {
"259
{
[; ;main.c: 260: prePwStep = pwStep;
"260
[e = _prePwStep _pwStep ]
"261
}
[e :U 35 ]
"262
}
[; ;main.c: 261: }
[; ;main.c: 262: }
[e $U 36  ]
"263
[e :U 34 ]
[; ;main.c: 263: else if(overWorkTime > 0)
[e $ ! > -> _overWorkTime `i -> 0 `i 37  ]
[; ;main.c: 264: {
"264
{
[; ;main.c: 265: overWorkTime--;
"265
[e -- _overWorkTime -> -> 1 `i `uc ]
[; ;main.c: 266: if(overWorkTime % 60 < 30)
"266
[e $ ! < % -> _overWorkTime `i -> 60 `i -> 30 `i 38  ]
[; ;main.c: 267: {
"267
{
[; ;main.c: 268: ledStep = preLedStep;
"268
[e = _ledStep _preLedStep ]
"269
}
[; ;main.c: 269: }
[e $U 39  ]
"270
[e :U 38 ]
[; ;main.c: 270: else
[; ;main.c: 271: {
"271
{
[; ;main.c: 272: ledStep = 0;
"272
[e = _ledStep -> -> 0 `i `uc ]
"273
}
[e :U 39 ]
"274
}
[; ;main.c: 273: }
[; ;main.c: 274: }
[e $U 40  ]
"275
[e :U 37 ]
[; ;main.c: 275: else if(showBatTime > 0)
[e $ ! > -> _showBatTime `i -> 0 `i 41  ]
[; ;main.c: 276: {
"276
{
[; ;main.c: 277: showBatTime--;
"277
[e -- _showBatTime -> -> 1 `i `uc ]
[; ;main.c: 278: if(prePwStep >= 14)
"278
[e $ ! >= -> _prePwStep `i -> 14 `i 42  ]
[; ;main.c: 279: {
"279
{
[; ;main.c: 280: ledStep = prePwStep/14;
"280
[e = _ledStep -> / -> _prePwStep `i -> 14 `i `uc ]
"281
}
[; ;main.c: 281: }
[e $U 43  ]
"282
[e :U 42 ]
[; ;main.c: 282: else if(prePwStep > 5)
[e $ ! > -> _prePwStep `i -> 5 `i 44  ]
[; ;main.c: 283: {
"283
{
[; ;main.c: 284: ledStep = 1;
"284
[e = _ledStep -> -> 1 `i `uc ]
"285
}
[; ;main.c: 285: }
[e $U 45  ]
"286
[e :U 44 ]
[; ;main.c: 286: else
[; ;main.c: 287: {
"287
{
[; ;main.c: 288: if(count1s < 50)
"288
[e $ ! < -> _count1s `i -> 50 `i 46  ]
[; ;main.c: 289: {
"289
{
[; ;main.c: 290: ledStep = 1;
"290
[e = _ledStep -> -> 1 `i `uc ]
"291
}
[; ;main.c: 291: }
[e $U 47  ]
"292
[e :U 46 ]
[; ;main.c: 292: else
[; ;main.c: 293: {
"293
{
[; ;main.c: 294: ledStep = 0;
"294
[e = _ledStep -> -> 0 `i `uc ]
"295
}
[e :U 47 ]
"296
}
[e :U 45 ]
[e :U 43 ]
"297
}
[; ;main.c: 295: }
[; ;main.c: 296: }
[; ;main.c: 297: }
[e $U 48  ]
"298
[e :U 41 ]
[; ;main.c: 298: else if(workStep > 0)
[e $ ! > -> _workStep `i -> 0 `i 49  ]
[; ;main.c: 299: {
"299
{
[; ;main.c: 300: ledStep = workStep;
"300
[e = _ledStep _workStep ]
"301
}
[; ;main.c: 301: }
[e $U 50  ]
"302
[e :U 49 ]
[; ;main.c: 302: else if(chrgFlag)
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 51  ]
[; ;main.c: 303: {
"303
{
[; ;main.c: 304: if(count1s % 50 == 0)
"304
[e $ ! == % -> _count1s `i -> 50 `i -> 0 `i 52  ]
[; ;main.c: 305: {
"305
{
[; ;main.c: 306: if(++ledStep > 6)
"306
[e $ ! > -> =+ _ledStep -> -> 1 `i `uc `i -> 6 `i 53  ]
[; ;main.c: 307: {
"307
{
[; ;main.c: 308: ledStep = lockLedStep;
"308
[e = _ledStep _lockLedStep ]
"309
}
[e :U 53 ]
"310
}
[e :U 52 ]
"311
}
[; ;main.c: 309: }
[; ;main.c: 310: }
[; ;main.c: 311: }
[e $U 54  ]
"312
[e :U 51 ]
[; ;main.c: 312: else
[; ;main.c: 313: {
"313
{
[; ;main.c: 314: ledStep = 0;
"314
[e = _ledStep -> -> 0 `i `uc ]
"315
}
[e :U 54 ]
[e :U 50 ]
[e :U 48 ]
[e :U 40 ]
[e :U 36 ]
[; ;main.c: 315: }
[; ;main.c: 316: }
"316
[e :UE 33 ]
}
"320
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"321
{
[; ;main.c: 320: void chrgCtr()
[; ;main.c: 321: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 322: if(PORTB & 0x04)
"322
[e $ ! != & -> _PORTB `i -> 4 `i -> 0 `i 56  ]
[; ;main.c: 323: {
"323
{
[; ;main.c: 324: if(chrgFlag == 0)
"324
[e $ ! == -> _chrgFlag `i -> 0 `i 57  ]
[; ;main.c: 325: {
"325
{
[; ;main.c: 326: chrgFlag = 1;
"326
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 327: ledStep = 0;
"327
[e = _ledStep -> -> 0 `i `uc ]
[; ;main.c: 328: chrgMaxDuty = 0;
"328
[e = _chrgMaxDuty -> -> 0 `i `uc ]
"329
}
[e :U 57 ]
[; ;main.c: 329: }
[; ;main.c: 330: workStep = 0;
"330
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 331: lowBatFlag = 0;
"331
[e = _lowBatFlag -> -> 0 `i `uc ]
[; ;main.c: 332: if(prePwStep < pwStep)
"332
[e $ ! < -> _prePwStep `i -> _pwStep `i 58  ]
[; ;main.c: 333: {
"333
{
[; ;main.c: 334: if(++count50s > 7200)
"334
[e $ ! > =+ _count50s -> -> 1 `i `ui -> -> 7200 `i `ui 59  ]
[; ;main.c: 335: {
"335
{
[; ;main.c: 336: count50s = 0;
"336
[e = _count50s -> -> 0 `i `ui ]
[; ;main.c: 337: prePwStep++;
"337
[e ++ _prePwStep -> -> 1 `i `uc ]
"338
}
[e :U 59 ]
"339
}
[; ;main.c: 338: }
[; ;main.c: 339: }
[e $U 60  ]
"340
[e :U 58 ]
[; ;main.c: 340: else
[; ;main.c: 341: {
"341
{
[; ;main.c: 342: count50s = 0;
"342
[e = _count50s -> -> 0 `i `ui ]
"343
}
[e :U 60 ]
[; ;main.c: 343: }
[; ;main.c: 344: if(prePwStep < 15)
"344
[e $ ! < -> _prePwStep `i -> 15 `i 61  ]
[; ;main.c: 345: {
"345
{
[; ;main.c: 346: lockLedStep = 0;
"346
[e = _lockLedStep -> -> 0 `i `uc ]
"347
}
[; ;main.c: 347: }
[e $U 62  ]
"348
[e :U 61 ]
[; ;main.c: 348: else
[; ;main.c: 349: {
"349
{
[; ;main.c: 350: lockLedStep = (prePwStep/14) - 1;
"350
[e = _lockLedStep -> - / -> _prePwStep `i -> 14 `i -> 1 `i `uc ]
"351
}
[e :U 62 ]
"352
}
[; ;main.c: 351: }
[; ;main.c: 352: }
[e $U 63  ]
"353
[e :U 56 ]
[; ;main.c: 353: else
[; ;main.c: 354: {
"354
{
[; ;main.c: 355: startChrgTime = 0;
"355
[e = _startChrgTime -> -> 0 `i `uc ]
[; ;main.c: 356: chrgFlag = 0;
"356
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 357: chrgFullFlag = 0;
"357
[e = _chrgFullFlag -> -> 0 `i `uc ]
[; ;main.c: 358: protectFlag = 0;
"358
[e = _protectFlag -> -> 0 `i `uc ]
[; ;main.c: 359: chrgMode = 0;
"359
[e = _chrgMode -> -> 0 `i `uc ]
[; ;main.c: 360: chrgMaxAD = 0;
"360
[e = _chrgMaxAD -> -> 0 `i `uc ]
[; ;main.c: 361: chrgMaxDuty = 0;
"361
[e = _chrgMaxDuty -> -> 0 `i `uc ]
[; ;main.c: 362: lockCount = 0;
"362
[e = _lockCount -> -> 0 `i `uc ]
[; ;main.c: 363: lockLedStep = 0;
"363
[e = _lockLedStep -> -> 0 `i `uc ]
[; ;main.c: 364: chrgWaitTime = 20;
"364
[e = _chrgWaitTime -> -> 20 `i `uc ]
[; ;main.c: 365: if(prePwStep > 0 && prePwStep > pwStep)
"365
[e $ ! && > -> _prePwStep `i -> 0 `i > -> _prePwStep `i -> _pwStep `i 64  ]
[; ;main.c: 366: {
"366
{
[; ;main.c: 367: if(++count50s > 2000)
"367
[e $ ! > =+ _count50s -> -> 1 `i `ui -> -> 2000 `i `ui 65  ]
[; ;main.c: 368: {
"368
{
[; ;main.c: 369: count50s = 0;
"369
[e = _count50s -> -> 0 `i `ui ]
[; ;main.c: 370: prePwStep--;
"370
[e -- _prePwStep -> -> 1 `i `uc ]
"371
}
[e :U 65 ]
"372
}
[; ;main.c: 371: }
[; ;main.c: 372: }
[e $U 66  ]
"373
[e :U 64 ]
[; ;main.c: 373: else
[; ;main.c: 374: {
"374
{
[; ;main.c: 375: count50s = 0;
"375
[e = _count50s -> -> 0 `i `ui ]
"376
}
[e :U 66 ]
"377
}
[e :U 63 ]
[; ;main.c: 376: }
[; ;main.c: 377: }
[; ;main.c: 378: }
"378
[e :UE 55 ]
}
"382
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"383
{
[; ;main.c: 382: char keyRead(char keyStatus)
[; ;main.c: 383: {
[e :U _keyRead ]
"382
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"383
[f ]
[; ;main.c: 384: if(keyStatus)
"384
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 68  ]
[; ;main.c: 385: {
"385
{
[; ;main.c: 386: keyCount++;
"386
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 387: if(keyCount >= 100)
"387
[e $ ! >= -> _keyCount `i -> 100 `i 69  ]
[; ;main.c: 388: {
"388
{
[; ;main.c: 389: keyCount = 100;
"389
[e = _keyCount -> -> 100 `i `uc ]
[; ;main.c: 390: if(!longPressFlag)
"390
[e $ ! ! != -> _longPressFlag `i -> -> -> 0 `i `uc `i 70  ]
[; ;main.c: 391: {
"391
{
[; ;main.c: 392: longPressFlag = 1;
"392
[e = _longPressFlag -> -> 1 `i `uc ]
[; ;main.c: 393: return 2;
"393
[e ) -> -> 2 `i `uc ]
[e $UE 67  ]
"394
}
[e :U 70 ]
"395
}
[e :U 69 ]
"396
}
[; ;main.c: 394: }
[; ;main.c: 395: }
[; ;main.c: 396: }
[e $U 71  ]
"397
[e :U 68 ]
[; ;main.c: 397: else
[; ;main.c: 398: {
"398
{
[; ;main.c: 399: if(keyCount >= 100)
"399
[e $ ! >= -> _keyCount `i -> 100 `i 72  ]
[; ;main.c: 400: {
"400
{
[; ;main.c: 401: keyCount = 0;
"401
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 402: longPressFlag = 0;
"402
[e = _longPressFlag -> -> 0 `i `uc ]
[; ;main.c: 403: return 0;
"403
[e ) -> -> 0 `i `uc ]
[e $UE 67  ]
"404
}
[; ;main.c: 404: }
[e $U 73  ]
"405
[e :U 72 ]
[; ;main.c: 405: else if(keyCount >= 4)
[e $ ! >= -> _keyCount `i -> 4 `i 74  ]
[; ;main.c: 406: {
"406
{
[; ;main.c: 407: keyCount = 0;
"407
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 408: return 1;
"408
[e ) -> -> 1 `i `uc ]
[e $UE 67  ]
"409
}
[e :U 74 ]
"410
[e :U 73 ]
[; ;main.c: 409: }
[; ;main.c: 410: keyCount = 0;
[e = _keyCount -> -> 0 `i `uc ]
"411
}
[e :U 71 ]
[; ;main.c: 411: }
[; ;main.c: 412: return 0;
"412
[e ) -> -> 0 `i `uc ]
[e $UE 67  ]
[; ;main.c: 413: }
"413
[e :UE 67 ]
}
"415
[v _keyCtr `(v ~T0 @X0 1 ef ]
"416
{
[; ;main.c: 415: void keyCtr()
[; ;main.c: 416: {
[e :U _keyCtr ]
[f ]
"417
[v _kclick `uc ~T0 @X0 1 a ]
[; ;main.c: 417: char kclick = keyRead(0x20 & (~PORTB));
[e = _kclick ( _keyRead (1 -> & -> 32 `i ~ -> _PORTB `i `uc ]
[; ;main.c: 418: if(kclick == 1)
"418
[e $ ! == -> _kclick `i -> 1 `i 76  ]
[; ;main.c: 419: {
"419
{
[; ;main.c: 420: if(workStep > 0)
"420
[e $ ! > -> _workStep `i -> 0 `i 77  ]
[; ;main.c: 421: {
"421
{
[; ;main.c: 422: if(++workStep > 6)
"422
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 6 `i 78  ]
[; ;main.c: 423: {
"423
{
[; ;main.c: 424: workStep = 1;
"424
[e = _workStep -> -> 1 `i `uc ]
"425
}
[e :U 78 ]
"426
}
[; ;main.c: 425: }
[; ;main.c: 426: }
[e $U 79  ]
"427
[e :U 77 ]
[; ;main.c: 427: else if(showBatTime > 0)
[e $ ! > -> _showBatTime `i -> 0 `i 80  ]
[; ;main.c: 428: {
"428
{
[; ;main.c: 429: showBatTime = 0;
"429
[e = _showBatTime -> -> 0 `i `uc ]
"430
}
[; ;main.c: 430: }
[e $U 81  ]
"431
[e :U 80 ]
[; ;main.c: 431: else
[; ;main.c: 432: {
"432
{
[; ;main.c: 433: showBatTime = 200;
"433
[e = _showBatTime -> -> 200 `i `uc ]
[; ;main.c: 434: count1s = 0;
"434
[e = _count1s -> -> 0 `i `uc ]
"435
}
[e :U 81 ]
[e :U 79 ]
"436
}
[; ;main.c: 435: }
[; ;main.c: 436: }
[e $U 82  ]
"437
[e :U 76 ]
[; ;main.c: 437: else if(kclick == 2)
[e $ ! == -> _kclick `i -> 2 `i 83  ]
[; ;main.c: 438: {
"438
{
[; ;main.c: 439: if(workStep > 0)
"439
[e $ ! > -> _workStep `i -> 0 `i 84  ]
[; ;main.c: 440: {
"440
{
[; ;main.c: 441: workStep = 0;
"441
[e = _workStep -> -> 0 `i `uc ]
"442
}
[; ;main.c: 442: }
[e $U 85  ]
"443
[e :U 84 ]
[; ;main.c: 443: else
[; ;main.c: 444: {
"444
{
[; ;main.c: 445: workStep = 1;
"445
[e = _workStep -> -> 1 `i `uc ]
[; ;main.c: 446: startTime = 30;
"446
[e = _startTime -> -> 30 `i `uc ]
[; ;main.c: 447: showBatTime = 0;
"447
[e = _showBatTime -> -> 0 `i `uc ]
"448
}
[e :U 85 ]
"449
}
[e :U 83 ]
"450
[e :U 82 ]
[; ;main.c: 448: }
[; ;main.c: 449: }
[; ;main.c: 450: }
[e :UE 75 ]
}
"452
[v _workCtr `(v ~T0 @X0 1 ef ]
"453
{
[; ;main.c: 452: void workCtr()
[; ;main.c: 453: {
[e :U _workCtr ]
[f ]
[; ;main.c: 455: if(startTime > 0)
"455
[e $ ! > -> _startTime `i -> 0 `i 87  ]
[; ;main.c: 456: {
"456
{
[; ;main.c: 457: startTime--;
"457
[e -- _startTime -> -> 1 `i `uc ]
"458
}
[e :U 87 ]
[; ;main.c: 458: }
[; ;main.c: 459: if(workStep > 0)
"459
[e $ ! > -> _workStep `i -> 0 `i 88  ]
[; ;main.c: 460: {
"460
{
[; ;main.c: 461: RA3 = 1;
"461
[e = _RA3 -> -> 1 `i `b ]
[; ;main.c: 462: if((PWMCON0 & 0x08) == 0)
"462
[e $ ! == & -> _PWMCON0 `i -> 8 `i -> 0 `i 89  ]
[; ;main.c: 463: {
"463
{
[; ;main.c: 464: pwmInit();
"464
[e ( _pwmInit ..  ]
"465
}
[e :U 89 ]
[; ;main.c: 465: }
[; ;main.c: 466: maxDuty = 40 + (workStep*3);
"466
[e = _maxDuty -> + -> 40 `i * -> _workStep `i -> 3 `i `uc ]
[; ;main.c: 467: if(overCount >= 5)
"467
[e $ ! >= -> _overCount `i -> 5 `i 90  ]
[; ;main.c: 468: {
"468
{
[; ;main.c: 469: if(++count5s > 500)
"469
[e $ ! > =+ _count5s -> -> 1 `i `ui -> -> 500 `i `ui 91  ]
[; ;main.c: 470: {
"470
{
[; ;main.c: 471: count5s = 0;
"471
[e = _count5s -> -> 0 `i `ui ]
[; ;main.c: 472: overWorkTime = 180;
"472
[e = _overWorkTime -> -> 180 `i `uc ]
[; ;main.c: 473: preLedStep = workStep;
"473
[e = _preLedStep _workStep ]
[; ;main.c: 474: workStep = 0;
"474
[e = _workStep -> -> 0 `i `uc ]
"476
}
[e :U 91 ]
"477
}
[; ;main.c: 476: }
[; ;main.c: 477: }
[e $U 92  ]
"478
[e :U 90 ]
[; ;main.c: 478: else
[; ;main.c: 479: {
"479
{
[; ;main.c: 480: count5s = 0;
"480
[e = _count5s -> -> 0 `i `ui ]
"481
}
[e :U 92 ]
[; ;main.c: 481: }
[; ;main.c: 482: if(count1s == 0 && ++count900s >= 900)
"482
[e $ ! && == -> _count1s `i -> 0 `i >= =+ _count900s -> -> 1 `i `ui -> -> 900 `i `ui 93  ]
[; ;main.c: 483: {
"483
{
[; ;main.c: 484: workStep = 0;
"484
[e = _workStep -> -> 0 `i `uc ]
"485
}
[e :U 93 ]
"486
}
[; ;main.c: 485: }
[; ;main.c: 486: }
[e $U 94  ]
"487
[e :U 88 ]
[; ;main.c: 487: else
[; ;main.c: 488: {
"488
{
[; ;main.c: 489: RA3 = 0;
"489
[e = _RA3 -> -> 0 `i `b ]
[; ;main.c: 490: pwmStop();
"490
[e ( _pwmStop ..  ]
[; ;main.c: 491: count900s = 0;
"491
[e = _count900s -> -> 0 `i `ui ]
"492
}
[e :U 94 ]
[; ;main.c: 492: }
[; ;main.c: 493: }
"493
[e :UE 86 ]
}
"495
[v _checkOutA `(v ~T0 @X0 1 ef ]
"496
{
[; ;main.c: 495: void checkOutA()
[; ;main.c: 496: {
[e :U _checkOutA ]
[f ]
[; ;main.c: 497: test_adc = ADC_Sample(0, 5);
"497
[e = _test_adc ( _ADC_Sample (2 , -> -> 0 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 498: if (0xA5 == test_adc)
"498
[e $ ! == -> 165 `i -> _test_adc `i 96  ]
[; ;main.c: 499: {
"499
{
[; ;main.c: 501: outADValue = adresult;
"501
[e = _outADValue _adresult ]
[; ;main.c: 503: if(workStep && (outADValue > 600))
"503
[e $ ! && != -> _workStep `i -> -> -> 0 `i `uc `i > _outADValue -> -> 600 `i `ui 97  ]
[; ;main.c: 504: {
"504
{
[; ;main.c: 505: if(++workOverOutTime > 50)
"505
[e $ ! > -> =+ _workOverOutTime -> -> 1 `i `uc `i -> 50 `i 98  ]
[; ;main.c: 506: {
"506
{
[; ;main.c: 507: workOverOutTime = 0;
"507
[e = _workOverOutTime -> -> 0 `i `uc ]
[; ;main.c: 508: workStep = 0;
"508
[e = _workStep -> -> 0 `i `uc ]
"509
}
[e :U 98 ]
"510
}
[; ;main.c: 509: }
[; ;main.c: 510: }
[e $U 99  ]
"511
[e :U 97 ]
[; ;main.c: 511: else
[; ;main.c: 512: {
"512
{
[; ;main.c: 513: workOverOutTime = 0;
"513
[e = _workOverOutTime -> -> 0 `i `uc ]
"514
}
[e :U 99 ]
"515
[v _maxtempV `uc ~T0 @X0 1 a ]
[; ;main.c: 514: }
[; ;main.c: 515: unsigned char maxtempV = 200;
[e = _maxtempV -> -> 200 `i `uc ]
[; ;main.c: 516: if(workStep < 6 && outADValue > maxtempV)
"516
[e $ ! && < -> _workStep `i -> 6 `i > _outADValue -> _maxtempV `ui 100  ]
[; ;main.c: 517: {
"517
{
[; ;main.c: 518: if(++overCount > 5)
"518
[e $ ! > -> =+ _overCount -> -> 1 `i `uc `i -> 5 `i 101  ]
[; ;main.c: 519: {
"519
{
[; ;main.c: 520: overCount = 5;
"520
[e = _overCount -> -> 5 `i `uc ]
"521
}
[e :U 101 ]
"522
}
[; ;main.c: 521: }
[; ;main.c: 522: }
[e $U 102  ]
"523
[e :U 100 ]
[; ;main.c: 523: else if(outADValue > (maxtempV+100))
[e $ ! > _outADValue -> + -> _maxtempV `i -> 100 `i `ui 103  ]
[; ;main.c: 524: {
"524
{
[; ;main.c: 525: if(++overCount > 5)
"525
[e $ ! > -> =+ _overCount -> -> 1 `i `uc `i -> 5 `i 104  ]
[; ;main.c: 526: {
"526
{
[; ;main.c: 527: overCount = 5;
"527
[e = _overCount -> -> 5 `i `uc ]
"528
}
[e :U 104 ]
"529
}
[; ;main.c: 528: }
[; ;main.c: 529: }
[e $U 105  ]
"530
[e :U 103 ]
[; ;main.c: 530: else
[; ;main.c: 531: {
"531
{
"532
[v _maxAout `uc ~T0 @X0 1 a ]
[; ;main.c: 532: unsigned char maxAout = 40;
[e = _maxAout -> -> 40 `i `uc ]
[; ;main.c: 533: if(pwStep < 40)
"533
[e $ ! < -> _pwStep `i -> 40 `i 106  ]
[; ;main.c: 534: {
"534
{
[; ;main.c: 535: maxAout = 37;
"535
[e = _maxAout -> -> 37 `i `uc ]
"536
}
[e :U 106 ]
[; ;main.c: 536: }
[; ;main.c: 537: if(workStep == 1)
"537
[e $ ! == -> _workStep `i -> 1 `i 107  ]
[; ;main.c: 538: {
"538
{
[; ;main.c: 539: maxAout = maxAout + 1;
"539
[e = _maxAout -> + -> _maxAout `i -> 1 `i `uc ]
"540
}
[; ;main.c: 540: }
[e $U 108  ]
"541
[e :U 107 ]
[; ;main.c: 541: else if(workStep == 2)
[e $ ! == -> _workStep `i -> 2 `i 109  ]
[; ;main.c: 542: {
"542
{
[; ;main.c: 543: maxAout = maxAout + 3;
"543
[e = _maxAout -> + -> _maxAout `i -> 3 `i `uc ]
"544
}
[; ;main.c: 544: }
[e $U 110  ]
"545
[e :U 109 ]
[; ;main.c: 545: else if(workStep == 3)
[e $ ! == -> _workStep `i -> 3 `i 111  ]
[; ;main.c: 546: {
"546
{
[; ;main.c: 547: maxAout = maxAout + 5;
"547
[e = _maxAout -> + -> _maxAout `i -> 5 `i `uc ]
"548
}
[; ;main.c: 548: }
[e $U 112  ]
"549
[e :U 111 ]
[; ;main.c: 549: else if(workStep == 4)
[e $ ! == -> _workStep `i -> 4 `i 113  ]
[; ;main.c: 550: {
"550
{
[; ;main.c: 551: maxAout = maxAout + 7;
"551
[e = _maxAout -> + -> _maxAout `i -> 7 `i `uc ]
"552
}
[; ;main.c: 552: }
[e $U 114  ]
"553
[e :U 113 ]
[; ;main.c: 553: else if(workStep == 5)
[e $ ! == -> _workStep `i -> 5 `i 115  ]
[; ;main.c: 554: {
"554
{
[; ;main.c: 555: maxAout = maxAout + 9;
"555
[e = _maxAout -> + -> _maxAout `i -> 9 `i `uc ]
"556
}
[; ;main.c: 556: }
[e $U 116  ]
"557
[e :U 115 ]
[; ;main.c: 557: else if(workStep == 6)
[e $ ! == -> _workStep `i -> 6 `i 117  ]
[; ;main.c: 558: {
"558
{
[; ;main.c: 559: maxAout = maxAout + 12;
"559
[e = _maxAout -> + -> _maxAout `i -> 12 `i `uc ]
"560
}
[e :U 117 ]
"561
[e :U 116 ]
[e :U 114 ]
[e :U 112 ]
[e :U 110 ]
[e :U 108 ]
[; ;main.c: 560: }
[; ;main.c: 561: if(overCount > 0)
[e $ ! > -> _overCount `i -> 0 `i 118  ]
[; ;main.c: 562: {
"562
{
[; ;main.c: 563: overCount--;
"563
[e -- _overCount -> -> 1 `i `uc ]
"564
}
[e :U 118 ]
[; ;main.c: 564: }
[; ;main.c: 565: if(outADValue > maxAout)
"565
[e $ ! > _outADValue -> _maxAout `ui 119  ]
[; ;main.c: 566: {
"566
{
[; ;main.c: 568: if(startTime == 0)
"568
[e $ ! == -> _startTime `i -> 0 `i 120  ]
[; ;main.c: 569: {
"569
{
[; ;main.c: 570: tempDuty = 81 + (workStep*3);
"570
[e = _tempDuty -> + -> 81 `i * -> _workStep `i -> 3 `i `uc ]
"571
}
[; ;main.c: 571: }
[e $U 121  ]
"572
[e :U 120 ]
[; ;main.c: 572: else
[; ;main.c: 573: {
"573
{
[; ;main.c: 574: tempDuty = maxDuty;
"574
[e = _tempDuty _maxDuty ]
"575
}
[e :U 121 ]
"578
}
[; ;main.c: 575: }
[; ;main.c: 578: }
[e $U 122  ]
"579
[e :U 119 ]
[; ;main.c: 579: else
[; ;main.c: 580: {
"580
{
[; ;main.c: 581: addPowerCount = 0;
"581
[e = _addPowerCount -> -> 0 `i `uc ]
[; ;main.c: 582: if(tempDuty > maxDuty)
"582
[e $ ! > -> _tempDuty `i -> _maxDuty `i 123  ]
[; ;main.c: 583: {
"583
{
[; ;main.c: 584: tempDuty--;
"584
[e -- _tempDuty -> -> 1 `i `uc ]
"585
}
[; ;main.c: 585: }
[e $U 124  ]
"586
[e :U 123 ]
[; ;main.c: 586: else
[; ;main.c: 587: {
"587
{
[; ;main.c: 588: tempDuty = maxDuty;
"588
[e = _tempDuty _maxDuty ]
"589
}
[e :U 124 ]
"591
}
[e :U 122 ]
"593
}
[e :U 105 ]
[e :U 102 ]
[; ;main.c: 589: }
[; ;main.c: 591: }
[; ;main.c: 593: }
[; ;main.c: 594: PWMD23H = 0X00;
"594
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 595: PWMD3L = tempDuty;
"595
[e = _PWMD3L _tempDuty ]
"596
}
[; ;main.c: 596: }
[e $U 125  ]
"597
[e :U 96 ]
[; ;main.c: 597: else
[; ;main.c: 598: {
"598
{
[; ;main.c: 599: ADCON0 = 0;
"599
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 600: ADCON1 = 0;
"600
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 601: _delay((unsigned long)((100)*(16000000/4000000.0)));
"601
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"602
}
[e :U 125 ]
[; ;main.c: 602: }
[; ;main.c: 603: }
"603
[e :UE 95 ]
}
"605
[v _checkBatAD `(v ~T0 @X0 1 ef ]
"606
{
[; ;main.c: 605: void checkBatAD()
[; ;main.c: 606: {
[e :U _checkBatAD ]
[f ]
[; ;main.c: 607: test_adc = ADC_Sample(1, 5);
"607
[e = _test_adc ( _ADC_Sample (2 , -> -> 1 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 608: if (0xA5 == test_adc)
"608
[e $ ! == -> 165 `i -> _test_adc `i 127  ]
[; ;main.c: 609: {
"609
{
[; ;main.c: 610: batADValue = adresult;
"610
[e = _batADValue _adresult ]
[; ;main.c: 611: if(batADValue < 1117)
"611
[e $ ! < _batADValue -> -> 1117 `i `ui 128  ]
[; ;main.c: 612: {
"612
{
[; ;main.c: 613: pwStep = 0;
"613
[e = _pwStep -> -> 0 `i `uc ]
[; ;main.c: 614: if(++count8s > 800)
"614
[e $ ! > =+ _count8s -> -> 1 `i `ui -> -> 800 `i `ui 129  ]
[; ;main.c: 615: {
"615
{
[; ;main.c: 616: count8s = 0;
"616
[e = _count8s -> -> 0 `i `ui ]
[; ;main.c: 617: lowBatFlag = 1;
"617
[e = _lowBatFlag -> -> 1 `i `uc ]
[; ;main.c: 618: if(workStep > 0)
"618
[e $ ! > -> _workStep `i -> 0 `i 130  ]
[; ;main.c: 619: {
"619
{
[; ;main.c: 620: overWorkTime = 180;
"620
[e = _overWorkTime -> -> 180 `i `uc ]
[; ;main.c: 621: preLedStep = workStep;
"621
[e = _preLedStep _workStep ]
"622
}
[e :U 130 ]
[; ;main.c: 622: }
[; ;main.c: 623: prePwStep = 0;
"623
[e = _prePwStep -> -> 0 `i `uc ]
[; ;main.c: 624: workStep = 0;
"624
[e = _workStep -> -> 0 `i `uc ]
"625
}
[e :U 129 ]
"626
}
[; ;main.c: 625: }
[; ;main.c: 626: }
[e $U 131  ]
"627
[e :U 128 ]
[; ;main.c: 627: else
[; ;main.c: 628: {
"628
{
[; ;main.c: 629: count8s = 0;
"629
[e = _count8s -> -> 0 `i `ui ]
[; ;main.c: 630: if(batADValue >= 1340)
"630
[e $ ! >= _batADValue -> -> 1340 `i `ui 132  ]
[; ;main.c: 631: {
"631
{
[; ;main.c: 632: pwStep = ((batADValue - 1340) /2) + 13;
"632
[e = _pwStep -> + / - _batADValue -> -> 1340 `i `ui -> -> 2 `i `ui -> -> 13 `i `ui `uc ]
"633
}
[; ;main.c: 633: }
[e $U 133  ]
"634
[e :U 132 ]
[; ;main.c: 634: else
[; ;main.c: 635: {
"635
{
[; ;main.c: 636: pwStep = (batADValue - 1117) / 16;
"636
[e = _pwStep -> / - _batADValue -> -> 1117 `i `ui -> -> 16 `i `ui `uc ]
"637
}
[e :U 133 ]
[; ;main.c: 637: }
[; ;main.c: 638: if(pwStep > 99)
"638
[e $ ! > -> _pwStep `i -> 99 `i 134  ]
[; ;main.c: 639: {
"639
{
[; ;main.c: 640: pwStep = 99;
"640
[e = _pwStep -> -> 99 `i `uc ]
"641
}
[e :U 134 ]
"642
}
[e :U 131 ]
[; ;main.c: 641: }
[; ;main.c: 642: }
[; ;main.c: 643: if(chrgFlag && batADValue > 1861)
"643
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _batADValue -> -> 1861 `i `ui 135  ]
[; ;main.c: 644: {
"644
{
[; ;main.c: 645: protectFlag = 1;
"645
[e = _protectFlag -> -> 1 `i `uc ]
"646
}
[e :U 135 ]
"647
}
[; ;main.c: 646: }
[; ;main.c: 647: }
[e $U 136  ]
"648
[e :U 127 ]
[; ;main.c: 648: else
[; ;main.c: 649: {
"649
{
[; ;main.c: 650: ADCON0 = 0;
"650
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 651: ADCON1 = 0;
"651
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 652: _delay((unsigned long)((100)*(16000000/4000000.0)));
"652
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"653
}
[e :U 136 ]
[; ;main.c: 653: }
[; ;main.c: 654: test_adc = ADC_Sample(2, 5);
"654
[e = _test_adc ( _ADC_Sample (2 , -> -> 2 `i `uc -> -> 5 `i `uc ]
[; ;main.c: 655: if (0xA5 == test_adc)
"655
[e $ ! == -> 165 `i -> _test_adc `i 137  ]
[; ;main.c: 656: {
"656
{
[; ;main.c: 657: if(chrgFlag && adresult > 100)
"657
[e $ ! && != -> _chrgFlag `i -> -> -> 0 `i `uc `i > _adresult -> -> 100 `i `ui 138  ]
[; ;main.c: 658: {
"658
{
[; ;main.c: 660: if(adresult > 810 || (batADValue - adresult) > 810)
"660
[e $ ! || > _adresult -> -> 810 `i `ui > - _batADValue _adresult -> -> 810 `i `ui 139  ]
[; ;main.c: 661: {
"661
{
[; ;main.c: 663: if(++countHalfFull > 250)
"663
[e $ ! > -> =+ _countHalfFull -> -> 1 `i `uc `i -> 250 `i 140  ]
[; ;main.c: 664: {
"664
{
[; ;main.c: 665: countHalfFull = 0;
"665
[e = _countHalfFull -> -> 0 `i `uc ]
[; ;main.c: 666: protectFlag = 2;
"666
[e = _protectFlag -> -> 2 `i `uc ]
"667
}
[e :U 140 ]
"668
}
[; ;main.c: 667: }
[; ;main.c: 668: }
[e $U 141  ]
"669
[e :U 139 ]
[; ;main.c: 669: else
[; ;main.c: 670: {
"670
{
[; ;main.c: 671: countHalfFull = 0;
"671
[e = _countHalfFull -> -> 0 `i `uc ]
"672
}
[e :U 141 ]
"673
}
[e :U 138 ]
"674
}
[; ;main.c: 672: }
[; ;main.c: 673: }
[; ;main.c: 674: }
[e $U 142  ]
"675
[e :U 137 ]
[; ;main.c: 675: else
[; ;main.c: 676: {
"676
{
[; ;main.c: 677: ADCON0 = 0;
"677
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 678: ADCON1 = 0;
"678
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 679: _delay((unsigned long)((100)*(16000000/4000000.0)));
"679
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"680
}
[e :U 142 ]
[; ;main.c: 680: }
[; ;main.c: 681: }
"681
[e :UE 126 ]
}
"692
[v _Init_System `(v ~T0 @X0 1 ef ]
"693
{
[; ;main.c: 692: void Init_System()
[; ;main.c: 693: {
[e :U _Init_System ]
[f ]
[; ;main.c: 694: asm("nop");
"694
[; <" nop ;# ">
[; ;main.c: 695: asm("clrwdt");
"695
[; <" clrwdt ;# ">
[; ;main.c: 696: OPTION_REG = 0;
"696
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 697: asm("clrwdt");
"697
[; <" clrwdt ;# ">
[; ;main.c: 698: OSCCON = 0X72;
"698
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 700: WPUA = 0B00000000;
"700
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 701: WPDA = 0x00;
"701
[e = _WPDA -> -> 0 `i `uc ]
[; ;main.c: 702: WPUB = 0x20;
"702
[e = _WPUB -> -> 32 `i `uc ]
[; ;main.c: 704: TRISA = 0x07;
"704
[e = _TRISA -> -> 7 `i `uc ]
[; ;main.c: 705: TRISB = 0x24;
"705
[e = _TRISB -> -> 36 `i `uc ]
[; ;main.c: 707: PORTA = 0X00;
"707
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 708: PORTB = 0X00;
"708
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 712: PR2 = 249;
"712
[e = _PR2 -> -> 249 `i `uc ]
[; ;main.c: 713: TMR2IF = 0;
"713
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 714: TMR2IE = 1;
"714
[e = _TMR2IE -> -> 1 `i `b ]
[; ;main.c: 716: T2CON = 0B00000100;
"716
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 717: INTCON = 0XC0;
"717
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 718: }
"718
[e :UE 143 ]
}
"729
[v _AD_Init `(v ~T0 @X0 1 ef ]
"730
{
[; ;main.c: 729: void AD_Init()
[; ;main.c: 730: {
[e :U _AD_Init ]
[f ]
[; ;main.c: 762: ADCON0 = 0X41;
"762
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 779: ADCON1 = 0;
"779
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 780: ANSEL0 = 0X07;
"780
[e = _ANSEL0 -> -> 7 `i `uc ]
[; ;main.c: 781: }
"781
[e :UE 144 ]
}
"784
[v _pwmInit `(v ~T0 @X0 1 ef ]
"785
{
[; ;main.c: 784: void pwmInit()
[; ;main.c: 785: {
[e :U _pwmInit ]
[f ]
[; ;main.c: 786: PWMCON1 = 0B00000000;
"786
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 787: PWMTH = 0X00;
"787
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 788: PWMTL = 100;
"788
[e = _PWMTL -> -> 100 `i `uc ]
[; ;main.c: 791: PWMD23H = 0;
"791
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 792: PWMD3L = 50;
"792
[e = _PWMD3L -> -> 50 `i `uc ]
[; ;main.c: 793: PWM23DT = 0X00;
"793
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 795: PWMCON0 = 0X68;
"795
[e = _PWMCON0 -> -> 104 `i `uc ]
[; ;main.c: 796: PWMCON2 =0X00;
"796
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 797: }
"797
[e :UE 145 ]
}
"799
[v _pwmStop `(v ~T0 @X0 1 ef ]
"800
{
[; ;main.c: 799: void pwmStop()
[; ;main.c: 800: {
[e :U _pwmStop ]
[f ]
[; ;main.c: 801: PWMCON0 &= 0XF7;
"801
[e =& _PWMCON0 -> -> 247 `i `uc ]
[; ;main.c: 802: RB4 = 0;
"802
[e = _RB4 -> -> 0 `i `b ]
[; ;main.c: 803: }
"803
[e :UE 146 ]
}
"813
[v _Sleep_Mode `(v ~T0 @X0 1 ef ]
"814
{
[; ;main.c: 813: void Sleep_Mode()
[; ;main.c: 814: {
[e :U _Sleep_Mode ]
[f ]
[; ;main.c: 815: INTCON = 0;
"815
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 817: OPTION_REG = 0;
"817
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 819: TRISA = 0x07;
"819
[e = _TRISA -> -> 7 `i `uc ]
[; ;main.c: 820: WPUA = 0B00000000;
"820
[e = _WPUA -> -> 0 `i `uc ]
[; ;main.c: 821: PORTA = 0x00;
"821
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 822: TRISB = 0x24;
"822
[e = _TRISB -> -> 36 `i `uc ]
[; ;main.c: 823: PORTB = 0B00000000;
"823
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 824: WPUB = 0x20;
"824
[e = _WPUB -> -> 32 `i `uc ]
[; ;main.c: 826: ADCON0 = 0;
"826
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 827: ADCON1 = 0;
"827
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 829: PWMCON0 = 0;
"829
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 831: OSCCON = 0X70;
"831
[e = _OSCCON -> -> 112 `i `uc ]
[; ;main.c: 833: IOCA = 0B00000000;
"833
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 834: IOCB = 0x24;
"834
[e = _IOCB -> -> 36 `i `uc ]
[; ;main.c: 836: RAIE = 1;
"836
[e = _RAIE -> -> 1 `i `b ]
[; ;main.c: 837: PEIE = 1;
"837
[e = _PEIE -> -> 1 `i `b ]
[; ;main.c: 838: RBIE = 1;
"838
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 839: GIE = 0;
"839
[e = _GIE -> -> 0 `i `b ]
[; ;main.c: 841: PIE1 &= 0X08;
"841
[e =& _PIE1 -> -> 8 `i `uc ]
[; ;main.c: 842: PIR1 = 0;
"842
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 843: INTCON &= 0XC8;
"843
[e =& _INTCON -> -> 200 `i `uc ]
[; ;main.c: 845: PORTA;
"845
[e _PORTA ]
[; ;main.c: 846: RAIF = 0;
"846
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 847: PORTB;
"847
[e _PORTB ]
[; ;main.c: 848: RBIF = 0;
"848
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 849: asm("clrwdt");
"849
[; <" clrwdt ;# ">
[; ;main.c: 851: asm("sleep");
"851
[; <" sleep ;# ">
[; ;main.c: 853: asm("nop");
"853
[; <" nop ;# ">
[; ;main.c: 854: asm("clrwdt");
"854
[; <" clrwdt ;# ">
[; ;main.c: 855: asm("nop");
"855
[; <" nop ;# ">
[; ;main.c: 856: asm("nop");
"856
[; <" nop ;# ">
[; ;main.c: 857: asm("nop");
"857
[; <" nop ;# ">
[; ;main.c: 858: asm("nop");
"858
[; <" nop ;# ">
[; ;main.c: 859: asm("nop");
"859
[; <" nop ;# ">
[; ;main.c: 860: if(RAIF) RAIF = 0;
"860
[e $ ! _RAIF 148  ]
[e = _RAIF -> -> 0 `i `b ]
[e :U 148 ]
[; ;main.c: 861: if(RBIF) RBIF = 0;
"861
[e $ ! _RBIF 149  ]
[e = _RBIF -> -> 0 `i `b ]
[e :U 149 ]
[; ;main.c: 862: if(TMR2IF) TMR2IF = 0;
"862
[e $ ! _TMR2IF 150  ]
[e = _TMR2IF -> -> 0 `i `b ]
[e :U 150 ]
[; ;main.c: 863: IOCA = 0B00000000;
"863
[e = _IOCA -> -> 0 `i `uc ]
[; ;main.c: 864: IOCB = 0B00000000;
"864
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 865: Init_System();
"865
[e ( _Init_System ..  ]
[; ;main.c: 866: AD_Init();
"866
[e ( _AD_Init ..  ]
[; ;main.c: 867: }
"867
[e :UE 147 ]
}
"889
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"890
{
[; ;main.c: 889: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 890: {
[e :U _ADC_Sample ]
"889
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"890
[f ]
"891
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 891: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"892
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 892: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"893
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 893: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 895: if ((!LDO_EN) && (adldo & 0x04) )
"895
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 152  ]
[; ;main.c: 896: {
"896
{
[; ;main.c: 898: ADCON1 = adldo;
"898
[e = _ADCON1 _adldo ]
[; ;main.c: 899: _delay((unsigned long)((100)*(16000000/4000000.0)));
"899
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
"900
}
[; ;main.c: 900: }
[e $U 153  ]
"901
[e :U 152 ]
[; ;main.c: 901: else
[; ;main.c: 902: ADCON1 = adldo;
"902
[e = _ADCON1 _adldo ]
[e :U 153 ]
[; ;main.c: 904: if(adch & 0x10)
"904
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 154  ]
[; ;main.c: 905: {
"905
{
[; ;main.c: 906: CHS4 = 1;
"906
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 907: adch &= 0x0f;
"907
[e =& _adch -> -> 15 `i `uc ]
"908
}
[e :U 154 ]
"909
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 908: }
[; ;main.c: 909: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 910: for (i = 0; i < 10; i++)
"910
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 155  ]
[e $U 156  ]
"911
[e :U 155 ]
[; ;main.c: 911: {
{
[; ;main.c: 912: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"912
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 913: asm("nop");
"913
[; <" nop ;# ">
[; ;main.c: 914: asm("nop");
"914
[; <" nop ;# ">
[; ;main.c: 915: asm("nop");
"915
[; <" nop ;# ">
[; ;main.c: 916: asm("nop");
"916
[; <" nop ;# ">
[; ;main.c: 917: GODONE = 1;
"917
[e = _GODONE -> -> 1 `i `b ]
"919
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 919: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 920: while (GODONE)
"920
[e $U 158  ]
[e :U 159 ]
[; ;main.c: 921: {
"921
{
[; ;main.c: 922: _delay((unsigned long)((2)*(16000000/4000000.0)));
"922
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 16000000 `l `d .4000000.0 `ul ]
[; ;main.c: 924: if (0 == (--j))
"924
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 161  ]
[; ;main.c: 925: return 0;
"925
[e ) -> -> 0 `i `uc ]
[e $UE 151  ]
[e :U 161 ]
"926
}
[e :U 158 ]
"920
[e $ _GODONE 159  ]
[e :U 160 ]
[; ;main.c: 926: }
[; ;main.c: 928: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"928
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 930: if (0 == admax)
"930
[e $ ! == -> -> 0 `i `ui _admax 162  ]
[; ;main.c: 931: {
"931
{
[; ;main.c: 932: admax = ad_temp;
"932
[e = _admax _ad_temp ]
[; ;main.c: 933: admin = ad_temp;
"933
[e = _admin _ad_temp ]
"934
}
[; ;main.c: 934: }
[e $U 163  ]
"935
[e :U 162 ]
[; ;main.c: 935: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 164  ]
[; ;main.c: 936: admax = ad_temp;
"936
[e = _admax _ad_temp ]
[e $U 165  ]
"937
[e :U 164 ]
[; ;main.c: 937: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 166  ]
[; ;main.c: 938: admin = ad_temp;
"938
[e = _admin _ad_temp ]
[e :U 166 ]
"940
[e :U 165 ]
[e :U 163 ]
[; ;main.c: 940: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"941
}
"910
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 155  ]
[e :U 156 ]
"941
}
[; ;main.c: 941: }
[; ;main.c: 942: adsum -= admax;
"942
[e =- _adsum -> _admax `ul ]
[; ;main.c: 943: if (adsum >= admin)
"943
[e $ ! >= _adsum -> _admin `ul 167  ]
[; ;main.c: 944: adsum -= admin;
"944
[e =- _adsum -> _admin `ul ]
[e $U 168  ]
"945
[e :U 167 ]
[; ;main.c: 945: else
[; ;main.c: 946: adsum = 0;
"946
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 168 ]
[; ;main.c: 948: adresult = adsum >> 3;
"948
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 950: adsum = 0;
"950
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 951: admin = 0;
"951
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 952: admax = 0;
"952
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 953: return 0xA5;
"953
[e ) -> -> 165 `i `uc ]
[e $UE 151  ]
[; ;main.c: 955: }
"955
[e :UE 151 ]
}
