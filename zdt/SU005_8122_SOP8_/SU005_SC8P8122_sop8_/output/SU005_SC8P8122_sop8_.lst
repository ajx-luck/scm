

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Sat Sep 06 15:16:02 2025

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P8122AD
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	pa_nodes0,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 1.45
    52                           ; Generated 16/11/2017 GMT
    53                           ; 
    54                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	idataCOMMON
    87  0000                     __pidataCOMMON:	
    88                           
    89                           	psect	idataBANK0
    90  0000                     __pidataBANK0:	
    91                           
    92                           	psect	strings
    93  0440                     __pstrings:	
    94  0440                     stringtab:	
    95  0440                     __stringtab:	
    96  0440                     stringcode:	
    97                           ;	String table - string pointers are 1 byte each
    98                           
    99  0440                     stringdir:	
   100  0440  3004               	movlw	high stringdir
   101  0441  008A               	movwf	10
   102  0442  0804               	movf	4,w
   103  0443  0A84               	incf	4,f
   104  0444  0782               	addwf	2,f
   105  0445                     __stringbase:	
   106  0445  3400               	retlw	0
   107  0446                     __end_of__stringtab:	
   108  0446                     _Table_KeyFalg:	
   109  0446  3401               	retlw	1
   110  0447  3402               	retlw	2
   111  0448  3404               	retlw	4
   112  0449  3408               	retlw	8
   113  044A  3410               	retlw	16
   114  044B  3420               	retlw	32
   115  044C  3440               	retlw	64
   116  044D  3480               	retlw	128
   117  044E                     __end_of_Table_KeyFalg:	
   118  044E                     _Table_KeyDown:	
   119  044E  340A               	retlw	10
   120  044F                     __end_of_Table_KeyDown:	
   121  044F                     _Table_KeyChannel:	
   122  044F  3440               	retlw	64
   123  0450                     __end_of_Table_KeyChannel:	
   124  001F                     _PWM01DT	set	31
   125  001E                     _PWMD01H	set	30
   126  001D                     _PWMCON2	set	29
   127  001A                     _PWMD1L	set	26
   128  0018                     _PWMTH	set	24
   129  0017                     _PWMTL	set	23
   130  0016                     _PWMCON1	set	22
   131  0015                     _PWMCON0	set	21
   132  0014                     _OSCCON	set	20
   133  0013                     _T2CON	set	19
   134  0011                     _PR2	set	17
   135  0010                     _CMPCON1	set	16
   136  000F                     _CMPCON0	set	15
   137  000E                     _PIE1	set	14
   138  000D                     _PIR1	set	13
   139  000B                     _INTCON	set	11
   140  0006                     _PORTB	set	6
   141  0005                     _TRISB	set	5
   142  0001                     _OPTION_REG	set	1
   143  0069                     _TMR2IF	set	105
   144  0058                     _RBIF	set	88
   145  0059                     _INTF	set	89
   146  0031                     _RB1	set	49
   147  0032                     _RB2	set	50
   148  0034                     _RB4	set	52
   149  0036                     _RB6	set	54
   150  002E                     _TRISB6	set	46
   151  009E                     _PWMD23H	set	158
   152  009D                     _PWM23DT	set	157
   153  009C                     _PWMD3L	set	156
   154  0081                     _TMR0	set	129
   155  0117                     _KEYDATAH	set	279
   156  0116                     _KEYDATAL	set	278
   157  0113                     _KEYCON2	set	275
   158  0112                     _KEYCON1	set	274
   159  0111                     _KEYCON0	set	273
   160  0110                     _PIE2	set	272
   161  010F                     _PIR2	set	271
   162                           
   163                           	psect	cinit
   164  000B                     start_initialization:	
   165                           ; #config settings
   166                           
   167  000B                     __initialization:	
   168                           
   169                           ;initializer for _led3Duty
   170  000B  3032               	movlw	50
   171  000C  00CA               	movwf	__pdataBANK0& (0+127)
   172                           
   173                           ;initializer for _led2Duty
   174  000D  00CB               	movwf	(__pdataBANK0+1)& (0+127)
   175                           
   176                           ;initializer for _led1Duty
   177  000E  00CC               	movwf	(__pdataBANK0+2)& (0+127)
   178                           
   179                           ;initializer for _ledDuty
   180  000F  00FB               	movwf	__pdataCOMMON& (0+127)
   181  0010  3020               	movlw	low __pbssBANK0
   182                           
   183                           ; Clear objects allocated to BANK0
   184  0011  1383               	bcf	3,7	;select IRP bank0
   185  0012  0084               	movwf	4
   186  0013  3041               	movlw	low (__pbssBANK0+33)
   187  0014  249F               	fcall	clear_ram0
   188                           
   189                           ; Clear objects allocated to COMMON
   190  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   191  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   192                           
   193                           ; Clear objects allocated to BITCOMMON
   194  0017  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   195  0018                     end_of_initialization:	
   196                           ;End of C runtime variable initialization code
   197                           
   198  0018                     __end_of__initialization:	
   199  0018  0183               	clrf	3
   200  0019  2ADB               	ljmp	_main	;jump to C main() function
   201                           
   202                           	psect	bitbssCOMMON
   203  03C0                     __pbitbssCOMMON:	
   204  03C0                     _b_ksleep:	
   205  03C0                     	ds	1
   206  03C1                     _b_kerr:	
   207  03C1                     	ds	1
   208  03C2                     _b_kclr:	
   209  03C2                     	ds	1
   210  03C3                     _b_kover1:	
   211  03C3                     	ds	1
   212  03C4                     _b_kover:	
   213  03C4                     	ds	1
   214  03C5                     _B_OnOff:	
   215  03C5                     	ds	1
   216  03C6                     _B_MainLoop:	
   217  03C6                     	ds	1
   218                           
   219                           	psect	bssCOMMON
   220  0079                     __pbssCOMMON:	
   221  0079                     _workStep:	
   222  0079                     	ds	1
   223  007A                     _KeyFlag:	
   224  007A                     	ds	1
   225                           
   226                           	psect	dataCOMMON
   227  007B                     __pdataCOMMON:	
   228  007B                     _ledDuty:	
   229  007B                     	ds	1
   230                           
   231                           	psect	bssBANK0
   232  0020                     __pbssBANK0:	
   233  0020                     CheckValidTime@F419:	
   234  0020                     	ds	2
   235  0022                     _KeyData:	
   236  0022                     	ds	2
   237  0024                     _KeyOldData:	
   238  0024                     	ds	2
   239  0026                     _count300s:	
   240  0026                     	ds	2
   241  0028                     _count1s:	
   242  0028                     	ds	2
   243  002A                     _keyCount:	
   244  002A                     	ds	2
   245  002C                     _KeyReference:	
   246  002C                     	ds	2
   247  002E                     _KeyOldValue2:	
   248  002E                     	ds	2
   249  0030                     _KeyOldValue1:	
   250  0030                     	ds	2
   251  0032                     _KeyOldValue0:	
   252  0032                     	ds	2
   253  0034                     _KeyResSum:	
   254  0034                     	ds	2
   255  0036                     TurnKeyFlags@F416:	
   256  0036                     	ds	1
   257  0037                     TurnKeyFlags@F415:	
   258  0037                     	ds	1
   259  0038                     CheckKeyOldValue@F410:	
   260  0038                     	ds	1
   261  0039                     _KeyMaxSub:	
   262  0039                     	ds	1
   263  003A                     _KeyCounter:	
   264  003A                     	ds	1
   265  003B                     WorkSleep@time:	
   266  003B                     	ds	1
   267  003C                     _doubleKeyTime:	
   268  003C                     	ds	1
   269  003D                     _lvdTime:	
   270  003D                     	ds	1
   271  003E                     _modeStep:	
   272  003E                     	ds	1
   273  003F                     _MainTime:	
   274  003F                     	ds	1
   275  0040                     _KeyUpShake:	
   276  0040                     	ds	1
   277                           
   278                           	psect	dataBANK0
   279  004A                     __pdataBANK0:	
   280  004A                     _led3Duty:	
   281  004A                     	ds	1
   282  004B                     _led2Duty:	
   283  004B                     	ds	1
   284  004C                     _led1Duty:	
   285  004C                     	ds	1
   286                           
   287                           	psect	clrtext
   288  049F                     clear_ram0:	
   289                           ;	Called with FSR containing the base address, and
   290                           ;	W with the last address+1
   291                           
   292  049F  0064               	clrwdt	;clear the watchdog before getting into this loop
   293  04A0                     clrloop0:	
   294  04A0  0180               	clrf	0	;clear RAM location pointed to by FSR
   295  04A1  0A84               	incf	4,f	;increment pointer
   296  04A2  0604               	xorwf	4,w	;XOR with final address
   297  04A3  1903               	btfsc	3,2	;have we reached the end yet?
   298  04A4  3400               	retlw	0	;all done for this memory range, return
   299  04A5  0604               	xorwf	4,w	;XOR again to restore value
   300  04A6  2CA0               	goto	clrloop0	;do the next byte
   301                           
   302                           	psect	cstackCOMMON
   303  0070                     __pcstackCOMMON:	
   304  0070                     ?_SystemEnterSleep:	
   305  0070                     ?_CheckTouchKey:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_Init_System:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?_Refurbish_Sfr:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_KeyServer:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0070                     ?_pwm3Init:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0070                     ?_pwm3Stop:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_pwm1Init:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?_pwm1Stop:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_pwm13Init:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_pwm13Stop:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_checkLvd:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_Isr_Timer:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_Isr_Timer:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_WorkSleep:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_keyCtr:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_workCtr:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_main:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_KeyIsIn:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_KeyClearOne:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_KeyClearIn:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_KeyStopClear:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_ClearResSum:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_KeyHave:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_GetTouchKeyValue:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_CheckOnceResult:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_CheckKeyOldValue:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_TurnKeyFlags:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_CheckValidTime:	
   387                           ; 1 bytes @ 0x0
   388                           
   389                           
   390                           ; 1 bytes @ 0x0
   391  0070                     	ds	2
   392  0072                     ?_JudgeKeyOldData:	
   393  0072                     ?_RKeyOldData:	
   394                           ; 1 bytes @ 0x2
   395                           
   396  0072                     ??_Init_System:	
   397                           ; 1 bytes @ 0x2
   398                           
   399  0072                     ??_Refurbish_Sfr:	
   400                           ; 1 bytes @ 0x2
   401                           
   402  0072                     ??_pwm3Init:	
   403                           ; 1 bytes @ 0x2
   404                           
   405  0072                     ??_pwm3Stop:	
   406                           ; 1 bytes @ 0x2
   407                           
   408  0072                     ??_pwm1Init:	
   409                           ; 1 bytes @ 0x2
   410                           
   411  0072                     ??_pwm1Stop:	
   412                           ; 1 bytes @ 0x2
   413                           
   414  0072                     ??_pwm13Init:	
   415                           ; 1 bytes @ 0x2
   416                           
   417  0072                     ??_pwm13Stop:	
   418                           ; 1 bytes @ 0x2
   419                           
   420  0072                     ??_checkLvd:	
   421                           ; 1 bytes @ 0x2
   422                           
   423  0072                     ??_keyCtr:	
   424                           ; 1 bytes @ 0x2
   425                           
   426  0072                     ??_workCtr:	
   427                           ; 1 bytes @ 0x2
   428                           
   429  0072                     ??_KeyIsIn:	
   430                           ; 1 bytes @ 0x2
   431                           
   432  0072                     ??_KeyClearOne:	
   433                           ; 1 bytes @ 0x2
   434                           
   435  0072                     ??_ClearResSum:	
   436                           ; 1 bytes @ 0x2
   437                           
   438  0072                     ??_KeyHave:	
   439                           ; 1 bytes @ 0x2
   440                           
   441  0072                     ??_CheckValidTime:	
   442                           ; 1 bytes @ 0x2
   443                           
   444  0072                     ?___lwmod:	
   445                           ; 1 bytes @ 0x2
   446                           
   447  0072                     KeyIsIn@377:	
   448                           ; 2 bytes @ 0x2
   449                           
   450  0072                     KeyClearOne@381:	
   451                           ; 1 bytes @ 0x2
   452                           
   453  0072                     ClearResSum@388:	
   454                           ; 1 bytes @ 0x2
   455                           
   456  0072                     KeyHave@390:	
   457                           ; 1 bytes @ 0x2
   458                           
   459  0072                     JudgeKeyOldData@428:	
   460                           ; 1 bytes @ 0x2
   461                           
   462  0072                     RKeyOldData@431:	
   463                           ; 2 bytes @ 0x2
   464                           
   465  0072                     ___lwmod@divisor:	
   466                           ; 2 bytes @ 0x2
   467                           
   468                           
   469                           ; 2 bytes @ 0x2
   470  0072                     	ds	1
   471  0073                     ??_KeyStopClear:	
   472  0073                     ??_GetTouchKeyValue:	
   473                           ; 1 bytes @ 0x3
   474                           
   475  0073                     KeyIsIn@378:	
   476                           ; 1 bytes @ 0x3
   477                           
   478  0073                     KeyStopClear@385:	
   479                           ; 1 bytes @ 0x3
   480                           
   481  0073                     GetTouchKeyValue@395:	
   482                           ; 1 bytes @ 0x3
   483                           
   484                           
   485                           ; 2 bytes @ 0x3
   486  0073                     	ds	1
   487  0074                     ??_JudgeKeyOldData:	
   488  0074                     ??_RKeyOldData:	
   489                           ; 1 bytes @ 0x4
   490                           
   491  0074                     ??_KeyClearIn:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     ??_CheckOnceResult:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0074                     KeyClearIn@383:	
   498                           ; 1 bytes @ 0x4
   499                           
   500  0074                     JudgeKeyOldData@427:	
   501                           ; 1 bytes @ 0x4
   502                           
   503  0074                     ___lwmod@dividend:	
   504                           ; 1 bytes @ 0x4
   505                           
   506                           
   507                           ; 2 bytes @ 0x4
   508  0074                     	ds	1
   509  0075                     ??_TurnKeyFlags:	
   510  0075                     GetTouchKeyValue@394:	
   511                           ; 1 bytes @ 0x5
   512                           
   513  0075                     JudgeKeyOldData@429:	
   514                           ; 1 bytes @ 0x5
   515                           
   516                           
   517                           ; 2 bytes @ 0x5
   518  0075                     	ds	1
   519  0076                     ??___lwmod:	
   520  0076                     GetTouchKeyValue@393:	
   521                           ; 1 bytes @ 0x6
   522                           
   523  0076                     RKeyOldData@430:	
   524                           ; 1 bytes @ 0x6
   525                           
   526  0076                     ___lwmod@counter:	
   527                           ; 1 bytes @ 0x6
   528                           
   529                           
   530                           ; 1 bytes @ 0x6
   531  0076                     	ds	1
   532  0077                     ??_KeyServer:	
   533  0077                     ??_WorkSleep:	
   534                           ; 1 bytes @ 0x7
   535                           
   536  0077                     ??_CheckKeyOldValue:	
   537                           ; 1 bytes @ 0x7
   538                           
   539                           
   540                           ; 1 bytes @ 0x7
   541  0077                     	ds	1
   542  0078                     ??_CheckTouchKey:	
   543  0078                     ??_main:	
   544                           ; 1 bytes @ 0x8
   545                           
   546                           
   547                           	psect	cstackBANK0
   548  0041                     __pcstackBANK0:	
   549                           ; 1 bytes @ 0x8
   550                           
   551  0041                     ??_SystemEnterSleep:	
   552  0041                     CheckOnceResult@406:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0041                     CheckKeyOldValue@412:	
   556                           ; 2 bytes @ 0x0
   557                           
   558                           
   559                           ; 2 bytes @ 0x0
   560  0041                     	ds	2
   561  0043                     CheckOnceResult@403:	
   562  0043                     CheckKeyOldValue@411:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  0043                     SystemEnterSleep@424:	
   566                           ; 1 bytes @ 0x2
   567                           
   568                           
   569                           ; 2 bytes @ 0x2
   570  0043                     	ds	1
   571  0044                     CheckOnceResult@405:	
   572                           
   573                           ; 2 bytes @ 0x3
   574  0044                     	ds	1
   575  0045                     SystemEnterSleep@426:	
   576                           
   577                           ; 2 bytes @ 0x4
   578  0045                     	ds	1
   579  0046                     CheckOnceResult@402:	
   580                           
   581                           ; 1 bytes @ 0x5
   582  0046                     	ds	1
   583  0047                     CheckOnceResult@404:	
   584  0047                     SystemEnterSleep@425:	
   585                           ; 2 bytes @ 0x6
   586                           
   587                           
   588                           ; 2 bytes @ 0x6
   589  0047                     	ds	2
   590  0049                     CheckOnceResult@401:	
   591  0049                     SystemEnterSleep@423:	
   592                           ; 1 bytes @ 0x8
   593                           
   594                           
   595                           ; 1 bytes @ 0x8
   596  0049                     	ds	1
   597                           
   598                           	psect	maintext
   599  02DB                     __pmaintext:	
   600 ;;
   601 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   602 ;;
   603 ;; *************** function _main *****************
   604 ;; Defined at:
   605 ;;		line 373 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : B00/0
   616 ;;		On exit  : 300/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1
   619 ;;      Params:         0       0       0
   620 ;;      Locals:         0       0       0
   621 ;;      Temps:          0       0       0
   622 ;;      Totals:         0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels required when called:    6
   625 ;; This function calls:
   626 ;;		_CheckTouchKey
   627 ;;		_Init_System
   628 ;;		_KeyServer
   629 ;;		_Refurbish_Sfr
   630 ;;		_WorkSleep
   631 ;;		_checkLvd
   632 ;;		_keyCtr
   633 ;;		_pwm13Stop
   634 ;;		_workCtr
   635 ;; This function is called by:
   636 ;;		Startup code after reset
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _main
   642  02DB                     _main:	
   643                           
   644                           ;main.c: 375: Init_System();
   645                           
   646                           ;incstack = 0
   647                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   648  02DB  242D               	fcall	_Init_System
   649                           
   650                           ;main.c: 376: ledDuty = 50;
   651  02DC  3032               	movlw	50
   652  02DD  00FB               	movwf	_ledDuty
   653                           
   654                           ;main.c: 377: checkLvd();
   655  02DE  24BB               	fcall	_checkLvd
   656  02DF                     l3126:	
   657                           
   658                           ;main.c: 379: {
   659                           ;main.c: 380: if(B_MainLoop)
   660  02DF  1F78               	btfss	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
   661  02E0  2ADF               	goto	l3126
   662                           
   663                           ;main.c: 381: {
   664                           ;main.c: 382: B_MainLoop = 0;
   665  02E1  1378               	bcf	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
   666  02E2  0064               	clrwdt	;# 
   667                           
   668                           ;main.c: 385: CheckTouchKey();
   669  02E3  2305               	fcall	_CheckTouchKey
   670                           
   671                           ;main.c: 387: Refurbish_Sfr();
   672  02E4  2450               	fcall	_Refurbish_Sfr
   673                           
   674                           ;main.c: 388: KeyServer();
   675  02E5  2177               	fcall	_KeyServer
   676                           
   677                           ;main.c: 389: keyCtr();
   678  02E6  239B               	fcall	_keyCtr
   679                           
   680                           ;main.c: 390: workCtr();
   681  02E7  2275               	fcall	_workCtr
   682                           
   683                           ;main.c: 391: if(workStep == 0 && keyCount == 0 && count300s == 0 && doubleKeyTime == 0)
   684  02E8  0879               	movf	_workStep,w
   685  02E9  1D03               	btfss	3,2
   686  02EA  2AF9               	goto	l535
   687  02EB  082A               	movf	_keyCount,w
   688  02EC  042B               	iorwf	_keyCount+1,w
   689  02ED  1D03               	btfss	3,2
   690  02EE  2AF9               	goto	l535
   691  02EF  0826               	movf	_count300s,w
   692  02F0  0427               	iorwf	_count300s+1,w
   693  02F1  1D03               	btfss	3,2
   694  02F2  2AF9               	goto	l535
   695  02F3  083C               	movf	_doubleKeyTime,w
   696  02F4  1D03               	btfss	3,2
   697  02F5  2AF9               	goto	l535
   698                           
   699                           ;main.c: 392: {
   700                           ;main.c: 394: pwm13Stop();
   701  02F6  24B6               	fcall	_pwm13Stop
   702                           
   703                           ;main.c: 395: WorkSleep();
   704  02F7  23B7               	fcall	_WorkSleep
   705                           
   706                           ;main.c: 396: }
   707  02F8  2ADF               	goto	l3126
   708  02F9                     l535:	
   709                           
   710                           ;main.c: 397: else
   711                           ;main.c: 398: {
   712                           ;main.c: 399: if(CMPCON0 & 0x02)
   713  02F9  1C8F               	btfss	15,1	;volatile
   714  02FA  2AFD               	goto	l3154
   715                           
   716                           ;main.c: 400: {
   717                           ;main.c: 401: lvdTime = 0;
   718  02FB  01BD               	clrf	_lvdTime
   719                           
   720                           ;main.c: 402: }
   721  02FC  2ADF               	goto	l3126
   722  02FD                     l3154:	
   723                           
   724                           ;main.c: 403: else
   725                           ;main.c: 404: {
   726                           ;main.c: 405: if(++lvdTime > 200)
   727  02FD  30C9               	movlw	201
   728  02FE  0ABD               	incf	_lvdTime,f
   729  02FF  023D               	subwf	_lvdTime,w
   730  0300  1C03               	skipc
   731  0301  2ADF               	goto	l3126
   732                           
   733                           ;main.c: 406: {
   734                           ;main.c: 407: lvdTime = 0;
   735  0302  01BD               	clrf	_lvdTime
   736                           
   737                           ;main.c: 408: workStep = 0;
   738  0303  01F9               	clrf	_workStep
   739  0304  2ADF               	goto	l3126
   740  0305                     __end_of_main:	
   741                           
   742                           	psect	text1
   743  0275                     __ptext1:	
   744 ;; *************** function _workCtr *****************
   745 ;; Defined at:
   746 ;;		line 327 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, status,2, status,0, pclath, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : 300/0
   757 ;;		On exit  : 300/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1
   760 ;;      Params:         0       0       0
   761 ;;      Locals:         0       0       0
   762 ;;      Temps:          0       0       0
   763 ;;      Totals:         0       0       0
   764 ;;Total ram usage:        0 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; Hardware stack levels required when called:    2
   767 ;; This function calls:
   768 ;;		_pwm13Init
   769 ;;		_pwm13Stop
   770 ;;		_pwm1Init
   771 ;;		_pwm1Stop
   772 ;;		_pwm3Init
   773 ;;		_pwm3Stop
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           
   780                           ;psect for function _workCtr
   781  0275                     _workCtr:	
   782                           
   783                           ;main.c: 329: if(++count1s >= 500)
   784                           
   785                           ;incstack = 0
   786                           ; Regs used in _workCtr: [wreg+status,2+status,0+pclath+cstack]
   787  0275  0AA8               	incf	_count1s,f
   788  0276  1903               	skipnz
   789  0277  0AA9               	incf	_count1s+1,f
   790  0278  3001               	movlw	1
   791  0279  0229               	subwf	_count1s+1,w
   792  027A  30F4               	movlw	244
   793  027B  1903               	skipnz
   794  027C  0228               	subwf	_count1s,w
   795  027D  1C03               	skipc
   796  027E  2A8B               	goto	l2702
   797                           
   798                           ;main.c: 330: {
   799                           ;main.c: 331: count1s = 0;
   800  027F  01A8               	clrf	_count1s
   801  0280  01A9               	clrf	_count1s+1
   802                           
   803                           ;main.c: 332: if(count300s > 0)
   804  0281  0826               	movf	_count300s,w
   805  0282  0427               	iorwf	_count300s+1,w
   806  0283  1903               	btfsc	3,2
   807  0284  2A8B               	goto	l2702
   808                           
   809                           ;main.c: 333: {
   810                           ;main.c: 334: count300s--;
   811  0285  3001               	movlw	1
   812  0286  02A6               	subwf	_count300s,f
   813  0287  3000               	movlw	0
   814  0288  1C03               	skipc
   815  0289  03A7               	decf	_count300s+1,f
   816  028A  02A7               	subwf	_count300s+1,f
   817  028B                     l2702:	
   818                           
   819                           ;main.c: 335: }
   820                           ;main.c: 336: }
   821                           ;main.c: 337: if(count300s > 0)
   822  028B  0826               	movf	_count300s,w
   823  028C  0427               	iorwf	_count300s+1,w
   824  028D  1903               	btfsc	3,2
   825  028E  2A91               	goto	l519
   826                           
   827                           ;main.c: 338: {
   828                           ;main.c: 339: RB2 = 1;
   829  028F  1506               	bsf	6,2	;volatile
   830                           
   831                           ;main.c: 340: }
   832  0290  2A92               	goto	l2706
   833  0291                     l519:	
   834                           
   835                           ;main.c: 341: else
   836                           ;main.c: 342: {
   837                           ;main.c: 343: RB2 = 0;
   838  0291  1106               	bcf	6,2	;volatile
   839  0292                     l2706:	
   840                           
   841                           ;main.c: 344: }
   842                           ;main.c: 346: if(workStep == 0)
   843  0292  0879               	movf	_workStep,w
   844  0293  1D03               	btfss	3,2
   845  0294  2A96               	goto	l2710
   846                           
   847                           ;main.c: 347: {
   848                           ;main.c: 348: pwm13Stop();
   849  0295  2CB6               	ljmp	l2342
   850  0296                     l2710:	
   851                           ;main.c: 349: }
   852                           
   853                           
   854                           ;main.c: 350: else if(workStep == 1)
   855  0296  0B79               	decfsz	_workStep,w
   856  0297  2A9D               	goto	l2716
   857                           
   858                           ;main.c: 351: {
   859                           ;main.c: 352: pwm1Init();
   860  0298  245F               	fcall	_pwm1Init
   861                           
   862                           ;main.c: 353: pwm3Stop();
   863  0299  24C0               	fcall	_pwm3Stop
   864                           
   865                           ;main.c: 354: led1Duty = ledDuty;
   866  029A  087B               	movf	_ledDuty,w
   867  029B  00CC               	movwf	_led1Duty
   868                           
   869                           ;main.c: 355: }
   870  029C  0008               	return
   871  029D                     l2716:	
   872                           
   873                           ;main.c: 356: else if(workStep == 2)
   874  029D  3002               	movlw	2
   875  029E  0679               	xorwf	_workStep,w
   876  029F  1D03               	btfss	3,2
   877  02A0  2AA6               	goto	l2722
   878                           
   879                           ;main.c: 357: {
   880                           ;main.c: 358: pwm3Init();
   881  02A1  24A7               	fcall	_pwm3Init
   882                           
   883                           ;main.c: 359: pwm1Stop();
   884  02A2  24C3               	fcall	_pwm1Stop
   885                           
   886                           ;main.c: 360: led2Duty = ledDuty;
   887  02A3  087B               	movf	_ledDuty,w
   888  02A4  00CB               	movwf	_led2Duty
   889                           
   890                           ;main.c: 361: }
   891  02A5  0008               	return
   892  02A6                     l2722:	
   893                           
   894                           ;main.c: 362: else if(workStep == 3)
   895  02A6  3003               	movlw	3
   896  02A7  0679               	xorwf	_workStep,w
   897  02A8  1D03               	btfss	3,2
   898  02A9  0008               	return
   899                           
   900                           ;main.c: 363: {
   901                           ;main.c: 364: pwm13Init();
   902  02AA  23EB               	fcall	_pwm13Init
   903                           
   904                           ;main.c: 365: led3Duty = ledDuty;
   905  02AB  087B               	movf	_ledDuty,w
   906  02AC  00CA               	movwf	_led3Duty
   907  02AD  0008               	return
   908  02AE                     __end_of_workCtr:	
   909                           
   910                           	psect	text2
   911  04C0                     __ptext2:	
   912 ;; *************** function _pwm3Stop *****************
   913 ;; Defined at:
   914 ;;		line 163 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;		None
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		None
   923 ;; Tracked objects:
   924 ;;		On entry : 300/0
   925 ;;		On exit  : 300/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1
   928 ;;      Params:         0       0       0
   929 ;;      Locals:         0       0       0
   930 ;;      Temps:          0       0       0
   931 ;;      Totals:         0       0       0
   932 ;;Total ram usage:        0 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    1
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_workCtr
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _pwm3Stop
   944  04C0                     _pwm3Stop:	
   945                           
   946                           ;main.c: 165: PWMCON0 &= 0XF7;
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _pwm3Stop: []
   950  04C0  1195               	bcf	21,3	;volatile
   951                           
   952                           ;main.c: 166: RB4 = 0;
   953  04C1  1206               	bcf	6,4	;volatile
   954  04C2  0008               	return
   955  04C3                     __end_of_pwm3Stop:	
   956                           
   957                           	psect	text3
   958  04A7                     __ptext3:	
   959 ;; *************** function _pwm3Init *****************
   960 ;; Defined at:
   961 ;;		line 145 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2
   970 ;; Tracked objects:
   971 ;;		On entry : 300/0
   972 ;;		On exit  : 300/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1
   975 ;;      Params:         0       0       0
   976 ;;      Locals:         0       0       0
   977 ;;      Temps:          0       0       0
   978 ;;      Totals:         0       0       0
   979 ;;Total ram usage:        0 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    1
   982 ;; This function calls:
   983 ;;		Nothing
   984 ;; This function is called by:
   985 ;;		_workCtr
   986 ;; This function uses a non-reentrant model
   987 ;;
   988                           
   989                           
   990                           ;psect for function _pwm3Init
   991  04A7                     _pwm3Init:	
   992                           
   993                           ;main.c: 148: TRISB |= 0x10;
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _pwm3Init: [wreg+status,2]
   997  04A7  1605               	bsf	5,4	;volatile
   998                           
   999                           ;main.c: 149: PWMCON1 = 0B00000000;
  1000                           
  1001                           ;main.c: 150: PWMTH = 0X00;
  1002                           
  1003                           ;main.c: 152: PWMTL = 100;
  1004                           
  1005                           ;main.c: 153: PWMD23H = 0;
  1006                           
  1007                           ;main.c: 154: PWMD3L = ledDuty;
  1008                           
  1009                           ;main.c: 155: PWM23DT = 0X00;
  1010  04A8  23F9               	fcall	PL10	;call to abstracted procedure
  1011                           
  1012                           ;main.c: 157: PWMCON0 = 0X68;
  1013  04A9  3068               	movlw	104
  1014  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1015  04AB  0095               	movwf	21	;volatile
  1016                           
  1017                           ;main.c: 158: PWMCON2 =0X00;
  1018  04AC  019D               	clrf	29	;volatile
  1019                           
  1020                           ;main.c: 159: TRISB &= 0xEF;
  1021  04AD  1205               	bcf	5,4	;volatile
  1022  04AE  0008               	return
  1023  04AF                     __end_of_pwm3Init:	
  1024                           
  1025                           	psect	text4
  1026  04C3                     __ptext4:	
  1027 ;; *************** function _pwm1Stop *****************
  1028 ;; Defined at:
  1029 ;;		line 189 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		None
  1038 ;; Tracked objects:
  1039 ;;		On entry : 300/0
  1040 ;;		On exit  : 300/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1
  1043 ;;      Params:         0       0       0
  1044 ;;      Locals:         0       0       0
  1045 ;;      Temps:          0       0       0
  1046 ;;      Totals:         0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    1
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_workCtr
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           
  1058                           ;psect for function _pwm1Stop
  1059  04C3                     _pwm1Stop:	
  1060                           
  1061                           ;main.c: 191: PWMCON0 &= 0XFD;
  1062                           
  1063                           ;incstack = 0
  1064                           ; Regs used in _pwm1Stop: []
  1065  04C3  1095               	bcf	21,1	;volatile
  1066                           
  1067                           ;main.c: 192: RB1 = 0;
  1068  04C4  1086               	bcf	6,1	;volatile
  1069  04C5  0008               	return
  1070  04C6                     __end_of_pwm1Stop:	
  1071                           
  1072                           	psect	text5
  1073  045F                     __ptext5:	
  1074 ;; *************** function _pwm1Init *****************
  1075 ;; Defined at:
  1076 ;;		line 171 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;		None
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      void 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2
  1085 ;; Tracked objects:
  1086 ;;		On entry : 300/0
  1087 ;;		On exit  : 300/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMMON   BANK0   BANK1
  1090 ;;      Params:         0       0       0
  1091 ;;      Locals:         0       0       0
  1092 ;;      Temps:          0       0       0
  1093 ;;      Totals:         0       0       0
  1094 ;;Total ram usage:        0 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_workCtr
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _pwm1Init
  1106  045F                     _pwm1Init:	
  1107                           
  1108                           ;main.c: 173: TRISB |= 0x02;
  1109                           
  1110                           ;incstack = 0
  1111                           ; Regs used in _pwm1Init: [wreg+status,2]
  1112  045F  1485               	bsf	5,1	;volatile
  1113                           
  1114                           ;main.c: 174: PWMCON1 = 0B00000000;
  1115  0460  0196               	clrf	22	;volatile
  1116                           
  1117                           ;main.c: 175: PWMTH = 0X00;
  1118  0461  0198               	clrf	24	;volatile
  1119                           
  1120                           ;main.c: 176: PWMTL = 100;
  1121  0462  3064               	movlw	100
  1122  0463  0097               	movwf	23	;volatile
  1123                           
  1124                           ;main.c: 179: PWMD01H = 0;
  1125  0464  019E               	clrf	30	;volatile
  1126                           
  1127                           ;main.c: 180: PWMD1L = ledDuty;
  1128  0465  087B               	movf	_ledDuty,w
  1129  0466  009A               	movwf	26	;volatile
  1130                           
  1131                           ;main.c: 181: PWM01DT = 0X00;
  1132  0467  019F               	clrf	31	;volatile
  1133                           
  1134                           ;main.c: 183: PWMCON0 = 0X62;
  1135  0468  3062               	movlw	98
  1136  0469  0095               	movwf	21	;volatile
  1137                           
  1138                           ;main.c: 184: PWMCON2 =0X00;
  1139  046A  019D               	clrf	29	;volatile
  1140                           
  1141                           ;main.c: 185: TRISB &= 0xFD;
  1142  046B  1085               	bcf	5,1	;volatile
  1143  046C  0008               	return
  1144  046D                     __end_of_pwm1Init:	
  1145                           
  1146                           	psect	text6
  1147  04B6                     __ptext6:	
  1148 ;; *************** function _pwm13Stop *****************
  1149 ;; Defined at:
  1150 ;;		line 218 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0
  1159 ;; Tracked objects:
  1160 ;;		On entry : 300/0
  1161 ;;		On exit  : 300/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1
  1164 ;;      Params:         0       0       0
  1165 ;;      Locals:         0       0       0
  1166 ;;      Temps:          0       0       0
  1167 ;;      Totals:         0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    1
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_workCtr
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _pwm13Stop
  1181  04B6                     _pwm13Stop:	
  1182  04B6                     l2342:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _pwm13Stop: [wreg+status,2+status,0]
  1185                           
  1186                           
  1187                           ;main.c: 220: PWMCON0 &= 0XF5;
  1188  04B6  30F5               	movlw	245
  1189  04B7  0595               	andwf	21,f	;volatile
  1190                           
  1191                           ;main.c: 221: PORTB &= 0xED;
  1192  04B8  30ED               	movlw	237
  1193  04B9  0586               	andwf	6,f	;volatile
  1194  04BA  0008               	return
  1195  04BB                     __end_of_pwm13Stop:	
  1196                           
  1197                           	psect	text7
  1198  03EB                     __ptext7:	
  1199 ;; *************** function _pwm13Init *****************
  1200 ;; Defined at:
  1201 ;;		line 196 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, status,2, status,0
  1210 ;; Tracked objects:
  1211 ;;		On entry : 300/0
  1212 ;;		On exit  : 300/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1
  1215 ;;      Params:         0       0       0
  1216 ;;      Locals:         0       0       0
  1217 ;;      Temps:          0       0       0
  1218 ;;      Totals:         0       0       0
  1219 ;;Total ram usage:        0 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; Hardware stack levels required when called:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_workCtr
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           
  1230                           ;psect for function _pwm13Init
  1231  03EB                     _pwm13Init:	
  1232                           
  1233                           ;main.c: 198: TRISB |= 0x05;
  1234                           
  1235                           ;incstack = 0
  1236                           ; Regs used in _pwm13Init: [wreg+status,2+status,0]
  1237  03EB  3005               	movlw	5
  1238  03EC  0485               	iorwf	5,f	;volatile
  1239                           
  1240                           ;main.c: 199: PWMCON1 = 0B00000000;
  1241                           
  1242                           ;main.c: 200: PWMTH = 0X00;
  1243                           
  1244                           ;main.c: 201: PWMTL = 100;
  1245                           
  1246                           ;main.c: 204: PWMD23H = 0;
  1247                           
  1248                           ;main.c: 205: PWMD3L = ledDuty;
  1249                           
  1250                           ;main.c: 206: PWM23DT = 0X00;
  1251  03ED  23F9               	fcall	PL10	;call to abstracted procedure
  1252                           
  1253                           ;main.c: 208: PWMD01H = 0;
  1254  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1255  03EF  019E               	clrf	30	;volatile
  1256                           
  1257                           ;main.c: 209: PWMD1L = ledDuty;
  1258  03F0  087B               	movf	_ledDuty,w
  1259  03F1  009A               	movwf	26	;volatile
  1260                           
  1261                           ;main.c: 210: PWM01DT = 0X00;
  1262  03F2  019F               	clrf	31	;volatile
  1263                           
  1264                           ;main.c: 212: PWMCON0 = 0X6A;
  1265  03F3  306A               	movlw	106
  1266  03F4  0095               	movwf	21	;volatile
  1267                           
  1268                           ;main.c: 213: PWMCON2 =0X00;
  1269  03F5  019D               	clrf	29	;volatile
  1270                           
  1271                           ;main.c: 214: TRISB &= 0xFA;
  1272  03F6  30FA               	movlw	250
  1273  03F7  0585               	andwf	5,f	;volatile
  1274  03F8  0008               	return
  1275  03F9                     __end_of_pwm13Init:	
  1276  03F9                     PL10:	
  1277  03F9  0196               	clrf	22	;volatile
  1278  03FA  0198               	clrf	24	;volatile
  1279  03FB  3064               	movlw	100
  1280  03FC  0097               	movwf	23	;volatile
  1281  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  1282  03FE  019E               	clrf	30	;volatile
  1283  03FF  087B               	movf	_ledDuty,w
  1284  0400  009C               	movwf	28	;volatile
  1285  0401  019D               	clrf	29	;volatile
  1286  0402  0008               	return
  1287  0403                     __end_ofPL10:	
  1288                           
  1289                           	psect	text8
  1290  039B                     __ptext8:	
  1291 ;; *************** function _keyCtr *****************
  1292 ;; Defined at:
  1293 ;;		line 301 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 300/0
  1304 ;;		On exit  : 300/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1
  1307 ;;      Params:         0       0       0
  1308 ;;      Locals:         0       0       0
  1309 ;;      Temps:          0       0       0
  1310 ;;      Totals:         0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    1
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           
  1322                           ;psect for function _keyCtr
  1323  039B                     _keyCtr:	
  1324                           
  1325                           ;main.c: 303: if(doubleKeyTime > 0)
  1326                           
  1327                           ;incstack = 0
  1328                           ; Regs used in _keyCtr: [wreg+status,2+status,0]
  1329  039B  083C               	movf	_doubleKeyTime,w
  1330  039C  1D03               	btfss	3,2
  1331                           
  1332                           ;main.c: 304: {
  1333                           ;main.c: 305: if(--doubleKeyTime == 0)
  1334  039D  0BBC               	decfsz	_doubleKeyTime,f
  1335  039E  0008               	return
  1336                           
  1337                           ;main.c: 306: {
  1338                           ;main.c: 307: if(++workStep > 3)
  1339  039F  3004               	movlw	4
  1340  03A0  0AF9               	incf	_workStep,f
  1341  03A1  0279               	subwf	_workStep,w
  1342  03A2  1803               	btfsc	3,0
  1343                           
  1344                           ;main.c: 308: {
  1345                           ;main.c: 309: workStep = 0;
  1346  03A3  01F9               	clrf	_workStep
  1347                           
  1348                           ;main.c: 310: }
  1349                           ;main.c: 311: if(workStep == 1)
  1350  03A4  0B79               	decfsz	_workStep,w
  1351  03A5  2BA9               	goto	l2686
  1352                           
  1353                           ;main.c: 312: {
  1354                           ;main.c: 313: ledDuty = led1Duty;
  1355  03A6  084C               	movf	_led1Duty,w
  1356  03A7  00FB               	movwf	_ledDuty
  1357                           
  1358                           ;main.c: 314: }
  1359  03A8  0008               	return
  1360  03A9                     l2686:	
  1361                           
  1362                           ;main.c: 315: else if(workStep == 2)
  1363  03A9  3002               	movlw	2
  1364  03AA  0679               	xorwf	_workStep,w
  1365  03AB  1D03               	btfss	3,2
  1366  03AC  2BB0               	goto	l2690
  1367                           
  1368                           ;main.c: 316: {
  1369                           ;main.c: 317: ledDuty = led2Duty;
  1370  03AD  084B               	movf	_led2Duty,w
  1371  03AE  00FB               	movwf	_ledDuty
  1372                           
  1373                           ;main.c: 318: }
  1374  03AF  0008               	return
  1375  03B0                     l2690:	
  1376                           
  1377                           ;main.c: 319: else if(workStep == 3)
  1378  03B0  3003               	movlw	3
  1379  03B1  0679               	xorwf	_workStep,w
  1380  03B2  1D03               	btfss	3,2
  1381  03B3  0008               	return
  1382                           
  1383                           ;main.c: 320: {
  1384                           ;main.c: 321: ledDuty = led3Duty;
  1385  03B4  084A               	movf	_led3Duty,w
  1386  03B5  00FB               	movwf	_ledDuty
  1387  03B6  0008               	return
  1388  03B7                     __end_of_keyCtr:	
  1389                           
  1390                           	psect	text9
  1391  03B7                     __ptext9:	
  1392 ;; *************** function _WorkSleep *****************
  1393 ;; Defined at:
  1394 ;;		line 254 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;		None
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 300/0
  1405 ;;		On exit  : 300/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1
  1408 ;;      Params:         0       0       0
  1409 ;;      Locals:         0       0       0
  1410 ;;      Temps:          0       0       0
  1411 ;;      Totals:         0       0       0
  1412 ;;Total ram usage:        0 bytes
  1413 ;; Hardware stack levels used:    1
  1414 ;; Hardware stack levels required when called:    4
  1415 ;; This function calls:
  1416 ;;		_Refurbish_Sfr
  1417 ;;		_SystemEnterSleep
  1418 ;;		_checkLvd
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _WorkSleep
  1426  03B7                     _WorkSleep:	
  1427                           
  1428                           ;main.c: 257: static unsigned char time;
  1429                           ;main.c: 261: if(++time >= 125)
  1430                           
  1431                           ;incstack = 0
  1432                           ; Regs used in _WorkSleep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1433  03B7  307D               	movlw	125
  1434  03B8  0ABB               	incf	WorkSleep@time,f
  1435  03B9  023B               	subwf	WorkSleep@time,w
  1436  03BA  1C03               	skipc
  1437  03BB  0008               	return
  1438                           
  1439                           ;main.c: 262: {
  1440                           ;main.c: 263: time = 0;
  1441  03BC  01BB               	clrf	WorkSleep@time
  1442                           
  1443                           ;main.c: 264: INTCON = 0;
  1444  03BD  018B               	clrf	11	;volatile
  1445                           
  1446                           ;main.c: 265: PIE1 = 0;
  1447  03BE  018E               	clrf	14	;volatile
  1448                           
  1449                           ;main.c: 266: PIE2 = 0;
  1450  03BF  1703               	bsf	3,6	;RP1=1, select bank2
  1451  03C0  0190               	clrf	16	;volatile
  1452                           
  1453                           ;main.c: 267: PIR1 = 0;
  1454  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1455  03C2  018D               	clrf	13	;volatile
  1456                           
  1457                           ;main.c: 268: PIR2 = 0;
  1458  03C3  1703               	bsf	3,6	;RP1=1, select bank2
  1459  03C4  018F               	clrf	15	;volatile
  1460                           
  1461                           ;main.c: 269: T2CON = 0;
  1462  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1463  03C6  0193               	clrf	19	;volatile
  1464                           
  1465                           ;main.c: 273: TRISB = 0x00;
  1466  03C7  0185               	clrf	5	;volatile
  1467                           
  1468                           ;main.c: 274: PORTB = 0;
  1469  03C8  0186               	clrf	6	;volatile
  1470                           
  1471                           ;main.c: 275: CMPCON1 = 0x00;
  1472  03C9  0190               	clrf	16	;volatile
  1473                           
  1474                           ;main.c: 276: CMPCON0 = 0x00;
  1475  03CA  018F               	clrf	15	;volatile
  1476                           
  1477                           ;main.c: 288: SystemEnterSleep();
  1478  03CB  2102               	fcall	_SystemEnterSleep
  1479                           
  1480                           ;main.c: 289: if(RBIF)
  1481  03CC  1C0B               	btfss	11,0	;volatile
  1482  03CD  2BD0               	goto	l3080
  1483                           
  1484                           ;main.c: 290: {
  1485                           ;main.c: 291: RBIF = 0;
  1486  03CE  100B               	bcf	11,0	;volatile
  1487                           
  1488                           ;main.c: 292: PORTB;
  1489  03CF  0806               	movf	6,w	;volatile
  1490  03D0                     l3080:	
  1491                           
  1492                           ;main.c: 293: }
  1493                           ;main.c: 295: Refurbish_Sfr();
  1494  03D0  2450               	fcall	_Refurbish_Sfr
  1495                           
  1496                           ;main.c: 296: checkLvd();
  1497  03D1  2CBB               	ljmp	l2344
  1498  03D2                     __end_of_WorkSleep:	
  1499                           
  1500                           	psect	text10
  1501  04BB                     __ptext10:	
  1502 ;; *************** function _checkLvd *****************
  1503 ;; Defined at:
  1504 ;;		line 225 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg
  1513 ;; Tracked objects:
  1514 ;;		On entry : 300/0
  1515 ;;		On exit  : 300/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1
  1518 ;;      Params:         0       0       0
  1519 ;;      Locals:         0       0       0
  1520 ;;      Temps:          0       0       0
  1521 ;;      Totals:         0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    1
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_WorkSleep
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _checkLvd
  1535  04BB                     _checkLvd:	
  1536  04BB                     l2344:	
  1537                           ;incstack = 0
  1538                           ; Regs used in _checkLvd: [wreg]
  1539                           
  1540                           
  1541                           ;main.c: 227: CMPCON1 = 0x28;
  1542  04BB  3028               	movlw	40
  1543  04BC  0090               	movwf	16	;volatile
  1544                           
  1545                           ;main.c: 228: CMPCON0 = 0xA8;
  1546  04BD  30A8               	movlw	168
  1547  04BE  008F               	movwf	15	;volatile
  1548  04BF  0008               	return
  1549  04C0                     __end_of_checkLvd:	
  1550                           
  1551                           	psect	text11
  1552  0102                     __ptext11:	
  1553 ;; *************** function _SystemEnterSleep *****************
  1554 ;; Defined at:
  1555 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;		None
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  425             2    6[BANK0 ] unsigned int 
  1560 ;;  426             2    4[BANK0 ] unsigned int 
  1561 ;;  424             2    2[BANK0 ] unsigned int 
  1562 ;;  423             1    8[BANK0 ] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 300/0
  1569 ;;		On exit  : 300/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1
  1572 ;;      Params:         0       0       0
  1573 ;;      Locals:         0       7       0
  1574 ;;      Temps:          0       2       0
  1575 ;;      Totals:         0       9       0
  1576 ;;Total ram usage:        9 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    3
  1579 ;; This function calls:
  1580 ;;		_ClearResSum
  1581 ;;		_GetTouchKeyValue
  1582 ;;		_JudgeKeyOldData
  1583 ;;		_RKeyOldData
  1584 ;; This function is called by:
  1585 ;;		_WorkSleep
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           
  1590                           ;psect for function _SystemEnterSleep
  1591  0102                     _SystemEnterSleep:	
  1592  0102                     l1087:	
  1593                           ;incstack = 0
  1594                           ; Regs used in _SystemEnterSleep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1595                           
  1596  0102  0064               	clrwdt	;# 
  1597  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0104  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0105  0181               	clrf	1	;volatile
  1600  0106  3007               	movlw	7
  1601  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0108  0481               	iorwf	1,f	;volatile
  1603  0109  1581               	bsf	1,3	;volatile
  1604  010A  0064               	clrwdt	;# 
  1605  010B  300B               	movlw	11
  1606  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1607  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1608  010E  0081               	movwf	1	;volatile
  1609  010F  0064               	clrwdt	;# 
  1610  0110  1283               	bcf	3,5	;RP0=0, select bank2
  1611  0111  1703               	bsf	3,6	;RP1=1, select bank2
  1612  0112  0191               	clrf	17	;volatile
  1613  0113  0193               	clrf	19	;volatile
  1614  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0115  1305               	bcf	5,6	;volatile
  1616  0116  1306               	bcf	6,6	;volatile
  1617  0117  3072               	movlw	114
  1618  0118  0094               	movwf	20	;volatile
  1619  0119  0063               	sleep	;# 
  1620  011A  0000               	nop	;# 
  1621  011B  0064               	clrwdt	;# 
  1622  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1623  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1624  011E  0094               	movwf	20	;volatile
  1625  011F  3079               	movlw	121
  1626  0120  1703               	bsf	3,6	;RP1=1, select bank2
  1627  0121  0093               	movwf	19	;volatile
  1628  0122  246D               	fcall	_ClearResSum
  1629  0123  1478               	bsf	_b_ksleep/(0+8),_b_ksleep& (0+7)	;volatile
  1630  0124  21DE               	fcall	_GetTouchKeyValue
  1631  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0127  01C9               	clrf	SystemEnterSleep@423
  1634  0128  01C3               	clrf	SystemEnterSleep@424
  1635  0129  0AC3               	incf	SystemEnterSleep@424,f
  1636  012A  01C4               	clrf	SystemEnterSleep@424+1
  1637  012B  180B               	btfsc	11,0	;volatile
  1638  012C  292F               	goto	l2912
  1639  012D  1C8B               	btfss	11,1	;volatile
  1640  012E  2936               	goto	l1093
  1641  012F                     l2912:	
  1642  012F  246D               	fcall	_ClearResSum
  1643  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0132  01BA               	clrf	_KeyCounter
  1646  0133  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1647  0134  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1648  0135  0008               	return
  1649  0136                     l1093:	
  1650  0136  1C43               	btfss	SystemEnterSleep@424,0
  1651  0137  296F               	goto	l2944
  1652  0138  1003               	clrc
  1653  0139  0D49               	rlf	SystemEnterSleep@423,w
  1654  013A  3E34               	addlw	(low (_KeyResSum| 0))& (0+255)
  1655  013B  0084               	movwf	4
  1656  013C  1383               	bcf	3,7	;select IRP bank0
  1657  013D  0800               	movf	0,w
  1658  013E  00C7               	movwf	SystemEnterSleep@425
  1659  013F  0A84               	incf	4,f
  1660  0140  0800               	movf	0,w
  1661  0141  00C8               	movwf	SystemEnterSleep@425+1
  1662  0142  00C6               	movwf	SystemEnterSleep@426+1
  1663  0143  0847               	movf	SystemEnterSleep@425,w
  1664  0144  00C5               	movwf	SystemEnterSleep@426
  1665  0145  0847               	movf	SystemEnterSleep@425,w
  1666  0146  0448               	iorwf	SystemEnterSleep@425+1,w
  1667  0147  1903               	btfsc	3,2
  1668  0148  296F               	goto	l2944
  1669  0149  0849               	movf	SystemEnterSleep@423,w
  1670  014A  3E09               	addlw	low ((_Table_KeyDown-__stringbase)| (0+32768))
  1671  014B  0084               	movwf	4
  1672  014C  2440               	fcall	stringdir
  1673  014D  07C5               	addwf	SystemEnterSleep@426,f
  1674  014E  1803               	skipnc
  1675  014F  0AC6               	incf	SystemEnterSleep@426+1,f
  1676  0150  1003               	clrc
  1677  0151  0D49               	rlf	SystemEnterSleep@423,w
  1678  0152  3E2E               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  1679  0153  0084               	movwf	4
  1680  0154  0800               	movf	0,w
  1681  0155  00C1               	movwf	??_SystemEnterSleep
  1682  0156  0A84               	incf	4,f
  1683  0157  0800               	movf	0,w
  1684  0158  00C2               	movwf	??_SystemEnterSleep+1
  1685  0159  0846               	movf	SystemEnterSleep@426+1,w
  1686  015A  0242               	subwf	??_SystemEnterSleep+1,w
  1687  015B  1D03               	skipz
  1688  015C  295F               	goto	u1985
  1689  015D  0845               	movf	SystemEnterSleep@426,w
  1690  015E  0241               	subwf	??_SystemEnterSleep,w
  1691  015F                     u1985:	
  1692  015F  1803               	btfsc	3,0
  1693  0160  292F               	goto	l2912
  1694  0161  0848               	movf	SystemEnterSleep@425+1,w
  1695  0162  00F3               	movwf	JudgeKeyOldData@428+1
  1696  0163  0847               	movf	SystemEnterSleep@425,w
  1697  0164  00F2               	movwf	JudgeKeyOldData@428
  1698  0165  0849               	movf	SystemEnterSleep@423,w
  1699  0166  222B               	fcall	_JudgeKeyOldData
  1700  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0168  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0169  0848               	movf	SystemEnterSleep@425+1,w
  1703  016A  00F3               	movwf	RKeyOldData@431+1
  1704  016B  0847               	movf	SystemEnterSleep@425,w
  1705  016C  00F2               	movwf	RKeyOldData@431
  1706  016D  0849               	movf	SystemEnterSleep@423,w
  1707  016E  2352               	fcall	_RKeyOldData
  1708  016F                     l2944:	
  1709  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0171  1003               	clrc
  1712  0172  0DC3               	rlf	SystemEnterSleep@424,f
  1713  0173  0DC4               	rlf	SystemEnterSleep@424+1,f
  1714  0174  0FC9               	incfsz	SystemEnterSleep@423,f
  1715  0175  2902               	goto	l1087
  1716  0176  2936               	goto	l1093
  1717  0177                     __end_of_SystemEnterSleep:	
  1718                           
  1719                           	psect	text12
  1720  0450                     __ptext12:	
  1721 ;; *************** function _Refurbish_Sfr *****************
  1722 ;; Defined at:
  1723 ;;		line 62 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 300/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1
  1737 ;;      Params:         0       0       0
  1738 ;;      Locals:         0       0       0
  1739 ;;      Temps:          0       0       0
  1740 ;;      Totals:         0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_WorkSleep
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _Refurbish_Sfr
  1754  0450                     _Refurbish_Sfr:	
  1755                           
  1756                           ;main.c: 65: PIE1 = 2;
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _Refurbish_Sfr: [wreg+status,2+status,0]
  1760  0450  3002               	movlw	2
  1761  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1762  0452  1303               	bcf	3,6	;RP1=0, select bank0
  1763  0453  008E               	movwf	14	;volatile
  1764                           
  1765                           ;main.c: 66: PR2 = 250;
  1766  0454  30FA               	movlw	250
  1767  0455  0091               	movwf	17	;volatile
  1768                           
  1769                           ;main.c: 67: INTCON = 0XC0;
  1770  0456  30C0               	movlw	192
  1771  0457  008B               	movwf	11	;volatile
  1772                           
  1773                           ;main.c: 68: if (4 != T2CON)
  1774  0458  3004               	movlw	4
  1775  0459  0613               	xorwf	19,w	;volatile
  1776  045A  1903               	btfsc	3,2
  1777  045B  0008               	return
  1778                           
  1779                           ;main.c: 69: T2CON = 4;
  1780  045C  3004               	movlw	4
  1781  045D  0093               	movwf	19	;volatile
  1782  045E  0008               	return
  1783  045F                     __end_of_Refurbish_Sfr:	
  1784                           
  1785                           	psect	text13
  1786  0177                     __ptext13:	
  1787 ;; *************** function _KeyServer *****************
  1788 ;; Defined at:
  1789 ;;		line 76 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, pclath, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 300/0
  1800 ;;		On exit  : 300/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMMON   BANK0   BANK1
  1803 ;;      Params:         0       0       0
  1804 ;;      Locals:         0       0       0
  1805 ;;      Temps:          0       0       0
  1806 ;;      Totals:         0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    2
  1810 ;; This function calls:
  1811 ;;		___lwmod
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _KeyServer
  1819  0177                     _KeyServer:	
  1820                           
  1821                           ;main.c: 78: static unsigned char KeyOldFlag = 0;
  1822                           ;main.c: 79: if (KeyFlag[0])
  1823                           
  1824                           ;incstack = 0
  1825                           ; Regs used in _KeyServer: [wreg+status,2+status,0+pclath+cstack]
  1826  0177  087A               	movf	_KeyFlag,w	;volatile
  1827  0178  1903               	btfsc	3,2
  1828  0179  29AF               	goto	l2634
  1829                           
  1830                           ;main.c: 80: {
  1831                           ;main.c: 81: if ((KeyFlag[0] & 0x1))
  1832  017A  1C7A               	btfss	_KeyFlag,0	;volatile
  1833  017B  0008               	return
  1834                           
  1835                           ;main.c: 82: {
  1836                           ;main.c: 83: keyCount++;
  1837  017C  0AAA               	incf	_keyCount,f
  1838  017D  1903               	skipnz
  1839  017E  0AAB               	incf	_keyCount+1,f
  1840                           
  1841                           ;main.c: 85: if(keyCount >= 250 && keyCount % 10 == 0 && workStep > 0)
  1842  017F  3000               	movlw	0
  1843  0180  022B               	subwf	_keyCount+1,w
  1844  0181  30FA               	movlw	250
  1845  0182  1903               	skipnz
  1846  0183  022A               	subwf	_keyCount,w
  1847  0184  1C03               	skipc
  1848  0185  29AC               	goto	l2632
  1849  0186  300A               	movlw	10
  1850  0187  00F2               	movwf	___lwmod@divisor
  1851  0188  01F3               	clrf	___lwmod@divisor+1
  1852  0189  082B               	movf	_keyCount+1,w
  1853  018A  00F5               	movwf	___lwmod@dividend+1
  1854  018B  082A               	movf	_keyCount,w
  1855  018C  00F4               	movwf	___lwmod@dividend
  1856  018D  2377               	fcall	___lwmod
  1857  018E  0872               	movf	?___lwmod,w
  1858  018F  0473               	iorwf	?___lwmod+1,w
  1859  0190  1D03               	btfss	3,2
  1860  0191  29AC               	goto	l2632
  1861  0192  0879               	movf	_workStep,w
  1862  0193  1903               	btfsc	3,2
  1863  0194  29AC               	goto	l2632
  1864                           
  1865                           ;main.c: 86: {
  1866                           ;main.c: 87: if(modeStep == 0 && ledDuty < 90)
  1867  0195  083E               	movf	_modeStep,w
  1868  0196  1D03               	btfss	3,2
  1869  0197  299D               	goto	l2618
  1870  0198  305A               	movlw	90
  1871  0199  027B               	subwf	_ledDuty,w
  1872  019A  1803               	skipnc
  1873  019B  299D               	goto	l2618
  1874                           
  1875                           ;main.c: 88: {
  1876                           ;main.c: 89: ledDuty++;
  1877  019C  0AFB               	incf	_ledDuty,f
  1878  019D                     l2618:	
  1879                           
  1880                           ;main.c: 90: }
  1881                           ;main.c: 91: if(modeStep == 1 && ledDuty > 10)
  1882  019D  0B3E               	decfsz	_modeStep,w
  1883  019E  29A4               	goto	l2624
  1884  019F  300B               	movlw	11
  1885  01A0  027B               	subwf	_ledDuty,w
  1886  01A1  1C03               	skipc
  1887  01A2  29A4               	goto	l2624
  1888                           
  1889                           ;main.c: 92: {
  1890                           ;main.c: 93: ledDuty--;
  1891  01A3  03FB               	decf	_ledDuty,f
  1892  01A4                     l2624:	
  1893                           
  1894                           ;main.c: 94: }
  1895                           ;main.c: 95: PWMD23H = 0;
  1896  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1897  01A5  019E               	clrf	30	;volatile
  1898                           
  1899                           ;main.c: 96: PWMD3L = ledDuty;
  1900  01A6  087B               	movf	_ledDuty,w
  1901  01A7  009C               	movwf	28	;volatile
  1902                           
  1903                           ;main.c: 97: PWMD01H = 0;
  1904  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1905  01A9  019E               	clrf	30	;volatile
  1906                           
  1907                           ;main.c: 98: PWMD1L = ledDuty;
  1908  01AA  087B               	movf	_ledDuty,w
  1909  01AB  009A               	movwf	26	;volatile
  1910  01AC                     l2632:	
  1911                           
  1912                           ;main.c: 99: }
  1913                           ;main.c: 100: B_OnOff = !B_OnOff;
  1914  01AC  3020               	movlw	(0+1) shl (_B_OnOff& (0+7))
  1915  01AD  06F8               	xorwf	_B_OnOff/(0+8),f
  1916  01AE  0008               	return
  1917  01AF                     l2634:	
  1918                           
  1919                           ;main.c: 106: if(keyCount > 0 && keyCount < 250)
  1920  01AF  082A               	movf	_keyCount,w
  1921  01B0  042B               	iorwf	_keyCount+1,w
  1922  01B1  3000               	movlw	0
  1923  01B2  1903               	btfsc	3,2
  1924  01B3  29CB               	goto	L2
  1925  01B4  022B               	subwf	_keyCount+1,w
  1926  01B5  30FA               	movlw	250
  1927  01B6  1903               	skipnz
  1928  01B7  022A               	subwf	_keyCount,w
  1929  01B8  1803               	skipnc
  1930  01B9  29CA               	goto	l458
  1931                           
  1932                           ;main.c: 107: {
  1933                           ;main.c: 108: if(doubleKeyTime > 0)
  1934  01BA  083C               	movf	_doubleKeyTime,w
  1935  01BB  1903               	btfsc	3,2
  1936  01BC  29C8               	goto	l2648
  1937                           
  1938                           ;main.c: 109: {
  1939                           ;main.c: 110: if(count300s > 0)
  1940  01BD  0826               	movf	_count300s,w
  1941  01BE  0427               	iorwf	_count300s+1,w
  1942  01BF  1903               	btfsc	3,2
  1943  01C0  29C3               	goto	l2644
  1944                           
  1945                           ;main.c: 111: {
  1946                           ;main.c: 112: count300s = 0;
  1947  01C1  01A6               	clrf	_count300s
  1948  01C2  29C5               	goto	L1
  1949  01C3                     l2644:	
  1950                           ;main.c: 113: }
  1951                           
  1952                           
  1953                           ;main.c: 114: else
  1954                           ;main.c: 115: {
  1955                           ;main.c: 116: count300s = 200;
  1956  01C3  30C8               	movlw	200
  1957  01C4  00A6               	movwf	_count300s
  1958  01C5                     L1:	
  1959  01C5  01A7               	clrf	_count300s+1
  1960                           
  1961                           ;main.c: 117: }
  1962                           ;main.c: 118: doubleKeyTime = 0;
  1963  01C6  01BC               	clrf	_doubleKeyTime
  1964                           
  1965                           ;main.c: 119: }
  1966  01C7  29CA               	goto	l458
  1967  01C8                     l2648:	
  1968                           
  1969                           ;main.c: 120: else
  1970                           ;main.c: 121: {
  1971                           ;main.c: 122: doubleKeyTime = 250;
  1972  01C8  30FA               	movlw	250
  1973  01C9  00BC               	movwf	_doubleKeyTime
  1974  01CA                     l458:	
  1975                           
  1976                           ;main.c: 123: }
  1977                           ;main.c: 126: }
  1978                           ;main.c: 127: if(keyCount > 250)
  1979  01CA  3000               	movlw	0
  1980  01CB                     L2:	
  1981  01CB  022B               	subwf	_keyCount+1,w
  1982  01CC  30FB               	movlw	251
  1983  01CD  1903               	skipnz
  1984  01CE  022A               	subwf	_keyCount,w
  1985  01CF  1C03               	skipc
  1986  01D0  29DB               	goto	l2656
  1987                           
  1988                           ;main.c: 128: {
  1989                           ;main.c: 129: if(workStep > 0)
  1990  01D1  0879               	movf	_workStep,w
  1991  01D2  1903               	btfsc	3,2
  1992  01D3  29DB               	goto	l2656
  1993                           
  1994                           ;main.c: 130: {
  1995                           ;main.c: 131: if(modeStep > 0)
  1996  01D4  083E               	movf	_modeStep,w
  1997  01D5  1903               	btfsc	3,2
  1998  01D6  29D9               	goto	l465
  1999                           
  2000                           ;main.c: 132: {
  2001                           ;main.c: 133: modeStep = 0;
  2002  01D7  01BE               	clrf	_modeStep
  2003                           
  2004                           ;main.c: 134: }
  2005  01D8  29DB               	goto	l2656
  2006  01D9                     l465:	
  2007                           
  2008                           ;main.c: 135: else
  2009                           ;main.c: 136: {
  2010                           ;main.c: 137: modeStep = 1;
  2011  01D9  01BE               	clrf	_modeStep
  2012  01DA  0ABE               	incf	_modeStep,f
  2013  01DB                     l2656:	
  2014                           
  2015                           ;main.c: 138: }
  2016                           ;main.c: 139: }
  2017                           ;main.c: 140: }
  2018                           ;main.c: 141: keyCount = 0;
  2019  01DB  01AA               	clrf	_keyCount
  2020  01DC  01AB               	clrf	_keyCount+1
  2021  01DD  0008               	return
  2022  01DE                     __end_of_KeyServer:	
  2023                           
  2024                           	psect	text14
  2025  0377                     __ptext14:	
  2026 ;; *************** function ___lwmod *****************
  2027 ;; Defined at:
  2028 ;;		line 6 in file "C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\sources\common\lwmod.c"
  2029 ;; Parameters:    Size  Location     Type
  2030 ;;  divisor         2    2[COMMON] unsigned int 
  2031 ;;  dividend        2    4[COMMON] unsigned int 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  counter         1    6[COMMON] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2    2[COMMON] unsigned int 
  2036 ;; Registers used:
  2037 ;;		wreg, status,2, status,0
  2038 ;; Tracked objects:
  2039 ;;		On entry : 300/0
  2040 ;;		On exit  : 300/0
  2041 ;;		Unchanged: 300/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1
  2043 ;;      Params:         4       0       0
  2044 ;;      Locals:         1       0       0
  2045 ;;      Temps:          0       0       0
  2046 ;;      Totals:         5       0       0
  2047 ;;Total ram usage:        5 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    1
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_KeyServer
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           
  2057                           
  2058                           ;psect for function ___lwmod
  2059  0377                     ___lwmod:	
  2060                           
  2061                           ;incstack = 0
  2062                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2063  0377  0872               	movf	___lwmod@divisor,w
  2064  0378  0473               	iorwf	___lwmod@divisor+1,w
  2065  0379  1903               	btfsc	3,2
  2066  037A  2B96               	goto	l2584
  2067  037B  01F6               	clrf	___lwmod@counter
  2068  037C                     L3:	
  2069  037C  0AF6               	incf	___lwmod@counter,f
  2070  037D  1BF3               	btfsc	___lwmod@divisor+1,7
  2071  037E  2B83               	goto	l2576
  2072  037F  1003               	clrc
  2073  0380  0DF2               	rlf	___lwmod@divisor,f
  2074  0381  0DF3               	rlf	___lwmod@divisor+1,f
  2075  0382  2B7C               	goto	L3
  2076  0383                     l2576:	
  2077  0383  0873               	movf	___lwmod@divisor+1,w
  2078  0384  0275               	subwf	___lwmod@dividend+1,w
  2079  0385  1D03               	skipz
  2080  0386  2B89               	goto	u1395
  2081  0387  0872               	movf	___lwmod@divisor,w
  2082  0388  0274               	subwf	___lwmod@dividend,w
  2083  0389                     u1395:	
  2084  0389  1C03               	skipc
  2085  038A  2B92               	goto	L4
  2086  038B  0872               	movf	___lwmod@divisor,w
  2087  038C  02F4               	subwf	___lwmod@dividend,f
  2088  038D  0873               	movf	___lwmod@divisor+1,w
  2089  038E  1C03               	skipc
  2090  038F  03F5               	decf	___lwmod@dividend+1,f
  2091  0390  02F5               	subwf	___lwmod@dividend+1,f
  2092  0391  1003               	clrc
  2093  0392                     L4:	
  2094  0392  0CF3               	rrf	___lwmod@divisor+1,f
  2095  0393  0CF2               	rrf	___lwmod@divisor,f
  2096  0394  0BF6               	decfsz	___lwmod@counter,f
  2097  0395  2B83               	goto	l2576
  2098  0396                     l2584:	
  2099  0396  0875               	movf	___lwmod@dividend+1,w
  2100  0397  00F3               	movwf	?___lwmod+1
  2101  0398  0874               	movf	___lwmod@dividend,w
  2102  0399  00F2               	movwf	?___lwmod
  2103  039A  0008               	return
  2104  039B                     __end_of___lwmod:	
  2105                           
  2106                           	psect	text15
  2107  042D                     __ptext15:	
  2108 ;; *************** function _Init_System *****************
  2109 ;; Defined at:
  2110 ;;		line 33 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2
  2119 ;; Tracked objects:
  2120 ;;		On entry : B00/0
  2121 ;;		On exit  : 300/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1
  2124 ;;      Params:         0       0       0
  2125 ;;      Locals:         0       0       0
  2126 ;;      Temps:          0       0       0
  2127 ;;      Totals:         0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    1
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _Init_System
  2140  042D                     _Init_System:	
  2141                           
  2142                           ;incstack = 0
  2143                           ; Regs used in _Init_System: [wreg+status,2]
  2144  042D  0000               	nop	;# 
  2145  042E  0064               	clrwdt	;# 
  2146                           
  2147                           ;main.c: 37: INTCON = 0;
  2148  042F  018B               	clrf	11	;volatile
  2149                           
  2150                           ;main.c: 38: OSCCON = 0X72;
  2151  0430  3072               	movlw	114
  2152  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0433  0094               	movwf	20	;volatile
  2155                           
  2156                           ;main.c: 39: OPTION_REG = 0;
  2157  0434  0181               	clrf	1	;volatile
  2158                           
  2159                           ;main.c: 44: TRISB = 0x00;
  2160  0435  0185               	clrf	5	;volatile
  2161                           
  2162                           ;main.c: 45: PORTB = 0;
  2163  0436  0186               	clrf	6	;volatile
  2164                           
  2165                           ;main.c: 47: PIE1 = 2;
  2166  0437  3002               	movlw	2
  2167  0438  008E               	movwf	14	;volatile
  2168                           
  2169                           ;main.c: 48: PR2 = 250;
  2170  0439  30FA               	movlw	250
  2171  043A  0091               	movwf	17	;volatile
  2172                           
  2173                           ;main.c: 49: T2CON = 4;
  2174  043B  3004               	movlw	4
  2175  043C  0093               	movwf	19	;volatile
  2176                           
  2177                           ;main.c: 51: INTCON = 0XC0;
  2178  043D  30C0               	movlw	192
  2179  043E  008B               	movwf	11	;volatile
  2180  043F  0008               	return
  2181  0440                     __end_of_Init_System:	
  2182                           
  2183                           	psect	text16
  2184  0305                     __ptext16:	
  2185 ;; *************** function _CheckTouchKey *****************
  2186 ;; Defined at:
  2187 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1
  2201 ;;      Params:         0       0       0
  2202 ;;      Locals:         0       0       0
  2203 ;;      Temps:          0       0       0
  2204 ;;      Totals:         0       0       0
  2205 ;;Total ram usage:        0 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; Hardware stack levels required when called:    5
  2208 ;; This function calls:
  2209 ;;		_CheckKeyOldValue
  2210 ;;		_CheckOnceResult
  2211 ;;		_CheckValidTime
  2212 ;;		_ClearResSum
  2213 ;;		_GetTouchKeyValue
  2214 ;;		_KeyStopClear
  2215 ;;		_TurnKeyFlags
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function _CheckTouchKey
  2223  0305                     _CheckTouchKey:	
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _CheckTouchKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2227  0305  1A78               	btfsc	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  2228  0306  2B12               	goto	l1075
  2229  0307  21DE               	fcall	_GetTouchKeyValue
  2230  0308  3008               	movlw	8
  2231  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2232  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2233  030B  0ABA               	incf	_KeyCounter,f
  2234  030C  023A               	subwf	_KeyCounter,w
  2235  030D  1C03               	skipc
  2236  030E  2B2B               	goto	l3118
  2237  030F  01BA               	clrf	_KeyCounter
  2238  0310  1678               	bsf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  2239  0311  2B2B               	goto	l3118
  2240  0312                     l1075:	
  2241  0312  19F8               	btfsc	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  2242  0313  2B27               	goto	l3112
  2243  0314  201A               	fcall	_CheckOnceResult
  2244  0315  232C               	fcall	_TurnKeyFlags
  2245  0316  15F8               	bsf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  2246  0317  18F8               	btfsc	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  2247  0318  2B1F               	goto	l3102
  2248  0319  3002               	movlw	2
  2249  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2250  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2251  031C  023A               	subwf	_KeyCounter,w
  2252  031D  1C03               	skipc
  2253  031E  2B23               	goto	l3110
  2254  031F                     l3102:	
  2255  031F  2488               	fcall	_KeyStopClear
  2256  0320  10F8               	bcf	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  2257  0321  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  2258  0322  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  2259  0323                     l3110:	
  2260  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0325  01BA               	clrf	_KeyCounter
  2263  0326  2B2B               	goto	l3118
  2264  0327                     l3112:	
  2265  0327  22AE               	fcall	_CheckKeyOldValue
  2266  0328  246D               	fcall	_ClearResSum
  2267  0329  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  2268  032A  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  2269  032B                     l3118:	
  2270  032B  2C03               	ljmp	l2558	;# 
  2271  032C                     __end_of_CheckTouchKey:	
  2272                           
  2273                           	psect	text17
  2274  032C                     __ptext17:	
  2275 ;; *************** function _TurnKeyFlags *****************
  2276 ;; Defined at:
  2277 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1
  2291 ;;      Params:         0       0       0
  2292 ;;      Locals:         0       0       0
  2293 ;;      Temps:          0       0       0
  2294 ;;      Totals:         0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    4
  2298 ;; This function calls:
  2299 ;;		_KeyClearIn
  2300 ;; This function is called by:
  2301 ;;		_CheckTouchKey
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _TurnKeyFlags
  2307  032C                     _TurnKeyFlags:	
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _TurnKeyFlags: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2311  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2312  032D  1303               	bcf	3,6	;RP1=0, select bank0
  2313  032E  0822               	movf	_KeyData,w	;volatile
  2314  032F  1903               	btfsc	3,2
  2315  0330  2B47               	goto	l3060
  2316  0331  01B6               	clrf	TurnKeyFlags@F416
  2317  0332  0822               	movf	_KeyData,w	;volatile
  2318  0333  0624               	xorwf	_KeyOldData,w	;volatile
  2319  0334  1D03               	skipz
  2320  0335  2B42               	goto	l1056
  2321  0336  3002               	movlw	2
  2322  0337  0AB7               	incf	TurnKeyFlags@F415,f
  2323  0338  0237               	subwf	TurnKeyFlags@F415,w
  2324  0339  1C03               	skipc
  2325  033A  0008               	return
  2326  033B  01B7               	clrf	TurnKeyFlags@F415
  2327  033C  0822               	movf	_KeyData,w	;volatile
  2328  033D  00FA               	movwf	_KeyFlag	;volatile
  2329  033E  1978               	btfsc	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  2330  033F  0008               	return
  2331  0340  1578               	bsf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  2332  0341  2C7B               	ljmp	l2828
  2333  0342                     l1056:	
  2334  0342  1178               	bcf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  2335  0343  0822               	movf	_KeyData,w	;volatile
  2336  0344  00A4               	movwf	_KeyOldData	;volatile
  2337  0345  01B7               	clrf	TurnKeyFlags@F415
  2338  0346  0008               	return
  2339  0347                     l3060:	
  2340  0347  01B7               	clrf	TurnKeyFlags@F415
  2341  0348  01A4               	clrf	_KeyOldData	;volatile
  2342  0349  3002               	movlw	2
  2343  034A  0AB6               	incf	TurnKeyFlags@F416,f
  2344  034B  0236               	subwf	TurnKeyFlags@F416,w
  2345  034C  1C03               	skipc
  2346  034D  0008               	return
  2347  034E  01B6               	clrf	TurnKeyFlags@F416
  2348  034F  01FA               	clrf	_KeyFlag	;volatile
  2349  0350  1178               	bcf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  2350  0351  0008               	return
  2351  0352                     __end_of_TurnKeyFlags:	
  2352                           
  2353                           	psect	text18
  2354  047B                     __ptext18:	
  2355 ;; *************** function _KeyClearIn *****************
  2356 ;; Defined at:
  2357 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  383             1    4[COMMON] unsigned char 
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 300/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1
  2371 ;;      Params:         0       0       0
  2372 ;;      Locals:         1       0       0
  2373 ;;      Temps:          0       0       0
  2374 ;;      Totals:         1       0       0
  2375 ;;Total ram usage:        1 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    3
  2378 ;; This function calls:
  2379 ;;		_KeyClearOne
  2380 ;;		_KeyIsIn
  2381 ;; This function is called by:
  2382 ;;		_TurnKeyFlags
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           
  2387                           ;psect for function _KeyClearIn
  2388  047B                     _KeyClearIn:	
  2389  047B                     l2828:	
  2390                           ;incstack = 0
  2391                           ; Regs used in _KeyClearIn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2392                           
  2393  047B  01F4               	clrf	KeyClearIn@383
  2394  047C                     l2834:	
  2395  047C  0874               	movf	KeyClearIn@383,w
  2396  047D  2495               	fcall	_KeyIsIn
  2397  047E  3A00               	xorlw	0
  2398  047F  1D03               	skipz
  2399  0480  2C83               	goto	l2838
  2400  0481  0874               	movf	KeyClearIn@383,w
  2401  0482  23D2               	fcall	_KeyClearOne
  2402  0483                     l2838:	
  2403  0483  0AF4               	incf	KeyClearIn@383,f
  2404  0484  0874               	movf	KeyClearIn@383,w
  2405  0485  1D03               	btfss	3,2
  2406  0486  0008               	return
  2407  0487  2C7C               	goto	l2834
  2408  0488                     __end_of_KeyClearIn:	
  2409                           
  2410                           	psect	text19
  2411  0488                     __ptext19:	
  2412 ;; *************** function _KeyStopClear *****************
  2413 ;; Defined at:
  2414 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  385             1    3[COMMON] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1
  2428 ;;      Params:         0       0       0
  2429 ;;      Locals:         1       0       0
  2430 ;;      Temps:          0       0       0
  2431 ;;      Totals:         1       0       0
  2432 ;;Total ram usage:        1 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    2
  2435 ;; This function calls:
  2436 ;;		_KeyClearOne
  2437 ;; This function is called by:
  2438 ;;		_CheckTouchKey
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           
  2443                           ;psect for function _KeyStopClear
  2444  0488                     _KeyStopClear:	
  2445                           
  2446                           ;incstack = 0
  2447                           ; Regs used in _KeyStopClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2448  0488  01FA               	clrf	_KeyFlag	;volatile
  2449  0489  01F3               	clrf	KeyStopClear@385
  2450  048A                     l2428:	
  2451  048A  1003               	clrc
  2452  048B  0D73               	rlf	KeyStopClear@385,w
  2453  048C  3E34               	addlw	(low (_KeyResSum| 0))& (0+255)
  2454  048D  2475               	fcall	PL14	;call to abstracted procedure
  2455  048E  0873               	movf	KeyStopClear@385,w
  2456  048F  23D2               	fcall	_KeyClearOne
  2457  0490  0AF3               	incf	KeyStopClear@385,f
  2458  0491  0873               	movf	KeyStopClear@385,w
  2459  0492  1D03               	btfss	3,2
  2460  0493  0008               	return
  2461  0494  2C8A               	goto	l2428
  2462  0495                     __end_of_KeyStopClear:	
  2463                           
  2464                           	psect	text20
  2465  01DE                     __ptext20:	
  2466 ;; *************** function _GetTouchKeyValue *****************
  2467 ;; Defined at:
  2468 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  395             2    3[COMMON] unsigned int 
  2473 ;;  393             1    6[COMMON] unsigned char 
  2474 ;;  394             1    5[COMMON] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/200
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1
  2484 ;;      Params:         0       0       0
  2485 ;;      Locals:         4       0       0
  2486 ;;      Temps:          0       0       0
  2487 ;;      Totals:         4       0       0
  2488 ;;Total ram usage:        4 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    2
  2491 ;; This function calls:
  2492 ;;		_ClearResSum
  2493 ;; This function is called by:
  2494 ;;		_CheckTouchKey
  2495 ;;		_SystemEnterSleep
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           
  2500                           ;psect for function _GetTouchKeyValue
  2501  01DE                     _GetTouchKeyValue:	
  2502                           
  2503                           ;incstack = 0
  2504                           ; Regs used in _GetTouchKeyValue: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2505  01DE  01F6               	clrf	GetTouchKeyValue@393
  2506  01DF  01F5               	clrf	GetTouchKeyValue@394
  2507  01E0  0AF5               	incf	GetTouchKeyValue@394,f
  2508  01E1                     l2206:	
  2509  01E1  1C78               	btfss	_b_ksleep/(0+8),_b_ksleep& (0+7)	;volatile
  2510  01E2  29E5               	goto	l2210
  2511  01E3  1C75               	btfss	GetTouchKeyValue@394,0
  2512  01E4  2A24               	goto	l2242
  2513  01E5                     l2210:	
  2514  01E5  1283               	bcf	3,5	;RP0=0, select bank2
  2515  01E6  1703               	bsf	3,6	;RP1=1, select bank2
  2516  01E7  0191               	clrf	17	;volatile
  2517  01E8  0192               	clrf	18	;volatile
  2518  01E9  3079               	movlw	121
  2519  01EA  0093               	movwf	19	;volatile
  2520  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2521  01EC  1305               	bcf	5,6	;volatile
  2522  01ED  1306               	bcf	6,6	;volatile
  2523  01EE  29EF               	nop2	;2 cycle nop
  2524  01EF  29F0               	nop2	;2 cycle nop
  2525  01F0  29F1               	nop2	;2 cycle nop
  2526  01F1  29F2               	nop2	;2 cycle nop
  2527  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2528  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2529  01F4  1705               	bsf	5,6	;volatile
  2530  01F5  3002               	movlw	2
  2531  01F6  1703               	bsf	3,6	;RP1=1, select bank2
  2532  01F7  0091               	movwf	17	;volatile
  2533  01F8  0876               	movf	GetTouchKeyValue@393,w
  2534  01F9  3E0A               	addlw	low ((_Table_KeyChannel-__stringbase)| (0+32768))
  2535  01FA  0084               	movwf	4
  2536  01FB  2440               	fcall	stringdir
  2537  01FC  0092               	movwf	18	;volatile
  2538  01FD  29FE               	nop2	;2 cycle nop
  2539  01FE  29FF               	nop2	;2 cycle nop
  2540  01FF  1283               	bcf	3,5	;RP0=0, select bank2
  2541  0200  1703               	bsf	3,6	;RP1=1, select bank2
  2542  0201  1411               	bsf	17,0	;volatile
  2543  0202  3040               	movlw	64
  2544  0203  00F3               	movwf	GetTouchKeyValue@395
  2545  0204  301F               	movlw	31
  2546  0205  00F4               	movwf	GetTouchKeyValue@395+1
  2547  0206                     l1006:	
  2548  0206  1B91               	btfsc	17,7	;volatile
  2549  0207  2A14               	goto	l2240
  2550  0208  3001               	movlw	1
  2551  0209  02F3               	subwf	GetTouchKeyValue@395,f
  2552  020A  1C03               	skipc
  2553  020B  03F4               	decf	GetTouchKeyValue@395+1,f
  2554  020C  0873               	movf	GetTouchKeyValue@395,w
  2555  020D  0474               	iorwf	GetTouchKeyValue@395+1,w
  2556  020E  1D03               	btfss	3,2
  2557  020F  2A06               	goto	l1006
  2558  0210  30FF               	movlw	255
  2559  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2560  0212  00BA               	movwf	_KeyCounter
  2561  0213  2C6D               	ljmp	l2170
  2562  0214                     l2240:	
  2563  0214  1003               	clrc
  2564  0215  0D76               	rlf	GetTouchKeyValue@393,w
  2565  0216  3E34               	addlw	(low (_KeyResSum| 0))& (0+255)
  2566  0217  0084               	movwf	4
  2567  0218  0816               	movf	22,w	;volatile
  2568  0219  1383               	bcf	3,7	;select IRP bank0
  2569  021A  0780               	addwf	0,f
  2570  021B  0F84               	incfsz	4,f
  2571  021C  0800               	movf	0,w
  2572  021D  1803               	skipnc
  2573  021E  0A00               	incf	0,w
  2574  021F  00FF               	movwf	127
  2575  0220  0817               	movf	23,w	;volatile
  2576  0221  077F               	addwf	127,w
  2577  0222  0080               	movwf	0
  2578  0223  0384               	decf	4,f
  2579  0224                     l2242:	
  2580  0224  1003               	clrc
  2581  0225  0DF5               	rlf	GetTouchKeyValue@394,f
  2582  0226  0AF6               	incf	GetTouchKeyValue@393,f
  2583  0227  1903               	btfsc	3,2
  2584  0228  29E1               	goto	l2206
  2585  0229  1078               	bcf	_b_ksleep/(0+8),_b_ksleep& (0+7)	;# 
  2586  022A  0008               	return
  2587  022B                     __end_of_GetTouchKeyValue:	
  2588                           
  2589                           	psect	text21
  2590  046D                     __ptext21:	
  2591 ;; *************** function _ClearResSum *****************
  2592 ;; Defined at:
  2593 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  388             1    2[COMMON] unsigned char 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/200
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1
  2607 ;;      Params:         0       0       0
  2608 ;;      Locals:         1       0       0
  2609 ;;      Temps:          0       0       0
  2610 ;;      Totals:         1       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    1
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_GetTouchKeyValue
  2618 ;;		_CheckTouchKey
  2619 ;;		_SystemEnterSleep
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _ClearResSum
  2625  046D                     _ClearResSum:	
  2626  046D                     l2170:	
  2627                           ;incstack = 0
  2628                           ; Regs used in _ClearResSum: [wreg-fsr0h+status,2+status,0]
  2629                           
  2630  046D  01F2               	clrf	ClearResSum@388
  2631  046E                     l2172:	
  2632  046E  1003               	clrc
  2633  046F  0D72               	rlf	ClearResSum@388,w
  2634  0470  3E34               	addlw	(low (_KeyResSum| 0))& (0+255)
  2635  0471  2475               	fcall	PL14	;call to abstracted procedure
  2636  0472  0FF2               	incfsz	ClearResSum@388,f
  2637  0473  0008               	return
  2638  0474  2C6E               	goto	l2172
  2639  0475                     __end_of_ClearResSum:	
  2640  0475                     PL14:	
  2641  0475  0084               	movwf	4
  2642  0476  1383               	bcf	3,7	;select IRP bank0
  2643  0477  0180               	clrf	0
  2644  0478  0A84               	incf	4,f
  2645  0479  0180               	clrf	0
  2646  047A  0008               	return
  2647  047B                     __end_ofPL14:	
  2648                           
  2649                           	psect	text22
  2650  0403                     __ptext22:	
  2651 ;; *************** function _CheckValidTime *****************
  2652 ;; Defined at:
  2653 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1
  2667 ;;      Params:         0       0       0
  2668 ;;      Locals:         0       0       0
  2669 ;;      Temps:          0       0       0
  2670 ;;      Totals:         0       0       0
  2671 ;;Total ram usage:        0 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    1
  2674 ;; This function calls:
  2675 ;;		Nothing
  2676 ;; This function is called by:
  2677 ;;		_CheckTouchKey
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           
  2682                           ;psect for function _CheckValidTime
  2683  0403                     _CheckValidTime:	
  2684  0403                     l2558:	
  2685                           ;incstack = 0
  2686                           ; Regs used in _CheckValidTime: [wreg+status,2+status,0]
  2687                           
  2688  0403  087A               	movf	_KeyFlag,w	;volatile
  2689  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2691  0406  1903               	btfsc	3,2
  2692  0407  2C15               	goto	L5
  2693  0408  0AA0               	incf	CheckValidTime@F419,f
  2694  0409  1903               	skipnz
  2695  040A  0AA1               	incf	CheckValidTime@F419+1,f
  2696  040B  303A               	movlw	58
  2697  040C  0221               	subwf	CheckValidTime@F419+1,w
  2698  040D  3098               	movlw	152
  2699  040E  1903               	skipnz
  2700  040F  0220               	subwf	CheckValidTime@F419,w
  2701  0410  1C03               	skipc
  2702  0411  0008               	return
  2703  0412  14F8               	bsf	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  2704  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0415                     L5:	
  2707  0415  01A0               	clrf	CheckValidTime@F419
  2708  0416  01A1               	clrf	CheckValidTime@F419+1
  2709  0417  0008               	return
  2710  0418                     __end_of_CheckValidTime:	
  2711                           
  2712                           	psect	text23
  2713  001A                     __ptext23:	
  2714 ;; *************** function _CheckOnceResult *****************
  2715 ;; Defined at:
  2716 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  404             2    6[BANK0 ] unsigned int 
  2721 ;;  405             2    3[BANK0 ] unsigned int 
  2722 ;;  406             2    0[BANK0 ] unsigned int 
  2723 ;;  401             1    8[BANK0 ] unsigned char 
  2724 ;;  402             1    5[BANK0 ] unsigned char 
  2725 ;;  403             1    2[BANK0 ] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1
  2735 ;;      Params:         0       0       0
  2736 ;;      Locals:         0       9       0
  2737 ;;      Temps:          4       0       0
  2738 ;;      Totals:         4       9       0
  2739 ;;Total ram usage:       13 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    3
  2742 ;; This function calls:
  2743 ;;		_KeyClearOne
  2744 ;;		_KeyHave
  2745 ;;		_KeyIsIn
  2746 ;; This function is called by:
  2747 ;;		_CheckTouchKey
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _CheckOnceResult
  2753  001A                     _CheckOnceResult:	
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _CheckOnceResult: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2757  001A  1283               	bcf	3,5	;RP0=0, select bank0
  2758  001B  1303               	bcf	3,6	;RP1=0, select bank0
  2759  001C  01C9               	clrf	CheckOnceResult@401
  2760  001D  01A2               	clrf	_KeyData	;volatile
  2761  001E  01B9               	clrf	_KeyMaxSub
  2762  001F                     l2952:	
  2763  001F  0849               	movf	CheckOnceResult@401,w
  2764  0020  3907               	andlw	7
  2765  0021  3E01               	addlw	low ((_Table_KeyFalg-__stringbase)| (0+32768))
  2766  0022  0084               	movwf	4
  2767  0023  2440               	fcall	stringdir
  2768  0024  00C3               	movwf	CheckOnceResult@403
  2769  0025  1003               	clrc
  2770  0026  0D49               	rlf	CheckOnceResult@401,w
  2771  0027  3E34               	addlw	(low (_KeyResSum| 0))& (0+255)
  2772  0028  0084               	movwf	4
  2773  0029  3003               	movlw	3
  2774  002A                     u2005:	
  2775  002A  0A84               	incf	4,f
  2776  002B  1003               	clrc
  2777  002C  1383               	bcf	3,7	;select IRP bank0
  2778  002D  0C80               	rrf	0,f
  2779  002E  0384               	decf	4,f
  2780  002F  0C80               	rrf	0,f
  2781  0030  3EFF               	addlw	-1
  2782  0031  1D03               	skipz
  2783  0032  282A               	goto	u2005
  2784  0033  1003               	clrc
  2785  0034  0D49               	rlf	CheckOnceResult@401,w
  2786  0035  3E34               	addlw	(low (_KeyResSum| 0))& (0+255)
  2787  0036  0084               	movwf	4
  2788  0037  0800               	movf	0,w
  2789  0038  00C7               	movwf	CheckOnceResult@404
  2790  0039  0A84               	incf	4,f
  2791  003A  0800               	movf	0,w
  2792  003B  00C8               	movwf	CheckOnceResult@404+1
  2793  003C  0849               	movf	CheckOnceResult@401,w
  2794  003D  3E09               	addlw	low ((_Table_KeyDown-__stringbase)| (0+32768))
  2795  003E  0084               	movwf	4
  2796  003F  2440               	fcall	stringdir
  2797  0040  00C6               	movwf	CheckOnceResult@402
  2798  0041  00C4               	movwf	CheckOnceResult@405
  2799  0042  01C5               	clrf	CheckOnceResult@405+1
  2800  0043  0847               	movf	CheckOnceResult@404,w
  2801  0044  07C4               	addwf	CheckOnceResult@405,f
  2802  0045  1803               	skipnc
  2803  0046  0AC5               	incf	CheckOnceResult@405+1,f
  2804  0047  0848               	movf	CheckOnceResult@404+1,w
  2805  0048  07C5               	addwf	CheckOnceResult@405+1,f
  2806  0049  0849               	movf	CheckOnceResult@401,w
  2807  004A  2495               	fcall	_KeyIsIn
  2808  004B  3A00               	xorlw	0
  2809  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2810  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2811  004E  1003               	clrc
  2812  004F  1D03               	skipz
  2813  0050  28A8               	goto	L8
  2814  0051  0D49               	rlf	CheckOnceResult@401,w
  2815  0052  3E2E               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2816  0053  0084               	movwf	4
  2817  0054  1383               	bcf	3,7	;select IRP bank0
  2818  0055  0800               	movf	0,w
  2819  0056  00C1               	movwf	CheckOnceResult@406
  2820  0057  0A84               	incf	4,f
  2821  0058  0800               	movf	0,w
  2822  0059  00C2               	movwf	CheckOnceResult@406+1
  2823  005A  1003               	clrc
  2824  005B  0D49               	rlf	CheckOnceResult@401,w
  2825  005C  3E2C               	addlw	(low (_KeyReference| 0))& (0+255)
  2826  005D  20FB               	fcall	PL6	;call to abstracted procedure
  2827  005E  0245               	subwf	CheckOnceResult@405+1,w
  2828  005F  1D03               	skipz
  2829  0060  2863               	goto	u2025
  2830  0061  0874               	movf	??_CheckOnceResult,w
  2831  0062  0244               	subwf	CheckOnceResult@405,w
  2832  0063                     u2025:	
  2833  0063  1803               	skipnc
  2834  0064  2871               	goto	l2970
  2835  0065  1003               	clrc
  2836  0066  0D49               	rlf	CheckOnceResult@401,w
  2837  0067  3E2C               	addlw	(low (_KeyReference| 0))& (0+255)
  2838  0068  20FB               	fcall	PL6	;call to abstracted procedure
  2839  0069  0847               	movf	CheckOnceResult@404,w
  2840  006A  0274               	subwf	??_CheckOnceResult,w
  2841  006B  00C7               	movwf	CheckOnceResult@404
  2842  006C  0848               	movf	CheckOnceResult@404+1,w
  2843  006D  1C03               	skipc
  2844  006E  0A48               	incf	CheckOnceResult@404+1,w
  2845  006F  0275               	subwf	??_CheckOnceResult+1,w
  2846  0070  2894               	goto	L6
  2847  0071                     l2970:	
  2848  0071  0842               	movf	CheckOnceResult@406+1,w
  2849  0072  0245               	subwf	CheckOnceResult@405+1,w
  2850  0073  1D03               	skipz
  2851  0074  2877               	goto	u2035
  2852  0075  0841               	movf	CheckOnceResult@406,w
  2853  0076  0244               	subwf	CheckOnceResult@405,w
  2854  0077                     u2035:	
  2855  0077  1803               	skipnc
  2856  0078  28E4               	goto	l3016
  2857  0079  1003               	clrc
  2858  007A  0D49               	rlf	CheckOnceResult@401,w
  2859  007B  3E30               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2860  007C  20FB               	fcall	PL6	;call to abstracted procedure
  2861  007D  0245               	subwf	CheckOnceResult@405+1,w
  2862  007E  1D03               	skipz
  2863  007F  2882               	goto	u2045
  2864  0080  0874               	movf	??_CheckOnceResult,w
  2865  0081  0244               	subwf	CheckOnceResult@405,w
  2866  0082                     u2045:	
  2867  0082  1803               	skipnc
  2868  0083  28E4               	goto	l3016
  2869  0084  1003               	clrc
  2870  0085  0D49               	rlf	CheckOnceResult@401,w
  2871  0086  3E2C               	addlw	(low (_KeyReference| 0))& (0+255)
  2872  0087  0084               	movwf	4
  2873  0088  0841               	movf	CheckOnceResult@406,w
  2874  0089  0080               	movwf	0
  2875  008A  0A84               	incf	4,f
  2876  008B  0842               	movf	CheckOnceResult@406+1,w
  2877  008C  0080               	movwf	0
  2878  008D  0847               	movf	CheckOnceResult@404,w
  2879  008E  0241               	subwf	CheckOnceResult@406,w
  2880  008F  00C7               	movwf	CheckOnceResult@404
  2881  0090  0848               	movf	CheckOnceResult@404+1,w
  2882  0091  1C03               	skipc
  2883  0092  0A48               	incf	CheckOnceResult@404+1,w
  2884  0093  0242               	subwf	CheckOnceResult@406+1,w
  2885  0094                     L6:	
  2886  0094  00C8               	movwf	CheckOnceResult@404+1
  2887  0095  0849               	movf	CheckOnceResult@401,w
  2888  0096  3E40               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2889  0097  0084               	movwf	4
  2890  0098  0180               	clrf	0
  2891  0099  0848               	movf	CheckOnceResult@404+1,w
  2892  009A  1903               	btfsc	3,2
  2893  009B  289E               	goto	l2984
  2894  009C  30FF               	movlw	255
  2895  009D  289F               	goto	L7
  2896  009E                     l2984:	
  2897  009E  0847               	movf	CheckOnceResult@404,w
  2898  009F                     L7:	
  2899  009F  00C6               	movwf	CheckOnceResult@402
  2900  00A0  0239               	subwf	_KeyMaxSub,w
  2901  00A1  1803               	skipnc
  2902  00A2  28A6               	goto	l2990
  2903  00A3  0846               	movf	CheckOnceResult@402,w
  2904  00A4  00B9               	movwf	_KeyMaxSub
  2905  00A5  28E2               	goto	l3014
  2906  00A6                     l2990:	
  2907  00A6  0ABA               	incf	_KeyCounter,f
  2908  00A7  28E4               	goto	l3016
  2909  00A8                     L8:	
  2910  00A8  0D49               	rlf	CheckOnceResult@401,w
  2911  00A9  3E2C               	addlw	(low (_KeyReference| 0))& (0+255)
  2912  00AA  0084               	movwf	4
  2913  00AB  1383               	bcf	3,7	;select IRP bank0
  2914  00AC  0800               	movf	0,w
  2915  00AD  00F4               	movwf	??_CheckOnceResult
  2916  00AE  0A84               	incf	4,f
  2917  00AF  0800               	movf	0,w
  2918  00B0  00F5               	movwf	??_CheckOnceResult+1
  2919  00B1  0874               	movf	??_CheckOnceResult,w
  2920  00B2  3E01               	addlw	1
  2921  00B3  00F6               	movwf	??_CheckOnceResult+2
  2922  00B4  0875               	movf	??_CheckOnceResult+1,w
  2923  00B5  1803               	skipnc
  2924  00B6  3E01               	addlw	1
  2925  00B7  00F7               	movwf	??_CheckOnceResult+3
  2926  00B8  0845               	movf	CheckOnceResult@405+1,w
  2927  00B9  0277               	subwf	??_CheckOnceResult+3,w
  2928  00BA  1D03               	skipz
  2929  00BB  28BE               	goto	u2075
  2930  00BC  0844               	movf	CheckOnceResult@405,w
  2931  00BD  0276               	subwf	??_CheckOnceResult+2,w
  2932  00BE                     u2075:	
  2933  00BE  1C03               	btfss	3,0
  2934  00BF  28E4               	goto	l3016
  2935  00C0  1003               	clrc
  2936  00C1  0D49               	rlf	CheckOnceResult@401,w
  2937  00C2  3E2E               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2938  00C3  0084               	movwf	4
  2939  00C4  0800               	movf	0,w
  2940  00C5  20E9               	fcall	PL4	;call to abstracted procedure
  2941  00C6  1C03               	skipc
  2942  00C7  28D0               	goto	l3004
  2943  00C8  1003               	clrc
  2944  00C9  0D49               	rlf	CheckOnceResult@401,w
  2945  00CA  3E30               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2946  00CB  0084               	movwf	4
  2947  00CC  0800               	movf	0,w
  2948  00CD  20E9               	fcall	PL4	;call to abstracted procedure
  2949  00CE  1803               	skipnc
  2950  00CF  28DB               	goto	l3008
  2951  00D0                     l3004:	
  2952  00D0  0849               	movf	CheckOnceResult@401,w
  2953  00D1  3E40               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2954  00D2  0084               	movwf	4
  2955  00D3  3009               	movlw	9
  2956  00D4  0A80               	incf	0,f
  2957  00D5  0200               	subwf	0,w
  2958  00D6  1C03               	skipc
  2959  00D7  28DF               	goto	l3012
  2960  00D8  0849               	movf	CheckOnceResult@401,w
  2961  00D9  23D2               	fcall	_KeyClearOne
  2962  00DA  28E4               	goto	l3016
  2963  00DB                     l3008:	
  2964  00DB  0849               	movf	CheckOnceResult@401,w
  2965  00DC  3E40               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2966  00DD  0084               	movwf	4
  2967  00DE  0180               	clrf	0
  2968  00DF                     l3012:	
  2969  00DF  0822               	movf	_KeyData,w	;volatile
  2970  00E0  1D03               	btfss	3,2
  2971  00E1  28E4               	goto	l3016
  2972  00E2                     l3014:	
  2973  00E2  0843               	movf	CheckOnceResult@403,w
  2974  00E3  24AF               	fcall	_KeyHave
  2975  00E4                     l3016:	
  2976  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2977  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2978  00E6  0FC9               	incfsz	CheckOnceResult@401,f
  2979  00E7  0008               	return
  2980  00E8  281F               	goto	l2952
  2981  00E9                     __end_of_CheckOnceResult:	
  2982  00E9                     PL4:	
  2983  00E9  00F4               	movwf	??_CheckOnceResult
  2984  00EA  0A84               	incf	4,f
  2985  00EB  0800               	movf	0,w
  2986  00EC  00F5               	movwf	??_CheckOnceResult+1
  2987  00ED  0846               	movf	CheckOnceResult@402,w
  2988  00EE  0774               	addwf	??_CheckOnceResult,w
  2989  00EF  00F6               	movwf	??_CheckOnceResult+2
  2990  00F0  0875               	movf	??_CheckOnceResult+1,w
  2991  00F1  1803               	skipnc
  2992  00F2  0A75               	incf	??_CheckOnceResult+1,w
  2993  00F3  00F7               	movwf	??_CheckOnceResult+3
  2994  00F4  0848               	movf	CheckOnceResult@404+1,w
  2995  00F5  0277               	subwf	??_CheckOnceResult+3,w
  2996  00F6  1D03               	skipz
  2997  00F7  0008               	return
  2998  00F8  0847               	movf	CheckOnceResult@404,w
  2999  00F9  0276               	subwf	??_CheckOnceResult+2,w
  3000  00FA  0008               	return
  3001  00FB                     __end_ofPL4:	
  3002  00FB                     PL6:	
  3003  00FB  0084               	movwf	4
  3004  00FC  0800               	movf	0,w
  3005  00FD  00F4               	movwf	??_CheckOnceResult
  3006  00FE  0A84               	incf	4,f
  3007  00FF  0800               	movf	0,w
  3008  0100  00F5               	movwf	??_CheckOnceResult+1
  3009  0101  0008               	return
  3010  0102                     __end_ofPL6:	
  3011                           
  3012                           	psect	text24
  3013  04AF                     __ptext24:	
  3014 ;; *************** function _KeyHave *****************
  3015 ;; Defined at:
  3016 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  390             1    wreg     unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  390             1    2[COMMON] unsigned char 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : B00/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1
  3030 ;;      Params:         0       0       0
  3031 ;;      Locals:         1       0       0
  3032 ;;      Temps:          0       0       0
  3033 ;;      Totals:         1       0       0
  3034 ;;Total ram usage:        1 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; Hardware stack levels required when called:    1
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_CheckOnceResult
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           
  3045                           ;psect for function _KeyHave
  3046  04AF                     _KeyHave:	
  3047                           
  3048                           ;incstack = 0
  3049                           ; Regs used in _KeyHave: [wreg+status,2+status,0]
  3050                           ;KeyHave@390 stored from wreg
  3051  04AF  00F2               	movwf	KeyHave@390
  3052  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3053  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3054  04B2  0ABA               	incf	_KeyCounter,f
  3055  04B3  0872               	movf	KeyHave@390,w
  3056  04B4  00A2               	movwf	_KeyData	;volatile
  3057  04B5  0008               	return
  3058  04B6                     __end_of_KeyHave:	
  3059                           
  3060                           	psect	text25
  3061  03D2                     __ptext25:	
  3062 ;; *************** function _KeyClearOne *****************
  3063 ;; Defined at:
  3064 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;  381             1    wreg     unsigned char 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  381             1    2[COMMON] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1
  3078 ;;      Params:         0       0       0
  3079 ;;      Locals:         1       0       0
  3080 ;;      Temps:          0       0       0
  3081 ;;      Totals:         1       0       0
  3082 ;;Total ram usage:        1 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; Hardware stack levels required when called:    1
  3085 ;; This function calls:
  3086 ;;		Nothing
  3087 ;; This function is called by:
  3088 ;;		_KeyClearIn
  3089 ;;		_KeyStopClear
  3090 ;;		_CheckOnceResult
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           
  3095                           ;psect for function _KeyClearOne
  3096  03D2                     _KeyClearOne:	
  3097                           
  3098                           ;incstack = 0
  3099                           ; Regs used in _KeyClearOne: [wreg-fsr0h+status,2+status,0]
  3100                           ;KeyClearOne@381 stored from wreg
  3101  03D2  00F2               	movwf	KeyClearOne@381
  3102  03D3  1003               	clrc
  3103  03D4  0D72               	rlf	KeyClearOne@381,w
  3104  03D5  3E32               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  3105  03D6  2475               	fcall	PL14	;call to abstracted procedure
  3106  03D7  1003               	clrc
  3107  03D8  0D72               	rlf	KeyClearOne@381,w
  3108  03D9  3E30               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  3109  03DA  0084               	movwf	4
  3110  03DB  23E5               	fcall	PL16	;call to abstracted procedure
  3111  03DC  3E2E               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  3112  03DD  0084               	movwf	4
  3113  03DE  23E5               	fcall	PL16	;call to abstracted procedure
  3114  03DF  3E2C               	addlw	(low (_KeyReference| 0))& (0+255)
  3115  03E0  0084               	movwf	4
  3116  03E1  0180               	clrf	0
  3117  03E2  0A84               	incf	4,f
  3118  03E3  0180               	clrf	0	;# 
  3119  03E4  0008               	return
  3120  03E5                     __end_of_KeyClearOne:	
  3121  03E5                     PL16:	
  3122  03E5  0180               	clrf	0
  3123  03E6  0A84               	incf	4,f
  3124  03E7  0180               	clrf	0
  3125  03E8  1003               	clrc
  3126  03E9  0D72               	rlf	KeyClearOne@381,w
  3127  03EA  0008               	return
  3128  03EB                     __end_ofPL16:	
  3129                           
  3130                           	psect	text26
  3131  02AE                     __ptext26:	
  3132 ;; *************** function _CheckKeyOldValue *****************
  3133 ;; Defined at:
  3134 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  412             2    0[BANK0 ] unsigned int 
  3139 ;;  411             1    2[BANK0 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1
  3149 ;;      Params:         0       0       0
  3150 ;;      Locals:         0       3       0
  3151 ;;      Temps:          0       0       0
  3152 ;;      Totals:         0       3       0
  3153 ;;Total ram usage:        3 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    3
  3156 ;; This function calls:
  3157 ;;		_JudgeKeyOldData
  3158 ;;		_KeyIsIn
  3159 ;;		_RKeyOldData
  3160 ;; This function is called by:
  3161 ;;		_CheckTouchKey
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           
  3166                           ;psect for function _CheckKeyOldValue
  3167  02AE                     _CheckKeyOldValue:	
  3168  02AE  3004               	movlw	4
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in _CheckKeyOldValue: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3172  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3173  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3174  02B1  01C3               	clrf	CheckKeyOldValue@411
  3175  02B2  0AB8               	incf	CheckKeyOldValue@F410,f
  3176  02B3  0238               	subwf	CheckKeyOldValue@F410,w
  3177  02B4  1C03               	btfss	3,0
  3178  02B5  0008               	return
  3179  02B6  01B8               	clrf	CheckKeyOldValue@F410
  3180  02B7                     l3028:	
  3181  02B7  1003               	clrc
  3182  02B8  0D43               	rlf	CheckKeyOldValue@411,w
  3183  02B9  3E34               	addlw	(low (_KeyResSum| 0))& (0+255)
  3184  02BA  0084               	movwf	4
  3185  02BB  1383               	bcf	3,7	;select IRP bank0
  3186  02BC  0800               	movf	0,w
  3187  02BD  00C1               	movwf	CheckKeyOldValue@412
  3188  02BE  0A84               	incf	4,f
  3189  02BF  0800               	movf	0,w
  3190  02C0  00C2               	movwf	CheckKeyOldValue@412+1
  3191  02C1  0843               	movf	CheckKeyOldValue@411,w
  3192  02C2  2495               	fcall	_KeyIsIn
  3193  02C3  3A00               	xorlw	0
  3194  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3195  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  3196  02C6  1D03               	skipz
  3197  02C7  2AD0               	goto	L9
  3198  02C8  0842               	movf	CheckKeyOldValue@412+1,w
  3199  02C9  00F3               	movwf	JudgeKeyOldData@428+1
  3200  02CA  0841               	movf	CheckKeyOldValue@412,w
  3201  02CB  00F2               	movwf	JudgeKeyOldData@428
  3202  02CC  0843               	movf	CheckKeyOldValue@411,w
  3203  02CD  222B               	fcall	_JudgeKeyOldData
  3204  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3205  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3206  02D0                     L9:	
  3207  02D0  0842               	movf	CheckKeyOldValue@412+1,w
  3208  02D1  00F3               	movwf	RKeyOldData@431+1
  3209  02D2  0841               	movf	CheckKeyOldValue@412,w
  3210  02D3  00F2               	movwf	RKeyOldData@431
  3211  02D4  0843               	movf	CheckKeyOldValue@411,w
  3212  02D5  2352               	fcall	_RKeyOldData
  3213  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  3214  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  3215  02D8  0FC3               	incfsz	CheckKeyOldValue@411,f
  3216  02D9  0008               	return
  3217  02DA  2AB7               	goto	l3028
  3218  02DB                     __end_of_CheckKeyOldValue:	
  3219                           
  3220                           	psect	text27
  3221  0352                     __ptext27:	
  3222 ;; *************** function _RKeyOldData *****************
  3223 ;; Defined at:
  3224 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  430             1    wreg     unsigned char 
  3227 ;;  431             2    2[COMMON] unsigned int 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  430             1    6[COMMON] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3234 ;; Tracked objects:
  3235 ;;		On entry : 300/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1
  3239 ;;      Params:         2       0       0
  3240 ;;      Locals:         1       0       0
  3241 ;;      Temps:          2       0       0
  3242 ;;      Totals:         5       0       0
  3243 ;;Total ram usage:        5 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_CheckKeyOldValue
  3250 ;;		_SystemEnterSleep
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           
  3255                           ;psect for function _RKeyOldData
  3256  0352                     _RKeyOldData:	
  3257                           
  3258                           ;incstack = 0
  3259                           ; Regs used in _RKeyOldData: [wreg-fsr0h+status,2+status,0]
  3260                           ;RKeyOldData@430 stored from wreg
  3261  0352  00F6               	movwf	RKeyOldData@430
  3262  0353  1003               	clrc
  3263  0354  0D76               	rlf	RKeyOldData@430,w
  3264  0355  3E30               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  3265  0356  0084               	movwf	4
  3266  0357  1383               	bcf	3,7	;select IRP bank0
  3267  0358  236F               	fcall	PL12	;call to abstracted procedure
  3268  0359  3E2E               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  3269  035A  2364               	fcall	PL8	;call to abstracted procedure
  3270  035B  236F               	fcall	PL12	;call to abstracted procedure
  3271  035C  3E30               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  3272  035D  2364               	fcall	PL8	;call to abstracted procedure
  3273  035E  0872               	movf	RKeyOldData@431,w
  3274  035F  0080               	movwf	0
  3275  0360  0A84               	incf	4,f
  3276  0361  0873               	movf	RKeyOldData@431+1,w
  3277  0362  0080               	movwf	0	;# 
  3278  0363  0008               	return
  3279  0364                     __end_of_RKeyOldData:	
  3280  0364                     PL8:	
  3281  0364  0084               	movwf	4
  3282  0365  0874               	movf	??_RKeyOldData,w
  3283  0366  0080               	movwf	0
  3284  0367  0A84               	incf	4,f
  3285  0368  0875               	movf	??_RKeyOldData+1,w
  3286  0369  0080               	movwf	0
  3287  036A  1003               	clrc
  3288  036B  0D76               	rlf	RKeyOldData@430,w
  3289  036C  3E32               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  3290  036D  0084               	movwf	4
  3291  036E  0008               	return
  3292  036F                     __end_ofPL8:	
  3293  036F                     PL12:	
  3294  036F  0800               	movf	0,w
  3295  0370  00F4               	movwf	??_RKeyOldData
  3296  0371  0A84               	incf	4,f
  3297  0372  0800               	movf	0,w
  3298  0373  00F5               	movwf	??_RKeyOldData+1
  3299  0374  1003               	clrc
  3300  0375  0D76               	rlf	RKeyOldData@430,w
  3301  0376  0008               	return
  3302  0377                     __end_ofPL12:	
  3303                           
  3304                           	psect	text28
  3305  0495                     __ptext28:	
  3306 ;; *************** function _KeyIsIn *****************
  3307 ;; Defined at:
  3308 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  377             1    wreg     unsigned char 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  377             1    2[COMMON] unsigned char 
  3313 ;;  378             1    3[COMMON] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMMON   BANK0   BANK1
  3323 ;;      Params:         0       0       0
  3324 ;;      Locals:         2       0       0
  3325 ;;      Temps:          0       0       0
  3326 ;;      Totals:         2       0       0
  3327 ;;Total ram usage:        2 bytes
  3328 ;; Hardware stack levels used:    2
  3329 ;; Hardware stack levels required when called:    1
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_KeyClearIn
  3334 ;;		_CheckOnceResult
  3335 ;;		_CheckKeyOldValue
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _KeyIsIn
  3341  0495                     _KeyIsIn:	
  3342                           
  3343                           ;incstack = 0
  3344                           ; Regs used in _KeyIsIn: [wreg-fsr0h+status,2+status,0+pclath]
  3345                           ;KeyIsIn@377 stored from wreg
  3346  0495  00F2               	movwf	KeyIsIn@377
  3347  0496  3907               	andlw	7
  3348  0497  3E01               	addlw	low ((_Table_KeyFalg-__stringbase)| (0+32768))
  3349  0498  0084               	movwf	4
  3350  0499  2440               	fcall	stringdir
  3351  049A  00F3               	movwf	KeyIsIn@378
  3352  049B  087A               	movf	_KeyFlag,w	;volatile
  3353  049C  05F3               	andwf	KeyIsIn@378,f
  3354  049D  0873               	movf	KeyIsIn@378,w
  3355  049E  0008               	return
  3356  049F                     __end_of_KeyIsIn:	
  3357                           
  3358                           	psect	text29
  3359  022B                     __ptext29:	
  3360 ;; *************** function _JudgeKeyOldData *****************
  3361 ;; Defined at:
  3362 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  427             1    wreg     unsigned char 
  3365 ;;  428             2    2[COMMON] unsigned int 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  427             1    4[COMMON] unsigned char 
  3368 ;;  429             2    5[COMMON] unsigned int 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3373 ;; Tracked objects:
  3374 ;;		On entry : 300/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1
  3378 ;;      Params:         2       0       0
  3379 ;;      Locals:         3       0       0
  3380 ;;      Temps:          0       0       0
  3381 ;;      Totals:         5       0       0
  3382 ;;Total ram usage:        5 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:    1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_CheckKeyOldValue
  3389 ;;		_SystemEnterSleep
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _JudgeKeyOldData
  3395  022B                     _JudgeKeyOldData:	
  3396                           
  3397                           ;incstack = 0
  3398                           ; Regs used in _JudgeKeyOldData: [wreg-fsr0h+status,2+status,0]
  3399                           ;JudgeKeyOldData@427 stored from wreg
  3400  022B  00F4               	movwf	JudgeKeyOldData@427
  3401  022C  1003               	clrc
  3402  022D  0D74               	rlf	JudgeKeyOldData@427,w
  3403  022E  3E32               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  3404  022F  0084               	movwf	4
  3405  0230  1383               	bcf	3,7	;select IRP bank0
  3406  0231  2267               	fcall	PL2	;call to abstracted procedure
  3407  0232  1903               	skipnz
  3408  0233  0275               	subwf	JudgeKeyOldData@429,w
  3409  0234  1C03               	skipc
  3410  0235  2A3E               	goto	L10
  3411  0236  30FF               	movlw	255
  3412  0237  0276               	subwf	JudgeKeyOldData@429+1,w
  3413  0238  30FE               	movlw	254
  3414  0239  1903               	skipnz
  3415  023A  0275               	subwf	JudgeKeyOldData@429,w
  3416  023B  1C03               	skipc
  3417  023C  0008               	return
  3418  023D  1003               	clrc
  3419  023E                     L10:	
  3420  023E  0D74               	rlf	JudgeKeyOldData@427,w
  3421  023F  3E30               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  3422  0240  0084               	movwf	4
  3423  0241  2267               	fcall	PL2	;call to abstracted procedure
  3424  0242  1903               	skipnz
  3425  0243  0275               	subwf	JudgeKeyOldData@429,w
  3426  0244  1C03               	skipc
  3427  0245  2A4E               	goto	L11
  3428  0246  30FF               	movlw	255
  3429  0247  0276               	subwf	JudgeKeyOldData@429+1,w
  3430  0248  30FE               	movlw	254
  3431  0249  1903               	skipnz
  3432  024A  0275               	subwf	JudgeKeyOldData@429,w
  3433  024B  1C03               	skipc
  3434  024C  0008               	return
  3435  024D  1003               	clrc
  3436  024E                     L11:	
  3437  024E  0D74               	rlf	JudgeKeyOldData@427,w
  3438  024F  3E2E               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  3439  0250  0084               	movwf	4
  3440  0251  2267               	fcall	PL2	;call to abstracted procedure
  3441  0252  1903               	skipnz
  3442  0253  0275               	subwf	JudgeKeyOldData@429,w
  3443  0254  1C03               	skipc
  3444  0255  2A5E               	goto	L12
  3445  0256  30FF               	movlw	255
  3446  0257  0276               	subwf	JudgeKeyOldData@429+1,w
  3447  0258  30FE               	movlw	254
  3448  0259  1903               	skipnz
  3449  025A  0275               	subwf	JudgeKeyOldData@429,w
  3450  025B  1C03               	skipc
  3451  025C  0008               	return
  3452  025D  1003               	clrc
  3453  025E                     L12:	
  3454  025E  0D74               	rlf	JudgeKeyOldData@427,w
  3455  025F  3E2C               	addlw	(low (_KeyReference| 0))& (0+255)
  3456  0260  0084               	movwf	4
  3457  0261  0872               	movf	JudgeKeyOldData@428,w
  3458  0262  0080               	movwf	0
  3459  0263  0A84               	incf	4,f
  3460  0264  0873               	movf	JudgeKeyOldData@428+1,w
  3461  0265  0080               	movwf	0
  3462  0266  0008               	return
  3463  0267                     __end_of_JudgeKeyOldData:	
  3464  0267                     PL2:	
  3465  0267  0800               	movf	0,w
  3466  0268  00F5               	movwf	JudgeKeyOldData@429
  3467  0269  0A84               	incf	4,f
  3468  026A  0800               	movf	0,w
  3469  026B  00F6               	movwf	JudgeKeyOldData@429+1
  3470  026C  0872               	movf	JudgeKeyOldData@428,w
  3471  026D  02F5               	subwf	JudgeKeyOldData@429,f
  3472  026E  0873               	movf	JudgeKeyOldData@428+1,w
  3473  026F  1C03               	skipc
  3474  0270  03F6               	decf	JudgeKeyOldData@429+1,f
  3475  0271  02F6               	subwf	JudgeKeyOldData@429+1,f
  3476  0272  3000               	movlw	0
  3477  0273  0276               	subwf	JudgeKeyOldData@429+1,w
  3478  0274  3403               	retlw	3
  3479  0275                     __end_ofPL2:	
  3480                           
  3481                           	psect	text30
  3482  0418                     __ptext30:	
  3483 ;; *************** function _Isr_Timer *****************
  3484 ;; Defined at:
  3485 ;;		line 236 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 300/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMMON   BANK0   BANK1
  3499 ;;      Params:         0       0       0
  3500 ;;      Locals:         0       0       0
  3501 ;;      Temps:          2       0       0
  3502 ;;      Totals:         2       0       0
  3503 ;;Total ram usage:        2 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; This function calls:
  3506 ;;		Nothing
  3507 ;; This function is called by:
  3508 ;;		Interrupt level 1
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function _Isr_Timer
  3514  0418                     _Isr_Timer:	
  3515                           
  3516                           ;main.c: 238: if(TMR2IF)
  3517  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3519  041A  1C8D               	btfss	13,1	;volatile
  3520  041B  2C25               	goto	i1l2774
  3521                           
  3522                           ;main.c: 239: {
  3523                           ;main.c: 240: TMR2IF = 0;
  3524  041C  108D               	bcf	13,1	;volatile
  3525                           
  3526                           ;main.c: 241: if(++MainTime >= 32)
  3527  041D  3020               	movlw	32
  3528  041E  0ABF               	incf	_MainTime,f	;volatile
  3529  041F  023F               	subwf	_MainTime,w	;volatile
  3530  0420  1C03               	skipc
  3531  0421  2C26               	goto	i1l496
  3532                           
  3533                           ;main.c: 242: {
  3534                           ;main.c: 243: MainTime = 0;
  3535  0422  01BF               	clrf	_MainTime	;volatile
  3536                           
  3537                           ;main.c: 244: B_MainLoop = 1;
  3538  0423  1778               	bsf	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
  3539  0424  2C26               	goto	i1l496
  3540  0425                     i1l2774:	
  3541                           
  3542                           ;main.c: 247: else
  3543                           ;main.c: 248: {
  3544                           ;main.c: 249: PIR1 = 0;
  3545  0425  018D               	clrf	13	;volatile
  3546  0426                     i1l496:	
  3547  0426  0871               	movf	??_Isr_Timer+1,w
  3548  0427  008A               	movwf	10
  3549  0428  0E70               	swapf	??_Isr_Timer^(0+-128),w
  3550  0429  0083               	movwf	3
  3551  042A  0EFE               	swapf	126,f
  3552  042B  0E7E               	swapf	126,w
  3553  042C  0009               	retfie
  3554  042D                     __end_of_Isr_Timer:	
  3555  007E                     btemp	set	126	;btemp
  3556  007E                     wtemp0	set	126
  3557                           
  3558                           	psect	intentry
  3559  0004                     __pintentry:	
  3560                           ;incstack = 0
  3561                           ; Regs used in _Isr_Timer: [wreg+status,2+status,0]
  3562                           
  3563  0004                     interrupt_function:	
  3564  007E                     saved_w	set	btemp
  3565  0004  00FE               	movwf	btemp
  3566  0005  0E03               	swapf	3,w
  3567  0006  00F0               	movwf	??_Isr_Timer
  3568  0007  080A               	movf	10,w
  3569  0008  00F1               	movwf	??_Isr_Timer+1
  3570  0009  2C18               	ljmp	_Isr_Timer


Data Sizes:
    Strings     0
    Constant    10
    Data        4
    BSS         35
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      9      45
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SystemEnterSleep->_GetTouchKeyValue
    _SystemEnterSleep->_JudgeKeyOldData
    _SystemEnterSleep->_RKeyOldData
    _KeyServer->___lwmod
    _CheckTouchKey->_CheckOnceResult
    _TurnKeyFlags->_KeyClearIn
    _KeyClearIn->_KeyIsIn
    _KeyStopClear->_KeyClearOne
    _GetTouchKeyValue->_ClearResSum
    _CheckOnceResult->_KeyIsIn
    _CheckKeyOldValue->_JudgeKeyOldData
    _CheckKeyOldValue->_RKeyOldData

Critical Paths under _Isr_Timer in COMMON

    None.

Critical Paths under _main in BANK0

    _WorkSleep->_SystemEnterSleep
    _CheckTouchKey->_CheckOnceResult

Critical Paths under _Isr_Timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr_Timer in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4982
                      _CheckTouchKey
                        _Init_System
                          _KeyServer
                      _Refurbish_Sfr
                          _WorkSleep
                           _checkLvd
                             _keyCtr
                          _pwm13Stop
                            _workCtr
 ---------------------------------------------------------------------------------
 (1) _workCtr                                              0     0      0       0
                          _pwm13Init
                          _pwm13Stop
                           _pwm1Init
                           _pwm1Stop
                           _pwm3Init
                           _pwm3Stop
 ---------------------------------------------------------------------------------
 (2) _pwm3Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm3Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm1Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm1Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm13Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm13Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keyCtr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WorkSleep                                            0     0      0    1417
                      _Refurbish_Sfr
                   _SystemEnterSleep
                           _checkLvd
 ---------------------------------------------------------------------------------
 (1) _checkLvd                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SystemEnterSleep                                     9     9      0    1417
                                              0 BANK0      9     9      0
                        _ClearResSum
                   _GetTouchKeyValue
                    _JudgeKeyOldData
                        _RKeyOldData
 ---------------------------------------------------------------------------------
 (2) _Refurbish_Sfr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeyServer                                            0     0      0     245
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     245
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckTouchKey                                        0     0      0    3320
                   _CheckKeyOldValue
                    _CheckOnceResult
                     _CheckValidTime
                        _ClearResSum
                   _GetTouchKeyValue
                       _KeyStopClear
                       _TurnKeyFlags
 ---------------------------------------------------------------------------------
 (2) _TurnKeyFlags                                         0     0      0     286
                         _KeyClearIn
 ---------------------------------------------------------------------------------
 (3) _KeyClearIn                                           1     1      0     286
                                              4 COMMON     1     1      0
                        _KeyClearOne
                            _KeyIsIn
 ---------------------------------------------------------------------------------
 (2) _KeyStopClear                                         1     1      0     178
                                              3 COMMON     1     1      0
                        _KeyClearOne
 ---------------------------------------------------------------------------------
 (3) _GetTouchKeyValue                                     4     4      0     159
                                              3 COMMON     4     4      0
                        _ClearResSum
 ---------------------------------------------------------------------------------
 (4) _ClearResSum                                          1     1      0      45
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckValidTime                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CheckOnceResult                                     13    13      0    1507
                                              4 COMMON     4     4      0
                                              0 BANK0      9     9      0
                        _KeyClearOne
                            _KeyHave
                            _KeyIsIn
 ---------------------------------------------------------------------------------
 (3) _KeyHave                                              1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _KeyClearOne                                          1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckKeyOldValue                                     3     3      0    1145
                                              0 BANK0      3     3      0
                    _JudgeKeyOldData
                            _KeyIsIn
                        _RKeyOldData
 ---------------------------------------------------------------------------------
 (3) _RKeyOldData                                          5     3      2     294
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _KeyIsIn                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _JudgeKeyOldData                                      5     3      2     560
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Isr_Timer                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckTouchKey
     _CheckKeyOldValue
       _JudgeKeyOldData
       _KeyIsIn
       _RKeyOldData
     _CheckOnceResult
       _KeyClearOne
       _KeyHave
       _KeyIsIn
     _CheckValidTime
     _ClearResSum
     _GetTouchKeyValue
       _ClearResSum
     _KeyStopClear
       _KeyClearOne
     _TurnKeyFlags
       _KeyClearIn
         _KeyClearOne
         _KeyIsIn
   _Init_System
   _KeyServer
     ___lwmod
   _Refurbish_Sfr
   _WorkSleep
     _Refurbish_Sfr
     _SystemEnterSleep
       _ClearResSum
       _GetTouchKeyValue
         _ClearResSum
       _JudgeKeyOldData
       _RKeyOldData
     _checkLvd
   _checkLvd
   _keyCtr
   _pwm13Stop
   _workCtr
     _pwm13Init
     _pwm13Stop
     _pwm1Init
     _pwm1Stop
     _pwm3Init
     _pwm3Stop

 _Isr_Timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      2D       5       56.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      39       8        0.0%
ABS                  0      0      39       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Sep 06 15:16:02 2025

                        pc 0002                         PL2 0267                         PL4 00E9  
                       PL6 00FB                         PL8 0364              ??_KeyClearOne 0072  
    __size_of_TurnKeyFlags 0026                         fsr 0004           ??_CheckValidTime 0072  
                      PL10 03F9                        PL12 036F                        PL14 0475  
                      PL16 03E5                        l519 0291                        l535 02F9  
                      l465 01D9                        l458 01CA                        _RB1 0031  
                      _RB2 0032                        _RB4 0034                        _RB6 0036  
                      _PR2 0011                        fsr0 0004                        indf 0000  
        ?_GetTouchKeyValue 0070   __end_of_Table_KeyChannel 0450         ??_GetTouchKeyValue 0073  
                     l1006 0206                       l1056 0342                       l2210 01E5  
                     l1075 0312                       l3012 00DF                       l3004 00D0  
                     l1093 0136                       l3014 00E2                       l2206 01E1  
                     l3110 0323                       l3102 031F                       l1087 0102  
                     l3008 00DB                       l3016 00E4                       l2240 0214  
                     l3112 0327                       l2170 046D                       l2242 0224  
                     l3028 02B7                       l2172 046E                       l3060 0347  
                     l3118 032B                       l2342 04B6                       l3126 02DF  
                     l2344 04BB                       l3080 03D0                       l3154 02FD  
                     l2428 048A                       l2710 0296                       l2702 028B  
                     l2624 01A4                       l2632 01AC                       l2618 019D  
                     l2634 01AF                       l2722 02A6                       l2706 0292  
                     l2644 01C3                       l2716 029D                       l2558 0403  
                     l2576 0383                       l2584 0396                       l2656 01DB  
                     l2648 01C8                       l2912 012F                       l2834 047C  
                     l2690 03B0                       l2828 047B                       l2838 0483  
                     l2686 03A9                       l2952 001F                       l2944 016F  
                     l2970 0071                       l2990 00A6                       l2984 009E  
                     u2005 002A                       u2025 0063                       u2035 0077  
                     u2045 0082                       u2075 00BE                       u1395 0389  
                     _PIE1 000E                       _PIE2 0110                       _INTF 0059  
                     _RBIF 0058                       u1985 015F                       _PIR1 000D  
                     _PIR2 010F                       _TMR0 0081                       _main 02DB  
                     btemp 007E              ?_KeyStopClear 0070                       start 000A  
             _TurnKeyFlags 032C              _doubleKeyTime 003C            __end_of_KeyIsIn 049F  
          __end_of_KeyHave 04B6           ?_JudgeKeyOldData 0072              ??_Init_System 0072  
                    ?_main 0070                      _T2CON 0013   __end_of_SystemEnterSleep 0177  
          __end_of___lwmod 039B                      i1l496 0426                      _PORTB 0006  
                    _TRISB 0005                      _PWMTH 0018                      _PWMTL 0017  
      __end_of_KeyClearOne 03E5                 _KeyClearIn 047B                _RKeyOldData 0352  
           __pbitbssCOMMON 03C0                      pclath 000A                _ClearResSum 046D  
               _KeyCounter 003A                 _KeyOldData 0024             ??_KeyStopClear 0073  
                    status 0003                      wtemp0 007E            __end_of_workCtr 02AE  
               _KeyUpShake 0040            __initialization 000B               __end_of_main 0305  
                   ??_main 0078           TurnKeyFlags@F415 0037           TurnKeyFlags@F416 0036  
      __end_of_Init_System 0440                     i1l2774 0425                     _INTCON 000B  
       __size_of_KeyServer 0067                     _OSCCON 0014                     _TMR2IF 0069  
                   _PWMD1L 001A                     _PWMD3L 009C                     _TRISB6 002E  
         __end_of_checkLvd 04C0                  ??_KeyIsIn 0072                  ??_KeyHave 0072  
       __size_of_Isr_Timer 0015  __size_of_CheckKeyOldValue 002D                     _b_kclr 03C2  
                   _b_kerr 03C1                  ??___lwmod 0076                     _keyCtr 039B  
              _KeyClearOne 03D2           __end_of_pwm1Init 046D           __end_of_pwm3Init 04AF  
         __end_of_pwm1Stop 04C6           __end_of_pwm3Stop 04C3              _Table_KeyFalg 0446  
            _Table_KeyDown 044E               __pdataCOMMON 007B                     saved_w 007E  
   __size_of_CheckTouchKey 0027                ?_KeyClearIn 0070                  ??_workCtr 0072  
          _CheckOnceResult 001A    __end_of__initialization 0018         __size_of_WorkSleep 001B  
           __pcstackCOMMON 0070               __pidataBANK0 0000                _Init_System 042D  
               __end_ofPL2 0275                 __end_ofPL4 00FB                 __end_ofPL6 0102  
               __end_ofPL8 036F          __end_of_KeyServer 01DE       __end_of_KeyStopClear 0495  
        __end_of_Isr_Timer 042D                 __pbssBANK0 0020             RKeyOldData@430 0076  
           RKeyOldData@431 0072  __size_of_GetTouchKeyValue 004D         __size_of_pwm13Init 000E  
       __size_of_pwm13Stop 0005              _CheckTouchKey 0305                 __pmaintext 02DB  
               __pintentry 0004                    ?_keyCtr 0070        __size_of_KeyClearIn 000D  
                  _CMPCON0 000F                    _CMPCON1 0010          __end_of_WorkSleep 03D2  
        ?_SystemEnterSleep 0070    __end_of_CheckOnceResult 00E9                    _KEYCON0 0111  
                  _KEYCON1 0112                    _KEYCON2 0113                  ?_checkLvd 0070  
                  _PWM01DT 001F         ??_SystemEnterSleep 0041                    _PWM23DT 009D  
                  _B_OnOff 03C5                    _PWMD01H 001E                    _PWMD23H 009E  
   __size_of_Refurbish_Sfr 000F                    _PWMCON0 0015                    _PWMCON1 0016  
                  _PWMCON2 001D                 __stringtab 0440               ?_RKeyOldData 0072  
             ?_ClearResSum 0070             ClearResSum@388 0072                    _KeyData 0022  
                  _KeyFlag 007A                    _KeyIsIn 0495                    _KeyHave 04AF  
                ?_pwm1Init 0070                  ?_pwm3Init 0070                  ?_pwm1Stop 0070  
           ?_CheckTouchKey 0070                  ?_pwm3Stop 0070           _CheckKeyOldValue 02AE  
                  ___lwmod 0377                    _b_kover 03C4            __size_of_keyCtr 001C  
                  __ptext1 0275                    __ptext2 04C0                    __ptext3 04A7  
                  __ptext4 04C3                    __ptext5 045F                    __ptext6 04B6  
                  __ptext7 03EB                    __ptext8 039B                    __ptext9 03B7  
                  _ledDuty 007B                    _count1s 0028                 ??_checkLvd 0072  
 __size_of_JudgeKeyOldData 003C          __end_of_pwm13Init 03F9                    _lvdTime 003D  
        __end_of_pwm13Stop 04BB    __size_of_CheckValidTime 0015                    clrloop0 04A0  
                  _workCtr 0275       end_of_initialization 0018            KeyStopClear@385 0073  
               ??_pwm1Init 0072                 ??_pwm3Init 0072                 ??_pwm1Stop 0072  
               ??_pwm3Stop 0072              _Refurbish_Sfr 0450               _KeyOldValue0 0032  
             _KeyOldValue1 0030               _KeyOldValue2 002E      __size_of_KeyStopClear 000D  
     CheckKeyOldValue@F410 0038               ?_KeyClearOne 0070               _KeyReference 002C  
         ?_CheckOnceResult 0070               ??_KeyClearIn 0074         CheckOnceResult@401 0049  
       CheckOnceResult@402 0046         CheckOnceResult@403 0043         CheckOnceResult@404 0047  
       CheckOnceResult@405 0044         CheckOnceResult@406 0041            ??_CheckTouchKey 0078  
             _KeyStopClear 0488           _GetTouchKeyValue 01DE             ?_Refurbish_Sfr 0070  
             ?_Init_System 0070         __end_of_KeyClearIn 0488              __pidataCOMMON 0000  
           __end_of_keyCtr 03B7              WorkSleep@time 003B                  _KeyMaxSub 0039  
                _KeyResSum 0034                __end_ofPL10 0403                __end_ofPL12 0377  
              __end_ofPL14 047B                __end_ofPL16 03EB        start_initialization 000B  
                _KeyServer 0177                  _Isr_Timer 0418          ??_JudgeKeyOldData 0074  
     __size_of_RKeyOldData 0012       __size_of_ClearResSum 0008              ?_TurnKeyFlags 0070  
              __pdataBANK0 004A                   ??_keyCtr 0072                __pbssCOMMON 0079  
               ?_KeyServer 0070                  ___latbits 0000              __pcstackBANK0 0041  
                _WorkSleep 03B7             _CheckValidTime 0403          __size_of_checkLvd 0005  
 __end_of_CheckKeyOldValue 02DB                 ?_Isr_Timer 0070                   ?_KeyIsIn 0070  
                 ?_KeyHave 0070  __size_of_SystemEnterSleep 0075            ??_Refurbish_Sfr 0072  
           ??_TurnKeyFlags 0075          __size_of_pwm1Init 000E          __size_of_pwm3Init 0008  
        __size_of_pwm1Stop 0003          __size_of_pwm3Stop 0003                   ?___lwmod 0072  
                __pstrings 0440                  _count300s 0026       __size_of_KeyClearOne 0013  
   __end_of_CheckValidTime 0418        GetTouchKeyValue@393 0076        GetTouchKeyValue@394 0075  
      GetTouchKeyValue@395 0073                 ?_WorkSleep 0070                   ?_workCtr 0070  
                _pwm13Init 03EB                  _pwm13Stop 04B6                   _KEYDATAH 0117  
                 _KEYDATAL 0116          interrupt_function 0004                  clear_ram0 049F  
      CheckKeyOldValue@411 0043        CheckKeyOldValue@412 0041                __stringbase 0445  
     __size_of_Init_System 0013      __end_of_Table_KeyFalg 044E      __end_of_Table_KeyDown 044F  
 __end_of_GetTouchKeyValue 022B            ?_CheckValidTime 0070                ??_KeyServer 0077  
               ?_pwm13Init 0070                ??_Isr_Timer 0070                 ?_pwm13Stop 0070  
                 _MainTime 003F         JudgeKeyOldData@427 0074         JudgeKeyOldData@428 0072  
       JudgeKeyOldData@429 0075           __size_of_KeyIsIn 000A           __size_of_KeyHave 0007  
         _Table_KeyChannel 044F           __size_of___lwmod 0024         __end_of__stringtab 0446  
          _JudgeKeyOldData 022B                   _b_kover1 03C3                   _b_ksleep 03C0  
                 _led1Duty 004C                   _checkLvd 04BB       __end_of_TurnKeyFlags 0352  
                 _led2Duty 004B                   _led3Duty 004A                ??_WorkSleep 0077  
                 __ptext10 04BB                   __ptext11 0102                   __ptext20 01DE  
                 __ptext12 0450                   __ptext21 046D                   __ptext13 0177  
                 __ptext30 0418                   __ptext22 0403                   __ptext14 0377  
                 __ptext23 001A                   __ptext15 042D                   __ptext24 04AF  
                 __ptext16 0305                   __ptext25 03D2                   __ptext17 032C  
                 __ptext26 02AE                   __ptext18 047B                   __ptext27 0352  
                 __ptext19 0488                   __ptext28 0495                   __ptext29 022B  
         __size_of_workCtr 0039                   _keyCount 002A   __size_of_CheckOnceResult 00CF  
            __size_of_main 002A                   _modeStep 003E           _SystemEnterSleep 0102  
                 _pwm1Init 045F                   _pwm3Init 04A7      __end_of_CheckTouchKey 032C  
                 _pwm1Stop 04C3                   _pwm3Stop 04C0                   _workStep 0079  
              ??_pwm13Init 0072          ?_CheckKeyOldValue 0070              ??_RKeyOldData 0074  
              ??_pwm13Stop 0072                   intlevel1 0000              ??_ClearResSum 0072  
       ??_CheckKeyOldValue 0077           ___lwmod@dividend 0074                  stringcode 0440  
  __end_of_JudgeKeyOldData 0267                 _B_MainLoop 03C6                 _OPTION_REG 0001  
      SystemEnterSleep@423 0049        SystemEnterSleep@424 0043        SystemEnterSleep@425 0047  
      SystemEnterSleep@426 0045            ___lwmod@divisor 0072            ___lwmod@counter 0076  
                 stringdir 0440                   stringtab 0440             KeyClearOne@381 0072  
            KeyClearIn@383 0074         CheckValidTime@F419 0020        __end_of_RKeyOldData 0364  
               KeyIsIn@377 0072                 KeyIsIn@378 0073                 KeyHave@390 0072  
    __end_of_Refurbish_Sfr 045F        __end_of_ClearResSum 0475          ??_CheckOnceResult 0074  
