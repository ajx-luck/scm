

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 17 09:27:44 2025

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P8122AD
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	pa_nodes0,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 1.45
    47                           ; Generated 16/11/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMMON
    82  0000                     __pidataCOMMON:	
    83                           
    84                           	psect	strings
    85  03DA                     __pstrings:	
    86  03DA                     stringtab:	
    87  03DA                     __stringtab:	
    88  03DA                     stringcode:	
    89                           ;	String table - string pointers are 1 byte each
    90                           
    91  03DA                     stringdir:	
    92  03DA  3003               	movlw	high stringdir
    93  03DB  008A               	movwf	10
    94  03DC  0804               	movf	4,w
    95  03DD  0A84               	incf	4,f
    96  03DE  0782               	addwf	2,f
    97  03DF                     __stringbase:	
    98  03DF  3400               	retlw	0
    99  03E0                     __end_of__stringtab:	
   100  03E0                     _Table_KeyFalg:	
   101  03E0  3401               	retlw	1
   102  03E1  3402               	retlw	2
   103  03E2  3404               	retlw	4
   104  03E3  3408               	retlw	8
   105  03E4  3410               	retlw	16
   106  03E5  3420               	retlw	32
   107  03E6  3440               	retlw	64
   108  03E7  3480               	retlw	128
   109  03E8                     __end_of_Table_KeyFalg:	
   110  03E8                     _Table_KeyDown:	
   111  03E8  340A               	retlw	10
   112  03E9                     __end_of_Table_KeyDown:	
   113  03E9                     _Table_KeyChannel:	
   114  03E9  3440               	retlw	64
   115  03EA                     __end_of_Table_KeyChannel:	
   116  001F                     _PWM01DT	set	31
   117  001E                     _PWMD01H	set	30
   118  001D                     _PWMCON2	set	29
   119  001A                     _PWMD1L	set	26
   120  0018                     _PWMTH	set	24
   121  0017                     _PWMTL	set	23
   122  0016                     _PWMCON1	set	22
   123  0015                     _PWMCON0	set	21
   124  0014                     _OSCCON	set	20
   125  0013                     _T2CON	set	19
   126  0011                     _PR2	set	17
   127  000E                     _PIE1	set	14
   128  000D                     _PIR1	set	13
   129  000B                     _INTCON	set	11
   130  0006                     _PORTB	set	6
   131  0005                     _TRISB	set	5
   132  0001                     _OPTION_REG	set	1
   133  0069                     _TMR2IF	set	105
   134  0058                     _RBIF	set	88
   135  0059                     _INTF	set	89
   136  0031                     _RB1	set	49
   137  0034                     _RB4	set	52
   138  0036                     _RB6	set	54
   139  002E                     _TRISB6	set	46
   140  009E                     _PWMD23H	set	158
   141  009D                     _PWM23DT	set	157
   142  009C                     _PWMD3L	set	156
   143  0081                     _TMR0	set	129
   144  0117                     _KEYDATAH	set	279
   145  0116                     _KEYDATAL	set	278
   146  0113                     _KEYCON2	set	275
   147  0112                     _KEYCON1	set	274
   148  0111                     _KEYCON0	set	273
   149  0110                     _PIE2	set	272
   150  010F                     _PIR2	set	271
   151                           
   152                           	psect	cinit
   153  000B                     start_initialization:	
   154                           ; #config settings
   155                           
   156  000B                     __initialization:	
   157                           
   158                           ;initializer for _ledDuty
   159  000B  3032               	movlw	50
   160  000C  00FB               	movwf	__pdataCOMMON& (0+127)
   161  000D  3020               	movlw	low __pbssBANK0
   162                           
   163                           ; Clear objects allocated to BANK0
   164  000E  1383               	bcf	3,7	;select IRP bank0
   165  000F  0084               	movwf	4
   166  0010  303B               	movlw	low (__pbssBANK0+27)
   167  0011  2439               	fcall	clear_ram0
   168                           
   169                           ; Clear objects allocated to COMMON
   170  0012  01F9               	clrf	__pbssCOMMON& (0+127)
   171  0013  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   172                           
   173                           ; Clear objects allocated to BITCOMMON
   174  0014  01F8               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   175  0015                     end_of_initialization:	
   176                           ;End of C runtime variable initialization code
   177                           
   178  0015                     __end_of__initialization:	
   179  0015  0183               	clrf	3
   180  0016  2BB3               	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	bitbssCOMMON
   183  03C0                     __pbitbssCOMMON:	
   184  03C0                     _b_ksleep:	
   185  03C0                     	ds	1
   186  03C1                     _b_kerr:	
   187  03C1                     	ds	1
   188  03C2                     _b_kclr:	
   189  03C2                     	ds	1
   190  03C3                     _b_kover1:	
   191  03C3                     	ds	1
   192  03C4                     _b_kover:	
   193  03C4                     	ds	1
   194  03C5                     _B_OnOff:	
   195  03C5                     	ds	1
   196  03C6                     _B_MainLoop:	
   197  03C6                     	ds	1
   198                           
   199                           	psect	bssCOMMON
   200  0079                     __pbssCOMMON:	
   201  0079                     _workStep:	
   202  0079                     	ds	1
   203  007A                     _KeyFlag:	
   204  007A                     	ds	1
   205                           
   206                           	psect	dataCOMMON
   207  007B                     __pdataCOMMON:	
   208  007B                     _ledDuty:	
   209  007B                     	ds	1
   210                           
   211                           	psect	bssBANK0
   212  0020                     __pbssBANK0:	
   213  0020                     CheckValidTime@F419:	
   214  0020                     	ds	2
   215  0022                     _KeyData:	
   216  0022                     	ds	2
   217  0024                     _KeyOldData:	
   218  0024                     	ds	2
   219  0026                     _keyCount:	
   220  0026                     	ds	2
   221  0028                     _KeyReference:	
   222  0028                     	ds	2
   223  002A                     _KeyOldValue2:	
   224  002A                     	ds	2
   225  002C                     _KeyOldValue1:	
   226  002C                     	ds	2
   227  002E                     _KeyOldValue0:	
   228  002E                     	ds	2
   229  0030                     _KeyResSum:	
   230  0030                     	ds	2
   231  0032                     TurnKeyFlags@F416:	
   232  0032                     	ds	1
   233  0033                     TurnKeyFlags@F415:	
   234  0033                     	ds	1
   235  0034                     CheckKeyOldValue@F410:	
   236  0034                     	ds	1
   237  0035                     _KeyMaxSub:	
   238  0035                     	ds	1
   239  0036                     _KeyCounter:	
   240  0036                     	ds	1
   241  0037                     WorkSleep@time:	
   242  0037                     	ds	1
   243  0038                     _modeStep:	
   244  0038                     	ds	1
   245  0039                     _MainTime:	
   246  0039                     	ds	1
   247  003A                     _KeyUpShake:	
   248  003A                     	ds	1
   249                           
   250                           	psect	clrtext
   251  0439                     clear_ram0:	
   252                           ;	Called with FSR containing the base address, and
   253                           ;	W with the last address+1
   254                           
   255  0439  0064               	clrwdt	;clear the watchdog before getting into this loop
   256  043A                     clrloop0:	
   257  043A  0180               	clrf	0	;clear RAM location pointed to by FSR
   258  043B  0A84               	incf	4,f	;increment pointer
   259  043C  0604               	xorwf	4,w	;XOR with final address
   260  043D  1903               	btfsc	3,2	;have we reached the end yet?
   261  043E  3400               	retlw	0	;all done for this memory range, return
   262  043F  0604               	xorwf	4,w	;XOR again to restore value
   263  0440  2C3A               	goto	clrloop0	;do the next byte
   264                           
   265                           	psect	cstackCOMMON
   266  0070                     __pcstackCOMMON:	
   267  0070                     ?_pwm13Stop:	
   268  0070                     ?_pwm1Init:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_pwm3Stop:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_pwm3Init:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_pwm1Stop:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_pwm13Init:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_SystemEnterSleep:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_CheckTouchKey:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_Init_System:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_Refurbish_Sfr:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_KeyServer:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_Isr_Timer:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ??_Isr_Timer:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_WorkSleep:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_main:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_KeyIsIn:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_KeyClearOne:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_KeyClearIn:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_KeyStopClear:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_ClearResSum:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_KeyHave:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_GetTouchKeyValue:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_CheckOnceResult:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_CheckKeyOldValue:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_TurnKeyFlags:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_CheckValidTime:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 1 bytes @ 0x0
   345  0070                     	ds	2
   346  0072                     ??_pwm13Stop:	
   347  0072                     ??_pwm1Init:	
   348                           ; 1 bytes @ 0x2
   349                           
   350  0072                     ??_pwm3Stop:	
   351                           ; 1 bytes @ 0x2
   352                           
   353  0072                     ??_pwm3Init:	
   354                           ; 1 bytes @ 0x2
   355                           
   356  0072                     ??_pwm1Stop:	
   357                           ; 1 bytes @ 0x2
   358                           
   359  0072                     ??_pwm13Init:	
   360                           ; 1 bytes @ 0x2
   361                           
   362  0072                     ?_JudgeKeyOldData:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     ?_RKeyOldData:	
   366                           ; 1 bytes @ 0x2
   367                           
   368  0072                     ??_Init_System:	
   369                           ; 1 bytes @ 0x2
   370                           
   371  0072                     ??_Refurbish_Sfr:	
   372                           ; 1 bytes @ 0x2
   373                           
   374  0072                     ??_KeyIsIn:	
   375                           ; 1 bytes @ 0x2
   376                           
   377  0072                     ??_KeyClearOne:	
   378                           ; 1 bytes @ 0x2
   379                           
   380  0072                     ??_ClearResSum:	
   381                           ; 1 bytes @ 0x2
   382                           
   383  0072                     ??_KeyHave:	
   384                           ; 1 bytes @ 0x2
   385                           
   386  0072                     ??_CheckValidTime:	
   387                           ; 1 bytes @ 0x2
   388                           
   389  0072                     ?___lwmod:	
   390                           ; 1 bytes @ 0x2
   391                           
   392  0072                     KeyIsIn@377:	
   393                           ; 2 bytes @ 0x2
   394                           
   395  0072                     KeyClearOne@381:	
   396                           ; 1 bytes @ 0x2
   397                           
   398  0072                     ClearResSum@388:	
   399                           ; 1 bytes @ 0x2
   400                           
   401  0072                     KeyHave@390:	
   402                           ; 1 bytes @ 0x2
   403                           
   404  0072                     JudgeKeyOldData@428:	
   405                           ; 1 bytes @ 0x2
   406                           
   407  0072                     RKeyOldData@431:	
   408                           ; 2 bytes @ 0x2
   409                           
   410  0072                     ___lwmod@divisor:	
   411                           ; 2 bytes @ 0x2
   412                           
   413                           
   414                           ; 2 bytes @ 0x2
   415  0072                     	ds	1
   416  0073                     ??_KeyStopClear:	
   417  0073                     ??_GetTouchKeyValue:	
   418                           ; 1 bytes @ 0x3
   419                           
   420  0073                     KeyIsIn@378:	
   421                           ; 1 bytes @ 0x3
   422                           
   423  0073                     KeyStopClear@385:	
   424                           ; 1 bytes @ 0x3
   425                           
   426  0073                     GetTouchKeyValue@395:	
   427                           ; 1 bytes @ 0x3
   428                           
   429                           
   430                           ; 2 bytes @ 0x3
   431  0073                     	ds	1
   432  0074                     ??_JudgeKeyOldData:	
   433  0074                     ??_RKeyOldData:	
   434                           ; 1 bytes @ 0x4
   435                           
   436  0074                     ??_KeyClearIn:	
   437                           ; 1 bytes @ 0x4
   438                           
   439  0074                     ??_CheckOnceResult:	
   440                           ; 1 bytes @ 0x4
   441                           
   442  0074                     KeyClearIn@383:	
   443                           ; 1 bytes @ 0x4
   444                           
   445  0074                     JudgeKeyOldData@427:	
   446                           ; 1 bytes @ 0x4
   447                           
   448  0074                     ___lwmod@dividend:	
   449                           ; 1 bytes @ 0x4
   450                           
   451                           
   452                           ; 2 bytes @ 0x4
   453  0074                     	ds	1
   454  0075                     ??_TurnKeyFlags:	
   455  0075                     GetTouchKeyValue@394:	
   456                           ; 1 bytes @ 0x5
   457                           
   458  0075                     JudgeKeyOldData@429:	
   459                           ; 1 bytes @ 0x5
   460                           
   461                           
   462                           ; 2 bytes @ 0x5
   463  0075                     	ds	1
   464  0076                     ??___lwmod:	
   465  0076                     GetTouchKeyValue@393:	
   466                           ; 1 bytes @ 0x6
   467                           
   468  0076                     RKeyOldData@430:	
   469                           ; 1 bytes @ 0x6
   470                           
   471  0076                     ___lwmod@counter:	
   472                           ; 1 bytes @ 0x6
   473                           
   474                           
   475                           ; 1 bytes @ 0x6
   476  0076                     	ds	1
   477  0077                     ??_KeyServer:	
   478  0077                     ??_WorkSleep:	
   479                           ; 1 bytes @ 0x7
   480                           
   481  0077                     ??_CheckKeyOldValue:	
   482                           ; 1 bytes @ 0x7
   483                           
   484                           
   485                           ; 1 bytes @ 0x7
   486  0077                     	ds	1
   487  0078                     ??_CheckTouchKey:	
   488  0078                     ??_main:	
   489                           ; 1 bytes @ 0x8
   490                           
   491                           
   492                           	psect	cstackBANK0
   493  003B                     __pcstackBANK0:	
   494                           ; 1 bytes @ 0x8
   495                           
   496  003B                     ??_SystemEnterSleep:	
   497  003B                     CheckOnceResult@406:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  003B                     CheckKeyOldValue@412:	
   501                           ; 2 bytes @ 0x0
   502                           
   503                           
   504                           ; 2 bytes @ 0x0
   505  003B                     	ds	2
   506  003D                     CheckOnceResult@403:	
   507  003D                     CheckKeyOldValue@411:	
   508                           ; 1 bytes @ 0x2
   509                           
   510  003D                     SystemEnterSleep@424:	
   511                           ; 1 bytes @ 0x2
   512                           
   513                           
   514                           ; 2 bytes @ 0x2
   515  003D                     	ds	1
   516  003E                     CheckOnceResult@405:	
   517                           
   518                           ; 2 bytes @ 0x3
   519  003E                     	ds	1
   520  003F                     SystemEnterSleep@426:	
   521                           
   522                           ; 2 bytes @ 0x4
   523  003F                     	ds	1
   524  0040                     CheckOnceResult@402:	
   525                           
   526                           ; 1 bytes @ 0x5
   527  0040                     	ds	1
   528  0041                     CheckOnceResult@404:	
   529  0041                     SystemEnterSleep@425:	
   530                           ; 2 bytes @ 0x6
   531                           
   532                           
   533                           ; 2 bytes @ 0x6
   534  0041                     	ds	2
   535  0043                     CheckOnceResult@401:	
   536  0043                     SystemEnterSleep@423:	
   537                           ; 1 bytes @ 0x8
   538                           
   539                           
   540                           ; 1 bytes @ 0x8
   541  0043                     	ds	1
   542                           
   543                           	psect	maintext
   544  03B3                     __pmaintext:	
   545 ;;
   546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   547 ;;
   548 ;; *************** function _main *****************
   549 ;; Defined at:
   550 ;;		line 289 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   559 ;; Tracked objects:
   560 ;;		On entry : B00/0
   561 ;;		On exit  : 300/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMMON   BANK0   BANK1
   564 ;;      Params:         0       0       0
   565 ;;      Locals:         0       0       0
   566 ;;      Temps:          0       0       0
   567 ;;      Totals:         0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels required when called:    6
   570 ;; This function calls:
   571 ;;		_CheckTouchKey
   572 ;;		_Init_System
   573 ;;		_KeyServer
   574 ;;		_Refurbish_Sfr
   575 ;;		_WorkSleep
   576 ;;		_pwm13Stop
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _main
   584  03B3                     _main:	
   585                           
   586                           ;main.c: 291: Init_System();
   587                           
   588                           ;incstack = 0
   589                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   590  03B3  23C7               	fcall	_Init_System
   591                           
   592                           ;main.c: 292: ledDuty = 50;
   593  03B4  3032               	movlw	50
   594  03B5  00FB               	movwf	_ledDuty
   595  03B6                     l2971:	
   596                           
   597                           ;main.c: 294: {
   598                           ;main.c: 295: if(B_MainLoop)
   599  03B6  1F78               	btfss	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
   600  03B7  2BB6               	goto	l2971
   601                           
   602                           ;main.c: 296: {
   603                           ;main.c: 297: B_MainLoop = 0;
   604  03B8  1378               	bcf	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
   605  03B9  0064               	clrwdt	;# 
   606                           
   607                           ;main.c: 300: CheckTouchKey();
   608  03BA  22AA               	fcall	_CheckTouchKey
   609                           
   610                           ;main.c: 302: Refurbish_Sfr();
   611  03BB  23EA               	fcall	_Refurbish_Sfr
   612                           
   613                           ;main.c: 303: KeyServer();
   614  03BC  2174               	fcall	_KeyServer
   615                           
   616                           ;main.c: 305: if(workStep == 0 && keyCount == 0)
   617  03BD  0879               	movf	_workStep,w
   618  03BE  1D03               	btfss	3,2
   619  03BF  2BB6               	goto	l2971
   620  03C0  0826               	movf	_keyCount,w
   621  03C1  0427               	iorwf	_keyCount+1,w
   622  03C2  1D03               	btfss	3,2
   623  03C3  2BB6               	goto	l2971
   624                           
   625                           ;main.c: 306: {
   626                           ;main.c: 308: pwm13Stop();
   627  03C4  2450               	fcall	_pwm13Stop
   628                           
   629                           ;main.c: 309: WorkSleep();
   630  03C5  2359               	fcall	_WorkSleep
   631  03C6  2BB6               	goto	l2971
   632  03C7                     __end_of_main:	
   633                           
   634                           	psect	text1
   635  0359                     __ptext1:	
   636 ;; *************** function _WorkSleep *****************
   637 ;; Defined at:
   638 ;;		line 241 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 300/0
   649 ;;		On exit  : 300/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1
   652 ;;      Params:         0       0       0
   653 ;;      Locals:         0       0       0
   654 ;;      Temps:          0       0       0
   655 ;;      Totals:         0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    4
   659 ;; This function calls:
   660 ;;		_Refurbish_Sfr
   661 ;;		_SystemEnterSleep
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _WorkSleep
   669  0359                     _WorkSleep:	
   670                           
   671                           ;main.c: 244: static unsigned char time;
   672                           ;main.c: 248: if(++time >= 125)
   673                           
   674                           ;incstack = 0
   675                           ; Regs used in _WorkSleep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   676  0359  307D               	movlw	125
   677  035A  0AB7               	incf	WorkSleep@time,f
   678  035B  0237               	subwf	WorkSleep@time,w
   679  035C  1C03               	skipc
   680  035D  0008               	return
   681                           
   682                           ;main.c: 249: {
   683                           ;main.c: 250: time = 0;
   684  035E  01B7               	clrf	WorkSleep@time
   685                           
   686                           ;main.c: 251: INTCON = 0;
   687  035F  018B               	clrf	11	;volatile
   688                           
   689                           ;main.c: 252: PIE1 = 0;
   690  0360  018E               	clrf	14	;volatile
   691                           
   692                           ;main.c: 253: PIE2 = 0;
   693  0361  1703               	bsf	3,6	;RP1=1, select bank2
   694  0362  0190               	clrf	16	;volatile
   695                           
   696                           ;main.c: 254: PIR1 = 0;
   697  0363  1303               	bcf	3,6	;RP1=0, select bank0
   698  0364  018D               	clrf	13	;volatile
   699                           
   700                           ;main.c: 255: PIR2 = 0;
   701  0365  1703               	bsf	3,6	;RP1=1, select bank2
   702  0366  018F               	clrf	15	;volatile
   703                           
   704                           ;main.c: 256: T2CON = 0;
   705  0367  1303               	bcf	3,6	;RP1=0, select bank0
   706  0368  0193               	clrf	19	;volatile
   707                           
   708                           ;main.c: 260: TRISB = 0x00;
   709  0369  0185               	clrf	5	;volatile
   710                           
   711                           ;main.c: 261: PORTB = 0;
   712  036A  0186               	clrf	6	;volatile
   713                           
   714                           ;main.c: 274: SystemEnterSleep();
   715  036B  20FF               	fcall	_SystemEnterSleep
   716                           
   717                           ;main.c: 275: if(RBIF)
   718  036C  1C0B               	btfss	11,0	;volatile
   719  036D  2B70               	goto	l2929
   720                           
   721                           ;main.c: 276: {
   722                           ;main.c: 277: RBIF = 0;
   723  036E  100B               	bcf	11,0	;volatile
   724                           
   725                           ;main.c: 278: PORTB;
   726  036F  0806               	movf	6,w	;volatile
   727  0370                     l2929:	
   728                           
   729                           ;main.c: 279: }
   730                           ;main.c: 281: Refurbish_Sfr();
   731  0370  2BEA               	ljmp	l2187
   732  0371                     __end_of_WorkSleep:	
   733                           
   734                           	psect	text2
   735  00FF                     __ptext2:	
   736 ;; *************** function _SystemEnterSleep *****************
   737 ;; Defined at:
   738 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  425             2    6[BANK0 ] unsigned int 
   743 ;;  426             2    4[BANK0 ] unsigned int 
   744 ;;  424             2    2[BANK0 ] unsigned int 
   745 ;;  423             1    8[BANK0 ] unsigned char 
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 300/0
   752 ;;		On exit  : 300/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1
   755 ;;      Params:         0       0       0
   756 ;;      Locals:         0       7       0
   757 ;;      Temps:          0       2       0
   758 ;;      Totals:         0       9       0
   759 ;;Total ram usage:        9 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    3
   762 ;; This function calls:
   763 ;;		_ClearResSum
   764 ;;		_GetTouchKeyValue
   765 ;;		_JudgeKeyOldData
   766 ;;		_RKeyOldData
   767 ;; This function is called by:
   768 ;;		_WorkSleep
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _SystemEnterSleep
   774  00FF                     _SystemEnterSleep:	
   775  00FF                     l1056:	
   776                           ;incstack = 0
   777                           ; Regs used in _SystemEnterSleep: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   778                           
   779  00FF  0064               	clrwdt	;# 
   780  0100  1683               	bsf	3,5	;RP0=1, select bank1
   781  0101  1303               	bcf	3,6	;RP1=0, select bank1
   782  0102  0181               	clrf	1	;volatile
   783  0103  3007               	movlw	7
   784  0104  1283               	bcf	3,5	;RP0=0, select bank0
   785  0105  0481               	iorwf	1,f	;volatile
   786  0106  1581               	bsf	1,3	;volatile
   787  0107  0064               	clrwdt	;# 
   788  0108  300B               	movlw	11
   789  0109  1283               	bcf	3,5	;RP0=0, select bank0
   790  010A  1303               	bcf	3,6	;RP1=0, select bank0
   791  010B  0081               	movwf	1	;volatile
   792  010C  0064               	clrwdt	;# 
   793  010D  1283               	bcf	3,5	;RP0=0, select bank2
   794  010E  1703               	bsf	3,6	;RP1=1, select bank2
   795  010F  0191               	clrf	17	;volatile
   796  0110  0193               	clrf	19	;volatile
   797  0111  1303               	bcf	3,6	;RP1=0, select bank0
   798  0112  1305               	bcf	5,6	;volatile
   799  0113  1306               	bcf	6,6	;volatile
   800  0114  3072               	movlw	114
   801  0115  0094               	movwf	20	;volatile
   802  0116  0063               	sleep	;# 
   803  0117  0000               	nop	;# 
   804  0118  0064               	clrwdt	;# 
   805  0119  1283               	bcf	3,5	;RP0=0, select bank0
   806  011A  1303               	bcf	3,6	;RP1=0, select bank0
   807  011B  0094               	movwf	20	;volatile
   808  011C  3079               	movlw	121
   809  011D  1703               	bsf	3,6	;RP1=1, select bank2
   810  011E  0093               	movwf	19	;volatile
   811  011F  2407               	fcall	_ClearResSum
   812  0120  1478               	bsf	_b_ksleep/(0+8),_b_ksleep& (0+7)	;volatile
   813  0121  21E6               	fcall	_GetTouchKeyValue
   814  0122  1283               	bcf	3,5	;RP0=0, select bank0
   815  0123  1303               	bcf	3,6	;RP1=0, select bank0
   816  0124  01C3               	clrf	SystemEnterSleep@423
   817  0125  01BD               	clrf	SystemEnterSleep@424
   818  0126  0ABD               	incf	SystemEnterSleep@424,f
   819  0127  01BE               	clrf	SystemEnterSleep@424+1
   820  0128  180B               	btfsc	11,0	;volatile
   821  0129  292C               	goto	l2761
   822  012A  1C8B               	btfss	11,1	;volatile
   823  012B  2933               	goto	l1062
   824  012C                     l2761:	
   825  012C  2407               	fcall	_ClearResSum
   826  012D  1283               	bcf	3,5	;RP0=0, select bank0
   827  012E  1303               	bcf	3,6	;RP1=0, select bank0
   828  012F  01B6               	clrf	_KeyCounter
   829  0130  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
   830  0131  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
   831  0132  0008               	return
   832  0133                     l1062:	
   833  0133  1C3D               	btfss	SystemEnterSleep@424,0
   834  0134  296C               	goto	l2793
   835  0135  1003               	clrc
   836  0136  0D43               	rlf	SystemEnterSleep@423,w
   837  0137  3E30               	addlw	(low (_KeyResSum| 0))& (0+255)
   838  0138  0084               	movwf	4
   839  0139  1383               	bcf	3,7	;select IRP bank0
   840  013A  0800               	movf	0,w
   841  013B  00C1               	movwf	SystemEnterSleep@425
   842  013C  0A84               	incf	4,f
   843  013D  0800               	movf	0,w
   844  013E  00C2               	movwf	SystemEnterSleep@425+1
   845  013F  00C0               	movwf	SystemEnterSleep@426+1
   846  0140  0841               	movf	SystemEnterSleep@425,w
   847  0141  00BF               	movwf	SystemEnterSleep@426
   848  0142  0841               	movf	SystemEnterSleep@425,w
   849  0143  0442               	iorwf	SystemEnterSleep@425+1,w
   850  0144  1903               	btfsc	3,2
   851  0145  296C               	goto	l2793
   852  0146  0843               	movf	SystemEnterSleep@423,w
   853  0147  3E09               	addlw	low ((_Table_KeyDown-__stringbase)| (0+32768))
   854  0148  0084               	movwf	4
   855  0149  23DA               	fcall	stringdir
   856  014A  07BF               	addwf	SystemEnterSleep@426,f
   857  014B  1803               	skipnc
   858  014C  0AC0               	incf	SystemEnterSleep@426+1,f
   859  014D  1003               	clrc
   860  014E  0D43               	rlf	SystemEnterSleep@423,w
   861  014F  3E2A               	addlw	(low (_KeyOldValue2| 0))& (0+255)
   862  0150  0084               	movwf	4
   863  0151  0800               	movf	0,w
   864  0152  00BB               	movwf	??_SystemEnterSleep
   865  0153  0A84               	incf	4,f
   866  0154  0800               	movf	0,w
   867  0155  00BC               	movwf	??_SystemEnterSleep+1
   868  0156  0840               	movf	SystemEnterSleep@426+1,w
   869  0157  023C               	subwf	??_SystemEnterSleep+1,w
   870  0158  1D03               	skipz
   871  0159  295C               	goto	u1705
   872  015A  083F               	movf	SystemEnterSleep@426,w
   873  015B  023B               	subwf	??_SystemEnterSleep,w
   874  015C                     u1705:	
   875  015C  1803               	btfsc	3,0
   876  015D  292C               	goto	l2761
   877  015E  0842               	movf	SystemEnterSleep@425+1,w
   878  015F  00F3               	movwf	JudgeKeyOldData@428+1
   879  0160  0841               	movf	SystemEnterSleep@425,w
   880  0161  00F2               	movwf	JudgeKeyOldData@428
   881  0162  0843               	movf	SystemEnterSleep@423,w
   882  0163  2233               	fcall	_JudgeKeyOldData
   883  0164  1283               	bcf	3,5	;RP0=0, select bank0
   884  0165  1303               	bcf	3,6	;RP1=0, select bank0
   885  0166  0842               	movf	SystemEnterSleep@425+1,w
   886  0167  00F3               	movwf	RKeyOldData@431+1
   887  0168  0841               	movf	SystemEnterSleep@425,w
   888  0169  00F2               	movwf	RKeyOldData@431
   889  016A  0843               	movf	SystemEnterSleep@423,w
   890  016B  22F7               	fcall	_RKeyOldData
   891  016C                     l2793:	
   892  016C  1283               	bcf	3,5	;RP0=0, select bank0
   893  016D  1303               	bcf	3,6	;RP1=0, select bank0
   894  016E  1003               	clrc
   895  016F  0DBD               	rlf	SystemEnterSleep@424,f
   896  0170  0DBE               	rlf	SystemEnterSleep@424+1,f
   897  0171  0FC3               	incfsz	SystemEnterSleep@423,f
   898  0172  28FF               	goto	l1056
   899  0173  2933               	goto	l1062
   900  0174                     __end_of_SystemEnterSleep:	
   901                           
   902                           	psect	text3
   903  03EA                     __ptext3:	
   904 ;; *************** function _Refurbish_Sfr *****************
   905 ;; Defined at:
   906 ;;		line 54 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 300/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1
   920 ;;      Params:         0       0       0
   921 ;;      Locals:         0       0       0
   922 ;;      Temps:          0       0       0
   923 ;;      Totals:         0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_WorkSleep
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _Refurbish_Sfr
   937  03EA                     _Refurbish_Sfr:	
   938  03EA                     l2187:	
   939                           ;incstack = 0
   940                           ; Regs used in _Refurbish_Sfr: [wreg+status,2+status,0]
   941                           
   942                           
   943                           ;main.c: 57: PIE1 = 2;
   944  03EA  3002               	movlw	2
   945  03EB  1283               	bcf	3,5	;RP0=0, select bank0
   946  03EC  1303               	bcf	3,6	;RP1=0, select bank0
   947  03ED  008E               	movwf	14	;volatile
   948                           
   949                           ;main.c: 58: PR2 = 250;
   950  03EE  30FA               	movlw	250
   951  03EF  0091               	movwf	17	;volatile
   952                           
   953                           ;main.c: 59: INTCON = 0XC0;
   954  03F0  30C0               	movlw	192
   955  03F1  008B               	movwf	11	;volatile
   956                           
   957                           ;main.c: 60: if (4 != T2CON)
   958  03F2  3004               	movlw	4
   959  03F3  0613               	xorwf	19,w	;volatile
   960  03F4  1903               	btfsc	3,2
   961  03F5  0008               	return
   962                           
   963                           ;main.c: 61: T2CON = 4;
   964  03F6  3004               	movlw	4
   965  03F7  0093               	movwf	19	;volatile
   966  03F8  0008               	return
   967  03F9                     __end_of_Refurbish_Sfr:	
   968                           
   969                           	psect	text4
   970  0174                     __ptext4:	
   971 ;; *************** function _KeyServer *****************
   972 ;; Defined at:
   973 ;;		line 68 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0, pclath, cstack
   982 ;; Tracked objects:
   983 ;;		On entry : 300/0
   984 ;;		On exit  : 300/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1
   987 ;;      Params:         0       0       0
   988 ;;      Locals:         0       0       0
   989 ;;      Temps:          0       0       0
   990 ;;      Totals:         0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    2
   994 ;; This function calls:
   995 ;;		___lwmod
   996 ;;		_pwm13Init
   997 ;;		_pwm13Stop
   998 ;;		_pwm1Init
   999 ;;		_pwm1Stop
  1000 ;;		_pwm3Init
  1001 ;;		_pwm3Stop
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _KeyServer
  1009  0174                     _KeyServer:	
  1010                           
  1011                           ;main.c: 70: static unsigned char KeyOldFlag = 0;
  1012                           ;main.c: 71: if (KeyFlag[0])
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _KeyServer: [wreg+status,2+status,0+pclath+cstack]
  1016  0174  087A               	movf	_KeyFlag,w	;volatile
  1017  0175  1903               	btfsc	3,2
  1018  0176  29AC               	goto	l2541
  1019                           
  1020                           ;main.c: 72: {
  1021                           ;main.c: 73: if ((KeyFlag[0] & 0x1))
  1022  0177  1C7A               	btfss	_KeyFlag,0	;volatile
  1023  0178  0008               	return
  1024                           
  1025                           ;main.c: 74: {
  1026                           ;main.c: 75: keyCount++;
  1027  0179  0AA6               	incf	_keyCount,f
  1028  017A  1903               	skipnz
  1029  017B  0AA7               	incf	_keyCount+1,f
  1030                           
  1031                           ;main.c: 77: if(keyCount > 250 && keyCount % 10 == 0 && workStep > 0)
  1032  017C  3000               	movlw	0
  1033  017D  0227               	subwf	_keyCount+1,w
  1034  017E  30FB               	movlw	251
  1035  017F  1903               	skipnz
  1036  0180  0226               	subwf	_keyCount,w
  1037  0181  1C03               	skipc
  1038  0182  29A9               	goto	l2539
  1039  0183  300A               	movlw	10
  1040  0184  00F2               	movwf	___lwmod@divisor
  1041  0185  01F3               	clrf	___lwmod@divisor+1
  1042  0186  0827               	movf	_keyCount+1,w
  1043  0187  00F5               	movwf	___lwmod@dividend+1
  1044  0188  0826               	movf	_keyCount,w
  1045  0189  00F4               	movwf	___lwmod@dividend
  1046  018A  231C               	fcall	___lwmod
  1047  018B  0872               	movf	?___lwmod,w
  1048  018C  0473               	iorwf	?___lwmod+1,w
  1049  018D  1D03               	btfss	3,2
  1050  018E  29A9               	goto	l2539
  1051  018F  0879               	movf	_workStep,w
  1052  0190  1903               	btfsc	3,2
  1053  0191  29A9               	goto	l2539
  1054                           
  1055                           ;main.c: 78: {
  1056                           ;main.c: 79: if(modeStep == 0 && ledDuty < 90)
  1057  0192  0838               	movf	_modeStep,w
  1058  0193  1D03               	btfss	3,2
  1059  0194  299A               	goto	l2525
  1060  0195  305A               	movlw	90
  1061  0196  027B               	subwf	_ledDuty,w
  1062  0197  1803               	skipnc
  1063  0198  299A               	goto	l2525
  1064                           
  1065                           ;main.c: 80: {
  1066                           ;main.c: 81: ledDuty++;
  1067  0199  0AFB               	incf	_ledDuty,f
  1068  019A                     l2525:	
  1069                           
  1070                           ;main.c: 82: }
  1071                           ;main.c: 83: if(modeStep == 1 && ledDuty > 10)
  1072  019A  0B38               	decfsz	_modeStep,w
  1073  019B  29A1               	goto	l2531
  1074  019C  300B               	movlw	11
  1075  019D  027B               	subwf	_ledDuty,w
  1076  019E  1C03               	skipc
  1077  019F  29A1               	goto	l2531
  1078                           
  1079                           ;main.c: 84: {
  1080                           ;main.c: 85: ledDuty--;
  1081  01A0  03FB               	decf	_ledDuty,f
  1082  01A1                     l2531:	
  1083                           
  1084                           ;main.c: 86: }
  1085                           ;main.c: 87: PWMD23H = 0;
  1086  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1087  01A2  019E               	clrf	30	;volatile
  1088                           
  1089                           ;main.c: 88: PWMD3L = ledDuty;
  1090  01A3  087B               	movf	_ledDuty,w
  1091  01A4  009C               	movwf	28	;volatile
  1092                           
  1093                           ;main.c: 89: PWMD01H = 0;
  1094  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1095  01A6  019E               	clrf	30	;volatile
  1096                           
  1097                           ;main.c: 90: PWMD1L = ledDuty;
  1098  01A7  087B               	movf	_ledDuty,w
  1099  01A8  009A               	movwf	26	;volatile
  1100  01A9                     l2539:	
  1101                           
  1102                           ;main.c: 91: }
  1103                           ;main.c: 92: B_OnOff = !B_OnOff;
  1104  01A9  3020               	movlw	(0+1) shl (_B_OnOff& (0+7))
  1105  01AA  06F8               	xorwf	_B_OnOff/(0+8),f
  1106  01AB  0008               	return
  1107  01AC                     l2541:	
  1108                           
  1109                           ;main.c: 98: if(keyCount > 0 && keyCount < 250)
  1110  01AC  0826               	movf	_keyCount,w
  1111  01AD  0427               	iorwf	_keyCount+1,w
  1112  01AE  3000               	movlw	0
  1113  01AF  1903               	btfsc	3,2
  1114  01B0  29D3               	goto	L1
  1115  01B1  0227               	subwf	_keyCount+1,w
  1116  01B2  30FA               	movlw	250
  1117  01B3  1903               	skipnz
  1118  01B4  0226               	subwf	_keyCount,w
  1119  01B5  1803               	skipnc
  1120  01B6  29D2               	goto	l2569
  1121                           
  1122                           ;main.c: 99: {
  1123                           ;main.c: 100: if(++workStep > 3)
  1124  01B7  3004               	movlw	4
  1125  01B8  0AF9               	incf	_workStep,f
  1126  01B9  0279               	subwf	_workStep,w
  1127  01BA  1803               	btfsc	3,0
  1128                           
  1129                           ;main.c: 101: {
  1130                           ;main.c: 102: workStep = 0;
  1131  01BB  01F9               	clrf	_workStep
  1132                           
  1133                           ;main.c: 103: }
  1134                           ;main.c: 104: if(workStep == 0)
  1135  01BC  0879               	movf	_workStep,w
  1136  01BD  1D03               	btfss	3,2
  1137  01BE  29C1               	goto	l2553
  1138                           
  1139                           ;main.c: 105: {
  1140                           ;main.c: 106: pwm13Stop();
  1141  01BF  2450               	fcall	_pwm13Stop
  1142                           
  1143                           ;main.c: 107: }
  1144  01C0  29D2               	goto	l2569
  1145  01C1                     l2553:	
  1146                           
  1147                           ;main.c: 108: else if(workStep == 1)
  1148  01C1  0B79               	decfsz	_workStep,w
  1149  01C2  29C6               	goto	l2559
  1150                           
  1151                           ;main.c: 109: {
  1152                           ;main.c: 110: pwm1Init();
  1153  01C3  23F9               	fcall	_pwm1Init
  1154                           
  1155                           ;main.c: 111: pwm3Stop();
  1156  01C4  2455               	fcall	_pwm3Stop
  1157                           
  1158                           ;main.c: 112: }
  1159  01C5  29D2               	goto	l2569
  1160  01C6                     l2559:	
  1161                           
  1162                           ;main.c: 113: else if(workStep == 2)
  1163  01C6  3002               	movlw	2
  1164  01C7  0679               	xorwf	_workStep,w
  1165  01C8  1D03               	btfss	3,2
  1166  01C9  29CD               	goto	l2565
  1167                           
  1168                           ;main.c: 114: {
  1169                           ;main.c: 115: pwm3Init();
  1170  01CA  2441               	fcall	_pwm3Init
  1171                           
  1172                           ;main.c: 116: pwm1Stop();
  1173  01CB  2458               	fcall	_pwm1Stop
  1174                           
  1175                           ;main.c: 117: }
  1176  01CC  29D2               	goto	l2569
  1177  01CD                     l2565:	
  1178                           
  1179                           ;main.c: 118: else if(workStep == 3)
  1180  01CD  3003               	movlw	3
  1181  01CE  0679               	xorwf	_workStep,w
  1182  01CF  1D03               	btfss	3,2
  1183  01D0  29D2               	goto	l2569
  1184                           
  1185                           ;main.c: 119: {
  1186                           ;main.c: 120: pwm13Init();
  1187  01D1  2371               	fcall	_pwm13Init
  1188  01D2                     l2569:	
  1189                           
  1190                           ;main.c: 121: }
  1191                           ;main.c: 122: }
  1192                           ;main.c: 123: if(keyCount > 250 && workStep > 0)
  1193  01D2  3000               	movlw	0
  1194  01D3                     L1:	
  1195  01D3  0227               	subwf	_keyCount+1,w
  1196  01D4  30FB               	movlw	251
  1197  01D5  1903               	skipnz
  1198  01D6  0226               	subwf	_keyCount,w
  1199  01D7  1C03               	skipc
  1200  01D8  29E3               	goto	l2577
  1201  01D9  0879               	movf	_workStep,w
  1202  01DA  1903               	btfsc	3,2
  1203  01DB  29E3               	goto	l2577
  1204                           
  1205                           ;main.c: 124: {
  1206                           ;main.c: 125: if(modeStep > 0)
  1207  01DC  0838               	movf	_modeStep,w
  1208  01DD  1903               	btfsc	3,2
  1209  01DE  29E1               	goto	l466
  1210                           
  1211                           ;main.c: 126: {
  1212                           ;main.c: 127: modeStep = 0;
  1213  01DF  01B8               	clrf	_modeStep
  1214                           
  1215                           ;main.c: 128: }
  1216  01E0  29E3               	goto	l2577
  1217  01E1                     l466:	
  1218                           
  1219                           ;main.c: 129: else
  1220                           ;main.c: 130: {
  1221                           ;main.c: 131: modeStep = 1;
  1222  01E1  01B8               	clrf	_modeStep
  1223  01E2  0AB8               	incf	_modeStep,f
  1224  01E3                     l2577:	
  1225                           
  1226                           ;main.c: 132: }
  1227                           ;main.c: 133: }
  1228                           ;main.c: 134: keyCount = 0;
  1229  01E3  01A6               	clrf	_keyCount
  1230  01E4  01A7               	clrf	_keyCount+1
  1231  01E5  0008               	return
  1232  01E6                     __end_of_KeyServer:	
  1233                           
  1234                           	psect	text5
  1235  0455                     __ptext5:	
  1236 ;; *************** function _pwm3Stop *****************
  1237 ;; Defined at:
  1238 ;;		line 156 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;		None
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		None
  1247 ;; Tracked objects:
  1248 ;;		On entry : 300/0
  1249 ;;		On exit  : 300/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1
  1252 ;;      Params:         0       0       0
  1253 ;;      Locals:         0       0       0
  1254 ;;      Temps:          0       0       0
  1255 ;;      Totals:         0       0       0
  1256 ;;Total ram usage:        0 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_KeyServer
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _pwm3Stop
  1268  0455                     _pwm3Stop:	
  1269                           
  1270                           ;main.c: 158: PWMCON0 &= 0XF7;
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in _pwm3Stop: []
  1274  0455  1195               	bcf	21,3	;volatile
  1275                           
  1276                           ;main.c: 159: RB4 = 0;
  1277  0456  1206               	bcf	6,4	;volatile
  1278  0457  0008               	return
  1279  0458                     __end_of_pwm3Stop:	
  1280                           
  1281                           	psect	text6
  1282  0441                     __ptext6:	
  1283 ;; *************** function _pwm3Init *****************
  1284 ;; Defined at:
  1285 ;;		line 138 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2
  1294 ;; Tracked objects:
  1295 ;;		On entry : 300/0
  1296 ;;		On exit  : 300/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1
  1299 ;;      Params:         0       0       0
  1300 ;;      Locals:         0       0       0
  1301 ;;      Temps:          0       0       0
  1302 ;;      Totals:         0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_KeyServer
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _pwm3Init
  1315  0441                     _pwm3Init:	
  1316                           
  1317                           ;main.c: 141: TRISB |= 0x10;
  1318                           
  1319                           ;incstack = 0
  1320                           ; Regs used in _pwm3Init: [wreg+status,2]
  1321  0441  1605               	bsf	5,4	;volatile
  1322                           
  1323                           ;main.c: 142: PWMCON1 = 0B00000000;
  1324                           
  1325                           ;main.c: 143: PWMTH = 0X00;
  1326                           
  1327                           ;main.c: 145: PWMTL = 100;
  1328                           
  1329                           ;main.c: 146: PWMD23H = 0;
  1330                           
  1331                           ;main.c: 147: PWMD3L = ledDuty;
  1332                           
  1333                           ;main.c: 148: PWM23DT = 0X00;
  1334  0442  237F               	fcall	PL10	;call to abstracted procedure
  1335                           
  1336                           ;main.c: 150: PWMCON0 = 0X68;
  1337  0443  3068               	movlw	104
  1338  0444  1283               	bcf	3,5	;RP0=0, select bank0
  1339  0445  0095               	movwf	21	;volatile
  1340                           
  1341                           ;main.c: 151: PWMCON2 =0X00;
  1342  0446  019D               	clrf	29	;volatile
  1343                           
  1344                           ;main.c: 152: TRISB &= 0xEF;
  1345  0447  1205               	bcf	5,4	;volatile
  1346  0448  0008               	return
  1347  0449                     __end_of_pwm3Init:	
  1348                           
  1349                           	psect	text7
  1350  0458                     __ptext7:	
  1351 ;; *************** function _pwm1Stop *****************
  1352 ;; Defined at:
  1353 ;;		line 182 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		None
  1362 ;; Tracked objects:
  1363 ;;		On entry : 300/0
  1364 ;;		On exit  : 300/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1
  1367 ;;      Params:         0       0       0
  1368 ;;      Locals:         0       0       0
  1369 ;;      Temps:          0       0       0
  1370 ;;      Totals:         0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_KeyServer
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _pwm1Stop
  1383  0458                     _pwm1Stop:	
  1384                           
  1385                           ;main.c: 184: PWMCON0 &= 0XFD;
  1386                           
  1387                           ;incstack = 0
  1388                           ; Regs used in _pwm1Stop: []
  1389  0458  1095               	bcf	21,1	;volatile
  1390                           
  1391                           ;main.c: 185: RB1 = 0;
  1392  0459  1086               	bcf	6,1	;volatile
  1393  045A  0008               	return
  1394  045B                     __end_of_pwm1Stop:	
  1395                           
  1396                           	psect	text8
  1397  03F9                     __ptext8:	
  1398 ;; *************** function _pwm1Init *****************
  1399 ;; Defined at:
  1400 ;;		line 164 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2
  1409 ;; Tracked objects:
  1410 ;;		On entry : 300/0
  1411 ;;		On exit  : 300/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1
  1414 ;;      Params:         0       0       0
  1415 ;;      Locals:         0       0       0
  1416 ;;      Temps:          0       0       0
  1417 ;;      Totals:         0       0       0
  1418 ;;Total ram usage:        0 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    1
  1421 ;; This function calls:
  1422 ;;		Nothing
  1423 ;; This function is called by:
  1424 ;;		_KeyServer
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _pwm1Init
  1430  03F9                     _pwm1Init:	
  1431                           
  1432                           ;main.c: 166: TRISB |= 0x02;
  1433                           
  1434                           ;incstack = 0
  1435                           ; Regs used in _pwm1Init: [wreg+status,2]
  1436  03F9  1485               	bsf	5,1	;volatile
  1437                           
  1438                           ;main.c: 167: PWMCON1 = 0B00000000;
  1439  03FA  0196               	clrf	22	;volatile
  1440                           
  1441                           ;main.c: 168: PWMTH = 0X00;
  1442  03FB  0198               	clrf	24	;volatile
  1443                           
  1444                           ;main.c: 169: PWMTL = 100;
  1445  03FC  3064               	movlw	100
  1446  03FD  0097               	movwf	23	;volatile
  1447                           
  1448                           ;main.c: 172: PWMD01H = 0;
  1449  03FE  019E               	clrf	30	;volatile
  1450                           
  1451                           ;main.c: 173: PWMD1L = ledDuty;
  1452  03FF  087B               	movf	_ledDuty,w
  1453  0400  009A               	movwf	26	;volatile
  1454                           
  1455                           ;main.c: 174: PWM01DT = 0X00;
  1456  0401  019F               	clrf	31	;volatile
  1457                           
  1458                           ;main.c: 176: PWMCON0 = 0X62;
  1459  0402  3062               	movlw	98
  1460  0403  0095               	movwf	21	;volatile
  1461                           
  1462                           ;main.c: 177: PWMCON2 =0X00;
  1463  0404  019D               	clrf	29	;volatile
  1464                           
  1465                           ;main.c: 178: TRISB &= 0xFD;
  1466  0405  1085               	bcf	5,1	;volatile
  1467  0406  0008               	return
  1468  0407                     __end_of_pwm1Init:	
  1469                           
  1470                           	psect	text9
  1471  0450                     __ptext9:	
  1472 ;; *************** function _pwm13Stop *****************
  1473 ;; Defined at:
  1474 ;;		line 211 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0
  1483 ;; Tracked objects:
  1484 ;;		On entry : 300/0
  1485 ;;		On exit  : 300/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1
  1488 ;;      Params:         0       0       0
  1489 ;;      Locals:         0       0       0
  1490 ;;      Temps:          0       0       0
  1491 ;;      Totals:         0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_KeyServer
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _pwm13Stop
  1505  0450                     _pwm13Stop:	
  1506                           
  1507                           ;main.c: 213: PWMCON0 &= 0XF5;
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _pwm13Stop: [wreg+status,2+status,0]
  1511  0450  30F5               	movlw	245
  1512  0451  0595               	andwf	21,f	;volatile
  1513                           
  1514                           ;main.c: 214: PORTB &= 0xED;
  1515  0452  30ED               	movlw	237
  1516  0453  0586               	andwf	6,f	;volatile
  1517  0454  0008               	return
  1518  0455                     __end_of_pwm13Stop:	
  1519                           
  1520                           	psect	text10
  1521  0371                     __ptext10:	
  1522 ;; *************** function _pwm13Init *****************
  1523 ;; Defined at:
  1524 ;;		line 189 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0
  1533 ;; Tracked objects:
  1534 ;;		On entry : 300/0
  1535 ;;		On exit  : 300/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1
  1538 ;;      Params:         0       0       0
  1539 ;;      Locals:         0       0       0
  1540 ;;      Temps:          0       0       0
  1541 ;;      Totals:         0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    1
  1545 ;; This function calls:
  1546 ;;		Nothing
  1547 ;; This function is called by:
  1548 ;;		_KeyServer
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           
  1553                           ;psect for function _pwm13Init
  1554  0371                     _pwm13Init:	
  1555                           
  1556                           ;main.c: 191: TRISB |= 0x05;
  1557                           
  1558                           ;incstack = 0
  1559                           ; Regs used in _pwm13Init: [wreg+status,2+status,0]
  1560  0371  3005               	movlw	5
  1561  0372  0485               	iorwf	5,f	;volatile
  1562                           
  1563                           ;main.c: 192: PWMCON1 = 0B00000000;
  1564                           
  1565                           ;main.c: 193: PWMTH = 0X00;
  1566                           
  1567                           ;main.c: 194: PWMTL = 100;
  1568                           
  1569                           ;main.c: 197: PWMD23H = 0;
  1570                           
  1571                           ;main.c: 198: PWMD3L = ledDuty;
  1572                           
  1573                           ;main.c: 199: PWM23DT = 0X00;
  1574  0373  237F               	fcall	PL10	;call to abstracted procedure
  1575                           
  1576                           ;main.c: 201: PWMD01H = 0;
  1577  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0375  019E               	clrf	30	;volatile
  1579                           
  1580                           ;main.c: 202: PWMD1L = ledDuty;
  1581  0376  087B               	movf	_ledDuty,w
  1582  0377  009A               	movwf	26	;volatile
  1583                           
  1584                           ;main.c: 203: PWM01DT = 0X00;
  1585  0378  019F               	clrf	31	;volatile
  1586                           
  1587                           ;main.c: 205: PWMCON0 = 0X6A;
  1588  0379  306A               	movlw	106
  1589  037A  0095               	movwf	21	;volatile
  1590                           
  1591                           ;main.c: 206: PWMCON2 =0X00;
  1592  037B  019D               	clrf	29	;volatile
  1593                           
  1594                           ;main.c: 207: TRISB &= 0xFA;
  1595  037C  30FA               	movlw	250
  1596  037D  0585               	andwf	5,f	;volatile
  1597  037E  0008               	return
  1598  037F                     __end_of_pwm13Init:	
  1599  037F                     PL10:	
  1600  037F  0196               	clrf	22	;volatile
  1601  0380  0198               	clrf	24	;volatile
  1602  0381  3064               	movlw	100
  1603  0382  0097               	movwf	23	;volatile
  1604  0383  1683               	bsf	3,5	;RP0=1, select bank1
  1605  0384  019E               	clrf	30	;volatile
  1606  0385  087B               	movf	_ledDuty,w
  1607  0386  009C               	movwf	28	;volatile
  1608  0387  019D               	clrf	29	;volatile
  1609  0388  0008               	return
  1610  0389                     __end_ofPL10:	
  1611                           
  1612                           	psect	text11
  1613  031C                     __ptext11:	
  1614 ;; *************** function ___lwmod *****************
  1615 ;; Defined at:
  1616 ;;		line 6 in file "C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\sources\common\lwmod.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  divisor         2    2[COMMON] unsigned int 
  1619 ;;  dividend        2    4[COMMON] unsigned int 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  counter         1    6[COMMON] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2    2[COMMON] unsigned int 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 300/0
  1628 ;;		On exit  : 300/0
  1629 ;;		Unchanged: 300/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1
  1631 ;;      Params:         4       0       0
  1632 ;;      Locals:         1       0       0
  1633 ;;      Temps:          0       0       0
  1634 ;;      Totals:         5       0       0
  1635 ;;Total ram usage:        5 bytes
  1636 ;; Hardware stack levels used:    1
  1637 ;; Hardware stack levels required when called:    1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_KeyServer
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function ___lwmod
  1647  031C                     ___lwmod:	
  1648                           
  1649                           ;incstack = 0
  1650                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1651  031C  0872               	movf	___lwmod@divisor,w
  1652  031D  0473               	iorwf	___lwmod@divisor+1,w
  1653  031E  1903               	btfsc	3,2
  1654  031F  2B3B               	goto	l2491
  1655  0320  01F6               	clrf	___lwmod@counter
  1656  0321                     L2:	
  1657  0321  0AF6               	incf	___lwmod@counter,f
  1658  0322  1BF3               	btfsc	___lwmod@divisor+1,7
  1659  0323  2B28               	goto	l2483
  1660  0324  1003               	clrc
  1661  0325  0DF2               	rlf	___lwmod@divisor,f
  1662  0326  0DF3               	rlf	___lwmod@divisor+1,f
  1663  0327  2B21               	goto	L2
  1664  0328                     l2483:	
  1665  0328  0873               	movf	___lwmod@divisor+1,w
  1666  0329  0275               	subwf	___lwmod@dividend+1,w
  1667  032A  1D03               	skipz
  1668  032B  2B2E               	goto	u1255
  1669  032C  0872               	movf	___lwmod@divisor,w
  1670  032D  0274               	subwf	___lwmod@dividend,w
  1671  032E                     u1255:	
  1672  032E  1C03               	skipc
  1673  032F  2B37               	goto	L3
  1674  0330  0872               	movf	___lwmod@divisor,w
  1675  0331  02F4               	subwf	___lwmod@dividend,f
  1676  0332  0873               	movf	___lwmod@divisor+1,w
  1677  0333  1C03               	skipc
  1678  0334  03F5               	decf	___lwmod@dividend+1,f
  1679  0335  02F5               	subwf	___lwmod@dividend+1,f
  1680  0336  1003               	clrc
  1681  0337                     L3:	
  1682  0337  0CF3               	rrf	___lwmod@divisor+1,f
  1683  0338  0CF2               	rrf	___lwmod@divisor,f
  1684  0339  0BF6               	decfsz	___lwmod@counter,f
  1685  033A  2B28               	goto	l2483
  1686  033B                     l2491:	
  1687  033B  0875               	movf	___lwmod@dividend+1,w
  1688  033C  00F3               	movwf	?___lwmod+1
  1689  033D  0874               	movf	___lwmod@dividend,w
  1690  033E  00F2               	movwf	?___lwmod
  1691  033F  0008               	return
  1692  0340                     __end_of___lwmod:	
  1693                           
  1694                           	psect	text12
  1695  03C7                     __ptext12:	
  1696 ;; *************** function _Init_System *****************
  1697 ;; Defined at:
  1698 ;;		line 25 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2
  1707 ;; Tracked objects:
  1708 ;;		On entry : B00/0
  1709 ;;		On exit  : 300/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1
  1712 ;;      Params:         0       0       0
  1713 ;;      Locals:         0       0       0
  1714 ;;      Temps:          0       0       0
  1715 ;;      Totals:         0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _Init_System
  1728  03C7                     _Init_System:	
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _Init_System: [wreg+status,2]
  1732  03C7  0000               	nop	;# 
  1733  03C8  0064               	clrwdt	;# 
  1734                           
  1735                           ;main.c: 29: INTCON = 0;
  1736  03C9  018B               	clrf	11	;volatile
  1737                           
  1738                           ;main.c: 30: OSCCON = 0X72;
  1739  03CA  3072               	movlw	114
  1740  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1741  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1742  03CD  0094               	movwf	20	;volatile
  1743                           
  1744                           ;main.c: 31: OPTION_REG = 0;
  1745  03CE  0181               	clrf	1	;volatile
  1746                           
  1747                           ;main.c: 36: TRISB = 0x00;
  1748  03CF  0185               	clrf	5	;volatile
  1749                           
  1750                           ;main.c: 37: PORTB = 0;
  1751  03D0  0186               	clrf	6	;volatile
  1752                           
  1753                           ;main.c: 39: PIE1 = 2;
  1754  03D1  3002               	movlw	2
  1755  03D2  008E               	movwf	14	;volatile
  1756                           
  1757                           ;main.c: 40: PR2 = 250;
  1758  03D3  30FA               	movlw	250
  1759  03D4  0091               	movwf	17	;volatile
  1760                           
  1761                           ;main.c: 41: T2CON = 4;
  1762  03D5  3004               	movlw	4
  1763  03D6  0093               	movwf	19	;volatile
  1764                           
  1765                           ;main.c: 43: INTCON = 0XC0;
  1766  03D7  30C0               	movlw	192
  1767  03D8  008B               	movwf	11	;volatile
  1768  03D9  0008               	return
  1769  03DA                     __end_of_Init_System:	
  1770                           
  1771                           	psect	text13
  1772  02AA                     __ptext13:	
  1773 ;; *************** function _CheckTouchKey *****************
  1774 ;; Defined at:
  1775 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1
  1789 ;;      Params:         0       0       0
  1790 ;;      Locals:         0       0       0
  1791 ;;      Temps:          0       0       0
  1792 ;;      Totals:         0       0       0
  1793 ;;Total ram usage:        0 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    5
  1796 ;; This function calls:
  1797 ;;		_CheckKeyOldValue
  1798 ;;		_CheckOnceResult
  1799 ;;		_CheckValidTime
  1800 ;;		_ClearResSum
  1801 ;;		_GetTouchKeyValue
  1802 ;;		_KeyStopClear
  1803 ;;		_TurnKeyFlags
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function _CheckTouchKey
  1811  02AA                     _CheckTouchKey:	
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in _CheckTouchKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1815  02AA  1A78               	btfsc	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1816  02AB  2AB7               	goto	l1044
  1817  02AC  21E6               	fcall	_GetTouchKeyValue
  1818  02AD  3008               	movlw	8
  1819  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1820  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1821  02B0  0AB6               	incf	_KeyCounter,f
  1822  02B1  0236               	subwf	_KeyCounter,w
  1823  02B2  1C03               	skipc
  1824  02B3  2AD0               	goto	l2965
  1825  02B4  01B6               	clrf	_KeyCounter
  1826  02B5  1678               	bsf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1827  02B6  2AD0               	goto	l2965
  1828  02B7                     l1044:	
  1829  02B7  19F8               	btfsc	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1830  02B8  2ACC               	goto	l2959
  1831  02B9  2017               	fcall	_CheckOnceResult
  1832  02BA  22D1               	fcall	_TurnKeyFlags
  1833  02BB  15F8               	bsf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1834  02BC  18F8               	btfsc	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  1835  02BD  2AC4               	goto	l2949
  1836  02BE  3002               	movlw	2
  1837  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1838  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1839  02C1  0236               	subwf	_KeyCounter,w
  1840  02C2  1C03               	skipc
  1841  02C3  2AC8               	goto	l2957
  1842  02C4                     l2949:	
  1843  02C4  2422               	fcall	_KeyStopClear
  1844  02C5  10F8               	bcf	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  1845  02C6  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1846  02C7  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1847  02C8                     l2957:	
  1848  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  1849  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  1850  02CA  01B6               	clrf	_KeyCounter
  1851  02CB  2AD0               	goto	l2965
  1852  02CC                     l2959:	
  1853  02CC  227D               	fcall	_CheckKeyOldValue
  1854  02CD  2407               	fcall	_ClearResSum
  1855  02CE  1278               	bcf	_b_kover/(0+8),_b_kover& (0+7)	;volatile
  1856  02CF  11F8               	bcf	_b_kover1/(0+8),_b_kover1& (0+7)	;volatile
  1857  02D0                     l2965:	
  1858  02D0  2B89               	ljmp	l2465	;# 
  1859  02D1                     __end_of_CheckTouchKey:	
  1860                           
  1861                           	psect	text14
  1862  02D1                     __ptext14:	
  1863 ;; *************** function _TurnKeyFlags *****************
  1864 ;; Defined at:
  1865 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1
  1879 ;;      Params:         0       0       0
  1880 ;;      Locals:         0       0       0
  1881 ;;      Temps:          0       0       0
  1882 ;;      Totals:         0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    4
  1886 ;; This function calls:
  1887 ;;		_KeyClearIn
  1888 ;; This function is called by:
  1889 ;;		_CheckTouchKey
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           
  1894                           ;psect for function _TurnKeyFlags
  1895  02D1                     _TurnKeyFlags:	
  1896                           
  1897                           ;incstack = 0
  1898                           ; Regs used in _TurnKeyFlags: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1899  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1900  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1901  02D3  0822               	movf	_KeyData,w	;volatile
  1902  02D4  1903               	btfsc	3,2
  1903  02D5  2AEC               	goto	l2909
  1904  02D6  01B2               	clrf	TurnKeyFlags@F416
  1905  02D7  0822               	movf	_KeyData,w	;volatile
  1906  02D8  0624               	xorwf	_KeyOldData,w	;volatile
  1907  02D9  1D03               	skipz
  1908  02DA  2AE7               	goto	l1025
  1909  02DB  3002               	movlw	2
  1910  02DC  0AB3               	incf	TurnKeyFlags@F415,f
  1911  02DD  0233               	subwf	TurnKeyFlags@F415,w
  1912  02DE  1C03               	skipc
  1913  02DF  0008               	return
  1914  02E0  01B3               	clrf	TurnKeyFlags@F415
  1915  02E1  0822               	movf	_KeyData,w	;volatile
  1916  02E2  00FA               	movwf	_KeyFlag	;volatile
  1917  02E3  1978               	btfsc	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1918  02E4  0008               	return
  1919  02E5  1578               	bsf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1920  02E6  2C15               	ljmp	l2677
  1921  02E7                     l1025:	
  1922  02E7  1178               	bcf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1923  02E8  0822               	movf	_KeyData,w	;volatile
  1924  02E9  00A4               	movwf	_KeyOldData	;volatile
  1925  02EA  01B3               	clrf	TurnKeyFlags@F415
  1926  02EB  0008               	return
  1927  02EC                     l2909:	
  1928  02EC  01B3               	clrf	TurnKeyFlags@F415
  1929  02ED  01A4               	clrf	_KeyOldData	;volatile
  1930  02EE  3002               	movlw	2
  1931  02EF  0AB2               	incf	TurnKeyFlags@F416,f
  1932  02F0  0232               	subwf	TurnKeyFlags@F416,w
  1933  02F1  1C03               	skipc
  1934  02F2  0008               	return
  1935  02F3  01B2               	clrf	TurnKeyFlags@F416
  1936  02F4  01FA               	clrf	_KeyFlag	;volatile
  1937  02F5  1178               	bcf	_b_kclr/(0+8),_b_kclr& (0+7)	;volatile
  1938  02F6  0008               	return
  1939  02F7                     __end_of_TurnKeyFlags:	
  1940                           
  1941                           	psect	text15
  1942  0415                     __ptext15:	
  1943 ;; *************** function _KeyClearIn *****************
  1944 ;; Defined at:
  1945 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;  383             1    4[COMMON] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 300/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1
  1959 ;;      Params:         0       0       0
  1960 ;;      Locals:         1       0       0
  1961 ;;      Temps:          0       0       0
  1962 ;;      Totals:         1       0       0
  1963 ;;Total ram usage:        1 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    3
  1966 ;; This function calls:
  1967 ;;		_KeyClearOne
  1968 ;;		_KeyIsIn
  1969 ;; This function is called by:
  1970 ;;		_TurnKeyFlags
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           
  1975                           ;psect for function _KeyClearIn
  1976  0415                     _KeyClearIn:	
  1977  0415                     l2677:	
  1978                           ;incstack = 0
  1979                           ; Regs used in _KeyClearIn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1980                           
  1981  0415  01F4               	clrf	KeyClearIn@383
  1982  0416                     l2683:	
  1983  0416  0874               	movf	KeyClearIn@383,w
  1984  0417  242F               	fcall	_KeyIsIn
  1985  0418  3A00               	xorlw	0
  1986  0419  1D03               	skipz
  1987  041A  2C1D               	goto	l2687
  1988  041B  0874               	movf	KeyClearIn@383,w
  1989  041C  2340               	fcall	_KeyClearOne
  1990  041D                     l2687:	
  1991  041D  0AF4               	incf	KeyClearIn@383,f
  1992  041E  0874               	movf	KeyClearIn@383,w
  1993  041F  1D03               	btfss	3,2
  1994  0420  0008               	return
  1995  0421  2C16               	goto	l2683
  1996  0422                     __end_of_KeyClearIn:	
  1997                           
  1998                           	psect	text16
  1999  0422                     __ptext16:	
  2000 ;; *************** function _KeyStopClear *****************
  2001 ;; Defined at:
  2002 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;		None
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  385             1    3[COMMON] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      void 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMMON   BANK0   BANK1
  2016 ;;      Params:         0       0       0
  2017 ;;      Locals:         1       0       0
  2018 ;;      Temps:          0       0       0
  2019 ;;      Totals:         1       0       0
  2020 ;;Total ram usage:        1 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:    2
  2023 ;; This function calls:
  2024 ;;		_KeyClearOne
  2025 ;; This function is called by:
  2026 ;;		_CheckTouchKey
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           
  2031                           ;psect for function _KeyStopClear
  2032  0422                     _KeyStopClear:	
  2033                           
  2034                           ;incstack = 0
  2035                           ; Regs used in _KeyStopClear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2036  0422  01FA               	clrf	_KeyFlag	;volatile
  2037  0423  01F3               	clrf	KeyStopClear@385
  2038  0424                     l2335:	
  2039  0424  1003               	clrc
  2040  0425  0D73               	rlf	KeyStopClear@385,w
  2041  0426  3E30               	addlw	(low (_KeyResSum| 0))& (0+255)
  2042  0427  240F               	fcall	PL14	;call to abstracted procedure
  2043  0428  0873               	movf	KeyStopClear@385,w
  2044  0429  2340               	fcall	_KeyClearOne
  2045  042A  0AF3               	incf	KeyStopClear@385,f
  2046  042B  0873               	movf	KeyStopClear@385,w
  2047  042C  1D03               	btfss	3,2
  2048  042D  0008               	return
  2049  042E  2C24               	goto	l2335
  2050  042F                     __end_of_KeyStopClear:	
  2051                           
  2052                           	psect	text17
  2053  01E6                     __ptext17:	
  2054 ;; *************** function _GetTouchKeyValue *****************
  2055 ;; Defined at:
  2056 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  395             2    3[COMMON] unsigned int 
  2061 ;;  393             1    6[COMMON] unsigned char 
  2062 ;;  394             1    5[COMMON] unsigned char 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/200
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMMON   BANK0   BANK1
  2072 ;;      Params:         0       0       0
  2073 ;;      Locals:         4       0       0
  2074 ;;      Temps:          0       0       0
  2075 ;;      Totals:         4       0       0
  2076 ;;Total ram usage:        4 bytes
  2077 ;; Hardware stack levels used:    1
  2078 ;; Hardware stack levels required when called:    2
  2079 ;; This function calls:
  2080 ;;		_ClearResSum
  2081 ;; This function is called by:
  2082 ;;		_CheckTouchKey
  2083 ;;		_SystemEnterSleep
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _GetTouchKeyValue
  2089  01E6                     _GetTouchKeyValue:	
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _GetTouchKeyValue: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2093  01E6  01F6               	clrf	GetTouchKeyValue@393
  2094  01E7  01F5               	clrf	GetTouchKeyValue@394
  2095  01E8  0AF5               	incf	GetTouchKeyValue@394,f
  2096  01E9                     l2115:	
  2097  01E9  1C78               	btfss	_b_ksleep/(0+8),_b_ksleep& (0+7)	;volatile
  2098  01EA  29ED               	goto	l2119
  2099  01EB  1C75               	btfss	GetTouchKeyValue@394,0
  2100  01EC  2A2C               	goto	l2151
  2101  01ED                     l2119:	
  2102  01ED  1283               	bcf	3,5	;RP0=0, select bank2
  2103  01EE  1703               	bsf	3,6	;RP1=1, select bank2
  2104  01EF  0191               	clrf	17	;volatile
  2105  01F0  0192               	clrf	18	;volatile
  2106  01F1  3079               	movlw	121
  2107  01F2  0093               	movwf	19	;volatile
  2108  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2109  01F4  1305               	bcf	5,6	;volatile
  2110  01F5  1306               	bcf	6,6	;volatile
  2111  01F6  29F7               	nop2	;2 cycle nop
  2112  01F7  29F8               	nop2	;2 cycle nop
  2113  01F8  29F9               	nop2	;2 cycle nop
  2114  01F9  29FA               	nop2	;2 cycle nop
  2115  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2116  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2117  01FC  1705               	bsf	5,6	;volatile
  2118  01FD  3002               	movlw	2
  2119  01FE  1703               	bsf	3,6	;RP1=1, select bank2
  2120  01FF  0091               	movwf	17	;volatile
  2121  0200  0876               	movf	GetTouchKeyValue@393,w
  2122  0201  3E0A               	addlw	low ((_Table_KeyChannel-__stringbase)| (0+32768))
  2123  0202  0084               	movwf	4
  2124  0203  23DA               	fcall	stringdir
  2125  0204  0092               	movwf	18	;volatile
  2126  0205  2A06               	nop2	;2 cycle nop
  2127  0206  2A07               	nop2	;2 cycle nop
  2128  0207  1283               	bcf	3,5	;RP0=0, select bank2
  2129  0208  1703               	bsf	3,6	;RP1=1, select bank2
  2130  0209  1411               	bsf	17,0	;volatile
  2131  020A  3040               	movlw	64
  2132  020B  00F3               	movwf	GetTouchKeyValue@395
  2133  020C  301F               	movlw	31
  2134  020D  00F4               	movwf	GetTouchKeyValue@395+1
  2135  020E                     l975:	
  2136  020E  1B91               	btfsc	17,7	;volatile
  2137  020F  2A1C               	goto	l2149
  2138  0210  3001               	movlw	1
  2139  0211  02F3               	subwf	GetTouchKeyValue@395,f
  2140  0212  1C03               	skipc
  2141  0213  03F4               	decf	GetTouchKeyValue@395+1,f
  2142  0214  0873               	movf	GetTouchKeyValue@395,w
  2143  0215  0474               	iorwf	GetTouchKeyValue@395+1,w
  2144  0216  1D03               	btfss	3,2
  2145  0217  2A0E               	goto	l975
  2146  0218  30FF               	movlw	255
  2147  0219  1303               	bcf	3,6	;RP1=0, select bank0
  2148  021A  00B6               	movwf	_KeyCounter
  2149  021B  2C07               	ljmp	l2079
  2150  021C                     l2149:	
  2151  021C  1003               	clrc
  2152  021D  0D76               	rlf	GetTouchKeyValue@393,w
  2153  021E  3E30               	addlw	(low (_KeyResSum| 0))& (0+255)
  2154  021F  0084               	movwf	4
  2155  0220  0816               	movf	22,w	;volatile
  2156  0221  1383               	bcf	3,7	;select IRP bank0
  2157  0222  0780               	addwf	0,f
  2158  0223  0F84               	incfsz	4,f
  2159  0224  0800               	movf	0,w
  2160  0225  1803               	skipnc
  2161  0226  0A00               	incf	0,w
  2162  0227  00FF               	movwf	127
  2163  0228  0817               	movf	23,w	;volatile
  2164  0229  077F               	addwf	127,w
  2165  022A  0080               	movwf	0
  2166  022B  0384               	decf	4,f
  2167  022C                     l2151:	
  2168  022C  1003               	clrc
  2169  022D  0DF5               	rlf	GetTouchKeyValue@394,f
  2170  022E  0AF6               	incf	GetTouchKeyValue@393,f
  2171  022F  1903               	btfsc	3,2
  2172  0230  29E9               	goto	l2115
  2173  0231  1078               	bcf	_b_ksleep/(0+8),_b_ksleep& (0+7)	;# 
  2174  0232  0008               	return
  2175  0233                     __end_of_GetTouchKeyValue:	
  2176                           
  2177                           	psect	text18
  2178  0407                     __ptext18:	
  2179 ;; *************** function _ClearResSum *****************
  2180 ;; Defined at:
  2181 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  388             1    2[COMMON] unsigned char 
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/200
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1
  2195 ;;      Params:         0       0       0
  2196 ;;      Locals:         1       0       0
  2197 ;;      Temps:          0       0       0
  2198 ;;      Totals:         1       0       0
  2199 ;;Total ram usage:        1 bytes
  2200 ;; Hardware stack levels used:    1
  2201 ;; Hardware stack levels required when called:    1
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_GetTouchKeyValue
  2206 ;;		_CheckTouchKey
  2207 ;;		_SystemEnterSleep
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           
  2212                           ;psect for function _ClearResSum
  2213  0407                     _ClearResSum:	
  2214  0407                     l2079:	
  2215                           ;incstack = 0
  2216                           ; Regs used in _ClearResSum: [wreg-fsr0h+status,2+status,0]
  2217                           
  2218  0407  01F2               	clrf	ClearResSum@388
  2219  0408                     l2081:	
  2220  0408  1003               	clrc
  2221  0409  0D72               	rlf	ClearResSum@388,w
  2222  040A  3E30               	addlw	(low (_KeyResSum| 0))& (0+255)
  2223  040B  240F               	fcall	PL14	;call to abstracted procedure
  2224  040C  0FF2               	incfsz	ClearResSum@388,f
  2225  040D  0008               	return
  2226  040E  2C08               	goto	l2081
  2227  040F                     __end_of_ClearResSum:	
  2228  040F                     PL14:	
  2229  040F  0084               	movwf	4
  2230  0410  1383               	bcf	3,7	;select IRP bank0
  2231  0411  0180               	clrf	0
  2232  0412  0A84               	incf	4,f
  2233  0413  0180               	clrf	0
  2234  0414  0008               	return
  2235  0415                     __end_ofPL14:	
  2236                           
  2237                           	psect	text19
  2238  0389                     __ptext19:	
  2239 ;; *************** function _CheckValidTime *****************
  2240 ;; Defined at:
  2241 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1
  2255 ;;      Params:         0       0       0
  2256 ;;      Locals:         0       0       0
  2257 ;;      Temps:          0       0       0
  2258 ;;      Totals:         0       0       0
  2259 ;;Total ram usage:        0 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_CheckTouchKey
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           
  2270                           ;psect for function _CheckValidTime
  2271  0389                     _CheckValidTime:	
  2272  0389                     l2465:	
  2273                           ;incstack = 0
  2274                           ; Regs used in _CheckValidTime: [wreg+status,2+status,0]
  2275                           
  2276  0389  087A               	movf	_KeyFlag,w	;volatile
  2277  038A  1283               	bcf	3,5	;RP0=0, select bank0
  2278  038B  1303               	bcf	3,6	;RP1=0, select bank0
  2279  038C  1903               	btfsc	3,2
  2280  038D  2B9B               	goto	L4
  2281  038E  0AA0               	incf	CheckValidTime@F419,f
  2282  038F  1903               	skipnz
  2283  0390  0AA1               	incf	CheckValidTime@F419+1,f
  2284  0391  303A               	movlw	58
  2285  0392  0221               	subwf	CheckValidTime@F419+1,w
  2286  0393  3098               	movlw	152
  2287  0394  1903               	skipnz
  2288  0395  0220               	subwf	CheckValidTime@F419,w
  2289  0396  1C03               	skipc
  2290  0397  0008               	return
  2291  0398  14F8               	bsf	_b_kerr/(0+8),_b_kerr& (0+7)	;volatile
  2292  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2293  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2294  039B                     L4:	
  2295  039B  01A0               	clrf	CheckValidTime@F419
  2296  039C  01A1               	clrf	CheckValidTime@F419+1
  2297  039D  0008               	return
  2298  039E                     __end_of_CheckValidTime:	
  2299                           
  2300                           	psect	text20
  2301  0017                     __ptext20:	
  2302 ;; *************** function _CheckOnceResult *****************
  2303 ;; Defined at:
  2304 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  404             2    6[BANK0 ] unsigned int 
  2309 ;;  405             2    3[BANK0 ] unsigned int 
  2310 ;;  406             2    0[BANK0 ] unsigned int 
  2311 ;;  401             1    8[BANK0 ] unsigned char 
  2312 ;;  402             1    5[BANK0 ] unsigned char 
  2313 ;;  403             1    2[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1
  2323 ;;      Params:         0       0       0
  2324 ;;      Locals:         0       9       0
  2325 ;;      Temps:          4       0       0
  2326 ;;      Totals:         4       9       0
  2327 ;;Total ram usage:       13 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    3
  2330 ;; This function calls:
  2331 ;;		_KeyClearOne
  2332 ;;		_KeyHave
  2333 ;;		_KeyIsIn
  2334 ;; This function is called by:
  2335 ;;		_CheckTouchKey
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _CheckOnceResult
  2341  0017                     _CheckOnceResult:	
  2342                           
  2343                           ;incstack = 0
  2344                           ; Regs used in _CheckOnceResult: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2345  0017  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0018  1303               	bcf	3,6	;RP1=0, select bank0
  2347  0019  01C3               	clrf	CheckOnceResult@401
  2348  001A  01A2               	clrf	_KeyData	;volatile
  2349  001B  01B5               	clrf	_KeyMaxSub
  2350  001C                     l2801:	
  2351  001C  0843               	movf	CheckOnceResult@401,w
  2352  001D  3907               	andlw	7
  2353  001E  3E01               	addlw	low ((_Table_KeyFalg-__stringbase)| (0+32768))
  2354  001F  0084               	movwf	4
  2355  0020  23DA               	fcall	stringdir
  2356  0021  00BD               	movwf	CheckOnceResult@403
  2357  0022  1003               	clrc
  2358  0023  0D43               	rlf	CheckOnceResult@401,w
  2359  0024  3E30               	addlw	(low (_KeyResSum| 0))& (0+255)
  2360  0025  0084               	movwf	4
  2361  0026  3003               	movlw	3
  2362  0027                     u1725:	
  2363  0027  0A84               	incf	4,f
  2364  0028  1003               	clrc
  2365  0029  1383               	bcf	3,7	;select IRP bank0
  2366  002A  0C80               	rrf	0,f
  2367  002B  0384               	decf	4,f
  2368  002C  0C80               	rrf	0,f
  2369  002D  3EFF               	addlw	-1
  2370  002E  1D03               	skipz
  2371  002F  2827               	goto	u1725
  2372  0030  1003               	clrc
  2373  0031  0D43               	rlf	CheckOnceResult@401,w
  2374  0032  3E30               	addlw	(low (_KeyResSum| 0))& (0+255)
  2375  0033  0084               	movwf	4
  2376  0034  0800               	movf	0,w
  2377  0035  00C1               	movwf	CheckOnceResult@404
  2378  0036  0A84               	incf	4,f
  2379  0037  0800               	movf	0,w
  2380  0038  00C2               	movwf	CheckOnceResult@404+1
  2381  0039  0843               	movf	CheckOnceResult@401,w
  2382  003A  3E09               	addlw	low ((_Table_KeyDown-__stringbase)| (0+32768))
  2383  003B  0084               	movwf	4
  2384  003C  23DA               	fcall	stringdir
  2385  003D  00C0               	movwf	CheckOnceResult@402
  2386  003E  00BE               	movwf	CheckOnceResult@405
  2387  003F  01BF               	clrf	CheckOnceResult@405+1
  2388  0040  0841               	movf	CheckOnceResult@404,w
  2389  0041  07BE               	addwf	CheckOnceResult@405,f
  2390  0042  1803               	skipnc
  2391  0043  0ABF               	incf	CheckOnceResult@405+1,f
  2392  0044  0842               	movf	CheckOnceResult@404+1,w
  2393  0045  07BF               	addwf	CheckOnceResult@405+1,f
  2394  0046  0843               	movf	CheckOnceResult@401,w
  2395  0047  242F               	fcall	_KeyIsIn
  2396  0048  3A00               	xorlw	0
  2397  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2398  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2399  004B  1003               	clrc
  2400  004C  1D03               	skipz
  2401  004D  28A5               	goto	L7
  2402  004E  0D43               	rlf	CheckOnceResult@401,w
  2403  004F  3E2A               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2404  0050  0084               	movwf	4
  2405  0051  1383               	bcf	3,7	;select IRP bank0
  2406  0052  0800               	movf	0,w
  2407  0053  00BB               	movwf	CheckOnceResult@406
  2408  0054  0A84               	incf	4,f
  2409  0055  0800               	movf	0,w
  2410  0056  00BC               	movwf	CheckOnceResult@406+1
  2411  0057  1003               	clrc
  2412  0058  0D43               	rlf	CheckOnceResult@401,w
  2413  0059  3E28               	addlw	(low (_KeyReference| 0))& (0+255)
  2414  005A  20F8               	fcall	PL6	;call to abstracted procedure
  2415  005B  023F               	subwf	CheckOnceResult@405+1,w
  2416  005C  1D03               	skipz
  2417  005D  2860               	goto	u1745
  2418  005E  0874               	movf	??_CheckOnceResult,w
  2419  005F  023E               	subwf	CheckOnceResult@405,w
  2420  0060                     u1745:	
  2421  0060  1803               	skipnc
  2422  0061  286E               	goto	l2819
  2423  0062  1003               	clrc
  2424  0063  0D43               	rlf	CheckOnceResult@401,w
  2425  0064  3E28               	addlw	(low (_KeyReference| 0))& (0+255)
  2426  0065  20F8               	fcall	PL6	;call to abstracted procedure
  2427  0066  0841               	movf	CheckOnceResult@404,w
  2428  0067  0274               	subwf	??_CheckOnceResult,w
  2429  0068  00C1               	movwf	CheckOnceResult@404
  2430  0069  0842               	movf	CheckOnceResult@404+1,w
  2431  006A  1C03               	skipc
  2432  006B  0A42               	incf	CheckOnceResult@404+1,w
  2433  006C  0275               	subwf	??_CheckOnceResult+1,w
  2434  006D  2891               	goto	L5
  2435  006E                     l2819:	
  2436  006E  083C               	movf	CheckOnceResult@406+1,w
  2437  006F  023F               	subwf	CheckOnceResult@405+1,w
  2438  0070  1D03               	skipz
  2439  0071  2874               	goto	u1755
  2440  0072  083B               	movf	CheckOnceResult@406,w
  2441  0073  023E               	subwf	CheckOnceResult@405,w
  2442  0074                     u1755:	
  2443  0074  1803               	skipnc
  2444  0075  28E1               	goto	l2865
  2445  0076  1003               	clrc
  2446  0077  0D43               	rlf	CheckOnceResult@401,w
  2447  0078  3E2C               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2448  0079  20F8               	fcall	PL6	;call to abstracted procedure
  2449  007A  023F               	subwf	CheckOnceResult@405+1,w
  2450  007B  1D03               	skipz
  2451  007C  287F               	goto	u1765
  2452  007D  0874               	movf	??_CheckOnceResult,w
  2453  007E  023E               	subwf	CheckOnceResult@405,w
  2454  007F                     u1765:	
  2455  007F  1803               	skipnc
  2456  0080  28E1               	goto	l2865
  2457  0081  1003               	clrc
  2458  0082  0D43               	rlf	CheckOnceResult@401,w
  2459  0083  3E28               	addlw	(low (_KeyReference| 0))& (0+255)
  2460  0084  0084               	movwf	4
  2461  0085  083B               	movf	CheckOnceResult@406,w
  2462  0086  0080               	movwf	0
  2463  0087  0A84               	incf	4,f
  2464  0088  083C               	movf	CheckOnceResult@406+1,w
  2465  0089  0080               	movwf	0
  2466  008A  0841               	movf	CheckOnceResult@404,w
  2467  008B  023B               	subwf	CheckOnceResult@406,w
  2468  008C  00C1               	movwf	CheckOnceResult@404
  2469  008D  0842               	movf	CheckOnceResult@404+1,w
  2470  008E  1C03               	skipc
  2471  008F  0A42               	incf	CheckOnceResult@404+1,w
  2472  0090  023C               	subwf	CheckOnceResult@406+1,w
  2473  0091                     L5:	
  2474  0091  00C2               	movwf	CheckOnceResult@404+1
  2475  0092  0843               	movf	CheckOnceResult@401,w
  2476  0093  3E3A               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2477  0094  0084               	movwf	4
  2478  0095  0180               	clrf	0
  2479  0096  0842               	movf	CheckOnceResult@404+1,w
  2480  0097  1903               	btfsc	3,2
  2481  0098  289B               	goto	l2833
  2482  0099  30FF               	movlw	255
  2483  009A  289C               	goto	L6
  2484  009B                     l2833:	
  2485  009B  0841               	movf	CheckOnceResult@404,w
  2486  009C                     L6:	
  2487  009C  00C0               	movwf	CheckOnceResult@402
  2488  009D  0235               	subwf	_KeyMaxSub,w
  2489  009E  1803               	skipnc
  2490  009F  28A3               	goto	l2839
  2491  00A0  0840               	movf	CheckOnceResult@402,w
  2492  00A1  00B5               	movwf	_KeyMaxSub
  2493  00A2  28DF               	goto	l2863
  2494  00A3                     l2839:	
  2495  00A3  0AB6               	incf	_KeyCounter,f
  2496  00A4  28E1               	goto	l2865
  2497  00A5                     L7:	
  2498  00A5  0D43               	rlf	CheckOnceResult@401,w
  2499  00A6  3E28               	addlw	(low (_KeyReference| 0))& (0+255)
  2500  00A7  0084               	movwf	4
  2501  00A8  1383               	bcf	3,7	;select IRP bank0
  2502  00A9  0800               	movf	0,w
  2503  00AA  00F4               	movwf	??_CheckOnceResult
  2504  00AB  0A84               	incf	4,f
  2505  00AC  0800               	movf	0,w
  2506  00AD  00F5               	movwf	??_CheckOnceResult+1
  2507  00AE  0874               	movf	??_CheckOnceResult,w
  2508  00AF  3E01               	addlw	1
  2509  00B0  00F6               	movwf	??_CheckOnceResult+2
  2510  00B1  0875               	movf	??_CheckOnceResult+1,w
  2511  00B2  1803               	skipnc
  2512  00B3  3E01               	addlw	1
  2513  00B4  00F7               	movwf	??_CheckOnceResult+3
  2514  00B5  083F               	movf	CheckOnceResult@405+1,w
  2515  00B6  0277               	subwf	??_CheckOnceResult+3,w
  2516  00B7  1D03               	skipz
  2517  00B8  28BB               	goto	u1795
  2518  00B9  083E               	movf	CheckOnceResult@405,w
  2519  00BA  0276               	subwf	??_CheckOnceResult+2,w
  2520  00BB                     u1795:	
  2521  00BB  1C03               	btfss	3,0
  2522  00BC  28E1               	goto	l2865
  2523  00BD  1003               	clrc
  2524  00BE  0D43               	rlf	CheckOnceResult@401,w
  2525  00BF  3E2A               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2526  00C0  0084               	movwf	4
  2527  00C1  0800               	movf	0,w
  2528  00C2  20E6               	fcall	PL4	;call to abstracted procedure
  2529  00C3  1C03               	skipc
  2530  00C4  28CD               	goto	l2853
  2531  00C5  1003               	clrc
  2532  00C6  0D43               	rlf	CheckOnceResult@401,w
  2533  00C7  3E2C               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2534  00C8  0084               	movwf	4
  2535  00C9  0800               	movf	0,w
  2536  00CA  20E6               	fcall	PL4	;call to abstracted procedure
  2537  00CB  1803               	skipnc
  2538  00CC  28D8               	goto	l2857
  2539  00CD                     l2853:	
  2540  00CD  0843               	movf	CheckOnceResult@401,w
  2541  00CE  3E3A               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2542  00CF  0084               	movwf	4
  2543  00D0  3009               	movlw	9
  2544  00D1  0A80               	incf	0,f
  2545  00D2  0200               	subwf	0,w
  2546  00D3  1C03               	skipc
  2547  00D4  28DC               	goto	l2861
  2548  00D5  0843               	movf	CheckOnceResult@401,w
  2549  00D6  2340               	fcall	_KeyClearOne
  2550  00D7  28E1               	goto	l2865
  2551  00D8                     l2857:	
  2552  00D8  0843               	movf	CheckOnceResult@401,w
  2553  00D9  3E3A               	addlw	(low (_KeyUpShake| 0))& (0+255)
  2554  00DA  0084               	movwf	4
  2555  00DB  0180               	clrf	0
  2556  00DC                     l2861:	
  2557  00DC  0822               	movf	_KeyData,w	;volatile
  2558  00DD  1D03               	btfss	3,2
  2559  00DE  28E1               	goto	l2865
  2560  00DF                     l2863:	
  2561  00DF  083D               	movf	CheckOnceResult@403,w
  2562  00E0  2449               	fcall	_KeyHave
  2563  00E1                     l2865:	
  2564  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2565  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2566  00E3  0FC3               	incfsz	CheckOnceResult@401,f
  2567  00E4  0008               	return
  2568  00E5  281C               	goto	l2801
  2569  00E6                     __end_of_CheckOnceResult:	
  2570  00E6                     PL4:	
  2571  00E6  00F4               	movwf	??_CheckOnceResult
  2572  00E7  0A84               	incf	4,f
  2573  00E8  0800               	movf	0,w
  2574  00E9  00F5               	movwf	??_CheckOnceResult+1
  2575  00EA  0840               	movf	CheckOnceResult@402,w
  2576  00EB  0774               	addwf	??_CheckOnceResult,w
  2577  00EC  00F6               	movwf	??_CheckOnceResult+2
  2578  00ED  0875               	movf	??_CheckOnceResult+1,w
  2579  00EE  1803               	skipnc
  2580  00EF  0A75               	incf	??_CheckOnceResult+1,w
  2581  00F0  00F7               	movwf	??_CheckOnceResult+3
  2582  00F1  0842               	movf	CheckOnceResult@404+1,w
  2583  00F2  0277               	subwf	??_CheckOnceResult+3,w
  2584  00F3  1D03               	skipz
  2585  00F4  0008               	return
  2586  00F5  0841               	movf	CheckOnceResult@404,w
  2587  00F6  0276               	subwf	??_CheckOnceResult+2,w
  2588  00F7  0008               	return
  2589  00F8                     __end_ofPL4:	
  2590  00F8                     PL6:	
  2591  00F8  0084               	movwf	4
  2592  00F9  0800               	movf	0,w
  2593  00FA  00F4               	movwf	??_CheckOnceResult
  2594  00FB  0A84               	incf	4,f
  2595  00FC  0800               	movf	0,w
  2596  00FD  00F5               	movwf	??_CheckOnceResult+1
  2597  00FE  0008               	return
  2598  00FF                     __end_ofPL6:	
  2599                           
  2600                           	psect	text21
  2601  0449                     __ptext21:	
  2602 ;; *************** function _KeyHave *****************
  2603 ;; Defined at:
  2604 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  390             1    wreg     unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  390             1    2[COMMON] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : B00/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1
  2618 ;;      Params:         0       0       0
  2619 ;;      Locals:         1       0       0
  2620 ;;      Temps:          0       0       0
  2621 ;;      Totals:         1       0       0
  2622 ;;Total ram usage:        1 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_CheckOnceResult
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function _KeyHave
  2634  0449                     _KeyHave:	
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in _KeyHave: [wreg+status,2+status,0]
  2638                           ;KeyHave@390 stored from wreg
  2639  0449  00F2               	movwf	KeyHave@390
  2640  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2641  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2642  044C  0AB6               	incf	_KeyCounter,f
  2643  044D  0872               	movf	KeyHave@390,w
  2644  044E  00A2               	movwf	_KeyData	;volatile
  2645  044F  0008               	return
  2646  0450                     __end_of_KeyHave:	
  2647                           
  2648                           	psect	text22
  2649  0340                     __ptext22:	
  2650 ;; *************** function _KeyClearOne *****************
  2651 ;; Defined at:
  2652 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  381             1    wreg     unsigned char 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  381             1    2[COMMON] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMMON   BANK0   BANK1
  2666 ;;      Params:         0       0       0
  2667 ;;      Locals:         1       0       0
  2668 ;;      Temps:          0       0       0
  2669 ;;      Totals:         1       0       0
  2670 ;;Total ram usage:        1 bytes
  2671 ;; Hardware stack levels used:    1
  2672 ;; Hardware stack levels required when called:    1
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_KeyClearIn
  2677 ;;		_KeyStopClear
  2678 ;;		_CheckOnceResult
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           
  2683                           ;psect for function _KeyClearOne
  2684  0340                     _KeyClearOne:	
  2685                           
  2686                           ;incstack = 0
  2687                           ; Regs used in _KeyClearOne: [wreg-fsr0h+status,2+status,0]
  2688                           ;KeyClearOne@381 stored from wreg
  2689  0340  00F2               	movwf	KeyClearOne@381
  2690  0341  1003               	clrc
  2691  0342  0D72               	rlf	KeyClearOne@381,w
  2692  0343  3E2E               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2693  0344  240F               	fcall	PL14	;call to abstracted procedure
  2694  0345  1003               	clrc
  2695  0346  0D72               	rlf	KeyClearOne@381,w
  2696  0347  3E2C               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2697  0348  0084               	movwf	4
  2698  0349  2353               	fcall	PL16	;call to abstracted procedure
  2699  034A  3E2A               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2700  034B  0084               	movwf	4
  2701  034C  2353               	fcall	PL16	;call to abstracted procedure
  2702  034D  3E28               	addlw	(low (_KeyReference| 0))& (0+255)
  2703  034E  0084               	movwf	4
  2704  034F  0180               	clrf	0
  2705  0350  0A84               	incf	4,f
  2706  0351  0180               	clrf	0	;# 
  2707  0352  0008               	return
  2708  0353                     __end_of_KeyClearOne:	
  2709  0353                     PL16:	
  2710  0353  0180               	clrf	0
  2711  0354  0A84               	incf	4,f
  2712  0355  0180               	clrf	0
  2713  0356  1003               	clrc
  2714  0357  0D72               	rlf	KeyClearOne@381,w
  2715  0358  0008               	return
  2716  0359                     __end_ofPL16:	
  2717                           
  2718                           	psect	text23
  2719  027D                     __ptext23:	
  2720 ;; *************** function _CheckKeyOldValue *****************
  2721 ;; Defined at:
  2722 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  412             2    0[BANK0 ] unsigned int 
  2727 ;;  411             1    2[BANK0 ] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1
  2737 ;;      Params:         0       0       0
  2738 ;;      Locals:         0       3       0
  2739 ;;      Temps:          0       0       0
  2740 ;;      Totals:         0       3       0
  2741 ;;Total ram usage:        3 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    3
  2744 ;; This function calls:
  2745 ;;		_JudgeKeyOldData
  2746 ;;		_KeyIsIn
  2747 ;;		_RKeyOldData
  2748 ;; This function is called by:
  2749 ;;		_CheckTouchKey
  2750 ;; This function uses a non-reentrant model
  2751 ;;
  2752                           
  2753                           
  2754                           ;psect for function _CheckKeyOldValue
  2755  027D                     _CheckKeyOldValue:	
  2756  027D  3004               	movlw	4
  2757                           
  2758                           ;incstack = 0
  2759                           ; Regs used in _CheckKeyOldValue: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2760  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2761  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0280  01BD               	clrf	CheckKeyOldValue@411
  2763  0281  0AB4               	incf	CheckKeyOldValue@F410,f
  2764  0282  0234               	subwf	CheckKeyOldValue@F410,w
  2765  0283  1C03               	btfss	3,0
  2766  0284  0008               	return
  2767  0285  01B4               	clrf	CheckKeyOldValue@F410
  2768  0286                     l2877:	
  2769  0286  1003               	clrc
  2770  0287  0D3D               	rlf	CheckKeyOldValue@411,w
  2771  0288  3E30               	addlw	(low (_KeyResSum| 0))& (0+255)
  2772  0289  0084               	movwf	4
  2773  028A  1383               	bcf	3,7	;select IRP bank0
  2774  028B  0800               	movf	0,w
  2775  028C  00BB               	movwf	CheckKeyOldValue@412
  2776  028D  0A84               	incf	4,f
  2777  028E  0800               	movf	0,w
  2778  028F  00BC               	movwf	CheckKeyOldValue@412+1
  2779  0290  083D               	movf	CheckKeyOldValue@411,w
  2780  0291  242F               	fcall	_KeyIsIn
  2781  0292  3A00               	xorlw	0
  2782  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2783  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2784  0295  1D03               	skipz
  2785  0296  2A9F               	goto	L8
  2786  0297  083C               	movf	CheckKeyOldValue@412+1,w
  2787  0298  00F3               	movwf	JudgeKeyOldData@428+1
  2788  0299  083B               	movf	CheckKeyOldValue@412,w
  2789  029A  00F2               	movwf	JudgeKeyOldData@428
  2790  029B  083D               	movf	CheckKeyOldValue@411,w
  2791  029C  2233               	fcall	_JudgeKeyOldData
  2792  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2793  029E  1303               	bcf	3,6	;RP1=0, select bank0
  2794  029F                     L8:	
  2795  029F  083C               	movf	CheckKeyOldValue@412+1,w
  2796  02A0  00F3               	movwf	RKeyOldData@431+1
  2797  02A1  083B               	movf	CheckKeyOldValue@412,w
  2798  02A2  00F2               	movwf	RKeyOldData@431
  2799  02A3  083D               	movf	CheckKeyOldValue@411,w
  2800  02A4  22F7               	fcall	_RKeyOldData
  2801  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2802  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2803  02A7  0FBD               	incfsz	CheckKeyOldValue@411,f
  2804  02A8  0008               	return
  2805  02A9  2A86               	goto	l2877
  2806  02AA                     __end_of_CheckKeyOldValue:	
  2807                           
  2808                           	psect	text24
  2809  02F7                     __ptext24:	
  2810 ;; *************** function _RKeyOldData *****************
  2811 ;; Defined at:
  2812 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;  430             1    wreg     unsigned char 
  2815 ;;  431             2    2[COMMON] unsigned int 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  430             1    6[COMMON] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2822 ;; Tracked objects:
  2823 ;;		On entry : 300/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1
  2827 ;;      Params:         2       0       0
  2828 ;;      Locals:         1       0       0
  2829 ;;      Temps:          2       0       0
  2830 ;;      Totals:         5       0       0
  2831 ;;Total ram usage:        5 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    1
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_CheckKeyOldValue
  2838 ;;		_SystemEnterSleep
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _RKeyOldData
  2844  02F7                     _RKeyOldData:	
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in _RKeyOldData: [wreg-fsr0h+status,2+status,0]
  2848                           ;RKeyOldData@430 stored from wreg
  2849  02F7  00F6               	movwf	RKeyOldData@430
  2850  02F8  1003               	clrc
  2851  02F9  0D76               	rlf	RKeyOldData@430,w
  2852  02FA  3E2C               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2853  02FB  0084               	movwf	4
  2854  02FC  1383               	bcf	3,7	;select IRP bank0
  2855  02FD  2314               	fcall	PL12	;call to abstracted procedure
  2856  02FE  3E2A               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  2857  02FF  2309               	fcall	PL8	;call to abstracted procedure
  2858  0300  2314               	fcall	PL12	;call to abstracted procedure
  2859  0301  3E2C               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  2860  0302  2309               	fcall	PL8	;call to abstracted procedure
  2861  0303  0872               	movf	RKeyOldData@431,w
  2862  0304  0080               	movwf	0
  2863  0305  0A84               	incf	4,f
  2864  0306  0873               	movf	RKeyOldData@431+1,w
  2865  0307  0080               	movwf	0	;# 
  2866  0308  0008               	return
  2867  0309                     __end_of_RKeyOldData:	
  2868  0309                     PL8:	
  2869  0309  0084               	movwf	4
  2870  030A  0874               	movf	??_RKeyOldData,w
  2871  030B  0080               	movwf	0
  2872  030C  0A84               	incf	4,f
  2873  030D  0875               	movf	??_RKeyOldData+1,w
  2874  030E  0080               	movwf	0
  2875  030F  1003               	clrc
  2876  0310  0D76               	rlf	RKeyOldData@430,w
  2877  0311  3E2E               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2878  0312  0084               	movwf	4
  2879  0313  0008               	return
  2880  0314                     __end_ofPL8:	
  2881  0314                     PL12:	
  2882  0314  0800               	movf	0,w
  2883  0315  00F4               	movwf	??_RKeyOldData
  2884  0316  0A84               	incf	4,f
  2885  0317  0800               	movf	0,w
  2886  0318  00F5               	movwf	??_RKeyOldData+1
  2887  0319  1003               	clrc
  2888  031A  0D76               	rlf	RKeyOldData@430,w
  2889  031B  0008               	return
  2890  031C                     __end_ofPL12:	
  2891                           
  2892                           	psect	text25
  2893  042F                     __ptext25:	
  2894 ;; *************** function _KeyIsIn *****************
  2895 ;; Defined at:
  2896 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2897 ;; Parameters:    Size  Location     Type
  2898 ;;  377             1    wreg     unsigned char 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  377             1    2[COMMON] unsigned char 
  2901 ;;  378             1    3[COMMON] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      unsigned char 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1
  2911 ;;      Params:         0       0       0
  2912 ;;      Locals:         2       0       0
  2913 ;;      Temps:          0       0       0
  2914 ;;      Totals:         2       0       0
  2915 ;;Total ram usage:        2 bytes
  2916 ;; Hardware stack levels used:    2
  2917 ;; Hardware stack levels required when called:    1
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_KeyClearIn
  2922 ;;		_CheckOnceResult
  2923 ;;		_CheckKeyOldValue
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _KeyIsIn
  2929  042F                     _KeyIsIn:	
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in _KeyIsIn: [wreg-fsr0h+status,2+status,0+pclath]
  2933                           ;KeyIsIn@377 stored from wreg
  2934  042F  00F2               	movwf	KeyIsIn@377
  2935  0430  3907               	andlw	7
  2936  0431  3E01               	addlw	low ((_Table_KeyFalg-__stringbase)| (0+32768))
  2937  0432  0084               	movwf	4
  2938  0433  23DA               	fcall	stringdir
  2939  0434  00F3               	movwf	KeyIsIn@378
  2940  0435  087A               	movf	_KeyFlag,w	;volatile
  2941  0436  05F3               	andwf	KeyIsIn@378,f
  2942  0437  0873               	movf	KeyIsIn@378,w
  2943  0438  0008               	return
  2944  0439                     __end_of_KeyIsIn:	
  2945                           
  2946                           	psect	text26
  2947  0233                     __ptext26:	
  2948 ;; *************** function _JudgeKeyOldData *****************
  2949 ;; Defined at:
  2950 ;;		line 1 in file "D:\TOOL_PUBLISH\SCMCU\SCMCU_IDE_V2\SCTouch_lib\Sleep\XC8\82A1\CheckTouchKey.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  427             1    wreg     unsigned char 
  2953 ;;  428             2    2[COMMON] unsigned int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  427             1    4[COMMON] unsigned char 
  2956 ;;  429             2    5[COMMON] unsigned int 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      void 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2961 ;; Tracked objects:
  2962 ;;		On entry : 300/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1
  2966 ;;      Params:         2       0       0
  2967 ;;      Locals:         3       0       0
  2968 ;;      Temps:          0       0       0
  2969 ;;      Totals:         5       0       0
  2970 ;;Total ram usage:        5 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    1
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_CheckKeyOldValue
  2977 ;;		_SystemEnterSleep
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _JudgeKeyOldData
  2983  0233                     _JudgeKeyOldData:	
  2984                           
  2985                           ;incstack = 0
  2986                           ; Regs used in _JudgeKeyOldData: [wreg-fsr0h+status,2+status,0]
  2987                           ;JudgeKeyOldData@427 stored from wreg
  2988  0233  00F4               	movwf	JudgeKeyOldData@427
  2989  0234  1003               	clrc
  2990  0235  0D74               	rlf	JudgeKeyOldData@427,w
  2991  0236  3E2E               	addlw	(low (_KeyOldValue0| 0))& (0+255)
  2992  0237  0084               	movwf	4
  2993  0238  1383               	bcf	3,7	;select IRP bank0
  2994  0239  226F               	fcall	PL2	;call to abstracted procedure
  2995  023A  1903               	skipnz
  2996  023B  0275               	subwf	JudgeKeyOldData@429,w
  2997  023C  1C03               	skipc
  2998  023D  2A46               	goto	L9
  2999  023E  30FF               	movlw	255
  3000  023F  0276               	subwf	JudgeKeyOldData@429+1,w
  3001  0240  30FE               	movlw	254
  3002  0241  1903               	skipnz
  3003  0242  0275               	subwf	JudgeKeyOldData@429,w
  3004  0243  1C03               	skipc
  3005  0244  0008               	return
  3006  0245  1003               	clrc
  3007  0246                     L9:	
  3008  0246  0D74               	rlf	JudgeKeyOldData@427,w
  3009  0247  3E2C               	addlw	(low (_KeyOldValue1| 0))& (0+255)
  3010  0248  0084               	movwf	4
  3011  0249  226F               	fcall	PL2	;call to abstracted procedure
  3012  024A  1903               	skipnz
  3013  024B  0275               	subwf	JudgeKeyOldData@429,w
  3014  024C  1C03               	skipc
  3015  024D  2A56               	goto	L10
  3016  024E  30FF               	movlw	255
  3017  024F  0276               	subwf	JudgeKeyOldData@429+1,w
  3018  0250  30FE               	movlw	254
  3019  0251  1903               	skipnz
  3020  0252  0275               	subwf	JudgeKeyOldData@429,w
  3021  0253  1C03               	skipc
  3022  0254  0008               	return
  3023  0255  1003               	clrc
  3024  0256                     L10:	
  3025  0256  0D74               	rlf	JudgeKeyOldData@427,w
  3026  0257  3E2A               	addlw	(low (_KeyOldValue2| 0))& (0+255)
  3027  0258  0084               	movwf	4
  3028  0259  226F               	fcall	PL2	;call to abstracted procedure
  3029  025A  1903               	skipnz
  3030  025B  0275               	subwf	JudgeKeyOldData@429,w
  3031  025C  1C03               	skipc
  3032  025D  2A66               	goto	L11
  3033  025E  30FF               	movlw	255
  3034  025F  0276               	subwf	JudgeKeyOldData@429+1,w
  3035  0260  30FE               	movlw	254
  3036  0261  1903               	skipnz
  3037  0262  0275               	subwf	JudgeKeyOldData@429,w
  3038  0263  1C03               	skipc
  3039  0264  0008               	return
  3040  0265  1003               	clrc
  3041  0266                     L11:	
  3042  0266  0D74               	rlf	JudgeKeyOldData@427,w
  3043  0267  3E28               	addlw	(low (_KeyReference| 0))& (0+255)
  3044  0268  0084               	movwf	4
  3045  0269  0872               	movf	JudgeKeyOldData@428,w
  3046  026A  0080               	movwf	0
  3047  026B  0A84               	incf	4,f
  3048  026C  0873               	movf	JudgeKeyOldData@428+1,w
  3049  026D  0080               	movwf	0
  3050  026E  0008               	return
  3051  026F                     __end_of_JudgeKeyOldData:	
  3052  026F                     PL2:	
  3053  026F  0800               	movf	0,w
  3054  0270  00F5               	movwf	JudgeKeyOldData@429
  3055  0271  0A84               	incf	4,f
  3056  0272  0800               	movf	0,w
  3057  0273  00F6               	movwf	JudgeKeyOldData@429+1
  3058  0274  0872               	movf	JudgeKeyOldData@428,w
  3059  0275  02F5               	subwf	JudgeKeyOldData@429,f
  3060  0276  0873               	movf	JudgeKeyOldData@428+1,w
  3061  0277  1C03               	skipc
  3062  0278  03F6               	decf	JudgeKeyOldData@429+1,f
  3063  0279  02F6               	subwf	JudgeKeyOldData@429+1,f
  3064  027A  3000               	movlw	0
  3065  027B  0276               	subwf	JudgeKeyOldData@429+1,w
  3066  027C  3403               	retlw	3
  3067  027D                     __end_ofPL2:	
  3068                           
  3069                           	psect	text27
  3070  039E                     __ptext27:	
  3071 ;; *************** function _Isr_Timer *****************
  3072 ;; Defined at:
  3073 ;;		line 223 in file "C:\mcuproject\scm\zdt\SU005_8122_SOP8_\SU005_SC8P8122_sop8_\main.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;		None
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;		None
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 300/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1
  3087 ;;      Params:         0       0       0
  3088 ;;      Locals:         0       0       0
  3089 ;;      Temps:          2       0       0
  3090 ;;      Totals:         2       0       0
  3091 ;;Total ram usage:        2 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		Interrupt level 1
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _Isr_Timer
  3102  039E                     _Isr_Timer:	
  3103                           
  3104                           ;main.c: 225: if(TMR2IF)
  3105  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3106  039F  1303               	bcf	3,6	;RP1=0, select bank0
  3107  03A0  1C8D               	btfss	13,1	;volatile
  3108  03A1  2BAB               	goto	i1l2639
  3109                           
  3110                           ;main.c: 226: {
  3111                           ;main.c: 227: TMR2IF = 0;
  3112  03A2  108D               	bcf	13,1	;volatile
  3113                           
  3114                           ;main.c: 228: if(++MainTime >= 32)
  3115  03A3  3020               	movlw	32
  3116  03A4  0AB9               	incf	_MainTime,f	;volatile
  3117  03A5  0239               	subwf	_MainTime,w	;volatile
  3118  03A6  1C03               	skipc
  3119  03A7  2BAC               	goto	i1l494
  3120                           
  3121                           ;main.c: 229: {
  3122                           ;main.c: 230: MainTime = 0;
  3123  03A8  01B9               	clrf	_MainTime	;volatile
  3124                           
  3125                           ;main.c: 231: B_MainLoop = 1;
  3126  03A9  1778               	bsf	_B_MainLoop/(0+8),_B_MainLoop& (0+7)	;volatile
  3127  03AA  2BAC               	goto	i1l494
  3128  03AB                     i1l2639:	
  3129                           
  3130                           ;main.c: 234: else
  3131                           ;main.c: 235: {
  3132                           ;main.c: 236: PIR1 = 0;
  3133  03AB  018D               	clrf	13	;volatile
  3134  03AC                     i1l494:	
  3135  03AC  0871               	movf	??_Isr_Timer+1,w
  3136  03AD  008A               	movwf	10
  3137  03AE  0E70               	swapf	??_Isr_Timer^(0+-128),w
  3138  03AF  0083               	movwf	3
  3139  03B0  0EFE               	swapf	126,f
  3140  03B1  0E7E               	swapf	126,w
  3141  03B2  0009               	retfie
  3142  03B3                     __end_of_Isr_Timer:	
  3143  007E                     btemp	set	126	;btemp
  3144  007E                     wtemp0	set	126
  3145                           
  3146                           	psect	intentry
  3147  0004                     __pintentry:	
  3148                           ;incstack = 0
  3149                           ; Regs used in _Isr_Timer: [wreg+status,2+status,0]
  3150                           
  3151  0004                     interrupt_function:	
  3152  007E                     saved_w	set	btemp
  3153  0004  00FE               	movwf	btemp
  3154  0005  0E03               	swapf	3,w
  3155  0006  00F0               	movwf	??_Isr_Timer
  3156  0007  080A               	movf	10,w
  3157  0008  00F1               	movwf	??_Isr_Timer+1
  3158  0009  2B9E               	ljmp	_Isr_Timer


Data Sizes:
    Strings     0
    Constant    10
    Data        1
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80      9      36
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _SystemEnterSleep->_GetTouchKeyValue
    _SystemEnterSleep->_JudgeKeyOldData
    _SystemEnterSleep->_RKeyOldData
    _KeyServer->___lwmod
    _CheckTouchKey->_CheckOnceResult
    _TurnKeyFlags->_KeyClearIn
    _KeyClearIn->_KeyIsIn
    _KeyStopClear->_KeyClearOne
    _GetTouchKeyValue->_ClearResSum
    _CheckOnceResult->_KeyIsIn
    _CheckKeyOldValue->_JudgeKeyOldData
    _CheckKeyOldValue->_RKeyOldData

Critical Paths under _Isr_Timer in COMMON

    None.

Critical Paths under _main in BANK0

    _WorkSleep->_SystemEnterSleep
    _CheckTouchKey->_CheckOnceResult

Critical Paths under _Isr_Timer in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr_Timer in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4982
                      _CheckTouchKey
                        _Init_System
                          _KeyServer
                      _Refurbish_Sfr
                          _WorkSleep
                          _pwm13Stop
 ---------------------------------------------------------------------------------
 (1) _WorkSleep                                            0     0      0    1417
                      _Refurbish_Sfr
                   _SystemEnterSleep
 ---------------------------------------------------------------------------------
 (2) _SystemEnterSleep                                     9     9      0    1417
                                              0 BANK0      9     9      0
                        _ClearResSum
                   _GetTouchKeyValue
                    _JudgeKeyOldData
                        _RKeyOldData
 ---------------------------------------------------------------------------------
 (2) _Refurbish_Sfr                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _KeyServer                                            0     0      0     245
                            ___lwmod
                          _pwm13Init
                          _pwm13Stop
                           _pwm1Init
                           _pwm1Stop
                           _pwm3Init
                           _pwm3Stop
 ---------------------------------------------------------------------------------
 (2) _pwm3Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm3Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm1Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm1Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwm13Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm13Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     245
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckTouchKey                                        0     0      0    3320
                   _CheckKeyOldValue
                    _CheckOnceResult
                     _CheckValidTime
                        _ClearResSum
                   _GetTouchKeyValue
                       _KeyStopClear
                       _TurnKeyFlags
 ---------------------------------------------------------------------------------
 (2) _TurnKeyFlags                                         0     0      0     286
                         _KeyClearIn
 ---------------------------------------------------------------------------------
 (3) _KeyClearIn                                           1     1      0     286
                                              4 COMMON     1     1      0
                        _KeyClearOne
                            _KeyIsIn
 ---------------------------------------------------------------------------------
 (2) _KeyStopClear                                         1     1      0     178
                                              3 COMMON     1     1      0
                        _KeyClearOne
 ---------------------------------------------------------------------------------
 (3) _GetTouchKeyValue                                     4     4      0     159
                                              3 COMMON     4     4      0
                        _ClearResSum
 ---------------------------------------------------------------------------------
 (4) _ClearResSum                                          1     1      0      45
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckValidTime                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CheckOnceResult                                     13    13      0    1507
                                              4 COMMON     4     4      0
                                              0 BANK0      9     9      0
                        _KeyClearOne
                            _KeyHave
                            _KeyIsIn
 ---------------------------------------------------------------------------------
 (3) _KeyHave                                              1     1      0      44
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _KeyClearOne                                          1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CheckKeyOldValue                                     3     3      0    1145
                                              0 BANK0      3     3      0
                    _JudgeKeyOldData
                            _KeyIsIn
                        _RKeyOldData
 ---------------------------------------------------------------------------------
 (3) _RKeyOldData                                          5     3      2     294
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _KeyIsIn                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _JudgeKeyOldData                                      5     3      2     560
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Isr_Timer                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckTouchKey
     _CheckKeyOldValue
       _JudgeKeyOldData
       _KeyIsIn
       _RKeyOldData
     _CheckOnceResult
       _KeyClearOne
       _KeyHave
       _KeyIsIn
     _CheckValidTime
     _ClearResSum
     _GetTouchKeyValue
       _ClearResSum
     _KeyStopClear
       _KeyClearOne
     _TurnKeyFlags
       _KeyClearIn
         _KeyClearOne
         _KeyIsIn
   _Init_System
   _KeyServer
     ___lwmod
     _pwm13Init
     _pwm13Stop
     _pwm1Init
     _pwm1Stop
     _pwm3Init
     _pwm3Stop
   _Refurbish_Sfr
   _WorkSleep
     _Refurbish_Sfr
     _SystemEnterSleep
       _ClearResSum
       _GetTouchKeyValue
         _ClearResSum
       _JudgeKeyOldData
       _RKeyOldData
   _pwm13Stop

 _Isr_Timer (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               20      0       0       7        0.0%
BITBANK1            20      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      9      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30       8        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 17 09:27:44 2025

                        pc 0002                         PL2 026F                         PL4 00E6  
                       PL6 00F8                         PL8 0309              ??_KeyClearOne 0072  
    __size_of_TurnKeyFlags 0026                         fsr 0004           ??_CheckValidTime 0072  
                      PL10 037F                        PL12 0314                        PL14 040F  
                      PL16 0353                        l466 01E1                        l975 020E  
                      _RB1 0031                        _RB4 0034                        _RB6 0036  
                      _PR2 0011                        fsr0 0004                        indf 0000  
        ?_GetTouchKeyValue 0070   __end_of_Table_KeyChannel 03EA         ??_GetTouchKeyValue 0073  
                     l1025 02E7                       l1044 02B7                       l1062 0133  
                     l1056 00FF                       l2115 01E9                       l2151 022C  
                     l2119 01ED                       l2081 0408                       l2149 021C  
                     l2079 0407                       l2335 0424                       l2531 01A1  
                     l2187 03EA                       l2525 019A                       l2541 01AC  
                     l2801 001C                       l2465 0389                       l2553 01C1  
                     l2483 0328                       l2491 033B                       l2539 01A9  
                     l2565 01CD                       l2559 01C6                       l2833 009B  
                     l2577 01E3                       l2569 01D2                       l2761 012C  
                     l2819 006E                       l2683 0416                       l2861 00DC  
                     l2853 00CD                       l2677 0415                       l2909 02EC  
                     l2863 00DF                       l2839 00A3                       l2687 041D  
                     l2857 00D8                       l2865 00E1                       l2793 016C  
                     l2929 0370                       l2971 03B6                       l2877 0286  
                     l2957 02C8                       l2949 02C4                       l2965 02D0  
                     l2959 02CC                       u1255 032E                       u1705 015C  
                     u1725 0027                       _PIE1 000E                       _PIE2 0110  
                     u1745 0060                       u1755 0074                       u1765 007F  
                     u1795 00BB                       _INTF 0059                       _RBIF 0058  
                     _PIR1 000D                       _PIR2 010F                       _TMR0 0081  
                     _main 03B3                       btemp 007E              ?_KeyStopClear 0070  
                     start 000A               _TurnKeyFlags 02D1            __end_of_KeyIsIn 0439  
          __end_of_KeyHave 0450           ?_JudgeKeyOldData 0072              ??_Init_System 0072  
                    ?_main 0070                      _T2CON 0013   __end_of_SystemEnterSleep 0174  
          __end_of___lwmod 0340                      i1l494 03AC                      _PORTB 0006  
                    _TRISB 0005                      _PWMTH 0018                      _PWMTL 0017  
      __end_of_KeyClearOne 0353                 _KeyClearIn 0415                _RKeyOldData 02F7  
           __pbitbssCOMMON 03C0                      pclath 000A                _ClearResSum 0407  
               _KeyCounter 0036                 _KeyOldData 0024             ??_KeyStopClear 0073  
                    status 0003                      wtemp0 007E                 _KeyUpShake 003A  
          __initialization 000B               __end_of_main 03C7                     ??_main 0078  
         TurnKeyFlags@F415 0033           TurnKeyFlags@F416 0032        __end_of_Init_System 03DA  
                   i1l2639 03AB                     _INTCON 000B         __size_of_KeyServer 0072  
                   _OSCCON 0014                     _TMR2IF 0069                     _PWMD1L 001A  
                   _PWMD3L 009C                     _TRISB6 002E                  ??_KeyIsIn 0072  
                ??_KeyHave 0072         __size_of_Isr_Timer 0015  __size_of_CheckKeyOldValue 002D  
                   _b_kclr 03C2                     _b_kerr 03C1                  ??___lwmod 0076  
              _KeyClearOne 0340           __end_of_pwm1Init 0407           __end_of_pwm3Init 0449  
         __end_of_pwm1Stop 045B           __end_of_pwm3Stop 0458              _Table_KeyFalg 03E0  
            _Table_KeyDown 03E8               __pdataCOMMON 007B                     saved_w 007E  
   __size_of_CheckTouchKey 0027                ?_KeyClearIn 0070            _CheckOnceResult 0017  
  __end_of__initialization 0015         __size_of_WorkSleep 0018             __pcstackCOMMON 0070  
              _Init_System 03C7                 __end_ofPL2 027D                 __end_ofPL4 00F8  
               __end_ofPL6 00FF                 __end_ofPL8 0314          __end_of_KeyServer 01E6  
     __end_of_KeyStopClear 042F          __end_of_Isr_Timer 03B3                 __pbssBANK0 0020  
           RKeyOldData@430 0076             RKeyOldData@431 0072  __size_of_GetTouchKeyValue 004D  
       __size_of_pwm13Init 000E         __size_of_pwm13Stop 0005              _CheckTouchKey 02AA  
               __pmaintext 03B3                 __pintentry 0004        __size_of_KeyClearIn 000D  
        __end_of_WorkSleep 0371          ?_SystemEnterSleep 0070    __end_of_CheckOnceResult 00E6  
                  _KEYCON0 0111                    _KEYCON1 0112                    _KEYCON2 0113  
                  _PWM01DT 001F         ??_SystemEnterSleep 003B                    _PWM23DT 009D  
                  _B_OnOff 03C5                    _PWMD01H 001E                    _PWMD23H 009E  
   __size_of_Refurbish_Sfr 000F                    _PWMCON0 0015                    _PWMCON1 0016  
                  _PWMCON2 001D                 __stringtab 03DA               ?_RKeyOldData 0072  
             ?_ClearResSum 0070             ClearResSum@388 0072                    _KeyData 0022  
                  _KeyFlag 007A                    _KeyIsIn 042F                    _KeyHave 0449  
                ?_pwm1Init 0070                  ?_pwm3Init 0070                  ?_pwm1Stop 0070  
           ?_CheckTouchKey 0070                  ?_pwm3Stop 0070           _CheckKeyOldValue 027D  
                  ___lwmod 031C                    _b_kover 03C4                    __ptext1 0359  
                  __ptext2 00FF                    __ptext3 03EA                    __ptext4 0174  
                  __ptext5 0455                    __ptext6 0441                    __ptext7 0458  
                  __ptext8 03F9                    __ptext9 0450                    _ledDuty 007B  
 __size_of_JudgeKeyOldData 003C          __end_of_pwm13Init 037F          __end_of_pwm13Stop 0455  
  __size_of_CheckValidTime 0015                    clrloop0 043A       end_of_initialization 0015  
          KeyStopClear@385 0073                 ??_pwm1Init 0072                 ??_pwm3Init 0072  
               ??_pwm1Stop 0072                 ??_pwm3Stop 0072              _Refurbish_Sfr 03EA  
             _KeyOldValue0 002E               _KeyOldValue1 002C               _KeyOldValue2 002A  
    __size_of_KeyStopClear 000D       CheckKeyOldValue@F410 0034               ?_KeyClearOne 0070  
             _KeyReference 0028           ?_CheckOnceResult 0070               ??_KeyClearIn 0074  
       CheckOnceResult@401 0043         CheckOnceResult@402 0040         CheckOnceResult@403 003D  
       CheckOnceResult@404 0041         CheckOnceResult@405 003E         CheckOnceResult@406 003B  
          ??_CheckTouchKey 0078               _KeyStopClear 0422           _GetTouchKeyValue 01E6  
           ?_Refurbish_Sfr 0070               ?_Init_System 0070         __end_of_KeyClearIn 0422  
            __pidataCOMMON 0000              WorkSleep@time 0037                  _KeyMaxSub 0035  
                _KeyResSum 0030                __end_ofPL10 0389                __end_ofPL12 031C  
              __end_ofPL14 0415                __end_ofPL16 0359        start_initialization 000B  
                _KeyServer 0174                  _Isr_Timer 039E          ??_JudgeKeyOldData 0074  
     __size_of_RKeyOldData 0012       __size_of_ClearResSum 0008              ?_TurnKeyFlags 0070  
              __pbssCOMMON 0079                 ?_KeyServer 0070                  ___latbits 0000  
            __pcstackBANK0 003B                  _WorkSleep 0359             _CheckValidTime 0389  
 __end_of_CheckKeyOldValue 02AA                 ?_Isr_Timer 0070                   ?_KeyIsIn 0070  
                 ?_KeyHave 0070  __size_of_SystemEnterSleep 0075            ??_Refurbish_Sfr 0072  
           ??_TurnKeyFlags 0075          __size_of_pwm1Init 000E          __size_of_pwm3Init 0008  
        __size_of_pwm1Stop 0003          __size_of_pwm3Stop 0003                   ?___lwmod 0072  
                __pstrings 03DA       __size_of_KeyClearOne 0013     __end_of_CheckValidTime 039E  
      GetTouchKeyValue@393 0076        GetTouchKeyValue@394 0075        GetTouchKeyValue@395 0073  
               ?_WorkSleep 0070                  _pwm13Init 0371                  _pwm13Stop 0450  
                 _KEYDATAH 0117                   _KEYDATAL 0116          interrupt_function 0004  
                clear_ram0 0439        CheckKeyOldValue@411 003D        CheckKeyOldValue@412 003B  
              __stringbase 03DF       __size_of_Init_System 0013      __end_of_Table_KeyFalg 03E8  
    __end_of_Table_KeyDown 03E9   __end_of_GetTouchKeyValue 0233            ?_CheckValidTime 0070  
              ??_KeyServer 0077                 ?_pwm13Init 0070                ??_Isr_Timer 0070  
               ?_pwm13Stop 0070                   _MainTime 0039         JudgeKeyOldData@427 0074  
       JudgeKeyOldData@428 0072         JudgeKeyOldData@429 0075           __size_of_KeyIsIn 000A  
         __size_of_KeyHave 0007           _Table_KeyChannel 03E9           __size_of___lwmod 0024  
       __end_of__stringtab 03E0            _JudgeKeyOldData 0233                   _b_kover1 03C3  
                 _b_ksleep 03C0       __end_of_TurnKeyFlags 02F7                ??_WorkSleep 0077  
                 __ptext10 0371                   __ptext11 031C                   __ptext20 0017  
                 __ptext12 03C7                   __ptext21 0449                   __ptext13 02AA  
                 __ptext22 0340                   __ptext14 02D1                   __ptext23 027D  
                 __ptext15 0415                   __ptext24 02F7                   __ptext16 0422  
                 __ptext25 042F                   __ptext17 01E6                   __ptext26 0233  
                 __ptext18 0407                   __ptext27 039E                   __ptext19 0389  
                 _keyCount 0026   __size_of_CheckOnceResult 00CF              __size_of_main 0014  
                 _modeStep 0038           _SystemEnterSleep 00FF                   _pwm1Init 03F9  
                 _pwm3Init 0441      __end_of_CheckTouchKey 02D1                   _pwm1Stop 0458  
                 _pwm3Stop 0455                   _workStep 0079                ??_pwm13Init 0072  
        ?_CheckKeyOldValue 0070              ??_RKeyOldData 0074                ??_pwm13Stop 0072  
                 intlevel1 0000              ??_ClearResSum 0072         ??_CheckKeyOldValue 0077  
         ___lwmod@dividend 0074                  stringcode 03DA    __end_of_JudgeKeyOldData 026F  
               _B_MainLoop 03C6                 _OPTION_REG 0001        SystemEnterSleep@423 0043  
      SystemEnterSleep@424 003D        SystemEnterSleep@425 0041        SystemEnterSleep@426 003F  
          ___lwmod@divisor 0072            ___lwmod@counter 0076                   stringdir 03DA  
                 stringtab 03DA             KeyClearOne@381 0072              KeyClearIn@383 0074  
       CheckValidTime@F419 0020        __end_of_RKeyOldData 0309                 KeyIsIn@377 0072  
               KeyIsIn@378 0073                 KeyHave@390 0072      __end_of_Refurbish_Sfr 03F9  
      __end_of_ClearResSum 040F          ??_CheckOnceResult 0074  
