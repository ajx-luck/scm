Version 3.2 HI-TECH Software Intermediate Code
"26 C:\mcuproject\scm\zdt\D108_8F083_tssop20_\D108_8F083_tssop20_\Touch_Kscan_Library.h
[v _KeyFlag `Vuc ~T0 @X0 -> 0 `x e ]
"19
[v _SystemEnterSleep `(v ~T0 @X0 0 ef ]
[v F758 `(v ~T0 @X0 1 tf1`ul ]
"150 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc.h
[v __delay `JF758 ~T0 @X0 0 e ]
[p i __delay ]
[p mainexit ]
"18 C:\mcuproject\scm\zdt\D108_8F083_tssop20_\D108_8F083_tssop20_\Touch_Kscan_Library.h
[v _CheckTouchKey `(v ~T0 @X0 0 ef ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"5 C:\mcuproject\scm\SCMCU_IDE_V2.00.16_Beta5\SCMCU_IDE_V2.00.16_Beta5\data\include\sc8f083.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;sc8f083.h: 5: volatile unsigned char INDF @ 0x00;
"6
[v _OPTION_REG `Vuc ~T0 @X0 1 e@1 ]
[; ;sc8f083.h: 6: volatile unsigned char OPTION_REG @ 0x01;
"7
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;sc8f083.h: 7: volatile unsigned char PCL @ 0x02;
"8
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;sc8f083.h: 8: volatile unsigned char STATUS @ 0x03;
"9
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;sc8f083.h: 9: volatile unsigned char FSR @ 0x04;
"10
[v _TRISB `Vuc ~T0 @X0 1 e@5 ]
[; ;sc8f083.h: 10: volatile unsigned char TRISB @ 0x05;
"11
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;sc8f083.h: 11: volatile unsigned char PORTB @ 0x06;
"12
[v _WPDB `Vuc ~T0 @X0 1 e@7 ]
[; ;sc8f083.h: 12: volatile unsigned char WPDB @ 0x07;
"13
[v _WPUB `Vuc ~T0 @X0 1 e@8 ]
[; ;sc8f083.h: 13: volatile unsigned char WPUB @ 0x08;
"14
[v _IOCB `Vuc ~T0 @X0 1 e@9 ]
[; ;sc8f083.h: 14: volatile unsigned char IOCB @ 0x09;
"15
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;sc8f083.h: 15: volatile unsigned char PCLATH @ 0x0A;
"16
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;sc8f083.h: 16: volatile unsigned char INTCON @ 0x0B;
"17
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;sc8f083.h: 17: volatile unsigned char ODCONB @ 0x0C;
"18
[v _PIR1 `Vuc ~T0 @X0 1 e@13 ]
[; ;sc8f083.h: 18: volatile unsigned char PIR1 @ 0x0D;
"19
[v _PIE1 `Vuc ~T0 @X0 1 e@14 ]
[; ;sc8f083.h: 19: volatile unsigned char PIE1 @ 0x0E;
"20
[v _CMP1CON0 `Vuc ~T0 @X0 1 e@15 ]
[; ;sc8f083.h: 20: volatile unsigned char CMP1CON0 @ 0x0F;
"21
[v _CMP1CON1 `Vuc ~T0 @X0 1 e@16 ]
[; ;sc8f083.h: 21: volatile unsigned char CMP1CON1 @ 0x10;
"22
[v _PR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;sc8f083.h: 22: volatile unsigned char PR2 @ 0x11;
"23
[v _TMR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;sc8f083.h: 23: volatile unsigned char TMR2 @ 0x12;
"24
[v _T2CON `Vuc ~T0 @X0 1 e@19 ]
[; ;sc8f083.h: 24: volatile unsigned char T2CON @ 0x13;
"25
[v _OSCCON `Vuc ~T0 @X0 1 e@20 ]
[; ;sc8f083.h: 25: volatile unsigned char OSCCON @ 0x14;
"26
[v _PWMCON0 `Vuc ~T0 @X0 1 e@21 ]
[; ;sc8f083.h: 26: volatile unsigned char PWMCON0 @ 0x15;
"27
[v _PWMCON1 `Vuc ~T0 @X0 1 e@22 ]
[; ;sc8f083.h: 27: volatile unsigned char PWMCON1 @ 0x16;
"28
[v _PWMTL `Vuc ~T0 @X0 1 e@23 ]
[; ;sc8f083.h: 28: volatile unsigned char PWMTL @ 0x17;
"29
[v _PWMTH `Vuc ~T0 @X0 1 e@24 ]
[; ;sc8f083.h: 29: volatile unsigned char PWMTH @ 0x18;
"30
[v _PWMD0L `Vuc ~T0 @X0 1 e@25 ]
[; ;sc8f083.h: 30: volatile unsigned char PWMD0L @ 0x19;
"31
[v _PWMD1L `Vuc ~T0 @X0 1 e@26 ]
[; ;sc8f083.h: 31: volatile unsigned char PWMD1L @ 0x1A;
"32
[v _PWMD4L `Vuc ~T0 @X0 1 e@27 ]
[; ;sc8f083.h: 32: volatile unsigned char PWMD4L @ 0x1B;
"33
[v _PWMT4L `Vuc ~T0 @X0 1 e@28 ]
[; ;sc8f083.h: 33: volatile unsigned char PWMT4L @ 0x1C;
"34
[v _PWMCON2 `Vuc ~T0 @X0 1 e@29 ]
[; ;sc8f083.h: 34: volatile unsigned char PWMCON2 @ 0x1D;
"35
[v _PWMD01H `Vuc ~T0 @X0 1 e@30 ]
[; ;sc8f083.h: 35: volatile unsigned char PWMD01H @ 0x1E;
"36
[v _PWM01DT `Vuc ~T0 @X0 1 e@31 ]
[; ;sc8f083.h: 36: volatile unsigned char PWM01DT @ 0x1F;
"37
[v _TMR0 `Vuc ~T0 @X0 1 e@129 ]
[; ;sc8f083.h: 37: volatile unsigned char TMR0 @ 0x81;
"38
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;sc8f083.h: 38: volatile unsigned char TRISA @ 0x85;
"39
[v _PORTA `Vuc ~T0 @X0 1 e@134 ]
[; ;sc8f083.h: 39: volatile unsigned char PORTA @ 0x86;
"40
[v _WPDA `Vuc ~T0 @X0 1 e@135 ]
[; ;sc8f083.h: 40: volatile unsigned char WPDA @ 0x87;
"41
[v _WPUA `Vuc ~T0 @X0 1 e@136 ]
[; ;sc8f083.h: 41: volatile unsigned char WPUA @ 0x88;
"42
[v _IOCA `Vuc ~T0 @X0 1 e@137 ]
[; ;sc8f083.h: 42: volatile unsigned char IOCA @ 0x89;
"43
[v _ODCONA `Vuc ~T0 @X0 1 e@140 ]
[; ;sc8f083.h: 43: volatile unsigned char ODCONA @ 0x8C;
"44
[v _EECON1 `Vuc ~T0 @X0 1 e@141 ]
[; ;sc8f083.h: 44: volatile unsigned char EECON1 @ 0x8D;
"45
[v _EECON2 `Vuc ~T0 @X0 1 e@142 ]
[; ;sc8f083.h: 45: volatile unsigned char EECON2 @ 0x8E;
"46
[v _EEDAT `Vuc ~T0 @X0 1 e@143 ]
[; ;sc8f083.h: 46: volatile unsigned char EEDAT @ 0x8F;
"47
[v _EEDATH `Vuc ~T0 @X0 1 e@144 ]
[; ;sc8f083.h: 47: volatile unsigned char EEDATH @ 0x90;
"48
[v _EEADR `Vuc ~T0 @X0 1 e@145 ]
[; ;sc8f083.h: 48: volatile unsigned char EEADR @ 0x91;
"49
[v _EEADRH `Vuc ~T0 @X0 1 e@146 ]
[; ;sc8f083.h: 49: volatile unsigned char EEADRH @ 0x92;
"50
[v _ANSEL0 `Vuc ~T0 @X0 1 e@147 ]
[; ;sc8f083.h: 50: volatile unsigned char ANSEL0 @ 0x93;
"51
[v _ANSEL1 `Vuc ~T0 @X0 1 e@148 ]
[; ;sc8f083.h: 51: volatile unsigned char ANSEL1 @ 0x94;
"52
[v _ADCON0 `Vuc ~T0 @X0 1 e@149 ]
[; ;sc8f083.h: 52: volatile unsigned char ADCON0 @ 0x95;
"53
[v _ADCON1 `Vuc ~T0 @X0 1 e@150 ]
[; ;sc8f083.h: 53: volatile unsigned char ADCON1 @ 0x96;
"54
[v _ADRESL `Vuc ~T0 @X0 1 e@152 ]
[; ;sc8f083.h: 54: volatile unsigned char ADRESL @ 0x98;
"55
[v _ADRESH `Vuc ~T0 @X0 1 e@153 ]
[; ;sc8f083.h: 55: volatile unsigned char ADRESH @ 0x99;
"56
[v _CMP2CON0 `Vuc ~T0 @X0 1 e@154 ]
[; ;sc8f083.h: 56: volatile unsigned char CMP2CON0 @ 0x9A;
"57
[v _PWMD2L `Vuc ~T0 @X0 1 e@155 ]
[; ;sc8f083.h: 57: volatile unsigned char PWMD2L @ 0x9B;
"58
[v _PWMD3L `Vuc ~T0 @X0 1 e@156 ]
[; ;sc8f083.h: 58: volatile unsigned char PWMD3L @ 0x9C;
"59
[v _PWM23DT `Vuc ~T0 @X0 1 e@157 ]
[; ;sc8f083.h: 59: volatile unsigned char PWM23DT @ 0x9D;
"60
[v _PWMD23H `Vuc ~T0 @X0 1 e@158 ]
[; ;sc8f083.h: 60: volatile unsigned char PWMD23H @ 0x9E;
"61
[v _CMP2CON1 `Vuc ~T0 @X0 1 e@159 ]
[; ;sc8f083.h: 61: volatile unsigned char CMP2CON1 @ 0x9F;
"62
[v _TRISC `Vuc ~T0 @X0 1 e@261 ]
[; ;sc8f083.h: 62: volatile unsigned char TRISC @ 0x105;
"63
[v _PORTC `Vuc ~T0 @X0 1 e@262 ]
[; ;sc8f083.h: 63: volatile unsigned char PORTC @ 0x106;
"64
[v _WPUC `Vuc ~T0 @X0 1 e@264 ]
[; ;sc8f083.h: 64: volatile unsigned char WPUC @ 0x108;
"65
[v _ANSEL2 `Vuc ~T0 @X0 1 e@265 ]
[; ;sc8f083.h: 65: volatile unsigned char ANSEL2 @ 0x109;
"66
[v _TMR1L `Vuc ~T0 @X0 1 e@268 ]
[; ;sc8f083.h: 66: volatile unsigned char TMR1L @ 0x10C;
"67
[v _TMR1H `Vuc ~T0 @X0 1 e@269 ]
[; ;sc8f083.h: 67: volatile unsigned char TMR1H @ 0x10D;
"68
[v _T1CON `Vuc ~T0 @X0 1 e@270 ]
[; ;sc8f083.h: 68: volatile unsigned char T1CON @ 0x10E;
"69
[v _PIR2 `Vuc ~T0 @X0 1 e@271 ]
[; ;sc8f083.h: 69: volatile unsigned char PIR2 @ 0x10F;
"70
[v _PIE2 `Vuc ~T0 @X0 1 e@272 ]
[; ;sc8f083.h: 70: volatile unsigned char PIE2 @ 0x110;
"71
[v _KEYCON0 `Vuc ~T0 @X0 1 e@273 ]
[; ;sc8f083.h: 71: volatile unsigned char KEYCON0 @ 0x111;
"72
[v _KEYCON1 `Vuc ~T0 @X0 1 e@274 ]
[; ;sc8f083.h: 72: volatile unsigned char KEYCON1 @ 0x112;
"73
[v _KEYCON2 `Vuc ~T0 @X0 1 e@275 ]
[; ;sc8f083.h: 73: volatile unsigned char KEYCON2 @ 0x113;
"74
[v _KEYDATAL `Vuc ~T0 @X0 1 e@278 ]
[; ;sc8f083.h: 74: volatile unsigned char KEYDATAL @ 0x116;
"75
[v _KEYDATAH `Vuc ~T0 @X0 1 e@279 ]
[; ;sc8f083.h: 75: volatile unsigned char KEYDATAH @ 0x117;
"76
[v _TXSTA `Vuc ~T0 @X0 1 e@280 ]
[; ;sc8f083.h: 76: volatile unsigned char TXSTA @ 0x118;
"77
[v _RCSTA `Vuc ~T0 @X0 1 e@281 ]
[; ;sc8f083.h: 77: volatile unsigned char RCSTA @ 0x119;
"78
[v _SPBRG `Vuc ~T0 @X0 1 e@282 ]
[; ;sc8f083.h: 78: volatile unsigned char SPBRG @ 0x11A;
"79
[v _TXREG `Vuc ~T0 @X0 1 e@283 ]
[; ;sc8f083.h: 79: volatile unsigned char TXREG @ 0x11B;
"80
[v _RCREG `Vuc ~T0 @X0 1 e@284 ]
[; ;sc8f083.h: 80: volatile unsigned char RCREG @ 0x11C;
"82
[v _T0LSE_EN `Vb ~T0 @X0 1 e@15 ]
[; ;sc8f083.h: 82: volatile bit T0LSE_EN @ ((unsigned)&OPTION_REG*8)+7;
"83
[v _INTEDG `Vb ~T0 @X0 1 e@14 ]
[; ;sc8f083.h: 83: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"84
[v _T0CS `Vb ~T0 @X0 1 e@13 ]
[; ;sc8f083.h: 84: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"85
[v _T0SE `Vb ~T0 @X0 1 e@12 ]
[; ;sc8f083.h: 85: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"86
[v _PSA `Vb ~T0 @X0 1 e@11 ]
[; ;sc8f083.h: 86: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"87
[v _PS2 `Vb ~T0 @X0 1 e@10 ]
[; ;sc8f083.h: 87: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"88
[v _PS1 `Vb ~T0 @X0 1 e@9 ]
[; ;sc8f083.h: 88: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"89
[v _PS0 `Vb ~T0 @X0 1 e@8 ]
[; ;sc8f083.h: 89: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"92
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;sc8f083.h: 92: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"93
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;sc8f083.h: 93: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"94
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;sc8f083.h: 94: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"95
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;sc8f083.h: 95: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"96
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;sc8f083.h: 96: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"97
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;sc8f083.h: 97: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"98
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;sc8f083.h: 98: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"99
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;sc8f083.h: 99: volatile bit C @ ((unsigned)&STATUS*8)+0;
"102
[v _TRISB7 `Vb ~T0 @X0 1 e@47 ]
[; ;sc8f083.h: 102: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"103
[v _TRISB6 `Vb ~T0 @X0 1 e@46 ]
[; ;sc8f083.h: 103: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"104
[v _TRISB5 `Vb ~T0 @X0 1 e@45 ]
[; ;sc8f083.h: 104: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"105
[v _TRISB4 `Vb ~T0 @X0 1 e@44 ]
[; ;sc8f083.h: 105: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"106
[v _TRISB3 `Vb ~T0 @X0 1 e@43 ]
[; ;sc8f083.h: 106: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"107
[v _TRISB2 `Vb ~T0 @X0 1 e@42 ]
[; ;sc8f083.h: 107: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"108
[v _TRISB1 `Vb ~T0 @X0 1 e@41 ]
[; ;sc8f083.h: 108: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"109
[v _TRISB0 `Vb ~T0 @X0 1 e@40 ]
[; ;sc8f083.h: 109: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"112
[v _RB7 `Vb ~T0 @X0 1 e@55 ]
[; ;sc8f083.h: 112: volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
"113
[v _RB6 `Vb ~T0 @X0 1 e@54 ]
[; ;sc8f083.h: 113: volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
"114
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;sc8f083.h: 114: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"115
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;sc8f083.h: 115: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"116
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;sc8f083.h: 116: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"117
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;sc8f083.h: 117: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"118
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;sc8f083.h: 118: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"119
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;sc8f083.h: 119: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"122
[v _WPDB7 `Vb ~T0 @X0 1 e@63 ]
[; ;sc8f083.h: 122: volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
"123
[v _WPDB6 `Vb ~T0 @X0 1 e@62 ]
[; ;sc8f083.h: 123: volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
"124
[v _WPDB5 `Vb ~T0 @X0 1 e@61 ]
[; ;sc8f083.h: 124: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"125
[v _WPDB4 `Vb ~T0 @X0 1 e@60 ]
[; ;sc8f083.h: 125: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"126
[v _WPDB3 `Vb ~T0 @X0 1 e@59 ]
[; ;sc8f083.h: 126: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"127
[v _WPDB2 `Vb ~T0 @X0 1 e@58 ]
[; ;sc8f083.h: 127: volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
"128
[v _WPDB1 `Vb ~T0 @X0 1 e@57 ]
[; ;sc8f083.h: 128: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"129
[v _WPDB0 `Vb ~T0 @X0 1 e@56 ]
[; ;sc8f083.h: 129: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"132
[v _WPUB7 `Vb ~T0 @X0 1 e@71 ]
[; ;sc8f083.h: 132: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"133
[v _WPUB6 `Vb ~T0 @X0 1 e@70 ]
[; ;sc8f083.h: 133: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"134
[v _WPUB5 `Vb ~T0 @X0 1 e@69 ]
[; ;sc8f083.h: 134: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"135
[v _WPUB4 `Vb ~T0 @X0 1 e@68 ]
[; ;sc8f083.h: 135: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"136
[v _WPUB3 `Vb ~T0 @X0 1 e@67 ]
[; ;sc8f083.h: 136: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"137
[v _WPUB2 `Vb ~T0 @X0 1 e@66 ]
[; ;sc8f083.h: 137: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"138
[v _WPUB1 `Vb ~T0 @X0 1 e@65 ]
[; ;sc8f083.h: 138: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"139
[v _WPUB0 `Vb ~T0 @X0 1 e@64 ]
[; ;sc8f083.h: 139: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"142
[v _IOCB7 `Vb ~T0 @X0 1 e@79 ]
[; ;sc8f083.h: 142: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"143
[v _IOCB6 `Vb ~T0 @X0 1 e@78 ]
[; ;sc8f083.h: 143: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"144
[v _IOCB5 `Vb ~T0 @X0 1 e@77 ]
[; ;sc8f083.h: 144: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"145
[v _IOCB4 `Vb ~T0 @X0 1 e@76 ]
[; ;sc8f083.h: 145: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"146
[v _IOCB3 `Vb ~T0 @X0 1 e@75 ]
[; ;sc8f083.h: 146: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"147
[v _IOCB2 `Vb ~T0 @X0 1 e@74 ]
[; ;sc8f083.h: 147: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"148
[v _IOCB1 `Vb ~T0 @X0 1 e@73 ]
[; ;sc8f083.h: 148: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"149
[v _IOCB0 `Vb ~T0 @X0 1 e@72 ]
[; ;sc8f083.h: 149: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"152
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;sc8f083.h: 152: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"153
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;sc8f083.h: 153: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"154
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;sc8f083.h: 154: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"155
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;sc8f083.h: 155: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"156
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;sc8f083.h: 156: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"157
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;sc8f083.h: 157: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"158
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;sc8f083.h: 158: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"159
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;sc8f083.h: 159: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"162
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;sc8f083.h: 162: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"163
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;sc8f083.h: 163: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"164
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;sc8f083.h: 164: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"165
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;sc8f083.h: 165: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"166
[v _ODCONB3 `Vb ~T0 @X0 1 e@99 ]
[; ;sc8f083.h: 166: volatile bit ODCONB3 @ ((unsigned)&ODCONB*8)+3;
"167
[v _ODCONB2 `Vb ~T0 @X0 1 e@98 ]
[; ;sc8f083.h: 167: volatile bit ODCONB2 @ ((unsigned)&ODCONB*8)+2;
"168
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;sc8f083.h: 168: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"169
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;sc8f083.h: 169: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"172
[v _RCIF `Vb ~T0 @X0 1 e@111 ]
[; ;sc8f083.h: 172: volatile bit RCIF @ ((unsigned)&PIR1*8)+7;
"173
[v _TXIF `Vb ~T0 @X0 1 e@110 ]
[; ;sc8f083.h: 173: volatile bit TXIF @ ((unsigned)&PIR1*8)+6;
"174
[v _CMP1IF `Vb ~T0 @X0 1 e@109 ]
[; ;sc8f083.h: 174: volatile bit CMP1IF @ ((unsigned)&PIR1*8)+5;
"175
[v _PWMIF `Vb ~T0 @X0 1 e@108 ]
[; ;sc8f083.h: 175: volatile bit PWMIF @ ((unsigned)&PIR1*8)+4;
"176
[v _RAIF `Vb ~T0 @X0 1 e@107 ]
[; ;sc8f083.h: 176: volatile bit RAIF @ ((unsigned)&PIR1*8)+3;
"177
[v _TMR1IF `Vb ~T0 @X0 1 e@106 ]
[; ;sc8f083.h: 177: volatile bit TMR1IF @ ((unsigned)&PIR1*8)+2;
"178
[v _TMR2IF `Vb ~T0 @X0 1 e@105 ]
[; ;sc8f083.h: 178: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"179
[v _ADIF `Vb ~T0 @X0 1 e@104 ]
[; ;sc8f083.h: 179: volatile bit ADIF @ ((unsigned)&PIR1*8)+0;
"182
[v _RCIE `Vb ~T0 @X0 1 e@119 ]
[; ;sc8f083.h: 182: volatile bit RCIE @ ((unsigned)&PIE1*8)+7;
"183
[v _TXIE `Vb ~T0 @X0 1 e@118 ]
[; ;sc8f083.h: 183: volatile bit TXIE @ ((unsigned)&PIE1*8)+6;
"184
[v _CMP1IE `Vb ~T0 @X0 1 e@117 ]
[; ;sc8f083.h: 184: volatile bit CMP1IE @ ((unsigned)&PIE1*8)+5;
"185
[v _PWMIE `Vb ~T0 @X0 1 e@116 ]
[; ;sc8f083.h: 185: volatile bit PWMIE @ ((unsigned)&PIE1*8)+4;
"186
[v _RAIE `Vb ~T0 @X0 1 e@115 ]
[; ;sc8f083.h: 186: volatile bit RAIE @ ((unsigned)&PIE1*8)+3;
"187
[v _TMR1IE `Vb ~T0 @X0 1 e@114 ]
[; ;sc8f083.h: 187: volatile bit TMR1IE @ ((unsigned)&PIE1*8)+2;
"188
[v _TMR2IE `Vb ~T0 @X0 1 e@113 ]
[; ;sc8f083.h: 188: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"189
[v _ADIE `Vb ~T0 @X0 1 e@112 ]
[; ;sc8f083.h: 189: volatile bit ADIE @ ((unsigned)&PIE1*8)+0;
"192
[v _CMP1EN `Vb ~T0 @X0 1 e@127 ]
[; ;sc8f083.h: 192: volatile bit CMP1EN @ ((unsigned)&CMP1CON0*8)+7;
"193
[v _CMP1PS `Vb ~T0 @X0 1 e@126 ]
[; ;sc8f083.h: 193: volatile bit CMP1PS @ ((unsigned)&CMP1CON0*8)+6;
"194
[v _CMP1NS2 `Vb ~T0 @X0 1 e@125 ]
[; ;sc8f083.h: 194: volatile bit CMP1NS2 @ ((unsigned)&CMP1CON0*8)+5;
"195
[v _CMP1NS1 `Vb ~T0 @X0 1 e@124 ]
[; ;sc8f083.h: 195: volatile bit CMP1NS1 @ ((unsigned)&CMP1CON0*8)+4;
"196
[v _CMP1NS0 `Vb ~T0 @X0 1 e@123 ]
[; ;sc8f083.h: 196: volatile bit CMP1NS0 @ ((unsigned)&CMP1CON0*8)+3;
"197
[v _CMP1NV `Vb ~T0 @X0 1 e@122 ]
[; ;sc8f083.h: 197: volatile bit CMP1NV @ ((unsigned)&CMP1CON0*8)+2;
"198
[v _CMP1OUT `Vb ~T0 @X0 1 e@121 ]
[; ;sc8f083.h: 198: volatile bit CMP1OUT @ ((unsigned)&CMP1CON0*8)+1;
"199
[v _CMP1OEN `Vb ~T0 @X0 1 e@120 ]
[; ;sc8f083.h: 199: volatile bit CMP1OEN @ ((unsigned)&CMP1CON0*8)+0;
"202
[v _CMP1IM `Vb ~T0 @X0 1 e@135 ]
[; ;sc8f083.h: 202: volatile bit CMP1IM @ ((unsigned)&CMP1CON1*8)+7;
"203
[v _AN1_EN `Vb ~T0 @X0 1 e@134 ]
[; ;sc8f083.h: 203: volatile bit AN1_EN @ ((unsigned)&CMP1CON1*8)+6;
"204
[v _RBIAS1_H `Vb ~T0 @X0 1 e@133 ]
[; ;sc8f083.h: 204: volatile bit RBIAS1_H @ ((unsigned)&CMP1CON1*8)+5;
"205
[v _RBIAS1_L `Vb ~T0 @X0 1 e@132 ]
[; ;sc8f083.h: 205: volatile bit RBIAS1_L @ ((unsigned)&CMP1CON1*8)+4;
"206
[v _LVDS13 `Vb ~T0 @X0 1 e@131 ]
[; ;sc8f083.h: 206: volatile bit LVDS13 @ ((unsigned)&CMP1CON1*8)+3;
"207
[v _LVDS12 `Vb ~T0 @X0 1 e@130 ]
[; ;sc8f083.h: 207: volatile bit LVDS12 @ ((unsigned)&CMP1CON1*8)+2;
"208
[v _LVDS11 `Vb ~T0 @X0 1 e@129 ]
[; ;sc8f083.h: 208: volatile bit LVDS11 @ ((unsigned)&CMP1CON1*8)+1;
"209
[v _LVDS10 `Vb ~T0 @X0 1 e@128 ]
[; ;sc8f083.h: 209: volatile bit LVDS10 @ ((unsigned)&CMP1CON1*8)+0;
"212
[v _CLK_SEL `Vb ~T0 @X0 1 e@159 ]
[; ;sc8f083.h: 212: volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
"213
[v _TOUTPS3 `Vb ~T0 @X0 1 e@158 ]
[; ;sc8f083.h: 213: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"214
[v _TOUTPS2 `Vb ~T0 @X0 1 e@157 ]
[; ;sc8f083.h: 214: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"215
[v _TOUTPS1 `Vb ~T0 @X0 1 e@156 ]
[; ;sc8f083.h: 215: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"216
[v _TOUTPS0 `Vb ~T0 @X0 1 e@155 ]
[; ;sc8f083.h: 216: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"217
[v _TMR2ON `Vb ~T0 @X0 1 e@154 ]
[; ;sc8f083.h: 217: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"218
[v _T2CKPS1 `Vb ~T0 @X0 1 e@153 ]
[; ;sc8f083.h: 218: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"219
[v _T2CKPS0 `Vb ~T0 @X0 1 e@152 ]
[; ;sc8f083.h: 219: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"222
[v _IRCF2 `Vb ~T0 @X0 1 e@166 ]
[; ;sc8f083.h: 222: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"223
[v _IRCF1 `Vb ~T0 @X0 1 e@165 ]
[; ;sc8f083.h: 223: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"224
[v _IRCF0 `Vb ~T0 @X0 1 e@164 ]
[; ;sc8f083.h: 224: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"225
[v _SWDTEN `Vb ~T0 @X0 1 e@161 ]
[; ;sc8f083.h: 225: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;
"228
[v _CLKDIV2 `Vb ~T0 @X0 1 e@175 ]
[; ;sc8f083.h: 228: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"229
[v _CLKDIV1 `Vb ~T0 @X0 1 e@174 ]
[; ;sc8f083.h: 229: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"230
[v _CLKDIV0 `Vb ~T0 @X0 1 e@173 ]
[; ;sc8f083.h: 230: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"231
[v _PWM4EN `Vb ~T0 @X0 1 e@172 ]
[; ;sc8f083.h: 231: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"232
[v _PWM3EN `Vb ~T0 @X0 1 e@171 ]
[; ;sc8f083.h: 232: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"233
[v _PWM2EN `Vb ~T0 @X0 1 e@170 ]
[; ;sc8f083.h: 233: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"234
[v _PWM1EN `Vb ~T0 @X0 1 e@169 ]
[; ;sc8f083.h: 234: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"235
[v _PWM0EN `Vb ~T0 @X0 1 e@168 ]
[; ;sc8f083.h: 235: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"238
[v _PWMIO_SEL1 `Vb ~T0 @X0 1 e@183 ]
[; ;sc8f083.h: 238: volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
"239
[v _PWMIO_SEL0 `Vb ~T0 @X0 1 e@182 ]
[; ;sc8f083.h: 239: volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
"240
[v _PWM2DTEN `Vb ~T0 @X0 1 e@181 ]
[; ;sc8f083.h: 240: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"241
[v _PWM0DTEN `Vb ~T0 @X0 1 e@180 ]
[; ;sc8f083.h: 241: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"242
[v _DT_DIV1 `Vb ~T0 @X0 1 e@177 ]
[; ;sc8f083.h: 242: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"243
[v _DT_DIV0 `Vb ~T0 @X0 1 e@176 ]
[; ;sc8f083.h: 243: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"246
[v _PWM4D9 `Vb ~T0 @X0 1 e@197 ]
[; ;sc8f083.h: 246: volatile bit PWM4D9 @ ((unsigned)&PWMTH*8)+5;
"247
[v _PWM4D8 `Vb ~T0 @X0 1 e@196 ]
[; ;sc8f083.h: 247: volatile bit PWM4D8 @ ((unsigned)&PWMTH*8)+4;
"248
[v _PWM4T9 `Vb ~T0 @X0 1 e@195 ]
[; ;sc8f083.h: 248: volatile bit PWM4T9 @ ((unsigned)&PWMTH*8)+3;
"249
[v _PWM4T8 `Vb ~T0 @X0 1 e@194 ]
[; ;sc8f083.h: 249: volatile bit PWM4T8 @ ((unsigned)&PWMTH*8)+2;
"250
[v _PWMT9 `Vb ~T0 @X0 1 e@193 ]
[; ;sc8f083.h: 250: volatile bit PWMT9 @ ((unsigned)&PWMTH*8)+1;
"251
[v _PWMT8 `Vb ~T0 @X0 1 e@192 ]
[; ;sc8f083.h: 251: volatile bit PWMT8 @ ((unsigned)&PWMTH*8)+0;
"254
[v _PWM4DIR `Vb ~T0 @X0 1 e@236 ]
[; ;sc8f083.h: 254: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"255
[v _PWM3DIR `Vb ~T0 @X0 1 e@235 ]
[; ;sc8f083.h: 255: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"256
[v _PWM2DIR `Vb ~T0 @X0 1 e@234 ]
[; ;sc8f083.h: 256: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"257
[v _PWM1DIR `Vb ~T0 @X0 1 e@233 ]
[; ;sc8f083.h: 257: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"258
[v _PWM0DIR `Vb ~T0 @X0 1 e@232 ]
[; ;sc8f083.h: 258: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"261
[v _PWMD19 `Vb ~T0 @X0 1 e@245 ]
[; ;sc8f083.h: 261: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"262
[v _PWMD18 `Vb ~T0 @X0 1 e@244 ]
[; ;sc8f083.h: 262: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"263
[v _PWMD09 `Vb ~T0 @X0 1 e@241 ]
[; ;sc8f083.h: 263: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"264
[v _PWMD08 `Vb ~T0 @X0 1 e@240 ]
[; ;sc8f083.h: 264: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"267
[v _PWM01DT5 `Vb ~T0 @X0 1 e@253 ]
[; ;sc8f083.h: 267: volatile bit PWM01DT5 @ ((unsigned)&PWM01DT*8)+5;
"268
[v _PWM01DT4 `Vb ~T0 @X0 1 e@252 ]
[; ;sc8f083.h: 268: volatile bit PWM01DT4 @ ((unsigned)&PWM01DT*8)+4;
"269
[v _PWM01DT3 `Vb ~T0 @X0 1 e@251 ]
[; ;sc8f083.h: 269: volatile bit PWM01DT3 @ ((unsigned)&PWM01DT*8)+3;
"270
[v _PWM01DT2 `Vb ~T0 @X0 1 e@250 ]
[; ;sc8f083.h: 270: volatile bit PWM01DT2 @ ((unsigned)&PWM01DT*8)+2;
"271
[v _PWM01DT1 `Vb ~T0 @X0 1 e@249 ]
[; ;sc8f083.h: 271: volatile bit PWM01DT1 @ ((unsigned)&PWM01DT*8)+1;
"272
[v _PWM01DT0 `Vb ~T0 @X0 1 e@248 ]
[; ;sc8f083.h: 272: volatile bit PWM01DT0 @ ((unsigned)&PWM01DT*8)+0;
"275
[v _TRISA7 `Vb ~T0 @X0 1 e@1071 ]
[; ;sc8f083.h: 275: volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
"276
[v _TRISA6 `Vb ~T0 @X0 1 e@1070 ]
[; ;sc8f083.h: 276: volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
"277
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;sc8f083.h: 277: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"278
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;sc8f083.h: 278: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"279
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;sc8f083.h: 279: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"280
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;sc8f083.h: 280: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"281
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;sc8f083.h: 281: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"282
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;sc8f083.h: 282: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"285
[v _RA7 `Vb ~T0 @X0 1 e@1079 ]
[; ;sc8f083.h: 285: volatile bit RA7 @ ((unsigned)&PORTA*8)+7;
"286
[v _RA6 `Vb ~T0 @X0 1 e@1078 ]
[; ;sc8f083.h: 286: volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
"287
[v _RA5 `Vb ~T0 @X0 1 e@1077 ]
[; ;sc8f083.h: 287: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"288
[v _RA4 `Vb ~T0 @X0 1 e@1076 ]
[; ;sc8f083.h: 288: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"289
[v _RA3 `Vb ~T0 @X0 1 e@1075 ]
[; ;sc8f083.h: 289: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"290
[v _RA2 `Vb ~T0 @X0 1 e@1074 ]
[; ;sc8f083.h: 290: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"291
[v _RA1 `Vb ~T0 @X0 1 e@1073 ]
[; ;sc8f083.h: 291: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"292
[v _RA0 `Vb ~T0 @X0 1 e@1072 ]
[; ;sc8f083.h: 292: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"295
[v _WPDA7 `Vb ~T0 @X0 1 e@1087 ]
[; ;sc8f083.h: 295: volatile bit WPDA7 @ ((unsigned)&WPDA*8)+7;
"296
[v _WPDA6 `Vb ~T0 @X0 1 e@1086 ]
[; ;sc8f083.h: 296: volatile bit WPDA6 @ ((unsigned)&WPDA*8)+6;
"297
[v _WPDA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;sc8f083.h: 297: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"298
[v _WPDA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;sc8f083.h: 298: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"299
[v _WPDA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;sc8f083.h: 299: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"300
[v _WPDA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;sc8f083.h: 300: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"301
[v _WPDA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;sc8f083.h: 301: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"302
[v _WPDA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;sc8f083.h: 302: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"305
[v _WPUA7 `Vb ~T0 @X0 1 e@1095 ]
[; ;sc8f083.h: 305: volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;
"306
[v _WPUA6 `Vb ~T0 @X0 1 e@1094 ]
[; ;sc8f083.h: 306: volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
"307
[v _WPUA5 `Vb ~T0 @X0 1 e@1093 ]
[; ;sc8f083.h: 307: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"308
[v _WPUA4 `Vb ~T0 @X0 1 e@1092 ]
[; ;sc8f083.h: 308: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"309
[v _WPUA3 `Vb ~T0 @X0 1 e@1091 ]
[; ;sc8f083.h: 309: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"310
[v _WPUA2 `Vb ~T0 @X0 1 e@1090 ]
[; ;sc8f083.h: 310: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"311
[v _WPUA1 `Vb ~T0 @X0 1 e@1089 ]
[; ;sc8f083.h: 311: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"312
[v _WPUA0 `Vb ~T0 @X0 1 e@1088 ]
[; ;sc8f083.h: 312: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
"315
[v _IOCA7 `Vb ~T0 @X0 1 e@1103 ]
[; ;sc8f083.h: 315: volatile bit IOCA7 @ ((unsigned)&IOCA*8)+7;
"316
[v _IOCA6 `Vb ~T0 @X0 1 e@1102 ]
[; ;sc8f083.h: 316: volatile bit IOCA6 @ ((unsigned)&IOCA*8)+6;
"317
[v _IOCA5 `Vb ~T0 @X0 1 e@1101 ]
[; ;sc8f083.h: 317: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"318
[v _IOCA4 `Vb ~T0 @X0 1 e@1100 ]
[; ;sc8f083.h: 318: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"319
[v _IOCA3 `Vb ~T0 @X0 1 e@1099 ]
[; ;sc8f083.h: 319: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"320
[v _IOCA2 `Vb ~T0 @X0 1 e@1098 ]
[; ;sc8f083.h: 320: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"321
[v _IOCA1 `Vb ~T0 @X0 1 e@1097 ]
[; ;sc8f083.h: 321: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"322
[v _IOCA0 `Vb ~T0 @X0 1 e@1096 ]
[; ;sc8f083.h: 322: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"325
[v _ODCONA7 `Vb ~T0 @X0 1 e@1127 ]
[; ;sc8f083.h: 325: volatile bit ODCONA7 @ ((unsigned)&ODCONA*8)+7;
"326
[v _ODCONA6 `Vb ~T0 @X0 1 e@1126 ]
[; ;sc8f083.h: 326: volatile bit ODCONA6 @ ((unsigned)&ODCONA*8)+6;
"327
[v _ODCONA5 `Vb ~T0 @X0 1 e@1125 ]
[; ;sc8f083.h: 327: volatile bit ODCONA5 @ ((unsigned)&ODCONA*8)+5;
"328
[v _ODCONA4 `Vb ~T0 @X0 1 e@1124 ]
[; ;sc8f083.h: 328: volatile bit ODCONA4 @ ((unsigned)&ODCONA*8)+4;
"329
[v _ODCONA3 `Vb ~T0 @X0 1 e@1123 ]
[; ;sc8f083.h: 329: volatile bit ODCONA3 @ ((unsigned)&ODCONA*8)+3;
"330
[v _ODCONA2 `Vb ~T0 @X0 1 e@1122 ]
[; ;sc8f083.h: 330: volatile bit ODCONA2 @ ((unsigned)&ODCONA*8)+2;
"331
[v _ODCONA1 `Vb ~T0 @X0 1 e@1121 ]
[; ;sc8f083.h: 331: volatile bit ODCONA1 @ ((unsigned)&ODCONA*8)+1;
"332
[v _ODCONA0 `Vb ~T0 @X0 1 e@1120 ]
[; ;sc8f083.h: 332: volatile bit ODCONA0 @ ((unsigned)&ODCONA*8)+0;
"335
[v _EEPGD `Vb ~T0 @X0 1 e@1135 ]
[; ;sc8f083.h: 335: volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
"336
[v _WRERR `Vb ~T0 @X0 1 e@1131 ]
[; ;sc8f083.h: 336: volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
"337
[v _WREN `Vb ~T0 @X0 1 e@1130 ]
[; ;sc8f083.h: 337: volatile bit WREN @ ((unsigned)&EECON1*8)+2;
"338
[v _WR `Vb ~T0 @X0 1 e@1129 ]
[; ;sc8f083.h: 338: volatile bit WR @ ((unsigned)&EECON1*8)+1;
"339
[v _RD `Vb ~T0 @X0 1 e@1128 ]
[; ;sc8f083.h: 339: volatile bit RD @ ((unsigned)&EECON1*8)+0;
"342
[v _EEDAT7 `Vb ~T0 @X0 1 e@1151 ]
[; ;sc8f083.h: 342: volatile bit EEDAT7 @ ((unsigned)&EEDAT*8)+7;
"343
[v _EEDAT6 `Vb ~T0 @X0 1 e@1150 ]
[; ;sc8f083.h: 343: volatile bit EEDAT6 @ ((unsigned)&EEDAT*8)+6;
"344
[v _EEDAT5 `Vb ~T0 @X0 1 e@1149 ]
[; ;sc8f083.h: 344: volatile bit EEDAT5 @ ((unsigned)&EEDAT*8)+5;
"345
[v _EEDAT4 `Vb ~T0 @X0 1 e@1148 ]
[; ;sc8f083.h: 345: volatile bit EEDAT4 @ ((unsigned)&EEDAT*8)+4;
"346
[v _EEDAT3 `Vb ~T0 @X0 1 e@1147 ]
[; ;sc8f083.h: 346: volatile bit EEDAT3 @ ((unsigned)&EEDAT*8)+3;
"347
[v _EEDAT2 `Vb ~T0 @X0 1 e@1146 ]
[; ;sc8f083.h: 347: volatile bit EEDAT2 @ ((unsigned)&EEDAT*8)+2;
"348
[v _EEDAT1 `Vb ~T0 @X0 1 e@1145 ]
[; ;sc8f083.h: 348: volatile bit EEDAT1 @ ((unsigned)&EEDAT*8)+1;
"349
[v _EEDAT0 `Vb ~T0 @X0 1 e@1144 ]
[; ;sc8f083.h: 349: volatile bit EEDAT0 @ ((unsigned)&EEDAT*8)+0;
"352
[v _EEDATH7 `Vb ~T0 @X0 1 e@1159 ]
[; ;sc8f083.h: 352: volatile bit EEDATH7 @ ((unsigned)&EEDATH*8)+7;
"353
[v _EEDATH6 `Vb ~T0 @X0 1 e@1158 ]
[; ;sc8f083.h: 353: volatile bit EEDATH6 @ ((unsigned)&EEDATH*8)+6;
"354
[v _EEDATH5 `Vb ~T0 @X0 1 e@1157 ]
[; ;sc8f083.h: 354: volatile bit EEDATH5 @ ((unsigned)&EEDATH*8)+5;
"355
[v _EEDATH4 `Vb ~T0 @X0 1 e@1156 ]
[; ;sc8f083.h: 355: volatile bit EEDATH4 @ ((unsigned)&EEDATH*8)+4;
"356
[v _EEDATH3 `Vb ~T0 @X0 1 e@1155 ]
[; ;sc8f083.h: 356: volatile bit EEDATH3 @ ((unsigned)&EEDATH*8)+3;
"357
[v _EEDATH2 `Vb ~T0 @X0 1 e@1154 ]
[; ;sc8f083.h: 357: volatile bit EEDATH2 @ ((unsigned)&EEDATH*8)+2;
"358
[v _EEDATH1 `Vb ~T0 @X0 1 e@1153 ]
[; ;sc8f083.h: 358: volatile bit EEDATH1 @ ((unsigned)&EEDATH*8)+1;
"359
[v _EEDATH0 `Vb ~T0 @X0 1 e@1152 ]
[; ;sc8f083.h: 359: volatile bit EEDATH0 @ ((unsigned)&EEDATH*8)+0;
"362
[v _EEADR7 `Vb ~T0 @X0 1 e@1167 ]
[; ;sc8f083.h: 362: volatile bit EEADR7 @ ((unsigned)&EEADR*8)+7;
"363
[v _EEADR6 `Vb ~T0 @X0 1 e@1166 ]
[; ;sc8f083.h: 363: volatile bit EEADR6 @ ((unsigned)&EEADR*8)+6;
"364
[v _EEADR5 `Vb ~T0 @X0 1 e@1165 ]
[; ;sc8f083.h: 364: volatile bit EEADR5 @ ((unsigned)&EEADR*8)+5;
"365
[v _EEADR4 `Vb ~T0 @X0 1 e@1164 ]
[; ;sc8f083.h: 365: volatile bit EEADR4 @ ((unsigned)&EEADR*8)+4;
"366
[v _EEADR3 `Vb ~T0 @X0 1 e@1163 ]
[; ;sc8f083.h: 366: volatile bit EEADR3 @ ((unsigned)&EEADR*8)+3;
"367
[v _EEADR2 `Vb ~T0 @X0 1 e@1162 ]
[; ;sc8f083.h: 367: volatile bit EEADR2 @ ((unsigned)&EEADR*8)+2;
"368
[v _EEADR1 `Vb ~T0 @X0 1 e@1161 ]
[; ;sc8f083.h: 368: volatile bit EEADR1 @ ((unsigned)&EEADR*8)+1;
"369
[v _EEADR0 `Vb ~T0 @X0 1 e@1160 ]
[; ;sc8f083.h: 369: volatile bit EEADR0 @ ((unsigned)&EEADR*8)+0;
"372
[v _EEADRH3 `Vb ~T0 @X0 1 e@1171 ]
[; ;sc8f083.h: 372: volatile bit EEADRH3 @ ((unsigned)&EEADRH*8)+3;
"373
[v _EEADRH2 `Vb ~T0 @X0 1 e@1170 ]
[; ;sc8f083.h: 373: volatile bit EEADRH2 @ ((unsigned)&EEADRH*8)+2;
"374
[v _EEADRH1 `Vb ~T0 @X0 1 e@1169 ]
[; ;sc8f083.h: 374: volatile bit EEADRH1 @ ((unsigned)&EEADRH*8)+1;
"375
[v _EEADRH0 `Vb ~T0 @X0 1 e@1168 ]
[; ;sc8f083.h: 375: volatile bit EEADRH0 @ ((unsigned)&EEADRH*8)+0;
"378
[v _ANS7 `Vb ~T0 @X0 1 e@1183 ]
[; ;sc8f083.h: 378: volatile bit ANS7 @ ((unsigned)&ANSEL0*8)+7;
"379
[v _ANS6 `Vb ~T0 @X0 1 e@1182 ]
[; ;sc8f083.h: 379: volatile bit ANS6 @ ((unsigned)&ANSEL0*8)+6;
"380
[v _ANS5 `Vb ~T0 @X0 1 e@1181 ]
[; ;sc8f083.h: 380: volatile bit ANS5 @ ((unsigned)&ANSEL0*8)+5;
"381
[v _ANS4 `Vb ~T0 @X0 1 e@1180 ]
[; ;sc8f083.h: 381: volatile bit ANS4 @ ((unsigned)&ANSEL0*8)+4;
"382
[v _ANS3 `Vb ~T0 @X0 1 e@1179 ]
[; ;sc8f083.h: 382: volatile bit ANS3 @ ((unsigned)&ANSEL0*8)+3;
"383
[v _ANS2 `Vb ~T0 @X0 1 e@1178 ]
[; ;sc8f083.h: 383: volatile bit ANS2 @ ((unsigned)&ANSEL0*8)+2;
"384
[v _ANS1 `Vb ~T0 @X0 1 e@1177 ]
[; ;sc8f083.h: 384: volatile bit ANS1 @ ((unsigned)&ANSEL0*8)+1;
"385
[v _ANS0 `Vb ~T0 @X0 1 e@1176 ]
[; ;sc8f083.h: 385: volatile bit ANS0 @ ((unsigned)&ANSEL0*8)+0;
"388
[v _ANS15 `Vb ~T0 @X0 1 e@1191 ]
[; ;sc8f083.h: 388: volatile bit ANS15 @ ((unsigned)&ANSEL1*8)+7;
"389
[v _ANS14 `Vb ~T0 @X0 1 e@1190 ]
[; ;sc8f083.h: 389: volatile bit ANS14 @ ((unsigned)&ANSEL1*8)+6;
"390
[v _ANS13 `Vb ~T0 @X0 1 e@1189 ]
[; ;sc8f083.h: 390: volatile bit ANS13 @ ((unsigned)&ANSEL1*8)+5;
"391
[v _ANS12 `Vb ~T0 @X0 1 e@1188 ]
[; ;sc8f083.h: 391: volatile bit ANS12 @ ((unsigned)&ANSEL1*8)+4;
"392
[v _ANS11 `Vb ~T0 @X0 1 e@1187 ]
[; ;sc8f083.h: 392: volatile bit ANS11 @ ((unsigned)&ANSEL1*8)+3;
"393
[v _ANS10 `Vb ~T0 @X0 1 e@1186 ]
[; ;sc8f083.h: 393: volatile bit ANS10 @ ((unsigned)&ANSEL1*8)+2;
"394
[v _ANS9 `Vb ~T0 @X0 1 e@1185 ]
[; ;sc8f083.h: 394: volatile bit ANS9 @ ((unsigned)&ANSEL1*8)+1;
"395
[v _ANS8 `Vb ~T0 @X0 1 e@1184 ]
[; ;sc8f083.h: 395: volatile bit ANS8 @ ((unsigned)&ANSEL1*8)+0;
"398
[v _ADCS1 `Vb ~T0 @X0 1 e@1199 ]
[; ;sc8f083.h: 398: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"399
[v _ADCS0 `Vb ~T0 @X0 1 e@1198 ]
[; ;sc8f083.h: 399: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"400
[v _CHS3 `Vb ~T0 @X0 1 e@1197 ]
[; ;sc8f083.h: 400: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"401
[v _CHS2 `Vb ~T0 @X0 1 e@1196 ]
[; ;sc8f083.h: 401: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"402
[v _CHS1 `Vb ~T0 @X0 1 e@1195 ]
[; ;sc8f083.h: 402: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"403
[v _CHS0 `Vb ~T0 @X0 1 e@1194 ]
[; ;sc8f083.h: 403: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"404
[v _GODONE `Vb ~T0 @X0 1 e@1193 ]
[; ;sc8f083.h: 404: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"405
[v _ADON `Vb ~T0 @X0 1 e@1192 ]
[; ;sc8f083.h: 405: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"408
[v _ADFM `Vb ~T0 @X0 1 e@1207 ]
[; ;sc8f083.h: 408: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"409
[v _CHS4 `Vb ~T0 @X0 1 e@1206 ]
[; ;sc8f083.h: 409: volatile bit CHS4 @ ((unsigned)&ADCON1*8)+6;
"410
[v _LDO_EN `Vb ~T0 @X0 1 e@1202 ]
[; ;sc8f083.h: 410: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"411
[v _LDO_SEL1 `Vb ~T0 @X0 1 e@1201 ]
[; ;sc8f083.h: 411: volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
"412
[v _LDO_SEL0 `Vb ~T0 @X0 1 e@1200 ]
[; ;sc8f083.h: 412: volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;
"415
[v _CMP2EN `Vb ~T0 @X0 1 e@1239 ]
[; ;sc8f083.h: 415: volatile bit CMP2EN @ ((unsigned)&CMP2CON0*8)+7;
"416
[v _CMP2PS `Vb ~T0 @X0 1 e@1238 ]
[; ;sc8f083.h: 416: volatile bit CMP2PS @ ((unsigned)&CMP2CON0*8)+6;
"417
[v _CMP2NS2 `Vb ~T0 @X0 1 e@1237 ]
[; ;sc8f083.h: 417: volatile bit CMP2NS2 @ ((unsigned)&CMP2CON0*8)+5;
"418
[v _CMP2NS1 `Vb ~T0 @X0 1 e@1236 ]
[; ;sc8f083.h: 418: volatile bit CMP2NS1 @ ((unsigned)&CMP2CON0*8)+4;
"419
[v _CMP2NS0 `Vb ~T0 @X0 1 e@1235 ]
[; ;sc8f083.h: 419: volatile bit CMP2NS0 @ ((unsigned)&CMP2CON0*8)+3;
"420
[v _CMP2NV `Vb ~T0 @X0 1 e@1234 ]
[; ;sc8f083.h: 420: volatile bit CMP2NV @ ((unsigned)&CMP2CON0*8)+2;
"421
[v _CMP2OUT `Vb ~T0 @X0 1 e@1233 ]
[; ;sc8f083.h: 421: volatile bit CMP2OUT @ ((unsigned)&CMP2CON0*8)+1;
"422
[v _CMP2OEN `Vb ~T0 @X0 1 e@1232 ]
[; ;sc8f083.h: 422: volatile bit CMP2OEN @ ((unsigned)&CMP2CON0*8)+0;
"425
[v _PWMD39 `Vb ~T0 @X0 1 e@1269 ]
[; ;sc8f083.h: 425: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"426
[v _PWMD38 `Vb ~T0 @X0 1 e@1268 ]
[; ;sc8f083.h: 426: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"427
[v _PWMD29 `Vb ~T0 @X0 1 e@1265 ]
[; ;sc8f083.h: 427: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"428
[v _PWMD28 `Vb ~T0 @X0 1 e@1264 ]
[; ;sc8f083.h: 428: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
"431
[v _CMP2IM `Vb ~T0 @X0 1 e@1279 ]
[; ;sc8f083.h: 431: volatile bit CMP2IM @ ((unsigned)&CMP2CON1*8)+7;
"432
[v _AN2_EN `Vb ~T0 @X0 1 e@1278 ]
[; ;sc8f083.h: 432: volatile bit AN2_EN @ ((unsigned)&CMP2CON1*8)+6;
"433
[v _RBIAS2_H `Vb ~T0 @X0 1 e@1277 ]
[; ;sc8f083.h: 433: volatile bit RBIAS2_H @ ((unsigned)&CMP2CON1*8)+5;
"434
[v _RBIAS2_L `Vb ~T0 @X0 1 e@1276 ]
[; ;sc8f083.h: 434: volatile bit RBIAS2_L @ ((unsigned)&CMP2CON1*8)+4;
"435
[v _LVDS23 `Vb ~T0 @X0 1 e@1275 ]
[; ;sc8f083.h: 435: volatile bit LVDS23 @ ((unsigned)&CMP2CON1*8)+3;
"436
[v _LVDS22 `Vb ~T0 @X0 1 e@1274 ]
[; ;sc8f083.h: 436: volatile bit LVDS22 @ ((unsigned)&CMP2CON1*8)+2;
"437
[v _LVDS21 `Vb ~T0 @X0 1 e@1273 ]
[; ;sc8f083.h: 437: volatile bit LVDS21 @ ((unsigned)&CMP2CON1*8)+1;
"438
[v _LVDS20 `Vb ~T0 @X0 1 e@1272 ]
[; ;sc8f083.h: 438: volatile bit LVDS20 @ ((unsigned)&CMP2CON1*8)+0;
"441
[v _TRISC1 `Vb ~T0 @X0 1 e@2089 ]
[; ;sc8f083.h: 441: volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
"442
[v _TRISC0 `Vb ~T0 @X0 1 e@2088 ]
[; ;sc8f083.h: 442: volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
"445
[v _RC1 `Vb ~T0 @X0 1 e@2097 ]
[; ;sc8f083.h: 445: volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
"446
[v _RC0 `Vb ~T0 @X0 1 e@2096 ]
[; ;sc8f083.h: 446: volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
"449
[v _WPUC1 `Vb ~T0 @X0 1 e@2113 ]
[; ;sc8f083.h: 449: volatile bit WPUC1 @ ((unsigned)&WPUC*8)+1;
"450
[v _WPUC0 `Vb ~T0 @X0 1 e@2112 ]
[; ;sc8f083.h: 450: volatile bit WPUC0 @ ((unsigned)&WPUC*8)+0;
"453
[v _ANS17 `Vb ~T0 @X0 1 e@2121 ]
[; ;sc8f083.h: 453: volatile bit ANS17 @ ((unsigned)&ANSEL2*8)+1;
"454
[v _ANS16 `Vb ~T0 @X0 1 e@2120 ]
[; ;sc8f083.h: 454: volatile bit ANS16 @ ((unsigned)&ANSEL2*8)+0;
"457
[v _T1GINV `Vb ~T0 @X0 1 e@2167 ]
[; ;sc8f083.h: 457: volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
"458
[v _TMR1GE `Vb ~T0 @X0 1 e@2166 ]
[; ;sc8f083.h: 458: volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
"459
[v _T1CKPS1 `Vb ~T0 @X0 1 e@2165 ]
[; ;sc8f083.h: 459: volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
"460
[v _T1CKPS0 `Vb ~T0 @X0 1 e@2164 ]
[; ;sc8f083.h: 460: volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
"461
[v _T1OSCEN `Vb ~T0 @X0 1 e@2163 ]
[; ;sc8f083.h: 461: volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
"462
[v _T1SYNC `Vb ~T0 @X0 1 e@2162 ]
[; ;sc8f083.h: 462: volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
"463
[v _TMR1CS `Vb ~T0 @X0 1 e@2161 ]
[; ;sc8f083.h: 463: volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
"464
[v _TMR1ON `Vb ~T0 @X0 1 e@2160 ]
[; ;sc8f083.h: 464: volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
"467
[v _TKIF `Vb ~T0 @X0 1 e@2174 ]
[; ;sc8f083.h: 467: volatile bit TKIF @ ((unsigned)&PIR2*8)+6;
"468
[v _CMP2IF `Vb ~T0 @X0 1 e@2173 ]
[; ;sc8f083.h: 468: volatile bit CMP2IF @ ((unsigned)&PIR2*8)+5;
"471
[v _TKIE `Vb ~T0 @X0 1 e@2182 ]
[; ;sc8f083.h: 471: volatile bit TKIE @ ((unsigned)&PIE2*8)+6;
"472
[v _CMP2IE `Vb ~T0 @X0 1 e@2181 ]
[; ;sc8f083.h: 472: volatile bit CMP2IE @ ((unsigned)&PIE2*8)+5;
"475
[v _KDONE `Vb ~T0 @X0 1 e@2191 ]
[; ;sc8f083.h: 475: volatile bit KDONE @ ((unsigned)&KEYCON0*8)+7;
"476
[v _KTOUT `Vb ~T0 @X0 1 e@2186 ]
[; ;sc8f083.h: 476: volatile bit KTOUT @ ((unsigned)&KEYCON0*8)+2;
"477
[v _KCAP `Vb ~T0 @X0 1 e@2185 ]
[; ;sc8f083.h: 477: volatile bit KCAP @ ((unsigned)&KEYCON0*8)+1;
"478
[v _KEN `Vb ~T0 @X0 1 e@2184 ]
[; ;sc8f083.h: 478: volatile bit KEN @ ((unsigned)&KEYCON0*8)+0;
"481
[v _KVREF1 `Vb ~T0 @X0 1 e@2199 ]
[; ;sc8f083.h: 481: volatile bit KVREF1 @ ((unsigned)&KEYCON1*8)+7;
"482
[v _KVREF0 `Vb ~T0 @X0 1 e@2198 ]
[; ;sc8f083.h: 482: volatile bit KVREF0 @ ((unsigned)&KEYCON1*8)+6;
"483
[v _KCLK1 `Vb ~T0 @X0 1 e@2197 ]
[; ;sc8f083.h: 483: volatile bit KCLK1 @ ((unsigned)&KEYCON1*8)+5;
"484
[v _KCLK0 `Vb ~T0 @X0 1 e@2196 ]
[; ;sc8f083.h: 484: volatile bit KCLK0 @ ((unsigned)&KEYCON1*8)+4;
"485
[v _KCHS3 `Vb ~T0 @X0 1 e@2195 ]
[; ;sc8f083.h: 485: volatile bit KCHS3 @ ((unsigned)&KEYCON1*8)+3;
"486
[v _KCHS2 `Vb ~T0 @X0 1 e@2194 ]
[; ;sc8f083.h: 486: volatile bit KCHS2 @ ((unsigned)&KEYCON1*8)+2;
"487
[v _KCHS1 `Vb ~T0 @X0 1 e@2193 ]
[; ;sc8f083.h: 487: volatile bit KCHS1 @ ((unsigned)&KEYCON1*8)+1;
"488
[v _KCHS0 `Vb ~T0 @X0 1 e@2192 ]
[; ;sc8f083.h: 488: volatile bit KCHS0 @ ((unsigned)&KEYCON1*8)+0;
"491
[v _CAP_LVBO2 `Vb ~T0 @X0 1 e@2207 ]
[; ;sc8f083.h: 491: volatile bit CAP_LVBO2 @ ((unsigned)&KEYCON2*8)+7;
"492
[v _CAP_LVBO1 `Vb ~T0 @X0 1 e@2206 ]
[; ;sc8f083.h: 492: volatile bit CAP_LVBO1 @ ((unsigned)&KEYCON2*8)+6;
"493
[v _CAP_LVBO0 `Vb ~T0 @X0 1 e@2205 ]
[; ;sc8f083.h: 493: volatile bit CAP_LVBO0 @ ((unsigned)&KEYCON2*8)+5;
"494
[v _TP_EN `Vb ~T0 @X0 1 e@2204 ]
[; ;sc8f083.h: 494: volatile bit TP_EN @ ((unsigned)&KEYCON2*8)+4;
"495
[v _TKLDOEN `Vb ~T0 @X0 1 e@2203 ]
[; ;sc8f083.h: 495: volatile bit TKLDOEN @ ((unsigned)&KEYCON2*8)+3;
"496
[v _TKLDO_SEL `Vb ~T0 @X0 1 e@2201 ]
[; ;sc8f083.h: 496: volatile bit TKLDO_SEL @ ((unsigned)&KEYCON2*8)+1;
"497
[v _TKEN `Vb ~T0 @X0 1 e@2200 ]
[; ;sc8f083.h: 497: volatile bit TKEN @ ((unsigned)&KEYCON2*8)+0;
"500
[v _CSRC `Vb ~T0 @X0 1 e@2247 ]
[; ;sc8f083.h: 500: volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
"501
[v _TX9EN `Vb ~T0 @X0 1 e@2246 ]
[; ;sc8f083.h: 501: volatile bit TX9EN @ ((unsigned)&TXSTA*8)+6;
"502
[v _TXEN `Vb ~T0 @X0 1 e@2245 ]
[; ;sc8f083.h: 502: volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
"503
[v _SYNC `Vb ~T0 @X0 1 e@2244 ]
[; ;sc8f083.h: 503: volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
"504
[v _SCKP `Vb ~T0 @X0 1 e@2243 ]
[; ;sc8f083.h: 504: volatile bit SCKP @ ((unsigned)&TXSTA*8)+3;
"505
[v _TRMT `Vb ~T0 @X0 1 e@2241 ]
[; ;sc8f083.h: 505: volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
"506
[v _TX9D `Vb ~T0 @X0 1 e@2240 ]
[; ;sc8f083.h: 506: volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
"509
[v _SPEN `Vb ~T0 @X0 1 e@2255 ]
[; ;sc8f083.h: 509: volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
"510
[v _RX9EN `Vb ~T0 @X0 1 e@2254 ]
[; ;sc8f083.h: 510: volatile bit RX9EN @ ((unsigned)&RCSTA*8)+6;
"511
[v _SREN `Vb ~T0 @X0 1 e@2253 ]
[; ;sc8f083.h: 511: volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
"512
[v _CREN `Vb ~T0 @X0 1 e@2252 ]
[; ;sc8f083.h: 512: volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
"513
[v _RCIDL `Vb ~T0 @X0 1 e@2251 ]
[; ;sc8f083.h: 513: volatile bit RCIDL @ ((unsigned)&RCSTA*8)+3;
"514
[v _FERR `Vb ~T0 @X0 1 e@2250 ]
[; ;sc8f083.h: 514: volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
"515
[v _OERR `Vb ~T0 @X0 1 e@2249 ]
[; ;sc8f083.h: 515: volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
"516
[v _RX9D `Vb ~T0 @X0 1 e@2248 ]
[; ;sc8f083.h: 516: volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
"12 C:\mcuproject\scm\zdt\D108_8F083_tssop20_\D108_8F083_tssop20_\Touch_Kscan_Library.h
[p n 752,759 ]
"5 C:\mcuproject\scm\zdt\D108_8F083_tssop20_\D108_8F083_tssop20_\TouchKeyConst.h
[v _C_OPTION_REG_ `Cuc ~T0 @X0 1 e ]
[i _C_OPTION_REG_
-> -> 10 `i `uc
]
[; ;TouchKeyConst.h: 5: const unsigned char C_OPTION_REG_ = 0x0A;
[; ;Touch_Kscan_Library.h: 18: extern void CheckTouchKey(void);
[; ;Touch_Kscan_Library.h: 19: extern void SystemEnterSleep();
[; ;Touch_Kscan_Library.h: 20: extern volatile bit b_kerr;
[; ;Touch_Kscan_Library.h: 26: extern volatile unsigned char KeyFlag[2];
"63 C:\mcuproject\scm\zdt\D108_8F083_tssop20_\D108_8F083_tssop20_\Touch_Kscan_Library.h
[v _Table_KeyChannel `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyChannel
:U ..
"64
-> | | -> 64 `i -> 0 `i -> 4 `i `uc
"65
-> | | -> 64 `i -> 0 `i -> 3 `i `uc
"67
-> | | -> 64 `i -> 0 `i -> 2 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 63: const unsigned char Table_KeyChannel[] = {
[; ;Touch_Kscan_Library.h: 64: 0x40|0x00|0x04,
[; ;Touch_Kscan_Library.h: 65: 0x40|0x00|0x03,
[; ;Touch_Kscan_Library.h: 66: 0x40|0x00|0x02
[; ;Touch_Kscan_Library.h: 67: };
"70
[v _Table_KeyCap `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyCap
:U ..
"71
-> | -> 0 `i -> 2 `i `uc
"72
-> | -> 0 `i -> 2 `i `uc
"74
-> | -> 0 `i -> 2 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 70: const unsigned char Table_KeyCap[] = {
[; ;Touch_Kscan_Library.h: 71: 0x00 | 0x2,
[; ;Touch_Kscan_Library.h: 72: 0x00 | 0x2,
[; ;Touch_Kscan_Library.h: 73: 0x00 | 0x2
[; ;Touch_Kscan_Library.h: 74: };
"77
[v _Table_KeyDown `Cuc ~T0 @X0 -> 0 `x e ]
[i _Table_KeyDown
:U ..
"78
-> -> 10 `i `uc
"79
-> -> 10 `i `uc
"81
-> -> 10 `i `uc
..
]
[; ;Touch_Kscan_Library.h: 77: const unsigned char Table_KeyDown[] = {
[; ;Touch_Kscan_Library.h: 78: 10,
[; ;Touch_Kscan_Library.h: 79: 10,
[; ;Touch_Kscan_Library.h: 80: 10
[; ;Touch_Kscan_Library.h: 81: };
"91
[v _KeyResSum `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 91: unsigned int KeyResSum[3];
"92
[v _KeyOldValue0 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 92: unsigned int KeyOldValue0[3];
"93
[v _KeyOldValue1 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 93: unsigned int KeyOldValue1[3];
"94
[v _KeyOldValue2 `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 94: unsigned int KeyOldValue2[3];
"95
[v _KeyReference `ui ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 95: unsigned int KeyReference[3];
"96
[v _KeyUpShake `uc ~T0 @X0 -> 3 `i e ]
[; ;Touch_Kscan_Library.h: 96: unsigned char KeyUpShake[3];
"98
[v _KeyValidTime `Cui ~T0 @X0 1 e ]
[i _KeyValidTime
-> * -> 60 `i / -> 1000 `i -> 4 `i `ui
]
[; ;Touch_Kscan_Library.h: 98: const unsigned int KeyValidTime = 60*(1000/4);
"99
[v _KeyTotalNumber `Cuc ~T0 @X0 1 e ]
[i _KeyTotalNumber
-> -> 3 `i `uc
]
[; ;Touch_Kscan_Library.h: 99: const unsigned char KeyTotalNumber = 3;
"100
[v _KeyShakeCounter `Cuc ~T0 @X0 1 e ]
[i _KeyShakeCounter
-> -> 2 `i `uc
]
[; ;Touch_Kscan_Library.h: 100: const unsigned char KeyShakeCounter = 2;
"101
[v _KeyValidNumber `Cuc ~T0 @X0 1 e ]
[i _KeyValidNumber
-> -> 1 `i `uc
]
[; ;Touch_Kscan_Library.h: 101: const unsigned char KeyValidNumber = 1;
"103
[v _KeyWakeUpEn `Cui ~T0 @X0 1 e ]
[i _KeyWakeUpEn
-> -> 7 `i `ui
]
[; ;Touch_Kscan_Library.h: 103: const unsigned int KeyWakeUpEn = 0x0007;
"106
[v _WaterModeSel `Cuc ~T0 @X0 1 e ]
[i _WaterModeSel
-> -> 1 `i `uc
]
[; ;Touch_Kscan_Library.h: 106: const unsigned char WaterModeSel = 1;
"20 C:\mcuproject\scm\zdt\D108_8F083_tssop20_\D108_8F083_tssop20_\main.c
[v _MainTime `Vuc ~T0 @X0 1 e ]
[; ;main.c: 20: volatile unsigned char MainTime;
"21
[v _B_MainLoop `Vb ~T0 @X0 1 e ]
[v _B_OnOff `Vb ~T0 @X0 1 e ]
[; ;main.c: 21: volatile bit B_MainLoop,B_OnOff;
"22
[v _count1s `uc ~T0 @X0 1 e ]
[i _count1s
-> -> 0 `i `uc
]
[; ;main.c: 22: unsigned char count1s = 0;
"23
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 23: unsigned char workStep = 0;
"24
[v _wuhuaFlag `uc ~T0 @X0 1 e ]
[i _wuhuaFlag
-> -> 0 `i `uc
]
[; ;main.c: 24: unsigned char wuhuaFlag = 0;
"25
[v _shanshuoTime `ui ~T0 @X0 1 e ]
[i _shanshuoTime
-> -> 0 `i `ui
]
[; ;main.c: 25: unsigned int shanshuoTime = 0;
"26
[v _shanshuoTime2 `ui ~T0 @X0 1 e ]
[i _shanshuoTime2
-> -> 0 `i `ui
]
[; ;main.c: 26: unsigned int shanshuoTime2 = 0;
"27
[v _shanshuoTime3 `ui ~T0 @X0 1 e ]
[i _shanshuoTime3
-> -> 0 `i `ui
]
[; ;main.c: 27: unsigned int shanshuoTime3 = 0;
"28
[v _fanValue `ui ~T0 @X0 1 e ]
[i _fanValue
-> -> 0 `i `ui
]
[; ;main.c: 28: unsigned int fanValue = 0;
"29
[v _wuhuaValue `ui ~T0 @X0 1 e ]
[i _wuhuaValue
-> -> 0 `i `ui
]
[; ;main.c: 29: unsigned int wuhuaValue = 0;
"30
[v _fanDuty `uc ~T0 @X0 1 e ]
[i _fanDuty
-> -> 0 `i `uc
]
[; ;main.c: 30: unsigned char fanDuty = 0;
"31
[v _count10s `uc ~T0 @X0 1 e ]
[i _count10s
-> -> 0 `i `uc
]
[; ;main.c: 31: unsigned char count10s = 0;
"32
[v _fanOverTime `uc ~T0 @X0 1 e ]
[i _fanOverTime
-> -> 0 `i `uc
]
[; ;main.c: 32: unsigned char fanOverTime = 0;
"33
[v _firstTime `uc ~T0 @X0 1 e ]
[i _firstTime
-> -> 0 `i `uc
]
[; ;main.c: 33: unsigned char firstTime = 0;
"34
[v _checkTime `ui ~T0 @X0 1 e ]
[i _checkTime
-> -> 0 `i `ui
]
[; ;main.c: 34: unsigned int checkTime = 0;
"35
[v _lowWaterTime `ui ~T0 @X0 1 e ]
[i _lowWaterTime
-> -> 0 `i `ui
]
[; ;main.c: 35: unsigned int lowWaterTime = 0;
"36
[v _chrgFlag `uc ~T0 @X0 1 e ]
[i _chrgFlag
-> -> 0 `i `uc
]
[; ;main.c: 36: unsigned char chrgFlag = 0;
"37
[v _chrgFullFlag `uc ~T0 @X0 1 e ]
[i _chrgFullFlag
-> -> 0 `i `uc
]
[; ;main.c: 37: unsigned char chrgFullFlag = 0;
"38
[v _chrgFullTime `uc ~T0 @X0 1 e ]
[i _chrgFullTime
-> -> 0 `i `uc
]
[; ;main.c: 38: unsigned char chrgFullTime = 0;
"39
[v _firstLock `uc ~T0 @X0 1 e ]
[i _firstLock
-> -> 0 `i `uc
]
[; ;main.c: 39: unsigned char firstLock = 0;
"40
[v _lowBatLock `uc ~T0 @X0 1 e ]
[i _lowBatLock
-> -> 0 `i `uc
]
[; ;main.c: 40: unsigned char lowBatLock = 0;
"41
[v _lowBatTime `uc ~T0 @X0 1 e ]
[i _lowBatTime
-> -> 0 `i `uc
]
[; ;main.c: 41: unsigned char lowBatTime = 0;
"42
[v _lowFanTime `uc ~T0 @X0 1 e ]
[i _lowFanTime
-> -> 0 `i `uc
]
[; ;main.c: 42: unsigned char lowFanTime = 0;
"43
[v _bujinFlag `uc ~T0 @X0 1 e ]
[i _bujinFlag
-> -> 0 `i `uc
]
[; ;main.c: 43: unsigned char bujinFlag = 0;
"44
[v _motorStep `ui ~T0 @X0 1 e ]
[i _motorStep
-> -> 0 `i `ui
]
[; ;main.c: 44: unsigned int motorStep = 0;
"45
[v _maxMotorStep `ui ~T0 @X0 1 e ]
[i _maxMotorStep
-> -> 0 `i `ui
]
[; ;main.c: 45: unsigned int maxMotorStep = 0;
"47
[v _adresult `Vui ~T0 @X0 1 e ]
[; ;main.c: 47: volatile unsigned int adresult;
"48
[v _result `Vui ~T0 @X0 1 e ]
[; ;main.c: 48: volatile unsigned int result;
"49
[v _test_adc `Vuc ~T0 @X0 1 e ]
[; ;main.c: 49: volatile unsigned char test_adc;
"50
[v _power_ad `Vui ~T0 @X0 1 e ]
[; ;main.c: 50: volatile unsigned int power_ad;
[; ;main.c: 52: void chrgCtr();
[; ;main.c: 53: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo);
"56
[v _Init_System `(v ~T0 @X0 1 ef ]
"57
{
[; ;main.c: 56: void Init_System()
[; ;main.c: 57: {
[e :U _Init_System ]
[f ]
[; ;main.c: 58: asm("nop");
"58
[; <" nop ;# ">
[; ;main.c: 59: asm("clrwdt");
"59
[; <" clrwdt ;# ">
[; ;main.c: 60: INTCON = 0;
"60
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 61: OSCCON = 0X72;
"61
[e = _OSCCON -> -> 114 `i `uc ]
[; ;main.c: 62: OPTION_REG = 0;
"62
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 67: TRISA = 0x04;
"67
[e = _TRISA -> -> 4 `i `uc ]
[; ;main.c: 68: PORTA = 0;
"68
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 69: TRISB = 0x20;
"69
[e = _TRISB -> -> 32 `i `uc ]
[; ;main.c: 70: PORTB = 0;
"70
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 71: WPUB = 0x00;
"71
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 72: TRISC = 0;
"72
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 73: PORTC = 0;
"73
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 75: PIE1 = 2;
"75
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 76: PR2 = 250;
"76
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 77: T2CON = 4;
"77
[e = _T2CON -> -> 4 `i `uc ]
[; ;main.c: 79: INTCON = 0XC0;
"79
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 80: ADCON0 = 0X41;
"80
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 81: ADON = 1;
"81
[e = _ADON -> -> 1 `i `b ]
[; ;main.c: 82: ADCON1 = 0x00;
"82
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 83: }
"83
[e :UE 1 ]
}
"93
[v _Refurbish_Sfr `(v ~T0 @X0 1 ef ]
"94
{
[; ;main.c: 93: void Refurbish_Sfr()
[; ;main.c: 94: {
[e :U _Refurbish_Sfr ]
[f ]
[; ;main.c: 96: PIE1 = 2;
"96
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 97: PR2 = 250;
"97
[e = _PR2 -> -> 250 `i `uc ]
[; ;main.c: 98: INTCON = 0XC0;
"98
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 99: if (4 != T2CON)
"99
[e $ ! != -> 4 `i -> _T2CON `i 3  ]
[; ;main.c: 100: T2CON = 4;
"100
[e = _T2CON -> -> 4 `i `uc ]
[e :U 3 ]
[; ;main.c: 101: }
"101
[e :UE 2 ]
}
"107
[v _KeyServer `(v ~T0 @X0 1 ef ]
"108
{
[; ;main.c: 107: void KeyServer()
[; ;main.c: 108: {
[e :U _KeyServer ]
[f ]
"109
[v F821 `uc ~T0 @X0 1 s KeyOldFlag ]
[i F821
-> -> 0 `i `uc
]
[; ;main.c: 109: static unsigned char KeyOldFlag = 0;
[; ;main.c: 110: if (KeyFlag[0])
"110
[e $ ! != -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> -> -> 0 `i `Vuc `i 5  ]
[; ;main.c: 111: {
"111
{
[; ;main.c: 112: if (KeyFlag[0] != KeyOldFlag)
"112
[e $ ! != -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> F821 `i 6  ]
[; ;main.c: 113: {
"113
{
[; ;main.c: 115: KeyOldFlag ^= KeyFlag[0];
"115
[e =^ F821 *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux ]
[; ;main.c: 116: if ((KeyOldFlag & 0x1) && (KeyFlag[0] & 0x1) && firstLock == 0)
"116
[e $ ! && && != & -> F821 `i -> 1 `i -> 0 `i != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 1 `i -> 0 `i == -> _firstLock `i -> 0 `i 7  ]
[; ;main.c: 117: {
"117
{
[; ;main.c: 119: if(lowBatLock == 1)
"119
[e $ ! == -> _lowBatLock `i -> 1 `i 8  ]
[; ;main.c: 120: {
"120
{
[; ;main.c: 121: shanshuoTime2 = 450;
"121
[e = _shanshuoTime2 -> -> 450 `i `ui ]
"122
}
[; ;main.c: 122: }
[e $U 9  ]
"123
[e :U 8 ]
[; ;main.c: 123: else if(++wuhuaFlag > 2)
[e $ ! > -> =+ _wuhuaFlag -> -> 1 `i `uc `i -> 2 `i 10  ]
[; ;main.c: 124: {
"124
{
[; ;main.c: 125: wuhuaFlag = 0;
"125
[e = _wuhuaFlag -> -> 0 `i `uc ]
"126
}
[e :U 10 ]
"127
[e :U 9 ]
[; ;main.c: 126: }
[; ;main.c: 127: if(wuhuaFlag >= 2)
[e $ ! >= -> _wuhuaFlag `i -> 2 `i 11  ]
[; ;main.c: 128: {
"128
{
[; ;main.c: 129: shanshuoTime2 = 450;
"129
[e = _shanshuoTime2 -> -> 450 `i `ui ]
[; ;main.c: 130: count10s = 0;
"130
[e = _count10s -> -> 0 `i `uc ]
"131
}
[; ;main.c: 131: }
[e $U 12  ]
"132
[e :U 11 ]
[; ;main.c: 132: else
[; ;main.c: 133: {
"133
{
[; ;main.c: 134: shanshuoTime2 = 0;
"134
[e = _shanshuoTime2 -> -> 0 `i `ui ]
"135
}
[e :U 12 ]
"136
}
[e :U 7 ]
[; ;main.c: 135: }
[; ;main.c: 136: }
[; ;main.c: 137: if ((KeyOldFlag & 0x2) && (KeyFlag[0] & 0x2) && firstLock == 0)
"137
[e $ ! && && != & -> F821 `i -> 2 `i -> 0 `i != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 2 `i -> 0 `i == -> _firstLock `i -> 0 `i 13  ]
[; ;main.c: 138: {
"138
{
[; ;main.c: 140: if(lowBatLock == 1)
"140
[e $ ! == -> _lowBatLock `i -> 1 `i 14  ]
[; ;main.c: 141: {
"141
{
[; ;main.c: 142: shanshuoTime = 450;
"142
[e = _shanshuoTime -> -> 450 `i `ui ]
"143
}
[; ;main.c: 143: }
[e $U 15  ]
"144
[e :U 14 ]
[; ;main.c: 144: else if(++workStep > 3)
[e $ ! > -> =+ _workStep -> -> 1 `i `uc `i -> 3 `i 16  ]
[; ;main.c: 145: {
"145
{
[; ;main.c: 146: workStep = 0;
"146
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 147: bujinFlag = 0;
"147
[e = _bujinFlag -> -> 0 `i `uc ]
"148
}
[e :U 16 ]
"149
[e :U 15 ]
[; ;main.c: 148: }
[; ;main.c: 149: if(workStep >= 2)
[e $ ! >= -> _workStep `i -> 2 `i 17  ]
[; ;main.c: 150: {
"150
{
[; ;main.c: 151: shanshuoTime = 450;
"151
[e = _shanshuoTime -> -> 450 `i `ui ]
"152
}
[; ;main.c: 152: }
[e $U 18  ]
"153
[e :U 17 ]
[; ;main.c: 153: else
[; ;main.c: 154: {
"154
{
[; ;main.c: 155: shanshuoTime = 0;
"155
[e = _shanshuoTime -> -> 0 `i `ui ]
"156
}
[e :U 18 ]
"158
}
[e :U 13 ]
[; ;main.c: 156: }
[; ;main.c: 158: }
[; ;main.c: 159: if ((KeyOldFlag & 0x4) && (KeyFlag[0] & 0x4) && firstLock == 0 && workStep > 0)
"159
[e $ ! && && && != & -> F821 `i -> 4 `i -> 0 `i != & -> *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux `i -> 4 `i -> 0 `i == -> _firstLock `i -> 0 `i > -> _workStep `i -> 0 `i 19  ]
[; ;main.c: 160: {
"160
{
[; ;main.c: 162: if(++bujinFlag > 3)
"162
[e $ ! > -> =+ _bujinFlag -> -> 1 `i `uc `i -> 3 `i 20  ]
[; ;main.c: 163: {
"163
{
[; ;main.c: 164: bujinFlag = 0;
"164
[e = _bujinFlag -> -> 0 `i `uc ]
"165
}
[e :U 20 ]
[; ;main.c: 165: }
[; ;main.c: 166: if(bujinFlag >= 2)
"166
[e $ ! >= -> _bujinFlag `i -> 2 `i 21  ]
[; ;main.c: 167: {
"167
{
[; ;main.c: 168: shanshuoTime3 = 450;
"168
[e = _shanshuoTime3 -> -> 450 `i `ui ]
"169
}
[; ;main.c: 169: }
[e $U 22  ]
"170
[e :U 21 ]
[; ;main.c: 170: else
[; ;main.c: 171: {
"171
{
[; ;main.c: 172: shanshuoTime3 = 0;
"172
[e = _shanshuoTime3 -> -> 0 `i `ui ]
"173
}
[e :U 22 ]
"174
}
[e :U 19 ]
[; ;main.c: 173: }
[; ;main.c: 174: }
[; ;main.c: 176: KeyOldFlag = KeyFlag[0];
"176
[e = F821 *U + &U _KeyFlag * -> -> -> 0 `i `ui `ux -> -> # *U &U _KeyFlag `ui `ux ]
"177
}
[e :U 6 ]
"178
}
[; ;main.c: 177: }
[; ;main.c: 178: }
[e $U 23  ]
"179
[e :U 5 ]
[; ;main.c: 179: else
[; ;main.c: 180: {
"180
{
[; ;main.c: 181: KeyOldFlag = 0;
"181
[e = F821 -> -> 0 `i `uc ]
"182
}
[e :U 23 ]
[; ;main.c: 182: }
[; ;main.c: 183: }
"183
[e :UE 4 ]
}
[v $root$_Isr_Timer `(v ~T0 @X0 0 e ]
[v F823 `(v ~T0 @X0 1 tf ]
"189
[v _Isr_Timer `IF823 ~T0 @X0 1 e ]
"190
{
[; ;main.c: 189: void interrupt Isr_Timer()
[; ;main.c: 190: {
[e :U _Isr_Timer ]
[f ]
[; ;main.c: 191: if(TMR2IF)
"191
[e $ ! _TMR2IF 25  ]
[; ;main.c: 192: {
"192
{
[; ;main.c: 193: TMR2IF = 0;
"193
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 194: if(++MainTime >= 32)
"194
[e $ ! >= -> =+ _MainTime -> -> 1 `i `uc `i -> 32 `i 26  ]
[; ;main.c: 195: {
"195
{
[; ;main.c: 196: MainTime = 0;
"196
[e = _MainTime -> -> 0 `i `uc ]
[; ;main.c: 197: B_MainLoop = 1;
"197
[e = _B_MainLoop -> -> 1 `i `b ]
[; ;main.c: 198: if(++count1s >= 250)
"198
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 250 `i 27  ]
[; ;main.c: 199: {
"199
{
[; ;main.c: 200: count1s = 0;
"200
[e = _count1s -> -> 0 `i `uc ]
"201
}
[e :U 27 ]
"202
}
[e :U 26 ]
"203
}
[; ;main.c: 201: }
[; ;main.c: 202: }
[; ;main.c: 203: }
[e $U 28  ]
"204
[e :U 25 ]
[; ;main.c: 204: else
[; ;main.c: 205: {
"205
{
[; ;main.c: 206: PIR1 = 0;
"206
[e = _PIR1 -> -> 0 `i `uc ]
"207
}
[e :U 28 ]
[; ;main.c: 207: }
[; ;main.c: 209: }
"209
[e :UE 24 ]
}
"211
[v _WorkSleep `(v ~T0 @X0 1 ef ]
"212
{
[; ;main.c: 211: void WorkSleep()
[; ;main.c: 212: {
[e :U _WorkSleep ]
[f ]
"214
[v F825 `uc ~T0 @X0 1 s time ]
[; ;main.c: 214: static unsigned char time;
[; ;main.c: 216: if(B_OnOff)time = 0;
"216
[e $ ! _B_OnOff 30  ]
[e = F825 -> -> 0 `i `uc ]
[e :U 30 ]
[; ;main.c: 218: if(++time >= 125)
"218
[e $ ! >= -> =+ F825 -> -> 1 `i `uc `i -> 125 `i 31  ]
[; ;main.c: 219: {
"219
{
[; ;main.c: 220: time = 0;
"220
[e = F825 -> -> 0 `i `uc ]
[; ;main.c: 221: INTCON = 0;
"221
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 222: PIE1 = 0;
"222
[e = _PIE1 -> -> 0 `i `uc ]
[; ;main.c: 223: PIE2 = 0;
"223
[e = _PIE2 -> -> 0 `i `uc ]
[; ;main.c: 224: PIR1 = 0;
"224
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 225: PIR2 = 0;
"225
[e = _PIR2 -> -> 0 `i `uc ]
[; ;main.c: 226: T2CON = 0;
"226
[e = _T2CON -> -> 0 `i `uc ]
[; ;main.c: 227: ADCON1 = 0;
"227
[e = _ADCON1 -> -> 0 `i `uc ]
[; ;main.c: 230: ADCON0 = 0;
"230
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 233: PORTA = 0x01;
"233
[e = _PORTA -> -> 1 `i `uc ]
[; ;main.c: 234: PORTB = 0x02;
"234
[e = _PORTB -> -> 2 `i `uc ]
[; ;main.c: 235: TRISC = 0;
"235
[e = _TRISC -> -> 0 `i `uc ]
[; ;main.c: 236: PORTC = 0x03;
"236
[e = _PORTC -> -> 3 `i `uc ]
[; ;main.c: 238: TRISB5 =1;
"238
[e = _TRISB5 -> -> 1 `i `b ]
[; ;main.c: 240: RBIF = 0;
"240
[e = _RBIF -> -> 0 `i `b ]
[; ;main.c: 241: RBIE = 1;
"241
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 242: IOCB5= 1;
"242
[e = _IOCB5 -> -> 1 `i `b ]
[; ;main.c: 243: PORTB;
"243
[e _PORTB ]
[; ;main.c: 244: PORTB &= 0xFD;
"244
[e =& _PORTB -> -> 253 `i `uc ]
[; ;main.c: 256: SystemEnterSleep();
"256
[e ( _SystemEnterSleep ..  ]
[; ;main.c: 257: if(RAIF)
"257
[e $ ! _RAIF 32  ]
[; ;main.c: 258: {
"258
{
[; ;main.c: 259: RAIF = 0;
"259
[e = _RAIF -> -> 0 `i `b ]
[; ;main.c: 260: PORTA;
"260
[e _PORTA ]
"261
}
[e :U 32 ]
[; ;main.c: 261: }
[; ;main.c: 263: Refurbish_Sfr();
"263
[e ( _Refurbish_Sfr ..  ]
[; ;main.c: 264: ADCON0 = 0X41;
"264
[e = _ADCON0 -> -> 65 `i `uc ]
[; ;main.c: 265: ADON = 1;
"265
[e = _ADON -> -> 1 `i `b ]
[; ;main.c: 266: ADCON1 = 0x00;
"266
[e = _ADCON1 -> -> 0 `i `uc ]
"267
}
[e :U 31 ]
[; ;main.c: 267: }
[; ;main.c: 269: }
"269
[e :UE 29 ]
}
"290
[v _ADC_Sample `(uc ~T0 @X0 1 ef2`uc`uc ]
"291
{
[; ;main.c: 290: unsigned char ADC_Sample(unsigned char adch, unsigned char adldo)
[; ;main.c: 291: {
[e :U _ADC_Sample ]
"290
[v _adch `uc ~T0 @X0 1 r1 ]
[v _adldo `uc ~T0 @X0 1 r2 ]
"291
[f ]
"292
[v _adsum `Vul ~T0 @X0 1 a ]
[; ;main.c: 292: volatile unsigned long adsum = 0;
[e = _adsum -> -> -> 0 `i `l `ul ]
"293
[v _admin `Vui ~T0 @X0 1 a ]
[; ;main.c: 293: volatile unsigned int admin = 0, admax = 0;
[e = _admin -> -> 0 `i `ui ]
[v _admax `Vui ~T0 @X0 1 a ]
[e = _admax -> -> 0 `i `ui ]
"294
[v _ad_temp `Vui ~T0 @X0 1 a ]
[; ;main.c: 294: volatile unsigned int ad_temp = 0;
[e = _ad_temp -> -> 0 `i `ui ]
[; ;main.c: 296: if ((!LDO_EN) && (adldo & 0x04) )
"296
[e $ ! && ! _LDO_EN != & -> _adldo `i -> 4 `i -> 0 `i 34  ]
[; ;main.c: 297: {
"297
{
[; ;main.c: 299: ADCON1 = adldo;
"299
[e = _ADCON1 _adldo ]
[; ;main.c: 300: _delay((unsigned long)((100)*(8000000/4000000.0)));
"300
[e ( __delay (1 -> * -> -> 100 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
"301
}
[; ;main.c: 301: }
[e $U 35  ]
"302
[e :U 34 ]
[; ;main.c: 302: else
[; ;main.c: 303: ADCON1 = adldo;
"303
[e = _ADCON1 _adldo ]
[e :U 35 ]
[; ;main.c: 305: if(adch & 0x10)
"305
[e $ ! != & -> _adch `i -> 16 `i -> 0 `i 36  ]
[; ;main.c: 306: {
"306
{
[; ;main.c: 307: CHS4 = 1;
"307
[e = _CHS4 -> -> 1 `i `b ]
[; ;main.c: 308: adch &= 0x0f;
"308
[e =& _adch -> -> 15 `i `uc ]
"309
}
[e :U 36 ]
"310
[v _i `uc ~T0 @X0 1 a ]
[; ;main.c: 309: }
[; ;main.c: 310: unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 311: for (i = 0; i < 10; i++)
"311
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 10 `i 37  ]
[e $U 38  ]
"312
[e :U 37 ]
[; ;main.c: 312: {
{
[; ;main.c: 313: ADCON0 = (unsigned char)(0X41 | (adch << 2));
"313
[e = _ADCON0 -> | -> 65 `i << -> _adch `i -> 2 `i `uc ]
[; ;main.c: 314: asm("nop");
"314
[; <" nop ;# ">
[; ;main.c: 315: asm("nop");
"315
[; <" nop ;# ">
[; ;main.c: 316: asm("nop");
"316
[; <" nop ;# ">
[; ;main.c: 317: asm("nop");
"317
[; <" nop ;# ">
[; ;main.c: 318: GODONE = 1;
"318
[e = _GODONE -> -> 1 `i `b ]
"320
[v _j `uc ~T0 @X0 1 a ]
[; ;main.c: 320: unsigned char j = 0;
[e = _j -> -> 0 `i `uc ]
[; ;main.c: 321: while (GODONE)
"321
[e $U 40  ]
[e :U 41 ]
[; ;main.c: 322: {
"322
{
[; ;main.c: 323: _delay((unsigned long)((2)*(8000000/4000000.0)));
"323
[e ( __delay (1 -> * -> -> 2 `i `d / -> -> 8000000 `l `d .4000000.0 `ul ]
[; ;main.c: 325: if (0 == (--j))
"325
[e $ ! == -> 0 `i -> =- _j -> -> 1 `i `uc `i 43  ]
[; ;main.c: 326: return 0;
"326
[e ) -> -> 0 `i `uc ]
[e $UE 33  ]
[e :U 43 ]
"327
}
[e :U 40 ]
"321
[e $ _GODONE 41  ]
[e :U 42 ]
[; ;main.c: 327: }
[; ;main.c: 329: ad_temp = (unsigned int)((ADRESH << 4) + (ADRESL >> 4));
"329
[e = _ad_temp -> + << -> _ADRESH `i -> 4 `i >> -> _ADRESL `i -> 4 `i `ui ]
[; ;main.c: 331: if (0 == admax)
"331
[e $ ! == -> -> 0 `i `ui _admax 44  ]
[; ;main.c: 332: {
"332
{
[; ;main.c: 333: admax = ad_temp;
"333
[e = _admax _ad_temp ]
[; ;main.c: 334: admin = ad_temp;
"334
[e = _admin _ad_temp ]
"335
}
[; ;main.c: 335: }
[e $U 45  ]
"336
[e :U 44 ]
[; ;main.c: 336: else if (ad_temp > admax)
[e $ ! > _ad_temp _admax 46  ]
[; ;main.c: 337: admax = ad_temp;
"337
[e = _admax _ad_temp ]
[e $U 47  ]
"338
[e :U 46 ]
[; ;main.c: 338: else if (ad_temp < admin)
[e $ ! < _ad_temp _admin 48  ]
[; ;main.c: 339: admin = ad_temp;
"339
[e = _admin _ad_temp ]
[e :U 48 ]
"341
[e :U 47 ]
[e :U 45 ]
[; ;main.c: 341: adsum += ad_temp;
[e =+ _adsum -> _ad_temp `ul ]
"342
}
"311
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 10 `i 37  ]
[e :U 38 ]
"342
}
[; ;main.c: 342: }
[; ;main.c: 343: adsum -= admax;
"343
[e =- _adsum -> _admax `ul ]
[; ;main.c: 344: if (adsum >= admin)
"344
[e $ ! >= _adsum -> _admin `ul 49  ]
[; ;main.c: 345: adsum -= admin;
"345
[e =- _adsum -> _admin `ul ]
[e $U 50  ]
"346
[e :U 49 ]
[; ;main.c: 346: else
[; ;main.c: 347: adsum = 0;
"347
[e = _adsum -> -> -> 0 `i `l `ul ]
[e :U 50 ]
[; ;main.c: 349: adresult = adsum >> 3;
"349
[e = _adresult -> >> _adsum -> 3 `i `ui ]
[; ;main.c: 351: adsum = 0;
"351
[e = _adsum -> -> -> 0 `i `l `ul ]
[; ;main.c: 352: admin = 0;
"352
[e = _admin -> -> 0 `i `ui ]
[; ;main.c: 353: admax = 0;
"353
[e = _admax -> -> 0 `i `ui ]
[; ;main.c: 354: return 0xA5;
"354
[e ) -> -> 165 `i `uc ]
[e $UE 33  ]
[; ;main.c: 356: }
"356
[e :UE 33 ]
}
"359
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"360
{
[; ;main.c: 359: void chrgCtr()
[; ;main.c: 360: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 361: if(PORTB & 0x20)
"361
[e $ ! != & -> _PORTB `i -> 32 `i -> 0 `i 52  ]
[; ;main.c: 362: {
"362
{
[; ;main.c: 363: chrgFlag = 1;
"363
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 364: firstLock = 0;
"364
[e = _firstLock -> -> 0 `i `uc ]
[; ;main.c: 365: lowBatLock = 0;
"365
[e = _lowBatLock -> -> 0 `i `uc ]
[; ;main.c: 366: if(power_ad > 4140)
"366
[e $ ! > _power_ad -> -> 4140 `i `ui 53  ]
[; ;main.c: 367: {
"367
{
[; ;main.c: 368: if(++chrgFullTime > 200)
"368
[e $ ! > -> =+ _chrgFullTime -> -> 1 `i `uc `i -> 200 `i 54  ]
[; ;main.c: 369: {
"369
{
[; ;main.c: 370: chrgFullTime = 0;
"370
[e = _chrgFullTime -> -> 0 `i `uc ]
[; ;main.c: 371: chrgFullFlag = 1;
"371
[e = _chrgFullFlag -> -> 1 `i `uc ]
"372
}
[e :U 54 ]
"373
}
[; ;main.c: 372: }
[; ;main.c: 373: }
[e $U 55  ]
"374
[e :U 53 ]
[; ;main.c: 374: else
[; ;main.c: 375: {
"375
{
[; ;main.c: 376: chrgFullTime = 0;
"376
[e = _chrgFullTime -> -> 0 `i `uc ]
"377
}
[e :U 55 ]
"379
}
[; ;main.c: 377: }
[; ;main.c: 379: }
[e $U 56  ]
"380
[e :U 52 ]
[; ;main.c: 380: else
[; ;main.c: 381: {
"381
{
[; ;main.c: 382: chrgFlag = 0;
"382
[e = _chrgFlag -> -> 0 `i `uc ]
[; ;main.c: 383: chrgFullTime = 0;
"383
[e = _chrgFullTime -> -> 0 `i `uc ]
[; ;main.c: 384: chrgFullFlag = 0;
"384
[e = _chrgFullFlag -> -> 0 `i `uc ]
"386
}
[e :U 56 ]
[; ;main.c: 386: }
[; ;main.c: 387: }
"387
[e :UE 51 ]
}
"389
[v _keyLedCtr `(v ~T0 @X0 1 ef ]
"390
{
[; ;main.c: 389: void keyLedCtr()
[; ;main.c: 390: {
[e :U _keyLedCtr ]
[f ]
[; ;main.c: 391: if(shanshuoTime > 0)
"391
[e $ ! > _shanshuoTime -> -> 0 `i `ui 58  ]
[; ;main.c: 392: {
"392
{
[; ;main.c: 393: shanshuoTime--;
"393
[e -- _shanshuoTime -> -> 1 `i `ui ]
[; ;main.c: 394: if((shanshuoTime % 150) < 75)
"394
[e $ ! < % _shanshuoTime -> -> 150 `i `ui -> -> 75 `i `ui 59  ]
[; ;main.c: 395: {
"395
{
[; ;main.c: 396: PORTC |= 0x01;
"396
[e =| _PORTC -> -> 1 `i `uc ]
"397
}
[; ;main.c: 397: }
[e $U 60  ]
"398
[e :U 59 ]
[; ;main.c: 398: else
[; ;main.c: 399: {
"399
{
[; ;main.c: 400: PORTC &= 0xFE;
"400
[e =& _PORTC -> -> 254 `i `uc ]
"401
}
[e :U 60 ]
"402
}
[; ;main.c: 401: }
[; ;main.c: 402: }
[e $U 61  ]
"403
[e :U 58 ]
[; ;main.c: 403: else if(workStep > 0)
[e $ ! > -> _workStep `i -> 0 `i 62  ]
[; ;main.c: 404: {
"404
{
[; ;main.c: 405: PORTC &= 0xFE;
"405
[e =& _PORTC -> -> 254 `i `uc ]
"406
}
[; ;main.c: 406: }
[e $U 63  ]
"407
[e :U 62 ]
[; ;main.c: 407: else
[; ;main.c: 408: {
"408
{
[; ;main.c: 409: PORTC |= 0x01;
"409
[e =| _PORTC -> -> 1 `i `uc ]
"410
}
[e :U 63 ]
[e :U 61 ]
[; ;main.c: 410: }
[; ;main.c: 412: if(shanshuoTime2 > 0)
"412
[e $ ! > _shanshuoTime2 -> -> 0 `i `ui 64  ]
[; ;main.c: 413: {
"413
{
[; ;main.c: 414: shanshuoTime2--;
"414
[e -- _shanshuoTime2 -> -> 1 `i `ui ]
[; ;main.c: 415: if((shanshuoTime2 % 150) < 75)
"415
[e $ ! < % _shanshuoTime2 -> -> 150 `i `ui -> -> 75 `i `ui 65  ]
[; ;main.c: 416: {
"416
{
[; ;main.c: 417: PORTC |= 0x02;
"417
[e =| _PORTC -> -> 2 `i `uc ]
"418
}
[; ;main.c: 418: }
[e $U 66  ]
"419
[e :U 65 ]
[; ;main.c: 419: else
[; ;main.c: 420: {
"420
{
[; ;main.c: 421: PORTC &= 0xFD;
"421
[e =& _PORTC -> -> 253 `i `uc ]
"422
}
[e :U 66 ]
"423
}
[; ;main.c: 422: }
[; ;main.c: 423: }
[e $U 67  ]
"424
[e :U 64 ]
[; ;main.c: 424: else if(wuhuaFlag > 0)
[e $ ! > -> _wuhuaFlag `i -> 0 `i 68  ]
[; ;main.c: 425: {
"425
{
[; ;main.c: 426: PORTC &= 0xFD;
"426
[e =& _PORTC -> -> 253 `i `uc ]
"427
}
[; ;main.c: 427: }
[e $U 69  ]
"428
[e :U 68 ]
[; ;main.c: 428: else
[; ;main.c: 429: {
"429
{
[; ;main.c: 430: PORTC |= 0x02;
"430
[e =| _PORTC -> -> 2 `i `uc ]
"431
}
[e :U 69 ]
[e :U 67 ]
[; ;main.c: 431: }
[; ;main.c: 432: if(shanshuoTime3 > 0)
"432
[e $ ! > _shanshuoTime3 -> -> 0 `i `ui 70  ]
[; ;main.c: 433: {
"433
{
[; ;main.c: 434: shanshuoTime3--;
"434
[e -- _shanshuoTime3 -> -> 1 `i `ui ]
[; ;main.c: 435: if((shanshuoTime3 % 150) < 75)
"435
[e $ ! < % _shanshuoTime3 -> -> 150 `i `ui -> -> 75 `i `ui 71  ]
[; ;main.c: 436: {
"436
{
[; ;main.c: 437: PORTA |= 0x01;
"437
[e =| _PORTA -> -> 1 `i `uc ]
"438
}
[; ;main.c: 438: }
[e $U 72  ]
"439
[e :U 71 ]
[; ;main.c: 439: else
[; ;main.c: 440: {
"440
{
[; ;main.c: 441: PORTA &= 0xFE;
"441
[e =& _PORTA -> -> 254 `i `uc ]
"442
}
[e :U 72 ]
"443
}
[; ;main.c: 442: }
[; ;main.c: 443: }
[e $U 73  ]
"444
[e :U 70 ]
[; ;main.c: 444: else if(bujinFlag)
[e $ ! != -> _bujinFlag `i -> -> -> 0 `i `uc `i 74  ]
[; ;main.c: 445: {
"445
{
[; ;main.c: 446: PORTA &= 0xFE;
"446
[e =& _PORTA -> -> 254 `i `uc ]
"447
}
[; ;main.c: 447: }
[e $U 75  ]
"448
[e :U 74 ]
[; ;main.c: 448: else if(chrgFlag)
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 76  ]
[; ;main.c: 449: {
"449
{
[; ;main.c: 450: if(chrgFullFlag || count1s < 50)
"450
[e $ ! || != -> _chrgFullFlag `i -> -> -> 0 `i `uc `i < -> _count1s `i -> 50 `i 77  ]
[; ;main.c: 451: {
"451
{
[; ;main.c: 452: PORTA &= 0xFE;
"452
[e =& _PORTA -> -> 254 `i `uc ]
"453
}
[; ;main.c: 453: }
[e $U 78  ]
"454
[e :U 77 ]
[; ;main.c: 454: else
[; ;main.c: 455: {
"455
{
[; ;main.c: 456: PORTA |= 0x01;
"456
[e =| _PORTA -> -> 1 `i `uc ]
"457
}
[e :U 78 ]
"458
}
[; ;main.c: 457: }
[; ;main.c: 458: }
[e $U 79  ]
"459
[e :U 76 ]
[; ;main.c: 459: else
[; ;main.c: 460: {
"460
{
[; ;main.c: 461: PORTA |= 0x01;
"461
[e =| _PORTA -> -> 1 `i `uc ]
"462
}
[e :U 79 ]
[e :U 75 ]
[e :U 73 ]
[; ;main.c: 462: }
[; ;main.c: 464: }
"464
[e :UE 57 ]
}
"466
[v _pwmInit `(v ~T0 @X0 1 ef ]
"467
{
[; ;main.c: 466: void pwmInit()
[; ;main.c: 467: {
[e :U _pwmInit ]
[f ]
[; ;main.c: 469: PWMTH = 0x00;
"469
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 470: PWMTL = 73;
"470
[e = _PWMTL -> -> 73 `i `uc ]
[; ;main.c: 471: PWMD23H = 0x00;
"471
[e = _PWMD23H -> -> 0 `i `uc ]
[; ;main.c: 472: PWMD3L = 32;
"472
[e = _PWMD3L -> -> 32 `i `uc ]
[; ;main.c: 473: PWMCON1 = 0xC0;
"473
[e = _PWMCON1 -> -> 192 `i `uc ]
[; ;main.c: 474: PWMCON2 = 0x00;
"474
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 475: PWMCON0 |= 0x28;
"475
[e =| _PWMCON0 -> -> 40 `i `uc ]
[; ;main.c: 476: }
"476
[e :UE 80 ]
}
"478
[v _pwmStop `(v ~T0 @X0 1 ef ]
"479
{
[; ;main.c: 478: void pwmStop()
[; ;main.c: 479: {
[e :U _pwmStop ]
[f ]
[; ;main.c: 480: PWMD3L = 0;
"480
[e = _PWMD3L -> -> 0 `i `uc ]
[; ;main.c: 481: PWMCON0 &= 0xF7;
"481
[e =& _PWMCON0 -> -> 247 `i `uc ]
[; ;main.c: 482: PORTA &= 0xF7;
"482
[e =& _PORTA -> -> 247 `i `uc ]
[; ;main.c: 483: }
"483
[e :UE 81 ]
}
"485
[v _fanInit `(v ~T0 @X0 1 ef ]
"486
{
[; ;main.c: 485: void fanInit()
[; ;main.c: 486: {
[e :U _fanInit ]
[f ]
[; ;main.c: 488: PWMTH = 0x00;
"488
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 489: PWMT4L = 73;
"489
[e = _PWMT4L -> -> 73 `i `uc ]
[; ;main.c: 490: PWMD4L = fanDuty;
"490
[e = _PWMD4L _fanDuty ]
[; ;main.c: 491: PWMCON1 = 0xC0;
"491
[e = _PWMCON1 -> -> 192 `i `uc ]
[; ;main.c: 492: PWMCON2 = 0x00;
"492
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 493: PWMCON0 |= 0x30;
"493
[e =| _PWMCON0 -> -> 48 `i `uc ]
[; ;main.c: 494: }
"494
[e :UE 82 ]
}
"496
[v _fanStop `(v ~T0 @X0 1 ef ]
"497
{
[; ;main.c: 496: void fanStop()
[; ;main.c: 497: {
[e :U _fanStop ]
[f ]
[; ;main.c: 498: PWMD4L = 0;
"498
[e = _PWMD4L -> -> 0 `i `uc ]
[; ;main.c: 499: PWMCON0 &= 0xEF;
"499
[e =& _PWMCON0 -> -> 239 `i `uc ]
[; ;main.c: 500: PORTA &= 0xEF;
"500
[e =& _PORTA -> -> 239 `i `uc ]
[; ;main.c: 501: }
"501
[e :UE 83 ]
}
"503
[v _fanCtr `(v ~T0 @X0 1 ef ]
"504
{
[; ;main.c: 503: void fanCtr()
[; ;main.c: 504: {
[e :U _fanCtr ]
[f ]
[; ;main.c: 505: if(workStep > 0)
"505
[e $ ! > -> _workStep `i -> 0 `i 85  ]
[; ;main.c: 506: {
"506
{
[; ;main.c: 507: PORTA |= 0x02;
"507
[e =| _PORTA -> -> 2 `i `uc ]
"508
[v _maxFanValue `uc ~T0 @X0 1 a ]
[; ;main.c: 508: unsigned char maxFanValue = 52;
[e = _maxFanValue -> -> 52 `i `uc ]
[; ;main.c: 509: if(workStep == 1)
"509
[e $ ! == -> _workStep `i -> 1 `i 86  ]
[; ;main.c: 510: {
"510
{
[; ;main.c: 511: maxFanValue = 40;
"511
[e = _maxFanValue -> -> 40 `i `uc ]
"512
}
[; ;main.c: 512: }
[e $U 87  ]
"513
[e :U 86 ]
[; ;main.c: 513: else if(workStep == 3)
[e $ ! == -> _workStep `i -> 3 `i 88  ]
[; ;main.c: 514: {
"514
{
[; ;main.c: 515: maxFanValue = 10;
"515
[e = _maxFanValue -> -> 10 `i `uc ]
"516
}
[e :U 88 ]
"517
[e :U 87 ]
[; ;main.c: 516: }
[; ;main.c: 517: test_adc = ADC_Sample(2, 0);
[e = _test_adc ( _ADC_Sample (2 , -> -> 2 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 518: if (0xA5 == test_adc)
"518
[e $ ! == -> 165 `i -> _test_adc `i 89  ]
[; ;main.c: 519: {
"519
{
"520
[v _fan_temp `Vul ~T0 @X0 1 a ]
[; ;main.c: 520: volatile unsigned long fan_temp;
[; ;main.c: 521: if(power_ad > 0)
"521
[e $ ! > _power_ad -> -> 0 `i `ui 90  ]
[; ;main.c: 522: {
"522
{
[; ;main.c: 523: fan_temp = ((unsigned long)1UL*adresult * power_ad)/4096;
"523
[e = _fan_temp / * * -> 1 `ul -> _adresult `ul -> _power_ad `ul -> -> -> 4096 `i `l `ul ]
[; ;main.c: 524: fanValue = (unsigned int)(fan_temp);
"524
[e = _fanValue -> _fan_temp `ui ]
"525
}
[e :U 90 ]
"526
}
[e :U 89 ]
[; ;main.c: 525: }
[; ;main.c: 526: }
[; ;main.c: 527: if(fanValue > 1300)
"527
[e $ ! > _fanValue -> -> 1300 `i `ui 91  ]
[; ;main.c: 528: {
"528
{
[; ;main.c: 529: if(++fanOverTime > 50)
"529
[e $ ! > -> =+ _fanOverTime -> -> 1 `i `uc `i -> 50 `i 92  ]
[; ;main.c: 530: {
"530
{
[; ;main.c: 531: fanOverTime = 0;
"531
[e = _fanOverTime -> -> 0 `i `uc ]
[; ;main.c: 532: workStep = 0;
"532
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 533: shanshuoTime = 450;
"533
[e = _shanshuoTime -> -> 450 `i `ui ]
"534
}
[e :U 92 ]
"535
}
[; ;main.c: 534: }
[; ;main.c: 535: }
[e $U 93  ]
"536
[e :U 91 ]
[; ;main.c: 536: else
[; ;main.c: 537: {
"537
{
[; ;main.c: 538: fanOverTime = 0;
"538
[e = _fanOverTime -> -> 0 `i `uc ]
"539
}
[e :U 93 ]
[; ;main.c: 539: }
[; ;main.c: 540: if(fanDuty < maxFanValue)
"540
[e $ ! < -> _fanDuty `i -> _maxFanValue `i 94  ]
[; ;main.c: 541: {
"541
{
[; ;main.c: 542: fanDuty++;
"542
[e ++ _fanDuty -> -> 1 `i `uc ]
"543
}
[; ;main.c: 543: }
[e $U 95  ]
"544
[e :U 94 ]
[; ;main.c: 544: else if(fanDuty > maxFanValue)
[e $ ! > -> _fanDuty `i -> _maxFanValue `i 96  ]
[; ;main.c: 545: {
"545
{
[; ;main.c: 546: fanDuty--;
"546
[e -- _fanDuty -> -> 1 `i `uc ]
"547
}
[e :U 96 ]
"548
[e :U 95 ]
[; ;main.c: 547: }
[; ;main.c: 548: fanInit();
[e ( _fanInit ..  ]
"549
}
[; ;main.c: 549: }
[e $U 97  ]
"550
[e :U 85 ]
[; ;main.c: 550: else
[; ;main.c: 551: {
"551
{
[; ;main.c: 552: fanStop();
"552
[e ( _fanStop ..  ]
[; ;main.c: 553: fanDuty = 0;
"553
[e = _fanDuty -> -> 0 `i `uc ]
[; ;main.c: 554: PORTA &= 0xFD;
"554
[e =& _PORTA -> -> 253 `i `uc ]
"555
}
[e :U 97 ]
[; ;main.c: 555: }
[; ;main.c: 556: }
"556
[e :UE 84 ]
}
"558
[v _wuhuaCtr `(v ~T0 @X0 1 ef ]
"559
{
[; ;main.c: 558: void wuhuaCtr()
[; ;main.c: 559: {
[e :U _wuhuaCtr ]
[f ]
[; ;main.c: 560: if(count1s == 0)
"560
[e $ ! == -> _count1s `i -> 0 `i 99  ]
[; ;main.c: 561: {
"561
{
[; ;main.c: 562: if(++count10s >= 10)
"562
[e $ ! >= -> =+ _count10s -> -> 1 `i `uc `i -> 10 `i 100  ]
[; ;main.c: 563: {
"563
{
[; ;main.c: 564: count10s = 0;
"564
[e = _count10s -> -> 0 `i `uc ]
"565
}
[e :U 100 ]
"566
}
[e :U 99 ]
[; ;main.c: 565: }
[; ;main.c: 566: }
[; ;main.c: 567: if(wuhuaFlag == 1 || (wuhuaFlag == 2 && count10s < 5))
"567
[e $ ! || == -> _wuhuaFlag `i -> 1 `i && == -> _wuhuaFlag `i -> 2 `i < -> _count10s `i -> 5 `i 101  ]
[; ;main.c: 568: {
"568
{
[; ;main.c: 569: pwmInit();
"569
[e ( _pwmInit ..  ]
"598
}
[; ;main.c: 598: }
[e $U 102  ]
"599
[e :U 101 ]
[; ;main.c: 599: else
[; ;main.c: 600: {
"600
{
[; ;main.c: 601: pwmStop();
"601
[e ( _pwmStop ..  ]
"602
}
[e :U 102 ]
[; ;main.c: 602: }
[; ;main.c: 603: }
"603
[e :UE 98 ]
}
"605
[v _bujinCtr `(v ~T0 @X0 1 ef ]
"606
{
[; ;main.c: 605: void bujinCtr()
[; ;main.c: 606: {
[e :U _bujinCtr ]
[f ]
[; ;main.c: 607: if(bujinFlag || motorStep > 0)
"607
[e $ ! || != -> _bujinFlag `i -> -> -> 0 `i `uc `i > _motorStep -> -> 0 `i `ui 104  ]
[; ;main.c: 608: {
"608
{
[; ;main.c: 609: if(bujinFlag == 1)
"609
[e $ ! == -> _bujinFlag `i -> 1 `i 105  ]
[; ;main.c: 610: {
"610
{
[; ;main.c: 611: maxMotorStep = 512;
"611
[e = _maxMotorStep -> -> 512 `i `ui ]
"612
}
[; ;main.c: 612: }
[e $U 106  ]
"613
[e :U 105 ]
[; ;main.c: 613: else if(bujinFlag == 2)
[e $ ! == -> _bujinFlag `i -> 2 `i 107  ]
[; ;main.c: 614: {
"614
{
[; ;main.c: 615: maxMotorStep = 1024;
"615
[e = _maxMotorStep -> -> 1024 `i `ui ]
"616
}
[; ;main.c: 616: }
[e $U 108  ]
"617
[e :U 107 ]
[; ;main.c: 617: else if(bujinFlag == 3)
[e $ ! == -> _bujinFlag `i -> 3 `i 109  ]
[; ;main.c: 618: {
"618
{
[; ;main.c: 619: maxMotorStep = 1360;
"619
[e = _maxMotorStep -> -> 1360 `i `ui ]
"620
}
[e :U 109 ]
"621
[e :U 108 ]
[e :U 106 ]
[; ;main.c: 620: }
[; ;main.c: 621: if(++motorStep >= (maxMotorStep*2))
[e $ ! >= =+ _motorStep -> -> 1 `i `ui * _maxMotorStep -> -> 2 `i `ui 110  ]
[; ;main.c: 622: {
"622
{
[; ;main.c: 623: motorStep = 0;
"623
[e = _motorStep -> -> 0 `i `ui ]
"624
}
[e :U 110 ]
"625
[v _tempStep `uc ~T0 @X0 1 a ]
[; ;main.c: 624: }
[; ;main.c: 625: unsigned char tempStep = motorStep % 8;
[e = _tempStep -> % _motorStep -> -> 8 `i `ui `uc ]
[; ;main.c: 626: if(motorStep < maxMotorStep)
"626
[e $ ! < _motorStep _maxMotorStep 111  ]
[; ;main.c: 627: {
"627
{
[; ;main.c: 629: switch(tempStep)
"629
[e $U 113  ]
[; ;main.c: 630: {
"630
{
[; ;main.c: 631: case 0:
"631
[e :U 114 ]
[; ;main.c: 632: RA5 = 1;RA6 = 0;RA7 = 0;RB7 = 0;
"632
[e = _RA5 -> -> 1 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 633: break;
"633
[e $U 112  ]
[; ;main.c: 634: case 1:
"634
[e :U 115 ]
[; ;main.c: 635: RA5 = 1;RA6 = 1;RA7 = 0;RB7 = 0;
"635
[e = _RA5 -> -> 1 `i `b ]
[e = _RA6 -> -> 1 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 636: break;
"636
[e $U 112  ]
[; ;main.c: 637: case 2:
"637
[e :U 116 ]
[; ;main.c: 638: RA5 = 0;RA6 = 1;RA7 = 0;RB7 = 0;
"638
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 1 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 639: break;
"639
[e $U 112  ]
[; ;main.c: 640: case 3:
"640
[e :U 117 ]
[; ;main.c: 641: RA5 = 0;RA6 = 1;RA7 = 1;RB7 = 0;
"641
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 1 `i `b ]
[e = _RA7 -> -> 1 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 642: break;
"642
[e $U 112  ]
[; ;main.c: 643: case 4:
"643
[e :U 118 ]
[; ;main.c: 644: RA5 = 0;RA6 = 0;RA7 = 1;RB7 = 0;
"644
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 1 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 645: break;
"645
[e $U 112  ]
[; ;main.c: 646: case 5:
"646
[e :U 119 ]
[; ;main.c: 647: RA5 = 0;RA6 = 0;RA7 = 1;RB7 = 1;
"647
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 1 `i `b ]
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 648: break;
"648
[e $U 112  ]
[; ;main.c: 649: case 6:
"649
[e :U 120 ]
[; ;main.c: 650: RA5 = 0;RA6 = 0;RA7 = 0;RB7 = 1;
"650
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 651: break;
"651
[e $U 112  ]
[; ;main.c: 652: case 7:
"652
[e :U 121 ]
[; ;main.c: 653: RA5 = 1;RA6 = 0;RA7 = 0;RB7 = 1;
"653
[e = _RA5 -> -> 1 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 654: break;
"654
[e $U 112  ]
"655
}
[; ;main.c: 655: }
[e $U 112  ]
"629
[e :U 113 ]
[e [\ _tempStep , $ -> -> 0 `i `uc 114
 , $ -> -> 1 `i `uc 115
 , $ -> -> 2 `i `uc 116
 , $ -> -> 3 `i `uc 117
 , $ -> -> 4 `i `uc 118
 , $ -> -> 5 `i `uc 119
 , $ -> -> 6 `i `uc 120
 , $ -> -> 7 `i `uc 121
 112 ]
"655
[e :U 112 ]
"656
}
[; ;main.c: 656: }
[e $U 122  ]
"657
[e :U 111 ]
[; ;main.c: 657: else
[; ;main.c: 658: {
"658
{
[; ;main.c: 660: switch(tempStep)
"660
[e $U 124  ]
[; ;main.c: 661: {
"661
{
[; ;main.c: 662: case 7:
"662
[e :U 125 ]
[; ;main.c: 663: RA5 = 1;RA6 = 0;RA7 = 0;RB7 = 0;
"663
[e = _RA5 -> -> 1 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 664: break;
"664
[e $U 123  ]
[; ;main.c: 665: case 6:
"665
[e :U 126 ]
[; ;main.c: 666: RA5 = 1;RA6 = 1;RA7 = 0;RB7 = 0;
"666
[e = _RA5 -> -> 1 `i `b ]
[e = _RA6 -> -> 1 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 667: break;
"667
[e $U 123  ]
[; ;main.c: 668: case 5:
"668
[e :U 127 ]
[; ;main.c: 669: RA5 = 0;RA6 = 1;RA7 = 0;RB7 = 0;
"669
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 1 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 670: break;
"670
[e $U 123  ]
[; ;main.c: 671: case 4:
"671
[e :U 128 ]
[; ;main.c: 672: RA5 = 0;RA6 = 1;RA7 = 1;RB7 = 0;
"672
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 1 `i `b ]
[e = _RA7 -> -> 1 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 673: break;
"673
[e $U 123  ]
[; ;main.c: 674: case 3:
"674
[e :U 129 ]
[; ;main.c: 675: RA5 = 0;RA6 = 0;RA7 = 1;RB7 = 0;
"675
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 1 `i `b ]
[e = _RB7 -> -> 0 `i `b ]
[; ;main.c: 676: break;
"676
[e $U 123  ]
[; ;main.c: 677: case 2:
"677
[e :U 130 ]
[; ;main.c: 678: RA5 = 0;RA6 = 0;RA7 = 1;RB7 = 1;
"678
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 1 `i `b ]
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 679: break;
"679
[e $U 123  ]
[; ;main.c: 680: case 1:
"680
[e :U 131 ]
[; ;main.c: 681: RA5 = 0;RA6 = 0;RA7 = 0;RB7 = 1;
"681
[e = _RA5 -> -> 0 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 682: break;
"682
[e $U 123  ]
[; ;main.c: 683: case 0:
"683
[e :U 132 ]
[; ;main.c: 684: RA5 = 1;RA6 = 0;RA7 = 0;RB7 = 1;
"684
[e = _RA5 -> -> 1 `i `b ]
[e = _RA6 -> -> 0 `i `b ]
[e = _RA7 -> -> 0 `i `b ]
[e = _RB7 -> -> 1 `i `b ]
[; ;main.c: 685: break;
"685
[e $U 123  ]
"686
}
[; ;main.c: 686: }
[e $U 123  ]
"660
[e :U 124 ]
[e [\ _tempStep , $ -> -> 7 `i `uc 125
 , $ -> -> 6 `i `uc 126
 , $ -> -> 5 `i `uc 127
 , $ -> -> 4 `i `uc 128
 , $ -> -> 3 `i `uc 129
 , $ -> -> 2 `i `uc 130
 , $ -> -> 1 `i `uc 131
 , $ -> -> 0 `i `uc 132
 123 ]
"686
[e :U 123 ]
"687
}
[e :U 122 ]
"688
}
[; ;main.c: 687: }
[; ;main.c: 688: }
[e $U 133  ]
"689
[e :U 104 ]
[; ;main.c: 689: else
[; ;main.c: 690: {
"690
{
[; ;main.c: 691: PORTA &= 0x1F;
"691
[e =& _PORTA -> -> 31 `i `uc ]
[; ;main.c: 692: PORTB &= 0x7F;
"692
[e =& _PORTB -> -> 127 `i `uc ]
"693
}
[e :U 133 ]
[; ;main.c: 693: }
[; ;main.c: 694: }
"694
[e :UE 103 ]
}
"697
[v _workCtr `(v ~T0 @X0 1 ef ]
"698
{
[; ;main.c: 697: void workCtr()
[; ;main.c: 698: {
[e :U _workCtr ]
[f ]
[; ;main.c: 699: test_adc = ADC_Sample(31, 0);
"699
[e = _test_adc ( _ADC_Sample (2 , -> -> 31 `i `uc -> -> 0 `i `uc ]
[; ;main.c: 700: if (0xA5 == test_adc)
"700
[e $ ! == -> 165 `i -> _test_adc `i 135  ]
[; ;main.c: 701: {
"701
{
"702
[v _power_temp `Vul ~T0 @X0 1 a ]
[; ;main.c: 702: volatile unsigned long power_temp;
[; ;main.c: 704: power_temp = (unsigned long)(((4096UL*1.2*1000))/adresult);
"704
[e = _power_temp -> / * * -> -> 4096 `ul `d .1.2 -> -> 1000 `i `d -> _adresult `d `ul ]
[; ;main.c: 705: power_ad = (unsigned int)(power_temp);
"705
[e = _power_ad -> _power_temp `ui ]
"706
}
[e :U 135 ]
[; ;main.c: 706: }
[; ;main.c: 707: if(workStep == 2 && power_ad < 2900)
"707
[e $ ! && == -> _workStep `i -> 2 `i < _power_ad -> -> 2900 `i `ui 136  ]
[; ;main.c: 708: {
"708
{
[; ;main.c: 709: if(++lowFanTime > 200)
"709
[e $ ! > -> =+ _lowFanTime -> -> 1 `i `uc `i -> 200 `i 137  ]
[; ;main.c: 710: {
"710
{
[; ;main.c: 711: lowFanTime = 0;
"711
[e = _lowFanTime -> -> 0 `i `uc ]
[; ;main.c: 712: workStep = 1;
"712
[e = _workStep -> -> 1 `i `uc ]
"713
}
[e :U 137 ]
"714
}
[; ;main.c: 713: }
[; ;main.c: 714: }
[e $U 138  ]
"715
[e :U 136 ]
[; ;main.c: 715: else
[; ;main.c: 716: {
"716
{
[; ;main.c: 717: lowFanTime = 0;
"717
[e = _lowFanTime -> -> 0 `i `uc ]
"718
}
[e :U 138 ]
[; ;main.c: 718: }
[; ;main.c: 719: if(power_ad < 2700)
"719
[e $ ! < _power_ad -> -> 2700 `i `ui 139  ]
[; ;main.c: 720: {
"720
{
[; ;main.c: 721: if(++lowBatTime > 200)
"721
[e $ ! > -> =+ _lowBatTime -> -> 1 `i `uc `i -> 200 `i 140  ]
[; ;main.c: 722: {
"722
{
[; ;main.c: 723: lowBatTime = 0;
"723
[e = _lowBatTime -> -> 0 `i `uc ]
[; ;main.c: 724: lowBatLock = 1;
"724
[e = _lowBatLock -> -> 1 `i `uc ]
[; ;main.c: 725: workStep = 0;
"725
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 726: wuhuaFlag = 0;
"726
[e = _wuhuaFlag -> -> 0 `i `uc ]
[; ;main.c: 727: bujinFlag = 0;
"727
[e = _bujinFlag -> -> 0 `i `uc ]
"728
}
[e :U 140 ]
"729
}
[; ;main.c: 728: }
[; ;main.c: 729: }
[e $U 141  ]
"730
[e :U 139 ]
[; ;main.c: 730: else
[; ;main.c: 731: {
"731
{
[; ;main.c: 732: lowBatTime = 0;
"732
[e = _lowBatTime -> -> 0 `i `uc ]
"733
}
[e :U 141 ]
[; ;main.c: 733: }
[; ;main.c: 734: if(firstTime > 0)
"734
[e $ ! > -> _firstTime `i -> 0 `i 142  ]
[; ;main.c: 735: {
"735
{
[; ;main.c: 736: firstTime--;
"736
[e -- _firstTime -> -> 1 `i `uc ]
[; ;main.c: 737: PORTB = 0x00;
"737
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 738: PORTA = 0x00;
"738
[e = _PORTA -> -> 0 `i `uc ]
"739
}
[; ;main.c: 739: }
[e $U 143  ]
"740
[e :U 142 ]
[; ;main.c: 740: else
[; ;main.c: 741: {
"741
{
[; ;main.c: 742: keyLedCtr();
"742
[e ( _keyLedCtr ..  ]
[; ;main.c: 743: fanCtr();
"743
[e ( _fanCtr ..  ]
[; ;main.c: 744: wuhuaCtr();
"744
[e ( _wuhuaCtr ..  ]
[; ;main.c: 745: bujinCtr();
"745
[e ( _bujinCtr ..  ]
"746
}
[e :U 143 ]
[; ;main.c: 746: }
[; ;main.c: 748: }
"748
[e :UE 134 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"753
[v _main `(v ~T0 @X0 1 ef ]
"754
{
[; ;main.c: 753: void main()
[; ;main.c: 754: {
[e :U _main ]
[f ]
[; ;main.c: 755: Init_System();
"755
[e ( _Init_System ..  ]
[; ;main.c: 756: firstLock = 0;
"756
[e = _firstLock -> -> 0 `i `uc ]
[; ;main.c: 757: firstTime = 200;
"757
[e = _firstTime -> -> 200 `i `uc ]
[; ;main.c: 758: while(1)
"758
[e :U 146 ]
[; ;main.c: 759: {
"759
{
[; ;main.c: 760: if(B_MainLoop)
"760
[e $ ! _B_MainLoop 148  ]
[; ;main.c: 761: {
"761
{
[; ;main.c: 762: B_MainLoop = 0;
"762
[e = _B_MainLoop -> -> 0 `i `b ]
[; ;main.c: 763: asm("clrwdt");
"763
[; <" clrwdt ;# ">
[; ;main.c: 765: CheckTouchKey();
"765
[e ( _CheckTouchKey ..  ]
[; ;main.c: 766: chrgCtr();
"766
[e ( _chrgCtr ..  ]
[; ;main.c: 767: Refurbish_Sfr();
"767
[e ( _Refurbish_Sfr ..  ]
[; ;main.c: 768: KeyServer();
"768
[e ( _KeyServer ..  ]
[; ;main.c: 769: workCtr();
"769
[e ( _workCtr ..  ]
[; ;main.c: 770: if(firstTime == 0 && chrgFlag == 0 && workStep == 0 && wuhuaFlag == 0 && bujinFlag == 0 && shanshuoTime == 0 && shanshuoTime2 == 0)
"770
[e $ ! && && && && && && == -> _firstTime `i -> 0 `i == -> _chrgFlag `i -> 0 `i == -> _workStep `i -> 0 `i == -> _wuhuaFlag `i -> 0 `i == -> _bujinFlag `i -> 0 `i == _shanshuoTime -> -> 0 `i `ui == _shanshuoTime2 -> -> 0 `i `ui 149  ]
[; ;main.c: 771: {
"771
{
[; ;main.c: 772: WorkSleep();
"772
[e ( _WorkSleep ..  ]
"773
}
[e :U 149 ]
"774
}
[e :U 148 ]
"775
}
[e :U 145 ]
"758
[e $U 146  ]
[e :U 147 ]
[; ;main.c: 773: }
[; ;main.c: 774: }
[; ;main.c: 775: }
[; ;main.c: 776: }
"776
[e :UE 144 ]
}
