
# 1 "C:\SCMCU WorkSpace\SCM1152_LED\led.c"

# 26 "C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\htc.h"
extern const char __xc8_OPTIM_SPEED;

extern double __fpnormalize(double);


# 13 "C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\xc8debug.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 10 "C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\SC8P1153.h"
volatile unsigned char INDF @0x0000;
volatile unsigned char TMR0 @0x0001;
volatile unsigned char PCL @0x0002;
volatile unsigned char STATUS @0x0003;
volatile unsigned char FSR @0x0004;
volatile unsigned char PORTB @0x0005;
volatile unsigned char TRISB @0x0006;
volatile unsigned char OPTION_REG @0x0007;
volatile unsigned char OSCCON @0x0008;
volatile unsigned char INTCON @0x0009;
volatile unsigned char PCLATH @0x000A;
volatile unsigned char PDCONB @0x000B;
volatile unsigned char ODCONB @0x000C;
volatile unsigned char WPUB @0x000D;
volatile unsigned char IOCB @0x000E;
volatile unsigned char TMR0PRD @0x000F;
volatile unsigned char PWMCTR0 @0x0010;
volatile unsigned char PWMCTR1 @0x0011;
volatile unsigned char PWMCTR2 @0x0012;
volatile unsigned char PWMR @0x0013;
volatile unsigned char PWM_PRD @0x0014;
volatile unsigned char PWMPRD @0x0014;

# 43
volatile bit TO @ ((unsigned)&STATUS*8)+4;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit Z @ ((unsigned)&STATUS*8)+2;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit C @ ((unsigned)&STATUS*8)+0;


volatile bit PB7 @ ((unsigned)&PORTB*8)+7;
volatile bit PB6 @ ((unsigned)&PORTB*8)+6;
volatile bit PB5 @ ((unsigned)&PORTB*8)+5;
volatile bit PB4 @ ((unsigned)&PORTB*8)+4;
volatile bit PB3 @ ((unsigned)&PORTB*8)+3;
volatile bit PB2 @ ((unsigned)&PORTB*8)+2;
volatile bit PB1 @ ((unsigned)&PORTB*8)+1;
volatile bit PB0 @ ((unsigned)&PORTB*8)+0;


volatile bit PORTB7 @ ((unsigned)&PORTB*8)+7;
volatile bit PORTB6 @ ((unsigned)&PORTB*8)+6;
volatile bit PORTB5 @ ((unsigned)&PORTB*8)+5;
volatile bit PORTB4 @ ((unsigned)&PORTB*8)+4;
volatile bit PORTB3 @ ((unsigned)&PORTB*8)+3;
volatile bit PORTB2 @ ((unsigned)&PORTB*8)+2;
volatile bit PORTB1 @ ((unsigned)&PORTB*8)+1;
volatile bit PORTB0 @ ((unsigned)&PORTB*8)+0;


volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;


volatile bit XT_EN @ ((unsigned)&OPTION_REG*8)+7;
volatile bit T0SYNC @ ((unsigned)&OPTION_REG*8)+6;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;


volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+7;
volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit TMR2EN @ ((unsigned)&OSCCON*8)+0;
volatile bit TMR0EN @ ((unsigned)&OSCCON*8)+0;


volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit INTEG @ ((unsigned)&INTCON*8)+6;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
volatile bit PBIE @ ((unsigned)&INTCON*8)+3;

volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
volatile bit PBIF @ ((unsigned)&INTCON*8)+0;


volatile bit PDCONB7 @ ((unsigned)&PDCONB*8)+7;
volatile bit PDCONB6 @ ((unsigned)&PDCONB*8)+6;
volatile bit PDCONB5 @ ((unsigned)&PDCONB*8)+5;
volatile bit PDCONB4 @ ((unsigned)&PDCONB*8)+4;
volatile bit PDCONB2 @ ((unsigned)&PDCONB*8)+2;
volatile bit PDCONB1 @ ((unsigned)&PDCONB*8)+1;
volatile bit PDCONB0 @ ((unsigned)&PDCONB*8)+0;



volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
volatile bit ODCONB2 @ ((unsigned)&ODCONB*8)+2;
volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;


volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;


volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;


volatile bit PWMR49 @ ((unsigned)&PWMCTR0*8)+7;
volatile bit PWMR48 @ ((unsigned)&PWMCTR0*8)+6;
volatile bit PWM4EN @ ((unsigned)&PWMCTR0*8)+4;
volatile bit PWM3EN @ ((unsigned)&PWMCTR0*8)+3;
volatile bit PWM2EN @ ((unsigned)&PWMCTR0*8)+2;
volatile bit PWM1EN @ ((unsigned)&PWMCTR0*8)+1;
volatile bit PWM0EN @ ((unsigned)&PWMCTR0*8)+0;

volatile bit PWMEN4 @ ((unsigned)&PWMCTR0*8)+4;
volatile bit PWMEN3 @ ((unsigned)&PWMCTR0*8)+3;
volatile bit PWMEN2 @ ((unsigned)&PWMCTR0*8)+2;
volatile bit PWMEN1 @ ((unsigned)&PWMCTR0*8)+1;
volatile bit PWMEN0 @ ((unsigned)&PWMCTR0*8)+0;


volatile bit PWMR39 @ ((unsigned)&PWMCTR1*8)+7;
volatile bit PWMR38 @ ((unsigned)&PWMCTR1*8)+6;
volatile bit PWMR29 @ ((unsigned)&PWMCTR1*8)+5;
volatile bit PWMR28 @ ((unsigned)&PWMCTR1*8)+4;
volatile bit PWMR19 @ ((unsigned)&PWMCTR1*8)+3;
volatile bit PWMR18 @ ((unsigned)&PWMCTR1*8)+2;
volatile bit PWMR09 @ ((unsigned)&PWMCTR1*8)+1;
volatile bit PWMR08 @ ((unsigned)&PWMCTR1*8)+0;


volatile bit PWMPRD9 @ ((unsigned)&PWMCTR2*8)+7;
volatile bit PWMPRD8 @ ((unsigned)&PWMCTR2*8)+6;
volatile bit T2CKPS1 @ ((unsigned)&PWMCTR2*8)+5;
volatile bit T2CKPS0 @ ((unsigned)&PWMCTR2*8)+4;
volatile bit SEL2 @ ((unsigned)&PWMCTR2*8)+2;
volatile bit SEL1 @ ((unsigned)&PWMCTR2*8)+1;
volatile bit SEL0 @ ((unsigned)&PWMCTR2*8)+0;

volatile bit PWMCK1 @ ((unsigned)&PWMCTR2*8)+5;
volatile bit PWMCK0 @ ((unsigned)&PWMCTR2*8)+4;
volatile bit PWMS2 @ ((unsigned)&PWMCTR2*8)+2;
volatile bit PWMS1 @ ((unsigned)&PWMCTR2*8)+1;
volatile bit PWMS0 @ ((unsigned)&PWMCTR2*8)+0;


# 27 "C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\sc.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 76
extern unsigned int flash_read(unsigned short addr);


# 149
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);

# 184
extern unsigned char __resetbits;
extern __bit __powerdown;
extern __bit __timeout;

# 6 "C:\SCMCU WorkSpace\SCM1152_LED\led.c"
unsigned char timeoutFlag;

void Init_System()
{
asm("nop");
asm("clrwdt");
INTCON = 0;
OSCCON = 0X71;
OPTION_REG = 0x00;
TMR0 = 0;
INTCON = 0xE0;
TMR0PRD = 100;


TRISB = 0;
WPUB = 0xFF;
PDCONB = 0;
PORTB = 0xFF;
IOCB = 0x00;
}

void main(void)
{
Init_System();
unsigned int count = 0;
unsigned char FirstFlag = 1;
unsigned char ledIndex = 4;
while(1)
{

if(timeoutFlag)
{
timeoutFlag = 0;
asm("clrwdt");
if(count == 500)
{
count = 0;
}


switch(count)
{
case 0:
PORTB&=~(1<<4);
PORTB|=(1<<2);
break;
case 100:
PORTB&=~(1<<3);
PORTB|=(1<<1);
break;
case 200:
PORTB&=~(1<<2);
PORTB|=(1<<0);
break;
case 300:
PORTB&=~(1<<1);
PORTB|=(1<<4);
break;
case 400:
PORTB&=~(1<<0);
PORTB|=(1<<3);
}
count++;

}
}
}

# 81
void interrupt Timer0_Isr()
{
if(T0IF)
{




T0IF = 0;
timeoutFlag = 1;
}
}
