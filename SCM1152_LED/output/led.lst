

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 30 00:32:25 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1152A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x4E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	text0
    51  0000                     __ptext0:	
    52  000F                     _TMR0PRD	set	15
    53  000E                     _IOCB	set	14
    54  000D                     _WPUB	set	13
    55  000B                     _PDCONB	set	11
    56  0009                     _INTCON	set	9
    57  0008                     _OSCCON	set	8
    58  0007                     _OPTION_REG	set	7
    59  0006                     _TRISB	set	6
    60  0005                     _PORTB	set	5
    61  0001                     _TMR0	set	1
    62  004A                     _T0IF	set	74
    63                           
    64                           	psect	cinit
    65  000B                     start_initialization:	
    66                           ; #config settings
    67                           
    68  000B                     __initialization:	
    69                           
    70                           ; Clear objects allocated to COMMON
    71  000B  01C5               	clrf	__pbssCOMMON& (0+127)
    72  000C                     end_of_initialization:	
    73                           ;End of C runtime variable initialization code
    74                           
    75  000C                     __end_of__initialization:	
    76  000C  0183               	clrf	3
    77  000D  280E               	ljmp	_main	;jump to C main() function
    78                           
    79                           	psect	bssCOMMON
    80  0045                     __pbssCOMMON:	
    81  0045                     _timeoutFlag:	
    82  0045                     	ds	1
    83                           
    84                           	psect	cstackCOMMON
    85  0040                     __pcstackCOMMON:	
    86  0040                     ?_Init_System:	
    87  0040                     ?_main:	
    88                           ; 1 bytes @ 0x0
    89                           
    90  0040                     ?_Timer0_Isr:	
    91                           ; 1 bytes @ 0x0
    92                           
    93  0040                     ??_Timer0_Isr:	
    94                           ; 1 bytes @ 0x0
    95                           
    96                           
    97                           ; 1 bytes @ 0x0
    98  0040                     	ds	2
    99  0042                     ??_Init_System:	
   100  0042                     ??_main:	
   101                           ; 1 bytes @ 0x2
   102                           
   103  0042                     main@FirstFlag:	
   104                           ; 1 bytes @ 0x2
   105                           
   106                           
   107                           ; 1 bytes @ 0x2
   108  0042                     	ds	1
   109  0043                     main@count:	
   110                           
   111                           ; 2 bytes @ 0x3
   112  0043                     	ds	2
   113                           
   114                           	psect	maintext
   115  000E                     __pmaintext:	
   116 ;;
   117 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   118 ;;
   119 ;; *************** function _main *****************
   120 ;; Defined at:
   121 ;;		line 26 in file "C:\SCMCU WorkSpace\SCM1152_LED\led.c"
   122 ;; Parameters:    Size  Location     Type
   123 ;;		None
   124 ;; Auto vars:     Size  Location     Type
   125 ;;  count           2    3[COMMON] unsigned int 
   126 ;;  FirstFlag       1    2[COMMON] unsigned char 
   127 ;;  ledIndex        1    0        unsigned char 
   128 ;; Return value:  Size  Location     Type
   129 ;;                  1    wreg      void 
   130 ;; Registers used:
   131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   132 ;; Tracked objects:
   133 ;;		On entry : B00/0
   134 ;;		On exit  : 0/0
   135 ;;		Unchanged: 0/0
   136 ;; Data sizes:     COMMON   BANK0
   137 ;;      Params:         0       0
   138 ;;      Locals:         3       0
   139 ;;      Temps:          0       0
   140 ;;      Totals:         3       0
   141 ;;Total ram usage:        3 bytes
   142 ;; Hardware stack levels required when called:    2
   143 ;; This function calls:
   144 ;;		_Init_System
   145 ;; This function is called by:
   146 ;;		Startup code after reset
   147 ;; This function uses a non-reentrant model
   148 ;;
   149                           
   150                           
   151                           ;psect for function _main
   152  000E                     _main:	
   153                           
   154                           ;led.c: 28: Init_System();
   155                           
   156                           ;incstack = 0
   157                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   158  000E  206A               	fcall	_Init_System
   159                           
   160                           ;led.c: 29: unsigned int count = 0;
   161  000F  01C3               	clrf	main@count
   162  0010  01C4               	clrf	main@count+1
   163                           
   164                           ;led.c: 31: unsigned char ledIndex = 4;
   165  0011  01C2               	clrf	main@FirstFlag
   166  0012  0AC2               	incf	main@FirstFlag,f
   167  0013                     l288:	
   168                           ;led.c: 32: while(1)
   169                           
   170  0013  0064               	clrwdt	;# 
   171                           
   172                           ;led.c: 35: if(timeoutFlag)
   173  0014  0845               	movf	_timeoutFlag,w
   174  0015  1903               	btfsc	3,2
   175  0016  2813               	goto	l288
   176  0017  3090               	movlw	144
   177                           
   178                           ;led.c: 36: {
   179                           ;led.c: 37: timeoutFlag = 0;
   180  0018  01C5               	clrf	_timeoutFlag
   181                           
   182                           ;led.c: 38: if(count == 400)
   183  0019  0643               	xorwf	main@count,w
   184  001A  1D03               	skipz
   185  001B  2821               	goto	l723
   186  001C  0344               	decf	main@count+1,w
   187  001D  1D03               	btfss	3,2
   188  001E  2821               	goto	l723
   189                           
   190                           ;led.c: 39: {
   191                           ;led.c: 40: count = 0;
   192  001F  01C3               	clrf	main@count
   193  0020  01C4               	clrf	main@count+1
   194  0021                     l723:	
   195                           
   196                           ;led.c: 41: }
   197                           ;led.c: 43: if(FirstFlag)
   198  0021  0842               	movf	main@FirstFlag,w
   199  0022  1D03               	btfss	3,2
   200  0023  282F               	goto	l739
   201  0024  284E               	goto	l751
   202  0025                     l727:	
   203                           
   204                           ;led.c: 48: PORTB = 0xFC;
   205  0025  30FC               	movlw	252
   206  0026  284C               	goto	L5
   207  0027                     l729:	
   208                           ;led.c: 49: break;
   209                           
   210                           
   211                           ;led.c: 51: PORTB = 0xF9;
   212  0027  30F9               	movlw	249
   213  0028  284C               	goto	L5
   214  0029                     l731:	
   215                           ;led.c: 52: break;
   216                           
   217                           
   218                           ;led.c: 54: PORTB = 0xF3;
   219  0029  30F3               	movlw	243
   220  002A  0085               	movwf	5	;volatile
   221                           
   222                           ;led.c: 55: FirstFlag = 0;
   223  002B  01C2               	clrf	main@FirstFlag
   224                           
   225                           ;led.c: 56: break;
   226  002C  2866               	goto	l753
   227  002D                     l735:	
   228                           
   229                           ;led.c: 58: PORTB = 0xFE;
   230  002D  30FE               	movlw	254
   231  002E  284C               	goto	L5
   232  002F                     l739:	
   233                           ;led.c: 59: break;
   234                           
   235                           
   236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   237                           ; Switch size 1, requested type "space"
   238                           ; Number of cases is 2, Range of values is 0 to 1
   239                           ; switch strategies available:
   240                           ; Name         Instructions Cycles
   241                           ; simple_byte            7     4 (average)
   242                           ; direct_byte            8     6 (fixed)
   243                           ; jumptable            260     6 (fixed)
   244                           ;	Chosen strategy is simple_byte
   245  002F  0844               	movf	main@count+1,w
   246  0030  3A00               	xorlw	0	; case 0
   247  0031  1903               	skipnz
   248  0032  2837               	goto	l895
   249  0033  3A01               	xorlw	1	; case 1
   250  0034  1903               	skipnz
   251  0035  2842               	goto	l897
   252  0036  2866               	goto	l753
   253  0037                     l895:	
   254                           
   255                           ; Switch size 1, requested type "space"
   256                           ; Number of cases is 3, Range of values is 0 to 200
   257                           ; switch strategies available:
   258                           ; Name         Instructions Cycles
   259                           ; simple_byte           10     6 (average)
   260                           ; direct_byte          207     6 (fixed)
   261                           ; jumptable            260     6 (fixed)
   262                           ;	Chosen strategy is simple_byte
   263  0037  0843               	movf	main@count,w
   264  0038  3A00               	xorlw	0	; case 0
   265  0039  1903               	skipnz
   266  003A  282D               	goto	l735
   267  003B  3A64               	xorlw	100	; case 100
   268  003C  1903               	skipnz
   269  003D  2825               	goto	l727
   270  003E  3AAC               	xorlw	172	; case 200
   271  003F  1903               	skipnz
   272  0040  2827               	goto	l729
   273  0041  2866               	goto	l753
   274  0042                     l897:	
   275                           
   276                           ; Switch size 1, requested type "space"
   277                           ; Number of cases is 1, Range of values is 44 to 44
   278                           ; switch strategies available:
   279                           ; Name         Instructions Cycles
   280                           ; simple_byte            4     3 (average)
   281                           ; direct_byte           10     9 (fixed)
   282                           ; jumptable            263     9 (fixed)
   283                           ;	Chosen strategy is simple_byte
   284  0042  0843               	movf	main@count,w
   285  0043  3A2C               	xorlw	44	; case 44
   286  0044  1903               	skipnz
   287  0045  2829               	goto	l731
   288  0046  2866               	goto	l753
   289  0047                     l741:	
   290                           
   291                           ;led.c: 66: PORTB = 0xEC;
   292  0047  30EC               	movlw	236
   293  0048  284C               	goto	L5
   294  0049                     l745:	
   295                           ;led.c: 67: break;
   296                           
   297                           
   298                           ;led.c: 72: PORTB = 0xF3;
   299  0049  30F3               	movlw	243
   300  004A  284C               	goto	L5
   301  004B                     l747:	
   302                           ;led.c: 73: break;
   303                           
   304                           
   305                           ;led.c: 75: PORTB = 0xE6;
   306  004B  30E6               	movlw	230
   307  004C                     L5:	
   308  004C  0085               	movwf	5	;volatile
   309                           
   310                           ;led.c: 76: break;
   311  004D  2866               	goto	l753
   312  004E                     l751:	
   313                           
   314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   315                           ; Switch size 1, requested type "space"
   316                           ; Number of cases is 2, Range of values is 0 to 1
   317                           ; switch strategies available:
   318                           ; Name         Instructions Cycles
   319                           ; simple_byte            7     4 (average)
   320                           ; direct_byte            8     6 (fixed)
   321                           ; jumptable            260     6 (fixed)
   322                           ;	Chosen strategy is simple_byte
   323  004E  0844               	movf	main@count+1,w
   324  004F  3A00               	xorlw	0	; case 0
   325  0050  1903               	skipnz
   326  0051  2856               	goto	l899
   327  0052  3A01               	xorlw	1	; case 1
   328  0053  1903               	skipnz
   329  0054  2861               	goto	l901
   330  0055  2866               	goto	l753
   331  0056                     l899:	
   332                           
   333                           ; Switch size 1, requested type "space"
   334                           ; Number of cases is 3, Range of values is 0 to 200
   335                           ; switch strategies available:
   336                           ; Name         Instructions Cycles
   337                           ; simple_byte           10     6 (average)
   338                           ; direct_byte          207     6 (fixed)
   339                           ; jumptable            260     6 (fixed)
   340                           ;	Chosen strategy is simple_byte
   341  0056  0843               	movf	main@count,w
   342  0057  3A00               	xorlw	0	; case 0
   343  0058  1903               	skipnz
   344  0059  284B               	goto	l747
   345  005A  3A64               	xorlw	100	; case 100
   346  005B  1903               	skipnz
   347  005C  2847               	goto	l741
   348  005D  3AAC               	xorlw	172	; case 200
   349  005E  1903               	skipnz
   350  005F  2827               	goto	l729
   351  0060  2866               	goto	l753
   352  0061                     l901:	
   353                           
   354                           ; Switch size 1, requested type "space"
   355                           ; Number of cases is 1, Range of values is 44 to 44
   356                           ; switch strategies available:
   357                           ; Name         Instructions Cycles
   358                           ; simple_byte            4     3 (average)
   359                           ; direct_byte           10     9 (fixed)
   360                           ; jumptable            263     9 (fixed)
   361                           ;	Chosen strategy is simple_byte
   362  0061  0843               	movf	main@count,w
   363  0062  3A2C               	xorlw	44	; case 44
   364  0063  1903               	skipnz
   365  0064  2849               	goto	l745
   366  0065  2866               	goto	l753
   367  0066                     l753:	
   368                           
   369                           ;led.c: 78: }
   370                           ;led.c: 81: count++;
   371  0066  0AC3               	incf	main@count,f
   372  0067  1903               	skipnz
   373  0068  0AC4               	incf	main@count+1,f
   374  0069  2813               	goto	l288
   375  006A                     __end_of_main:	
   376                           
   377                           	psect	text1
   378  006A                     __ptext1:	
   379 ;; *************** function _Init_System *****************
   380 ;; Defined at:
   381 ;;		line 7 in file "C:\SCMCU WorkSpace\SCM1152_LED\led.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;		None
   384 ;; Auto vars:     Size  Location     Type
   385 ;;		None
   386 ;; Return value:  Size  Location     Type
   387 ;;                  1    wreg      void 
   388 ;; Registers used:
   389 ;;		wreg, status,2
   390 ;; Tracked objects:
   391 ;;		On entry : B00/0
   392 ;;		On exit  : 0/0
   393 ;;		Unchanged: 0/0
   394 ;; Data sizes:     COMMON   BANK0
   395 ;;      Params:         0       0
   396 ;;      Locals:         0       0
   397 ;;      Temps:          0       0
   398 ;;      Totals:         0       0
   399 ;;Total ram usage:        0 bytes
   400 ;; Hardware stack levels used:    1
   401 ;; Hardware stack levels required when called:    1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           
   410                           ;psect for function _Init_System
   411  006A                     _Init_System:	
   412                           
   413                           ;incstack = 0
   414                           ; Regs used in _Init_System: [wreg+status,2]
   415  006A  0000               	nop	;# 
   416  006B  0064               	clrwdt	;# 
   417                           
   418                           ;led.c: 11: INTCON = 0;
   419  006C  0189               	clrf	9	;volatile
   420                           
   421                           ;led.c: 12: OSCCON = 0X71;
   422  006D  3071               	movlw	113
   423  006E  0088               	movwf	8	;volatile
   424                           
   425                           ;led.c: 13: OPTION_REG = 0x00;
   426  006F  0187               	clrf	7	;volatile
   427                           
   428                           ;led.c: 14: TMR0 = 0;
   429  0070  0181               	clrf	1	;volatile
   430                           
   431                           ;led.c: 15: INTCON = 0xE0;
   432  0071  30E0               	movlw	224
   433  0072  0089               	movwf	9	;volatile
   434                           
   435                           ;led.c: 16: TMR0PRD = 100;
   436  0073  3064               	movlw	100
   437  0074  008F               	movwf	15	;volatile
   438                           
   439                           ;led.c: 19: TRISB = 0;
   440  0075  0186               	clrf	6	;volatile
   441                           
   442                           ;led.c: 20: WPUB = 0xFF;
   443  0076  30FF               	movlw	255
   444  0077  008D               	movwf	13	;volatile
   445                           
   446                           ;led.c: 21: PDCONB = 0;
   447  0078  018B               	clrf	11	;volatile
   448                           
   449                           ;led.c: 22: PORTB = 0xFF;
   450  0079  0085               	movwf	5	;volatile
   451                           
   452                           ;led.c: 23: IOCB = 0x00;
   453  007A  018E               	clrf	14	;volatile
   454  007B  0008               	return
   455  007C                     __end_of_Init_System:	
   456                           
   457                           	psect	text2
   458  007C                     __ptext2:	
   459 ;; *************** function _Timer0_Isr *****************
   460 ;; Defined at:
   461 ;;		line 94 in file "C:\SCMCU WorkSpace\SCM1152_LED\led.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		None
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMMON   BANK0
   475 ;;      Params:         0       0
   476 ;;      Locals:         0       0
   477 ;;      Temps:          2       0
   478 ;;      Totals:         2       0
   479 ;;Total ram usage:        2 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; This function calls:
   482 ;;		Nothing
   483 ;; This function is called by:
   484 ;;		Interrupt level 1
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _Timer0_Isr
   490  007C                     _Timer0_Isr:	
   491                           
   492                           ;led.c: 96: if(T0IF)
   493  007C  1D09               	btfss	9,2	;volatile
   494  007D  2881               	goto	i1l313
   495                           
   496                           ;led.c: 97: {
   497                           ;led.c: 102: T0IF = 0;
   498  007E  1109               	bcf	9,2	;volatile
   499                           
   500                           ;led.c: 103: timeoutFlag = 1;
   501  007F  01C5               	clrf	_timeoutFlag
   502  0080  0AC5               	incf	_timeoutFlag,f
   503  0081                     i1l313:	
   504  0081  0841               	movf	??_Timer0_Isr+1,w
   505  0082  008A               	movwf	10
   506  0083  0E40               	swapf	??_Timer0_Isr^(0+-128),w
   507  0084  0083               	movwf	3
   508  0085  0ECE               	swapf	78,f
   509  0086  0E4E               	swapf	78,w
   510  0087  0009               	retfie
   511  0088                     __end_of_Timer0_Isr:	
   512  004E                     btemp	set	78	;btemp
   513  004E                     wtemp0	set	78
   514                           
   515                           	psect	intentry
   516  0004                     __pintentry:	
   517                           ;incstack = 0
   518                           ; Regs used in _Timer0_Isr: []
   519                           
   520  0004                     interrupt_function:	
   521  004E                     saved_w	set	btemp
   522  0004  00CE               	movwf	btemp
   523  0005  0E03               	swapf	3,w
   524  0006  00C0               	movwf	??_Timer0_Isr
   525  0007  080A               	movf	10,w
   526  0008  00C1               	movwf	??_Timer0_Isr+1
   527  0009  287C               	ljmp	_Timer0_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer0_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_Isr in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      60
                                              2 COMMON     3     3      0
                        _Init_System
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer0_Isr                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_System

 _Timer0_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               20      0       0       3        0.0%
ABS                  0      0       6       4        0.0%
BITBANK0            20      0       0       5        0.0%
DATA                 0      0       6       6        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 30 00:32:25 2020

                    l288 0013                      l731 0029                      l723 0021  
                    l901 0061                      l741 0047                      l735 002D  
                    l727 0025                      l751 004E                      l745 0049  
                    l729 0027                      l753 0066                      l747 004B  
                    l739 002F                      l895 0037                      l897 0042  
                    l899 0056            main@FirstFlag 0042                     _T0IF 004A  
                   _IOCB 000E                     _TMR0 0001                     _WPUB 000D  
                   _main 000E                     btemp 004E                     start 000A  
          ??_Init_System 0042                    ?_main 0040                    i1l313 0081  
                  _PORTB 0005                    _TRISB 0006                    pclath 000A  
                  status 0003                    wtemp0 004E          __initialization 000B  
           __end_of_main 006A                   ??_main 0042      __end_of_Init_System 007C  
                 _PDCONB 000B                   _INTCON 0009                   _OSCCON 0008  
             _Timer0_Isr 007C                   saved_w 004E  __end_of__initialization 000C  
         __pcstackCOMMON 0040              _Init_System 006A              ?_Timer0_Isr 0040  
             __pmaintext 000E               __pintentry 0004                  _TMR0PRD 000F  
                __ptext0 0000                  __ptext1 006A                  __ptext2 007C  
    __size_of_Timer0_Isr 000C     end_of_initialization 000C             ?_Init_System 0040  
    start_initialization 000B             ??_Timer0_Isr 0040              __pbssCOMMON 0045  
              ___latbits 0000       __end_of_Timer0_Isr 0088        interrupt_function 0004  
   __size_of_Init_System 0012                main@count 0043            __size_of_main 005C  
               intlevel1 0000               _OPTION_REG 0007              _timeoutFlag 0045  
