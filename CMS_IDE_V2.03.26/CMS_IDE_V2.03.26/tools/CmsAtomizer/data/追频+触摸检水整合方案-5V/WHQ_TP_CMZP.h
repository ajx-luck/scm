#ifndef  _WHQ_TP_CMZP_H_
#define  _WHQ_TP_CMZP_H_
/*******************************************************
注：Set_Pwm_Onoff()子函数中一直在检测AD，如果需要用其它AD，则暂时给0xff关闭AD检测，PFG会维持在当前状态
调用此库函数时需要占用EEPROM的0x12-0x15地址
********************************************************/
#pragma warning disable 752,759,520
/*******************************************************
调试变量声明
********************************************************/
extern volatile unsigned char cur_addat;//CUR值
extern volatile unsigned int pwmdisp;//PWM值
/*******************************************************
函数声明
********************************************************/
extern unsigned char Test_Pwm(unsigned char dat);//此函数放在main主函数，建议扫描时间2.5~5ms
/*
返回数据：
0x00：
0x55：说明扫描错误
0xaa：说明初始扫频成功
*/
extern void Set_Pwm_Onoff(unsigned char fun);//此函数放在中断，建议中断时间125us
/*
入口参数：fun
0：为关闭PFG输出
1-PWMMAXC：设置输出占空比

0xff：为关闭AD检测，但是PFG还是正常输出
*/

/*************************************************************************/
/*************************************************************************/
/**************************************************************************
以下参数根据实际情况更改
**************************************************************************/
/*******************************************************
中心频率选择
PFG_SELECT = 1		:1.7M
PFG_SELECT = 2		:2.4M
PFG_SELECT = 3		:3.0M
PFG_SELECT = 4		:3.5M
********************************************************/
#define  PFG_SELECT		3//需根据实际雾化片频率修改

/*******************************************************
AD通道定义
********************************************************/
/*******************************************************/
#define  CUR_CH			1//定义CUR反馈AD通道，需根据实际电路调整


/*******************************************************
初始电流值预估
//此参数需要随方案及雾化片厂家调整
调试方法为：加水，将CURSETC = 200，观察电流AD值最大可达多少，则电流预估设定值至少小于最大值-10
********************************************************/
#define	CURSETC			35
/*******************************************************
扫频范围限定
限定规则：
例如2.4M雾化片：PWMFST=200则初始扫频频率约为(2.4+PWMFST*1.5/1000)M=2.70M
				PWMLST=200则初始扫频频率约为(2.4-PWMLST*1.5/1000)M=2.10M
********************************************************/
#define  PWMFST			250//此数范围0-255，默认即可
#define  PWMLST			250//此数范围0-255，默认即可

/*******************************************************
周期设置，范围0-255
********************************************************/
/*******************************************************/
#define  PWMMAXC		48//周期设置，时间为PWMMAXC*中断时间，一般默认即可

/*******************************************************
追频时占空比输出
********************************************************/
/*******************************************************/
#define  PWMCYL			24//24/48=1/2，一般默认即可

/*******************************************************
初始追完频后间隔追频时间，为0则不再追频，追频范围1~255，时间计算125us*32*ZPJGTIME
********************************************************/
/*******************************************************/
#define  ZPJGTIME		125//一般默认即可

/*******************************************************
是否每次开机都扫频
1:每次开机都扫频
0：不断电情况下，只有第一次开机才扫频
********************************************************/
#define  KJ_FRE			1							//此数范围0-255
/*************************************************************************/
/*************************************************************************/
/**************************************************************************
以下为抖频参数设置
**************************************************************************/
/*************************************************************************/
/*************************************************************************/
/*******************************************************
抖频总使能
0：不使能
1：使能

注：1、选择时需注意电感是否会产生鸣叫，如果是则降低间隔
	2、测量MOS管D端尖峰电压是否超过MOS管耐压值
********************************************************/
#define  DMODEON	0

/*******************************************************
抖频范围
********************************************************/
#define  DRANGE		16//1~32

/*******************************************************
抖频步进
********************************************************/
#define  DBUJIN		bujin_2//bujin_1、bujin_2、bujin_4、bujin_8

/*******************************************************
抖频间隔
********************************************************/
#define  DJIANGE	jiange_4//jiange_1、jiange_2、jiange_4、jiange_8、jiange_16


/*************************************************************************/
/*************************************************************************/
/**************************************************************************
以下为触摸检水相关设置
**************************************************************************/
/*************************************************************************/
/*************************************************************************/
/*******************************************************
注：EEPROM的WAT_ADRL、WAT_ADRH、BASE_ADRL、BASE_ADRH地址存储初始触摸值，不能在其它地方对其进行写操作
	EEPROM的CHECKL_ADR、CHECKL_ADR为校验码，以便保证触摸值的正确性
	
测试时，将WAT_NUM：BASE_NUM = 1：255，观察wat_ram为当前检水触摸值，观察wat_base为当前基准触摸值
********************************************************/
extern volatile bit cmfstf;//此标志位清0，则重新读取EE存贮触摸基准判断值，若触摸基准判断值已经清零，则进入触摸检水测试
extern unsigned int	wat_ram;								//水位触摸检测值
extern unsigned int	wat_base;								//基准触摸检测值
extern unsigned int	watbase;								//基准触摸初始值
extern unsigned int	watram;									//水位触摸初始值
/*******************************************************
					函数声明				  
********************************************************/
unsigned char Water_test(void);//水位检测模块,建议放在主循环2.5ms-5ms调用，为了保证触摸的稳定性，上电时建议延时0.5S再去检测
/*
函数功能：水位检测模块
入口参数：
返回数据：1		有水
		  0		无水
		  0x55	EE没有存贮触摸基准值
		  0xaa	EE有存贮触摸基准值
		  0xfe	消抖处理中
		  0xff	出错
备注：	如果未写触摸基准值，则直接跳至写触摸值
*/

unsigned char	Wee_cm_clr(void);//测试模式时清触摸相关存贮值
/*
函数功能：测试模式清CM存贮数据
		清除失败则返回0
		成功则返回1
*/


/*******************************************************
					有无水存触摸值
0：有水存触摸值
1：无水存触摸值
********************************************************/
#define		W_NON			1//根据实际生产方便性调整

/*******************************************************
					触摸控制寄存器定义				  
********************************************************/
#define		Water_CH		12//水位触摸通道，例如KEY12，根据实际调整
/*******************************************************
					水位触摸键和基准的比例			  
********************************************************/
#define		WAT_NUM			1//需要实际测试确定补偿比例值
#define		BASE_NUM		1//需要实际测试确定补偿比例值
/*******************************************************
					存贮触摸值EEPROM地址
********************************************************/
#define		WAT_ADRL		0x05//一般默认
#define		WAT_ADRH		0x06//一般默认
#define		BASE_ADRL		0x07//一般默认
#define		BASE_ADRH		0x08//一般默认

#define		CHECKL_ADR		0x03//一般默认
#define		CHECKH_ADR		0x04//一般默认
/*******************************************************
					有无水差值
********************************************************/
#define		CM_D			40//需要根据实际方案调整，建议为触摸下降值的1/2+1

/*******************************************************
关PFG后检测触摸延时us
********************************************************/
#define		CMDELAY			100//一般默认



/*************************************************************************/
/*************************************************************************/
/*************************************************************************/
/*以下内容勿修改*/
/**************************************************************************/
/**************************************************************************/
/**************************************************************************/
//高触摸灵敏度使能
#define		H_SENS_EN	 1

const unsigned char wnon = W_NON;
const unsigned char CM_WSET = Water_CH | 0x20;
const unsigned char Wat_Num = WAT_NUM;
const unsigned char Base_Num = BASE_NUM;
const unsigned char Wat_Adrl = WAT_ADRL;
const unsigned char Wat_Adrh = WAT_ADRH;
const unsigned char Base_Adrl = BASE_ADRL;
const unsigned char Base_Adrh = BASE_ADRH;
const unsigned char Checkl_Adr = CHECKL_ADR;
const unsigned char Checkh_Adr = CHECKH_ADR;
const unsigned char Cm_D = CM_D;
const unsigned char CmDelay = CMDELAY;
const unsigned char H_Sens_EN = H_SENS_EN;
/*************************************************************************/
/*************************************************************************/
/**************************************************************************
以下内容勿修改
**************************************************************************/
/*************************************************************************/
/*************************************************************************/
#define	jiange_1 0B00000000
#define	jiange_2 0B00000001
#define	jiange_4 0B00000010
#define	jiange_8 0B00000011
#define	jiange_16 0B00000100

#define	bujin_1 0B00000000
#define	bujin_2 0B00001000
#define	bujin_4 0B00010000
#define	bujin_8 0B00011000

const unsigned char pfg_select = PFG_SELECT;
const unsigned char Cur_Adcon = CUR_CH<<2;
const unsigned char PwmFst=PWMFST;
const unsigned char PwmLst=PWMLST;
const unsigned char Pwmmaxc=PWMMAXC;
const unsigned char Pwmcyl=PWMCYL;
const unsigned char Kj_Fre = KJ_FRE;
const unsigned char ZPJGTime = ZPJGTIME;
const unsigned char D_En = DMODEON;
const unsigned char Drange = DRANGE;
const unsigned char Dbujin = DBUJIN;
const unsigned char Djiange = DJIANGE;
/*******************************************************
					位定义
********************************************************/
#define	Set(x,y)	((x) |= (1 << (y)))				//位置1
#define	Clr(x,y)	((x) &= ~ (1 << (y)))			//位清0

#define	b0(x,y)		(((x) & (1 << (y))) == 0)		//位0判断 if(b0(x,y)) 判断是否为0
#define	b1(x,y)		((x) & (1 << (y)))				//位1判断 if(b1(x,y)) 判断是否为1
/*******************************************************
					宏定义
********************************************************/
#define uchar	unsigned char
#define uint	unsigned int
#define ulong	unsigned long 
/*******************************************************/
#endif



