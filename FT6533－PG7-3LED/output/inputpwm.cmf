%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$inputpwm.obj
cinit CODE 0 B B A 2
text1 CODE 0 3C 3C 22 2
text2 CODE 0 15 15 27 2
text3 CODE 0 5E 5E 21 2
text4 CODE 0 9E 9E C 2
maintext CODE 0 7F 7F 1F 2
cstackCOMMON COMMON 1 48 48 4 1
cstackBANK0 BANK0 1 20 20 2 1
intentry CODE 0 4 4 6 2
bssCOMMON COMMON 1 40 40 8 1
$startup.obj
reset_vec CODE 0 0 0 1 2
end_init CODE 0 A A 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 22-3F 1
BANK0 22-3F 1
CONST 1-3 2
CONST AA-3FF 2
ENTRY 1-3 2
ENTRY AA-3FF 2
IDLOC 2000-2003 2
STACK 22-3F 1
CODE 1-3 2
CODE AA-3FF 2
SFR0 0-1F 1
COMMON 4C-4D 1
CONFIG 2007-2008 2
STRCODE 1-3 2
STRCODE AA-3FF 2
STRING 1-3 2
STRING AA-3FF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$inputpwm.obj
B cinit CODE >96:E:\project\scm\inputpwm\output\inputpwm.as
B cinit CODE >99:E:\project\scm\inputpwm\output\inputpwm.as
B cinit CODE >131:E:\project\scm\inputpwm\output\inputpwm.as
C cinit CODE >132:E:\project\scm\inputpwm\output\inputpwm.as
D cinit CODE >133:E:\project\scm\inputpwm\output\inputpwm.as
E cinit CODE >134:E:\project\scm\inputpwm\output\inputpwm.as
F cinit CODE >135:E:\project\scm\inputpwm\output\inputpwm.as
10 cinit CODE >136:E:\project\scm\inputpwm\output\inputpwm.as
11 cinit CODE >137:E:\project\scm\inputpwm\output\inputpwm.as
12 cinit CODE >138:E:\project\scm\inputpwm\output\inputpwm.as
13 cinit CODE >144:E:\project\scm\inputpwm\output\inputpwm.as
13 cinit CODE >146:E:\project\scm\inputpwm\output\inputpwm.as
14 cinit CODE >147:E:\project\scm\inputpwm\output\inputpwm.as
4 intentry CODE >159:E:\project\scm\inputpwm\inputpwm.c
9E text4 CODE >159:E:\project\scm\inputpwm\inputpwm.c
9E text4 CODE >161:E:\project\scm\inputpwm\inputpwm.c
A0 text4 CODE >167:E:\project\scm\inputpwm\inputpwm.c
A1 text4 CODE >168:E:\project\scm\inputpwm\inputpwm.c
A3 text4 CODE >170:E:\project\scm\inputpwm\inputpwm.c
5E text3 CODE >99:E:\project\scm\inputpwm\inputpwm.c
5E text3 CODE >101:E:\project\scm\inputpwm\inputpwm.c
5F text3 CODE >102:E:\project\scm\inputpwm\inputpwm.c
60 text3 CODE >103:E:\project\scm\inputpwm\inputpwm.c
61 text3 CODE >104:E:\project\scm\inputpwm\inputpwm.c
63 text3 CODE >105:E:\project\scm\inputpwm\inputpwm.c
65 text3 CODE >106:E:\project\scm\inputpwm\inputpwm.c
67 text3 CODE >107:E:\project\scm\inputpwm\inputpwm.c
68 text3 CODE >108:E:\project\scm\inputpwm\inputpwm.c
6A text3 CODE >109:E:\project\scm\inputpwm\inputpwm.c
6C text3 CODE >112:E:\project\scm\inputpwm\inputpwm.c
6E text3 CODE >113:E:\project\scm\inputpwm\inputpwm.c
6F text3 CODE >114:E:\project\scm\inputpwm\inputpwm.c
71 text3 CODE >117:E:\project\scm\inputpwm\inputpwm.c
72 text3 CODE >118:E:\project\scm\inputpwm\inputpwm.c
73 text3 CODE >119:E:\project\scm\inputpwm\inputpwm.c
74 text3 CODE >120:E:\project\scm\inputpwm\inputpwm.c
75 text3 CODE >121:E:\project\scm\inputpwm\inputpwm.c
77 text3 CODE >124:E:\project\scm\inputpwm\inputpwm.c
78 text3 CODE >131:E:\project\scm\inputpwm\inputpwm.c
79 text3 CODE >132:E:\project\scm\inputpwm\inputpwm.c
7A text3 CODE >139:E:\project\scm\inputpwm\inputpwm.c
7B text3 CODE >140:E:\project\scm\inputpwm\inputpwm.c
7C text3 CODE >148:E:\project\scm\inputpwm\inputpwm.c
7D text3 CODE >149:E:\project\scm\inputpwm\inputpwm.c
7E text3 CODE >150:E:\project\scm\inputpwm\inputpwm.c
15 text2 CODE >75:E:\project\scm\inputpwm\inputpwm.c
16 text2 CODE >77:E:\project\scm\inputpwm\inputpwm.c
21 text2 CODE >79:E:\project\scm\inputpwm\inputpwm.c
2A text2 CODE >80:E:\project\scm\inputpwm\inputpwm.c
2B text2 CODE >83:E:\project\scm\inputpwm\inputpwm.c
30 text2 CODE >85:E:\project\scm\inputpwm\inputpwm.c
38 text2 CODE >87:E:\project\scm\inputpwm\inputpwm.c
3B text2 CODE >89:E:\project\scm\inputpwm\inputpwm.c
3C text1 CODE >39:E:\project\scm\inputpwm\inputpwm.c
3D text1 CODE >49:E:\project\scm\inputpwm\inputpwm.c
41 text1 CODE >60:E:\project\scm\inputpwm\inputpwm.c
45 text1 CODE >71:E:\project\scm\inputpwm\inputpwm.c
48 text1 CODE >72:E:\project\scm\inputpwm\inputpwm.c
49 text1 CODE >73:E:\project\scm\inputpwm\inputpwm.c
7F maintext CODE >14:E:\project\scm\inputpwm\inputpwm.c
7F maintext CODE >17:E:\project\scm\inputpwm\inputpwm.c
80 maintext CODE >21:E:\project\scm\inputpwm\inputpwm.c
83 maintext CODE >24:E:\project\scm\inputpwm\inputpwm.c
84 maintext CODE >23:E:\project\scm\inputpwm\inputpwm.c
85 maintext CODE >24:E:\project\scm\inputpwm\inputpwm.c
8A maintext CODE >25:E:\project\scm\inputpwm\inputpwm.c
90 maintext CODE >26:E:\project\scm\inputpwm\inputpwm.c
96 maintext CODE >28:E:\project\scm\inputpwm\inputpwm.c
97 maintext CODE >27:E:\project\scm\inputpwm\inputpwm.c
98 maintext CODE >28:E:\project\scm\inputpwm\inputpwm.c
9B maintext CODE >30:E:\project\scm\inputpwm\inputpwm.c
9C maintext CODE >31:E:\project\scm\inputpwm\inputpwm.c
$startup.obj
A end_init CODE >79:E:\project\scm\inputpwm\output\startup.as
A init CODE >76:E:\project\scm\inputpwm\output\startup.as
0 functab ENTRY >42:E:\project\scm\inputpwm\output\startup.as
0 functab ENTRY >43:E:\project\scm\inputpwm\output\startup.as
0 functab ENTRY >44:E:\project\scm\inputpwm\output\startup.as
0 functab ENTRY >45:E:\project\scm\inputpwm\output\startup.as
0 functab ENTRY >46:E:\project\scm\inputpwm\output\startup.as
0 functab ENTRY >47:E:\project\scm\inputpwm\output\startup.as
0 reset_vec CODE >66:E:\project\scm\inputpwm\output\startup.as
0 reset_vec CODE >71:E:\project\scm\inputpwm\output\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 0 0 ABS 0 - inputpwm.obj
__Hspace_0 AA 0 ABS 0 - -
__Hspace_1 4C 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
_PWMPRD8 96 0 ABS 0 - inputpwm.obj
_PWMPRD9 97 0 ABS 0 - inputpwm.obj
_PWM_PRD 14 0 ABS 0 - inputpwm.obj
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
PL2 94 0 CODE 0 text1 inputpwm.obj
PL4 A2 0 CODE 0 text1 inputpwm.obj
PL6 B0 0 CODE 0 text1 inputpwm.obj
__Hstrings 0 0 ABS 0 strings -
_IOCB E 0 ABS 0 - inputpwm.obj
_PWMR 13 0 ABS 0 - inputpwm.obj
_T0IF 4A 0 ABS 0 - inputpwm.obj
_TMR0 1 0 ABS 0 - inputpwm.obj
_WPUB D 0 ABS 0 - inputpwm.obj
___sp 0 0 STACK 2 stack startup.obj
_main FE 0 CODE 0 maintext inputpwm.obj
_pb3h 43 0 COMMON 1 bssCOMMON inputpwm.obj
_pb4h 45 0 COMMON 1 bssCOMMON inputpwm.obj
_pb5h 47 0 COMMON 1 bssCOMMON inputpwm.obj
btemp 4E 0 ABS 0 - inputpwm.obj
start 14 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - inputpwm.obj
__HbssCOMMON 0 0 ABS 0 bssCOMMON -
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
__size_of_Init_System 0 0 ABS 0 - inputpwm.obj
__LbssCOMMON 0 0 ABS 0 bssCOMMON -
_TMR0PRD F 0 ABS 0 - inputpwm.obj
wtemp0 4E 0 ABS 0 - inputpwm.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__Hpa_nodes0 0 0 ABS 0 pa_nodes0 -
__Lmaintext 0 0 ABS 0 maintext -
checkPB@pbCountmax 4A 0 COMMON 1 cstackCOMMON inputpwm.obj
checkPB@bitNub 4B 0 COMMON 1 cstackCOMMON inputpwm.obj
_INTCON 9 0 ABS 0 - inputpwm.obj
_OPTION_REG 7 0 ABS 0 - inputpwm.obj
__Lpa_nodes0 0 0 ABS 0 pa_nodes0 -
start_initialization 16 0 CODE 0 cinit inputpwm.obj
_OSCCON 8 0 ABS 0 - inputpwm.obj
_PWMCK0 94 0 ABS 0 - inputpwm.obj
_PWMCK1 95 0 ABS 0 - inputpwm.obj
_PWMEN0 80 0 ABS 0 - inputpwm.obj
_PWMEN1 81 0 ABS 0 - inputpwm.obj
_PWMEN2 82 0 ABS 0 - inputpwm.obj
_PWMR08 88 0 ABS 0 - inputpwm.obj
_PWMR09 89 0 ABS 0 - inputpwm.obj
__end_ofPL2 A2 0 CODE 0 text1 inputpwm.obj
__end_ofPL4 B0 0 CODE 0 text1 inputpwm.obj
__end_ofPL6 BC 0 CODE 0 text1 inputpwm.obj
__size_of_checkPB 0 0 ABS 0 - inputpwm.obj
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 inputpwm.obj
___int_sp 0 0 STACK 2 stack startup.obj
__end_of_setPWM 94 0 CODE 0 text1 inputpwm.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hcinit 2A 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 0 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lcinit 16 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
_Init_System BC 0 CODE 0 text3 inputpwm.obj
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 14 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 14 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__S0 AA 0 ABS 0 - -
__S1 4C 0 ABS 0 - -
__S2 0 0 ABS 0 - -
_nub 41 0 COMMON 1 bssCOMMON inputpwm.obj
saved_w 4E 0 ABS 0 - inputpwm.obj
_Timer0_Isr 13C 0 CODE 0 text4 inputpwm.obj
__end_of_checkPB 78 0 CODE 0 text2 inputpwm.obj
__Lintentry 8 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
__pmaintext FE 0 CODE 0 maintext inputpwm.obj
_pb3max 42 0 COMMON 1 bssCOMMON inputpwm.obj
_pb4max 44 0 COMMON 1 bssCOMMON inputpwm.obj
_pb5max 46 0 COMMON 1 bssCOMMON inputpwm.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 0 config -
_setPWM 78 0 CODE 0 text1 inputpwm.obj
__end_of_Timer0_Isr 154 0 CODE 0 text4 inputpwm.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__pbssCOMMON 40 0 COMMON 1 bssCOMMON inputpwm.obj
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
__Lend_init 14 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization 26 0 CODE 0 cinit inputpwm.obj
__Hintentry 14 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
checkPB@pbCount 21 0 BANK0 1 cstackBANK0 inputpwm.obj
__Hreset_vec 2 0 CODE 0 reset_vec -
__size_of_setPWM 0 0 ABS 0 - inputpwm.obj
__ptext0 0 0 CODE 0 text0 inputpwm.obj
__ptext1 78 0 CODE 0 text1 inputpwm.obj
__ptext2 2A 0 CODE 0 text2 inputpwm.obj
__ptext3 BC 0 CODE 0 text3 inputpwm.obj
__ptext4 13C 0 CODE 0 text4 inputpwm.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of__initialization 26 0 CODE 0 cinit inputpwm.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__end_of_Init_System FE 0 CODE 0 text3 inputpwm.obj
__pcstackCOMMON 48 0 COMMON 1 cstackCOMMON inputpwm.obj
_timeoutFlag 40 0 COMMON 1 bssCOMMON inputpwm.obj
__Hend_init 16 0 CODE 0 end_init -
_checkPB 2A 0 CODE 0 text2 inputpwm.obj
__end_of_main 13C 0 CODE 0 maintext inputpwm.obj
_PORTB 5 0 ABS 0 - inputpwm.obj
_PWMS0 90 0 ABS 0 - inputpwm.obj
_PWMS1 91 0 ABS 0 - inputpwm.obj
_PWMS2 92 0 ABS 0 - inputpwm.obj
_TRISB 6 0 ABS 0 - inputpwm.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
interrupt_function 8 0 CODE 0 intentry inputpwm.obj
__pintentry 8 0 CODE 0 intentry inputpwm.obj
__initialization 16 0 CODE 0 cinit inputpwm.obj
__size_of_Timer0_Isr 0 0 ABS 0 - inputpwm.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 4E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cstackBANK0 1 20 20 2 1
intentry 0 4 8 A6 2
reset_vec 0 0 0 1 2
bssCOMMON 1 40 40 C 1
