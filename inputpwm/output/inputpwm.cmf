%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$inputpwm.obj
cinit CODE 0 B B A 2
text1 CODE 0 15 15 22 2
text2 CODE 0 8B 8B 13 2
text3 CODE 0 9E 9E 13 2
text4 CODE 0 B1 B1 13 2
text5 CODE 0 58 58 1C 2
text6 CODE 0 37 37 21 2
text7 CODE 0 C4 C4 D 2
maintext CODE 0 74 74 17 2
cstackCOMMON COMMON 1 47 47 4 1
cstackBANK0 BANK0 1 20 20 3 1
intentry CODE 0 4 4 6 2
bssBANK0 BANK0 1 23 23 1 1
bssCOMMON COMMON 1 40 40 7 1
$startup.obj
reset_vec CODE 0 0 0 1 2
end_init CODE 0 A A 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 24-3F 1
BANK0 24-3F 1
CONST 1-3 2
CONST D1-3FF 2
ENTRY 1-3 2
ENTRY D1-3FF 2
IDLOC 2000-2003 2
STACK 24-3F 1
CODE 1-3 2
CODE D1-3FF 2
SFR0 0-1F 1
COMMON 4B-4D 1
CONFIG 2007-2008 2
STRCODE 1-3 2
STRCODE D1-3FF 2
STRING 1-3 2
STRING D1-3FF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$inputpwm.obj
B cinit CODE >99:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
B cinit CODE >102:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
B cinit CODE >137:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
C cinit CODE >138:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
D cinit CODE >139:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
E cinit CODE >140:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
F cinit CODE >141:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
10 cinit CODE >142:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
11 cinit CODE >143:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
12 cinit CODE >146:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
13 cinit CODE >152:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
13 cinit CODE >154:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
14 cinit CODE >155:C:\SCMCU WorkSpace\inputpwm\output\inputpwm.as
4 intentry CODE >195:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
C4 text7 CODE >195:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
C4 text7 CODE >197:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
C6 text7 CODE >200:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
C8 text7 CODE >203:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
C9 text7 CODE >204:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
CA text7 CODE >206:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
37 text6 CODE >135:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
37 text6 CODE >137:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
38 text6 CODE >138:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
39 text6 CODE >139:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
3A text6 CODE >140:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
3C text6 CODE >141:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
3E text6 CODE >142:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
40 text6 CODE >143:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
41 text6 CODE >144:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
43 text6 CODE >145:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
45 text6 CODE >148:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
47 text6 CODE >149:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
48 text6 CODE >150:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
4A text6 CODE >153:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
4B text6 CODE >154:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
4C text6 CODE >155:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
4D text6 CODE >156:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
4E text6 CODE >157:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
50 text6 CODE >160:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
51 text6 CODE >167:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
52 text6 CODE >168:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
53 text6 CODE >175:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
54 text6 CODE >176:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
55 text6 CODE >184:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
56 text6 CODE >185:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
57 text6 CODE >186:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
58 text5 CODE >4:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
59 text5 CODE >9:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
5B text5 CODE >10:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
5C text5 CODE >12:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
68 text5 CODE >13:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
6A text5 CODE >14:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
6E text5 CODE >15:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
70 text5 CODE >16:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
72 text5 CODE >17:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
73 text5 CODE >18:C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lbmod.c
B1 text4 CODE >112:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
B1 text4 CODE >114:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
BB text4 CODE >116:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
BC text4 CODE >117:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
BD text4 CODE >120:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
C0 text4 CODE >122:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
C2 text4 CODE >124:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
C3 text4 CODE >126:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
9E text3 CODE >96:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
9E text3 CODE >98:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
A8 text3 CODE >100:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
A9 text3 CODE >101:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
AA text3 CODE >104:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
AD text3 CODE >106:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
AF text3 CODE >108:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
B0 text3 CODE >110:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
8B text2 CODE >80:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
8B text2 CODE >82:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
95 text2 CODE >84:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
96 text2 CODE >85:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
97 text2 CODE >88:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
9A text2 CODE >90:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
9C text2 CODE >92:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
9D text2 CODE >94:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
15 text1 CODE >43:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
16 text1 CODE >53:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
1A text1 CODE >64:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
1E text1 CODE >75:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
21 text1 CODE >76:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
22 text1 CODE >78:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
74 maintext CODE >17:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
74 maintext CODE >20:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
75 maintext CODE >24:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
79 maintext CODE >26:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
7B maintext CODE >27:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
7C maintext CODE >28:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
7D maintext CODE >29:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
7E maintext CODE >31:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
81 maintext CODE >33:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
82 maintext CODE >36:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
89 maintext CODE >38:C:\SCMCU WorkSpace\inputpwm\inputpwm.c
$startup.obj
A end_init CODE >79:C:\SCMCU WorkSpace\inputpwm\output\startup.as
A init CODE >76:C:\SCMCU WorkSpace\inputpwm\output\startup.as
0 functab ENTRY >42:C:\SCMCU WorkSpace\inputpwm\output\startup.as
0 functab ENTRY >43:C:\SCMCU WorkSpace\inputpwm\output\startup.as
0 functab ENTRY >44:C:\SCMCU WorkSpace\inputpwm\output\startup.as
0 functab ENTRY >45:C:\SCMCU WorkSpace\inputpwm\output\startup.as
0 functab ENTRY >46:C:\SCMCU WorkSpace\inputpwm\output\startup.as
0 functab ENTRY >47:C:\SCMCU WorkSpace\inputpwm\output\startup.as
0 reset_vec CODE >66:C:\SCMCU WorkSpace\inputpwm\output\startup.as
0 reset_vec CODE >71:C:\SCMCU WorkSpace\inputpwm\output\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 0 0 ABS 0 - inputpwm.obj
__Hspace_0 D1 0 ABS 0 - -
__Hspace_1 4B 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
_PWMPRD8 96 0 ABS 0 - inputpwm.obj
_PWMPRD9 97 0 ABS 0 - inputpwm.obj
_PWM_PRD 14 0 ABS 0 - inputpwm.obj
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
PL2 46 0 CODE 0 text1 inputpwm.obj
PL4 54 0 CODE 0 text1 inputpwm.obj
PL6 62 0 CODE 0 text1 inputpwm.obj
__Hstrings 0 0 ABS 0 strings -
_IOCB E 0 ABS 0 - inputpwm.obj
_PWMR 13 0 ABS 0 - inputpwm.obj
_T0IF 4A 0 ABS 0 - inputpwm.obj
_TMR0 1 0 ABS 0 - inputpwm.obj
_WPUB D 0 ABS 0 - inputpwm.obj
___sp 0 0 STACK 2 stack startup.obj
_main E8 0 CODE 0 maintext inputpwm.obj
_pb3h 40 0 COMMON 1 bssCOMMON inputpwm.obj
_pb4h 42 0 COMMON 1 bssCOMMON inputpwm.obj
_pb5h 44 0 COMMON 1 bssCOMMON inputpwm.obj
btemp 4E 0 ABS 0 - inputpwm.obj
start 14 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - inputpwm.obj
__size_of___lbmod 0 0 ABS 0 - inputpwm.obj
__HbssCOMMON 0 0 ABS 0 bssCOMMON -
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
__size_of_Init_System 0 0 ABS 0 - inputpwm.obj
__LbssCOMMON 0 0 ABS 0 bssCOMMON -
_TMR0PRD F 0 ABS 0 - inputpwm.obj
wtemp0 4E 0 ABS 0 - inputpwm.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__Hpa_nodes0 0 0 ABS 0 pa_nodes0 -
___lbmod@divisor 49 0 COMMON 1 cstackCOMMON inputpwm.obj
__Lmaintext 0 0 ABS 0 maintext -
__end_of___lbmod E8 0 CODE 0 text5 inputpwm.obj
_INTCON 9 0 ABS 0 - inputpwm.obj
_OPTION_REG 7 0 ABS 0 - inputpwm.obj
__Lpa_nodes0 0 0 ABS 0 pa_nodes0 -
start_initialization 16 0 CODE 0 cinit inputpwm.obj
_OSCCON 8 0 ABS 0 - inputpwm.obj
_PWMCK0 94 0 ABS 0 - inputpwm.obj
_PWMCK1 95 0 ABS 0 - inputpwm.obj
_PWMEN0 80 0 ABS 0 - inputpwm.obj
_PWMEN1 81 0 ABS 0 - inputpwm.obj
_PWMEN2 82 0 ABS 0 - inputpwm.obj
_PWMR08 88 0 ABS 0 - inputpwm.obj
_PWMR09 89 0 ABS 0 - inputpwm.obj
__end_ofPL2 54 0 CODE 0 text1 inputpwm.obj
__end_ofPL4 62 0 CODE 0 text1 inputpwm.obj
__end_ofPL6 6E 0 CODE 0 text1 inputpwm.obj
__pcstackBANK0 20 0 BANK0 1 cstackBANK0 inputpwm.obj
___int_sp 0 0 STACK 2 stack startup.obj
__end_of_setPWM 46 0 CODE 0 text1 inputpwm.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hcinit 2A 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 0 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lcinit 16 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
_Init_System 6E 0 CODE 0 text6 inputpwm.obj
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 14 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 14 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Ltext 0 0 ABS 0 text -
__LcstackBANK0 0 0 ABS 0 cstackBANK0 -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__S0 D1 0 ABS 0 - -
__S1 4B 0 ABS 0 - -
__S2 0 0 ABS 0 - -
_nub 46 0 COMMON 1 bssCOMMON inputpwm.obj
saved_w 4E 0 ABS 0 - inputpwm.obj
_Timer0_Isr 188 0 CODE 0 text7 inputpwm.obj
__Lintentry 8 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
__LbssBANK0 0 0 ABS 0 bssBANK0 -
___lbmod B0 0 CODE 0 text5 inputpwm.obj
__pmaintext E8 0 CODE 0 maintext inputpwm.obj
_pb3max 23 0 BANK0 1 bssBANK0 inputpwm.obj
_pb4max 41 0 COMMON 1 bssCOMMON inputpwm.obj
_pb5max 43 0 COMMON 1 bssCOMMON inputpwm.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 0 config -
_prenub 45 0 COMMON 1 bssCOMMON inputpwm.obj
__size_of_checkPB3 0 0 ABS 0 - inputpwm.obj
__size_of_checkPB4 0 0 ABS 0 - inputpwm.obj
__size_of_checkPB5 0 0 ABS 0 - inputpwm.obj
_setPWM 2A 0 CODE 0 text1 inputpwm.obj
__end_of_Timer0_Isr 1A2 0 CODE 0 text7 inputpwm.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__pbssCOMMON 40 0 COMMON 1 bssCOMMON inputpwm.obj
__HcstackBANK0 0 0 ABS 0 cstackBANK0 -
__Lend_init 14 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization 26 0 CODE 0 cinit inputpwm.obj
__Hintentry 14 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 2 0 CODE 0 reset_vec -
_checkPB3 162 0 CODE 0 text4 inputpwm.obj
_checkPB4 13C 0 CODE 0 text3 inputpwm.obj
_checkPB5 116 0 CODE 0 text2 inputpwm.obj
__HbssBANK0 0 0 ABS 0 bssBANK0 -
__size_of_setPWM 0 0 ABS 0 - inputpwm.obj
__ptext0 0 0 CODE 0 text0 inputpwm.obj
__ptext1 2A 0 CODE 0 text1 inputpwm.obj
__ptext2 116 0 CODE 0 text2 inputpwm.obj
__ptext3 13C 0 CODE 0 text3 inputpwm.obj
__ptext4 162 0 CODE 0 text4 inputpwm.obj
__ptext5 B0 0 CODE 0 text5 inputpwm.obj
__ptext6 6E 0 CODE 0 text6 inputpwm.obj
__ptext7 188 0 CODE 0 text7 inputpwm.obj
__end_of_checkPB3 188 0 CODE 0 text4 inputpwm.obj
__end_of_checkPB4 162 0 CODE 0 text3 inputpwm.obj
__end_of_checkPB5 13C 0 CODE 0 text2 inputpwm.obj
___lbmod@dividend 20 0 BANK0 1 cstackBANK0 inputpwm.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of__initialization 26 0 CODE 0 cinit inputpwm.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__end_of_Init_System B0 0 CODE 0 text6 inputpwm.obj
__pcstackCOMMON 47 0 COMMON 1 cstackCOMMON inputpwm.obj
__Hend_init 16 0 CODE 0 end_init -
___lbmod@rem 22 0 BANK0 1 cstackBANK0 inputpwm.obj
__end_of_main 116 0 CODE 0 maintext inputpwm.obj
_PORTB 5 0 ABS 0 - inputpwm.obj
_PWMS0 90 0 ABS 0 - inputpwm.obj
_PWMS1 91 0 ABS 0 - inputpwm.obj
_PWMS2 92 0 ABS 0 - inputpwm.obj
_TRISB 6 0 ABS 0 - inputpwm.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
interrupt_function 8 0 CODE 0 intentry inputpwm.obj
__pintentry 8 0 CODE 0 intentry inputpwm.obj
__initialization 16 0 CODE 0 cinit inputpwm.obj
__pbssBANK0 23 0 BANK0 1 bssBANK0 inputpwm.obj
__size_of_Timer0_Isr 0 0 ABS 0 - inputpwm.obj
___lbmod@counter 21 0 BANK0 1 cstackBANK0 inputpwm.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 4E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cstackBANK0 1 20 20 4 1
intentry 0 4 8 CD 2
reset_vec 0 0 0 1 2
bssCOMMON 1 40 40 B 1
