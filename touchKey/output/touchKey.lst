

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 23 21:15:42 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F2852
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	pa_nodes0,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 1.45
    20                           ; Generated 16/11/2017 GMT
    21                           ; 
    22                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     
    54                           	psect	text0
    55  0000                     __ptext0:	
    56  001D                     _PWMCON2	set	29
    57  001C                     _PWMD01H	set	28
    58  0018                     _PWMD1L	set	24
    59  0017                     _PWMD0L	set	23
    60  0016                     _PWMTH	set	22
    61  0015                     _PWMTL	set	21
    62  0014                     _PWMCON1	set	20
    63  0013                     _PWMCON0	set	19
    64  000B                     _INTCON	set	11
    65  0008                     _WPUB	set	8
    66  0006                     _PORTB	set	6
    67  0005                     _PORTA	set	5
    68  0001                     _TMR0	set	1
    69  005A                     _T0IF	set	90
    70  0095                     _KEYDATAH	set	149
    71  0094                     _KEYDATAL	set	148
    72  0093                     _KEYCON1	set	147
    73  0092                     _KEYCON0	set	146
    74  0088                     _OSCCON	set	136
    75  0086                     _TRISB	set	134
    76  0081                     _OPTION_REG	set	129
    77                           
    78                           	psect	cinit
    79  000B                     start_initialization:	
    80                           ; #config settings
    81                           
    82  000B                     __initialization:	
    83                           
    84                           ; Clear objects allocated to COMMON
    85  000B  01F0               	clrf	__pbssCOMMON& (0+127)
    86  000C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    87  000D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    88  000E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    89  000F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    90  0010                     end_of_initialization:	
    91                           ;End of C runtime variable initialization code
    92                           
    93  0010                     __end_of__initialization:	
    94  0010  0183               	clrf	3
    95  0011  28C3               	ljmp	_main	;jump to C main() function
    96                           
    97                           	psect	bssCOMMON
    98  0070                     __pbssCOMMON:	
    99  0070                     _tempKey1L:	
   100  0070                     	ds	1
   101  0071                     _tempKey1H:	
   102  0071                     	ds	1
   103  0072                     _tempKey0L:	
   104  0072                     	ds	1
   105  0073                     _tempKey0H:	
   106  0073                     	ds	1
   107  0074                     _IntFlag:	
   108  0074                     	ds	1
   109                           
   110                           	psect	cstackCOMMON
   111  0075                     __pcstackCOMMON:	
   112  0075                     ?_initSys:	
   113  0075                     ?_checkKey0TouchKey:	
   114                           ; 1 bytes @ 0x0
   115                           
   116  0075                     ?_checkKey1TouchKey:	
   117                           ; 1 bytes @ 0x0
   118                           
   119  0075                     ?_initTimer0:	
   120                           ; 1 bytes @ 0x0
   121                           
   122  0075                     ?_initPWM:	
   123                           ; 1 bytes @ 0x0
   124                           
   125  0075                     ?_main:	
   126                           ; 1 bytes @ 0x0
   127                           
   128  0075                     ?_Timer0_Isr:	
   129                           ; 1 bytes @ 0x0
   130                           
   131  0075                     ??_Timer0_Isr:	
   132                           ; 1 bytes @ 0x0
   133                           
   134                           
   135                           ; 1 bytes @ 0x0
   136  0075                     	ds	2
   137  0077                     ??_initSys:	
   138  0077                     ??_checkKey0TouchKey:	
   139                           ; 1 bytes @ 0x2
   140                           
   141  0077                     ??_checkKey1TouchKey:	
   142                           ; 1 bytes @ 0x2
   143                           
   144  0077                     ??_initTimer0:	
   145                           ; 1 bytes @ 0x2
   146                           
   147  0077                     ??_initPWM:	
   148                           ; 1 bytes @ 0x2
   149                           
   150                           
   151                           ; 1 bytes @ 0x2
   152  0077                     	ds	3
   153  007A                     ??_main:	
   154                           
   155                           	psect	maintext
   156  00C3                     __pmaintext:	
   157                           ; 1 bytes @ 0x5
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 22 in file "C:\SCMCU WorkSpace\touchKey\main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, pclath, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : B00/0
   174 ;;		On exit  : 300/100
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   177 ;;      Params:         0       0       0       0
   178 ;;      Locals:         0       0       0       0
   179 ;;      Temps:          0       0       0       0
   180 ;;      Totals:         0       0       0       0
   181 ;;Total ram usage:        0 bytes
   182 ;; Hardware stack levels required when called:    3
   183 ;; This function calls:
   184 ;;		_checkKey0TouchKey
   185 ;;		_checkKey1TouchKey
   186 ;;		_initSys
   187 ;; This function is called by:
   188 ;;		Startup code after reset
   189 ;; This function uses a non-reentrant model
   190 ;;
   191                           
   192                           
   193                           ;psect for function _main
   194  00C3                     _main:	
   195                           
   196                           ;main.c: 24: initSys();
   197                           
   198                           ;incstack = 0
   199                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   200  00C3  20CC               	fcall	_initSys
   201  00C4                     l431:	
   202                           ;main.c: 25: while(1)
   203                           
   204  00C4  0064               	clrwdt	;# 
   205                           
   206                           ;main.c: 28: if(!IntFlag)
   207  00C5  0874               	movf	_IntFlag,w
   208  00C6  1903               	btfsc	3,2
   209  00C7  28C4               	goto	l431
   210                           
   211                           ;main.c: 30: IntFlag = 0;
   212  00C8  01F4               	clrf	_IntFlag
   213                           
   214                           ;main.c: 31: checkKey0TouchKey();
   215  00C9  2051               	fcall	_checkKey0TouchKey
   216                           
   217                           ;main.c: 32: checkKey1TouchKey();
   218  00CA  2012               	fcall	_checkKey1TouchKey
   219  00CB  28C4               	goto	l431
   220  00CC                     __end_of_main:	
   221                           
   222                           	psect	text1
   223  00CC                     __ptext1:	
   224 ;; *************** function _initSys *****************
   225 ;; Defined at:
   226 ;;		line 36 in file "C:\SCMCU WorkSpace\touchKey\main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0, pclath, cstack
   235 ;; Tracked objects:
   236 ;;		On entry : B00/0
   237 ;;		On exit  : 300/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   240 ;;      Params:         0       0       0       0
   241 ;;      Locals:         0       0       0       0
   242 ;;      Temps:          0       0       0       0
   243 ;;      Totals:         0       0       0       0
   244 ;;Total ram usage:        0 bytes
   245 ;; Hardware stack levels used:    1
   246 ;; Hardware stack levels required when called:    2
   247 ;; This function calls:
   248 ;;		_initPWM
   249 ;;		_initTimer0
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           
   256                           ;psect for function _initSys
   257  00CC                     _initSys:	
   258                           
   259                           ;main.c: 38: initTimer0();
   260                           
   261                           ;incstack = 0
   262                           ; Regs used in _initSys: [wreg+status,2+status,0+pclath+cstack]
   263  00CC  2090               	fcall	_initTimer0
   264                           
   265                           ;main.c: 39: initPWM();
   266  00CD  28B7               	ljmp	l903
   267  00CE                     __end_of_initSys:	
   268                           
   269                           	psect	text2
   270  0090                     __ptext2:	
   271 ;; *************** function _initTimer0 *****************
   272 ;; Defined at:
   273 ;;		line 233 in file "C:\SCMCU WorkSpace\touchKey\main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 300/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   287 ;;      Params:         0       0       0       0
   288 ;;      Locals:         0       0       0       0
   289 ;;      Temps:          0       0       0       0
   290 ;;      Totals:         0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_initSys
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _initTimer0
   303  0090                     _initTimer0:	
   304                           
   305                           ;incstack = 0
   306                           ; Regs used in _initTimer0: [wreg+status,2]
   307  0090  0000               	nop	;# 
   308  0091  0064               	clrwdt	;# 
   309                           
   310                           ;main.c: 237: INTCON = 0;
   311  0092  018B               	clrf	11	;volatile
   312                           
   313                           ;main.c: 238: TRISB = 0x04;
   314  0093  3004               	movlw	4
   315  0094  1683               	bsf	3,5	;RP0=1, select bank1
   316  0095  1303               	bcf	3,6	;RP1=0, select bank1
   317  0096  0086               	movwf	6	;volatile
   318                           
   319                           ;main.c: 239: WPUB = 0xFF;
   320  0097  30FF               	movlw	255
   321  0098  1283               	bcf	3,5	;RP0=0, select bank0
   322  0099  0088               	movwf	8	;volatile
   323                           
   324                           ;main.c: 240: PORTA = 0xFF;
   325  009A  0085               	movwf	5	;volatile
   326                           
   327                           ;main.c: 241: PORTB = 0xFF;
   328  009B  0086               	movwf	6	;volatile
   329                           
   330                           ;main.c: 242: OSCCON = 0X52;
   331  009C  3052               	movlw	82
   332  009D  1683               	bsf	3,5	;RP0=1, select bank1
   333  009E  0088               	movwf	8	;volatile
   334                           
   335                           ;main.c: 243: OPTION_REG = 0x07;
   336  009F  3007               	movlw	7
   337  00A0  0081               	movwf	1	;volatile
   338                           
   339                           ;main.c: 244: TMR0 = 99;
   340  00A1  3063               	movlw	99
   341  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   342  00A3  0081               	movwf	1	;volatile
   343                           
   344                           ;main.c: 249: INTCON = 0xA0;
   345  00A4  30A0               	movlw	160
   346  00A5  008B               	movwf	11	;volatile
   347  00A6  0008               	return
   348  00A7                     __end_of_initTimer0:	
   349                           
   350                           	psect	text3
   351  00B7                     __ptext3:	
   352 ;; *************** function _initPWM *****************
   353 ;; Defined at:
   354 ;;		line 43 in file "C:\SCMCU WorkSpace\touchKey\main.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		wreg, status,2
   363 ;; Tracked objects:
   364 ;;		On entry : 300/0
   365 ;;		On exit  : 300/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   368 ;;      Params:         0       0       0       0
   369 ;;      Locals:         0       0       0       0
   370 ;;      Temps:          0       0       0       0
   371 ;;      Totals:         0       0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels used:    1
   374 ;; Hardware stack levels required when called:    1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_initSys
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           
   383                           ;psect for function _initPWM
   384  00B7                     _initPWM:	
   385  00B7                     l903:	
   386                           ;incstack = 0
   387                           ; Regs used in _initPWM: [wreg+status,2]
   388                           
   389                           
   390                           ;main.c: 45: PWMCON1 = 0x40;
   391  00B7  3040               	movlw	64
   392  00B8  0094               	movwf	20	;volatile
   393                           
   394                           ;main.c: 46: PWMCON0 = 0x40;
   395  00B9  0093               	movwf	19	;volatile
   396                           
   397                           ;main.c: 47: PWMCON2 = 0;
   398  00BA  019D               	clrf	29	;volatile
   399                           
   400                           ;main.c: 48: PWMTH = 0;
   401  00BB  0196               	clrf	22	;volatile
   402                           
   403                           ;main.c: 49: PWMTL = 31;
   404  00BC  301F               	movlw	31
   405  00BD  0095               	movwf	21	;volatile
   406                           
   407                           ;main.c: 50: PWMD0L = 1;
   408  00BE  3001               	movlw	1
   409  00BF  0097               	movwf	23	;volatile
   410                           
   411                           ;main.c: 51: PWMD1L = 1;
   412  00C0  0098               	movwf	24	;volatile
   413                           
   414                           ;main.c: 52: PWMD01H = 0;
   415  00C1  019C               	clrf	28	;volatile
   416  00C2  0008               	return
   417  00C3                     __end_of_initPWM:	
   418                           
   419                           	psect	text4
   420  0012                     __ptext4:	
   421 ;; *************** function _checkKey1TouchKey *****************
   422 ;; Defined at:
   423 ;;		line 186 in file "C:\SCMCU WorkSpace\touchKey\main.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, status,2, status,0
   432 ;; Tracked objects:
   433 ;;		On entry : 300/100
   434 ;;		On exit  : 300/100
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   437 ;;      Params:         0       0       0       0
   438 ;;      Locals:         0       0       0       0
   439 ;;      Temps:          3       0       0       0
   440 ;;      Totals:         3       0       0       0
   441 ;;Total ram usage:        3 bytes
   442 ;; Hardware stack levels used:    1
   443 ;; Hardware stack levels required when called:    1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _checkKey1TouchKey
   453  0012                     _checkKey1TouchKey:	
   454                           
   455                           ;main.c: 188: TRISB |= 0x03;
   456                           
   457                           ;incstack = 0
   458                           ; Regs used in _checkKey1TouchKey: [wreg+status,2+status,0]
   459  0012  3003               	movlw	3
   460  0013  0486               	iorwf	6,f	;volatile
   461                           
   462                           ;main.c: 189: KEYCON1 = 0x01;
   463  0014  3001               	movlw	1
   464  0015  0093               	movwf	19	;volatile
   465                           
   466                           ;main.c: 190: KEYCON0 = 0x03;
   467  0016  3003               	movlw	3
   468  0017  0092               	movwf	18	;volatile
   469                           
   470                           ;main.c: 191: while(!(KEYCON0, 7));
   471  0018  0812               	movf	18,w	;volatile
   472                           
   473                           ;main.c: 193: if(tempKey1L)
   474  0019  0870               	movf	_tempKey1L,w
   475  001A  1903               	btfsc	3,2
   476  001B  2828               	goto	l957
   477                           
   478                           ;main.c: 194: {
   479                           ;main.c: 195: if(tempKey1L > (KEYDATAL + 10) && tempKey1H >= KEYDATAH)
   480  001C  0814               	movf	20,w	;volatile
   481  001D  3E0A               	addlw	10
   482  001E  2047               	fcall	PL4	;call to abstracted procedure
   483  001F  1D03               	skipz
   484  0020  2823               	goto	u85
   485  0021  0870               	movf	_tempKey1L,w
   486  0022  0277               	subwf	??_checkKey1TouchKey,w
   487  0023                     u85:	
   488  0023  1803               	skipnc
   489  0024  2828               	goto	l957
   490                           
   491                           ;main.c: 196: {
   492                           ;main.c: 197: key1Flag = 1;
   493  0025  1683               	bsf	3,5	;RP0=1, select bank1
   494  0026  1303               	bcf	3,6	;RP1=0, select bank1
   495  0027  0815               	movf	21,w	;volatile
   496  0028                     l957:	
   497                           
   498                           ;main.c: 198: }
   499                           ;main.c: 199: }
   500                           ;main.c: 202: if(tempKey1H)
   501  0028  0871               	movf	_tempKey1H,w
   502  0029  1903               	btfsc	3,2
   503  002A  2840               	goto	l971
   504                           
   505                           ;main.c: 203: {
   506                           ;main.c: 204: if(tempKey1H > KEYDATAH)
   507  002B  0871               	movf	_tempKey1H,w
   508  002C  1683               	bsf	3,5	;RP0=1, select bank1
   509  002D  1303               	bcf	3,6	;RP1=0, select bank1
   510  002E  0215               	subwf	21,w	;volatile
   511  002F  1803               	skipnc
   512  0030  2840               	goto	l971
   513                           
   514                           ;main.c: 207: {
   515                           ;main.c: 208: key1Flag = 1;
   516  0031  0815               	movf	21,w	;volatile
   517  0032  3E01               	addlw	1
   518  0033  2047               	fcall	PL4	;call to abstracted procedure
   519  0034  1D03               	skipz
   520  0035  2838               	goto	u115
   521  0036  0871               	movf	_tempKey1H,w
   522  0037  0277               	subwf	??_checkKey1TouchKey,w
   523  0038                     u115:	
   524  0038  1C03               	btfss	3,0
   525  0039  2840               	goto	l971
   526                           
   527                           ;main.c: 214: {
   528                           ;main.c: 215: key1Flag = 1;
   529  003A  0870               	movf	_tempKey1L,w
   530  003B  1683               	bsf	3,5	;RP0=1, select bank1
   531  003C  1303               	bcf	3,6	;RP1=0, select bank1
   532  003D  0214               	subwf	20,w	;volatile
   533  003E  1803               	skipnc
   534                           
   535                           ;main.c: 218: {
   536                           ;main.c: 219: key1Flag = 1;
   537  003F  0814               	movf	20,w	;volatile
   538  0040                     l971:	
   539                           
   540                           ;main.c: 220: }
   541                           ;main.c: 221: }
   542                           ;main.c: 222: }
   543                           ;main.c: 223: }
   544                           ;main.c: 224: tempKey1H = KEYDATAH;
   545  0040  1683               	bsf	3,5	;RP0=1, select bank1
   546  0041  1303               	bcf	3,6	;RP1=0, select bank1
   547  0042  0815               	movf	21,w	;volatile
   548  0043  00F1               	movwf	_tempKey1H
   549                           
   550                           ;main.c: 225: tempKey1L = KEYDATAL;
   551  0044  0814               	movf	20,w	;volatile
   552  0045  00F0               	movwf	_tempKey1L
   553  0046  0008               	return
   554  0047                     __end_of_checkKey1TouchKey:	
   555  0047                     PL4:	
   556  0047  00F7               	movwf	??_checkKey1TouchKey
   557  0048  3000               	movlw	0
   558  0049  1803               	skipnc
   559  004A  3001               	movlw	1
   560  004B  00F8               	movwf	??_checkKey1TouchKey+1
   561  004C  3A80               	xorlw	128
   562  004D  00F9               	movwf	??_checkKey1TouchKey+2
   563  004E  3080               	movlw	128
   564  004F  0279               	subwf	??_checkKey1TouchKey+2,w
   565  0050  0008               	return
   566  0051                     __end_ofPL4:	
   567                           
   568                           	psect	text5
   569  0051                     __ptext5:	
   570 ;; *************** function _checkKey0TouchKey *****************
   571 ;; Defined at:
   572 ;;		line 142 in file "C:\SCMCU WorkSpace\touchKey\main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 300/100
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   586 ;;      Params:         0       0       0       0
   587 ;;      Locals:         0       0       0       0
   588 ;;      Temps:          3       0       0       0
   589 ;;      Totals:         3       0       0       0
   590 ;;Total ram usage:        3 bytes
   591 ;; Hardware stack levels used:    1
   592 ;; Hardware stack levels required when called:    1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function _checkKey0TouchKey
   602  0051                     _checkKey0TouchKey:	
   603                           
   604                           ;main.c: 144: TRISB |= 0x03;
   605                           
   606                           ;incstack = 0
   607                           ; Regs used in _checkKey0TouchKey: [wreg+status,2+status,0]
   608  0051  3003               	movlw	3
   609  0052  1683               	bsf	3,5	;RP0=1, select bank1
   610  0053  1303               	bcf	3,6	;RP1=0, select bank1
   611  0054  0486               	iorwf	6,f	;volatile
   612                           
   613                           ;main.c: 145: KEYCON1 = 0x00;
   614  0055  0193               	clrf	19	;volatile
   615                           
   616                           ;main.c: 146: KEYCON0 = 0x03;
   617  0056  0092               	movwf	18	;volatile
   618                           
   619                           ;main.c: 147: while(!(KEYCON0, 7));
   620  0057  0812               	movf	18,w	;volatile
   621                           
   622                           ;main.c: 149: if(tempKey0L)
   623  0058  0872               	movf	_tempKey0L,w
   624  0059  1903               	btfsc	3,2
   625  005A  2867               	goto	l927
   626                           
   627                           ;main.c: 150: {
   628                           ;main.c: 151: if(tempKey0L > (KEYDATAL + 10) && tempKey0H >= KEYDATAH)
   629  005B  0814               	movf	20,w	;volatile
   630  005C  3E0A               	addlw	10
   631  005D  2086               	fcall	PL2	;call to abstracted procedure
   632  005E  1D03               	skipz
   633  005F  2862               	goto	u25
   634  0060  0872               	movf	_tempKey0L,w
   635  0061  0277               	subwf	??_checkKey0TouchKey,w
   636  0062                     u25:	
   637  0062  1803               	skipnc
   638  0063  2867               	goto	l927
   639                           
   640                           ;main.c: 152: {
   641                           ;main.c: 153: key0Flag = 1;
   642  0064  1683               	bsf	3,5	;RP0=1, select bank1
   643  0065  1303               	bcf	3,6	;RP1=0, select bank1
   644  0066  0815               	movf	21,w	;volatile
   645  0067                     l927:	
   646                           
   647                           ;main.c: 154: }
   648                           ;main.c: 155: }
   649                           ;main.c: 158: if(tempKey0H)
   650  0067  0873               	movf	_tempKey0H,w
   651  0068  1903               	btfsc	3,2
   652  0069  287F               	goto	l941
   653                           
   654                           ;main.c: 159: {
   655                           ;main.c: 160: if(tempKey0H > KEYDATAH)
   656  006A  0873               	movf	_tempKey0H,w
   657  006B  1683               	bsf	3,5	;RP0=1, select bank1
   658  006C  1303               	bcf	3,6	;RP1=0, select bank1
   659  006D  0215               	subwf	21,w	;volatile
   660  006E  1803               	skipnc
   661  006F  287F               	goto	l941
   662                           
   663                           ;main.c: 163: {
   664                           ;main.c: 164: key0Flag = 1;
   665  0070  0815               	movf	21,w	;volatile
   666  0071  3E01               	addlw	1
   667  0072  2086               	fcall	PL2	;call to abstracted procedure
   668  0073  1D03               	skipz
   669  0074  2877               	goto	u55
   670  0075  0873               	movf	_tempKey0H,w
   671  0076  0277               	subwf	??_checkKey0TouchKey,w
   672  0077                     u55:	
   673  0077  1C03               	btfss	3,0
   674  0078  287F               	goto	l941
   675                           
   676                           ;main.c: 170: {
   677                           ;main.c: 171: key0Flag = 1;
   678  0079  0872               	movf	_tempKey0L,w
   679  007A  1683               	bsf	3,5	;RP0=1, select bank1
   680  007B  1303               	bcf	3,6	;RP1=0, select bank1
   681  007C  0214               	subwf	20,w	;volatile
   682  007D  1803               	skipnc
   683                           
   684                           ;main.c: 174: {
   685                           ;main.c: 175: key0Flag = 1;
   686  007E  0814               	movf	20,w	;volatile
   687  007F                     l941:	
   688                           
   689                           ;main.c: 176: }
   690                           ;main.c: 177: }
   691                           ;main.c: 178: }
   692                           ;main.c: 179: }
   693                           ;main.c: 180: tempKey0H = KEYDATAH;
   694  007F  1683               	bsf	3,5	;RP0=1, select bank1
   695  0080  1303               	bcf	3,6	;RP1=0, select bank1
   696  0081  0815               	movf	21,w	;volatile
   697  0082  00F3               	movwf	_tempKey0H
   698                           
   699                           ;main.c: 181: tempKey0L = KEYDATAL;
   700  0083  0814               	movf	20,w	;volatile
   701  0084  00F2               	movwf	_tempKey0L
   702  0085  0008               	return
   703  0086                     __end_of_checkKey0TouchKey:	
   704  0086                     PL2:	
   705  0086  00F7               	movwf	??_checkKey0TouchKey
   706  0087  3000               	movlw	0
   707  0088  1803               	skipnc
   708  0089  3001               	movlw	1
   709  008A  00F8               	movwf	??_checkKey0TouchKey+1
   710  008B  3A80               	xorlw	128
   711  008C  00F9               	movwf	??_checkKey0TouchKey+2
   712  008D  3080               	movlw	128
   713  008E  0279               	subwf	??_checkKey0TouchKey+2,w
   714  008F  0008               	return
   715  0090                     __end_ofPL2:	
   716                           
   717                           	psect	text6
   718  00A7                     __ptext6:	
   719 ;; *************** function _Timer0_Isr *****************
   720 ;; Defined at:
   721 ;;		line 252 in file "C:\SCMCU WorkSpace\touchKey\main.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   735 ;;      Params:         0       0       0       0
   736 ;;      Locals:         0       0       0       0
   737 ;;      Temps:          2       0       0       0
   738 ;;      Totals:         2       0       0       0
   739 ;;Total ram usage:        2 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		Interrupt level 1
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           
   749                           ;psect for function _Timer0_Isr
   750  00A7                     _Timer0_Isr:	
   751                           
   752                           ;main.c: 254: if(T0IF)
   753  00A7  1D0B               	btfss	11,2	;volatile
   754  00A8  28B0               	goto	i1l507
   755                           
   756                           ;main.c: 255: {
   757                           ;main.c: 257: TMR0 += 99;
   758  00A9  3063               	movlw	99
   759  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   760  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   761  00AC  0781               	addwf	1,f	;volatile
   762                           
   763                           ;main.c: 258: IntFlag = 1;
   764  00AD  01F4               	clrf	_IntFlag
   765  00AE  0AF4               	incf	_IntFlag,f
   766                           
   767                           ;main.c: 260: T0IF = 0;
   768  00AF  110B               	bcf	11,2	;volatile
   769  00B0                     i1l507:	
   770  00B0  0876               	movf	??_Timer0_Isr+1,w
   771  00B1  008A               	movwf	10
   772  00B2  0E75               	swapf	??_Timer0_Isr^(0+-128),w
   773  00B3  0083               	movwf	3
   774  00B4  0EFE               	swapf	126,f
   775  00B5  0E7E               	swapf	126,w
   776  00B6  0009               	retfie
   777  00B7                     __end_of_Timer0_Isr:	
   778  007E                     btemp	set	126	;btemp
   779  007E                     wtemp0	set	126
   780                           
   781                           	psect	intentry
   782  0004                     __pintentry:	
   783                           ;incstack = 0
   784                           ; Regs used in _Timer0_Isr: [wreg+status,2+status,0]
   785                           
   786  0004                     interrupt_function:	
   787  007E                     saved_w	set	btemp
   788  0004  00FE               	movwf	btemp
   789  0005  0E03               	swapf	3,w
   790  0006  00F5               	movwf	??_Timer0_Isr
   791  0007  080A               	movf	10,w
   792  0008  00F6               	movwf	??_Timer0_Isr+1
   793  0009  28A7               	ljmp	_Timer0_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_checkKey0TouchKey
    _main->_checkKey1TouchKey

Critical Paths under _Timer0_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                  _checkKey0TouchKey
                  _checkKey1TouchKey
                            _initSys
 ---------------------------------------------------------------------------------
 (1) _initSys                                              0     0      0       0
                            _initPWM
                         _initTimer0
 ---------------------------------------------------------------------------------
 (2) _initTimer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initPWM                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkKey1TouchKey                                    3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _checkKey0TouchKey                                    3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Timer0_Isr                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkKey0TouchKey
   _checkKey1TouchKey
   _initSys
     _initPWM
     _initTimer0

 _Timer0_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
ABS                  0      0       A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
DATA                 0      0       A      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 23 21:15:42 2020

                        PL2 0086                          PL4 0047                          u25 0062  
                        u55 0077                          u85 0023                         l431 00C4  
                       l903 00B7                         l941 007F                         l927 0067  
                       l971 0040                         l957 0028                         u115 0038  
                      _T0IF 005A                        _TMR0 0001                        _WPUB 0008  
                      _main 00C3                        btemp 007E                        start 000A  
                     ?_main 0075                       i1l507 00B0                       _PORTA 0005  
                     _PORTB 0006                       _TRISB 0086                       _PWMTH 0016  
                     _PWMTL 0015             __end_of_initPWM 00C3             __end_of_initSys 00CE  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 000B                __end_of_main 00CC                      ??_main 007A  
                    _INTCON 000B                      _OSCCON 0088                      _PWMD0L 0017  
                    _PWMD1L 0018                  _Timer0_Isr 00A7                   ??_initPWM 0077  
                 ??_initSys 0077                      saved_w 007E     __end_of__initialization 0010  
            __pcstackCOMMON 0075                  __end_ofPL2 0090                  __end_ofPL4 0051  
         _checkKey0TouchKey 0051           _checkKey1TouchKey 0012          ?_checkKey0TouchKey 0075  
        ?_checkKey1TouchKey 0075                 ?_Timer0_Isr 0075                  __pmaintext 00C3  
                __pintentry 0004         ??_checkKey0TouchKey 0077         ??_checkKey1TouchKey 0077  
                   _KEYCON0 0092                     _KEYCON1 0093                     _PWMD01H 001C  
                   _PWMCON0 0013                     _PWMCON1 0014                     _PWMCON2 001D  
 __end_of_checkKey0TouchKey 0086   __end_of_checkKey1TouchKey 0047                     _IntFlag 0074  
                _initTimer0 0090                     __ptext0 0000                     __ptext1 00CC  
                   __ptext2 0090                     __ptext3 00B7                     __ptext4 0012  
                   __ptext5 0051                     __ptext6 00A7                     _initPWM 00B7  
                   _initSys 00CC         __size_of_Timer0_Isr 0010        end_of_initialization 0010  
__size_of_checkKey0TouchKey 0035  __size_of_checkKey1TouchKey 0035                 ?_initTimer0 0075  
       start_initialization 000B                ??_Timer0_Isr 0075                 __pbssCOMMON 0070  
                 ___latbits 0000          __end_of_Timer0_Isr 00B7         __size_of_initTimer0 0017  
                  ?_initPWM 0075                    ?_initSys 0075                    _KEYDATAH 0095  
                  _KEYDATAL 0094           interrupt_function 0004                   _tempKey0H 0073  
                 _tempKey1H 0071                   _tempKey0L 0072                   _tempKey1L 0070  
              ??_initTimer0 0077            __size_of_initPWM 000C            __size_of_initSys 0002  
        __end_of_initTimer0 00A7               __size_of_main 0009                    intlevel1 0000  
                _OPTION_REG 0081  
