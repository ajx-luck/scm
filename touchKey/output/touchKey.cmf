%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$touchKey.obj
cinit CODE 0 B B 7 2
text1 CODE 0 CC CC 2 2
text2 CODE 0 90 90 17 2
text3 CODE 0 B7 B7 C 2
text4 CODE 0 12 12 3F 2
text5 CODE 0 51 51 3F 2
text6 CODE 0 A7 A7 10 2
maintext CODE 0 C3 C3 9 2
cstackCOMMON COMMON 1 75 75 5 1
intentry CODE 0 4 4 6 2
bssCOMMON COMMON 1 70 70 5 1
$startup.obj
reset_vec CODE 0 0 0 1 2
end_init CODE 0 A A 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 120-16F 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 120-16F 1
CONST 1-3 2
CONST CE-7FF 2
ENTRY 1-3 2
ENTRY CE-7FF 2
IDLOC 2000-2003 2
STACK 20-6F 1
CODE 1-3 2
CODE CE-7FF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-11F 1
COMMON 7A-7D 1
CONFIG 2007-2008 2
STRCODE 1-3 2
STRCODE CE-7FF 2
STRING 1-3 2
STRING CE-7FF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$touchKey.obj
B cinit CODE >89:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
B cinit CODE >92:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
B cinit CODE >115:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
C cinit CODE >116:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
D cinit CODE >117:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
E cinit CODE >118:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
F cinit CODE >119:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
10 cinit CODE >125:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
10 cinit CODE >127:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
11 cinit CODE >128:C:\SCMCU WorkSpace\touchKey\output\touchKey.as
4 intentry CODE >252:C:\SCMCU WorkSpace\touchKey\main.c
A7 text6 CODE >252:C:\SCMCU WorkSpace\touchKey\main.c
A7 text6 CODE >254:C:\SCMCU WorkSpace\touchKey\main.c
A9 text6 CODE >257:C:\SCMCU WorkSpace\touchKey\main.c
AD text6 CODE >258:C:\SCMCU WorkSpace\touchKey\main.c
AF text6 CODE >260:C:\SCMCU WorkSpace\touchKey\main.c
B0 text6 CODE >263:C:\SCMCU WorkSpace\touchKey\main.c
51 text5 CODE >142:C:\SCMCU WorkSpace\touchKey\main.c
51 text5 CODE >144:C:\SCMCU WorkSpace\touchKey\main.c
55 text5 CODE >145:C:\SCMCU WorkSpace\touchKey\main.c
56 text5 CODE >146:C:\SCMCU WorkSpace\touchKey\main.c
57 text5 CODE >147:C:\SCMCU WorkSpace\touchKey\main.c
58 text5 CODE >149:C:\SCMCU WorkSpace\touchKey\main.c
5B text5 CODE >151:C:\SCMCU WorkSpace\touchKey\main.c
67 text5 CODE >158:C:\SCMCU WorkSpace\touchKey\main.c
6A text5 CODE >160:C:\SCMCU WorkSpace\touchKey\main.c
70 text5 CODE >162:C:\SCMCU WorkSpace\touchKey\main.c
79 text5 CODE >169:C:\SCMCU WorkSpace\touchKey\main.c
7E text5 CODE >173:C:\SCMCU WorkSpace\touchKey\main.c
7F text5 CODE >180:C:\SCMCU WorkSpace\touchKey\main.c
83 text5 CODE >181:C:\SCMCU WorkSpace\touchKey\main.c
85 text5 CODE >184:C:\SCMCU WorkSpace\touchKey\main.c
12 text4 CODE >186:C:\SCMCU WorkSpace\touchKey\main.c
12 text4 CODE >188:C:\SCMCU WorkSpace\touchKey\main.c
14 text4 CODE >189:C:\SCMCU WorkSpace\touchKey\main.c
16 text4 CODE >190:C:\SCMCU WorkSpace\touchKey\main.c
18 text4 CODE >191:C:\SCMCU WorkSpace\touchKey\main.c
19 text4 CODE >193:C:\SCMCU WorkSpace\touchKey\main.c
1C text4 CODE >195:C:\SCMCU WorkSpace\touchKey\main.c
28 text4 CODE >202:C:\SCMCU WorkSpace\touchKey\main.c
2B text4 CODE >204:C:\SCMCU WorkSpace\touchKey\main.c
31 text4 CODE >206:C:\SCMCU WorkSpace\touchKey\main.c
3A text4 CODE >213:C:\SCMCU WorkSpace\touchKey\main.c
3F text4 CODE >217:C:\SCMCU WorkSpace\touchKey\main.c
40 text4 CODE >224:C:\SCMCU WorkSpace\touchKey\main.c
44 text4 CODE >225:C:\SCMCU WorkSpace\touchKey\main.c
46 text4 CODE >228:C:\SCMCU WorkSpace\touchKey\main.c
B7 text3 CODE >43:C:\SCMCU WorkSpace\touchKey\main.c
B7 text3 CODE >45:C:\SCMCU WorkSpace\touchKey\main.c
B9 text3 CODE >46:C:\SCMCU WorkSpace\touchKey\main.c
BA text3 CODE >47:C:\SCMCU WorkSpace\touchKey\main.c
BB text3 CODE >48:C:\SCMCU WorkSpace\touchKey\main.c
BC text3 CODE >49:C:\SCMCU WorkSpace\touchKey\main.c
BE text3 CODE >50:C:\SCMCU WorkSpace\touchKey\main.c
C0 text3 CODE >51:C:\SCMCU WorkSpace\touchKey\main.c
C1 text3 CODE >52:C:\SCMCU WorkSpace\touchKey\main.c
C2 text3 CODE >53:C:\SCMCU WorkSpace\touchKey\main.c
90 text2 CODE >233:C:\SCMCU WorkSpace\touchKey\main.c
90 text2 CODE >235:C:\SCMCU WorkSpace\touchKey\main.c
91 text2 CODE >236:C:\SCMCU WorkSpace\touchKey\main.c
92 text2 CODE >237:C:\SCMCU WorkSpace\touchKey\main.c
93 text2 CODE >238:C:\SCMCU WorkSpace\touchKey\main.c
97 text2 CODE >239:C:\SCMCU WorkSpace\touchKey\main.c
9A text2 CODE >240:C:\SCMCU WorkSpace\touchKey\main.c
9B text2 CODE >241:C:\SCMCU WorkSpace\touchKey\main.c
9C text2 CODE >242:C:\SCMCU WorkSpace\touchKey\main.c
9F text2 CODE >243:C:\SCMCU WorkSpace\touchKey\main.c
A1 text2 CODE >244:C:\SCMCU WorkSpace\touchKey\main.c
A4 text2 CODE >249:C:\SCMCU WorkSpace\touchKey\main.c
A6 text2 CODE >250:C:\SCMCU WorkSpace\touchKey\main.c
CC text1 CODE >36:C:\SCMCU WorkSpace\touchKey\main.c
CC text1 CODE >38:C:\SCMCU WorkSpace\touchKey\main.c
CD text1 CODE >39:C:\SCMCU WorkSpace\touchKey\main.c
C3 maintext CODE >22:C:\SCMCU WorkSpace\touchKey\main.c
C3 maintext CODE >24:C:\SCMCU WorkSpace\touchKey\main.c
C4 maintext CODE >25:C:\SCMCU WorkSpace\touchKey\main.c
C4 maintext CODE >27:C:\SCMCU WorkSpace\touchKey\main.c
C5 maintext CODE >28:C:\SCMCU WorkSpace\touchKey\main.c
C8 maintext CODE >30:C:\SCMCU WorkSpace\touchKey\main.c
C9 maintext CODE >31:C:\SCMCU WorkSpace\touchKey\main.c
CA maintext CODE >32:C:\SCMCU WorkSpace\touchKey\main.c
$startup.obj
A end_init CODE >79:C:\SCMCU WorkSpace\touchKey\output\startup.as
A init CODE >76:C:\SCMCU WorkSpace\touchKey\output\startup.as
0 functab ENTRY >42:C:\SCMCU WorkSpace\touchKey\output\startup.as
0 functab ENTRY >43:C:\SCMCU WorkSpace\touchKey\output\startup.as
0 functab ENTRY >44:C:\SCMCU WorkSpace\touchKey\output\startup.as
0 functab ENTRY >45:C:\SCMCU WorkSpace\touchKey\output\startup.as
0 functab ENTRY >46:C:\SCMCU WorkSpace\touchKey\output\startup.as
0 functab ENTRY >47:C:\SCMCU WorkSpace\touchKey\output\startup.as
0 reset_vec CODE >66:C:\SCMCU WorkSpace\touchKey\output\startup.as
0 reset_vec CODE >71:C:\SCMCU WorkSpace\touchKey\output\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 0 0 ABS 0 - touchKey.obj
__Hspace_0 CE 0 ABS 0 - -
__Hspace_1 7A 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
_PWMCON0 13 0 ABS 0 - touchKey.obj
_PWMCON1 14 0 ABS 0 - touchKey.obj
_PWMCON2 1D 0 ABS 0 - touchKey.obj
_PWMD01H 1C 0 ABS 0 - touchKey.obj
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
PL2 10C 0 CODE 0 text5 touchKey.obj
PL4 8E 0 CODE 0 text4 touchKey.obj
__Hstrings 0 0 ABS 0 strings -
_T0IF 5A 0 ABS 0 - touchKey.obj
_TMR0 1 0 ABS 0 - touchKey.obj
_WPUB 8 0 ABS 0 - touchKey.obj
___sp 0 0 STACK 2 stack startup.obj
_main 186 0 CODE 0 maintext touchKey.obj
btemp 7E 0 ABS 0 - touchKey.obj
start 14 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - touchKey.obj
__HbssCOMMON 0 0 ABS 0 bssCOMMON -
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
_checkKey1TouchKey 24 0 CODE 0 text4 touchKey.obj
__LbssCOMMON 0 0 ABS 0 bssCOMMON -
__size_of_initTimer0 0 0 ABS 0 - touchKey.obj
_IntFlag 74 0 COMMON 1 bssCOMMON touchKey.obj
wtemp0 7E 0 ABS 0 - touchKey.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__size_of_initPWM 0 0 ABS 0 - touchKey.obj
__size_of_initSys 0 0 ABS 0 - touchKey.obj
__Hpa_nodes0 0 0 ABS 0 pa_nodes0 -
__Lmaintext 0 0 ABS 0 maintext -
__size_of_checkKey0TouchKey 0 0 ABS 0 - touchKey.obj
_INTCON B 0 ABS 0 - touchKey.obj
_OPTION_REG 81 0 ABS 0 - touchKey.obj
__Lpa_nodes0 0 0 ABS 0 pa_nodes0 -
start_initialization 16 0 CODE 0 cinit touchKey.obj
_OSCCON 88 0 ABS 0 - touchKey.obj
_PWMD0L 17 0 ABS 0 - touchKey.obj
_PWMD1L 18 0 ABS 0 - touchKey.obj
__end_ofPL2 120 0 CODE 0 text5 touchKey.obj
__end_ofPL4 A2 0 CODE 0 text4 touchKey.obj
_KEYCON0 92 0 ABS 0 - touchKey.obj
_KEYCON1 93 0 ABS 0 - touchKey.obj
__end_of_initPWM 186 0 CODE 0 text3 touchKey.obj
__end_of_initSys 19C 0 CODE 0 text1 touchKey.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 ABS 0 bank2 -
__Hcinit 24 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 0 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 ABS 0 bank2 -
__Lcinit 16 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 14 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 14 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Ltext 0 0 ABS 0 text -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__S0 CE 0 ABS 0 - -
__S1 7A 0 ABS 0 - -
__S2 0 0 ABS 0 - -
__end_of_checkKey0TouchKey 10C 0 CODE 0 text5 touchKey.obj
saved_w 7E 0 ABS 0 - touchKey.obj
_tempKey0H 73 0 COMMON 1 bssCOMMON touchKey.obj
_tempKey0L 72 0 COMMON 1 bssCOMMON touchKey.obj
_tempKey1H 71 0 COMMON 1 bssCOMMON touchKey.obj
_tempKey1L 70 0 COMMON 1 bssCOMMON touchKey.obj
_Timer0_Isr 14E 0 CODE 0 text6 touchKey.obj
__Lintentry 8 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
__pmaintext 186 0 CODE 0 maintext touchKey.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 0 config -
__end_of_Timer0_Isr 16E 0 CODE 0 text6 touchKey.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
_checkKey0TouchKey A2 0 CODE 0 text5 touchKey.obj
_initTimer0 120 0 CODE 0 text2 touchKey.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__pbssCOMMON 70 0 COMMON 1 bssCOMMON touchKey.obj
__Lend_init 14 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__size_of_checkKey1TouchKey 0 0 ABS 0 - touchKey.obj
end_of_initialization 20 0 CODE 0 cinit touchKey.obj
__Hintentry 14 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 2 0 CODE 0 reset_vec -
_initPWM 16E 0 CODE 0 text3 touchKey.obj
_initSys 198 0 CODE 0 text1 touchKey.obj
__ptext0 0 0 CODE 0 text0 touchKey.obj
__ptext1 198 0 CODE 0 text1 touchKey.obj
__ptext2 120 0 CODE 0 text2 touchKey.obj
__ptext3 16E 0 CODE 0 text3 touchKey.obj
__ptext4 24 0 CODE 0 text4 touchKey.obj
__ptext5 A2 0 CODE 0 text5 touchKey.obj
__ptext6 14E 0 CODE 0 text6 touchKey.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of_initTimer0 14E 0 CODE 0 text2 touchKey.obj
__end_of__initialization 20 0 CODE 0 cinit touchKey.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__pcstackCOMMON 75 0 COMMON 1 cstackCOMMON touchKey.obj
__Hend_init 16 0 CODE 0 end_init -
__end_of_main 198 0 CODE 0 maintext touchKey.obj
_PORTA 5 0 ABS 0 - touchKey.obj
_PORTB 6 0 ABS 0 - touchKey.obj
_PWMTH 16 0 ABS 0 - touchKey.obj
_PWMTL 15 0 ABS 0 - touchKey.obj
_TRISB 86 0 ABS 0 - touchKey.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
interrupt_function 8 0 CODE 0 intentry touchKey.obj
__pintentry 8 0 CODE 0 intentry touchKey.obj
__end_of_checkKey1TouchKey 8E 0 CODE 0 text4 touchKey.obj
__initialization 16 0 CODE 0 cinit touchKey.obj
_KEYDATAH 95 0 ABS 0 - touchKey.obj
_KEYDATAL 94 0 ABS 0 - touchKey.obj
__size_of_Timer0_Isr 0 0 ABS 0 - touchKey.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
intentry 0 4 8 CA 2
reset_vec 0 0 0 1 2
bssCOMMON 1 70 70 A 1
