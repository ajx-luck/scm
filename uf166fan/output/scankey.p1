Version 3.2 HI-TECH Software Intermediate Code
"18 C:\SCMCU WorkSpace\uf166fan\scankey.h
[s S1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S1 Keys key_timer_cnt1 key_state_buffer1 key_timer_cnt2 key_state_buffer2 key_input key_addr_result key_index ]
[; ;scankey.h: 18: struct Keys{
[; ;scankey.h: 19: unsigned char key_timer_cnt1;
[; ;scankey.h: 20: unsigned char key_state_buffer1;
[; ;scankey.h: 22: unsigned char key_timer_cnt2;
[; ;scankey.h: 23: unsigned char key_state_buffer2;
[; ;scankey.h: 25: char key_input;
[; ;scankey.h: 27: char key_addr_result;
[; ;scankey.h: 29: char key_index;
[; ;scankey.h: 30: };
[; ;scankey.h: 32: unsigned char key_read(struct Keys * keys);
[; ;scankey.h: 33: static unsigned char key_driver(struct Keys * keys);
[; ;scankey.h: 34: void sacnKeyInput(struct Keys* key);
[; ;scankey.h: 35: void resetKey(struct Keys* key);
"3 C:\SCMCU WorkSpace\uf166fan\scankey.c
[v _sacnKeyInput `(v ~T0 @X0 1 ef1`*S1 ]
"4
{
[; ;scankey.c: 3: void sacnKeyInput(struct Keys* key)
[; ;scankey.c: 4: {
[e :U _sacnKeyInput ]
"3
[v _key `*S1 ~T0 @X0 1 r1 ]
"4
[f ]
[; ;scankey.c: 5: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
"5
[e = . *U _key 4 -> & >> -> . *U _key 5 `i . *U _key 6 -> 1 `i `uc ]
[; ;scankey.c: 7: }
"7
[e :UE 2 ]
}
"10
[v _key_driver `(uc ~T0 @X0 1 sf1`*S1 ]
"11
{
[; ;scankey.c: 10: static unsigned char key_driver(struct Keys * key)
[; ;scankey.c: 11: {
[e :U _key_driver ]
"10
[v _key `*S1 ~T0 @X0 1 r1 ]
"11
[f ]
"14
[v _key_return `uc ~T0 @X0 1 a ]
[; ;scankey.c: 14: unsigned char key_return = 0;
[e = _key_return -> -> 0 `i `uc ]
[v _key_read `uc ~T0 @X0 1 a ]
[; ;scankey.c: 15: unsigned char key_read = key->key_input;
"15
[e = _key_read . *U _key 4 ]
[; ;scankey.c: 17: switch(key->key_state_buffer1)
"17
[e $U 5  ]
[; ;scankey.c: 18: {
"18
{
[; ;scankey.c: 19: case 0:
"19
[e :U 6 ]
[; ;scankey.c: 20: if(key_read == 0)
"20
[e $ ! == -> _key_read `i -> 0 `i 7  ]
[; ;scankey.c: 21: {
"21
{
[; ;scankey.c: 22: key->key_state_buffer1 = 1;
"22
[e = . *U _key 1 -> -> 1 `i `uc ]
"23
}
[e :U 7 ]
[; ;scankey.c: 23: }
[; ;scankey.c: 26: break;
"26
[e $U 4  ]
[; ;scankey.c: 28: case 1:
"28
[e :U 8 ]
[; ;scankey.c: 29: if(key_read == 0)
"29
[e $ ! == -> _key_read `i -> 0 `i 9  ]
[; ;scankey.c: 30: {
"30
{
[; ;scankey.c: 31: key->key_timer_cnt1 = 0;
"31
[e = . *U _key 0 -> -> 0 `i `uc ]
[; ;scankey.c: 32: key->key_state_buffer1 = 2;
"32
[e = . *U _key 1 -> -> 2 `i `uc ]
"36
}
[; ;scankey.c: 36: }
[e $U 10  ]
"37
[e :U 9 ]
[; ;scankey.c: 37: else
[; ;scankey.c: 38: {
"38
{
[; ;scankey.c: 39: key->key_state_buffer1 = 0;
"39
[e = . *U _key 1 -> -> 0 `i `uc ]
"40
}
[e :U 10 ]
[; ;scankey.c: 40: }
[; ;scankey.c: 43: break;
"43
[e $U 4  ]
[; ;scankey.c: 45: case 2:
"45
[e :U 11 ]
[; ;scankey.c: 46: if(key_read == 1)
"46
[e $ ! == -> _key_read `i -> 1 `i 12  ]
[; ;scankey.c: 47: {
"47
{
[; ;scankey.c: 48: key_return = 1;
"48
[e = _key_return -> -> 1 `i `uc ]
[; ;scankey.c: 49: key->key_state_buffer1 = 0;
"49
[e = . *U _key 1 -> -> 0 `i `uc ]
"50
}
[; ;scankey.c: 50: }
[e $U 13  ]
"51
[e :U 12 ]
[; ;scankey.c: 51: else if(++(key->key_timer_cnt1) >= 100)
[e $ ! >= -> =+ . *U _key 0 -> -> 1 `i `uc `i -> 100 `i 14  ]
[; ;scankey.c: 52: {
"52
{
[; ;scankey.c: 53: key_return = 3;
"53
[e = _key_return -> -> 3 `i `uc ]
[; ;scankey.c: 54: key->key_state_buffer1 = 3;
"54
[e = . *U _key 1 -> -> 3 `i `uc ]
"56
}
[e :U 14 ]
"57
[e :U 13 ]
[; ;scankey.c: 56: }
[; ;scankey.c: 57: break;
[e $U 4  ]
[; ;scankey.c: 59: case 3:
"59
[e :U 15 ]
[; ;scankey.c: 60: if(key_read == 1)
"60
[e $ ! == -> _key_read `i -> 1 `i 16  ]
[; ;scankey.c: 61: {
"61
{
[; ;scankey.c: 62: key->key_state_buffer1 = 0;
"62
[e = . *U _key 1 -> -> 0 `i `uc ]
"63
}
[e :U 16 ]
[; ;scankey.c: 63: }
[; ;scankey.c: 65: break;
"65
[e $U 4  ]
"66
}
[; ;scankey.c: 66: }
[e $U 4  ]
"17
[e :U 5 ]
[e [\ . *U _key 1 , $ -> -> 0 `i `uc 6
 , $ -> -> 1 `i `uc 8
 , $ -> -> 2 `i `uc 11
 , $ -> -> 3 `i `uc 15
 4 ]
"66
[e :U 4 ]
[; ;scankey.c: 67: return key_return;
"67
[e ) _key_return ]
[e $UE 3  ]
[; ;scankey.c: 68: }
"68
[e :UE 3 ]
}
"75
[v _key_read `(uc ~T0 @X0 1 ef1`*S1 ]
"76
{
[; ;scankey.c: 75: unsigned char key_read(struct Keys * key)
[; ;scankey.c: 76: {
[e :U _key_read ]
"75
[v _key `*S1 ~T0 @X0 1 r1 ]
"76
[f ]
"78
[v _key_return `uc ~T0 @X0 1 a ]
[; ;scankey.c: 78: unsigned char key_return = 0;
[e = _key_return -> -> 0 `i `uc ]
[v _key_read `uc ~T0 @X0 1 a ]
[; ;scankey.c: 79: unsigned char key_read = key_driver(key);
"79
[e = _key_read ( _key_driver (1 _key ]
[; ;scankey.c: 81: switch(key->key_state_buffer2)
"81
[e $U 19  ]
[; ;scankey.c: 82: {
"82
{
[; ;scankey.c: 83: case 0:
"83
[e :U 20 ]
[; ;scankey.c: 84: if(key_read == 1)
"84
[e $ ! == -> _key_read `i -> 1 `i 21  ]
[; ;scankey.c: 85: {
"85
{
[; ;scankey.c: 86: key->key_timer_cnt2 = 0;
"86
[e = . *U _key 2 -> -> 0 `i `uc ]
[; ;scankey.c: 87: key->key_state_buffer2 = 1;
"87
[e = . *U _key 3 -> -> 1 `i `uc ]
"88
}
[; ;scankey.c: 88: }
[e $U 22  ]
"89
[e :U 21 ]
[; ;scankey.c: 89: else
[; ;scankey.c: 90: key_return = key_read;
"90
[e = _key_return _key_read ]
[e :U 22 ]
[; ;scankey.c: 91: break;
"91
[e $U 18  ]
[; ;scankey.c: 93: case 1:
"93
[e :U 23 ]
[; ;scankey.c: 94: if(key_read == 1)
"94
[e $ ! == -> _key_read `i -> 1 `i 24  ]
[; ;scankey.c: 95: {
"95
{
[; ;scankey.c: 96: key_return = 2;
"96
[e = _key_return -> -> 2 `i `uc ]
[; ;scankey.c: 97: key->key_state_buffer2 = 0;
"97
[e = . *U _key 3 -> -> 0 `i `uc ]
"98
}
[; ;scankey.c: 98: }
[e $U 25  ]
"99
[e :U 24 ]
[; ;scankey.c: 99: else if(++(key->key_timer_cnt2) >= 50)
[e $ ! >= -> =+ . *U _key 2 -> -> 1 `i `uc `i -> 50 `i 26  ]
[; ;scankey.c: 100: {
"100
{
[; ;scankey.c: 104: key_return = 1;
"104
[e = _key_return -> -> 1 `i `uc ]
[; ;scankey.c: 105: key->key_state_buffer2 = 0;
"105
[e = . *U _key 3 -> -> 0 `i `uc ]
"107
}
[e :U 26 ]
"108
[e :U 25 ]
[; ;scankey.c: 107: }
[; ;scankey.c: 108: break;
[e $U 18  ]
"109
}
[; ;scankey.c: 109: }
[e $U 18  ]
"81
[e :U 19 ]
[e [\ . *U _key 3 , $ -> -> 0 `i `uc 20
 , $ -> -> 1 `i `uc 23
 18 ]
"109
[e :U 18 ]
[; ;scankey.c: 111: return key_return;
"111
[e ) _key_return ]
[e $UE 17  ]
[; ;scankey.c: 112: }
"112
[e :UE 17 ]
}
"115
[v _resetKey `(v ~T0 @X0 1 ef1`*S1 ]
"116
{
[; ;scankey.c: 115: void resetKey(struct Keys* key)
[; ;scankey.c: 116: {
[e :U _resetKey ]
"115
[v _key `*S1 ~T0 @X0 1 r1 ]
"116
[f ]
[; ;scankey.c: 117: key->key_timer_cnt1 =key->key_timer_cnt2 = key->key_state_buffer1 = key->key_state_buffer2 = 0;
"117
[e = . *U _key 0 = . *U _key 2 = . *U _key 1 = . *U _key 3 -> -> 0 `i `uc ]
[; ;scankey.c: 118: }
"118
[e :UE 27 ]
}
