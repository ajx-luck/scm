Version 3.2 HI-TECH Software Intermediate Code
"18 E:\project\project0508\scm\uf166fan\scankey.h
[s S1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S1 Keys key_timer_cnt1 key_state_buffer1 key_timer_cnt2 key_state_buffer2 key_input key_addr_result key_index ]
[; ;scankey.h: 18: struct Keys {
[; ;scankey.h: 19: unsigned char key_timer_cnt1;
[; ;scankey.h: 20: unsigned char key_state_buffer1;
[; ;scankey.h: 22: unsigned char key_timer_cnt2;
[; ;scankey.h: 23: unsigned char key_state_buffer2;
[; ;scankey.h: 25: char key_input;
[; ;scankey.h: 27: char key_addr_result;
[; ;scankey.h: 29: char key_index;
[; ;scankey.h: 30: };
[; ;scankey.h: 33: unsigned char key_read(struct Keys *keys);
[; ;scankey.h: 35: unsigned char key_driver(struct Keys *keys);
[; ;scankey.h: 37: void sacnKeyInput(struct Keys *key);
[; ;scankey.h: 39: void resetKey(struct Keys *key);
"3 E:\project\project0508\scm\uf166fan\scankey.c
[v _sacnKeyInput `(v ~T0 @X0 1 ef1`*S1 ]
{
[; ;scankey.c: 3: void sacnKeyInput(struct Keys *key) {
[e :U _sacnKeyInput ]
[v _key `*S1 ~T0 @X0 1 r1 ]
[f ]
[; ;scankey.c: 4: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
"4
[e = . *U _key 4 -> & >> -> . *U _key 5 `i . *U _key 6 -> 1 `i `uc ]
[; ;scankey.c: 6: }
"6
[e :UE 2 ]
}
"9
[v _key_driver `(uc ~T0 @X0 1 ef1`*S1 ]
{
[; ;scankey.c: 9: unsigned char key_driver(struct Keys *key) {
[e :U _key_driver ]
[v _key `*S1 ~T0 @X0 1 r1 ]
[f ]
"12
[v _key_return `uc ~T0 @X0 1 a ]
[; ;scankey.c: 12: unsigned char key_return = 0;
[e = _key_return -> -> 0 `i `uc ]
[v _key_read `uc ~T0 @X0 1 a ]
[; ;scankey.c: 13: unsigned char key_read = key->key_input;
"13
[e = _key_read . *U _key 4 ]
[; ;scankey.c: 15: switch (key->key_state_buffer1) {
"15
[e $U 5  ]
{
[; ;scankey.c: 16: case 0:
"16
[e :U 6 ]
[; ;scankey.c: 17: if (key_read == 0) {
"17
[e $ ! == -> _key_read `i -> 0 `i 7  ]
{
[; ;scankey.c: 18: key->key_state_buffer1 = 1;
"18
[e = . *U _key 1 -> -> 1 `i `uc ]
"19
}
[e :U 7 ]
[; ;scankey.c: 19: }
[; ;scankey.c: 22: break;
"22
[e $U 4  ]
[; ;scankey.c: 24: case 1:
"24
[e :U 8 ]
[; ;scankey.c: 25: if (key_read == 0) {
"25
[e $ ! == -> _key_read `i -> 0 `i 9  ]
{
[; ;scankey.c: 26: key->key_timer_cnt1 = 0;
"26
[e = . *U _key 0 -> -> 0 `i `uc ]
[; ;scankey.c: 27: key->key_state_buffer1 = 2;
"27
[e = . *U _key 1 -> -> 2 `i `uc ]
"31
}
[; ;scankey.c: 31: } else {
[e $U 10  ]
[e :U 9 ]
{
[; ;scankey.c: 32: key->key_state_buffer1 = 0;
"32
[e = . *U _key 1 -> -> 0 `i `uc ]
"33
}
[e :U 10 ]
[; ;scankey.c: 33: }
[; ;scankey.c: 36: break;
"36
[e $U 4  ]
[; ;scankey.c: 38: case 2:
"38
[e :U 11 ]
[; ;scankey.c: 39: if (key_read == 1) {
"39
[e $ ! == -> _key_read `i -> 1 `i 12  ]
{
[; ;scankey.c: 40: key_return = 1;
"40
[e = _key_return -> -> 1 `i `uc ]
[; ;scankey.c: 41: key->key_state_buffer1 = 0;
"41
[e = . *U _key 1 -> -> 0 `i `uc ]
"42
}
[; ;scankey.c: 42: } else if (++(key->key_timer_cnt1) >= 100)
[e $U 13  ]
[e :U 12 ]
[e $ ! >= -> =+ . *U _key 0 -> -> 1 `i `uc `i -> 100 `i 14  ]
[; ;scankey.c: 43: {
"43
{
[; ;scankey.c: 44: key_return = 3;
"44
[e = _key_return -> -> 3 `i `uc ]
[; ;scankey.c: 45: key->key_state_buffer1 = 3;
"45
[e = . *U _key 1 -> -> 3 `i `uc ]
"47
}
[e :U 14 ]
"48
[e :U 13 ]
[; ;scankey.c: 47: }
[; ;scankey.c: 48: break;
[e $U 4  ]
[; ;scankey.c: 50: case 3:
"50
[e :U 15 ]
[; ;scankey.c: 51: if (key_read == 1)
"51
[e $ ! == -> _key_read `i -> 1 `i 16  ]
[; ;scankey.c: 52: {
"52
{
[; ;scankey.c: 53: key->key_state_buffer1 = 0;
"53
[e = . *U _key 1 -> -> 0 `i `uc ]
"54
}
[e :U 16 ]
[; ;scankey.c: 54: }
[; ;scankey.c: 56: break;
"56
[e $U 4  ]
"57
}
[; ;scankey.c: 57: }
[e $U 4  ]
"15
[e :U 5 ]
[e [\ . *U _key 1 , $ -> -> 0 `i `uc 6
 , $ -> -> 1 `i `uc 8
 , $ -> -> 2 `i `uc 11
 , $ -> -> 3 `i `uc 15
 4 ]
"57
[e :U 4 ]
[; ;scankey.c: 58: return key_return;
"58
[e ) _key_return ]
[e $UE 3  ]
[; ;scankey.c: 59: }
"59
[e :UE 3 ]
}
"66
[v _key_read `(uc ~T0 @X0 1 ef1`*S1 ]
{
[; ;scankey.c: 66: unsigned char key_read(struct Keys *key) {
[e :U _key_read ]
[v _key `*S1 ~T0 @X0 1 r1 ]
[f ]
"68
[v _key_return `uc ~T0 @X0 1 a ]
[; ;scankey.c: 68: unsigned char key_return = 0;
[e = _key_return -> -> 0 `i `uc ]
[v _key_read `uc ~T0 @X0 1 a ]
[; ;scankey.c: 69: unsigned char key_read = key_driver(key);
"69
[e = _key_read ( _key_driver (1 _key ]
[; ;scankey.c: 71: switch (key->key_state_buffer2) {
"71
[e $U 19  ]
{
[; ;scankey.c: 72: case 0:
"72
[e :U 20 ]
[; ;scankey.c: 73: if (key_read == 1) {
"73
[e $ ! == -> _key_read `i -> 1 `i 21  ]
{
[; ;scankey.c: 74: key->key_timer_cnt2 = 0;
"74
[e = . *U _key 2 -> -> 0 `i `uc ]
[; ;scankey.c: 75: key->key_state_buffer2 = 1;
"75
[e = . *U _key 3 -> -> 1 `i `uc ]
"76
}
[; ;scankey.c: 76: } else
[e $U 22  ]
[e :U 21 ]
[; ;scankey.c: 77: key_return = key_read;
"77
[e = _key_return _key_read ]
[e :U 22 ]
[; ;scankey.c: 78: break;
"78
[e $U 18  ]
[; ;scankey.c: 80: case 1:
"80
[e :U 23 ]
[; ;scankey.c: 81: if (key_read == 1)
"81
[e $ ! == -> _key_read `i -> 1 `i 24  ]
[; ;scankey.c: 82: {
"82
{
[; ;scankey.c: 83: key_return = 2;
"83
[e = _key_return -> -> 2 `i `uc ]
[; ;scankey.c: 84: key->key_state_buffer2 = 0;
"84
[e = . *U _key 3 -> -> 0 `i `uc ]
"85
}
[; ;scankey.c: 85: } else if (++(key->key_timer_cnt2) >= 50) {
[e $U 25  ]
[e :U 24 ]
[e $ ! >= -> =+ . *U _key 2 -> -> 1 `i `uc `i -> 50 `i 26  ]
{
[; ;scankey.c: 89: key_return = 1;
"89
[e = _key_return -> -> 1 `i `uc ]
[; ;scankey.c: 90: key->key_state_buffer2 = 0;
"90
[e = . *U _key 3 -> -> 0 `i `uc ]
"92
}
[e :U 26 ]
"93
[e :U 25 ]
[; ;scankey.c: 92: }
[; ;scankey.c: 93: break;
[e $U 18  ]
"94
}
[; ;scankey.c: 94: }
[e $U 18  ]
"71
[e :U 19 ]
[e [\ . *U _key 3 , $ -> -> 0 `i `uc 20
 , $ -> -> 1 `i `uc 23
 18 ]
"94
[e :U 18 ]
[; ;scankey.c: 96: return key_return;
"96
[e ) _key_return ]
[e $UE 17  ]
[; ;scankey.c: 97: }
"97
[e :UE 17 ]
}
"100
[v _resetKey `(v ~T0 @X0 1 ef1`*S1 ]
{
[; ;scankey.c: 100: void resetKey(struct Keys *key) {
[e :U _resetKey ]
[v _key `*S1 ~T0 @X0 1 r1 ]
[f ]
[; ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = key->key_state_buffer2 = 0;
"101
[e = . *U _key 0 = . *U _key 2 = . *U _key 1 = . *U _key 3 -> -> 0 `i `uc ]
[; ;scankey.c: 102: }
"102
[e :UE 27 ]
}
