

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 28 19:40:02 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1711C
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	pa_nodes0,global,class=CODE,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMMON
    68  0000                     __pidataCOMMON:	
    69  0017                     _CCP1CON	set	23
    70  0015                     _CCPR1L	set	21
    71  0012                     _T2CON	set	18
    72  000B                     _INTCON	set	11
    73  0007                     _PORTC	set	7
    74  0006                     _PORTB	set	6
    75  0005                     _PORTA	set	5
    76  0001                     _TMR0	set	1
    77  0061                     _TMR2IF	set	97
    78  005A                     _T0IF	set	90
    79  001C                     _TO	set	28
    80  0096                     _IOCB	set	150
    81  0095                     _WPUB	set	149
    82  0092                     _PR2	set	146
    83  008F                     _OSCCON	set	143
    84  0087                     _TRISC	set	135
    85  0086                     _TRISB	set	134
    86  0085                     _TRISA	set	133
    87  0081                     _OPTION_REG	set	129
    88  018F                     _WPUC	set	399
    89  018E                     _WPUA	set	398
    90                           
    91                           	psect	cinit
    92  000B                     start_initialization:	
    93                           ; #config settings
    94                           
    95  000B                     __initialization:	
    96                           
    97                           ;initializer for _FAN_STATUS
    98  000B  3002               	movlw	2
    99  000C  00FA               	movwf	__pdataCOMMON& (0+127)
   100                           
   101                           ;initializer for _currentLevel
   102  000D  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   103                           
   104                           ; Clear objects allocated to BANK0
   105  000E  01B8               	clrf	__pbssBANK0& (0+127)
   106  000F  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   107  0010  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   108  0011  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   109  0012  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   110  0013  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   111  0014  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   112  0015                     end_of_initialization:	
   113                           ;End of C runtime variable initialization code
   114                           
   115  0015                     __end_of__initialization:	
   116  0015  0183               	clrf	3
   117  0016  2817               	ljmp	_main	;jump to C main() function
   118                           
   119                           	psect	dataCOMMON
   120  007A                     __pdataCOMMON:	
   121  007A                     _FAN_STATUS:	
   122  007A                     	ds	1
   123  007B                     _currentLevel:	
   124  007B                     	ds	1
   125                           
   126                           	psect	bssBANK0
   127  0038                     __pbssBANK0:	
   128  0038                     _fan_check_time:	
   129  0038                     	ds	2
   130  003A                     _count10Ms:	
   131  003A                     	ds	2
   132  003C                     _countTime:	
   133  003C                     	ds	2
   134  003E                     _time0Flag:	
   135  003E                     	ds	1
   136                           
   137                           	psect	cstackCOMMON
   138  0070                     __pcstackCOMMON:	
   139  0070                     ?_Init_System:	
   140  0070                     ?_Init_GPIO:	
   141                           ; 1 bytes @ 0x0
   142                           
   143  0070                     ?_Init_Interupt:	
   144                           ; 1 bytes @ 0x0
   145                           
   146  0070                     ?_resetKey:	
   147                           ; 1 bytes @ 0x0
   148                           
   149  0070                     ?_sacnKeyInput:	
   150                           ; 1 bytes @ 0x0
   151                           
   152  0070                     ?_key_read:	
   153                           ; 1 bytes @ 0x0
   154                           
   155  0070                     ?_checkUsbStatus:	
   156                           ; 1 bytes @ 0x0
   157                           
   158  0070                     ?_Init_PWM:	
   159                           ; 1 bytes @ 0x0
   160                           
   161  0070                     ?_setFanLevel:	
   162                           ; 1 bytes @ 0x0
   163                           
   164  0070                     ?_closeFan:	
   165                           ; 1 bytes @ 0x0
   166                           
   167  0070                     ?_checkFan:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0070                     ?_main:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0070                     ?_Timer0_Isr:	
   174                           ; 1 bytes @ 0x0
   175                           
   176  0070                     ??_Timer0_Isr:	
   177                           ; 1 bytes @ 0x0
   178                           
   179  0070                     ?_key_driver:	
   180                           ; 1 bytes @ 0x0
   181                           
   182                           
   183                           ; 1 bytes @ 0x0
   184  0070                     	ds	2
   185  0072                     ?_setLedOn:	
   186  0072                     ??_Init_System:	
   187                           ; 1 bytes @ 0x2
   188                           
   189  0072                     ??_Init_GPIO:	
   190                           ; 1 bytes @ 0x2
   191                           
   192  0072                     ??_Init_Interupt:	
   193                           ; 1 bytes @ 0x2
   194                           
   195  0072                     ??_resetKey:	
   196                           ; 1 bytes @ 0x2
   197                           
   198  0072                     ??_sacnKeyInput:	
   199                           ; 1 bytes @ 0x2
   200                           
   201  0072                     ??_checkUsbStatus:	
   202                           ; 1 bytes @ 0x2
   203                           
   204  0072                     ??_Init_PWM:	
   205                           ; 1 bytes @ 0x2
   206                           
   207  0072                     ??_key_driver:	
   208                           ; 1 bytes @ 0x2
   209                           
   210  0072                     ?___bmul:	
   211                           ; 1 bytes @ 0x2
   212                           
   213  0072                     ?___awdiv:	
   214                           ; 1 bytes @ 0x2
   215                           
   216  0072                     key_driver@key_return:	
   217                           ; 2 bytes @ 0x2
   218                           
   219  0072                     resetKey@key:	
   220                           ; 1 bytes @ 0x2
   221                           
   222  0072                     ___bmul@multiplicand:	
   223                           ; 1 bytes @ 0x2
   224                           
   225  0072                     setLedOn@ledIndex:	
   226                           ; 1 bytes @ 0x2
   227                           
   228  0072                     ___awdiv@divisor:	
   229                           ; 2 bytes @ 0x2
   230                           
   231                           
   232                           ; 2 bytes @ 0x2
   233  0072                     	ds	1
   234  0073                     ??___bmul:	
   235  0073                     key_driver@key_read:	
   236                           ; 1 bytes @ 0x3
   237                           
   238  0073                     ___bmul@product:	
   239                           ; 1 bytes @ 0x3
   240                           
   241                           
   242                           ; 1 bytes @ 0x3
   243  0073                     	ds	1
   244  0074                     ??_setLedOn:	
   245  0074                     ??_closeFan:	
   246                           ; 1 bytes @ 0x4
   247                           
   248  0074                     sacnKeyInput@key:	
   249                           ; 1 bytes @ 0x4
   250                           
   251  0074                     key_driver@key:	
   252                           ; 1 bytes @ 0x4
   253                           
   254  0074                     ___bmul@multiplier:	
   255                           ; 1 bytes @ 0x4
   256                           
   257  0074                     ___awdiv@dividend:	
   258                           ; 1 bytes @ 0x4
   259                           
   260                           
   261                           ; 2 bytes @ 0x4
   262  0074                     	ds	1
   263  0075                     ??_key_read:	
   264  0075                     key_read@key_return:	
   265                           ; 1 bytes @ 0x5
   266                           
   267                           
   268                           ; 1 bytes @ 0x5
   269  0075                     	ds	1
   270  0076                     ??___awdiv:	
   271  0076                     key_read@key_read:	
   272                           ; 1 bytes @ 0x6
   273                           
   274  0076                     ___awdiv@counter:	
   275                           ; 1 bytes @ 0x6
   276                           
   277                           
   278                           ; 1 bytes @ 0x6
   279  0076                     	ds	1
   280  0077                     key_read@key:	
   281  0077                     ___awdiv@sign:	
   282                           ; 1 bytes @ 0x7
   283                           
   284                           
   285                           ; 1 bytes @ 0x7
   286  0077                     	ds	1
   287  0078                     ___awdiv@quotient:	
   288                           
   289                           ; 2 bytes @ 0x8
   290  0078                     	ds	2
   291  007A                     ??_setFanLevel:	
   292  007A                     ??_main:	
   293                           ; 1 bytes @ 0xA
   294                           
   295                           
   296                           	psect	cstackBANK0
   297  0020                     __pcstackBANK0:	
   298                           ; 1 bytes @ 0xA
   299                           
   300  0020                     setFanLevel@level:	
   301                           
   302                           ; 1 bytes @ 0x0
   303  0020                     	ds	1
   304  0021                     setFanLevel@tempLevel:	
   305                           
   306                           ; 1 bytes @ 0x1
   307  0021                     	ds	1
   308  0022                     ??_checkFan:	
   309                           
   310                           ; 1 bytes @ 0x2
   311  0022                     	ds	1
   312  0023                     main@key1:	
   313                           
   314                           ; 7 bytes @ 0x3
   315  0023                     	ds	7
   316  002A                     main@key2:	
   317                           
   318                           ; 7 bytes @ 0xA
   319  002A                     	ds	7
   320  0031                     main@key3:	
   321                           
   322                           ; 7 bytes @ 0x11
   323  0031                     	ds	7
   324                           
   325                           	psect	maintext
   326  0017                     __pmaintext:	
   327 ;;
   328 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   329 ;;
   330 ;; *************** function _main *****************
   331 ;; Defined at:
   332 ;;		line 156 in file "E:\project\scm\uf166fan\main.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;  key3            7   17[BANK0 ] struct Keys
   337 ;;  key2            7   10[BANK0 ] struct Keys
   338 ;;  key1            7    3[BANK0 ] struct Keys
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   343 ;; Tracked objects:
   344 ;;		On entry : B00/0
   345 ;;		On exit  : 300/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMMON   BANK0   BANK1
   348 ;;      Params:         0       0       0
   349 ;;      Locals:         0      21       0
   350 ;;      Temps:          0       0       0
   351 ;;      Totals:         0      21       0
   352 ;;Total ram usage:       21 bytes
   353 ;; Hardware stack levels required when called:    4
   354 ;; This function calls:
   355 ;;		_Init_GPIO
   356 ;;		_Init_Interupt
   357 ;;		_Init_System
   358 ;;		_checkFan
   359 ;;		_checkUsbStatus
   360 ;;		_key_read
   361 ;;		_resetKey
   362 ;;		_sacnKeyInput
   363 ;;		_setFanLevel
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _main
   371  0017                     _main:	
   372                           
   373                           ;main.c: 158: Init_System();
   374                           
   375                           ;incstack = 0
   376                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   377  0017  2244               	fcall	_Init_System
   378                           
   379                           ;main.c: 159: Init_GPIO();
   380  0018  21EB               	fcall	_Init_GPIO
   381                           
   382                           ;main.c: 160: Init_Interupt();
   383  0019  224E               	fcall	_Init_Interupt
   384                           
   385                           ;main.c: 163: IOCB = 0x04;
   386  001A  3004               	movlw	4
   387  001B  1683               	bsf	3,5	;RP0=1, select bank1
   388  001C  0096               	movwf	22	;volatile
   389                           
   390                           ;main.c: 164: TMR0 = 155;
   391  001D  309B               	movlw	155
   392  001E  1283               	bcf	3,5	;RP0=0, select bank0
   393  001F  0081               	movwf	1	;volatile
   394                           
   395                           ;main.c: 165: TO = 0;
   396  0020  1203               	bcf	3,4	;volatile
   397                           
   398                           ;main.c: 167: struct Keys key1,key2,key3;
   399                           ;main.c: 169: key1.key_index = 5;
   400  0021  3005               	movlw	5
   401  0022  00A9               	movwf	main@key1+6
   402                           
   403                           ;main.c: 171: key2.key_index = 4;
   404  0023  3004               	movlw	4
   405  0024  00B0               	movwf	main@key2+6
   406                           
   407                           ;main.c: 173: key3.key_index = 3;
   408  0025  3003               	movlw	3
   409  0026  00B7               	movwf	main@key3+6
   410                           
   411                           ;main.c: 174: resetKey(&key1);
   412  0027  3023               	movlw	(low (main@key1| 0))& (0+255)
   413  0028  21FD               	fcall	_resetKey
   414                           
   415                           ;main.c: 175: resetKey(&key2);
   416  0029  302A               	movlw	(low (main@key2| 0))& (0+255)
   417  002A  21FD               	fcall	_resetKey
   418                           
   419                           ;main.c: 176: resetKey(&key3);
   420  002B  3031               	movlw	(low (main@key3| 0))& (0+255)
   421  002C  21FD               	fcall	_resetKey
   422                           
   423                           ;main.c: 178: TRISA = 0;
   424  002D  1683               	bsf	3,5	;RP0=1, select bank1
   425  002E  1303               	bcf	3,6	;RP1=0, select bank1
   426  002F  0185               	clrf	5	;volatile
   427                           
   428                           ;main.c: 180: TRISB = 0;
   429  0030  0186               	clrf	6	;volatile
   430                           
   431                           ;main.c: 181: PORTB = 0;
   432  0031  1283               	bcf	3,5	;RP0=0, select bank0
   433  0032  0186               	clrf	6	;volatile
   434                           
   435                           ;main.c: 182: TRISC = 0;
   436  0033  1683               	bsf	3,5	;RP0=1, select bank1
   437  0034  0187               	clrf	7	;volatile
   438  0035                     l2491:	
   439                           
   440                           ;main.c: 184: {
   441                           ;main.c: 186: if(time0Flag)
   442  0035  1283               	bcf	3,5	;RP0=0, select bank0
   443  0036  083E               	movf	_time0Flag,w
   444  0037  1903               	btfsc	3,2
   445  0038  284F               	goto	l2509
   446  0039  0064               	clrwdt	;# 
   447                           
   448                           ;main.c: 189: time0Flag = 0;
   449  003A  1283               	bcf	3,5	;RP0=0, select bank0
   450  003B  1303               	bcf	3,6	;RP1=0, select bank0
   451  003C  01BE               	clrf	_time0Flag
   452                           
   453                           ;main.c: 190: key1.key_addr_result = key2.key_addr_result = key3.key_addr_result = PORTB
      +                          ;
   454  003D  0806               	movf	6,w	;volatile
   455  003E  00B6               	movwf	main@key3+5
   456  003F  00AF               	movwf	main@key2+5
   457  0040  00A8               	movwf	main@key1+5
   458                           
   459                           ;main.c: 191: sacnKeyInput(&key1);
   460  0041  3023               	movlw	(low (main@key1| 0))& (0+255)
   461  0042  21B2               	fcall	_sacnKeyInput
   462                           
   463                           ;main.c: 192: sacnKeyInput(&key2);
   464  0043  302A               	movlw	(low (main@key2| 0))& (0+255)
   465  0044  21B2               	fcall	_sacnKeyInput
   466                           
   467                           ;main.c: 193: sacnKeyInput(&key3);
   468  0045  3031               	movlw	(low (main@key3| 0))& (0+255)
   469  0046  21B2               	fcall	_sacnKeyInput
   470                           
   471                           ;main.c: 194: countTime++;
   472  0047  1283               	bcf	3,5	;RP0=0, select bank0
   473  0048  1303               	bcf	3,6	;RP1=0, select bank0
   474  0049  0ABC               	incf	_countTime,f
   475  004A  1903               	skipnz
   476  004B  0ABD               	incf	_countTime+1,f
   477                           
   478                           ;main.c: 195: count10Ms++;
   479  004C  0ABA               	incf	_count10Ms,f
   480  004D  1903               	skipnz
   481  004E  0ABB               	incf	_count10Ms+1,f
   482  004F                     l2509:	
   483                           
   484                           ;main.c: 196: }
   485                           ;main.c: 199: if(count10Ms == 10)
   486  004F  300A               	movlw	10
   487  0050  063A               	xorwf	_count10Ms,w
   488  0051  043B               	iorwf	_count10Ms+1,w
   489  0052  1D03               	btfss	3,2
   490  0053  2871               	goto	l2527
   491                           
   492                           ;main.c: 200: {
   493                           ;main.c: 201: if(key_read(&key1) != 0)
   494  0054  3023               	movlw	(low (main@key1| 0))& (0+255)
   495  0055  2102               	fcall	_key_read
   496  0056  3A00               	xorlw	0
   497  0057  1D03               	btfss	3,2
   498  0058  285D               	goto	l2513
   499                           
   500                           ;main.c: 207: else if(FAN_STATUS == 2)
   501                           
   502                           ;main.c: 206: }
   503  0059  3002               	movlw	2
   504  005A  067A               	xorwf	_FAN_STATUS,w
   505  005B  1D03               	btfss	3,2
   506  005C  285E               	goto	l609
   507  005D                     l2513:	
   508                           
   509                           ;main.c: 202: {
   510                           ;main.c: 204: checkFan();
   511  005D  2137               	fcall	_checkFan
   512  005E                     l609:	
   513                           
   514                           ;main.c: 210: }
   515                           ;main.c: 214: if(key_read(&key2) != 0)
   516  005E  302A               	movlw	(low (main@key2| 0))& (0+255)
   517  005F  2102               	fcall	_key_read
   518  0060  3A00               	xorlw	0
   519  0061  1903               	skipnz
   520  0062  2865               	goto	l611
   521                           
   522                           ;main.c: 215: {
   523                           ;main.c: 217: setFanLevel(1);
   524  0063  3001               	movlw	1
   525  0064  2160               	fcall	_setFanLevel
   526  0065                     l611:	
   527                           
   528                           ;main.c: 218: }
   529                           ;main.c: 220: if(key_read(&key3) != 0)
   530  0065  3031               	movlw	(low (main@key3| 0))& (0+255)
   531  0066  2102               	fcall	_key_read
   532  0067  3A00               	xorlw	0
   533  0068  1903               	skipnz
   534  0069  286C               	goto	l2523
   535                           
   536                           ;main.c: 221: {
   537                           ;main.c: 223: setFanLevel(-1);
   538  006A  30FF               	movlw	255
   539  006B  2160               	fcall	_setFanLevel
   540  006C                     l2523:	
   541                           
   542                           ;main.c: 224: }
   543                           ;main.c: 229: count10Ms = 0;
   544  006C  1283               	bcf	3,5	;RP0=0, select bank0
   545  006D  1303               	bcf	3,6	;RP1=0, select bank0
   546  006E  01BA               	clrf	_count10Ms
   547  006F  01BB               	clrf	_count10Ms+1
   548                           
   549                           ;main.c: 230: checkUsbStatus();
   550  0070  21CF               	fcall	_checkUsbStatus
   551  0071                     l2527:	
   552                           
   553                           ;main.c: 232: }
   554                           ;main.c: 236: if(countTime == 1000)
   555  0071  30E8               	movlw	232
   556  0072  063C               	xorwf	_countTime,w
   557  0073  3003               	movlw	3
   558  0074  1903               	skipnz
   559  0075  063D               	xorwf	_countTime+1,w
   560  0076  1D03               	btfss	3,2
   561  0077  2835               	goto	l2491
   562                           
   563                           ;main.c: 237: {
   564                           ;main.c: 238: countTime = 0;
   565  0078  01BC               	clrf	_countTime
   566  0079  01BD               	clrf	_countTime+1
   567  007A  2835               	goto	l2491
   568  007B                     __end_of_main:	
   569                           
   570                           	psect	text1
   571  01B2                     __ptext1:	
   572 ;; *************** function _sacnKeyInput *****************
   573 ;; Defined at:
   574 ;;		line 3 in file "E:\project\scm\uf166fan\scankey.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;  key             1    wreg     PTR struct Keys
   577 ;;		 -> main@key3(7), main@key2(7), main@key1(7), 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  key             1    4[COMMON] PTR struct Keys
   580 ;;		 -> main@key3(7), main@key2(7), main@key1(7), 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 800/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1
   590 ;;      Params:         0       0       0
   591 ;;      Locals:         1       0       0
   592 ;;      Temps:          2       0       0
   593 ;;      Totals:         3       0       0
   594 ;;Total ram usage:        3 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _sacnKeyInput
   606  01B2                     _sacnKeyInput:	
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _sacnKeyInput: [wreg-fsr0h+status,2+status,0]
   610                           ;sacnKeyInput@key stored from wreg
   611  01B2  00F4               	movwf	sacnKeyInput@key
   612                           
   613                           ;scankey.c: 5: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
   614  01B3  3E05               	addlw	5
   615  01B4  0084               	movwf	4
   616  01B5  1383               	bcf	3,7	;select IRP bank0
   617  01B6  0800               	movf	0,w
   618  01B7  00F2               	movwf	??_sacnKeyInput
   619  01B8  0874               	movf	sacnKeyInput@key,w
   620  01B9  3E06               	addlw	6
   621  01BA  0084               	movwf	4
   622  01BB  0A00               	incf	0,w
   623  01BC  29BF               	goto	u634
   624  01BD                     u635:	
   625  01BD  1003               	clrc
   626  01BE  0CF2               	rrf	??_sacnKeyInput,f
   627  01BF                     u634:	
   628  01BF  3EFF               	addlw	-1
   629  01C0  1D03               	skipz
   630  01C1  29BD               	goto	u635
   631  01C2  0872               	movf	??_sacnKeyInput,w
   632  01C3  00F3               	movwf	??_sacnKeyInput+1
   633  01C4  0874               	movf	sacnKeyInput@key,w
   634  01C5  3E04               	addlw	4
   635  01C6  0084               	movwf	4
   636  01C7  0873               	movf	??_sacnKeyInput+1,w
   637  01C8  0080               	movwf	0
   638  01C9  0874               	movf	sacnKeyInput@key,w
   639  01CA  3E04               	addlw	4
   640  01CB  0084               	movwf	4
   641  01CC  3001               	movlw	1
   642  01CD  0580               	andwf	0,f
   643  01CE  0008               	return
   644  01CF                     __end_of_sacnKeyInput:	
   645                           
   646                           	psect	text2
   647  01FD                     __ptext2:	
   648 ;; *************** function _resetKey *****************
   649 ;; Defined at:
   650 ;;		line 115 in file "E:\project\scm\uf166fan\scankey.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;  key             1    wreg     PTR struct Keys
   653 ;;		 -> main@key3(7), main@key2(7), main@key1(7), 
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  key             1    2[COMMON] PTR struct Keys
   656 ;;		 -> main@key3(7), main@key2(7), main@key1(7), 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 800/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMMON   BANK0   BANK1
   666 ;;      Params:         0       0       0
   667 ;;      Locals:         1       0       0
   668 ;;      Temps:          0       0       0
   669 ;;      Totals:         1       0       0
   670 ;;Total ram usage:        1 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:    1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_main
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           
   681                           ;psect for function _resetKey
   682  01FD                     _resetKey:	
   683                           
   684                           ;incstack = 0
   685                           ; Regs used in _resetKey: [wreg-fsr0h+status,2+status,0]
   686                           ;resetKey@key stored from wreg
   687  01FD  00F2               	movwf	resetKey@key
   688                           
   689                           ;scankey.c: 117: key->key_timer_cnt1 =key->key_timer_cnt2 = key->key_state_buffer1 = key
      +                          ->key_state_buffer2 = 0;
   690  01FE  3E03               	addlw	3
   691  01FF  0084               	movwf	4
   692  0200  1383               	bcf	3,7	;select IRP bank0
   693  0201  0180               	clrf	0
   694  0202  0A72               	incf	resetKey@key,w
   695  0203  0084               	movwf	4
   696  0204  0180               	clrf	0
   697  0205  0872               	movf	resetKey@key,w
   698  0206  3E02               	addlw	2
   699  0207  0084               	movwf	4
   700  0208  0180               	clrf	0
   701  0209  0872               	movf	resetKey@key,w
   702  020A  0084               	movwf	4
   703  020B  0180               	clrf	0
   704  020C  0008               	return
   705  020D                     __end_of_resetKey:	
   706                           
   707                           	psect	text3
   708  0102                     __ptext3:	
   709 ;; *************** function _key_read *****************
   710 ;; Defined at:
   711 ;;		line 75 in file "E:\project\scm\uf166fan\scankey.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  key             1    wreg     PTR struct Keys
   714 ;;		 -> main@key3(7), main@key2(7), main@key1(7), 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  key             1    7[COMMON] PTR struct Keys
   717 ;;		 -> main@key3(7), main@key2(7), main@key1(7), 
   718 ;;  key_read        1    6[COMMON] unsigned char 
   719 ;;  key_return      1    5[COMMON] unsigned char 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      unsigned char 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 800/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1
   729 ;;      Params:         0       0       0
   730 ;;      Locals:         3       0       0
   731 ;;      Temps:          0       0       0
   732 ;;      Totals:         3       0       0
   733 ;;Total ram usage:        3 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; Hardware stack levels required when called:    2
   736 ;; This function calls:
   737 ;;		_key_driver
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _key_read
   745  0102                     _key_read:	
   746                           
   747                           ;incstack = 0
   748                           ; Regs used in _key_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   749                           ;key_read@key stored from wreg
   750  0102  00F7               	movwf	key_read@key
   751                           
   752                           ;scankey.c: 78: unsigned char key_return = 0;
   753  0103  01F5               	clrf	key_read@key_return
   754                           
   755                           ;scankey.c: 79: unsigned char key_read = key_driver(key);
   756  0104  20C0               	fcall	_key_driver
   757  0105  00F6               	movwf	key_read@key_read
   758                           
   759                           ;scankey.c: 81: switch(key->key_state_buffer2)
   760  0106  292A               	goto	l2201
   761  0107                     l2181:	
   762                           
   763                           ;scankey.c: 84: if(key_read == 1)
   764  0107  0B76               	decfsz	key_read@key_read,w
   765  0108  2913               	goto	l2185
   766                           
   767                           ;scankey.c: 85: {
   768                           ;scankey.c: 86: key->key_timer_cnt2 = 0;
   769  0109  0877               	movf	key_read@key,w
   770  010A  3E02               	addlw	2
   771  010B  0084               	movwf	4
   772  010C  0180               	clrf	0
   773                           
   774                           ;scankey.c: 87: key->key_state_buffer2 = 1;
   775  010D  0877               	movf	key_read@key,w
   776  010E  3E03               	addlw	3
   777  010F  0084               	movwf	4
   778  0110  0180               	clrf	0
   779  0111  0A80               	incf	0,f
   780                           
   781                           ;scankey.c: 88: }
   782  0112  2935               	goto	l2203
   783  0113                     l2185:	
   784                           
   785                           ;scankey.c: 89: else
   786                           ;scankey.c: 90: key_return = key_read;
   787  0113  0876               	movf	key_read@key_read,w
   788  0114  00F5               	movwf	key_read@key_return
   789  0115  2935               	goto	l2203
   790  0116                     l2187:	
   791                           
   792                           ;scankey.c: 94: if(key_read == 1)
   793  0116  0B76               	decfsz	key_read@key_read,w
   794  0117  291B               	goto	l2193
   795                           
   796                           ;scankey.c: 95: {
   797                           ;scankey.c: 96: key_return = 2;
   798  0118  3002               	movlw	2
   799  0119  00F5               	movwf	key_read@key_return
   800  011A  2925               	goto	l2197
   801  011B                     l2193:	
   802                           ;scankey.c: 98: }
   803                           
   804                           ;scankey.c: 97: key->key_state_buffer2 = 0;
   805                           
   806                           
   807                           ;scankey.c: 99: else if(++(key->key_timer_cnt2) >= 50)
   808  011B  0877               	movf	key_read@key,w
   809  011C  3E02               	addlw	2
   810  011D  0084               	movwf	4
   811  011E  3032               	movlw	50
   812  011F  0A80               	incf	0,f
   813  0120  0200               	subwf	0,w
   814  0121  1C03               	skipc
   815  0122  2935               	goto	l2203
   816                           
   817                           ;scankey.c: 100: {
   818                           ;scankey.c: 104: key_return = 1;
   819  0123  01F5               	clrf	key_read@key_return
   820  0124  0AF5               	incf	key_read@key_return,f
   821  0125                     l2197:	
   822                           
   823                           ;scankey.c: 105: key->key_state_buffer2 = 0;
   824  0125  0877               	movf	key_read@key,w
   825  0126  3E03               	addlw	3
   826  0127  0084               	movwf	4
   827  0128  0180               	clrf	0
   828  0129  2935               	goto	l2203
   829  012A                     l2201:	
   830  012A  0877               	movf	key_read@key,w
   831  012B  3E03               	addlw	3
   832  012C  0084               	movwf	4
   833  012D  0800               	movf	0,w
   834                           
   835                           ; Switch size 1, requested type "space"
   836                           ; Number of cases is 2, Range of values is 0 to 1
   837                           ; switch strategies available:
   838                           ; Name         Instructions Cycles
   839                           ; simple_byte            7     4 (average)
   840                           ; direct_byte            8     6 (fixed)
   841                           ; jumptable            260     6 (fixed)
   842                           ;	Chosen strategy is simple_byte
   843  012E  3A00               	xorlw	0	; case 0
   844  012F  1903               	skipnz
   845  0130  2907               	goto	l2181
   846  0131  3A01               	xorlw	1	; case 1
   847  0132  1903               	skipnz
   848  0133  2916               	goto	l2187
   849  0134  2935               	goto	l2203
   850  0135                     l2203:	
   851                           
   852                           ;scankey.c: 111: return key_return;
   853  0135  0875               	movf	key_read@key_return,w
   854  0136  0008               	return
   855  0137                     __end_of_key_read:	
   856                           
   857                           	psect	text4
   858  00C0                     __ptext4:	
   859 ;; *************** function _key_driver *****************
   860 ;; Defined at:
   861 ;;		line 10 in file "E:\project\scm\uf166fan\scankey.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  key             1    wreg     PTR struct Keys
   864 ;;		 -> main@key3(7), main@key2(7), main@key1(7), 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  key             1    4[COMMON] PTR struct Keys
   867 ;;		 -> main@key3(7), main@key2(7), main@key1(7), 
   868 ;;  key_read        1    3[COMMON] unsigned char 
   869 ;;  key_return      1    2[COMMON] unsigned char 
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      unsigned char 
   872 ;; Registers used:
   873 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 800/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1
   879 ;;      Params:         0       0       0
   880 ;;      Locals:         3       0       0
   881 ;;      Temps:          0       0       0
   882 ;;      Totals:         3       0       0
   883 ;;Total ram usage:        3 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_key_read
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _key_driver
   895  00C0                     _key_driver:	
   896                           
   897                           ;incstack = 0
   898                           ; Regs used in _key_driver: [wreg-fsr0h+status,2+status,0]
   899                           ;key_driver@key stored from wreg
   900  00C0  00F4               	movwf	key_driver@key
   901                           
   902                           ;scankey.c: 14: unsigned char key_return = 0;
   903  00C1  01F2               	clrf	key_driver@key_return
   904                           
   905                           ;scankey.c: 15: unsigned char key_read = key->key_input;
   906  00C2  3E04               	addlw	4
   907  00C3  0084               	movwf	4
   908  00C4  1383               	bcf	3,7	;select IRP bank0
   909  00C5  0800               	movf	0,w
   910  00C6  00F3               	movwf	key_driver@key_read
   911                           
   912                           ;scankey.c: 17: switch(key->key_state_buffer1)
   913  00C7  28F3               	goto	l2095
   914  00C8                     l2065:	
   915                           
   916                           ;scankey.c: 20: if(key_read == 0)
   917  00C8  0873               	movf	key_driver@key_read,w
   918  00C9  1D03               	btfss	3,2
   919  00CA  2900               	goto	l2097
   920                           
   921                           ;scankey.c: 21: {
   922                           ;scankey.c: 22: key->key_state_buffer1 = 1;
   923  00CB  0A74               	incf	key_driver@key,w
   924  00CC  0084               	movwf	4
   925  00CD  0180               	clrf	0
   926  00CE  0A80               	incf	0,f
   927  00CF  2900               	goto	l2097
   928  00D0                     l2069:	
   929                           
   930                           ;scankey.c: 29: if(key_read == 0)
   931  00D0  0873               	movf	key_driver@key_read,w
   932  00D1  1D03               	btfss	3,2
   933  00D2  28EF               	goto	l2091
   934                           
   935                           ;scankey.c: 30: {
   936                           ;scankey.c: 31: key->key_timer_cnt1 = 0;
   937  00D3  0874               	movf	key_driver@key,w
   938  00D4  0084               	movwf	4
   939  00D5  0180               	clrf	0
   940                           
   941                           ;scankey.c: 32: key->key_state_buffer1 = 2;
   942  00D6  0A74               	incf	key_driver@key,w
   943  00D7  0084               	movwf	4
   944  00D8  3002               	movlw	2
   945  00D9  28EB               	goto	L1
   946  00DA                     l2077:	
   947                           ;scankey.c: 37: else
   948                           ;scankey.c: 38: {
   949                           ;scankey.c: 39: key->key_state_buffer1 = 0;
   950                           
   951                           ;scankey.c: 36: }
   952                           
   953                           
   954                           ;scankey.c: 46: if(key_read == 1)
   955  00DA  0B73               	decfsz	key_driver@key_read,w
   956  00DB  28DF               	goto	l2083
   957                           
   958                           ;scankey.c: 47: {
   959                           ;scankey.c: 48: key_return = 1;
   960  00DC  01F2               	clrf	key_driver@key_return
   961  00DD  0AF2               	incf	key_driver@key_return,f
   962  00DE  28EF               	goto	l2091
   963  00DF                     l2083:	
   964                           ;scankey.c: 50: }
   965                           
   966                           ;scankey.c: 49: key->key_state_buffer1 = 0;
   967                           
   968                           
   969                           ;scankey.c: 51: else if(++(key->key_timer_cnt1) >= 100)
   970  00DF  0874               	movf	key_driver@key,w
   971  00E0  0084               	movwf	4
   972  00E1  3064               	movlw	100
   973  00E2  0A80               	incf	0,f
   974  00E3  0200               	subwf	0,w
   975  00E4  1C03               	skipc
   976  00E5  2900               	goto	l2097
   977                           
   978                           ;scankey.c: 52: {
   979                           ;scankey.c: 53: key_return = 3;
   980  00E6  3003               	movlw	3
   981  00E7  00F2               	movwf	key_driver@key_return
   982                           
   983                           ;scankey.c: 54: key->key_state_buffer1 = 3;
   984  00E8  0A74               	incf	key_driver@key,w
   985  00E9  0084               	movwf	4
   986  00EA  3003               	movlw	3
   987  00EB                     L1:	
   988  00EB  0080               	movwf	0
   989  00EC  2900               	goto	l2097
   990  00ED                     l2089:	
   991                           
   992                           ;scankey.c: 60: if(key_read == 1)
   993  00ED  0B73               	decfsz	key_driver@key_read,w
   994  00EE  2900               	goto	l2097
   995  00EF                     l2091:	
   996                           
   997                           ;scankey.c: 61: {
   998                           ;scankey.c: 62: key->key_state_buffer1 = 0;
   999  00EF  0A74               	incf	key_driver@key,w
  1000  00F0  0084               	movwf	4
  1001  00F1  0180               	clrf	0
  1002  00F2  2900               	goto	l2097
  1003  00F3                     l2095:	
  1004  00F3  0A74               	incf	key_driver@key,w
  1005  00F4  0084               	movwf	4
  1006  00F5  0800               	movf	0,w
  1007                           
  1008                           ; Switch size 1, requested type "space"
  1009                           ; Number of cases is 4, Range of values is 0 to 3
  1010                           ; switch strategies available:
  1011                           ; Name         Instructions Cycles
  1012                           ; direct_byte           10     6 (fixed)
  1013                           ; simple_byte           13     7 (average)
  1014                           ; jumptable            260     6 (fixed)
  1015                           ;	Chosen strategy is direct_byte
  1016  00F6  0084               	movwf	4
  1017  00F7  3004               	movlw	4
  1018  00F8  0204               	subwf	4,w
  1019  00F9  1803               	skipnc
  1020  00FA  2900               	goto	l2097
  1021  00FB  3002               	movlw	high S2581
  1022  00FC  008A               	movwf	10
  1023  00FD  3054               	movlw	low S2581
  1024  00FE  0704               	addwf	4,w
  1025  00FF  0082               	movwf	2
  1026  0100                     l2097:	
  1027                           
  1028                           ;scankey.c: 67: return key_return;
  1029  0100  0872               	movf	key_driver@key_return,w
  1030  0101  0008               	return
  1031  0102                     __end_of_key_driver:	
  1032                           
  1033                           	psect	swtext1
  1034  0254                     __pswtext1:	
  1035  0254                     S2581:	
  1036  0254  28C8               	ljmp	l2065
  1037  0255  28D0               	ljmp	l2069
  1038  0256  28DA               	ljmp	l2077
  1039  0257  28ED               	ljmp	l2089
  1040                           
  1041                           	psect	text5
  1042  01CF                     __ptext5:	
  1043 ;; *************** function _checkUsbStatus *****************
  1044 ;; Defined at:
  1045 ;;		line 28 in file "E:\project\scm\uf166fan\main.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;		None
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0
  1054 ;; Tracked objects:
  1055 ;;		On entry : 300/0
  1056 ;;		On exit  : 300/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1
  1059 ;;      Params:         0       0       0
  1060 ;;      Locals:         0       0       0
  1061 ;;      Temps:          1       0       0
  1062 ;;      Totals:         1       0       0
  1063 ;;Total ram usage:        1 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _checkUsbStatus
  1075  01CF                     _checkUsbStatus:	
  1076                           
  1077                           ;main.c: 30: if(((PORTB) >> (2)&1) == 1){
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in _checkUsbStatus: [wreg+status,2+status,0]
  1081  01CF  0806               	movf	6,w	;volatile
  1082  01D0  00F2               	movwf	??_checkUsbStatus
  1083  01D1  1003               	clrc
  1084  01D2  0CF2               	rrf	??_checkUsbStatus,f
  1085  01D3  1003               	clrc
  1086  01D4  0CF2               	rrf	??_checkUsbStatus,f
  1087  01D5  1C72               	btfss	??_checkUsbStatus,0
  1088  01D6  29E9               	goto	l565
  1089                           
  1090                           ;main.c: 31: if(((PORTB) >> (1)&1) == 1){
  1091  01D7  0806               	movf	6,w	;volatile
  1092  01D8  00F2               	movwf	??_checkUsbStatus
  1093  01D9  1003               	clrc
  1094  01DA  0CF2               	rrf	??_checkUsbStatus,f
  1095  01DB  1C72               	btfss	??_checkUsbStatus,0
  1096  01DC  29DF               	goto	l2113
  1097                           
  1098                           ;main.c: 33: PORTA&=~(1<<0);
  1099  01DD  1005               	bcf	5,0	;volatile
  1100                           
  1101                           ;main.c: 34: }else if(countTime == 1000){
  1102  01DE  0008               	return
  1103  01DF                     l2113:	
  1104  01DF  30E8               	movlw	232
  1105  01E0  063C               	xorwf	_countTime,w
  1106  01E1  3003               	movlw	3
  1107  01E2  1903               	skipnz
  1108  01E3  063D               	xorwf	_countTime+1,w
  1109  01E4  1D03               	btfss	3,2
  1110  01E5  0008               	return
  1111                           
  1112                           ;main.c: 36: PORTA^=(1<<0);
  1113  01E6  3001               	movlw	1
  1114  01E7  0685               	xorwf	5,f	;volatile
  1115  01E8  0008               	return
  1116  01E9                     l565:	
  1117                           
  1118                           ;main.c: 40: PORTA|=(1<<0);
  1119  01E9  1405               	bsf	5,0	;volatile
  1120  01EA  0008               	return
  1121  01EB                     __end_of_checkUsbStatus:	
  1122                           
  1123                           	psect	text6
  1124  0137                     __ptext6:	
  1125 ;; *************** function _checkFan *****************
  1126 ;; Defined at:
  1127 ;;		line 94 in file "E:\project\scm\uf166fan\main.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 800/0
  1138 ;;		On exit  : 300/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1
  1141 ;;      Params:         0       0       0
  1142 ;;      Locals:         0       0       0
  1143 ;;      Temps:          0       1       0
  1144 ;;      Totals:         0       1       0
  1145 ;;Total ram usage:        1 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    3
  1148 ;; This function calls:
  1149 ;;		_closeFan
  1150 ;;		_setFanLevel
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function _checkFan
  1158  0137                     _checkFan:	
  1159                           
  1160                           ;main.c: 96: PORTA|=(1<<1);
  1161                           
  1162                           ;incstack = 0
  1163                           ; Regs used in _checkFan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1164  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0139  1485               	bsf	5,1	;volatile
  1167                           
  1168                           ;main.c: 97: setFanLevel(0);
  1169  013A  3000               	movlw	0
  1170  013B  2160               	fcall	_setFanLevel
  1171                           
  1172                           ;main.c: 98: T2CON = 0X04;
  1173  013C  3004               	movlw	4
  1174  013D  0092               	movwf	18	;volatile
  1175                           
  1176                           ;main.c: 100: if(FAN_STATUS == 1)
  1177  013E  0B7A               	decfsz	_FAN_STATUS,w
  1178  013F  294C               	goto	l2447
  1179  0140  294B               	goto	l2443
  1180  0141                     l2449:	
  1181                           
  1182                           ;main.c: 107: {
  1183                           ;main.c: 108: fan_check_time++;
  1184  0141  0AB8               	incf	_fan_check_time,f
  1185  0142  1903               	skipnz
  1186  0143  0AB9               	incf	_fan_check_time+1,f
  1187                           
  1188                           ;main.c: 109: if(fan_check_time == 3000)
  1189  0144  30B8               	movlw	184
  1190  0145  0638               	xorwf	_fan_check_time,w
  1191  0146  300B               	movlw	11
  1192  0147  1903               	skipnz
  1193  0148  0639               	xorwf	_fan_check_time+1,w
  1194  0149  1D03               	btfss	3,2
  1195  014A  2950               	goto	l2457
  1196  014B                     l2443:	
  1197                           
  1198                           ;main.c: 101: {
  1199                           ;main.c: 102: closeFan();
  1200  014B  2A38               	ljmp	l2423
  1201  014C                     l2447:	
  1202                           
  1203                           ;main.c: 104: }
  1204                           ;main.c: 106: if(FAN_STATUS == 2)
  1205  014C  3002               	movlw	2
  1206  014D  067A               	xorwf	_FAN_STATUS,w
  1207  014E  1903               	btfsc	3,2
  1208  014F  2941               	goto	l2449
  1209  0150                     l2457:	
  1210                           
  1211                           ;main.c: 113: }
  1212                           ;main.c: 114: }
  1213                           ;main.c: 116: if(((PORTB) >> (6)&1) == 0)
  1214  0150  0806               	movf	6,w	;volatile
  1215  0151  00A2               	movwf	??_checkFan
  1216  0152  3006               	movlw	6
  1217  0153                     u905:	
  1218  0153  1003               	clrc
  1219  0154  0CA2               	rrf	??_checkFan,f
  1220  0155  3EFF               	addlw	-1
  1221  0156  1D03               	skipz
  1222  0157  2953               	goto	u905
  1223  0158  1822               	btfsc	??_checkFan,0
  1224  0159  295D               	goto	l2461
  1225                           
  1226                           ;main.c: 117: {
  1227                           ;main.c: 118: FAN_STATUS = 1;
  1228  015A  01FA               	clrf	_FAN_STATUS
  1229  015B  0AFA               	incf	_FAN_STATUS,f
  1230                           
  1231                           ;main.c: 119: }else
  1232  015C  0008               	return
  1233  015D                     l2461:	
  1234                           
  1235                           ;main.c: 120: {
  1236                           ;main.c: 121: FAN_STATUS = 2;
  1237  015D  3002               	movlw	2
  1238  015E  00FA               	movwf	_FAN_STATUS
  1239  015F  0008               	return
  1240  0160                     __end_of_checkFan:	
  1241                           
  1242                           	psect	text7
  1243  0160                     __ptext7:	
  1244 ;; *************** function _setFanLevel *****************
  1245 ;; Defined at:
  1246 ;;		line 57 in file "E:\project\scm\uf166fan\main.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  level           1    wreg     unsigned char 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  level           1    0[BANK0 ] unsigned char 
  1251 ;;  levelWidth      2    0        unsigned int 
  1252 ;;  tempLevel       1    1[BANK0 ] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 800/0
  1259 ;;		On exit  : 300/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1
  1262 ;;      Params:         0       0       0
  1263 ;;      Locals:         0       2       0
  1264 ;;      Temps:          0       0       0
  1265 ;;      Totals:         0       2       0
  1266 ;;Total ram usage:        2 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    2
  1269 ;; This function calls:
  1270 ;;		___awdiv
  1271 ;;		___bmul
  1272 ;;		_setLedOn
  1273 ;; This function is called by:
  1274 ;;		_checkFan
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           
  1280                           ;psect for function _setFanLevel
  1281  0160                     _setFanLevel:	
  1282                           
  1283                           ;incstack = 0
  1284                           ; Regs used in _setFanLevel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1285                           ;setFanLevel@level stored from wreg
  1286  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0162  00A0               	movwf	setFanLevel@level
  1289                           
  1290                           ;main.c: 60: unsigned int levelWidth = (PR2+1)/4;
  1291  0163  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0164  0812               	movf	18,w	;volatile
  1293  0165  00F4               	movwf	___awdiv@dividend
  1294  0166  01F5               	clrf	___awdiv@dividend+1
  1295  0167  0AF4               	incf	___awdiv@dividend,f
  1296  0168  1903               	skipnz
  1297  0169  0AF5               	incf	___awdiv@dividend+1,f
  1298  016A  3004               	movlw	4
  1299  016B  00F2               	movwf	___awdiv@divisor
  1300  016C  01F3               	clrf	___awdiv@divisor+1
  1301  016D  207B               	fcall	___awdiv
  1302                           
  1303                           ;main.c: 61: char tempLevel = currentLevel + level;
  1304  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1305  016F  0820               	movf	setFanLevel@level,w
  1306  0170  077B               	addwf	_currentLevel,w
  1307  0171  00A1               	movwf	setFanLevel@tempLevel
  1308                           
  1309                           ;main.c: 62: if(tempLevel > 4)
  1310  0172  3005               	movlw	5
  1311  0173  0221               	subwf	setFanLevel@tempLevel,w
  1312  0174  1C03               	skipc
  1313  0175  2978               	goto	l2411
  1314                           
  1315                           ;main.c: 63: {
  1316                           ;main.c: 64: tempLevel = 4;
  1317  0176  3004               	movlw	4
  1318  0177  00A1               	movwf	setFanLevel@tempLevel
  1319  0178                     l2411:	
  1320                           
  1321                           ;main.c: 65: }
  1322                           ;main.c: 67: if(tempLevel < 1)
  1323  0178  0821               	movf	setFanLevel@tempLevel,w
  1324  0179  1D03               	btfss	3,2
  1325  017A  297D               	goto	l2415
  1326                           
  1327                           ;main.c: 68: {
  1328                           ;main.c: 69: tempLevel = 1;
  1329  017B  01A1               	clrf	setFanLevel@tempLevel
  1330  017C  0AA1               	incf	setFanLevel@tempLevel,f
  1331  017D                     l2415:	
  1332                           
  1333                           ;main.c: 70: }
  1334                           ;main.c: 71: currentLevel = tempLevel;
  1335  017D  0821               	movf	setFanLevel@tempLevel,w
  1336  017E  00FB               	movwf	_currentLevel
  1337                           
  1338                           ;main.c: 72: CCPR1L = tempLevel*currentLevel;
  1339  017F  00F2               	movwf	___bmul@multiplicand
  1340  0180  0821               	movf	setFanLevel@tempLevel,w
  1341  0181  221D               	fcall	___bmul
  1342  0182  0095               	movwf	21	;volatile
  1343                           
  1344                           ;main.c: 73: if(FAN_STATUS == 1)
  1345  0183  0B7A               	decfsz	_FAN_STATUS,w
  1346  0184  0008               	return
  1347                           
  1348                           ;main.c: 74: {
  1349                           ;main.c: 75: setLedOn(currentLevel);
  1350  0185  087B               	movf	_currentLevel,w
  1351  0186  00F2               	movwf	setLedOn@ledIndex
  1352  0187  01F3               	clrf	setLedOn@ledIndex+1
  1353  0188  2989               	ljmp	l2333
  1354  0189                     __end_of_setFanLevel:	
  1355                           
  1356                           	psect	text8
  1357  021D                     __ptext8:	
  1358 ;; *************** function ___bmul *****************
  1359 ;; Defined at:
  1360 ;;		line 4 in file "E:\cms\SCMCU_IDE_V2.00.07\data\sources\common\Umul8.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  multiplier      1    wreg     unsigned char 
  1363 ;;  multiplicand    1    2[COMMON] unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  multiplier      1    4[COMMON] unsigned char 
  1366 ;;  product         1    3[COMMON] unsigned char 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  1    wreg      unsigned char 
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : B00/0
  1373 ;;		On exit  : B00/0
  1374 ;;		Unchanged: B00/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1
  1376 ;;      Params:         1       0       0
  1377 ;;      Locals:         2       0       0
  1378 ;;      Temps:          0       0       0
  1379 ;;      Totals:         3       0       0
  1380 ;;Total ram usage:        3 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    1
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_setFanLevel
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function ___bmul
  1392  021D                     ___bmul:	
  1393                           
  1394                           ;incstack = 0
  1395                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1396                           ;___bmul@multiplier stored from wreg
  1397  021D  00F4               	movwf	___bmul@multiplier
  1398  021E  01F3               	clrf	___bmul@product
  1399  021F                     l2347:	
  1400  021F  0872               	movf	___bmul@multiplicand,w
  1401  0220  1874               	btfsc	___bmul@multiplier,0
  1402  0221  07F3               	addwf	___bmul@product,f
  1403  0222  1003               	clrc
  1404  0223  0DF2               	rlf	___bmul@multiplicand,f
  1405  0224  1003               	clrc
  1406  0225  0CF4               	rrf	___bmul@multiplier,f
  1407  0226  0874               	movf	___bmul@multiplier,w
  1408  0227  1D03               	btfss	3,2
  1409  0228  2A1F               	goto	l2347
  1410  0229  0873               	movf	___bmul@product,w
  1411  022A  0008               	return
  1412  022B                     __end_of___bmul:	
  1413                           
  1414                           	psect	text9
  1415  007B                     __ptext9:	
  1416 ;; *************** function ___awdiv *****************
  1417 ;; Defined at:
  1418 ;;		line 6 in file "E:\cms\SCMCU_IDE_V2.00.07\data\sources\common\awdiv.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  divisor         2    2[COMMON] int 
  1421 ;;  dividend        2    4[COMMON] int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  quotient        2    8[COMMON] int 
  1424 ;;  sign            1    7[COMMON] unsigned char 
  1425 ;;  counter         1    6[COMMON] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  2    2[COMMON] int 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0
  1430 ;; Tracked objects:
  1431 ;;		On entry : B00/100
  1432 ;;		On exit  : B00/100
  1433 ;;		Unchanged: B00/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1
  1435 ;;      Params:         4       0       0
  1436 ;;      Locals:         4       0       0
  1437 ;;      Temps:          0       0       0
  1438 ;;      Totals:         8       0       0
  1439 ;;Total ram usage:        8 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_setFanLevel
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function ___awdiv
  1451  007B                     ___awdiv:	
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1455  007B  01F7               	clrf	___awdiv@sign
  1456  007C  1FF3               	btfss	___awdiv@divisor+1,7
  1457  007D  2885               	goto	l2367
  1458  007E  09F2               	comf	___awdiv@divisor,f
  1459  007F  09F3               	comf	___awdiv@divisor+1,f
  1460  0080  0AF2               	incf	___awdiv@divisor,f
  1461  0081  1903               	skipnz
  1462  0082  0AF3               	incf	___awdiv@divisor+1,f
  1463  0083  01F7               	clrf	___awdiv@sign
  1464  0084  0AF7               	incf	___awdiv@sign,f
  1465  0085                     l2367:	
  1466  0085  1FF5               	btfss	___awdiv@dividend+1,7
  1467  0086  288E               	goto	l2373
  1468  0087  09F4               	comf	___awdiv@dividend,f
  1469  0088  09F5               	comf	___awdiv@dividend+1,f
  1470  0089  0AF4               	incf	___awdiv@dividend,f
  1471  008A  1903               	skipnz
  1472  008B  0AF5               	incf	___awdiv@dividend+1,f
  1473  008C  3001               	movlw	1
  1474  008D  06F7               	xorwf	___awdiv@sign,f
  1475  008E                     l2373:	
  1476  008E  01F8               	clrf	___awdiv@quotient
  1477  008F  01F9               	clrf	___awdiv@quotient+1
  1478  0090  0872               	movf	___awdiv@divisor,w
  1479  0091  0473               	iorwf	___awdiv@divisor+1,w
  1480  0092  1903               	btfsc	3,2
  1481  0093  28B3               	goto	l2395
  1482  0094  01F6               	clrf	___awdiv@counter
  1483  0095                     L2:	
  1484  0095  0AF6               	incf	___awdiv@counter,f
  1485  0096  1BF3               	btfsc	___awdiv@divisor+1,7
  1486  0097  289C               	goto	l2383
  1487  0098  1003               	clrc
  1488  0099  0DF2               	rlf	___awdiv@divisor,f
  1489  009A  0DF3               	rlf	___awdiv@divisor+1,f
  1490  009B  2895               	goto	L2
  1491  009C                     l2383:	
  1492  009C  1003               	clrc
  1493  009D  0DF8               	rlf	___awdiv@quotient,f
  1494  009E  0DF9               	rlf	___awdiv@quotient+1,f
  1495  009F  0873               	movf	___awdiv@divisor+1,w
  1496  00A0  0275               	subwf	___awdiv@dividend+1,w
  1497  00A1  1D03               	skipz
  1498  00A2  28A5               	goto	u815
  1499  00A3  0872               	movf	___awdiv@divisor,w
  1500  00A4  0274               	subwf	___awdiv@dividend,w
  1501  00A5                     u815:	
  1502  00A5  1C03               	skipc
  1503  00A6  28AF               	goto	L3
  1504  00A7  0872               	movf	___awdiv@divisor,w
  1505  00A8  02F4               	subwf	___awdiv@dividend,f
  1506  00A9  0873               	movf	___awdiv@divisor+1,w
  1507  00AA  1C03               	skipc
  1508  00AB  03F5               	decf	___awdiv@dividend+1,f
  1509  00AC  02F5               	subwf	___awdiv@dividend+1,f
  1510  00AD  1478               	bsf	___awdiv@quotient,0
  1511  00AE  1003               	clrc
  1512  00AF                     L3:	
  1513  00AF  0CF3               	rrf	___awdiv@divisor+1,f
  1514  00B0  0CF2               	rrf	___awdiv@divisor,f
  1515  00B1  0BF6               	decfsz	___awdiv@counter,f
  1516  00B2  289C               	goto	l2383
  1517  00B3                     l2395:	
  1518  00B3  0877               	movf	___awdiv@sign,w
  1519  00B4  1903               	btfsc	3,2
  1520  00B5  28BB               	goto	l2399
  1521  00B6  09F8               	comf	___awdiv@quotient,f
  1522  00B7  09F9               	comf	___awdiv@quotient+1,f
  1523  00B8  0AF8               	incf	___awdiv@quotient,f
  1524  00B9  1903               	skipnz
  1525  00BA  0AF9               	incf	___awdiv@quotient+1,f
  1526  00BB                     l2399:	
  1527  00BB  0879               	movf	___awdiv@quotient+1,w
  1528  00BC  00F3               	movwf	?___awdiv+1
  1529  00BD  0878               	movf	___awdiv@quotient,w
  1530  00BE  00F2               	movwf	?___awdiv
  1531  00BF  0008               	return
  1532  00C0                     __end_of___awdiv:	
  1533                           
  1534                           	psect	text10
  1535  0238                     __ptext10:	
  1536 ;; *************** function _closeFan *****************
  1537 ;; Defined at:
  1538 ;;		line 81 in file "E:\project\scm\uf166fan\main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 300/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1
  1552 ;;      Params:         0       0       0
  1553 ;;      Locals:         0       0       0
  1554 ;;      Temps:          0       0       0
  1555 ;;      Totals:         0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    2
  1559 ;; This function calls:
  1560 ;;		_Init_PWM
  1561 ;;		_setLedOn
  1562 ;; This function is called by:
  1563 ;;		_checkFan
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _closeFan
  1569  0238                     _closeFan:	
  1570  0238                     l2423:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _closeFan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1573                           
  1574                           
  1575                           ;main.c: 83: Init_PWM();
  1576  0238  222B               	fcall	_Init_PWM
  1577                           
  1578                           ;main.c: 84: currentLevel = 2;
  1579  0239  3002               	movlw	2
  1580  023A  00FB               	movwf	_currentLevel
  1581                           
  1582                           ;main.c: 85: setLedOn(5);
  1583  023B  3005               	movlw	5
  1584  023C  00F2               	movwf	setLedOn@ledIndex
  1585  023D  01F3               	clrf	setLedOn@ledIndex+1
  1586  023E  2189               	fcall	_setLedOn
  1587                           
  1588                           ;main.c: 86: PORTA|=(1<<0);
  1589  023F  1405               	bsf	5,0	;volatile
  1590                           
  1591                           ;main.c: 87: fan_check_time = 0;
  1592  0240  01B8               	clrf	_fan_check_time
  1593  0241  01B9               	clrf	_fan_check_time+1
  1594                           
  1595                           ;main.c: 88: FAN_STATUS = 0;
  1596  0242  01FA               	clrf	_FAN_STATUS
  1597  0243  0008               	return
  1598  0244                     __end_of_closeFan:	
  1599                           
  1600                           	psect	text11
  1601  0189                     __ptext11:	
  1602 ;; *************** function _setLedOn *****************
  1603 ;; Defined at:
  1604 ;;		line 132 in file "E:\project\scm\uf166fan\main.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  ledIndex        2    2[COMMON] int 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 300/0
  1615 ;;		On exit  : 300/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMMON   BANK0   BANK1
  1618 ;;      Params:         2       0       0
  1619 ;;      Locals:         0       0       0
  1620 ;;      Temps:          0       0       0
  1621 ;;      Totals:         2       0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_setFanLevel
  1629 ;;		_closeFan
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _setLedOn
  1635  0189                     _setLedOn:	
  1636  0189                     l2333:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _setLedOn: [wreg-fsr0h+status,2+status,0]
  1639                           
  1640                           
  1641                           ;main.c: 134: switch(ledIndex)
  1642  0189  299E               	goto	l2339
  1643  018A                     l594:	
  1644                           ;main.c: 135: {
  1645                           ;main.c: 136: case 1:
  1646                           
  1647                           
  1648                           ;main.c: 137: PORTB&=~(1<<7); PORTC|=(1<<0); PORTC&=~(1<<1);
  1649  018A  1386               	bcf	6,7	;volatile
  1650  018B  1407               	bsf	7,0	;volatile
  1651  018C  1087               	bcf	7,1	;volatile
  1652                           
  1653                           ;main.c: 138: break;
  1654  018D  0008               	return
  1655  018E                     l596:	
  1656                           ;main.c: 139: case 2:
  1657                           
  1658                           
  1659                           ;main.c: 140: PORTB|=(1<<7); PORTC&=~(1<<0); PORTC|=(1<<1);
  1660  018E  1786               	bsf	6,7	;volatile
  1661  018F  1007               	bcf	7,0	;volatile
  1662  0190  1487               	bsf	7,1	;volatile
  1663                           
  1664                           ;main.c: 141: break;
  1665  0191  0008               	return
  1666  0192                     l597:	
  1667                           ;main.c: 143: case 3:
  1668                           
  1669                           
  1670                           ;main.c: 144: PORTB|=(1<<7); PORTC&=~(1<<0); PORTC&=~(1<<1);
  1671  0192  1786               	bsf	6,7	;volatile
  1672  0193  1007               	bcf	7,0	;volatile
  1673  0194  1087               	bcf	7,1	;volatile
  1674                           
  1675                           ;main.c: 145: break;
  1676  0195  0008               	return
  1677  0196                     l598:	
  1678                           ;main.c: 146: case 4:
  1679                           
  1680                           
  1681                           ;main.c: 147: PORTB&=~(1<<7); PORTC|=(1<<0); PORTC|=(1<<1);
  1682  0196  1386               	bcf	6,7	;volatile
  1683  0197  1407               	bsf	7,0	;volatile
  1684  0198  1487               	bsf	7,1	;volatile
  1685                           
  1686                           ;main.c: 148: break;
  1687  0199  0008               	return
  1688  019A                     l599:	
  1689                           ;main.c: 149: default:
  1690                           
  1691                           
  1692                           ;main.c: 150: PORTB&=~(1<<7); PORTC&=~(1<<0); PORTC&=~(1<<1);
  1693  019A  1386               	bcf	6,7	;volatile
  1694  019B  1007               	bcf	7,0	;volatile
  1695  019C  1087               	bcf	7,1	;volatile
  1696                           
  1697                           ;main.c: 151: break;
  1698  019D  0008               	return
  1699  019E                     l2339:	
  1700                           
  1701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1702                           ; Switch size 1, requested type "space"
  1703                           ; Number of cases is 1, Range of values is 0 to 0
  1704                           ; switch strategies available:
  1705                           ; Name         Instructions Cycles
  1706                           ; simple_byte            4     3 (average)
  1707                           ; direct_byte            7     6 (fixed)
  1708                           ; jumptable            260     6 (fixed)
  1709                           ;	Chosen strategy is simple_byte
  1710  019E  0873               	movf	setLedOn@ledIndex+1,w
  1711  019F  3A00               	xorlw	0	; case 0
  1712  01A0  1903               	skipnz
  1713  01A1  29A3               	goto	l2583
  1714  01A2  299A               	goto	l599
  1715  01A3                     l2583:	
  1716                           
  1717                           ; Switch size 1, requested type "space"
  1718                           ; Number of cases is 4, Range of values is 1 to 4
  1719                           ; switch strategies available:
  1720                           ; Name         Instructions Cycles
  1721                           ; simple_byte           13     7 (average)
  1722                           ; direct_byte           13     9 (fixed)
  1723                           ; jumptable            263     9 (fixed)
  1724                           ;	Chosen strategy is simple_byte
  1725  01A3  0872               	movf	setLedOn@ledIndex,w
  1726  01A4  3A01               	xorlw	1	; case 1
  1727  01A5  1903               	skipnz
  1728  01A6  298A               	goto	l594
  1729  01A7  3A03               	xorlw	3	; case 2
  1730  01A8  1903               	skipnz
  1731  01A9  298E               	goto	l596
  1732  01AA  3A01               	xorlw	1	; case 3
  1733  01AB  1903               	skipnz
  1734  01AC  2992               	goto	l597
  1735  01AD  3A07               	xorlw	7	; case 4
  1736  01AE  1903               	skipnz
  1737  01AF  2996               	goto	l598
  1738  01B0  299A               	goto	l599
  1739  01B1  0008               	return
  1740  01B2                     __end_of_setLedOn:	
  1741                           
  1742                           	psect	text12
  1743  022B                     __ptext12:	
  1744 ;; *************** function _Init_PWM *****************
  1745 ;; Defined at:
  1746 ;;		line 44 in file "E:\project\scm\uf166fan\main.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 300/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1
  1760 ;;      Params:         0       0       0
  1761 ;;      Locals:         0       0       0
  1762 ;;      Temps:          0       0       0
  1763 ;;      Totals:         0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    1
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_closeFan
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           
  1775                           ;psect for function _Init_PWM
  1776  022B                     _Init_PWM:	
  1777                           
  1778                           ;main.c: 46: CCP1CON = 0x0F;
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _Init_PWM: [wreg+status,2]
  1782  022B  300F               	movlw	15
  1783  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1784  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1785  022E  0097               	movwf	23	;volatile
  1786                           
  1787                           ;main.c: 47: T2CON = 0;
  1788  022F  0192               	clrf	18	;volatile
  1789                           
  1790                           ;main.c: 48: PR2 = 199;
  1791  0230  30C7               	movlw	199
  1792  0231  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0232  0092               	movwf	18	;volatile
  1794                           
  1795                           ;main.c: 50: CCPR1L = 0;
  1796  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0234  0195               	clrf	21	;volatile
  1798                           
  1799                           ;main.c: 51: TMR2IF = 0;
  1800  0235  108C               	bcf	12,1	;volatile
  1801                           
  1802                           ;main.c: 52: T2CON = 0;
  1803  0236  0192               	clrf	18	;volatile
  1804  0237  0008               	return
  1805  0238                     __end_of_Init_PWM:	
  1806                           
  1807                           	psect	text13
  1808  0244                     __ptext13:	
  1809 ;; *************** function _Init_System *****************
  1810 ;; Defined at:
  1811 ;;		line 3 in file "E:\project\scm\uf166fan\init.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2
  1820 ;; Tracked objects:
  1821 ;;		On entry : B00/0
  1822 ;;		On exit  : 300/100
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1
  1825 ;;      Params:         0       0       0
  1826 ;;      Locals:         0       0       0
  1827 ;;      Temps:          0       0       0
  1828 ;;      Totals:         0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    1
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_main
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _Init_System
  1841  0244                     _Init_System:	
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _Init_System: [wreg+status,2]
  1845  0244  0000               	nop	;# 
  1846  0245  0064               	clrwdt	;# 
  1847                           
  1848                           ;init.c: 7: INTCON = 0;
  1849  0246  018B               	clrf	11	;volatile
  1850                           
  1851                           ;init.c: 8: OSCCON = 0X71;
  1852  0247  3071               	movlw	113
  1853  0248  1683               	bsf	3,5	;RP0=1, select bank1
  1854  0249  1303               	bcf	3,6	;RP1=0, select bank1
  1855  024A  008F               	movwf	15	;volatile
  1856                           
  1857                           ;init.c: 9: OPTION_REG = 0x00;
  1858  024B  0181               	clrf	1	;volatile
  1859                           
  1860                           ;init.c: 10: INTCON = 0x00;
  1861  024C  018B               	clrf	11	;volatile
  1862  024D  0008               	return
  1863  024E                     __end_of_Init_System:	
  1864                           
  1865                           	psect	text14
  1866  024E                     __ptext14:	
  1867 ;; *************** function _Init_Interupt *****************
  1868 ;; Defined at:
  1869 ;;		line 32 in file "E:\project\scm\uf166fan\init.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2
  1878 ;; Tracked objects:
  1879 ;;		On entry : 300/100
  1880 ;;		On exit  : 300/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1
  1883 ;;      Params:         0       0       0
  1884 ;;      Locals:         0       0       0
  1885 ;;      Temps:          0       0       0
  1886 ;;      Totals:         0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function _Init_Interupt
  1899  024E                     _Init_Interupt:	
  1900                           
  1901                           ;init.c: 34: OPTION_REG = 0x00;
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _Init_Interupt: [wreg+status,2]
  1905  024E  0181               	clrf	1	;volatile
  1906                           
  1907                           ;init.c: 35: TMR0 = 0;
  1908  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0250  0181               	clrf	1	;volatile
  1910                           
  1911                           ;init.c: 36: INTCON = 0xE0;
  1912  0251  30E0               	movlw	224
  1913  0252  008B               	movwf	11	;volatile
  1914  0253  0008               	return
  1915  0254                     __end_of_Init_Interupt:	
  1916                           
  1917                           	psect	text15
  1918  01EB                     __ptext15:	
  1919 ;; *************** function _Init_GPIO *****************
  1920 ;; Defined at:
  1921 ;;		line 17 in file "E:\project\scm\uf166fan\init.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;		None
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;		None
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      void 
  1928 ;; Registers used:
  1929 ;;		wreg, status,2
  1930 ;; Tracked objects:
  1931 ;;		On entry : 300/100
  1932 ;;		On exit  : 300/100
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMMON   BANK0   BANK1
  1935 ;;      Params:         0       0       0
  1936 ;;      Locals:         0       0       0
  1937 ;;      Temps:          0       0       0
  1938 ;;      Totals:         0       0       0
  1939 ;;Total ram usage:        0 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    1
  1942 ;; This function calls:
  1943 ;;		Nothing
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _Init_GPIO
  1951  01EB                     _Init_GPIO:	
  1952                           
  1953                           ;init.c: 19: TRISA = 0;
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _Init_GPIO: [wreg+status,2]
  1957  01EB  0185               	clrf	5	;volatile
  1958                           
  1959                           ;init.c: 20: TRISB = 0;
  1960  01EC  0186               	clrf	6	;volatile
  1961                           
  1962                           ;init.c: 21: TRISC = 0;
  1963  01ED  0187               	clrf	7	;volatile
  1964                           
  1965                           ;init.c: 22: WPUA = 0xFF;
  1966  01EE  30FF               	movlw	255
  1967  01EF  1703               	bsf	3,6	;RP1=1, select bank3
  1968  01F0  008E               	movwf	14	;volatile
  1969                           
  1970                           ;init.c: 23: WPUB = 0xFF;
  1971  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  1972  01F2  0095               	movwf	21	;volatile
  1973                           
  1974                           ;init.c: 24: WPUC = 0xFF;
  1975  01F3  1703               	bsf	3,6	;RP1=1, select bank3
  1976  01F4  008F               	movwf	15	;volatile
  1977                           
  1978                           ;init.c: 25: PORTA = 0xFF;
  1979  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  1980  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  1981  01F7  0085               	movwf	5	;volatile
  1982                           
  1983                           ;init.c: 26: PORTB = 0xFF;
  1984  01F8  0086               	movwf	6	;volatile
  1985                           
  1986                           ;init.c: 27: PORTC = 0xFF;
  1987  01F9  0087               	movwf	7	;volatile
  1988                           
  1989                           ;init.c: 28: IOCB = 0x00;
  1990  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  1991  01FB  0196               	clrf	22	;volatile
  1992  01FC  0008               	return
  1993  01FD                     __end_of_Init_GPIO:	
  1994                           
  1995                           	psect	text16
  1996  020D                     __ptext16:	
  1997 ;; *************** function _Timer0_Isr *****************
  1998 ;; Defined at:
  1999 ;;		line 252 in file "E:\project\scm\uf166fan\main.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1
  2013 ;;      Params:         0       0       0
  2014 ;;      Locals:         0       0       0
  2015 ;;      Temps:          2       0       0
  2016 ;;      Totals:         2       0       0
  2017 ;;Total ram usage:        2 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		Interrupt level 1
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           
  2027                           ;psect for function _Timer0_Isr
  2028  020D                     _Timer0_Isr:	
  2029                           
  2030                           ;main.c: 254: if(T0IF)
  2031  020D  1D0B               	btfss	11,2	;volatile
  2032  020E  2A16               	goto	i1l622
  2033                           
  2034                           ;main.c: 255: {
  2035                           ;main.c: 257: TMR0 += 155;
  2036  020F  309B               	movlw	155
  2037  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2039  0212  0781               	addwf	1,f	;volatile
  2040                           
  2041                           ;main.c: 260: T0IF = 0;
  2042  0213  110B               	bcf	11,2	;volatile
  2043                           
  2044                           ;main.c: 261: time0Flag =1;
  2045  0214  01BE               	clrf	_time0Flag
  2046  0215  0ABE               	incf	_time0Flag,f
  2047  0216                     i1l622:	
  2048  0216  0871               	movf	??_Timer0_Isr+1,w
  2049  0217  008A               	movwf	10
  2050  0218  0E70               	swapf	??_Timer0_Isr^(0+-128),w
  2051  0219  0083               	movwf	3
  2052  021A  0EFE               	swapf	126,f
  2053  021B  0E7E               	swapf	126,w
  2054  021C  0009               	retfie
  2055  021D                     __end_of_Timer0_Isr:	
  2056  007E                     btemp	set	126	;btemp
  2057  007E                     wtemp0	set	126
  2058                           
  2059                           	psect	intentry
  2060  0004                     __pintentry:	
  2061                           ;incstack = 0
  2062                           ; Regs used in _Timer0_Isr: [wreg+status,2+status,0]
  2063                           
  2064  0004                     interrupt_function:	
  2065  007E                     saved_w	set	btemp
  2066  0004  00FE               	movwf	btemp
  2067  0005  0E03               	swapf	3,w
  2068  0006  00F0               	movwf	??_Timer0_Isr
  2069  0007  080A               	movf	10,w
  2070  0008  00F1               	movwf	??_Timer0_Isr+1
  2071  0009  2A0D               	ljmp	_Timer0_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     24      31
    BANK1            80      0       0

Pointer List with Targets:

    resetKey@key	PTR struct Keys size(1) Largest target is 7
		 -> main@key3(BANK0[7]), main@key2(BANK0[7]), main@key1(BANK0[7]), 

    key_read@key	PTR struct Keys size(1) Largest target is 7
		 -> main@key3(BANK0[7]), main@key2(BANK0[7]), main@key1(BANK0[7]), 

    key_driver@key	PTR struct Keys size(1) Largest target is 7
		 -> main@key3(BANK0[7]), main@key2(BANK0[7]), main@key1(BANK0[7]), 

    sacnKeyInput@key	PTR struct Keys size(1) Largest target is 7
		 -> main@key3(BANK0[7]), main@key2(BANK0[7]), main@key1(BANK0[7]), 


Critical Paths under _main in COMMON

    _key_read->_key_driver
    _setFanLevel->___awdiv
    _closeFan->_setLedOn

Critical Paths under _Timer0_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkFan
    _checkFan->_setFanLevel

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    4358
                                              3 BANK0     21    21      0
                          _Init_GPIO
                      _Init_Interupt
                        _Init_System
                           _checkFan
                     _checkUsbStatus
                           _key_read
                           _resetKey
                       _sacnKeyInput
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (1) _sacnKeyInput                                         3     3      0     169
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _resetKey                                             1     1      0     169
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _key_read                                             3     3      0     689
                                              5 COMMON     3     3      0
                         _key_driver
 ---------------------------------------------------------------------------------
 (2) _key_driver                                           3     3      0     361
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _checkUsbStatus                                       1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkFan                                             1     1      0    1293
                                              2 BANK0      1     1      0
                           _closeFan
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (1) _setFanLevel                                          4     4      0    1132
                                              0 BANK0      2     2      0
                            ___awdiv
                             ___bmul
                           _setLedOn
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     201
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     606
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _closeFan                                             0     0      0     161
                           _Init_PWM
                           _setLedOn
 ---------------------------------------------------------------------------------
 (2) _setLedOn                                             2     0      2     161
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _Init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_Interupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Timer0_Isr                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_GPIO
   _Init_Interupt
   _Init_System
   _checkFan
     _closeFan
       _Init_PWM
       _setLedOn
     _setFanLevel
       ___awdiv
       ___bmul
       _setLedOn
   _checkUsbStatus
   _key_read
     _key_driver
   _resetKey
   _sacnKeyInput
   _setFanLevel
     ___awdiv
     ___bmul
     _setLedOn

 _Timer0_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     18      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B       8        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 28 19:40:02 2020

                      pc 0002           ___bmul@product 0073                       _TO 001C  
           ___awdiv@sign 0077                       fsr 0004                      l611 0065  
                    l609 005E                      l565 01E9                      l594 018A  
                    l596 018E                      l597 0192                      l598 0196  
                    l599 019A                      _PR2 0092                      u634 01BF  
                    u635 01BD                      u815 00A5                      u905 0153  
                    fsr0 0004                      indf 0000                     S2581 0254  
                   l2113 01DF                     l2201 012A                     l2203 0135  
                   l2065 00C8                     l2411 0178                     l2091 00EF  
                   l2083 00DF                     l2333 0189                     l2077 00DA  
                   l2069 00D0                     l2181 0107                     l2423 0238  
                   l2415 017D                     l2095 00F3                     l2089 00ED  
                   l2097 0100                     l2193 011B                     l2185 0113  
                   l2513 005D                     l2339 019E                     l2347 021F  
                   l2443 014B                     l2187 0116                     l2523 006C  
                   l2373 008E                     l2461 015D                     l2197 0125  
                   l2509 004F                     l2383 009C                     l2367 0085  
                   l2447 014C                     l2527 0071                     l2449 0141  
                   l2457 0150                     l2395 00B3                     l2491 0035  
                   l2583 01A3                     l2399 00BB                     _T0IF 005A  
                   _IOCB 0096                     _TMR0 0001   __end_of_checkUsbStatus 01EB  
                   _WPUA 018E                     _WPUB 0095                     _WPUC 018F  
                   _main 0017                     btemp 007E                     start 000A  
      ___bmul@multiplier 0074            ??_Init_System 0072            _Init_Interupt 024E  
                  ?_main 0070          __end_of___awdiv 00C0          ___awdiv@divisor 0072  
                  _T2CON 0012       key_driver@key_read 0073                    i1l622 0216  
        ___awdiv@counter 0076                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    pclath 000A          ?_checkUsbStatus 0070  
                  status 0003                    wtemp0 007E             ?_setFanLevel 0070  
        __initialization 000B             __end_of_main 007B         __end_of_Init_PWM 0238  
         ?_Init_Interupt 0070           _fan_check_time 0038                   ??_main 007A  
    __end_of_Init_System 024E                   _CCPR1L 0015         ___awdiv@dividend 0074  
                 _INTCON 000B            ?_sacnKeyInput 0070       __size_of_Init_GPIO 0012  
                 _OSCCON 008F                   _TMR2IF 0061         __end_of_checkFan 0160  
             _Timer0_Isr 020D         __end_of_closeFan 0244                   ___bmul 021D  
       setLedOn@ledIndex 0072                ??___awdiv 0076              key_read@key 0077  
       __end_of_key_read 0137         ___awdiv@quotient 0078         __end_of_setLedOn 01B2  
       __end_of_resetKey 020D             __pdataCOMMON 007A                   saved_w 007E  
         ??_sacnKeyInput 0072  __end_of__initialization 0015      ___bmul@multiplicand 0072  
         __pcstackCOMMON 0070          ??_Init_Interupt 0072              _Init_System 0244  
      __end_of_Init_GPIO 01FD               __pbssBANK0 0038                ?_Init_PWM 0070  
            ?_Timer0_Isr 0070               __pmaintext 0017                  ?___bmul 0072  
   __size_of_setFanLevel 0029               __pintentry 0004                  _CCP1CON 0017  
              ?_checkFan 0070     key_driver@key_return 0072         ??_checkUsbStatus 0072  
              ?_closeFan 0070               ??_Init_PWM 0072                ?_key_read 0070  
              ?_setLedOn 0072                ?_resetKey 0070              resetKey@key 0072  
        __size_of___bmul 000E                  ___awdiv 007B               _key_driver 00C0  
   __end_of_sacnKeyInput 01CF                  __ptext1 01B2                  __ptext2 01FD  
                __ptext3 0102                  __ptext4 00C0                  __ptext5 01CF  
                __ptext6 0137                  __ptext7 0160                  __ptext8 021D  
                __ptext9 007B               ??_checkFan 0022      __size_of_Timer0_Isr 0010  
             ??_closeFan 0074     end_of_initialization 0015               ??_key_read 0075  
             ??_setLedOn 0074       key_read@key_return 0075               ??_resetKey 0072  
        sacnKeyInput@key 0074              ?_key_driver 0070           __end_of___bmul 022B  
           ?_Init_System 0070         setFanLevel@level 0020            __pidataCOMMON 0000  
    start_initialization 000B                _Init_GPIO 01EB        __size_of_Init_PWM 000D  
           ??_Timer0_Isr 0070    __size_of_sacnKeyInput 001D                 ??___bmul 0073  
  __end_of_Init_Interupt 0254         key_read@key_read 0076               ?_Init_GPIO 0070  
              ___latbits 0000            __pcstackBANK0 0020        __size_of_checkFan 0029  
     __end_of_Timer0_Isr 021D      __size_of_key_driver 0042        __size_of_closeFan 000C  
           _sacnKeyInput 01B2             _currentLevel 007B        __size_of_key_read 0035  
          ??_setFanLevel 007A        __size_of_setLedOn 0029                 ?___awdiv 0072  
      __size_of_resetKey 0010                __pswtext1 0254                _count10Ms 003A  
              _countTime 003C        interrupt_function 0004                _time0Flag 003E  
   setFanLevel@tempLevel 0021      __end_of_setFanLevel 0189     __size_of_Init_System 000A  
            ??_Init_GPIO 0072                 _Init_PWM 022B  __size_of_checkUsbStatus 001C  
           ??_key_driver 0072         __size_of___awdiv 0045            key_driver@key 0074  
               _checkFan 0137               _FAN_STATUS 007A                 __ptext10 0238  
               __ptext11 0189                 __ptext12 022B                 __ptext13 0244  
               __ptext14 024E                 __ptext15 01EB                 __ptext16 020D  
               _closeFan 0238       __end_of_key_driver 0102                 _key_read 0102  
          __size_of_main 0064                 _setLedOn 0189                 _resetKey 01FD  
            _setFanLevel 0160                 main@key1 0023                 main@key2 002A  
               main@key3 0031                 intlevel1 0000               _OPTION_REG 0081  
 __size_of_Init_Interupt 0006           _checkUsbStatus 01CF  
