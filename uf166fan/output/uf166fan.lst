

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 04 17:18:04 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1711C
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	swtext1,local,class=CONST,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	swtext2,local,class=CONST,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	pa_nodes0,global,class=CODE,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 1.45
    43                           ; Generated 16/11/2017 GMT
    44                           ; 
    45                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     
    77                           	psect	idataCOMMON
    78  0000                     __pidataCOMMON:	
    79  0017                     _CCP1CON	set	23
    80  0015                     _CCPR1L	set	21
    81  0012                     _T2CON	set	18
    82  000B                     _INTCON	set	11
    83  0007                     _PORTC	set	7
    84  0006                     _PORTB	set	6
    85  0005                     _PORTA	set	5
    86  0001                     _TMR0	set	1
    87  0061                     _TMR2IF	set	97
    88  005A                     _T0IF	set	90
    89  0058                     _RBIF	set	88
    90  001C                     _TO	set	28
    91  0096                     _IOCB	set	150
    92  0095                     _WPUB	set	149
    93  0092                     _PR2	set	146
    94  008F                     _OSCCON	set	143
    95  0087                     _TRISC	set	135
    96  0086                     _TRISB	set	134
    97  0085                     _TRISA	set	133
    98  0081                     _OPTION_REG	set	129
    99  018F                     _WPUC	set	399
   100  018E                     _WPUA	set	398
   101                           
   102                           	psect	cinit
   103  000D                     start_initialization:	
   104                           ; #config settings
   105                           
   106  000D                     __initialization:	
   107                           
   108                           ;initializer for _FAN_STATUS
   109  000D  3002               	movlw	2
   110  000E  00F8               	movwf	__pdataCOMMON& (0+127)
   111                           
   112                           ;initializer for _currentLevel
   113  000F  3003               	movlw	3
   114  0010  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   115  0011  3020               	movlw	low __pbssBANK0
   116                           
   117                           ; Clear objects allocated to BANK0
   118  0012  1383               	bcf	3,7	;select IRP bank0
   119  0013  0084               	movwf	4
   120  0014  303A               	movlw	low (__pbssBANK0+26)
   121  0015  2262               	fcall	clear_ram0
   122                           
   123                           ; Clear objects allocated to COMMON
   124  0016  01F6               	clrf	__pbssCOMMON& (0+127)
   125  0017  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   126  0018                     end_of_initialization:	
   127                           ;End of C runtime variable initialization code
   128                           
   129  0018                     __end_of__initialization:	
   130  0018  0183               	clrf	3
   131  0019  2943               	ljmp	_main	;jump to C main() function
   132                           
   133                           	psect	bssCOMMON
   134  0076                     __pbssCOMMON:	
   135  0076                     _fan_check_time:	
   136  0076                     	ds	2
   137                           
   138                           	psect	dataCOMMON
   139  0078                     __pdataCOMMON:	
   140  0078                     _FAN_STATUS:	
   141  0078                     	ds	1
   142  0079                     _currentLevel:	
   143  0079                     	ds	1
   144                           
   145                           	psect	bssBANK0
   146  0020                     __pbssBANK0:	
   147  0020                     _count10Ms:	
   148  0020                     	ds	2
   149  0022                     _countTime:	
   150  0022                     	ds	2
   151  0024                     _time0Flag:	
   152  0024                     	ds	1
   153  0025                     _key3:	
   154  0025                     	ds	7
   155  002C                     _key2:	
   156  002C                     	ds	7
   157  0033                     _key1:	
   158  0033                     	ds	7
   159                           
   160                           	psect	clrtext
   161  0262                     clear_ram0:	
   162                           ;	Called with FSR containing the base address, and
   163                           ;	W with the last address+1
   164                           
   165  0262  0064               	clrwdt	;clear the watchdog before getting into this loop
   166  0263                     clrloop0:	
   167  0263  0180               	clrf	0	;clear RAM location pointed to by FSR
   168  0264  0A84               	incf	4,f	;increment pointer
   169  0265  0604               	xorwf	4,w	;XOR with final address
   170  0266  1903               	btfsc	3,2	;have we reached the end yet?
   171  0267  3400               	retlw	0	;all done for this memory range, return
   172  0268  0604               	xorwf	4,w	;XOR again to restore value
   173  0269  2A63               	goto	clrloop0	;do the next byte
   174                           
   175                           	psect	cstackCOMMON
   176  0070                     __pcstackCOMMON:	
   177  0070                     ?_setLedOn:	
   178  0070                     ?_sacnKeyInput:	
   179                           ; 1 bytes @ 0x0
   180                           
   181  0070                     ?_key_driver:	
   182                           ; 1 bytes @ 0x0
   183                           
   184  0070                     ?_Init_Config:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0070                     ?_Init_System:	
   188                           ; 1 bytes @ 0x0
   189                           
   190  0070                     ?_Init_GPIO:	
   191                           ; 1 bytes @ 0x0
   192                           
   193  0070                     ?_Init_Interupt:	
   194                           ; 1 bytes @ 0x0
   195                           
   196  0070                     ?_resetKey:	
   197                           ; 1 bytes @ 0x0
   198                           
   199  0070                     ?_checkUsbStatus:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0070                     ?_Init_PWM:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_setFanLevel:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ?_closeFan:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0070                     ?_checkFan:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0070                     ?_scanKeys:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ?_checkKeys:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ?_main:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_Timer0_Isr:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ?i1_Init_PWM:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ??i1_Init_PWM:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?i1_Init_Config:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?i1_resetKey:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ??i1_resetKey:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?i1_Init_System:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ??i1_Init_System:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?i1_Init_GPIO:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??i1_Init_GPIO:	
   251                           ; 1 bytes @ 0x0
   252                           
   253  0070                     ?i1_Init_Interupt:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ??i1_Init_Interupt:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     i1resetKey@key:	
   260                           ; 1 bytes @ 0x0
   261                           
   262                           
   263                           ; 1 bytes @ 0x0
   264  0070                     	ds	1
   265  0071                     ??_Timer0_Isr:	
   266  0071                     ??i1_Init_Config:	
   267                           ; 1 bytes @ 0x1
   268                           
   269                           
   270                           ; 1 bytes @ 0x1
   271  0071                     	ds	3
   272  0074                     ??_setLedOn:	
   273  0074                     ??_sacnKeyInput:	
   274                           ; 1 bytes @ 0x4
   275                           
   276  0074                     ??_key_driver:	
   277                           ; 1 bytes @ 0x4
   278                           
   279  0074                     ??_Init_System:	
   280                           ; 1 bytes @ 0x4
   281                           
   282  0074                     ??_Init_GPIO:	
   283                           ; 1 bytes @ 0x4
   284                           
   285  0074                     ??_Init_Interupt:	
   286                           ; 1 bytes @ 0x4
   287                           
   288  0074                     ??_resetKey:	
   289                           ; 1 bytes @ 0x4
   290                           
   291  0074                     ??_checkUsbStatus:	
   292                           ; 1 bytes @ 0x4
   293                           
   294  0074                     ??_Init_PWM:	
   295                           ; 1 bytes @ 0x4
   296                           
   297  0074                     ??___awdiv:	
   298                           ; 1 bytes @ 0x4
   299                           
   300  0074                     setLedOn@ledIndex:	
   301                           ; 1 bytes @ 0x4
   302                           
   303  0074                     resetKey@key:	
   304                           ; 1 bytes @ 0x4
   305                           
   306                           
   307                           ; 1 bytes @ 0x4
   308  0074                     	ds	1
   309  0075                     ??_Init_Config:	
   310  0075                     ??_setFanLevel:	
   311                           ; 1 bytes @ 0x5
   312                           
   313  0075                     ??_closeFan:	
   314                           ; 1 bytes @ 0x5
   315                           
   316  0075                     ??_checkFan:	
   317                           ; 1 bytes @ 0x5
   318                           
   319                           
   320                           ; 1 bytes @ 0x5
   321  0075                     	ds	1
   322  0076                     ??_scanKeys:	
   323  0076                     ??_checkKeys:	
   324                           ; 1 bytes @ 0x6
   325                           
   326  0076                     ??_main:	
   327                           ; 1 bytes @ 0x6
   328                           
   329                           
   330                           	psect	cstackBANK0
   331  003A                     __pcstackBANK0:	
   332                           ; 1 bytes @ 0x6
   333                           
   334  003A                     ?___awdiv:	
   335  003A                     sacnKeyInput@key:	
   336                           ; 2 bytes @ 0x0
   337                           
   338  003A                     key_driver@key_return:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  003A                     ___awdiv@divisor:	
   342                           ; 1 bytes @ 0x0
   343                           
   344                           
   345                           ; 2 bytes @ 0x0
   346  003A                     	ds	1
   347  003B                     key_driver@key_read:	
   348                           
   349                           ; 1 bytes @ 0x1
   350  003B                     	ds	1
   351  003C                     key_driver@key:	
   352  003C                     ___awdiv@dividend:	
   353                           ; 1 bytes @ 0x2
   354                           
   355                           
   356                           ; 2 bytes @ 0x2
   357  003C                     	ds	2
   358  003E                     ___awdiv@counter:	
   359                           
   360                           ; 1 bytes @ 0x4
   361  003E                     	ds	1
   362  003F                     ___awdiv@sign:	
   363                           
   364                           ; 1 bytes @ 0x5
   365  003F                     	ds	1
   366  0040                     ___awdiv@quotient:	
   367                           
   368                           ; 2 bytes @ 0x6
   369  0040                     	ds	2
   370  0042                     setFanLevel@level:	
   371                           
   372                           ; 1 bytes @ 0x8
   373  0042                     	ds	1
   374  0043                     setFanLevel@tempLevel:	
   375                           
   376                           ; 1 bytes @ 0x9
   377  0043                     	ds	1
   378  0044                     checkKeys@key2Status:	
   379                           
   380                           ; 1 bytes @ 0xA
   381  0044                     	ds	1
   382  0045                     checkKeys@key3Status:	
   383                           
   384                           ; 1 bytes @ 0xB
   385  0045                     	ds	1
   386                           
   387                           	psect	maintext
   388  0143                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 243 in file "E:\project\scm\uf166fan\main.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 300/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1
   408 ;;      Params:         0       0       0
   409 ;;      Locals:         0       0       0
   410 ;;      Temps:          0       0       0
   411 ;;      Totals:         0       0       0
   412 ;;Total ram usage:        0 bytes
   413 ;; Hardware stack levels required when called:    7
   414 ;; This function calls:
   415 ;;		_Init_Config
   416 ;;		_checkKeys
   417 ;;		_checkUsbStatus
   418 ;;		_scanKeys
   419 ;; This function is called by:
   420 ;;		Startup code after reset
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424                           
   425                           ;psect for function _main
   426  0143                     _main:	
   427                           
   428                           ;main.c: 244: Init_Config();
   429                           
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   432  0143  2164               	fcall	_Init_Config
   433  0144                     l2694:	
   434                           
   435                           ;main.c: 247: if (time0Flag) {
   436  0144  1283               	bcf	3,5	;RP0=0, select bank0
   437  0145  0824               	movf	_time0Flag,w
   438  0146  1903               	btfsc	3,2
   439  0147  2950               	goto	l2704
   440  0148  0064               	clrwdt	;# 
   441                           
   442                           ;main.c: 249: time0Flag = 0;
   443  0149  1283               	bcf	3,5	;RP0=0, select bank0
   444  014A  1303               	bcf	3,6	;RP1=0, select bank0
   445  014B  01A4               	clrf	_time0Flag
   446                           
   447                           ;main.c: 250: scanKeys();
   448  014C  2232               	fcall	_scanKeys
   449                           
   450                           ;main.c: 251: count10Ms++;
   451  014D  0AA0               	incf	_count10Ms,f
   452  014E  1903               	skipnz
   453  014F  0AA1               	incf	_count10Ms+1,f
   454  0150                     l2704:	
   455                           
   456                           ;main.c: 252: }
   457                           ;main.c: 255: if (count10Ms == 100) {
   458  0150  3064               	movlw	100
   459  0151  0620               	xorwf	_count10Ms,w
   460  0152  0421               	iorwf	_count10Ms+1,w
   461  0153  1D03               	btfss	3,2
   462  0154  295A               	goto	l2712
   463                           
   464                           ;main.c: 256: checkKeys();
   465  0155  2183               	fcall	_checkKeys
   466                           
   467                           ;main.c: 257: count10Ms = 0;
   468  0156  1283               	bcf	3,5	;RP0=0, select bank0
   469  0157  01A0               	clrf	_count10Ms
   470  0158  01A1               	clrf	_count10Ms+1
   471                           
   472                           ;main.c: 259: checkUsbStatus();
   473  0159  21BE               	fcall	_checkUsbStatus
   474  015A                     l2712:	
   475                           
   476                           ;main.c: 260: }
   477                           ;main.c: 262: if (countTime == 1000) {
   478  015A  30E8               	movlw	232
   479  015B  0622               	xorwf	_countTime,w
   480  015C  3003               	movlw	3
   481  015D  1903               	skipnz
   482  015E  0623               	xorwf	_countTime+1,w
   483  015F  1D03               	btfss	3,2
   484  0160  2944               	goto	l2694
   485                           
   486                           ;main.c: 263: countTime = 0;
   487  0161  01A2               	clrf	_countTime
   488  0162  01A3               	clrf	_countTime+1
   489  0163  2944               	goto	l2694
   490  0164                     __end_of_main:	
   491                           
   492                           	psect	text1
   493  0232                     __ptext1:	
   494 ;; *************** function _scanKeys *****************
   495 ;; Defined at:
   496 ;;		line 201 in file "E:\project\scm\uf166fan\main.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;		None
   499 ;; Auto vars:     Size  Location     Type
   500 ;;		None
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 300/0
   507 ;;		On exit  : B00/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1
   510 ;;      Params:         0       0       0
   511 ;;      Locals:         0       0       0
   512 ;;      Temps:          0       0       0
   513 ;;      Totals:         0       0       0
   514 ;;Total ram usage:        0 bytes
   515 ;; Hardware stack levels used:    1
   516 ;; Hardware stack levels required when called:    4
   517 ;; This function calls:
   518 ;;		_sacnKeyInput
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           
   525                           ;psect for function _scanKeys
   526  0232                     _scanKeys:	
   527                           
   528                           ;main.c: 202: key1.key_addr_result = key2.key_addr_result = key3.key_addr_result = PORTB
      +                          ;
   529                           
   530                           ;incstack = 0
   531                           ; Regs used in _scanKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532  0232  0806               	movf	6,w	;volatile
   533  0233  00AA               	movwf	_key3+5
   534  0234  00B1               	movwf	_key2+5
   535  0235  00B8               	movwf	_key1+5
   536                           
   537                           ;main.c: 203: sacnKeyInput(&key1);
   538  0236  3033               	movlw	(low (_key1| 0))& (0+255)
   539  0237  21A1               	fcall	_sacnKeyInput
   540                           
   541                           ;main.c: 204: sacnKeyInput(&key2);
   542  0238  302C               	movlw	(low (_key2| 0))& (0+255)
   543  0239  21A1               	fcall	_sacnKeyInput
   544                           
   545                           ;main.c: 205: sacnKeyInput(&key3);
   546  023A  3025               	movlw	(low (_key3| 0))& (0+255)
   547  023B  21A1               	fcall	_sacnKeyInput
   548                           
   549                           ;main.c: 206: countTime++;
   550  023C  0AA2               	incf	_countTime,f
   551  023D  1903               	skipnz
   552  023E  0AA3               	incf	_countTime+1,f
   553  023F  0008               	return
   554  0240                     __end_of_scanKeys:	
   555                           
   556                           	psect	text2
   557  01A1                     __ptext2:	
   558 ;; *************** function _sacnKeyInput *****************
   559 ;; Defined at:
   560 ;;		line 3 in file "E:\project\scm\uf166fan\scankey.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;  key             1    wreg     PTR struct Keys
   563 ;;		 -> key3(7), key2(7), key1(7), 
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  key             1    0[BANK0 ] PTR struct Keys
   566 ;;		 -> key3(7), key2(7), key1(7), 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   571 ;; Tracked objects:
   572 ;;		On entry : 300/0
   573 ;;		On exit  : B00/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1
   576 ;;      Params:         0       0       0
   577 ;;      Locals:         0       1       0
   578 ;;      Temps:          2       0       0
   579 ;;      Totals:         2       1       0
   580 ;;Total ram usage:        3 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    3
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_scanKeys
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _sacnKeyInput
   592  01A1                     _sacnKeyInput:	
   593                           
   594                           ;incstack = 0
   595                           ; Regs used in _sacnKeyInput: [wreg-fsr0h+status,2+status,0]
   596                           ;sacnKeyInput@key stored from wreg
   597  01A1  00BA               	movwf	sacnKeyInput@key
   598                           
   599                           ;scankey.c: 4: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
   600  01A2  3E05               	addlw	5
   601  01A3  0084               	movwf	4
   602  01A4  1383               	bcf	3,7	;select IRP bank0
   603  01A5  0800               	movf	0,w
   604  01A6  00F4               	movwf	??_sacnKeyInput
   605  01A7  083A               	movf	sacnKeyInput@key,w
   606  01A8  3E06               	addlw	6
   607  01A9  0084               	movwf	4
   608  01AA  0A00               	incf	0,w
   609  01AB  29AE               	goto	u844
   610  01AC                     u845:	
   611  01AC  1003               	clrc
   612  01AD  0CF4               	rrf	??_sacnKeyInput,f
   613  01AE                     u844:	
   614  01AE  3EFF               	addlw	-1
   615  01AF  1D03               	skipz
   616  01B0  29AC               	goto	u845
   617  01B1  0874               	movf	??_sacnKeyInput,w
   618  01B2  00F5               	movwf	??_sacnKeyInput+1
   619  01B3  083A               	movf	sacnKeyInput@key,w
   620  01B4  3E04               	addlw	4
   621  01B5  0084               	movwf	4
   622  01B6  0875               	movf	??_sacnKeyInput+1,w
   623  01B7  0080               	movwf	0
   624  01B8  083A               	movf	sacnKeyInput@key,w
   625  01B9  3E04               	addlw	4
   626  01BA  0084               	movwf	4
   627  01BB  3001               	movlw	1
   628  01BC  0580               	andwf	0,f
   629  01BD  0008               	return
   630  01BE                     __end_of_sacnKeyInput:	
   631                           
   632                           	psect	text3
   633  01BE                     __ptext3:	
   634 ;; *************** function _checkUsbStatus *****************
   635 ;; Defined at:
   636 ;;		line 36 in file "E:\project\scm\uf166fan\main.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0
   645 ;; Tracked objects:
   646 ;;		On entry : 300/0
   647 ;;		On exit  : 300/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1
   650 ;;      Params:         0       0       0
   651 ;;      Locals:         0       0       0
   652 ;;      Temps:          1       0       0
   653 ;;      Totals:         1       0       0
   654 ;;Total ram usage:        1 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; Hardware stack levels required when called:    3
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           
   665                           ;psect for function _checkUsbStatus
   666  01BE                     _checkUsbStatus:	
   667                           
   668                           ;main.c: 37: if (((PORTB) >> (2)&1) == 1) {
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _checkUsbStatus: [wreg+status,2+status,0]
   672  01BE  0806               	movf	6,w	;volatile
   673  01BF  00F4               	movwf	??_checkUsbStatus
   674  01C0  1003               	clrc
   675  01C1  0CF4               	rrf	??_checkUsbStatus,f
   676  01C2  1003               	clrc
   677  01C3  0CF4               	rrf	??_checkUsbStatus,f
   678  01C4  1C74               	btfss	??_checkUsbStatus,0
   679  01C5  29D8               	goto	l573
   680                           
   681                           ;main.c: 38: if (((PORTB) >> (1)&1) == 1) {
   682  01C6  0806               	movf	6,w	;volatile
   683  01C7  00F4               	movwf	??_checkUsbStatus
   684  01C8  1003               	clrc
   685  01C9  0CF4               	rrf	??_checkUsbStatus,f
   686  01CA  1C74               	btfss	??_checkUsbStatus,0
   687  01CB  29CE               	goto	l2292
   688                           
   689                           ;main.c: 40: PORTA&=~(1<<0);
   690  01CC  1005               	bcf	5,0	;volatile
   691                           
   692                           ;main.c: 41: } else if (countTime == 1000) {
   693  01CD  0008               	return
   694  01CE                     l2292:	
   695  01CE  30E8               	movlw	232
   696  01CF  0622               	xorwf	_countTime,w
   697  01D0  3003               	movlw	3
   698  01D1  1903               	skipnz
   699  01D2  0623               	xorwf	_countTime+1,w
   700  01D3  1D03               	btfss	3,2
   701  01D4  0008               	return
   702                           
   703                           ;main.c: 43: PORTA^=(1<<0);
   704  01D5  3001               	movlw	1
   705  01D6  0685               	xorwf	5,f	;volatile
   706  01D7  0008               	return
   707  01D8                     l573:	
   708                           
   709                           ;main.c: 47: PORTA|=(1<<0);
   710  01D8  1405               	bsf	5,0	;volatile
   711  01D9  0008               	return
   712  01DA                     __end_of_checkUsbStatus:	
   713                           
   714                           	psect	text4
   715  0183                     __ptext4:	
   716 ;; *************** function _checkKeys *****************
   717 ;; Defined at:
   718 ;;		line 211 in file "E:\project\scm\uf166fan\main.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  key3Status      1   11[BANK0 ] unsigned char 
   723 ;;  key2Status      1   10[BANK0 ] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 300/0
   730 ;;		On exit  : 200/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMMON   BANK0   BANK1
   733 ;;      Params:         0       0       0
   734 ;;      Locals:         0       2       0
   735 ;;      Temps:          0       0       0
   736 ;;      Totals:         0       2       0
   737 ;;Total ram usage:        2 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    6
   740 ;; This function calls:
   741 ;;		_checkFan
   742 ;;		_closeFan
   743 ;;		_key_driver
   744 ;;		_setFanLevel
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _checkKeys
   752  0183                     _checkKeys:	
   753                           
   754                           ;main.c: 212: if (key_driver(&key1) == 1) {
   755                           
   756                           ;incstack = 0
   757                           ; Regs used in _checkKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   758  0183  3033               	movlw	(low (_key1| 0))& (0+255)
   759  0184  205F               	fcall	_key_driver
   760  0185  3A01               	xorlw	1
   761  0186  1D03               	skipz
   762  0187  298E               	goto	l2674
   763                           
   764                           ;main.c: 215: if (FAN_STATUS == 1) {
   765  0188  0B78               	decfsz	_FAN_STATUS,w
   766  0189  298B               	goto	l2666
   767                           
   768                           ;main.c: 217: closeFan();
   769  018A  2A40               	ljmp	l2566
   770  018B                     l2666:	
   771                           ;main.c: 218: } else {
   772                           
   773                           
   774                           ;main.c: 219: FAN_STATUS = 2;
   775  018B  3002               	movlw	2
   776  018C  00F8               	movwf	_FAN_STATUS
   777                           
   778                           ;main.c: 220: checkFan();
   779  018D  2919               	ljmp	l2580
   780  018E                     l2674:	
   781  018E  3002               	movlw	2
   782  018F  0678               	xorwf	_FAN_STATUS,w
   783  0190  1D03               	btfss	3,2
   784  0191  2993               	goto	l624
   785                           
   786                           ;main.c: 224: checkFan();
   787  0192  2119               	fcall	_checkFan
   788  0193                     l624:	
   789                           
   790                           ;main.c: 225: }
   791                           ;main.c: 227: unsigned char key2Status = key_driver(&key2);
   792  0193  302C               	movlw	(low (_key2| 0))& (0+255)
   793  0194  205F               	fcall	_key_driver
   794  0195  00C4               	movwf	checkKeys@key2Status
   795                           
   796                           ;main.c: 228: if (key2Status == 1) {
   797  0196  0B44               	decfsz	checkKeys@key2Status,w
   798  0197  299A               	goto	l2684
   799                           
   800                           ;main.c: 230: setFanLevel(1);
   801  0198  3001               	movlw	1
   802  0199  28A2               	ljmp	_setFanLevel
   803  019A                     l2684:	
   804                           
   805                           ;main.c: 232: }
   806                           ;main.c: 233: unsigned char key3Status = key_driver(&key3);
   807  019A  3025               	movlw	(low (_key3| 0))& (0+255)
   808  019B  205F               	fcall	_key_driver
   809  019C  00C5               	movwf	checkKeys@key3Status
   810                           
   811                           ;main.c: 234: if (key3Status == 1) {
   812  019D  0B45               	decfsz	checkKeys@key3Status,w
   813  019E  0008               	return
   814                           
   815                           ;main.c: 236: setFanLevel(-1);
   816  019F  30FF               	movlw	255
   817  01A0  28A2               	ljmp	_setFanLevel
   818  01A1                     __end_of_checkKeys:	
   819                           
   820                           	psect	text5
   821  005F                     __ptext5:	
   822 ;; *************** function _key_driver *****************
   823 ;; Defined at:
   824 ;;		line 9 in file "E:\project\scm\uf166fan\scankey.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  key             1    wreg     PTR struct Keys
   827 ;;		 -> key3(7), key2(7), key1(7), 
   828 ;; Auto vars:     Size  Location     Type
   829 ;;  key             1    2[BANK0 ] PTR struct Keys
   830 ;;		 -> key3(7), key2(7), key1(7), 
   831 ;;  key_read        1    1[BANK0 ] unsigned char 
   832 ;;  key_return      1    0[BANK0 ] unsigned char 
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      unsigned char 
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 200/0
   839 ;;		On exit  : B00/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1
   842 ;;      Params:         0       0       0
   843 ;;      Locals:         0       3       0
   844 ;;      Temps:          0       0       0
   845 ;;      Totals:         0       3       0
   846 ;;Total ram usage:        3 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    3
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_checkKeys
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _key_driver
   858  005F                     _key_driver:	
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _key_driver: [wreg-fsr0h+status,2+status,0]
   862                           ;key_driver@key stored from wreg
   863  005F  1283               	bcf	3,5	;RP0=0, select bank0
   864  0060  00BC               	movwf	key_driver@key
   865                           
   866                           ;scankey.c: 12: unsigned char key_return = 0;
   867  0061  01BA               	clrf	key_driver@key_return
   868                           
   869                           ;scankey.c: 13: unsigned char key_read = key->key_input;
   870  0062  3E04               	addlw	4
   871  0063  0084               	movwf	4
   872  0064  1383               	bcf	3,7	;select IRP bank0
   873  0065  0800               	movf	0,w
   874  0066  00BB               	movwf	key_driver@key_read
   875                           
   876                           ;scankey.c: 15: switch (key->key_state_buffer1) {
   877  0067  2893               	goto	l2638
   878  0068                     l2608:	
   879                           
   880                           ;scankey.c: 17: if (key_read == 0) {
   881  0068  083B               	movf	key_driver@key_read,w
   882  0069  1D03               	btfss	3,2
   883  006A  28A0               	goto	l2640
   884                           
   885                           ;scankey.c: 18: key->key_state_buffer1 = 1;
   886  006B  0A3C               	incf	key_driver@key,w
   887  006C  0084               	movwf	4
   888  006D  0180               	clrf	0
   889  006E  0A80               	incf	0,f
   890  006F  28A0               	goto	l2640
   891  0070                     l2612:	
   892                           
   893                           ;scankey.c: 25: if (key_read == 0) {
   894  0070  083B               	movf	key_driver@key_read,w
   895  0071  1D03               	btfss	3,2
   896  0072  288F               	goto	l2634
   897                           
   898                           ;scankey.c: 26: key->key_timer_cnt1 = 0;
   899  0073  083C               	movf	key_driver@key,w
   900  0074  0084               	movwf	4
   901  0075  0180               	clrf	0
   902                           
   903                           ;scankey.c: 27: key->key_state_buffer1 = 2;
   904  0076  0A3C               	incf	key_driver@key,w
   905  0077  0084               	movwf	4
   906  0078  3002               	movlw	2
   907  0079  288B               	goto	L1
   908  007A                     l2620:	
   909                           ;scankey.c: 32: key->key_state_buffer1 = 0;
   910                           
   911                           ;scankey.c: 31: } else {
   912                           
   913                           
   914                           ;scankey.c: 39: if (key_read == 1) {
   915  007A  0B3B               	decfsz	key_driver@key_read,w
   916  007B  287F               	goto	l2626
   917                           
   918                           ;scankey.c: 40: key_return = 1;
   919  007C  01BA               	clrf	key_driver@key_return
   920  007D  0ABA               	incf	key_driver@key_return,f
   921  007E  288F               	goto	l2634
   922  007F                     l2626:	
   923                           ;scankey.c: 42: } else if (++(key->key_timer_cnt1) >= 100)
   924                           
   925                           ;scankey.c: 41: key->key_state_buffer1 = 0;
   926                           
   927  007F  083C               	movf	key_driver@key,w
   928  0080  0084               	movwf	4
   929  0081  3064               	movlw	100
   930  0082  0A80               	incf	0,f
   931  0083  0200               	subwf	0,w
   932  0084  1C03               	skipc
   933  0085  28A0               	goto	l2640
   934                           
   935                           ;scankey.c: 43: {
   936                           ;scankey.c: 44: key_return = 3;
   937  0086  3003               	movlw	3
   938  0087  00BA               	movwf	key_driver@key_return
   939                           
   940                           ;scankey.c: 45: key->key_state_buffer1 = 3;
   941  0088  0A3C               	incf	key_driver@key,w
   942  0089  0084               	movwf	4
   943  008A  3003               	movlw	3
   944  008B                     L1:	
   945  008B  0080               	movwf	0
   946  008C  28A0               	goto	l2640
   947  008D                     l2632:	
   948                           
   949                           ;scankey.c: 51: if (key_read == 1)
   950  008D  0B3B               	decfsz	key_driver@key_read,w
   951  008E  28A0               	goto	l2640
   952  008F                     l2634:	
   953                           
   954                           ;scankey.c: 52: {
   955                           ;scankey.c: 53: key->key_state_buffer1 = 0;
   956  008F  0A3C               	incf	key_driver@key,w
   957  0090  0084               	movwf	4
   958  0091  0180               	clrf	0
   959  0092  28A0               	goto	l2640
   960  0093                     l2638:	
   961  0093  0A3C               	incf	key_driver@key,w
   962  0094  0084               	movwf	4
   963  0095  0800               	movf	0,w
   964                           
   965                           ; Switch size 1, requested type "space"
   966                           ; Number of cases is 4, Range of values is 0 to 3
   967                           ; switch strategies available:
   968                           ; Name         Instructions Cycles
   969                           ; direct_byte           10     6 (fixed)
   970                           ; simple_byte           13     7 (average)
   971                           ; jumptable            260     6 (fixed)
   972                           ;	Chosen strategy is direct_byte
   973  0096  0084               	movwf	4
   974  0097  3004               	movlw	4
   975  0098  0204               	subwf	4,w
   976  0099  1803               	skipnc
   977  009A  28A0               	goto	l2640
   978  009B  3002               	movlw	high S2766
   979  009C  008A               	movwf	10
   980  009D  3076               	movlw	low S2766
   981  009E  0704               	addwf	4,w
   982  009F  0082               	movwf	2
   983  00A0                     l2640:	
   984                           
   985                           ;scankey.c: 58: return key_return;
   986  00A0  083A               	movf	key_driver@key_return,w
   987  00A1  0008               	return
   988  00A2                     __end_of_key_driver:	
   989                           
   990                           	psect	swtext1
   991  0276                     __pswtext1:	
   992  0276                     S2766:	
   993  0276  2868               	ljmp	l2608
   994  0277  2870               	ljmp	l2612
   995  0278  287A               	ljmp	l2620
   996  0279  288D               	ljmp	l2632
   997                           
   998                           	psect	text6
   999  0119                     __ptext6:	
  1000 ;; *************** function _checkFan *****************
  1001 ;; Defined at:
  1002 ;;		line 120 in file "E:\project\scm\uf166fan\main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : B00/0
  1013 ;;		On exit  : 200/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1
  1016 ;;      Params:         0       0       0
  1017 ;;      Locals:         0       0       0
  1018 ;;      Temps:          1       0       0
  1019 ;;      Totals:         1       0       0
  1020 ;;Total ram usage:        1 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    5
  1023 ;; This function calls:
  1024 ;;		_closeFan
  1025 ;;		_setFanLevel
  1026 ;; This function is called by:
  1027 ;;		_checkKeys
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _checkFan
  1033  0119                     _checkFan:	
  1034  0119                     l2580:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _checkFan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1037                           
  1038                           
  1039                           ;main.c: 121: TRISA&=~(1<<1);
  1040  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1041  011A  1085               	bcf	5,1	;volatile
  1042                           
  1043                           ;main.c: 122: PORTA|=(1<<1);
  1044  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1045  011C  1485               	bsf	5,1	;volatile
  1046                           
  1047                           ;main.c: 124: TRISC&=~(1<<2);
  1048  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1049  011E  1107               	bcf	7,2	;volatile
  1050                           
  1051                           ;main.c: 125: PORTA|=(1<<2);
  1052  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0120  1505               	bsf	5,2	;volatile
  1054                           
  1055                           ;main.c: 126: T2CON = 0X04;
  1056  0121  3004               	movlw	4
  1057  0122  0092               	movwf	18	;volatile
  1058                           
  1059                           ;main.c: 129: if (((PORTB) >> (6)&1) == 0) {
  1060  0123  0806               	movf	6,w	;volatile
  1061  0124  00F5               	movwf	??_checkFan
  1062  0125  3006               	movlw	6
  1063  0126                     u805:	
  1064  0126  1003               	clrc
  1065  0127  0CF5               	rrf	??_checkFan,f
  1066  0128  3EFF               	addlw	-1
  1067  0129  1D03               	skipz
  1068  012A  2926               	goto	u805
  1069  012B  1875               	btfsc	??_checkFan,0
  1070  012C  2930               	goto	l2588
  1071                           
  1072                           ;main.c: 130: FAN_STATUS = 1;
  1073  012D  01F8               	clrf	_FAN_STATUS
  1074  012E  0AF8               	incf	_FAN_STATUS,f
  1075                           
  1076                           ;main.c: 131: } else {
  1077  012F  2932               	goto	l2590
  1078  0130                     l2588:	
  1079                           
  1080                           ;main.c: 132: FAN_STATUS = 2;
  1081  0130  3002               	movlw	2
  1082  0131  00F8               	movwf	_FAN_STATUS
  1083  0132                     l2590:	
  1084                           
  1085                           ;main.c: 133: }
  1086                           ;main.c: 135: setFanLevel(0);
  1087  0132  3000               	movlw	0
  1088  0133  20A2               	fcall	_setFanLevel
  1089                           
  1090                           ;main.c: 138: if (FAN_STATUS == 2) {
  1091  0134  3002               	movlw	2
  1092  0135  0678               	xorwf	_FAN_STATUS,w
  1093  0136  1D03               	btfss	3,2
  1094  0137  0008               	return
  1095                           
  1096                           ;main.c: 139: fan_check_time++;
  1097  0138  0AF6               	incf	_fan_check_time,f
  1098  0139  1903               	skipnz
  1099  013A  0AF7               	incf	_fan_check_time+1,f
  1100                           
  1101                           ;main.c: 140: if (fan_check_time == 3000) {
  1102  013B  30B8               	movlw	184
  1103  013C  0676               	xorwf	_fan_check_time,w
  1104  013D  300B               	movlw	11
  1105  013E  1903               	skipnz
  1106  013F  0677               	xorwf	_fan_check_time+1,w
  1107  0140  1D03               	btfss	3,2
  1108  0141  0008               	return
  1109                           
  1110                           ;main.c: 141: closeFan();
  1111  0142  2A40               	ljmp	l2566
  1112  0143                     __end_of_checkFan:	
  1113                           
  1114                           	psect	text7
  1115  00A2                     __ptext7:	
  1116 ;; *************** function _setFanLevel *****************
  1117 ;; Defined at:
  1118 ;;		line 65 in file "E:\project\scm\uf166fan\main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  level           1    wreg     unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  level           1    8[BANK0 ] unsigned char 
  1123 ;;  levelWidth      2    0        unsigned int 
  1124 ;;  tempLevel       1    9[BANK0 ] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : B00/0
  1131 ;;		On exit  : 200/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1
  1134 ;;      Params:         0       0       0
  1135 ;;      Locals:         0       2       0
  1136 ;;      Temps:          0       0       0
  1137 ;;      Totals:         0       2       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    4
  1141 ;; This function calls:
  1142 ;;		___awdiv
  1143 ;;		_setLedOn
  1144 ;; This function is called by:
  1145 ;;		_checkFan
  1146 ;;		_checkKeys
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _setFanLevel
  1152  00A2                     _setFanLevel:	
  1153                           
  1154                           ;incstack = 0
  1155                           ; Regs used in _setFanLevel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1156                           ;setFanLevel@level stored from wreg
  1157  00A2  00C2               	movwf	setFanLevel@level
  1158                           
  1159                           ;main.c: 66: if(level == 0)
  1160  00A3  0842               	movf	setFanLevel@level,w
  1161  00A4  1D03               	btfss	3,2
  1162  00A5  28A8               	goto	l2536
  1163                           
  1164                           ;main.c: 67: {
  1165                           ;main.c: 68: currentLevel = 3;
  1166  00A6  3003               	movlw	3
  1167  00A7  00F9               	movwf	_currentLevel
  1168  00A8                     l2536:	
  1169                           
  1170                           ;main.c: 69: }
  1171                           ;main.c: 70: unsigned int levelWidth = (PR2 + 1) / 4;
  1172  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1173  00A9  0812               	movf	18,w	;volatile
  1174  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1175  00AB  00BC               	movwf	___awdiv@dividend
  1176  00AC  01BD               	clrf	___awdiv@dividend+1
  1177  00AD  0ABC               	incf	___awdiv@dividend,f
  1178  00AE  1903               	skipnz
  1179  00AF  0ABD               	incf	___awdiv@dividend+1,f
  1180  00B0  3004               	movlw	4
  1181  00B1  00BA               	movwf	___awdiv@divisor
  1182  00B2  01BB               	clrf	___awdiv@divisor+1
  1183  00B3  201A               	fcall	___awdiv
  1184                           
  1185                           ;main.c: 71: char tempLevel = currentLevel + level;
  1186  00B4  0842               	movf	setFanLevel@level,w
  1187  00B5  0779               	addwf	_currentLevel,w
  1188  00B6  00C3               	movwf	setFanLevel@tempLevel
  1189                           
  1190                           ;main.c: 72: if (tempLevel > 4) {
  1191  00B7  3005               	movlw	5
  1192  00B8  0243               	subwf	setFanLevel@tempLevel,w
  1193  00B9  1C03               	skipc
  1194  00BA  28BD               	goto	l2544
  1195                           
  1196                           ;main.c: 73: tempLevel = 4;
  1197  00BB  3004               	movlw	4
  1198  00BC  00C3               	movwf	setFanLevel@tempLevel
  1199  00BD                     l2544:	
  1200                           
  1201                           ;main.c: 74: }
  1202                           ;main.c: 76: if (tempLevel < 1) {
  1203  00BD  0843               	movf	setFanLevel@tempLevel,w
  1204  00BE  1D03               	btfss	3,2
  1205  00BF  28C2               	goto	l2548
  1206                           
  1207                           ;main.c: 77: tempLevel = 1;
  1208  00C0  01C3               	clrf	setFanLevel@tempLevel
  1209  00C1  0AC3               	incf	setFanLevel@tempLevel,f
  1210  00C2                     l2548:	
  1211                           
  1212                           ;main.c: 78: }
  1213                           ;main.c: 81: if (FAN_STATUS == 1) {
  1214  00C2  0B78               	decfsz	_FAN_STATUS,w
  1215  00C3  0008               	return
  1216                           
  1217                           ;main.c: 82: currentLevel = tempLevel;
  1218  00C4  0843               	movf	setFanLevel@tempLevel,w
  1219  00C5  00F9               	movwf	_currentLevel
  1220                           
  1221                           ;main.c: 83: switch(currentLevel)
  1222  00C6  28D0               	goto	l2562
  1223  00C7                     l2552:	
  1224                           
  1225                           ;main.c: 86: CCPR1L = 1;
  1226  00C7  3001               	movlw	1
  1227  00C8  28CE               	goto	L4
  1228  00C9                     l2554:	
  1229                           ;main.c: 87: break;
  1230                           
  1231                           
  1232                           ;main.c: 89: CCPR1L = 2;
  1233  00C9  3002               	movlw	2
  1234  00CA  28CE               	goto	L4
  1235  00CB                     l2556:	
  1236                           ;main.c: 90: break;
  1237                           
  1238                           
  1239                           ;main.c: 92: CCPR1L = 3;
  1240  00CB  3003               	movlw	3
  1241  00CC  28CE               	goto	L4
  1242  00CD                     l2558:	
  1243                           ;main.c: 93: break;
  1244                           
  1245                           
  1246                           ;main.c: 95: CCPR1L = 5;
  1247  00CD  3005               	movlw	5
  1248  00CE                     L4:	
  1249  00CE  0095               	movwf	21	;volatile
  1250                           
  1251                           ;main.c: 96: break;
  1252  00CF  28DE               	goto	l2564
  1253  00D0                     l2562:	
  1254  00D0  0879               	movf	_currentLevel,w
  1255                           
  1256                           ; Switch size 1, requested type "space"
  1257                           ; Number of cases is 4, Range of values is 1 to 4
  1258                           ; switch strategies available:
  1259                           ; Name         Instructions Cycles
  1260                           ; simple_byte           13     7 (average)
  1261                           ; direct_byte           13     9 (fixed)
  1262                           ; jumptable            263     9 (fixed)
  1263                           ;	Chosen strategy is simple_byte
  1264  00D1  3A01               	xorlw	1	; case 1
  1265  00D2  1903               	skipnz
  1266  00D3  28C7               	goto	l2552
  1267  00D4  3A03               	xorlw	3	; case 2
  1268  00D5  1903               	skipnz
  1269  00D6  28C9               	goto	l2554
  1270  00D7  3A01               	xorlw	1	; case 3
  1271  00D8  1903               	skipnz
  1272  00D9  28CB               	goto	l2556
  1273  00DA  3A07               	xorlw	7	; case 4
  1274  00DB  1903               	skipnz
  1275  00DC  28CD               	goto	l2558
  1276  00DD  28DE               	goto	l2564
  1277  00DE                     l2564:	
  1278                           
  1279                           ;main.c: 100: setLedOn(currentLevel);
  1280  00DE  0879               	movf	_currentLevel,w
  1281  00DF  28E0               	ljmp	_setLedOn
  1282  00E0                     __end_of_setFanLevel:	
  1283                           
  1284                           	psect	text8
  1285  001A                     __ptext8:	
  1286 ;; *************** function ___awdiv *****************
  1287 ;; Defined at:
  1288 ;;		line 6 in file "E:\cms\SCMCU_IDE_V2.00.07\data\sources\common\awdiv.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  divisor         2    0[BANK0 ] int 
  1291 ;;  dividend        2    2[BANK0 ] int 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  quotient        2    6[BANK0 ] int 
  1294 ;;  sign            1    5[BANK0 ] unsigned char 
  1295 ;;  counter         1    4[BANK0 ] unsigned char 
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  2    0[BANK0 ] int 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : B00/0
  1302 ;;		On exit  : B00/0
  1303 ;;		Unchanged: 800/0
  1304 ;; Data sizes:     COMMON   BANK0   BANK1
  1305 ;;      Params:         0       4       0
  1306 ;;      Locals:         0       4       0
  1307 ;;      Temps:          0       0       0
  1308 ;;      Totals:         0       8       0
  1309 ;;Total ram usage:        8 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    3
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_setFanLevel
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           
  1320                           ;psect for function ___awdiv
  1321  001A                     ___awdiv:	
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1325  001A  01BF               	clrf	___awdiv@sign
  1326  001B  1FBB               	btfss	___awdiv@divisor+1,7
  1327  001C  2824               	goto	l2496
  1328  001D  09BA               	comf	___awdiv@divisor,f
  1329  001E  09BB               	comf	___awdiv@divisor+1,f
  1330  001F  0ABA               	incf	___awdiv@divisor,f
  1331  0020  1903               	skipnz
  1332  0021  0ABB               	incf	___awdiv@divisor+1,f
  1333  0022  01BF               	clrf	___awdiv@sign
  1334  0023  0ABF               	incf	___awdiv@sign,f
  1335  0024                     l2496:	
  1336  0024  1FBD               	btfss	___awdiv@dividend+1,7
  1337  0025  282D               	goto	l2502
  1338  0026  09BC               	comf	___awdiv@dividend,f
  1339  0027  09BD               	comf	___awdiv@dividend+1,f
  1340  0028  0ABC               	incf	___awdiv@dividend,f
  1341  0029  1903               	skipnz
  1342  002A  0ABD               	incf	___awdiv@dividend+1,f
  1343  002B  3001               	movlw	1
  1344  002C  06BF               	xorwf	___awdiv@sign,f
  1345  002D                     l2502:	
  1346  002D  01C0               	clrf	___awdiv@quotient
  1347  002E  01C1               	clrf	___awdiv@quotient+1
  1348  002F  083A               	movf	___awdiv@divisor,w
  1349  0030  043B               	iorwf	___awdiv@divisor+1,w
  1350  0031  1903               	btfsc	3,2
  1351  0032  2852               	goto	l2524
  1352  0033  01BE               	clrf	___awdiv@counter
  1353  0034                     L5:	
  1354  0034  0ABE               	incf	___awdiv@counter,f
  1355  0035  1BBB               	btfsc	___awdiv@divisor+1,7
  1356  0036  283B               	goto	l2512
  1357  0037  1003               	clrc
  1358  0038  0DBA               	rlf	___awdiv@divisor,f
  1359  0039  0DBB               	rlf	___awdiv@divisor+1,f
  1360  003A  2834               	goto	L5
  1361  003B                     l2512:	
  1362  003B  1003               	clrc
  1363  003C  0DC0               	rlf	___awdiv@quotient,f
  1364  003D  0DC1               	rlf	___awdiv@quotient+1,f
  1365  003E  083B               	movf	___awdiv@divisor+1,w
  1366  003F  023D               	subwf	___awdiv@dividend+1,w
  1367  0040  1D03               	skipz
  1368  0041  2844               	goto	u735
  1369  0042  083A               	movf	___awdiv@divisor,w
  1370  0043  023C               	subwf	___awdiv@dividend,w
  1371  0044                     u735:	
  1372  0044  1C03               	skipc
  1373  0045  284E               	goto	L6
  1374  0046  083A               	movf	___awdiv@divisor,w
  1375  0047  02BC               	subwf	___awdiv@dividend,f
  1376  0048  083B               	movf	___awdiv@divisor+1,w
  1377  0049  1C03               	skipc
  1378  004A  03BD               	decf	___awdiv@dividend+1,f
  1379  004B  02BD               	subwf	___awdiv@dividend+1,f
  1380  004C  1440               	bsf	___awdiv@quotient,0
  1381  004D  1003               	clrc
  1382  004E                     L6:	
  1383  004E  0CBB               	rrf	___awdiv@divisor+1,f
  1384  004F  0CBA               	rrf	___awdiv@divisor,f
  1385  0050  0BBE               	decfsz	___awdiv@counter,f
  1386  0051  283B               	goto	l2512
  1387  0052                     l2524:	
  1388  0052  083F               	movf	___awdiv@sign,w
  1389  0053  1903               	btfsc	3,2
  1390  0054  285A               	goto	l2528
  1391  0055  09C0               	comf	___awdiv@quotient,f
  1392  0056  09C1               	comf	___awdiv@quotient+1,f
  1393  0057  0AC0               	incf	___awdiv@quotient,f
  1394  0058  1903               	skipnz
  1395  0059  0AC1               	incf	___awdiv@quotient+1,f
  1396  005A                     l2528:	
  1397  005A  0841               	movf	___awdiv@quotient+1,w
  1398  005B  00BB               	movwf	?___awdiv+1
  1399  005C  0840               	movf	___awdiv@quotient,w
  1400  005D  00BA               	movwf	?___awdiv
  1401  005E  0008               	return
  1402  005F                     __end_of___awdiv:	
  1403                           
  1404                           	psect	text9
  1405  0240                     __ptext9:	
  1406 ;; *************** function _closeFan *****************
  1407 ;; Defined at:
  1408 ;;		line 106 in file "E:\project\scm\uf166fan\main.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 200/0
  1419 ;;		On exit  : 300/100
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1
  1422 ;;      Params:         0       0       0
  1423 ;;      Locals:         0       0       0
  1424 ;;      Temps:          0       0       0
  1425 ;;      Totals:         0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    4
  1429 ;; This function calls:
  1430 ;;		_Init_PWM
  1431 ;;		_setLedOn
  1432 ;; This function is called by:
  1433 ;;		_checkFan
  1434 ;;		_checkKeys
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function _closeFan
  1440  0240                     _closeFan:	
  1441  0240                     l2566:	
  1442                           ;incstack = 0
  1443                           ; Regs used in _closeFan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1444                           
  1445                           
  1446                           ;main.c: 107: Init_PWM();
  1447  0240  2223               	fcall	_Init_PWM
  1448                           
  1449                           ;main.c: 108: currentLevel = 2;
  1450  0241  3002               	movlw	2
  1451  0242  00F9               	movwf	_currentLevel
  1452                           
  1453                           ;main.c: 109: setLedOn(5);
  1454  0243  3005               	movlw	5
  1455  0244  20E0               	fcall	_setLedOn
  1456                           
  1457                           ;main.c: 110: PORTA|=(1<<0);
  1458  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0246  1405               	bsf	5,0	;volatile
  1460                           
  1461                           ;main.c: 112: TRISC|=(1<<2);
  1462  0247  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0248  1507               	bsf	7,2	;volatile
  1464                           
  1465                           ;main.c: 113: fan_check_time = 0;
  1466  0249  01F6               	clrf	_fan_check_time
  1467  024A  01F7               	clrf	_fan_check_time+1
  1468                           
  1469                           ;main.c: 114: FAN_STATUS = 0;
  1470  024B  01F8               	clrf	_FAN_STATUS
  1471  024C  0008               	return
  1472  024D                     __end_of_closeFan:	
  1473                           
  1474                           	psect	text10
  1475  00E0                     __ptext10:	
  1476 ;; *************** function _setLedOn *****************
  1477 ;; Defined at:
  1478 ;;		line 151 in file "E:\project\scm\uf166fan\main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  ledIndex        1    wreg     unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  ledIndex        1    4[COMMON] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1487 ;; Tracked objects:
  1488 ;;		On entry : 200/0
  1489 ;;		On exit  : 200/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1
  1492 ;;      Params:         0       0       0
  1493 ;;      Locals:         1       0       0
  1494 ;;      Temps:          0       0       0
  1495 ;;      Totals:         1       0       0
  1496 ;;Total ram usage:        1 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    3
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_setFanLevel
  1503 ;;		_closeFan
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _setLedOn
  1509  00E0                     _setLedOn:	
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _setLedOn: [wreg-fsr0h+status,2+status,0]
  1513                           ;setLedOn@ledIndex stored from wreg
  1514  00E0  00F4               	movwf	setLedOn@ledIndex
  1515                           
  1516                           ;main.c: 152: switch(ledIndex) {
  1517  00E1  28FD               	goto	l2482
  1518  00E2                     l608:	
  1519                           ;main.c: 153: case 1:
  1520                           
  1521                           
  1522                           ;main.c: 155: TRISC&=~(1<<1);
  1523                           
  1524                           ;main.c: 156: TRISA|=(1<<7);
  1525                           
  1526                           ;main.c: 157: TRISC&=~(1<<0);
  1527                           
  1528                           ;main.c: 158: PORTA&=~(1<<7);
  1529  00E2  210C               	fcall	PL14	;call to abstracted procedure
  1530                           
  1531                           ;main.c: 159: PORTC|=(1<<0);
  1532  00E3  1407               	bsf	7,0	;volatile
  1533                           
  1534                           ;main.c: 160: PORTC&=~(1<<1);
  1535  00E4  1087               	bcf	7,1	;volatile
  1536                           
  1537                           ;main.c: 161: break;
  1538  00E5  0008               	return
  1539  00E6                     l610:	
  1540                           ;main.c: 162: case 2:
  1541                           
  1542                           
  1543                           ;main.c: 163: TRISC&=~(1<<1);
  1544                           
  1545                           ;main.c: 164: TRISA|=(1<<7);
  1546                           
  1547                           ;main.c: 165: TRISC&=~(1<<0);
  1548                           
  1549                           ;main.c: 166: PORTA&=~(1<<7);
  1550  00E6  210C               	fcall	PL14	;call to abstracted procedure
  1551                           
  1552                           ;main.c: 167: PORTC&=~(1<<0);
  1553  00E7  1007               	bcf	7,0	;volatile
  1554                           
  1555                           ;main.c: 168: PORTC|=(1<<1);
  1556  00E8  1487               	bsf	7,1	;volatile
  1557                           
  1558                           ;main.c: 169: break;
  1559  00E9  0008               	return
  1560  00EA                     l611:	
  1561                           ;main.c: 170: case 3:
  1562                           
  1563                           
  1564                           ;main.c: 172: TRISC|=(1<<0);
  1565                           
  1566                           ;main.c: 173: TRISA&=~(1<<7);
  1567                           
  1568                           ;main.c: 174: TRISC&=~(1<<1);
  1569                           
  1570                           ;main.c: 175: PORTA|=(1<<7);
  1571  00EA  2113               	fcall	PL16	;call to abstracted procedure
  1572  00EB  1785               	bsf	5,7	;volatile
  1573                           
  1574                           ;main.c: 176: PORTC&=~(1<<0);
  1575  00EC  1007               	bcf	7,0	;volatile
  1576                           
  1577                           ;main.c: 177: PORTC&=~(1<<1);
  1578  00ED  1087               	bcf	7,1	;volatile
  1579                           
  1580                           ;main.c: 178: break;
  1581  00EE  0008               	return
  1582  00EF                     l612:	
  1583                           ;main.c: 179: case 4:
  1584                           
  1585                           
  1586                           ;main.c: 180: TRISC|=(1<<0);
  1587                           
  1588                           ;main.c: 181: TRISA&=~(1<<7);
  1589                           
  1590                           ;main.c: 182: TRISC&=~(1<<1);
  1591                           
  1592                           ;main.c: 183: PORTA&=~(1<<7);
  1593  00EF  2113               	fcall	PL16	;call to abstracted procedure
  1594  00F0  1385               	bcf	5,7	;volatile
  1595                           
  1596                           ;main.c: 184: PORTC|=(1<<0);
  1597  00F1  1407               	bsf	7,0	;volatile
  1598                           
  1599                           ;main.c: 185: PORTC|=(1<<1);
  1600  00F2  1487               	bsf	7,1	;volatile
  1601                           
  1602                           ;main.c: 186: break;
  1603  00F3  0008               	return
  1604  00F4                     l613:	
  1605                           ;main.c: 187: case 5:
  1606                           
  1607                           
  1608                           ;main.c: 189: TRISC|=(1<<0);
  1609  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1610  00F5  1407               	bsf	7,0	;volatile
  1611                           
  1612                           ;main.c: 190: TRISA|=(1<<7);
  1613  00F6  1785               	bsf	5,7	;volatile
  1614                           
  1615                           ;main.c: 191: TRISC|=(1<<1);
  1616  00F7  1487               	bsf	7,1	;volatile
  1617                           
  1618                           ;main.c: 192: PORTC&=~(1<<0);
  1619  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1620  00F9  1007               	bcf	7,0	;volatile
  1621                           
  1622                           ;main.c: 193: PORTA&=~(1<<7);
  1623  00FA  1385               	bcf	5,7	;volatile
  1624                           
  1625                           ;main.c: 194: PORTC&=~(1<<1);
  1626  00FB  1087               	bcf	7,1	;volatile
  1627                           
  1628                           ;main.c: 195: break;
  1629  00FC  0008               	return
  1630  00FD                     l2482:	
  1631  00FD  0874               	movf	setLedOn@ledIndex,w
  1632                           
  1633                           ; Switch size 1, requested type "space"
  1634                           ; Number of cases is 5, Range of values is 1 to 5
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; direct_byte           14     9 (fixed)
  1638                           ; simple_byte           16     9 (average)
  1639                           ; jumptable            263     9 (fixed)
  1640                           ;	Chosen strategy is direct_byte
  1641  00FE  3EFF               	addlw	-1
  1642  00FF  1C03               	skipc
  1643  0100  0008               	return
  1644  0101  0084               	movwf	4
  1645  0102  3005               	movlw	5
  1646  0103  0204               	subwf	4,w
  1647  0104  1803               	skipnc
  1648  0105  0008               	return
  1649  0106  3002               	movlw	high S2768
  1650  0107  008A               	movwf	10
  1651  0108  3071               	movlw	low S2768
  1652  0109  0704               	addwf	4,w
  1653  010A  0082               	movwf	2
  1654  010B  0008               	return
  1655  010C                     __end_of_setLedOn:	
  1656  010C                     PL14:	
  1657  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1658  010D  1087               	bcf	7,1	;volatile
  1659  010E  1785               	bsf	5,7	;volatile
  1660  010F  1007               	bcf	7,0	;volatile
  1661  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0111  1385               	bcf	5,7	;volatile
  1663  0112  0008               	return
  1664  0113                     __end_ofPL14:	
  1665  0113                     PL16:	
  1666  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0114  1407               	bsf	7,0	;volatile
  1668  0115  1385               	bcf	5,7	;volatile
  1669  0116  1087               	bcf	7,1	;volatile
  1670  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0118  0008               	return
  1672  0119                     __end_ofPL16:	
  1673                           
  1674                           	psect	swtext2
  1675  0271                     __pswtext2:	
  1676  0271                     S2768:	
  1677  0271  28E2               	ljmp	l608
  1678  0272  28E6               	ljmp	l610
  1679  0273  28EA               	ljmp	l611
  1680  0274  28EF               	ljmp	l612
  1681  0275  28F4               	ljmp	l613
  1682                           
  1683                           	psect	text11
  1684  0164                     __ptext11:	
  1685 ;; *************** function _Init_Config *****************
  1686 ;; Defined at:
  1687 ;;		line 270 in file "E:\project\scm\uf166fan\main.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : B00/0
  1698 ;;		On exit  : B00/100
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1
  1701 ;;      Params:         0       0       0
  1702 ;;      Locals:         0       0       0
  1703 ;;      Temps:          0       0       0
  1704 ;;      Totals:         0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    4
  1708 ;; This function calls:
  1709 ;;		_Init_GPIO
  1710 ;;		_Init_Interupt
  1711 ;;		_Init_PWM
  1712 ;;		_Init_System
  1713 ;;		_resetKey
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _Init_Config
  1721  0164                     _Init_Config:	
  1722                           
  1723                           ;main.c: 272: Init_System();
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1727  0164  227A               	fcall	_Init_System
  1728                           
  1729                           ;main.c: 273: Init_GPIO();
  1730  0165  21F0               	fcall	_Init_GPIO
  1731                           
  1732                           ;main.c: 274: Init_Interupt();
  1733  0166  226A               	fcall	_Init_Interupt
  1734                           
  1735                           ;main.c: 275: Init_PWM();
  1736  0167  2223               	fcall	_Init_PWM
  1737                           
  1738                           ;main.c: 277: IOCB = 0x04;
  1739                           
  1740                           ;main.c: 278: TMR0 = 155;
  1741                           
  1742                           ;main.c: 279: TO = 0;
  1743                           
  1744                           ;main.c: 282: key1.key_index = 5;
  1745                           
  1746                           ;main.c: 284: key2.key_index = 4;
  1747                           
  1748                           ;main.c: 286: key3.key_index = 3;
  1749                           
  1750                           ;main.c: 287: resetKey(&key1);
  1751  0168  216F               	fcall	PL4	;call to abstracted procedure
  1752  0169  2203               	fcall	_resetKey
  1753                           
  1754                           ;main.c: 288: resetKey(&key2);
  1755  016A  302C               	movlw	(low (_key2| 0))& (0+255)
  1756  016B  2203               	fcall	_resetKey
  1757                           
  1758                           ;main.c: 289: resetKey(&key3);
  1759  016C  3025               	movlw	(low (_key3| 0))& (0+255)
  1760  016D  2203               	fcall	_resetKey
  1761                           
  1762                           ;main.c: 291: TRISA = 0;
  1763                           
  1764                           ;main.c: 292: TRISB = 0x7E;
  1765                           
  1766                           ;main.c: 293: TRISC = 0;
  1767  016E  297C               	ljmp	PL10	;call to abstracted procedure
  1768  016F                     __end_of_Init_Config:	
  1769  016F                     PL4:	
  1770  016F  3004               	movlw	4
  1771  0170  0096               	movwf	22	;volatile
  1772  0171  309B               	movlw	155
  1773  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0173  0081               	movwf	1	;volatile
  1775  0174  1203               	bcf	3,4	;volatile
  1776  0175  3005               	movlw	5
  1777  0176  00B9               	movwf	_key1+6
  1778  0177  3004               	movlw	4
  1779  0178  00B2               	movwf	_key2+6
  1780  0179  3003               	movlw	3
  1781  017A  00AB               	movwf	_key3+6
  1782  017B  3433               	retlw	(low (_key1| 0))& (0+255)
  1783  017C                     __end_ofPL4:	
  1784  017C                     PL10:	
  1785  017C  1683               	bsf	3,5	;RP0=1, select bank1
  1786  017D  1303               	bcf	3,6	;RP1=0, select bank1
  1787  017E  0185               	clrf	5	;volatile
  1788  017F  307E               	movlw	126
  1789  0180  0086               	movwf	6	;volatile
  1790  0181  0187               	clrf	7	;volatile
  1791  0182  0008               	return
  1792  0183                     __end_ofPL10:	
  1793                           
  1794                           	psect	text12
  1795  0203                     __ptext12:	
  1796 ;; *************** function _resetKey *****************
  1797 ;; Defined at:
  1798 ;;		line 100 in file "E:\project\scm\uf166fan\scankey.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;  key             1    wreg     PTR struct Keys
  1801 ;;		 -> key3(7), key2(7), key1(7), 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  key             1    4[COMMON] PTR struct Keys
  1804 ;;		 -> key3(7), key2(7), key1(7), 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 800/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1
  1814 ;;      Params:         0       0       0
  1815 ;;      Locals:         1       0       0
  1816 ;;      Temps:          0       0       0
  1817 ;;      Totals:         1       0       0
  1818 ;;Total ram usage:        1 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    3
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_Init_Config
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _resetKey
  1830  0203                     _resetKey:	
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _resetKey: [wreg-fsr0h+status,2+status,0]
  1834                           ;resetKey@key stored from wreg
  1835  0203  00F4               	movwf	resetKey@key
  1836                           
  1837                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  1838  0204  3E03               	addlw	3
  1839  0205  0084               	movwf	4
  1840  0206  1383               	bcf	3,7	;select IRP bank0
  1841  0207  0180               	clrf	0
  1842  0208  0A74               	incf	resetKey@key,w
  1843  0209  0084               	movwf	4
  1844  020A  0180               	clrf	0
  1845  020B  0874               	movf	resetKey@key,w
  1846  020C  3E02               	addlw	2
  1847  020D  0084               	movwf	4
  1848  020E  0180               	clrf	0
  1849  020F  0874               	movf	resetKey@key,w
  1850  0210  0084               	movwf	4
  1851  0211  0180               	clrf	0
  1852  0212  0008               	return
  1853  0213                     __end_of_resetKey:	
  1854                           
  1855                           	psect	text13
  1856  027A                     __ptext13:	
  1857 ;; *************** function _Init_System *****************
  1858 ;; Defined at:
  1859 ;;		line 3 in file "E:\project\scm\uf166fan\init.c"
  1860 ;; Parameters:    Size  Location     Type
  1861 ;;		None
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;		None
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2
  1868 ;; Tracked objects:
  1869 ;;		On entry : B00/0
  1870 ;;		On exit  : 300/100
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1
  1873 ;;      Params:         0       0       0
  1874 ;;      Locals:         0       0       0
  1875 ;;      Temps:          0       0       0
  1876 ;;      Totals:         0       0       0
  1877 ;;Total ram usage:        0 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    3
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_Init_Config
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _Init_System
  1889  027A                     _Init_System:	
  1890                           
  1891                           ;incstack = 0
  1892                           ; Regs used in _Init_System: [wreg+status,2]
  1893  027A  0000               	nop	;# 
  1894  027B  0064               	clrwdt	;# 
  1895                           
  1896                           ;init.c: 6: INTCON = 0;
  1897                           
  1898                           ;init.c: 7: OSCCON = 0X71;
  1899                           
  1900                           ;init.c: 8: OPTION_REG = 0x00;
  1901  027C  2A5B               	ljmp	PL8	;call to abstracted procedure
  1902  027D                     __end_of_Init_System:	
  1903                           
  1904                           	psect	text14
  1905  0223                     __ptext14:	
  1906 ;; *************** function _Init_PWM *****************
  1907 ;; Defined at:
  1908 ;;		line 51 in file "E:\project\scm\uf166fan\main.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2
  1917 ;; Tracked objects:
  1918 ;;		On entry : 200/0
  1919 ;;		On exit  : 300/100
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1
  1922 ;;      Params:         0       0       0
  1923 ;;      Locals:         0       0       0
  1924 ;;      Temps:          0       0       0
  1925 ;;      Totals:         0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    3
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_closeFan
  1933 ;;		_Init_Config
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _Init_PWM
  1939  0223                     _Init_PWM:	
  1940                           
  1941                           ;main.c: 52: CCP1CON = 0x0F;
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _Init_PWM: [wreg+status,2]
  1945  0223  300F               	movlw	15
  1946  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1947                           
  1948                           ;main.c: 53: T2CON = 0;
  1949                           
  1950                           ;main.c: 54: PR2 = 7;
  1951                           
  1952                           ;main.c: 56: CCPR1L = 0;
  1953                           
  1954                           ;main.c: 57: TMR2IF = 0;
  1955                           
  1956                           ;main.c: 58: T2CON = 0;
  1957                           
  1958                           ;main.c: 60: TRISC&=~(1<<2);
  1959  0225  2A26               	ljmp	PL6	;call to abstracted procedure
  1960  0226                     __end_of_Init_PWM:	
  1961  0226                     PL6:	
  1962  0226  0097               	movwf	23	;volatile
  1963  0227  0192               	clrf	18	;volatile
  1964  0228  3007               	movlw	7
  1965  0229  1683               	bsf	3,5	;RP0=1, select bank1
  1966  022A  0092               	movwf	18	;volatile
  1967  022B  1283               	bcf	3,5	;RP0=0, select bank0
  1968  022C  0195               	clrf	21	;volatile
  1969  022D  108C               	bcf	12,1	;volatile
  1970  022E  0192               	clrf	18	;volatile
  1971  022F  1683               	bsf	3,5	;RP0=1, select bank1
  1972  0230  1107               	bcf	7,2	;volatile
  1973  0231  0008               	return
  1974  0232                     __end_ofPL6:	
  1975                           
  1976                           	psect	text15
  1977  026A                     __ptext15:	
  1978 ;; *************** function _Init_Interupt *****************
  1979 ;; Defined at:
  1980 ;;		line 27 in file "E:\project\scm\uf166fan\init.c"
  1981 ;; Parameters:    Size  Location     Type
  1982 ;;		None
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      void 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2
  1989 ;; Tracked objects:
  1990 ;;		On entry : 300/100
  1991 ;;		On exit  : 300/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1
  1994 ;;      Params:         0       0       0
  1995 ;;      Locals:         0       0       0
  1996 ;;      Temps:          0       0       0
  1997 ;;      Totals:         0       0       0
  1998 ;;Total ram usage:        0 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    3
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_Init_Config
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _Init_Interupt
  2010  026A                     _Init_Interupt:	
  2011                           
  2012                           ;init.c: 28: OPTION_REG = 0x00;
  2013                           
  2014                           ;incstack = 0
  2015                           ; Regs used in _Init_Interupt: [wreg+status,2]
  2016                           
  2017                           ;init.c: 29: TMR0 = 0;
  2018                           
  2019                           ;init.c: 30: INTCON = 0xE0;
  2020  026A  2A6B               	ljmp	PL12	;call to abstracted procedure
  2021  026B                     __end_of_Init_Interupt:	
  2022  026B                     PL12:	
  2023  026B  0181               	clrf	1	;volatile
  2024  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2025  026D  0181               	clrf	1	;volatile
  2026  026E  30E0               	movlw	224
  2027  026F  008B               	movwf	11	;volatile
  2028  0270  0008               	return
  2029  0271                     __end_ofPL12:	
  2030                           
  2031                           	psect	text16
  2032  01F0                     __ptext16:	
  2033 ;; *************** function _Init_GPIO *****************
  2034 ;; Defined at:
  2035 ;;		line 13 in file "E:\project\scm\uf166fan\init.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2
  2044 ;; Tracked objects:
  2045 ;;		On entry : 300/100
  2046 ;;		On exit  : 300/100
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1
  2049 ;;      Params:         0       0       0
  2050 ;;      Locals:         0       0       0
  2051 ;;      Temps:          0       0       0
  2052 ;;      Totals:         0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    3
  2056 ;; This function calls:
  2057 ;;		Nothing
  2058 ;; This function is called by:
  2059 ;;		_Init_Config
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063                           
  2064                           ;psect for function _Init_GPIO
  2065  01F0                     _Init_GPIO:	
  2066                           
  2067                           ;init.c: 14: TRISA = 0;
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _Init_GPIO: [wreg+status,2]
  2071                           
  2072                           ;init.c: 15: TRISB = 0;
  2073                           
  2074                           ;init.c: 16: TRISC = 0;
  2075                           
  2076                           ;init.c: 17: WPUA = 0xFF;
  2077                           
  2078                           ;init.c: 18: WPUB = 0xFF;
  2079                           
  2080                           ;init.c: 19: WPUC = 0xFF;
  2081                           
  2082                           ;init.c: 20: PORTA = 0xFF;
  2083                           
  2084                           ;init.c: 21: PORTB = 0xFF;
  2085                           
  2086                           ;init.c: 22: PORTC = 0xFF;
  2087                           
  2088                           ;init.c: 23: IOCB = 0x00;
  2089  01F0  29F1               	ljmp	PL2	;call to abstracted procedure
  2090  01F1                     __end_of_Init_GPIO:	
  2091  01F1                     PL2:	
  2092  01F1  0185               	clrf	5	;volatile
  2093  01F2  0186               	clrf	6	;volatile
  2094  01F3  0187               	clrf	7	;volatile
  2095  01F4  30FF               	movlw	255
  2096  01F5  1703               	bsf	3,6	;RP1=1, select bank3
  2097  01F6  008E               	movwf	14	;volatile
  2098  01F7  1303               	bcf	3,6	;RP1=0, select bank1
  2099  01F8  0095               	movwf	21	;volatile
  2100  01F9  1703               	bsf	3,6	;RP1=1, select bank3
  2101  01FA  008F               	movwf	15	;volatile
  2102  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  2103  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  2104  01FD  0085               	movwf	5	;volatile
  2105  01FE  0086               	movwf	6	;volatile
  2106  01FF  0087               	movwf	7	;volatile
  2107  0200  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0201  0196               	clrf	22	;volatile
  2109  0202  0008               	return
  2110  0203                     __end_ofPL2:	
  2111                           
  2112                           	psect	text17
  2113  01DA                     __ptext17:	
  2114 ;; *************** function _Timer0_Isr *****************
  2115 ;; Defined at:
  2116 ;;		line 340 in file "E:\project\scm\uf166fan\main.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1
  2130 ;;      Params:         0       0       0
  2131 ;;      Locals:         0       0       0
  2132 ;;      Temps:          3       0       0
  2133 ;;      Totals:         3       0       0
  2134 ;;Total ram usage:        3 bytes
  2135 ;; Hardware stack levels used:    1
  2136 ;; Hardware stack levels required when called:    2
  2137 ;; This function calls:
  2138 ;;		i1_Init_Config
  2139 ;; This function is called by:
  2140 ;;		Interrupt level 1
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _Timer0_Isr
  2146  01DA                     _Timer0_Isr:	
  2147                           
  2148                           ;main.c: 341: if (T0IF) {
  2149  01DA  1D0B               	btfss	11,2	;volatile
  2150  01DB  29E3               	goto	i1l2422
  2151                           
  2152                           ;main.c: 343: TMR0 += 155;
  2153  01DC  309B               	movlw	155
  2154  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2155  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2156  01DF  0781               	addwf	1,f	;volatile
  2157                           
  2158                           ;main.c: 346: T0IF = 0;
  2159  01E0  110B               	bcf	11,2	;volatile
  2160                           
  2161                           ;main.c: 347: time0Flag = 1;
  2162  01E1  01A4               	clrf	_time0Flag
  2163  01E2  0AA4               	incf	_time0Flag,f
  2164  01E3                     i1l2422:	
  2165                           
  2166                           ;main.c: 349: }
  2167                           ;main.c: 351: if (RBIF) {
  2168  01E3  1C0B               	btfss	11,0	;volatile
  2169  01E4  29E7               	goto	i1l651
  2170                           
  2171                           ;main.c: 352: RBIF = 0;
  2172  01E5  100B               	bcf	11,0	;volatile
  2173                           
  2174                           ;main.c: 353: Init_Config();
  2175  01E6  224D               	fcall	i1_Init_Config
  2176  01E7                     i1l651:	
  2177  01E7  0873               	movf	??_Timer0_Isr+2,w
  2178  01E8  008A               	movwf	10
  2179  01E9  0872               	movf	??_Timer0_Isr+1,w
  2180  01EA  0084               	movwf	4
  2181  01EB  0E71               	swapf	??_Timer0_Isr^(0+-128),w
  2182  01EC  0083               	movwf	3
  2183  01ED  0EFE               	swapf	126,f
  2184  01EE  0E7E               	swapf	126,w
  2185  01EF  0009               	retfie
  2186  01F0                     __end_of_Timer0_Isr:	
  2187                           
  2188                           	psect	intentry
  2189  0004                     __pintentry:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _Timer0_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2192                           
  2193  0004                     interrupt_function:	
  2194  007E                     saved_w	set	btemp
  2195  0004  00FE               	movwf	btemp
  2196  0005  0E03               	swapf	3,w
  2197  0006  00F1               	movwf	??_Timer0_Isr
  2198  0007  0804               	movf	4,w
  2199  0008  00F2               	movwf	??_Timer0_Isr+1
  2200  0009  080A               	movf	10,w
  2201  000A  00F3               	movwf	??_Timer0_Isr+2
  2202  000B  29DA               	ljmp	_Timer0_Isr
  2203                           
  2204                           	psect	text18
  2205  024D                     __ptext18:	
  2206 ;; *************** function i1_Init_Config *****************
  2207 ;; Defined at:
  2208 ;;		line 270 in file "E:\project\scm\uf166fan\main.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : B00/100
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1
  2222 ;;      Params:         0       0       0
  2223 ;;      Locals:         0       0       0
  2224 ;;      Temps:          0       0       0
  2225 ;;      Totals:         0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    1
  2229 ;; This function calls:
  2230 ;;		i1_Init_GPIO
  2231 ;;		i1_Init_Interupt
  2232 ;;		i1_Init_PWM
  2233 ;;		i1_Init_System
  2234 ;;		i1_resetKey
  2235 ;; This function is called by:
  2236 ;;		_Timer0_Isr
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function i1_Init_Config
  2242  024D                     i1_Init_Config:	
  2243                           
  2244                           ;main.c: 272: Init_System();
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in i1_Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2248  024D  2258               	fcall	i1_Init_System
  2249                           
  2250                           ;main.c: 273: Init_GPIO();
  2251  024E  2280               	fcall	i1_Init_GPIO
  2252                           
  2253                           ;main.c: 274: Init_Interupt();
  2254  024F  227F               	fcall	i1_Init_Interupt
  2255                           
  2256                           ;main.c: 275: Init_PWM();
  2257  0250  227D               	fcall	i1_Init_PWM
  2258                           
  2259                           ;main.c: 277: IOCB = 0x04;
  2260                           
  2261                           ;main.c: 278: TMR0 = 155;
  2262                           
  2263                           ;main.c: 279: TO = 0;
  2264                           
  2265                           ;main.c: 282: key1.key_index = 5;
  2266                           
  2267                           ;main.c: 284: key2.key_index = 4;
  2268                           
  2269                           ;main.c: 286: key3.key_index = 3;
  2270                           
  2271                           ;main.c: 287: resetKey(&key1);
  2272  0251  216F               	fcall	PL4	;call to abstracted procedure
  2273  0252  2213               	fcall	i1_resetKey
  2274                           
  2275                           ;main.c: 288: resetKey(&key2);
  2276  0253  302C               	movlw	(low (_key2| 0))& (0+255)
  2277  0254  2213               	fcall	i1_resetKey
  2278                           
  2279                           ;main.c: 289: resetKey(&key3);
  2280  0255  3025               	movlw	(low (_key3| 0))& (0+255)
  2281  0256  2213               	fcall	i1_resetKey
  2282                           
  2283                           ;main.c: 291: TRISA = 0;
  2284                           
  2285                           ;main.c: 292: TRISB = 0x7E;
  2286                           
  2287                           ;main.c: 293: TRISC = 0;
  2288  0257  297C               	ljmp	PL10	;call to abstracted procedure
  2289  0258                     __end_ofi1_Init_Config:	
  2290                           
  2291                           	psect	text19
  2292  0213                     __ptext19:	
  2293 ;; *************** function i1_resetKey *****************
  2294 ;; Defined at:
  2295 ;;		line 100 in file "E:\project\scm\uf166fan\scankey.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  key             1    wreg     PTR struct Keys
  2298 ;;		 -> key3(7), key2(7), key1(7), 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  key             1    0[COMMON] PTR struct Keys
  2301 ;;		 -> key3(7), key2(7), key1(7), 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 800/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1
  2311 ;;      Params:         0       0       0
  2312 ;;      Locals:         1       0       0
  2313 ;;      Temps:          0       0       0
  2314 ;;      Totals:         1       0       0
  2315 ;;Total ram usage:        1 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		i1_Init_Config
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function i1_resetKey
  2326  0213                     i1_resetKey:	
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in i1_resetKey: [wreg-fsr0h+status,2+status,0]
  2330                           ;i1resetKey@key stored from wreg
  2331  0213  00F0               	movwf	i1resetKey@key
  2332                           
  2333                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2334  0214  3E03               	addlw	3
  2335  0215  0084               	movwf	4
  2336  0216  1383               	bcf	3,7	;select IRP bank0
  2337  0217  0180               	clrf	0
  2338  0218  0A70               	incf	i1resetKey@key,w
  2339  0219  0084               	movwf	4
  2340  021A  0180               	clrf	0
  2341  021B  0870               	movf	i1resetKey@key,w
  2342  021C  3E02               	addlw	2
  2343  021D  0084               	movwf	4
  2344  021E  0180               	clrf	0
  2345  021F  0870               	movf	i1resetKey@key,w
  2346  0220  0084               	movwf	4
  2347  0221  0180               	clrf	0
  2348  0222  0008               	return
  2349  0223                     __end_ofi1_resetKey:	
  2350                           
  2351                           	psect	text20
  2352  0258                     __ptext20:	
  2353 ;; *************** function i1_Init_System *****************
  2354 ;; Defined at:
  2355 ;;		line 3 in file "E:\project\scm\uf166fan\init.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 300/100
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1
  2369 ;;      Params:         0       0       0
  2370 ;;      Locals:         0       0       0
  2371 ;;      Temps:          0       0       0
  2372 ;;      Totals:         0       0       0
  2373 ;;Total ram usage:        0 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		i1_Init_Config
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function i1_Init_System
  2384  0258                     i1_Init_System:	
  2385                           
  2386                           ;incstack = 0
  2387                           ; Regs used in i1_Init_System: [wreg+status,2]
  2388  0258  0000               	nop	;# 
  2389  0259  0064               	clrwdt	;# 
  2390                           
  2391                           ;init.c: 6: INTCON = 0;
  2392                           
  2393                           ;init.c: 7: OSCCON = 0X71;
  2394                           
  2395                           ;init.c: 8: OPTION_REG = 0x00;
  2396  025A  2A5B               	ljmp	PL8	;call to abstracted procedure
  2397  025B                     __end_ofi1_Init_System:	
  2398  025B                     PL8:	
  2399  025B  018B               	clrf	11	;volatile
  2400  025C  3071               	movlw	113
  2401  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2402  025E  1303               	bcf	3,6	;RP1=0, select bank1
  2403  025F  008F               	movwf	15	;volatile
  2404  0260  0181               	clrf	1	;volatile
  2405  0261  0008               	return
  2406  0262                     __end_ofPL8:	
  2407                           
  2408                           	psect	text21
  2409  027D                     __ptext21:	
  2410 ;; *************** function i1_Init_PWM *****************
  2411 ;; Defined at:
  2412 ;;		line 51 in file "E:\project\scm\uf166fan\main.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2
  2421 ;; Tracked objects:
  2422 ;;		On entry : 300/0
  2423 ;;		On exit  : 300/100
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMMON   BANK0   BANK1
  2426 ;;      Params:         0       0       0
  2427 ;;      Locals:         0       0       0
  2428 ;;      Temps:          0       0       0
  2429 ;;      Totals:         0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		i1_Init_Config
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function i1_Init_PWM
  2441  027D                     i1_Init_PWM:	
  2442                           
  2443                           ;main.c: 52: CCP1CON = 0x0F;
  2444                           
  2445                           ;incstack = 0
  2446                           ; Regs used in i1_Init_PWM: [wreg+status,2]
  2447  027D  300F               	movlw	15
  2448                           
  2449                           ;main.c: 53: T2CON = 0;
  2450                           
  2451                           ;main.c: 54: PR2 = 7;
  2452                           
  2453                           ;main.c: 56: CCPR1L = 0;
  2454                           
  2455                           ;main.c: 57: TMR2IF = 0;
  2456                           
  2457                           ;main.c: 58: T2CON = 0;
  2458                           
  2459                           ;main.c: 60: TRISC&=~(1<<2);
  2460  027E  2A26               	ljmp	PL6	;call to abstracted procedure
  2461  027F                     __end_ofi1_Init_PWM:	
  2462                           
  2463                           	psect	text22
  2464  027F                     __ptext22:	
  2465 ;; *************** function i1_Init_Interupt *****************
  2466 ;; Defined at:
  2467 ;;		line 27 in file "E:\project\scm\uf166fan\init.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  1    wreg      void 
  2474 ;; Registers used:
  2475 ;;		wreg, status,2
  2476 ;; Tracked objects:
  2477 ;;		On entry : 300/100
  2478 ;;		On exit  : 300/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMMON   BANK0   BANK1
  2481 ;;      Params:         0       0       0
  2482 ;;      Locals:         0       0       0
  2483 ;;      Temps:          0       0       0
  2484 ;;      Totals:         0       0       0
  2485 ;;Total ram usage:        0 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		i1_Init_Config
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function i1_Init_Interupt
  2496  027F                     i1_Init_Interupt:	
  2497                           
  2498                           ;init.c: 28: OPTION_REG = 0x00;
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in i1_Init_Interupt: [wreg+status,2]
  2502                           
  2503                           ;init.c: 29: TMR0 = 0;
  2504                           
  2505                           ;init.c: 30: INTCON = 0xE0;
  2506  027F  2A6B               	ljmp	PL12	;call to abstracted procedure
  2507  0280                     __end_ofi1_Init_Interupt:	
  2508                           
  2509                           	psect	text23
  2510  0280                     __ptext23:	
  2511 ;; *************** function i1_Init_GPIO *****************
  2512 ;; Defined at:
  2513 ;;		line 13 in file "E:\project\scm\uf166fan\init.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;		None
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2
  2522 ;; Tracked objects:
  2523 ;;		On entry : 300/100
  2524 ;;		On exit  : 300/100
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1
  2527 ;;      Params:         0       0       0
  2528 ;;      Locals:         0       0       0
  2529 ;;      Temps:          0       0       0
  2530 ;;      Totals:         0       0       0
  2531 ;;Total ram usage:        0 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		i1_Init_Config
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function i1_Init_GPIO
  2542  0280                     i1_Init_GPIO:	
  2543                           
  2544                           ;init.c: 14: TRISA = 0;
  2545                           
  2546                           ;incstack = 0
  2547                           ; Regs used in i1_Init_GPIO: [wreg+status,2]
  2548                           
  2549                           ;init.c: 15: TRISB = 0;
  2550                           
  2551                           ;init.c: 16: TRISC = 0;
  2552                           
  2553                           ;init.c: 17: WPUA = 0xFF;
  2554                           
  2555                           ;init.c: 18: WPUB = 0xFF;
  2556                           
  2557                           ;init.c: 19: WPUC = 0xFF;
  2558                           
  2559                           ;init.c: 20: PORTA = 0xFF;
  2560                           
  2561                           ;init.c: 21: PORTB = 0xFF;
  2562                           
  2563                           ;init.c: 22: PORTC = 0xFF;
  2564                           
  2565                           ;init.c: 23: IOCB = 0x00;
  2566  0280  29F1               	ljmp	PL2	;call to abstracted procedure
  2567  0281                     __end_ofi1_Init_GPIO:	
  2568  007E                     btemp	set	126	;btemp
  2569  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     12      38
    BANK1            80      0       0

Pointer List with Targets:

    resetKey@key	PTR struct Keys size(1) Largest target is 7
		 -> key3(BANK0[7]), key2(BANK0[7]), key1(BANK0[7]), 

    key_driver@key	PTR struct Keys size(1) Largest target is 7
		 -> key3(BANK0[7]), key2(BANK0[7]), key1(BANK0[7]), 

    sacnKeyInput@key	PTR struct Keys size(1) Largest target is 7
		 -> key3(BANK0[7]), key2(BANK0[7]), key1(BANK0[7]), 


Critical Paths under _main in COMMON

    _scanKeys->_sacnKeyInput
    _checkKeys->_checkFan
    _setFanLevel->_setLedOn
    _closeFan->_setLedOn
    _Init_Config->_resetKey

Critical Paths under _Timer0_Isr in COMMON

    i1_Init_Config->i1_resetKey

Critical Paths under _main in BANK0

    _main->_checkKeys
    _scanKeys->_sacnKeyInput
    _checkKeys->_setFanLevel
    _checkFan->_setFanLevel
    _setFanLevel->___awdiv

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2712
                        _Init_Config
                          _checkKeys
                     _checkUsbStatus
                           _scanKeys
 ---------------------------------------------------------------------------------
 (1) _scanKeys                                             0     0      0     214
                       _sacnKeyInput
 ---------------------------------------------------------------------------------
 (2) _sacnKeyInput                                         3     3      0     214
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkUsbStatus                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkKeys                                            2     2      0    2329
                                             10 BANK0      2     2      0
                           _checkFan
                           _closeFan
                         _key_driver
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _key_driver                                           3     3      0     597
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _checkFan                                             1     1      0     832
                                              5 COMMON     1     1      0
                           _closeFan
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _setFanLevel                                          4     4      0     801
                                              8 BANK0      2     2      0
                            ___awdiv
                           _setLedOn
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     606
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _closeFan                                             0     0      0      31
                           _Init_PWM
                           _setLedOn
 ---------------------------------------------------------------------------------
 (3) _setLedOn                                             1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Config                                          0     0      0     169
                          _Init_GPIO
                      _Init_Interupt
                           _Init_PWM
                        _Init_System
                           _resetKey
 ---------------------------------------------------------------------------------
 (2) _resetKey                                             1     1      0     169
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Interupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_Isr                                           3     3      0      88
                                              1 COMMON     3     3      0
                      i1_Init_Config
 ---------------------------------------------------------------------------------
 (6) i1_Init_Config                                        0     0      0      88
                        i1_Init_GPIO
                    i1_Init_Interupt
                         i1_Init_PWM
                      i1_Init_System
                         i1_resetKey
 ---------------------------------------------------------------------------------
 (7) i1_resetKey                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_Init_System                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_PWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_Interupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_GPIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Config
     _Init_GPIO
     _Init_Interupt
     _Init_PWM
     _Init_System
     _resetKey
   _checkKeys
     _checkFan
       _closeFan
         _Init_PWM
         _setLedOn
       _setFanLevel
         ___awdiv
         _setLedOn
     _closeFan
       _Init_PWM
       _setLedOn
     _key_driver
     _setFanLevel
       ___awdiv
       _setLedOn
   _checkUsbStatus
   _scanKeys
     _sacnKeyInput

 _Timer0_Isr (ROOT)
   i1_Init_Config
     i1_Init_GPIO
     i1_Init_Interupt
     i1_Init_PWM
     i1_Init_System
     i1_resetKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30       8        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 04 17:18:04 2020

         ??i1_Init_System 0070                         pc 0002                        PL2 01F1  
                      PL4 016F                        PL6 0226                        PL8 025B  
                      _TO 001C              ___awdiv@sign 003F                        fsr 0004  
                     PL10 017C                       PL12 026B                       PL14 010C  
                     PL16 0113                       l610 00E6                       l611 00EA  
                     l612 00EF                       l613 00F4                       l608 00E2  
                     l624 0193                       l573 01D8                       _PR2 0092  
                     u805 0126                       u735 0044                       u844 01AE  
                     u845 01AC                       fsr0 0004                       indf 0000  
                    S2766 0276                      S2768 0271                      l2502 002D  
                    l2512 003B                      l2524 0052                      l2620 007A  
                    l2612 0070                      l2292 01CE                      l2528 005A  
                    l2552 00C7                      l2544 00BD                      l2536 00A8  
                    l2632 008D                      l2640 00A0                      l2608 0068  
                    l2712 015A                      l2704 0150                      l2482 00FD  
                    l2554 00C9                      l2562 00D0                      l2634 008F  
                    l2626 007F                      l2556 00CB                      l2564 00DE  
                    l2548 00C2                      l2580 0119                      l2566 0240  
                    l2558 00CD                      l2590 0132                      l2638 0093  
                    l2496 0024                      l2666 018B                      l2674 018E  
                    l2588 0130                      l2684 019A                      l2694 0144  
                    _T0IF 005A                      _IOCB 0096                      _RBIF 0058  
                    _TMR0 0001    __end_of_checkUsbStatus 01DA                      _WPUA 018E  
                    _WPUB 0095                      _WPUC 018F                      _key1 0033  
                    _key2 002C                      _key3 0025                      _main 0143  
                    btemp 007E                i1_resetKey 0213                      start 000C  
           ??_Init_Config 0075             ??_Init_System 0074             _Init_Interupt 026A  
                   ?_main 0070           __end_of___awdiv 005F           ___awdiv@divisor 003A  
                   _T2CON 0012        key_driver@key_read 003B                     i1l651 01E7  
         ___awdiv@counter 003E                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087               ?i1_Init_PWM 0070                     pclath 000A  
         ?_checkUsbStatus 0070                     status 0003                     wtemp0 007E  
            ?_setFanLevel 0070           __initialization 000D              __end_of_main 0164  
        __end_of_Init_PWM 0226            ?_Init_Interupt 0070       __end_of_Init_Config 016F  
          _fan_check_time 0076                    ??_main 0076       __end_of_Init_System 027D  
                  _CCPR1L 0015          ___awdiv@dividend 003C                    i1l2422 01E3  
                  _INTCON 000B             ?_sacnKeyInput 0070        __size_of_Init_GPIO 0001  
                  _OSCCON 008F                    _TMR2IF 0061          __end_of_checkFan 0143  
             ?i1_resetKey 0070                _Timer0_Isr 01DA          __end_of_closeFan 024D  
        setLedOn@ledIndex 0074                 ??___awdiv 0074       __size_ofi1_Init_PWM 0002  
            ?i1_Init_GPIO 0070          __end_of_scanKeys 0240          ___awdiv@quotient 0040  
        __end_of_setLedOn 010C          __end_of_resetKey 0213              __pdataCOMMON 0078  
         i1_Init_Interupt 027F                    saved_w 007E            ??_sacnKeyInput 0074  
 __end_of__initialization 0018               _Init_Config 0164            __pcstackCOMMON 0070  
         ??_Init_Interupt 0074        __size_of_checkKeys 001E               _Init_System 027A  
              __end_ofPL2 0203                __end_ofPL4 017C                __end_ofPL6 0232  
              __end_ofPL8 0262         __end_of_Init_GPIO 01F1       __size_ofi1_resetKey 0010  
              __pbssBANK0 0020                 ?_Init_PWM 0070               ?_Timer0_Isr 0070  
   __end_ofi1_Init_Config 0258                __pmaintext 0143      __size_of_setFanLevel 003E  
              __pintentry 0004                   _CCP1CON 0017     __end_ofi1_Init_System 025B  
 __end_ofi1_Init_Interupt 0280                 ?_checkFan 0070      key_driver@key_return 003A  
        ??_checkUsbStatus 0074                 ?_closeFan 0070              ??i1_Init_PWM 0070  
       __end_of_checkKeys 01A1                ??_Init_PWM 0074                 ?_scanKeys 0070  
               ?_setLedOn 0070                 ?_resetKey 0070               resetKey@key 0074  
                 ___awdiv 001A                _key_driver 005F      __end_of_sacnKeyInput 01BE  
      __end_ofi1_Init_PWM 027F                   __ptext1 0232                   __ptext2 01A1  
                 __ptext3 01BE                   __ptext4 0183                   __ptext5 005F  
                 __ptext6 0119                   __ptext7 00A2                   __ptext8 001A  
                 __ptext9 0240      __size_ofi1_Init_GPIO 0001                ??_checkFan 0075  
     __size_of_Timer0_Isr 0016                ??_closeFan 0075                   clrloop0 0263  
    end_of_initialization 0018                ??_scanKeys 0076              ??i1_resetKey 0070  
              ??_setLedOn 0074                ??_resetKey 0074           sacnKeyInput@key 003A  
        ?i1_Init_Interupt 0070        __end_ofi1_resetKey 0223              ?_Init_Config 0070  
             ?_key_driver 0070              ?_Init_System 0070          setFanLevel@level 0042  
           __pidataCOMMON 0000               __end_ofPL10 0183               __end_ofPL12 0271  
             __end_ofPL14 0113               __end_ofPL16 0119       start_initialization 000D  
               _Init_GPIO 01F0         __size_of_Init_PWM 0003              ??_Timer0_Isr 0071  
   __size_of_sacnKeyInput 001D     __end_of_Init_Interupt 026B               __pbssCOMMON 0076  
              ?_Init_GPIO 0070                 ___latbits 0000             __pcstackBANK0 003A  
       __size_of_checkFan 002A        __end_of_Timer0_Isr 01F0       __size_of_key_driver 0043  
       __size_of_closeFan 000D              _sacnKeyInput 01A1              _currentLevel 0079  
               _checkKeys 0183       checkKeys@key2Status 0044             ??_setFanLevel 0075  
     checkKeys@key3Status 0045         __size_of_scanKeys 000E         __size_of_setLedOn 002C  
                ?___awdiv 003A         __size_of_resetKey 0010                 __pswtext1 0276  
               __pswtext2 0271                 _count10Ms 0020                 _countTime 0022  
  __size_ofi1_Init_Config 000B    __size_ofi1_Init_System 0003         interrupt_function 0004  
              ?_checkKeys 0070                 _time0Flag 0024                 clear_ram0 0262  
    __size_of_Init_Config 000B      setFanLevel@tempLevel 0043             ??i1_Init_GPIO 0070  
     __end_of_setFanLevel 00E0      __size_of_Init_System 0003               ??_Init_GPIO 0074  
                _Init_PWM 0223   __size_of_checkUsbStatus 001C             i1_Init_Config 024D  
            ??_key_driver 0074          __size_of___awdiv 0045             key_driver@key 003C  
           i1_Init_System 0258                  _checkFan 0119                _FAN_STATUS 0078  
     __end_ofi1_Init_GPIO 0281  __size_ofi1_Init_Interupt 0001                  __ptext10 00E0  
                __ptext11 0164                  __ptext20 0258                  __ptext12 0203  
                __ptext21 027D                  __ptext13 027A                  __ptext22 027F  
                __ptext14 0223                  __ptext23 0280                  __ptext15 026A  
                __ptext16 01F0                  __ptext17 01DA                  __ptext18 024D  
                __ptext19 0213                  _closeFan 0240        __end_of_key_driver 00A2  
           __size_of_main 0021               ??_checkKeys 0076                  _scanKeys 0232  
                _setLedOn 00E0                  _resetKey 0203               _setFanLevel 00A2  
          ?i1_Init_Config 0070            ?i1_Init_System 0070                  intlevel1 0000  
           i1resetKey@key 0070               i1_Init_GPIO 0280                _OPTION_REG 0081  
              i1_Init_PWM 027D    __size_of_Init_Interupt 0001         ??i1_Init_Interupt 0070  
          _checkUsbStatus 01BE           ??i1_Init_Config 0071  
