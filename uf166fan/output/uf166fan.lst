

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 01 13:39:33 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1711C
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	swtext2,local,class=CONST,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	pa_nodes0,global,class=CODE,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 1.45
    45                           ; Generated 16/11/2017 GMT
    46                           ; 
    47                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataBANK0
    80  0000                     __pidataBANK0:	
    81  0017                     _CCP1CON	set	23
    82  0015                     _CCPR1L	set	21
    83  0012                     _T2CON	set	18
    84  000B                     _INTCON	set	11
    85  0007                     _PORTC	set	7
    86  0006                     _PORTB	set	6
    87  0005                     _PORTA	set	5
    88  0001                     _TMR0	set	1
    89  0061                     _TMR2IF	set	97
    90  005A                     _T0IF	set	90
    91  0058                     _RBIF	set	88
    92  001C                     _TO	set	28
    93  0096                     _IOCB	set	150
    94  0095                     _WPUB	set	149
    95  0092                     _PR2	set	146
    96  008F                     _OSCCON	set	143
    97  0087                     _TRISC	set	135
    98  0086                     _TRISB	set	134
    99  0085                     _TRISA	set	133
   100  0081                     _OPTION_REG	set	129
   101  018F                     _WPUC	set	399
   102  018E                     _WPUA	set	398
   103                           
   104                           	psect	cinit
   105  000D                     start_initialization:	
   106                           ; #config settings
   107                           
   108  000D                     __initialization:	
   109                           
   110                           ;initializer for _FAN_STATUS
   111  000D  3002               	movlw	2
   112  000E  00C6               	movwf	__pdataBANK0& (0+127)
   113                           
   114                           ;initializer for _currentLevel
   115  000F  00C7               	movwf	(__pdataBANK0+1)& (0+127)
   116  0010  3020               	movlw	low __pbssBANK0
   117                           
   118                           ; Clear objects allocated to BANK0
   119  0011  1383               	bcf	3,7	;select IRP bank0
   120  0012  0084               	movwf	4
   121  0013  3039               	movlw	low (__pbssBANK0+25)
   122  0014  2293               	fcall	clear_ram0
   123                           
   124                           ; Clear objects allocated to COMMON
   125  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   126  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   127  0017  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   128  0018                     end_of_initialization:	
   129                           ;End of C runtime variable initialization code
   130                           
   131  0018                     __end_of__initialization:	
   132  0018  0183               	clrf	3
   133  0019  29DB               	ljmp	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMMON
   136  0077                     __pbssCOMMON:	
   137  0077                     _countTime:	
   138  0077                     	ds	2
   139  0079                     _time0Flag:	
   140  0079                     	ds	1
   141                           
   142                           	psect	bssBANK0
   143  0020                     __pbssBANK0:	
   144  0020                     _fan_check_time:	
   145  0020                     	ds	2
   146  0022                     _count10Ms:	
   147  0022                     	ds	2
   148  0024                     _key3:	
   149  0024                     	ds	7
   150  002B                     _key2:	
   151  002B                     	ds	7
   152  0032                     _key1:	
   153  0032                     	ds	7
   154                           
   155                           	psect	dataBANK0
   156  0046                     __pdataBANK0:	
   157  0046                     _FAN_STATUS:	
   158  0046                     	ds	1
   159  0047                     _currentLevel:	
   160  0047                     	ds	1
   161                           
   162                           	psect	clrtext
   163  0293                     clear_ram0:	
   164                           ;	Called with FSR containing the base address, and
   165                           ;	W with the last address+1
   166                           
   167  0293  0064               	clrwdt	;clear the watchdog before getting into this loop
   168  0294                     clrloop0:	
   169  0294  0180               	clrf	0	;clear RAM location pointed to by FSR
   170  0295  0A84               	incf	4,f	;increment pointer
   171  0296  0604               	xorwf	4,w	;XOR with final address
   172  0297  1903               	btfsc	3,2	;have we reached the end yet?
   173  0298  3400               	retlw	0	;all done for this memory range, return
   174  0299  0604               	xorwf	4,w	;XOR again to restore value
   175  029A  2A94               	goto	clrloop0	;do the next byte
   176                           
   177                           	psect	cstackCOMMON
   178  0070                     __pcstackCOMMON:	
   179  0070                     ?_setLedOn:	
   180  0070                     ?_sacnKeyInput:	
   181                           ; 1 bytes @ 0x0
   182                           
   183  0070                     ?_key_read:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0070                     ?_Init_Config:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0070                     ?_Init_System:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0070                     ?_Init_GPIO:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ?_Init_Interupt:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0070                     ?_resetKey:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_checkUsbStatus:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_Init_PWM:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?_setFanLevel:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_closeFan:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_checkFan:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_scanKeys:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_checkKeys:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_main:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_Timer0_Isr:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?_key_driver:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?i1_Init_PWM:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ??i1_Init_PWM:	
   235                           ; 1 bytes @ 0x0
   236                           
   237  0070                     ?i1_Init_Config:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0070                     ?i1_resetKey:	
   241                           ; 1 bytes @ 0x0
   242                           
   243  0070                     ??i1_resetKey:	
   244                           ; 1 bytes @ 0x0
   245                           
   246  0070                     ?i1_Init_System:	
   247                           ; 1 bytes @ 0x0
   248                           
   249  0070                     ??i1_Init_System:	
   250                           ; 1 bytes @ 0x0
   251                           
   252  0070                     ?i1_Init_GPIO:	
   253                           ; 1 bytes @ 0x0
   254                           
   255  0070                     ??i1_Init_GPIO:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?i1_Init_Interupt:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??i1_Init_Interupt:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     i1resetKey@key:	
   265                           ; 1 bytes @ 0x0
   266                           
   267                           
   268                           ; 1 bytes @ 0x0
   269  0070                     	ds	1
   270  0071                     ??_Timer0_Isr:	
   271  0071                     ??i1_Init_Config:	
   272                           ; 1 bytes @ 0x1
   273                           
   274                           
   275                           ; 1 bytes @ 0x1
   276  0071                     	ds	3
   277  0074                     ??_setLedOn:	
   278  0074                     ??_sacnKeyInput:	
   279                           ; 1 bytes @ 0x4
   280                           
   281  0074                     ??_Init_System:	
   282                           ; 1 bytes @ 0x4
   283                           
   284  0074                     ??_Init_GPIO:	
   285                           ; 1 bytes @ 0x4
   286                           
   287  0074                     ??_Init_Interupt:	
   288                           ; 1 bytes @ 0x4
   289                           
   290  0074                     ??_resetKey:	
   291                           ; 1 bytes @ 0x4
   292                           
   293  0074                     ??_checkUsbStatus:	
   294                           ; 1 bytes @ 0x4
   295                           
   296  0074                     ??_Init_PWM:	
   297                           ; 1 bytes @ 0x4
   298                           
   299  0074                     ??_key_driver:	
   300                           ; 1 bytes @ 0x4
   301                           
   302  0074                     ?___bmul:	
   303                           ; 1 bytes @ 0x4
   304                           
   305  0074                     ??___awdiv:	
   306                           ; 1 bytes @ 0x4
   307                           
   308  0074                     setLedOn@ledIndex:	
   309                           ; 1 bytes @ 0x4
   310                           
   311  0074                     key_driver@key_return:	
   312                           ; 1 bytes @ 0x4
   313                           
   314  0074                     resetKey@key:	
   315                           ; 1 bytes @ 0x4
   316                           
   317  0074                     ___bmul@multiplicand:	
   318                           ; 1 bytes @ 0x4
   319                           
   320                           
   321                           ; 1 bytes @ 0x4
   322  0074                     	ds	1
   323  0075                     ??_Init_Config:	
   324  0075                     ??_closeFan:	
   325                           ; 1 bytes @ 0x5
   326                           
   327  0075                     ??___bmul:	
   328                           ; 1 bytes @ 0x5
   329                           
   330  0075                     key_driver@key_read:	
   331                           ; 1 bytes @ 0x5
   332                           
   333  0075                     ___bmul@product:	
   334                           ; 1 bytes @ 0x5
   335                           
   336                           
   337                           ; 1 bytes @ 0x5
   338  0075                     	ds	1
   339  0076                     sacnKeyInput@key:	
   340  0076                     key_driver@key:	
   341                           ; 1 bytes @ 0x6
   342                           
   343  0076                     ___bmul@multiplier:	
   344                           ; 1 bytes @ 0x6
   345                           
   346                           
   347                           ; 1 bytes @ 0x6
   348  0076                     	ds	1
   349  0077                     ??_key_read:	
   350  0077                     ??_setFanLevel:	
   351                           ; 1 bytes @ 0x7
   352                           
   353  0077                     ??_scanKeys:	
   354                           ; 1 bytes @ 0x7
   355                           
   356  0077                     ??_checkKeys:	
   357                           ; 1 bytes @ 0x7
   358                           
   359  0077                     ??_main:	
   360                           ; 1 bytes @ 0x7
   361                           
   362                           
   363                           	psect	cstackBANK0
   364  0039                     __pcstackBANK0:	
   365                           ; 1 bytes @ 0x7
   366                           
   367  0039                     ?___awdiv:	
   368  0039                     key_read@key_return:	
   369                           ; 2 bytes @ 0x0
   370                           
   371  0039                     ___awdiv@divisor:	
   372                           ; 1 bytes @ 0x0
   373                           
   374                           
   375                           ; 2 bytes @ 0x0
   376  0039                     	ds	1
   377  003A                     key_read@key_read:	
   378                           
   379                           ; 1 bytes @ 0x1
   380  003A                     	ds	1
   381  003B                     key_read@key:	
   382  003B                     ___awdiv@dividend:	
   383                           ; 1 bytes @ 0x2
   384                           
   385                           
   386                           ; 2 bytes @ 0x2
   387  003B                     	ds	2
   388  003D                     ___awdiv@counter:	
   389                           
   390                           ; 1 bytes @ 0x4
   391  003D                     	ds	1
   392  003E                     ___awdiv@sign:	
   393                           
   394                           ; 1 bytes @ 0x5
   395  003E                     	ds	1
   396  003F                     ___awdiv@quotient:	
   397                           
   398                           ; 2 bytes @ 0x6
   399  003F                     	ds	2
   400  0041                     setFanLevel@levelWidth:	
   401                           
   402                           ; 2 bytes @ 0x8
   403  0041                     	ds	2
   404  0043                     setFanLevel@level:	
   405                           
   406                           ; 1 bytes @ 0xA
   407  0043                     	ds	1
   408  0044                     setFanLevel@tempLevel:	
   409                           
   410                           ; 1 bytes @ 0xB
   411  0044                     	ds	1
   412  0045                     ??_checkFan:	
   413                           
   414                           ; 1 bytes @ 0xC
   415  0045                     	ds	1
   416                           
   417                           	psect	maintext
   418  01DB                     __pmaintext:	
   419 ;;
   420 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   421 ;;
   422 ;; *************** function _main *****************
   423 ;; Defined at:
   424 ;;		line 227 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : B00/0
   435 ;;		On exit  : 300/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1
   438 ;;      Params:         0       0       0
   439 ;;      Locals:         0       0       0
   440 ;;      Temps:          0       0       0
   441 ;;      Totals:         0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels required when called:    7
   444 ;; This function calls:
   445 ;;		_Init_Config
   446 ;;		_checkKeys
   447 ;;		_checkUsbStatus
   448 ;;		_scanKeys
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _main
   456  01DB                     _main:	
   457                           
   458                           ;main.c: 228: Init_Config();
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   462  01DB  2165               	fcall	_Init_Config
   463  01DC                     l2728:	
   464                           
   465                           ;main.c: 231: if (time0Flag) {
   466  01DC  0879               	movf	_time0Flag,w
   467  01DD  1903               	btfsc	3,2
   468  01DE  29E2               	goto	l2736
   469  01DF  0064               	clrwdt	;# 
   470                           
   471                           ;main.c: 233: time0Flag = 0;
   472  01E0  01F9               	clrf	_time0Flag
   473                           
   474                           ;main.c: 234: scanKeys();
   475  01E1  220C               	fcall	_scanKeys
   476  01E2                     l2736:	
   477                           
   478                           ;main.c: 235: }
   479                           ;main.c: 238: if (count10Ms == 10) {
   480  01E2  300A               	movlw	10
   481  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   482  01E4  0622               	xorwf	_count10Ms,w
   483  01E5  0423               	iorwf	_count10Ms+1,w
   484  01E6  1D03               	btfss	3,2
   485  01E7  29EC               	goto	l2744
   486                           
   487                           ;main.c: 239: checkKeys();
   488  01E8  2184               	fcall	_checkKeys
   489                           
   490                           ;main.c: 240: count10Ms = 0;
   491  01E9  01A2               	clrf	_count10Ms
   492  01EA  01A3               	clrf	_count10Ms+1
   493                           
   494                           ;main.c: 242: checkUsbStatus();
   495  01EB  21BF               	fcall	_checkUsbStatus
   496  01EC                     l2744:	
   497                           
   498                           ;main.c: 243: }
   499                           ;main.c: 245: if (countTime == 1000) {
   500  01EC  30E8               	movlw	232
   501  01ED  0677               	xorwf	_countTime,w
   502  01EE  3003               	movlw	3
   503  01EF  1903               	skipnz
   504  01F0  0678               	xorwf	_countTime+1,w
   505  01F1  1D03               	btfss	3,2
   506  01F2  29DC               	goto	l2728
   507                           
   508                           ;main.c: 246: countTime = 0;
   509  01F3  01F7               	clrf	_countTime
   510  01F4  01F8               	clrf	_countTime+1
   511  01F5  29DC               	goto	l2728
   512  01F6                     __end_of_main:	
   513                           
   514                           	psect	text1
   515  020C                     __ptext1:	
   516 ;; *************** function _scanKeys *****************
   517 ;; Defined at:
   518 ;;		line 185 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   527 ;; Tracked objects:
   528 ;;		On entry : 0/100
   529 ;;		On exit  : B00/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1
   532 ;;      Params:         0       0       0
   533 ;;      Locals:         0       0       0
   534 ;;      Temps:          0       0       0
   535 ;;      Totals:         0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; Hardware stack levels required when called:    4
   539 ;; This function calls:
   540 ;;		_sacnKeyInput
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           
   547                           ;psect for function _scanKeys
   548  020C                     _scanKeys:	
   549                           
   550                           ;main.c: 186: key1.key_addr_result = key2.key_addr_result = key3.key_addr_result = PORTB
      +                          ;
   551                           
   552                           ;incstack = 0
   553                           ; Regs used in _scanKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   554  020C  1283               	bcf	3,5	;RP0=0, select bank0
   555  020D  1303               	bcf	3,6	;RP1=0, select bank0
   556  020E  0806               	movf	6,w	;volatile
   557  020F  00A9               	movwf	_key3+5
   558  0210  00B0               	movwf	_key2+5
   559  0211  00B7               	movwf	_key1+5
   560                           
   561                           ;main.c: 187: sacnKeyInput(&key1);
   562  0212  3032               	movlw	(low (_key1| 0))& (0+255)
   563  0213  21A2               	fcall	_sacnKeyInput
   564                           
   565                           ;main.c: 188: sacnKeyInput(&key2);
   566  0214  302B               	movlw	(low (_key2| 0))& (0+255)
   567  0215  21A2               	fcall	_sacnKeyInput
   568                           
   569                           ;main.c: 189: sacnKeyInput(&key3);
   570  0216  3024               	movlw	(low (_key3| 0))& (0+255)
   571  0217  21A2               	fcall	_sacnKeyInput
   572                           
   573                           ;main.c: 190: countTime++;
   574  0218  0AF7               	incf	_countTime,f
   575  0219  1903               	skipnz
   576  021A  0AF8               	incf	_countTime+1,f
   577                           
   578                           ;main.c: 191: count10Ms++;
   579  021B  1283               	bcf	3,5	;RP0=0, select bank0
   580  021C  1303               	bcf	3,6	;RP1=0, select bank0
   581  021D  0AA2               	incf	_count10Ms,f
   582  021E  1903               	skipnz
   583  021F  0AA3               	incf	_count10Ms+1,f
   584  0220  0008               	return
   585  0221                     __end_of_scanKeys:	
   586                           
   587                           	psect	text2
   588  01A2                     __ptext2:	
   589 ;; *************** function _sacnKeyInput *****************
   590 ;; Defined at:
   591 ;;		line 3 in file "C:\SCMCU WorkSpace\uf166fan\scankey.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  key             1    wreg     PTR struct Keys
   594 ;;		 -> key3(7), key2(7), key1(7), 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  key             1    6[COMMON] PTR struct Keys
   597 ;;		 -> key3(7), key2(7), key1(7), 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 800/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1
   607 ;;      Params:         0       0       0
   608 ;;      Locals:         1       0       0
   609 ;;      Temps:          2       0       0
   610 ;;      Totals:         3       0       0
   611 ;;Total ram usage:        3 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    3
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_scanKeys
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _sacnKeyInput
   623  01A2                     _sacnKeyInput:	
   624                           
   625                           ;incstack = 0
   626                           ; Regs used in _sacnKeyInput: [wreg-fsr0h+status,2+status,0]
   627                           ;sacnKeyInput@key stored from wreg
   628  01A2  00F6               	movwf	sacnKeyInput@key
   629                           
   630                           ;scankey.c: 4: key->key_input = ((key->key_addr_result) >> (key->key_index)&1);
   631  01A3  3E05               	addlw	5
   632  01A4  0084               	movwf	4
   633  01A5  1383               	bcf	3,7	;select IRP bank0
   634  01A6  0800               	movf	0,w
   635  01A7  00F4               	movwf	??_sacnKeyInput
   636  01A8  0876               	movf	sacnKeyInput@key,w
   637  01A9  3E06               	addlw	6
   638  01AA  0084               	movwf	4
   639  01AB  0A00               	incf	0,w
   640  01AC  29AF               	goto	u624
   641  01AD                     u625:	
   642  01AD  1003               	clrc
   643  01AE  0CF4               	rrf	??_sacnKeyInput,f
   644  01AF                     u624:	
   645  01AF  3EFF               	addlw	-1
   646  01B0  1D03               	skipz
   647  01B1  29AD               	goto	u625
   648  01B2  0874               	movf	??_sacnKeyInput,w
   649  01B3  00F5               	movwf	??_sacnKeyInput+1
   650  01B4  0876               	movf	sacnKeyInput@key,w
   651  01B5  3E04               	addlw	4
   652  01B6  0084               	movwf	4
   653  01B7  0875               	movf	??_sacnKeyInput+1,w
   654  01B8  0080               	movwf	0
   655  01B9  0876               	movf	sacnKeyInput@key,w
   656  01BA  3E04               	addlw	4
   657  01BB  0084               	movwf	4
   658  01BC  3001               	movlw	1
   659  01BD  0580               	andwf	0,f
   660  01BE  0008               	return
   661  01BF                     __end_of_sacnKeyInput:	
   662                           
   663                           	psect	text3
   664  01BF                     __ptext3:	
   665 ;; *************** function _checkUsbStatus *****************
   666 ;; Defined at:
   667 ;;		line 36 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 300/0
   678 ;;		On exit  : 300/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1
   681 ;;      Params:         0       0       0
   682 ;;      Locals:         0       0       0
   683 ;;      Temps:          1       0       0
   684 ;;      Totals:         1       0       0
   685 ;;Total ram usage:        1 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; Hardware stack levels required when called:    3
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _checkUsbStatus
   697  01BF                     _checkUsbStatus:	
   698                           
   699                           ;main.c: 37: if (((PORTB) >> (2)&1) == 1) {
   700                           
   701                           ;incstack = 0
   702                           ; Regs used in _checkUsbStatus: [wreg+status,2+status,0]
   703  01BF  0806               	movf	6,w	;volatile
   704  01C0  00F4               	movwf	??_checkUsbStatus
   705  01C1  1003               	clrc
   706  01C2  0CF4               	rrf	??_checkUsbStatus,f
   707  01C3  1003               	clrc
   708  01C4  0CF4               	rrf	??_checkUsbStatus,f
   709  01C5  1C74               	btfss	??_checkUsbStatus,0
   710  01C6  29D9               	goto	l573
   711                           
   712                           ;main.c: 38: if (((PORTB) >> (1)&1) == 1) {
   713  01C7  0806               	movf	6,w	;volatile
   714  01C8  00F4               	movwf	??_checkUsbStatus
   715  01C9  1003               	clrc
   716  01CA  0CF4               	rrf	??_checkUsbStatus,f
   717  01CB  1C74               	btfss	??_checkUsbStatus,0
   718  01CC  29CF               	goto	l2350
   719                           
   720                           ;main.c: 40: PORTA&=~(1<<0);
   721  01CD  1005               	bcf	5,0	;volatile
   722                           
   723                           ;main.c: 41: } else if (countTime == 1000) {
   724  01CE  0008               	return
   725  01CF                     l2350:	
   726  01CF  30E8               	movlw	232
   727  01D0  0677               	xorwf	_countTime,w
   728  01D1  3003               	movlw	3
   729  01D2  1903               	skipnz
   730  01D3  0678               	xorwf	_countTime+1,w
   731  01D4  1D03               	btfss	3,2
   732  01D5  0008               	return
   733                           
   734                           ;main.c: 43: PORTA^=(1<<0);
   735  01D6  3001               	movlw	1
   736  01D7  0685               	xorwf	5,f	;volatile
   737  01D8  0008               	return
   738  01D9                     l573:	
   739                           
   740                           ;main.c: 47: PORTA|=(1<<0);
   741  01D9  1405               	bsf	5,0	;volatile
   742  01DA  0008               	return
   743  01DB                     __end_of_checkUsbStatus:	
   744                           
   745                           	psect	text4
   746  0184                     __ptext4:	
   747 ;; *************** function _checkKeys *****************
   748 ;; Defined at:
   749 ;;		line 195 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 300/0
   760 ;;		On exit  : 300/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1
   763 ;;      Params:         0       0       0
   764 ;;      Locals:         0       0       0
   765 ;;      Temps:          0       0       0
   766 ;;      Totals:         0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    6
   770 ;; This function calls:
   771 ;;		_checkFan
   772 ;;		_closeFan
   773 ;;		_key_read
   774 ;;		_setFanLevel
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _checkKeys
   782  0184                     _checkKeys:	
   783                           
   784                           ;main.c: 196: if (key_read(&key1) != 0) {
   785                           
   786                           ;incstack = 0
   787                           ; Regs used in _checkKeys: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   788  0184  3032               	movlw	(low (_key1| 0))& (0+255)
   789  0185  20DA               	fcall	_key_read
   790  0186  3A00               	xorlw	0
   791  0187  1903               	skipnz
   792  0188  298F               	goto	l2712
   793                           
   794                           ;main.c: 199: if (FAN_STATUS == 1) {
   795  0189  0B46               	decfsz	_FAN_STATUS,w
   796  018A  298C               	goto	l2704
   797                           
   798                           ;main.c: 201: closeFan();
   799  018B  2A62               	ljmp	l2164
   800  018C                     l2704:	
   801                           ;main.c: 202: } else {
   802                           
   803                           
   804                           ;main.c: 203: FAN_STATUS = 2;
   805  018C  3002               	movlw	2
   806  018D  00C6               	movwf	_FAN_STATUS
   807                           
   808                           ;main.c: 204: checkFan();
   809  018E  293E               	ljmp	l2646
   810  018F                     l2712:	
   811  018F  3002               	movlw	2
   812  0190  0646               	xorwf	_FAN_STATUS,w
   813  0191  1D03               	btfss	3,2
   814  0192  2994               	goto	l618
   815                           
   816                           ;main.c: 208: checkFan();
   817  0193  213E               	fcall	_checkFan
   818  0194                     l618:	
   819                           
   820                           ;main.c: 209: }
   821                           ;main.c: 212: if (key_read(&key2) != 0) {
   822  0194  302B               	movlw	(low (_key2| 0))& (0+255)
   823  0195  20DA               	fcall	_key_read
   824  0196  3A00               	xorlw	0
   825  0197  1903               	skipnz
   826  0198  299B               	goto	l2720
   827                           
   828                           ;main.c: 214: setFanLevel(1);
   829  0199  3001               	movlw	1
   830  019A  290F               	ljmp	_setFanLevel
   831  019B                     l2720:	
   832                           
   833                           ;main.c: 216: }
   834                           ;main.c: 218: if (key_read(&key3) != 0) {
   835  019B  3024               	movlw	(low (_key3| 0))& (0+255)
   836  019C  20DA               	fcall	_key_read
   837  019D  3A00               	xorlw	0
   838  019E  1903               	skipnz
   839  019F  0008               	return
   840                           
   841                           ;main.c: 220: setFanLevel(-1);
   842  01A0  30FF               	movlw	255
   843  01A1  290F               	ljmp	_setFanLevel
   844  01A2                     __end_of_checkKeys:	
   845                           
   846                           	psect	text5
   847  00DA                     __ptext5:	
   848 ;; *************** function _key_read *****************
   849 ;; Defined at:
   850 ;;		line 66 in file "C:\SCMCU WorkSpace\uf166fan\scankey.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  key             1    wreg     PTR struct Keys
   853 ;;		 -> key3(7), key2(7), key1(7), 
   854 ;; Auto vars:     Size  Location     Type
   855 ;;  key             1    2[BANK0 ] PTR struct Keys
   856 ;;		 -> key3(7), key2(7), key1(7), 
   857 ;;  key_read        1    1[BANK0 ] unsigned char 
   858 ;;  key_return      1    0[BANK0 ] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      unsigned char 
   861 ;; Registers used:
   862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 300/0
   865 ;;		On exit  : B00/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1
   868 ;;      Params:         0       0       0
   869 ;;      Locals:         0       3       0
   870 ;;      Temps:          0       0       0
   871 ;;      Totals:         0       3       0
   872 ;;Total ram usage:        3 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    4
   875 ;; This function calls:
   876 ;;		_key_driver
   877 ;; This function is called by:
   878 ;;		_checkKeys
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function _key_read
   884  00DA                     _key_read:	
   885                           
   886                           ;incstack = 0
   887                           ; Regs used in _key_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   888                           ;key_read@key stored from wreg
   889  00DA  00BB               	movwf	key_read@key
   890                           
   891                           ;scankey.c: 68: unsigned char key_return = 0;
   892  00DB  01B9               	clrf	key_read@key_return
   893                           
   894                           ;scankey.c: 69: unsigned char key_read = key_driver(key);
   895  00DC  205F               	fcall	_key_driver
   896  00DD  00BA               	movwf	key_read@key_read
   897                           
   898                           ;scankey.c: 71: switch (key->key_state_buffer2) {
   899  00DE  2902               	goto	l2692
   900  00DF                     l2672:	
   901                           
   902                           ;scankey.c: 73: if (key_read == 1) {
   903  00DF  0B3A               	decfsz	key_read@key_read,w
   904  00E0  28EB               	goto	l2676
   905                           
   906                           ;scankey.c: 74: key->key_timer_cnt2 = 0;
   907  00E1  083B               	movf	key_read@key,w
   908  00E2  3E02               	addlw	2
   909  00E3  0084               	movwf	4
   910  00E4  0180               	clrf	0
   911                           
   912                           ;scankey.c: 75: key->key_state_buffer2 = 1;
   913  00E5  083B               	movf	key_read@key,w
   914  00E6  3E03               	addlw	3
   915  00E7  0084               	movwf	4
   916  00E8  0180               	clrf	0
   917  00E9  0A80               	incf	0,f
   918                           
   919                           ;scankey.c: 76: } else
   920  00EA  290D               	goto	l2694
   921  00EB                     l2676:	
   922                           
   923                           ;scankey.c: 77: key_return = key_read;
   924  00EB  083A               	movf	key_read@key_read,w
   925  00EC  00B9               	movwf	key_read@key_return
   926  00ED  290D               	goto	l2694
   927  00EE                     l2678:	
   928                           
   929                           ;scankey.c: 81: if (key_read == 1)
   930  00EE  0B3A               	decfsz	key_read@key_read,w
   931  00EF  28F3               	goto	l2684
   932                           
   933                           ;scankey.c: 82: {
   934                           ;scankey.c: 83: key_return = 2;
   935  00F0  3002               	movlw	2
   936  00F1  00B9               	movwf	key_read@key_return
   937  00F2  28FD               	goto	l2688
   938  00F3                     l2684:	
   939                           ;scankey.c: 85: } else if (++(key->key_timer_cnt2) >= 50) {
   940                           
   941                           ;scankey.c: 84: key->key_state_buffer2 = 0;
   942                           
   943  00F3  083B               	movf	key_read@key,w
   944  00F4  3E02               	addlw	2
   945  00F5  0084               	movwf	4
   946  00F6  3032               	movlw	50
   947  00F7  0A80               	incf	0,f
   948  00F8  0200               	subwf	0,w
   949  00F9  1C03               	skipc
   950  00FA  290D               	goto	l2694
   951                           
   952                           ;scankey.c: 89: key_return = 1;
   953  00FB  01B9               	clrf	key_read@key_return
   954  00FC  0AB9               	incf	key_read@key_return,f
   955  00FD                     l2688:	
   956                           
   957                           ;scankey.c: 90: key->key_state_buffer2 = 0;
   958  00FD  083B               	movf	key_read@key,w
   959  00FE  3E03               	addlw	3
   960  00FF  0084               	movwf	4
   961  0100  0180               	clrf	0
   962  0101  290D               	goto	l2694
   963  0102                     l2692:	
   964  0102  083B               	movf	key_read@key,w
   965  0103  3E03               	addlw	3
   966  0104  0084               	movwf	4
   967  0105  0800               	movf	0,w
   968                           
   969                           ; Switch size 1, requested type "space"
   970                           ; Number of cases is 2, Range of values is 0 to 1
   971                           ; switch strategies available:
   972                           ; Name         Instructions Cycles
   973                           ; simple_byte            7     4 (average)
   974                           ; direct_byte            8     6 (fixed)
   975                           ; jumptable            260     6 (fixed)
   976                           ;	Chosen strategy is simple_byte
   977  0106  3A00               	xorlw	0	; case 0
   978  0107  1903               	skipnz
   979  0108  28DF               	goto	l2672
   980  0109  3A01               	xorlw	1	; case 1
   981  010A  1903               	skipnz
   982  010B  28EE               	goto	l2678
   983  010C  290D               	goto	l2694
   984  010D                     l2694:	
   985                           
   986                           ;scankey.c: 96: return key_return;
   987  010D  0839               	movf	key_read@key_return,w
   988  010E  0008               	return
   989  010F                     __end_of_key_read:	
   990                           
   991                           	psect	text6
   992  005F                     __ptext6:	
   993 ;; *************** function _key_driver *****************
   994 ;; Defined at:
   995 ;;		line 9 in file "C:\SCMCU WorkSpace\uf166fan\scankey.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  key             1    wreg     PTR struct Keys
   998 ;;		 -> key3(7), key2(7), key1(7), 
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  key             1    6[COMMON] PTR struct Keys
  1001 ;;		 -> key3(7), key2(7), key1(7), 
  1002 ;;  key_read        1    5[COMMON] unsigned char 
  1003 ;;  key_return      1    4[COMMON] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      unsigned char 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1008 ;; Tracked objects:
  1009 ;;		On entry : 300/0
  1010 ;;		On exit  : B00/0
  1011 ;;		Unchanged: 300/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1
  1013 ;;      Params:         0       0       0
  1014 ;;      Locals:         3       0       0
  1015 ;;      Temps:          0       0       0
  1016 ;;      Totals:         3       0       0
  1017 ;;Total ram usage:        3 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    3
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_key_read
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _key_driver
  1029  005F                     _key_driver:	
  1030                           
  1031                           ;incstack = 0
  1032                           ; Regs used in _key_driver: [wreg-fsr0h+status,2+status,0]
  1033                           ;key_driver@key stored from wreg
  1034  005F  00F6               	movwf	key_driver@key
  1035                           
  1036                           ;scankey.c: 12: unsigned char key_return = 0;
  1037  0060  01F4               	clrf	key_driver@key_return
  1038                           
  1039                           ;scankey.c: 13: unsigned char key_read = key->key_input;
  1040  0061  3E04               	addlw	4
  1041  0062  0084               	movwf	4
  1042  0063  1383               	bcf	3,7	;select IRP bank0
  1043  0064  0800               	movf	0,w
  1044  0065  00F5               	movwf	key_driver@key_read
  1045                           
  1046                           ;scankey.c: 15: switch (key->key_state_buffer1) {
  1047  0066  2892               	goto	l2634
  1048  0067                     l2604:	
  1049                           
  1050                           ;scankey.c: 17: if (key_read == 0) {
  1051  0067  0875               	movf	key_driver@key_read,w
  1052  0068  1D03               	btfss	3,2
  1053  0069  289F               	goto	l2636
  1054                           
  1055                           ;scankey.c: 18: key->key_state_buffer1 = 1;
  1056  006A  0A76               	incf	key_driver@key,w
  1057  006B  0084               	movwf	4
  1058  006C  0180               	clrf	0
  1059  006D  0A80               	incf	0,f
  1060  006E  289F               	goto	l2636
  1061  006F                     l2608:	
  1062                           
  1063                           ;scankey.c: 25: if (key_read == 0) {
  1064  006F  0875               	movf	key_driver@key_read,w
  1065  0070  1D03               	btfss	3,2
  1066  0071  288E               	goto	l2630
  1067                           
  1068                           ;scankey.c: 26: key->key_timer_cnt1 = 0;
  1069  0072  0876               	movf	key_driver@key,w
  1070  0073  0084               	movwf	4
  1071  0074  0180               	clrf	0
  1072                           
  1073                           ;scankey.c: 27: key->key_state_buffer1 = 2;
  1074  0075  0A76               	incf	key_driver@key,w
  1075  0076  0084               	movwf	4
  1076  0077  3002               	movlw	2
  1077  0078  288A               	goto	L1
  1078  0079                     l2616:	
  1079                           ;scankey.c: 32: key->key_state_buffer1 = 0;
  1080                           
  1081                           ;scankey.c: 31: } else {
  1082                           
  1083                           
  1084                           ;scankey.c: 39: if (key_read == 1) {
  1085  0079  0B75               	decfsz	key_driver@key_read,w
  1086  007A  287E               	goto	l2622
  1087                           
  1088                           ;scankey.c: 40: key_return = 1;
  1089  007B  01F4               	clrf	key_driver@key_return
  1090  007C  0AF4               	incf	key_driver@key_return,f
  1091  007D  288E               	goto	l2630
  1092  007E                     l2622:	
  1093                           ;scankey.c: 42: } else if (++(key->key_timer_cnt1) >= 100)
  1094                           
  1095                           ;scankey.c: 41: key->key_state_buffer1 = 0;
  1096                           
  1097  007E  0876               	movf	key_driver@key,w
  1098  007F  0084               	movwf	4
  1099  0080  3064               	movlw	100
  1100  0081  0A80               	incf	0,f
  1101  0082  0200               	subwf	0,w
  1102  0083  1C03               	skipc
  1103  0084  289F               	goto	l2636
  1104                           
  1105                           ;scankey.c: 43: {
  1106                           ;scankey.c: 44: key_return = 3;
  1107  0085  3003               	movlw	3
  1108  0086  00F4               	movwf	key_driver@key_return
  1109                           
  1110                           ;scankey.c: 45: key->key_state_buffer1 = 3;
  1111  0087  0A76               	incf	key_driver@key,w
  1112  0088  0084               	movwf	4
  1113  0089  3003               	movlw	3
  1114  008A                     L1:	
  1115  008A  0080               	movwf	0
  1116  008B  289F               	goto	l2636
  1117  008C                     l2628:	
  1118                           
  1119                           ;scankey.c: 51: if (key_read == 1)
  1120  008C  0B75               	decfsz	key_driver@key_read,w
  1121  008D  289F               	goto	l2636
  1122  008E                     l2630:	
  1123                           
  1124                           ;scankey.c: 52: {
  1125                           ;scankey.c: 53: key->key_state_buffer1 = 0;
  1126  008E  0A76               	incf	key_driver@key,w
  1127  008F  0084               	movwf	4
  1128  0090  0180               	clrf	0
  1129  0091  289F               	goto	l2636
  1130  0092                     l2634:	
  1131  0092  0A76               	incf	key_driver@key,w
  1132  0093  0084               	movwf	4
  1133  0094  0800               	movf	0,w
  1134                           
  1135                           ; Switch size 1, requested type "space"
  1136                           ; Number of cases is 4, Range of values is 0 to 3
  1137                           ; switch strategies available:
  1138                           ; Name         Instructions Cycles
  1139                           ; direct_byte           10     6 (fixed)
  1140                           ; simple_byte           13     7 (average)
  1141                           ; jumptable            260     6 (fixed)
  1142                           ;	Chosen strategy is direct_byte
  1143  0095  0084               	movwf	4
  1144  0096  3004               	movlw	4
  1145  0097  0204               	subwf	4,w
  1146  0098  1803               	skipnc
  1147  0099  289F               	goto	l2636
  1148  009A  3002               	movlw	high S2798
  1149  009B  008A               	movwf	10
  1150  009C  30A7               	movlw	low S2798
  1151  009D  0704               	addwf	4,w
  1152  009E  0082               	movwf	2
  1153  009F                     l2636:	
  1154                           
  1155                           ;scankey.c: 58: return key_return;
  1156  009F  0874               	movf	key_driver@key_return,w
  1157  00A0  0008               	return
  1158  00A1                     __end_of_key_driver:	
  1159                           
  1160                           	psect	swtext1
  1161  02A7                     __pswtext1:	
  1162  02A7                     S2798:	
  1163  02A7  2867               	ljmp	l2604
  1164  02A8  286F               	ljmp	l2608
  1165  02A9  2879               	ljmp	l2616
  1166  02AA  288C               	ljmp	l2628
  1167                           
  1168                           	psect	text7
  1169  013E                     __ptext7:	
  1170 ;; *************** function _checkFan *****************
  1171 ;; Defined at:
  1172 ;;		line 104 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : B00/0
  1183 ;;		On exit  : 300/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1
  1186 ;;      Params:         0       0       0
  1187 ;;      Locals:         0       0       0
  1188 ;;      Temps:          0       1       0
  1189 ;;      Totals:         0       1       0
  1190 ;;Total ram usage:        1 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    5
  1193 ;; This function calls:
  1194 ;;		_closeFan
  1195 ;;		_setFanLevel
  1196 ;; This function is called by:
  1197 ;;		_checkKeys
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _checkFan
  1203  013E                     _checkFan:	
  1204  013E                     l2646:	
  1205                           ;incstack = 0
  1206                           ; Regs used in _checkFan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1207                           
  1208                           
  1209                           ;main.c: 106: PORTA|=(1<<1);
  1210  013E  1485               	bsf	5,1	;volatile
  1211                           
  1212                           ;main.c: 108: TRISC&=~(1<<2);
  1213  013F  1683               	bsf	3,5	;RP0=1, select bank1
  1214  0140  1107               	bcf	7,2	;volatile
  1215                           
  1216                           ;main.c: 109: PORTA|=(1<<2);
  1217  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0142  1505               	bsf	5,2	;volatile
  1219                           
  1220                           ;main.c: 110: T2CON = 0X04;
  1221  0143  3004               	movlw	4
  1222  0144  0092               	movwf	18	;volatile
  1223                           
  1224                           ;main.c: 113: if (((PORTB) >> (6)&1) == 0) {
  1225  0145  0806               	movf	6,w	;volatile
  1226  0146  00C5               	movwf	??_checkFan
  1227  0147  3006               	movlw	6
  1228  0148                     u955:	
  1229  0148  1003               	clrc
  1230  0149  0CC5               	rrf	??_checkFan,f
  1231  014A  3EFF               	addlw	-1
  1232  014B  1D03               	skipz
  1233  014C  2948               	goto	u955
  1234  014D  1845               	btfsc	??_checkFan,0
  1235  014E  2952               	goto	l2654
  1236                           
  1237                           ;main.c: 114: FAN_STATUS = 1;
  1238  014F  01C6               	clrf	_FAN_STATUS
  1239  0150  0AC6               	incf	_FAN_STATUS,f
  1240                           
  1241                           ;main.c: 115: } else {
  1242  0151  2954               	goto	l2656
  1243  0152                     l2654:	
  1244                           
  1245                           ;main.c: 116: FAN_STATUS = 2;
  1246  0152  3002               	movlw	2
  1247  0153  00C6               	movwf	_FAN_STATUS
  1248  0154                     l2656:	
  1249                           
  1250                           ;main.c: 117: }
  1251                           ;main.c: 119: setFanLevel(0);
  1252  0154  3000               	movlw	0
  1253  0155  210F               	fcall	_setFanLevel
  1254                           
  1255                           ;main.c: 122: if (FAN_STATUS == 2) {
  1256  0156  3002               	movlw	2
  1257  0157  0646               	xorwf	_FAN_STATUS,w
  1258  0158  1D03               	btfss	3,2
  1259  0159  0008               	return
  1260                           
  1261                           ;main.c: 123: fan_check_time++;
  1262  015A  0AA0               	incf	_fan_check_time,f
  1263  015B  1903               	skipnz
  1264  015C  0AA1               	incf	_fan_check_time+1,f
  1265                           
  1266                           ;main.c: 124: if (fan_check_time == 3000) {
  1267  015D  30B8               	movlw	184
  1268  015E  0620               	xorwf	_fan_check_time,w
  1269  015F  300B               	movlw	11
  1270  0160  1903               	skipnz
  1271  0161  0621               	xorwf	_fan_check_time+1,w
  1272  0162  1D03               	btfss	3,2
  1273  0163  0008               	return
  1274                           
  1275                           ;main.c: 125: closeFan();
  1276  0164  2A62               	ljmp	l2164
  1277  0165                     __end_of_checkFan:	
  1278                           
  1279                           	psect	text8
  1280  010F                     __ptext8:	
  1281 ;; *************** function _setFanLevel *****************
  1282 ;; Defined at:
  1283 ;;		line 65 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  level           1    wreg     unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  level           1   10[BANK0 ] unsigned char 
  1288 ;;  levelWidth      2    8[BANK0 ] unsigned int 
  1289 ;;  tempLevel       1   11[BANK0 ] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : B00/0
  1296 ;;		On exit  : 300/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1
  1299 ;;      Params:         0       0       0
  1300 ;;      Locals:         0       4       0
  1301 ;;      Temps:          0       0       0
  1302 ;;      Totals:         0       4       0
  1303 ;;Total ram usage:        4 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    4
  1306 ;; This function calls:
  1307 ;;		___awdiv
  1308 ;;		___bmul
  1309 ;;		_setLedOn
  1310 ;; This function is called by:
  1311 ;;		_checkFan
  1312 ;;		_checkKeys
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           
  1317                           ;psect for function _setFanLevel
  1318  010F                     _setFanLevel:	
  1319                           
  1320                           ;incstack = 0
  1321                           ; Regs used in _setFanLevel: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1322                           ;setFanLevel@level stored from wreg
  1323  010F  00C3               	movwf	setFanLevel@level
  1324                           
  1325                           ;main.c: 66: if(level == 0)
  1326  0110  0843               	movf	setFanLevel@level,w
  1327  0111  1D03               	btfss	3,2
  1328  0112  2915               	goto	l2580
  1329                           
  1330                           ;main.c: 67: {
  1331                           ;main.c: 68: currentLevel = 2;
  1332  0113  3002               	movlw	2
  1333  0114  00C7               	movwf	_currentLevel
  1334  0115                     l2580:	
  1335                           
  1336                           ;main.c: 69: }
  1337                           ;main.c: 70: unsigned int levelWidth = (PR2 + 1) / 4;
  1338  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1339  0116  0812               	movf	18,w	;volatile
  1340  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0118  00BB               	movwf	___awdiv@dividend
  1342  0119  01BC               	clrf	___awdiv@dividend+1
  1343  011A  0ABB               	incf	___awdiv@dividend,f
  1344  011B  1903               	skipnz
  1345  011C  0ABC               	incf	___awdiv@dividend+1,f
  1346  011D  3004               	movlw	4
  1347  011E  00B9               	movwf	___awdiv@divisor
  1348  011F  01BA               	clrf	___awdiv@divisor+1
  1349  0120  201A               	fcall	___awdiv
  1350  0121  083A               	movf	?___awdiv+1,w
  1351  0122  00C2               	movwf	setFanLevel@levelWidth+1
  1352  0123  0839               	movf	?___awdiv,w
  1353  0124  00C1               	movwf	setFanLevel@levelWidth
  1354                           
  1355                           ;main.c: 71: char tempLevel = currentLevel + level;
  1356  0125  0843               	movf	setFanLevel@level,w
  1357  0126  0747               	addwf	_currentLevel,w
  1358  0127  00C4               	movwf	setFanLevel@tempLevel
  1359                           
  1360                           ;main.c: 72: if (tempLevel > 4) {
  1361  0128  3005               	movlw	5
  1362  0129  0244               	subwf	setFanLevel@tempLevel,w
  1363  012A  1C03               	skipc
  1364  012B  292E               	goto	l2588
  1365                           
  1366                           ;main.c: 73: tempLevel = 4;
  1367  012C  3004               	movlw	4
  1368  012D  00C4               	movwf	setFanLevel@tempLevel
  1369  012E                     l2588:	
  1370                           
  1371                           ;main.c: 74: }
  1372                           ;main.c: 76: if (tempLevel < 1) {
  1373  012E  0844               	movf	setFanLevel@tempLevel,w
  1374  012F  1D03               	btfss	3,2
  1375  0130  2933               	goto	l2592
  1376                           
  1377                           ;main.c: 77: tempLevel = 1;
  1378  0131  01C4               	clrf	setFanLevel@tempLevel
  1379  0132  0AC4               	incf	setFanLevel@tempLevel,f
  1380  0133                     l2592:	
  1381                           
  1382                           ;main.c: 78: }
  1383                           ;main.c: 80: if (FAN_STATUS == 1) {
  1384  0133  0B46               	decfsz	_FAN_STATUS,w
  1385  0134  0008               	return
  1386                           
  1387                           ;main.c: 81: currentLevel = tempLevel;
  1388  0135  0844               	movf	setFanLevel@tempLevel,w
  1389  0136  00C7               	movwf	_currentLevel
  1390                           
  1391                           ;main.c: 83: CCPR1L = levelWidth * currentLevel;
  1392  0137  0841               	movf	setFanLevel@levelWidth,w
  1393  0138  00F4               	movwf	___bmul@multiplicand
  1394  0139  0847               	movf	_currentLevel,w
  1395  013A  2254               	fcall	___bmul
  1396  013B  0095               	movwf	21	;volatile
  1397                           
  1398                           ;main.c: 84: setLedOn(currentLevel);
  1399  013C  0847               	movf	_currentLevel,w
  1400  013D  28A1               	ljmp	_setLedOn
  1401  013E                     __end_of_setFanLevel:	
  1402                           
  1403                           	psect	text9
  1404  0254                     __ptext9:	
  1405 ;; *************** function ___bmul *****************
  1406 ;; Defined at:
  1407 ;;		line 4 in file "C:\¹¤¾ß\µ¥Æ¬»úÑ§Ï°×ÊÁÏ\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\Umul8.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  multiplier      1    wreg     unsigned char 
  1410 ;;  multiplicand    1    4[COMMON] unsigned char 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  multiplier      1    6[COMMON] unsigned char 
  1413 ;;  product         1    5[COMMON] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      unsigned char 
  1416 ;; Registers used:
  1417 ;;		wreg, status,2, status,0
  1418 ;; Tracked objects:
  1419 ;;		On entry : B00/0
  1420 ;;		On exit  : B00/0
  1421 ;;		Unchanged: B00/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1
  1423 ;;      Params:         1       0       0
  1424 ;;      Locals:         2       0       0
  1425 ;;      Temps:          0       0       0
  1426 ;;      Totals:         3       0       0
  1427 ;;Total ram usage:        3 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    3
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_setFanLevel
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function ___bmul
  1439  0254                     ___bmul:	
  1440                           
  1441                           ;incstack = 0
  1442                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1443                           ;___bmul@multiplier stored from wreg
  1444  0254  00F6               	movwf	___bmul@multiplier
  1445  0255  01F5               	clrf	___bmul@product
  1446  0256                     l2084:	
  1447  0256  0874               	movf	___bmul@multiplicand,w
  1448  0257  1876               	btfsc	___bmul@multiplier,0
  1449  0258  07F5               	addwf	___bmul@product,f
  1450  0259  1003               	clrc
  1451  025A  0DF4               	rlf	___bmul@multiplicand,f
  1452  025B  1003               	clrc
  1453  025C  0CF6               	rrf	___bmul@multiplier,f
  1454  025D  0876               	movf	___bmul@multiplier,w
  1455  025E  1D03               	btfss	3,2
  1456  025F  2A56               	goto	l2084
  1457  0260  0875               	movf	___bmul@product,w
  1458  0261  0008               	return
  1459  0262                     __end_of___bmul:	
  1460                           
  1461                           	psect	text10
  1462  001A                     __ptext10:	
  1463 ;; *************** function ___awdiv *****************
  1464 ;; Defined at:
  1465 ;;		line 6 in file "C:\¹¤¾ß\µ¥Æ¬»úÑ§Ï°×ÊÁÏ\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\awdiv.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  divisor         2    0[BANK0 ] int 
  1468 ;;  dividend        2    2[BANK0 ] int 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  quotient        2    6[BANK0 ] int 
  1471 ;;  sign            1    5[BANK0 ] unsigned char 
  1472 ;;  counter         1    4[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2    0[BANK0 ] int 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0
  1477 ;; Tracked objects:
  1478 ;;		On entry : B00/0
  1479 ;;		On exit  : B00/0
  1480 ;;		Unchanged: 800/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1
  1482 ;;      Params:         0       4       0
  1483 ;;      Locals:         0       4       0
  1484 ;;      Temps:          0       0       0
  1485 ;;      Totals:         0       8       0
  1486 ;;Total ram usage:        8 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    3
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_setFanLevel
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function ___awdiv
  1498  001A                     ___awdiv:	
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1502  001A  01BE               	clrf	___awdiv@sign
  1503  001B  1FBA               	btfss	___awdiv@divisor+1,7
  1504  001C  2824               	goto	l2540
  1505  001D  09B9               	comf	___awdiv@divisor,f
  1506  001E  09BA               	comf	___awdiv@divisor+1,f
  1507  001F  0AB9               	incf	___awdiv@divisor,f
  1508  0020  1903               	skipnz
  1509  0021  0ABA               	incf	___awdiv@divisor+1,f
  1510  0022  01BE               	clrf	___awdiv@sign
  1511  0023  0ABE               	incf	___awdiv@sign,f
  1512  0024                     l2540:	
  1513  0024  1FBC               	btfss	___awdiv@dividend+1,7
  1514  0025  282D               	goto	l2546
  1515  0026  09BB               	comf	___awdiv@dividend,f
  1516  0027  09BC               	comf	___awdiv@dividend+1,f
  1517  0028  0ABB               	incf	___awdiv@dividend,f
  1518  0029  1903               	skipnz
  1519  002A  0ABC               	incf	___awdiv@dividend+1,f
  1520  002B  3001               	movlw	1
  1521  002C  06BE               	xorwf	___awdiv@sign,f
  1522  002D                     l2546:	
  1523  002D  01BF               	clrf	___awdiv@quotient
  1524  002E  01C0               	clrf	___awdiv@quotient+1
  1525  002F  0839               	movf	___awdiv@divisor,w
  1526  0030  043A               	iorwf	___awdiv@divisor+1,w
  1527  0031  1903               	btfsc	3,2
  1528  0032  2852               	goto	l2568
  1529  0033  01BD               	clrf	___awdiv@counter
  1530  0034                     L2:	
  1531  0034  0ABD               	incf	___awdiv@counter,f
  1532  0035  1BBA               	btfsc	___awdiv@divisor+1,7
  1533  0036  283B               	goto	l2556
  1534  0037  1003               	clrc
  1535  0038  0DB9               	rlf	___awdiv@divisor,f
  1536  0039  0DBA               	rlf	___awdiv@divisor+1,f
  1537  003A  2834               	goto	L2
  1538  003B                     l2556:	
  1539  003B  1003               	clrc
  1540  003C  0DBF               	rlf	___awdiv@quotient,f
  1541  003D  0DC0               	rlf	___awdiv@quotient+1,f
  1542  003E  083A               	movf	___awdiv@divisor+1,w
  1543  003F  023C               	subwf	___awdiv@dividend+1,w
  1544  0040  1D03               	skipz
  1545  0041  2844               	goto	u835
  1546  0042  0839               	movf	___awdiv@divisor,w
  1547  0043  023B               	subwf	___awdiv@dividend,w
  1548  0044                     u835:	
  1549  0044  1C03               	skipc
  1550  0045  284E               	goto	L3
  1551  0046  0839               	movf	___awdiv@divisor,w
  1552  0047  02BB               	subwf	___awdiv@dividend,f
  1553  0048  083A               	movf	___awdiv@divisor+1,w
  1554  0049  1C03               	skipc
  1555  004A  03BC               	decf	___awdiv@dividend+1,f
  1556  004B  02BC               	subwf	___awdiv@dividend+1,f
  1557  004C  143F               	bsf	___awdiv@quotient,0
  1558  004D  1003               	clrc
  1559  004E                     L3:	
  1560  004E  0CBA               	rrf	___awdiv@divisor+1,f
  1561  004F  0CB9               	rrf	___awdiv@divisor,f
  1562  0050  0BBD               	decfsz	___awdiv@counter,f
  1563  0051  283B               	goto	l2556
  1564  0052                     l2568:	
  1565  0052  083E               	movf	___awdiv@sign,w
  1566  0053  1903               	btfsc	3,2
  1567  0054  285A               	goto	l2572
  1568  0055  09BF               	comf	___awdiv@quotient,f
  1569  0056  09C0               	comf	___awdiv@quotient+1,f
  1570  0057  0ABF               	incf	___awdiv@quotient,f
  1571  0058  1903               	skipnz
  1572  0059  0AC0               	incf	___awdiv@quotient+1,f
  1573  005A                     l2572:	
  1574  005A  0840               	movf	___awdiv@quotient+1,w
  1575  005B  00BA               	movwf	?___awdiv+1
  1576  005C  083F               	movf	___awdiv@quotient,w
  1577  005D  00B9               	movwf	?___awdiv
  1578  005E  0008               	return
  1579  005F                     __end_of___awdiv:	
  1580                           
  1581                           	psect	text11
  1582  0262                     __ptext11:	
  1583 ;; *************** function _closeFan *****************
  1584 ;; Defined at:
  1585 ;;		line 90 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 300/0
  1596 ;;		On exit  : 300/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1
  1599 ;;      Params:         0       0       0
  1600 ;;      Locals:         0       0       0
  1601 ;;      Temps:          0       0       0
  1602 ;;      Totals:         0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    4
  1606 ;; This function calls:
  1607 ;;		_Init_PWM
  1608 ;;		_setLedOn
  1609 ;; This function is called by:
  1610 ;;		_checkFan
  1611 ;;		_checkKeys
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _closeFan
  1617  0262                     _closeFan:	
  1618  0262                     l2164:	
  1619                           ;incstack = 0
  1620                           ; Regs used in _closeFan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1621                           
  1622                           
  1623                           ;main.c: 91: Init_PWM();
  1624  0262  2270               	fcall	_Init_PWM
  1625                           
  1626                           ;main.c: 92: currentLevel = 2;
  1627  0263  3002               	movlw	2
  1628  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1629  0265  00C7               	movwf	_currentLevel
  1630                           
  1631                           ;main.c: 93: setLedOn(5);
  1632  0266  3005               	movlw	5
  1633  0267  20A1               	fcall	_setLedOn
  1634                           
  1635                           ;main.c: 94: PORTA|=(1<<0);
  1636  0268  1405               	bsf	5,0	;volatile
  1637                           
  1638                           ;main.c: 96: TRISC|=(1<<2);
  1639  0269  1683               	bsf	3,5	;RP0=1, select bank1
  1640  026A  1507               	bsf	7,2	;volatile
  1641                           
  1642                           ;main.c: 97: fan_check_time = 0;
  1643  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1644  026C  01A0               	clrf	_fan_check_time
  1645  026D  01A1               	clrf	_fan_check_time+1
  1646                           
  1647                           ;main.c: 98: FAN_STATUS = 0;
  1648  026E  01C6               	clrf	_FAN_STATUS
  1649  026F  0008               	return
  1650  0270                     __end_of_closeFan:	
  1651                           
  1652                           	psect	text12
  1653  00A1                     __ptext12:	
  1654 ;; *************** function _setLedOn *****************
  1655 ;; Defined at:
  1656 ;;		line 135 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  ledIndex        1    wreg     unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  ledIndex        1    4[COMMON] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 300/0
  1667 ;;		On exit  : 300/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1
  1670 ;;      Params:         0       0       0
  1671 ;;      Locals:         1       0       0
  1672 ;;      Temps:          0       0       0
  1673 ;;      Totals:         1       0       0
  1674 ;;Total ram usage:        1 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    3
  1677 ;; This function calls:
  1678 ;;		Nothing
  1679 ;; This function is called by:
  1680 ;;		_setFanLevel
  1681 ;;		_closeFan
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _setLedOn
  1687  00A1                     _setLedOn:	
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _setLedOn: [wreg-fsr0h+status,2+status,0]
  1691                           ;setLedOn@ledIndex stored from wreg
  1692  00A1  00F4               	movwf	setLedOn@ledIndex
  1693                           
  1694                           ;main.c: 136: switch(ledIndex) {
  1695  00A2  28BE               	goto	l2076
  1696  00A3                     l602:	
  1697                           ;main.c: 137: case 1:
  1698                           
  1699                           
  1700                           ;main.c: 139: TRISC&=~(1<<1);
  1701                           
  1702                           ;main.c: 140: TRISB|=(1<<7);
  1703                           
  1704                           ;main.c: 141: TRISC&=~(1<<0);
  1705                           
  1706                           ;main.c: 142: PORTB&=~(1<<7);
  1707  00A3  20CD               	fcall	PL12	;call to abstracted procedure
  1708                           
  1709                           ;main.c: 143: PORTC|=(1<<0);
  1710  00A4  1407               	bsf	7,0	;volatile
  1711                           
  1712                           ;main.c: 144: PORTC&=~(1<<1);
  1713  00A5  1087               	bcf	7,1	;volatile
  1714                           
  1715                           ;main.c: 145: break;
  1716  00A6  0008               	return
  1717  00A7                     l604:	
  1718                           ;main.c: 146: case 2:
  1719                           
  1720                           
  1721                           ;main.c: 147: TRISC&=~(1<<1);
  1722                           
  1723                           ;main.c: 148: TRISB|=(1<<7);
  1724                           
  1725                           ;main.c: 149: TRISC&=~(1<<0);
  1726                           
  1727                           ;main.c: 150: PORTB&=~(1<<7);
  1728  00A7  20CD               	fcall	PL12	;call to abstracted procedure
  1729                           
  1730                           ;main.c: 151: PORTC&=~(1<<0);
  1731  00A8  1007               	bcf	7,0	;volatile
  1732                           
  1733                           ;main.c: 152: PORTC|=(1<<1);
  1734  00A9  1487               	bsf	7,1	;volatile
  1735                           
  1736                           ;main.c: 153: break;
  1737  00AA  0008               	return
  1738  00AB                     l605:	
  1739                           ;main.c: 154: case 3:
  1740                           
  1741                           
  1742                           ;main.c: 156: TRISC|=(1<<0);
  1743                           
  1744                           ;main.c: 157: TRISB&=~(1<<7);
  1745                           
  1746                           ;main.c: 158: TRISC&=~(1<<1);
  1747                           
  1748                           ;main.c: 159: PORTB|=(1<<7);
  1749  00AB  20D4               	fcall	PL16	;call to abstracted procedure
  1750  00AC  1786               	bsf	6,7	;volatile
  1751                           
  1752                           ;main.c: 160: PORTC&=~(1<<0);
  1753  00AD  1007               	bcf	7,0	;volatile
  1754                           
  1755                           ;main.c: 161: PORTC&=~(1<<1);
  1756  00AE  1087               	bcf	7,1	;volatile
  1757                           
  1758                           ;main.c: 162: break;
  1759  00AF  0008               	return
  1760  00B0                     l606:	
  1761                           ;main.c: 163: case 4:
  1762                           
  1763                           
  1764                           ;main.c: 164: TRISC|=(1<<0);
  1765                           
  1766                           ;main.c: 165: TRISB&=~(1<<7);
  1767                           
  1768                           ;main.c: 166: TRISC&=~(1<<1);
  1769                           
  1770                           ;main.c: 167: PORTB&=~(1<<7);
  1771  00B0  20D4               	fcall	PL16	;call to abstracted procedure
  1772  00B1  1386               	bcf	6,7	;volatile
  1773                           
  1774                           ;main.c: 168: PORTC|=(1<<0);
  1775  00B2  1407               	bsf	7,0	;volatile
  1776                           
  1777                           ;main.c: 169: PORTC|=(1<<1);
  1778  00B3  1487               	bsf	7,1	;volatile
  1779                           
  1780                           ;main.c: 170: break;
  1781  00B4  0008               	return
  1782  00B5                     l607:	
  1783                           ;main.c: 171: case 5:
  1784                           
  1785                           
  1786                           ;main.c: 173: TRISC|=(1<<0);
  1787  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1788  00B6  1407               	bsf	7,0	;volatile
  1789                           
  1790                           ;main.c: 174: TRISB|=(1<<7);
  1791  00B7  1786               	bsf	6,7	;volatile
  1792                           
  1793                           ;main.c: 175: TRISC|=(1<<1);
  1794  00B8  1487               	bsf	7,1	;volatile
  1795                           
  1796                           ;main.c: 176: PORTC&=~(1<<0);
  1797  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1798  00BA  1007               	bcf	7,0	;volatile
  1799                           
  1800                           ;main.c: 177: PORTB&=~(1<<7);
  1801  00BB  1386               	bcf	6,7	;volatile
  1802                           
  1803                           ;main.c: 178: PORTC&=~(1<<1);
  1804  00BC  1087               	bcf	7,1	;volatile
  1805                           
  1806                           ;main.c: 179: break;
  1807  00BD  0008               	return
  1808  00BE                     l2076:	
  1809  00BE  0874               	movf	setLedOn@ledIndex,w
  1810                           
  1811                           ; Switch size 1, requested type "space"
  1812                           ; Number of cases is 5, Range of values is 1 to 5
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; direct_byte           14     9 (fixed)
  1816                           ; simple_byte           16     9 (average)
  1817                           ; jumptable            263     9 (fixed)
  1818                           ;	Chosen strategy is direct_byte
  1819  00BF  3EFF               	addlw	-1
  1820  00C0  1C03               	skipc
  1821  00C1  0008               	return
  1822  00C2  0084               	movwf	4
  1823  00C3  3005               	movlw	5
  1824  00C4  0204               	subwf	4,w
  1825  00C5  1803               	skipnc
  1826  00C6  0008               	return
  1827  00C7  3002               	movlw	high S2800
  1828  00C8  008A               	movwf	10
  1829  00C9  30A2               	movlw	low S2800
  1830  00CA  0704               	addwf	4,w
  1831  00CB  0082               	movwf	2
  1832  00CC  0008               	return
  1833  00CD                     __end_of_setLedOn:	
  1834  00CD                     PL12:	
  1835  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1836  00CE  1087               	bcf	7,1	;volatile
  1837  00CF  1786               	bsf	6,7	;volatile
  1838  00D0  1007               	bcf	7,0	;volatile
  1839  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1840  00D2  1386               	bcf	6,7	;volatile
  1841  00D3  0008               	return
  1842  00D4                     __end_ofPL12:	
  1843  00D4                     PL16:	
  1844  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1845  00D5  1407               	bsf	7,0	;volatile
  1846  00D6  1386               	bcf	6,7	;volatile
  1847  00D7  1087               	bcf	7,1	;volatile
  1848  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1849  00D9  0008               	return
  1850  00DA                     __end_ofPL16:	
  1851                           
  1852                           	psect	swtext2
  1853  02A2                     __pswtext2:	
  1854  02A2                     S2800:	
  1855  02A2  28A3               	ljmp	l602
  1856  02A3  28A7               	ljmp	l604
  1857  02A4  28AB               	ljmp	l605
  1858  02A5  28B0               	ljmp	l606
  1859  02A6  28B5               	ljmp	l607
  1860                           
  1861                           	psect	text13
  1862  0165                     __ptext13:	
  1863 ;; *************** function _Init_Config *****************
  1864 ;; Defined at:
  1865 ;;		line 252 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : B00/0
  1876 ;;		On exit  : B00/100
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1
  1879 ;;      Params:         0       0       0
  1880 ;;      Locals:         0       0       0
  1881 ;;      Temps:          0       0       0
  1882 ;;      Totals:         0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    4
  1886 ;; This function calls:
  1887 ;;		_Init_GPIO
  1888 ;;		_Init_Interupt
  1889 ;;		_Init_PWM
  1890 ;;		_Init_System
  1891 ;;		_resetKey
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function _Init_Config
  1899  0165                     _Init_Config:	
  1900                           
  1901                           ;main.c: 254: Init_System();
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1905  0165  22AB               	fcall	_Init_System
  1906                           
  1907                           ;main.c: 255: Init_GPIO();
  1908  0166  2221               	fcall	_Init_GPIO
  1909                           
  1910                           ;main.c: 256: Init_Interupt();
  1911  0167  229B               	fcall	_Init_Interupt
  1912                           
  1913                           ;main.c: 257: Init_PWM();
  1914  0168  2270               	fcall	_Init_PWM
  1915                           
  1916                           ;main.c: 259: IOCB = 0x04;
  1917                           
  1918                           ;main.c: 260: TMR0 = 155;
  1919                           
  1920                           ;main.c: 261: TO = 0;
  1921                           
  1922                           ;main.c: 264: key1.key_index = 5;
  1923                           
  1924                           ;main.c: 266: key2.key_index = 4;
  1925                           
  1926                           ;main.c: 268: key3.key_index = 3;
  1927                           
  1928                           ;main.c: 269: resetKey(&key1);
  1929  0169  2170               	fcall	PL4	;call to abstracted procedure
  1930  016A  2234               	fcall	_resetKey
  1931                           
  1932                           ;main.c: 270: resetKey(&key2);
  1933  016B  302B               	movlw	(low (_key2| 0))& (0+255)
  1934  016C  2234               	fcall	_resetKey
  1935                           
  1936                           ;main.c: 271: resetKey(&key3);
  1937  016D  3024               	movlw	(low (_key3| 0))& (0+255)
  1938  016E  2234               	fcall	_resetKey
  1939                           
  1940                           ;main.c: 273: TRISA = 0;
  1941                           
  1942                           ;main.c: 274: TRISB = 0x7E;
  1943                           
  1944                           ;main.c: 275: TRISC = 0;
  1945  016F  297D               	ljmp	PL10	;call to abstracted procedure
  1946  0170                     __end_of_Init_Config:	
  1947  0170                     PL4:	
  1948  0170  3004               	movlw	4
  1949  0171  0096               	movwf	22	;volatile
  1950  0172  309B               	movlw	155
  1951  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0174  0081               	movwf	1	;volatile
  1953  0175  1203               	bcf	3,4	;volatile
  1954  0176  3005               	movlw	5
  1955  0177  00B8               	movwf	_key1+6
  1956  0178  3004               	movlw	4
  1957  0179  00B1               	movwf	_key2+6
  1958  017A  3003               	movlw	3
  1959  017B  00AA               	movwf	_key3+6
  1960  017C  3432               	retlw	(low (_key1| 0))& (0+255)
  1961  017D                     __end_ofPL4:	
  1962  017D                     PL10:	
  1963  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1964  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1965  017F  0185               	clrf	5	;volatile
  1966  0180  307E               	movlw	126
  1967  0181  0086               	movwf	6	;volatile
  1968  0182  0187               	clrf	7	;volatile
  1969  0183  0008               	return
  1970  0184                     __end_ofPL10:	
  1971                           
  1972                           	psect	text14
  1973  0234                     __ptext14:	
  1974 ;; *************** function _resetKey *****************
  1975 ;; Defined at:
  1976 ;;		line 100 in file "C:\SCMCU WorkSpace\uf166fan\scankey.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  key             1    wreg     PTR struct Keys
  1979 ;;		 -> key3(7), key2(7), key1(7), 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  key             1    4[COMMON] PTR struct Keys
  1982 ;;		 -> key3(7), key2(7), key1(7), 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 800/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1
  1992 ;;      Params:         0       0       0
  1993 ;;      Locals:         1       0       0
  1994 ;;      Temps:          0       0       0
  1995 ;;      Totals:         1       0       0
  1996 ;;Total ram usage:        1 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    3
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_Init_Config
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           
  2007                           ;psect for function _resetKey
  2008  0234                     _resetKey:	
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in _resetKey: [wreg-fsr0h+status,2+status,0]
  2012                           ;resetKey@key stored from wreg
  2013  0234  00F4               	movwf	resetKey@key
  2014                           
  2015                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2016  0235  3E03               	addlw	3
  2017  0236  0084               	movwf	4
  2018  0237  1383               	bcf	3,7	;select IRP bank0
  2019  0238  0180               	clrf	0
  2020  0239  0A74               	incf	resetKey@key,w
  2021  023A  0084               	movwf	4
  2022  023B  0180               	clrf	0
  2023  023C  0874               	movf	resetKey@key,w
  2024  023D  3E02               	addlw	2
  2025  023E  0084               	movwf	4
  2026  023F  0180               	clrf	0
  2027  0240  0874               	movf	resetKey@key,w
  2028  0241  0084               	movwf	4
  2029  0242  0180               	clrf	0
  2030  0243  0008               	return
  2031  0244                     __end_of_resetKey:	
  2032                           
  2033                           	psect	text15
  2034  02AB                     __ptext15:	
  2035 ;; *************** function _Init_System *****************
  2036 ;; Defined at:
  2037 ;;		line 3 in file "C:\SCMCU WorkSpace\uf166fan\init.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2
  2046 ;; Tracked objects:
  2047 ;;		On entry : B00/0
  2048 ;;		On exit  : 300/100
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1
  2051 ;;      Params:         0       0       0
  2052 ;;      Locals:         0       0       0
  2053 ;;      Temps:          0       0       0
  2054 ;;      Totals:         0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    3
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_Init_Config
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _Init_System
  2067  02AB                     _Init_System:	
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _Init_System: [wreg+status,2]
  2071  02AB  0000               	nop	;# 
  2072  02AC  0064               	clrwdt	;# 
  2073                           
  2074                           ;init.c: 6: INTCON = 0;
  2075                           
  2076                           ;init.c: 7: OSCCON = 0X71;
  2077                           
  2078                           ;init.c: 8: OPTION_REG = 0x00;
  2079  02AD  2A8C               	ljmp	PL8	;call to abstracted procedure
  2080  02AE                     __end_of_Init_System:	
  2081                           
  2082                           	psect	text16
  2083  0270                     __ptext16:	
  2084 ;; *************** function _Init_PWM *****************
  2085 ;; Defined at:
  2086 ;;		line 51 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2
  2095 ;; Tracked objects:
  2096 ;;		On entry : 300/0
  2097 ;;		On exit  : 300/100
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1
  2100 ;;      Params:         0       0       0
  2101 ;;      Locals:         0       0       0
  2102 ;;      Temps:          0       0       0
  2103 ;;      Totals:         0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; Hardware stack levels required when called:    3
  2107 ;; This function calls:
  2108 ;;		Nothing
  2109 ;; This function is called by:
  2110 ;;		_closeFan
  2111 ;;		_Init_Config
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _Init_PWM
  2117  0270                     _Init_PWM:	
  2118                           
  2119                           ;main.c: 52: CCP1CON = 0x0F;
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _Init_PWM: [wreg+status,2]
  2123                           
  2124                           ;main.c: 53: T2CON = 0;
  2125                           
  2126                           ;main.c: 54: PR2 = 7;
  2127                           
  2128                           ;main.c: 56: CCPR1L = 0;
  2129                           
  2130                           ;main.c: 57: TMR2IF = 0;
  2131                           
  2132                           ;main.c: 58: T2CON = 0;
  2133                           
  2134                           ;main.c: 60: TRISC&=~(1<<2);
  2135  0270  2A71               	ljmp	PL6	;call to abstracted procedure
  2136  0271                     __end_of_Init_PWM:	
  2137  0271                     PL6:	
  2138  0271  300F               	movlw	15
  2139  0272  0097               	movwf	23	;volatile
  2140  0273  0192               	clrf	18	;volatile
  2141  0274  3007               	movlw	7
  2142  0275  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0276  0092               	movwf	18	;volatile
  2144  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0278  0195               	clrf	21	;volatile
  2146  0279  108C               	bcf	12,1	;volatile
  2147  027A  0192               	clrf	18	;volatile
  2148  027B  1683               	bsf	3,5	;RP0=1, select bank1
  2149  027C  1107               	bcf	7,2	;volatile
  2150  027D  0008               	return
  2151  027E                     __end_ofPL6:	
  2152                           
  2153                           	psect	text17
  2154  029B                     __ptext17:	
  2155 ;; *************** function _Init_Interupt *****************
  2156 ;; Defined at:
  2157 ;;		line 27 in file "C:\SCMCU WorkSpace\uf166fan\init.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, status,2
  2166 ;; Tracked objects:
  2167 ;;		On entry : 300/100
  2168 ;;		On exit  : 300/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1
  2171 ;;      Params:         0       0       0
  2172 ;;      Locals:         0       0       0
  2173 ;;      Temps:          0       0       0
  2174 ;;      Totals:         0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    3
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_Init_Config
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _Init_Interupt
  2187  029B                     _Init_Interupt:	
  2188                           
  2189                           ;init.c: 28: OPTION_REG = 0x00;
  2190                           
  2191                           ;incstack = 0
  2192                           ; Regs used in _Init_Interupt: [wreg+status,2]
  2193                           
  2194                           ;init.c: 29: TMR0 = 0;
  2195                           
  2196                           ;init.c: 30: INTCON = 0xE0;
  2197  029B  2A9C               	ljmp	PL14	;call to abstracted procedure
  2198  029C                     __end_of_Init_Interupt:	
  2199  029C                     PL14:	
  2200  029C  0181               	clrf	1	;volatile
  2201  029D  1283               	bcf	3,5	;RP0=0, select bank0
  2202  029E  0181               	clrf	1	;volatile
  2203  029F  30E0               	movlw	224
  2204  02A0  008B               	movwf	11	;volatile
  2205  02A1  0008               	return
  2206  02A2                     __end_ofPL14:	
  2207                           
  2208                           	psect	text18
  2209  0221                     __ptext18:	
  2210 ;; *************** function _Init_GPIO *****************
  2211 ;; Defined at:
  2212 ;;		line 13 in file "C:\SCMCU WorkSpace\uf166fan\init.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2
  2221 ;; Tracked objects:
  2222 ;;		On entry : 300/100
  2223 ;;		On exit  : 300/100
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1
  2226 ;;      Params:         0       0       0
  2227 ;;      Locals:         0       0       0
  2228 ;;      Temps:          0       0       0
  2229 ;;      Totals:         0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    3
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_Init_Config
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _Init_GPIO
  2242  0221                     _Init_GPIO:	
  2243                           
  2244                           ;init.c: 14: TRISA = 0;
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _Init_GPIO: [wreg+status,2]
  2248                           
  2249                           ;init.c: 15: TRISB = 0;
  2250                           
  2251                           ;init.c: 16: TRISC = 0;
  2252                           
  2253                           ;init.c: 17: WPUA = 0xFF;
  2254                           
  2255                           ;init.c: 18: WPUB = 0xFF;
  2256                           
  2257                           ;init.c: 19: WPUC = 0xFF;
  2258                           
  2259                           ;init.c: 20: PORTA = 0xFF;
  2260                           
  2261                           ;init.c: 21: PORTB = 0xFF;
  2262                           
  2263                           ;init.c: 22: PORTC = 0xFF;
  2264                           
  2265                           ;init.c: 23: IOCB = 0x00;
  2266  0221  2A22               	ljmp	PL2	;call to abstracted procedure
  2267  0222                     __end_of_Init_GPIO:	
  2268  0222                     PL2:	
  2269  0222  0185               	clrf	5	;volatile
  2270  0223  0186               	clrf	6	;volatile
  2271  0224  0187               	clrf	7	;volatile
  2272  0225  30FF               	movlw	255
  2273  0226  1703               	bsf	3,6	;RP1=1, select bank3
  2274  0227  008E               	movwf	14	;volatile
  2275  0228  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0229  0095               	movwf	21	;volatile
  2277  022A  1703               	bsf	3,6	;RP1=1, select bank3
  2278  022B  008F               	movwf	15	;volatile
  2279  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2280  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2281  022E  0085               	movwf	5	;volatile
  2282  022F  0086               	movwf	6	;volatile
  2283  0230  0087               	movwf	7	;volatile
  2284  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0232  0196               	clrf	22	;volatile
  2286  0233  0008               	return
  2287  0234                     __end_ofPL2:	
  2288                           
  2289                           	psect	text19
  2290  01F6                     __ptext19:	
  2291 ;; *************** function _Timer0_Isr *****************
  2292 ;; Defined at:
  2293 ;;		line 322 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1
  2307 ;;      Params:         0       0       0
  2308 ;;      Locals:         0       0       0
  2309 ;;      Temps:          3       0       0
  2310 ;;      Totals:         3       0       0
  2311 ;;Total ram usage:        3 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    2
  2314 ;; This function calls:
  2315 ;;		i1_Init_Config
  2316 ;; This function is called by:
  2317 ;;		Interrupt level 1
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _Timer0_Isr
  2323  01F6                     _Timer0_Isr:	
  2324                           
  2325                           ;main.c: 323: if (T0IF) {
  2326  01F6  1D0B               	btfss	11,2	;volatile
  2327  01F7  29FF               	goto	i1l2476
  2328                           
  2329                           ;main.c: 325: TMR0 += 155;
  2330  01F8  309B               	movlw	155
  2331  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2332  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2333  01FB  0781               	addwf	1,f	;volatile
  2334                           
  2335                           ;main.c: 328: T0IF = 0;
  2336  01FC  110B               	bcf	11,2	;volatile
  2337                           
  2338                           ;main.c: 329: time0Flag = 1;
  2339  01FD  01F9               	clrf	_time0Flag
  2340  01FE  0AF9               	incf	_time0Flag,f
  2341  01FF                     i1l2476:	
  2342                           
  2343                           ;main.c: 331: }
  2344                           ;main.c: 333: if (RBIF) {
  2345  01FF  1C0B               	btfss	11,0	;volatile
  2346  0200  2A03               	goto	i1l645
  2347                           
  2348                           ;main.c: 334: RBIF = 0;
  2349  0201  100B               	bcf	11,0	;volatile
  2350                           
  2351                           ;main.c: 335: Init_Config();
  2352  0202  227E               	fcall	i1_Init_Config
  2353  0203                     i1l645:	
  2354  0203  0873               	movf	??_Timer0_Isr+2,w
  2355  0204  008A               	movwf	10
  2356  0205  0872               	movf	??_Timer0_Isr+1,w
  2357  0206  0084               	movwf	4
  2358  0207  0E71               	swapf	??_Timer0_Isr^(0+-128),w
  2359  0208  0083               	movwf	3
  2360  0209  0EFE               	swapf	126,f
  2361  020A  0E7E               	swapf	126,w
  2362  020B  0009               	retfie
  2363  020C                     __end_of_Timer0_Isr:	
  2364                           
  2365                           	psect	intentry
  2366  0004                     __pintentry:	
  2367                           ;incstack = 0
  2368                           ; Regs used in _Timer0_Isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2369                           
  2370  0004                     interrupt_function:	
  2371  007E                     saved_w	set	btemp
  2372  0004  00FE               	movwf	btemp
  2373  0005  0E03               	swapf	3,w
  2374  0006  00F1               	movwf	??_Timer0_Isr
  2375  0007  0804               	movf	4,w
  2376  0008  00F2               	movwf	??_Timer0_Isr+1
  2377  0009  080A               	movf	10,w
  2378  000A  00F3               	movwf	??_Timer0_Isr+2
  2379  000B  29F6               	ljmp	_Timer0_Isr
  2380                           
  2381                           	psect	text20
  2382  027E                     __ptext20:	
  2383 ;; *************** function i1_Init_Config *****************
  2384 ;; Defined at:
  2385 ;;		line 252 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : B00/100
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1
  2399 ;;      Params:         0       0       0
  2400 ;;      Locals:         0       0       0
  2401 ;;      Temps:          0       0       0
  2402 ;;      Totals:         0       0       0
  2403 ;;Total ram usage:        0 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    1
  2406 ;; This function calls:
  2407 ;;		i1_Init_GPIO
  2408 ;;		i1_Init_Interupt
  2409 ;;		i1_Init_PWM
  2410 ;;		i1_Init_System
  2411 ;;		i1_resetKey
  2412 ;; This function is called by:
  2413 ;;		_Timer0_Isr
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           
  2418                           ;psect for function i1_Init_Config
  2419  027E                     i1_Init_Config:	
  2420                           
  2421                           ;main.c: 254: Init_System();
  2422                           
  2423                           ;incstack = 0
  2424                           ; Regs used in i1_Init_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2425  027E  2289               	fcall	i1_Init_System
  2426                           
  2427                           ;main.c: 255: Init_GPIO();
  2428  027F  22B0               	fcall	i1_Init_GPIO
  2429                           
  2430                           ;main.c: 256: Init_Interupt();
  2431  0280  22AF               	fcall	i1_Init_Interupt
  2432                           
  2433                           ;main.c: 257: Init_PWM();
  2434  0281  22AE               	fcall	i1_Init_PWM
  2435                           
  2436                           ;main.c: 259: IOCB = 0x04;
  2437                           
  2438                           ;main.c: 260: TMR0 = 155;
  2439                           
  2440                           ;main.c: 261: TO = 0;
  2441                           
  2442                           ;main.c: 264: key1.key_index = 5;
  2443                           
  2444                           ;main.c: 266: key2.key_index = 4;
  2445                           
  2446                           ;main.c: 268: key3.key_index = 3;
  2447                           
  2448                           ;main.c: 269: resetKey(&key1);
  2449  0282  2170               	fcall	PL4	;call to abstracted procedure
  2450  0283  2244               	fcall	i1_resetKey
  2451                           
  2452                           ;main.c: 270: resetKey(&key2);
  2453  0284  302B               	movlw	(low (_key2| 0))& (0+255)
  2454  0285  2244               	fcall	i1_resetKey
  2455                           
  2456                           ;main.c: 271: resetKey(&key3);
  2457  0286  3024               	movlw	(low (_key3| 0))& (0+255)
  2458  0287  2244               	fcall	i1_resetKey
  2459                           
  2460                           ;main.c: 273: TRISA = 0;
  2461                           
  2462                           ;main.c: 274: TRISB = 0x7E;
  2463                           
  2464                           ;main.c: 275: TRISC = 0;
  2465  0288  297D               	ljmp	PL10	;call to abstracted procedure
  2466  0289                     __end_ofi1_Init_Config:	
  2467                           
  2468                           	psect	text21
  2469  0244                     __ptext21:	
  2470 ;; *************** function i1_resetKey *****************
  2471 ;; Defined at:
  2472 ;;		line 100 in file "C:\SCMCU WorkSpace\uf166fan\scankey.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  key             1    wreg     PTR struct Keys
  2475 ;;		 -> key3(7), key2(7), key1(7), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  key             1    0[COMMON] PTR struct Keys
  2478 ;;		 -> key3(7), key2(7), key1(7), 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 800/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1
  2488 ;;      Params:         0       0       0
  2489 ;;      Locals:         1       0       0
  2490 ;;      Temps:          0       0       0
  2491 ;;      Totals:         1       0       0
  2492 ;;Total ram usage:        1 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		i1_Init_Config
  2498 ;; This function uses a non-reentrant model
  2499 ;;
  2500                           
  2501                           
  2502                           ;psect for function i1_resetKey
  2503  0244                     i1_resetKey:	
  2504                           
  2505                           ;incstack = 0
  2506                           ; Regs used in i1_resetKey: [wreg-fsr0h+status,2+status,0]
  2507                           ;i1resetKey@key stored from wreg
  2508  0244  00F0               	movwf	i1resetKey@key
  2509                           
  2510                           ;scankey.c: 101: key->key_timer_cnt1 = key->key_timer_cnt2 = key->key_state_buffer1 = ke
      +                          y->key_state_buffer2 = 0;
  2511  0245  3E03               	addlw	3
  2512  0246  0084               	movwf	4
  2513  0247  1383               	bcf	3,7	;select IRP bank0
  2514  0248  0180               	clrf	0
  2515  0249  0A70               	incf	i1resetKey@key,w
  2516  024A  0084               	movwf	4
  2517  024B  0180               	clrf	0
  2518  024C  0870               	movf	i1resetKey@key,w
  2519  024D  3E02               	addlw	2
  2520  024E  0084               	movwf	4
  2521  024F  0180               	clrf	0
  2522  0250  0870               	movf	i1resetKey@key,w
  2523  0251  0084               	movwf	4
  2524  0252  0180               	clrf	0
  2525  0253  0008               	return
  2526  0254                     __end_ofi1_resetKey:	
  2527                           
  2528                           	psect	text22
  2529  0289                     __ptext22:	
  2530 ;; *************** function i1_Init_System *****************
  2531 ;; Defined at:
  2532 ;;		line 3 in file "C:\SCMCU WorkSpace\uf166fan\init.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, status,2
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 300/100
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1
  2546 ;;      Params:         0       0       0
  2547 ;;      Locals:         0       0       0
  2548 ;;      Temps:          0       0       0
  2549 ;;      Totals:         0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		i1_Init_Config
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           
  2560                           ;psect for function i1_Init_System
  2561  0289                     i1_Init_System:	
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in i1_Init_System: [wreg+status,2]
  2565  0289  0000               	nop	;# 
  2566  028A  0064               	clrwdt	;# 
  2567                           
  2568                           ;init.c: 6: INTCON = 0;
  2569                           
  2570                           ;init.c: 7: OSCCON = 0X71;
  2571                           
  2572                           ;init.c: 8: OPTION_REG = 0x00;
  2573  028B  2A8C               	ljmp	PL8	;call to abstracted procedure
  2574  028C                     __end_ofi1_Init_System:	
  2575  028C                     PL8:	
  2576  028C  018B               	clrf	11	;volatile
  2577  028D  3071               	movlw	113
  2578  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2579  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0290  008F               	movwf	15	;volatile
  2581  0291  0181               	clrf	1	;volatile
  2582  0292  0008               	return
  2583  0293                     __end_ofPL8:	
  2584                           
  2585                           	psect	text23
  2586  02AE                     __ptext23:	
  2587 ;; *************** function i1_Init_PWM *****************
  2588 ;; Defined at:
  2589 ;;		line 51 in file "C:\SCMCU WorkSpace\uf166fan\main.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2
  2598 ;; Tracked objects:
  2599 ;;		On entry : 300/0
  2600 ;;		On exit  : 300/100
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMMON   BANK0   BANK1
  2603 ;;      Params:         0       0       0
  2604 ;;      Locals:         0       0       0
  2605 ;;      Temps:          0       0       0
  2606 ;;      Totals:         0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		i1_Init_Config
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           
  2617                           ;psect for function i1_Init_PWM
  2618  02AE                     i1_Init_PWM:	
  2619                           
  2620                           ;main.c: 52: CCP1CON = 0x0F;
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in i1_Init_PWM: [wreg+status,2]
  2624                           
  2625                           ;main.c: 53: T2CON = 0;
  2626                           
  2627                           ;main.c: 54: PR2 = 7;
  2628                           
  2629                           ;main.c: 56: CCPR1L = 0;
  2630                           
  2631                           ;main.c: 57: TMR2IF = 0;
  2632                           
  2633                           ;main.c: 58: T2CON = 0;
  2634                           
  2635                           ;main.c: 60: TRISC&=~(1<<2);
  2636  02AE  2A71               	ljmp	PL6	;call to abstracted procedure
  2637  02AF                     __end_ofi1_Init_PWM:	
  2638                           
  2639                           	psect	text24
  2640  02AF                     __ptext24:	
  2641 ;; *************** function i1_Init_Interupt *****************
  2642 ;; Defined at:
  2643 ;;		line 27 in file "C:\SCMCU WorkSpace\uf166fan\init.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2
  2652 ;; Tracked objects:
  2653 ;;		On entry : 300/100
  2654 ;;		On exit  : 300/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1
  2657 ;;      Params:         0       0       0
  2658 ;;      Locals:         0       0       0
  2659 ;;      Temps:          0       0       0
  2660 ;;      Totals:         0       0       0
  2661 ;;Total ram usage:        0 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		i1_Init_Config
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function i1_Init_Interupt
  2672  02AF                     i1_Init_Interupt:	
  2673                           
  2674                           ;init.c: 28: OPTION_REG = 0x00;
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in i1_Init_Interupt: [wreg+status,2]
  2678                           
  2679                           ;init.c: 29: TMR0 = 0;
  2680                           
  2681                           ;init.c: 30: INTCON = 0xE0;
  2682  02AF  2A9C               	ljmp	PL14	;call to abstracted procedure
  2683  02B0                     __end_ofi1_Init_Interupt:	
  2684                           
  2685                           	psect	text25
  2686  02B0                     __ptext25:	
  2687 ;; *************** function i1_Init_GPIO *****************
  2688 ;; Defined at:
  2689 ;;		line 13 in file "C:\SCMCU WorkSpace\uf166fan\init.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;		None
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      void 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2
  2698 ;; Tracked objects:
  2699 ;;		On entry : 300/100
  2700 ;;		On exit  : 300/100
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1
  2703 ;;      Params:         0       0       0
  2704 ;;      Locals:         0       0       0
  2705 ;;      Temps:          0       0       0
  2706 ;;      Totals:         0       0       0
  2707 ;;Total ram usage:        0 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		i1_Init_Config
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function i1_Init_GPIO
  2718  02B0                     i1_Init_GPIO:	
  2719                           
  2720                           ;init.c: 14: TRISA = 0;
  2721                           
  2722                           ;incstack = 0
  2723                           ; Regs used in i1_Init_GPIO: [wreg+status,2]
  2724                           
  2725                           ;init.c: 15: TRISB = 0;
  2726                           
  2727                           ;init.c: 16: TRISC = 0;
  2728                           
  2729                           ;init.c: 17: WPUA = 0xFF;
  2730                           
  2731                           ;init.c: 18: WPUB = 0xFF;
  2732                           
  2733                           ;init.c: 19: WPUC = 0xFF;
  2734                           
  2735                           ;init.c: 20: PORTA = 0xFF;
  2736                           
  2737                           ;init.c: 21: PORTB = 0xFF;
  2738                           
  2739                           ;init.c: 22: PORTC = 0xFF;
  2740                           
  2741                           ;init.c: 23: IOCB = 0x00;
  2742  02B0  2A22               	ljmp	PL2	;call to abstracted procedure
  2743  02B1                     __end_ofi1_Init_GPIO:	
  2744  007E                     btemp	set	126	;btemp
  2745  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     13      40
    BANK1            80      0       0

Pointer List with Targets:

    resetKey@key	PTR struct Keys size(1) Largest target is 7
		 -> key3(BANK0[7]), key2(BANK0[7]), key1(BANK0[7]), 

    key_read@key	PTR struct Keys size(1) Largest target is 7
		 -> key3(BANK0[7]), key2(BANK0[7]), key1(BANK0[7]), 

    key_driver@key	PTR struct Keys size(1) Largest target is 7
		 -> key3(BANK0[7]), key2(BANK0[7]), key1(BANK0[7]), 

    sacnKeyInput@key	PTR struct Keys size(1) Largest target is 7
		 -> key3(BANK0[7]), key2(BANK0[7]), key1(BANK0[7]), 


Critical Paths under _main in COMMON

    _scanKeys->_sacnKeyInput
    _key_read->_key_driver
    _setFanLevel->___bmul
    _closeFan->_setLedOn
    _Init_Config->_resetKey

Critical Paths under _Timer0_Isr in COMMON

    i1_Init_Config->i1_resetKey

Critical Paths under _main in BANK0

    _checkKeys->_checkFan
    _checkFan->_setFanLevel
    _setFanLevel->___awdiv

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3277
                        _Init_Config
                          _checkKeys
                     _checkUsbStatus
                           _scanKeys
 ---------------------------------------------------------------------------------
 (1) _scanKeys                                             0     0      0     169
                       _sacnKeyInput
 ---------------------------------------------------------------------------------
 (2) _sacnKeyInput                                         3     3      0     169
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _checkUsbStatus                                       1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkKeys                                            0     0      0    2939
                           _checkFan
                           _closeFan
                           _key_read
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _key_read                                             3     3      0     953
                                              0 BANK0      3     3      0
                         _key_driver
 ---------------------------------------------------------------------------------
 (3) _key_driver                                           3     3      0     507
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _checkFan                                             1     1      0     993
                                             12 BANK0      1     1      0
                           _closeFan
                        _setFanLevel
 ---------------------------------------------------------------------------------
 (2) _setFanLevel                                          4     4      0     971
                                              8 BANK0      4     4      0
                            ___awdiv
                             ___bmul
                           _setLedOn
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     145
                                              4 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     606
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _closeFan                                             0     0      0      22
                           _Init_PWM
                           _setLedOn
 ---------------------------------------------------------------------------------
 (3) _setLedOn                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_Config                                          0     0      0     169
                          _Init_GPIO
                      _Init_Interupt
                           _Init_PWM
                        _Init_System
                           _resetKey
 ---------------------------------------------------------------------------------
 (2) _resetKey                                             1     1      0     169
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Init_PWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Interupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer0_Isr                                           3     3      0      88
                                              1 COMMON     3     3      0
                      i1_Init_Config
 ---------------------------------------------------------------------------------
 (6) i1_Init_Config                                        0     0      0      88
                        i1_Init_GPIO
                    i1_Init_Interupt
                         i1_Init_PWM
                      i1_Init_System
                         i1_resetKey
 ---------------------------------------------------------------------------------
 (7) i1_resetKey                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_Init_System                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_PWM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_Interupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i1_Init_GPIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_Config
     _Init_GPIO
     _Init_Interupt
     _Init_PWM
     _Init_System
     _resetKey
   _checkKeys
     _checkFan
       _closeFan
         _Init_PWM
         _setLedOn
       _setFanLevel
         ___awdiv
         ___bmul
         _setLedOn
     _closeFan
       _Init_PWM
       _setLedOn
     _key_read
       _key_driver
     _setFanLevel
       ___awdiv
       ___bmul
       _setLedOn
   _checkUsbStatus
   _scanKeys
     _sacnKeyInput

 _Timer0_Isr (ROOT)
   i1_Init_Config
     i1_Init_GPIO
     i1_Init_Interupt
     i1_Init_PWM
     i1_Init_System
     i1_resetKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      D      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      32       8        0.0%
ABS                  0      0      32       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 01 13:39:33 2020

         ??i1_Init_System 0070                         pc 0002            ___bmul@product 0075  
                      PL2 0222                        PL4 0170                        PL6 0271  
                      PL8 028C                        _TO 001C              ___awdiv@sign 003E  
                      fsr 0004                       PL10 017D                       PL12 00CD  
                     PL14 029C                       PL16 00D4                       l602 00A3  
                     l604 00A7                       l605 00AB                       l606 00B0  
                     l607 00B5                       l618 0194                       l573 01D9  
                     _PR2 0092                       u624 01AF                       u625 01AD  
                     u835 0044                       u955 0148                       fsr0 0004  
                     indf 0000                      S2800 02A2                      S2798 02A7  
                    l2076 00BE                      l2164 0262                      l2084 0256  
                    l2350 01CF                      l2540 0024                      l2604 0067  
                    l2630 008E                      l2622 007E                      l2616 0079  
                    l2608 006F                      l2720 019B                      l2704 018C  
                    l2712 018F                      l2546 002D                      l2634 0092  
                    l2572 005A                      l2556 003B                      l2580 0115  
                    l2628 008C                      l2636 009F                      l2654 0152  
                    l2646 013E                      l2568 0052                      l2592 0133  
                    l2656 0154                      l2672 00DF                      l2744 01EC  
                    l2736 01E2                      l2728 01DC                      l2588 012E  
                    l2684 00F3                      l2676 00EB                      l2692 0102  
                    l2678 00EE                      l2694 010D                      l2688 00FD  
                    _T0IF 005A                      _IOCB 0096                      _RBIF 0058  
                    _TMR0 0001    __end_of_checkUsbStatus 01DB                      _WPUA 018E  
                    _WPUB 0095                      _WPUC 018F                      _key1 0032  
                    _key2 002B                      _key3 0024                      _main 01DB  
                    btemp 007E                i1_resetKey 0244                      start 000C  
           ??_Init_Config 0075         ___bmul@multiplier 0076             ??_Init_System 0074  
           _Init_Interupt 029B                     ?_main 0070           __end_of___awdiv 005F  
         ___awdiv@divisor 0039                     _T2CON 0012        key_driver@key_read 0075  
                   i1l645 0203           ___awdiv@counter 003D                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087               ?i1_Init_PWM 0070  
                   pclath 000A           ?_checkUsbStatus 0070                     status 0003  
                   wtemp0 007E              ?_setFanLevel 0070           __initialization 000D  
            __end_of_main 01F6          __end_of_Init_PWM 0271            ?_Init_Interupt 0070  
     __end_of_Init_Config 0170            _fan_check_time 0020                    ??_main 0077  
     __end_of_Init_System 02AE                    _CCPR1L 0015          ___awdiv@dividend 003B  
                  i1l2476 01FF                    _INTCON 000B             ?_sacnKeyInput 0070  
      __size_of_Init_GPIO 0001                    _OSCCON 008F                    _TMR2IF 0061  
        __end_of_checkFan 0165               ?i1_resetKey 0070                _Timer0_Isr 01F6  
        __end_of_closeFan 0270                    ___bmul 0254          setLedOn@ledIndex 0074  
               ??___awdiv 0074               key_read@key 003B       __size_ofi1_Init_PWM 0001  
        __end_of_key_read 010F              ?i1_Init_GPIO 0070          __end_of_scanKeys 0221  
        ___awdiv@quotient 003F          __end_of_setLedOn 00CD          __end_of_resetKey 0244  
         i1_Init_Interupt 02AF                    saved_w 007E            ??_sacnKeyInput 0074  
 __end_of__initialization 0018       ___bmul@multiplicand 0074               _Init_Config 0165  
          __pcstackCOMMON 0070           ??_Init_Interupt 0074              __pidataBANK0 0000  
      __size_of_checkKeys 001E               _Init_System 02AB                __end_ofPL2 0234  
              __end_ofPL4 017D                __end_ofPL6 027E                __end_ofPL8 0293  
       __end_of_Init_GPIO 0222       __size_ofi1_resetKey 0010                __pbssBANK0 0020  
               ?_Init_PWM 0070               ?_Timer0_Isr 0070     __end_ofi1_Init_Config 0289  
              __pmaintext 01DB                   ?___bmul 0074      __size_of_setFanLevel 002F  
              __pintentry 0004                   _CCP1CON 0017     __end_ofi1_Init_System 028C  
 __end_ofi1_Init_Interupt 02B0                 ?_checkFan 0070      key_driver@key_return 0074  
        ??_checkUsbStatus 0074                 ?_closeFan 0070              ??i1_Init_PWM 0070  
       __end_of_checkKeys 01A2                ??_Init_PWM 0074                 ?_key_read 0070  
               ?_scanKeys 0070                 ?_setLedOn 0070                 ?_resetKey 0070  
             resetKey@key 0074           __size_of___bmul 000E                   ___awdiv 001A  
              _key_driver 005F      __end_of_sacnKeyInput 01BF        __end_ofi1_Init_PWM 02AF  
                 __ptext1 020C                   __ptext2 01A2                   __ptext3 01BF  
                 __ptext4 0184                   __ptext5 00DA                   __ptext6 005F  
                 __ptext7 013E                   __ptext8 010F                   __ptext9 0254  
    __size_ofi1_Init_GPIO 0001                ??_checkFan 0045     setFanLevel@levelWidth 0041  
     __size_of_Timer0_Isr 0016                ??_closeFan 0075                   clrloop0 0294  
    end_of_initialization 0018                ??_key_read 0077                ??_scanKeys 0077  
            ??i1_resetKey 0070                ??_setLedOn 0074        key_read@key_return 0039  
              ??_resetKey 0074           sacnKeyInput@key 0076          ?i1_Init_Interupt 0070  
      __end_ofi1_resetKey 0254              ?_Init_Config 0070               ?_key_driver 0070  
          __end_of___bmul 0262              ?_Init_System 0070          setFanLevel@level 0043  
             __end_ofPL10 0184               __end_ofPL12 00D4               __end_ofPL14 02A2  
             __end_ofPL16 00DA       start_initialization 000D                 _Init_GPIO 0221  
       __size_of_Init_PWM 0001              ??_Timer0_Isr 0071     __size_of_sacnKeyInput 001D  
                ??___bmul 0075               __pdataBANK0 0046     __end_of_Init_Interupt 029C  
        key_read@key_read 003A               __pbssCOMMON 0077                ?_Init_GPIO 0070  
               ___latbits 0000             __pcstackBANK0 0039         __size_of_checkFan 0027  
      __end_of_Timer0_Isr 020C       __size_of_key_driver 0042         __size_of_closeFan 000E  
            _sacnKeyInput 01A2              _currentLevel 0047                 _checkKeys 0184  
       __size_of_key_read 0035             ??_setFanLevel 0077         __size_of_scanKeys 0015  
       __size_of_setLedOn 002C                  ?___awdiv 0039         __size_of_resetKey 0010  
               __pswtext1 02A7                 __pswtext2 02A2                 _count10Ms 0022  
               _countTime 0077    __size_ofi1_Init_Config 000B    __size_ofi1_Init_System 0003  
       interrupt_function 0004                ?_checkKeys 0070                 _time0Flag 0079  
               clear_ram0 0293      __size_of_Init_Config 000B      setFanLevel@tempLevel 0044  
           ??i1_Init_GPIO 0070       __end_of_setFanLevel 013E      __size_of_Init_System 0003  
             ??_Init_GPIO 0074                  _Init_PWM 0270   __size_of_checkUsbStatus 001C  
           i1_Init_Config 027E              ??_key_driver 0074          __size_of___awdiv 0045  
           key_driver@key 0076             i1_Init_System 0289                  _checkFan 013E  
              _FAN_STATUS 0046       __end_ofi1_Init_GPIO 02B1  __size_ofi1_Init_Interupt 0001  
                __ptext10 001A                  __ptext11 0262                  __ptext20 027E  
                __ptext12 00A1                  __ptext21 0244                  __ptext13 0165  
                __ptext22 0289                  __ptext14 0234                  __ptext23 02AE  
                __ptext15 02AB                  __ptext24 02AF                  __ptext16 0270  
                __ptext25 02B0                  __ptext17 029B                  __ptext18 0221  
                __ptext19 01F6                  _closeFan 0262        __end_of_key_driver 00A1  
                _key_read 00DA             __size_of_main 001B               ??_checkKeys 0077  
                _scanKeys 020C                  _setLedOn 00A1                  _resetKey 0234  
             _setFanLevel 010F            ?i1_Init_Config 0070            ?i1_Init_System 0070  
                intlevel1 0000             i1resetKey@key 0070               i1_Init_GPIO 02B0  
              _OPTION_REG 0081                i1_Init_PWM 02AE    __size_of_Init_Interupt 0001  
       ??i1_Init_Interupt 0070            _checkUsbStatus 01BF           ??i1_Init_Config 0071  
