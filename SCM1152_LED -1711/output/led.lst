

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 02 15:30:29 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1711C
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	pa_nodes0,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	text0
    51  0000                     __ptext0:	
    52  000B                     _INTCON	set	11
    53  0006                     _PORTB	set	6
    54  0001                     _TMR0	set	1
    55  005A                     _T0IF	set	90
    56  0096                     _IOCB	set	150
    57  0095                     _WPUB	set	149
    58  008F                     _OSCCON	set	143
    59  0086                     _TRISB	set	134
    60  0081                     _OPTION_REG	set	129
    61                           
    62                           	psect	cinit
    63  000B                     start_initialization:	
    64                           ; #config settings
    65                           
    66  000B                     __initialization:	
    67                           
    68                           ; Clear objects allocated to COMMON
    69  000B  01F4               	clrf	__pbssCOMMON& (0+127)
    70  000C  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
    71  000D                     end_of_initialization:	
    72                           ;End of C runtime variable initialization code
    73                           
    74  000D                     __end_of__initialization:	
    75  000D  0183               	clrf	3
    76  000E  280F               	ljmp	_main	;jump to C main() function
    77                           
    78                           	psect	bssCOMMON
    79  0074                     __pbssCOMMON:	
    80  0074                     _timeout1MSFlag:	
    81  0074                     	ds	1
    82  0075                     _timeoutFlag:	
    83  0075                     	ds	1
    84                           
    85                           	psect	cstackCOMMON
    86  0070                     __pcstackCOMMON:	
    87  0070                     ?_Init_System:	
    88  0070                     ?_main:	
    89                           ; 1 bytes @ 0x0
    90                           
    91  0070                     ?_Timer0_Isr:	
    92                           ; 1 bytes @ 0x0
    93                           
    94  0070                     ??_Timer0_Isr:	
    95                           ; 1 bytes @ 0x0
    96                           
    97                           
    98                           ; 1 bytes @ 0x0
    99  0070                     	ds	2
   100  0072                     ??_Init_System:	
   101  0072                     ??_main:	
   102                           ; 1 bytes @ 0x2
   103                           
   104  0072                     main@count:	
   105                           ; 1 bytes @ 0x2
   106                           
   107                           
   108                           ; 2 bytes @ 0x2
   109  0072                     	ds	2
   110                           
   111                           	psect	maintext
   112  000F                     __pmaintext:	
   113 ;;
   114 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   115 ;;
   116 ;; *************** function _main *****************
   117 ;; Defined at:
   118 ;;		line 26 in file "C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c"
   119 ;; Parameters:    Size  Location     Type
   120 ;;		None
   121 ;; Auto vars:     Size  Location     Type
   122 ;;  count           2    2[COMMON] unsigned int 
   123 ;; Return value:  Size  Location     Type
   124 ;;                  1    wreg      void 
   125 ;; Registers used:
   126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   127 ;; Tracked objects:
   128 ;;		On entry : B00/0
   129 ;;		On exit  : 0/0
   130 ;;		Unchanged: 0/0
   131 ;; Data sizes:     COMMON   BANK0   BANK1
   132 ;;      Params:         0       0       0
   133 ;;      Locals:         2       0       0
   134 ;;      Temps:          0       0       0
   135 ;;      Totals:         2       0       0
   136 ;;Total ram usage:        2 bytes
   137 ;; Hardware stack levels required when called:    2
   138 ;; This function calls:
   139 ;;		_Init_System
   140 ;; This function is called by:
   141 ;;		Startup code after reset
   142 ;; This function uses a non-reentrant model
   143 ;;
   144                           
   145                           
   146                           ;psect for function _main
   147  000F                     _main:	
   148                           
   149                           ;led.c: 28: Init_System();
   150                           
   151                           ;incstack = 0
   152                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   153  000F  205F               	fcall	_Init_System
   154                           
   155                           ;led.c: 29: unsigned int count = 0;
   156  0010  01F2               	clrf	main@count
   157  0011  01F3               	clrf	main@count+1
   158  0012                     l1523:	
   159                           
   160                           ;led.c: 31: {
   161                           ;led.c: 33: if(timeoutFlag)
   162  0012  0875               	movf	_timeoutFlag,w
   163  0013  1903               	btfsc	3,2
   164  0014  2812               	goto	l1523
   165                           
   166                           ;led.c: 34: {
   167                           ;led.c: 35: timeoutFlag = 0;
   168  0015  01F5               	clrf	_timeoutFlag
   169  0016  0064               	clrwdt	;# 
   170                           
   171                           ;led.c: 39: if(count == 500)
   172  0017  30F4               	movlw	244
   173  0018  0672               	xorwf	main@count,w
   174  0019  1D03               	skipz
   175  001A  283A               	goto	l1533
   176  001B  0373               	decf	main@count+1,w
   177  001C  1D03               	btfss	3,2
   178  001D  283A               	goto	l1533
   179                           
   180                           ;led.c: 40: {
   181                           ;led.c: 41: count = 0;
   182  001E  01F2               	clrf	main@count
   183  001F  01F3               	clrf	main@count+1
   184  0020  283A               	goto	l1533
   185  0021                     l552:	
   186                           ;led.c: 46: {
   187                           ;led.c: 47: case 0:
   188                           
   189                           
   190                           ;led.c: 48: PORTB&=~(1<<4);
   191  0021  1283               	bcf	3,5	;RP0=0, select bank0
   192  0022  1303               	bcf	3,6	;RP1=0, select bank0
   193  0023  1206               	bcf	6,4	;volatile
   194                           
   195                           ;led.c: 49: PORTB|=(1<<2);
   196  0024  1506               	bsf	6,2	;volatile
   197                           
   198                           ;led.c: 50: break;
   199  0025  2855               	goto	l1535
   200  0026                     l554:	
   201                           ;led.c: 51: case 100:
   202                           
   203                           
   204                           ;led.c: 52: PORTB&=~(1<<3);
   205  0026  1283               	bcf	3,5	;RP0=0, select bank0
   206  0027  1303               	bcf	3,6	;RP1=0, select bank0
   207  0028  1186               	bcf	6,3	;volatile
   208                           
   209                           ;led.c: 53: PORTB|=(1<<1);
   210  0029  1486               	bsf	6,1	;volatile
   211                           
   212                           ;led.c: 54: break;
   213  002A  2855               	goto	l1535
   214  002B                     l555:	
   215                           ;led.c: 55: case 200:
   216                           
   217                           
   218                           ;led.c: 56: PORTB&=~(1<<2);
   219  002B  1283               	bcf	3,5	;RP0=0, select bank0
   220  002C  1303               	bcf	3,6	;RP1=0, select bank0
   221  002D  1106               	bcf	6,2	;volatile
   222                           
   223                           ;led.c: 57: PORTB|=(1<<5);
   224  002E  1686               	bsf	6,5	;volatile
   225                           
   226                           ;led.c: 58: break;
   227  002F  2855               	goto	l1535
   228  0030                     l556:	
   229                           ;led.c: 59: case 300:
   230                           
   231                           
   232                           ;led.c: 60: PORTB&=~(1<<1);
   233  0030  1283               	bcf	3,5	;RP0=0, select bank0
   234  0031  1303               	bcf	3,6	;RP1=0, select bank0
   235  0032  1086               	bcf	6,1	;volatile
   236                           
   237                           ;led.c: 61: PORTB|=(1<<4);
   238  0033  1606               	bsf	6,4	;volatile
   239                           
   240                           ;led.c: 62: break;
   241  0034  2855               	goto	l1535
   242  0035                     l557:	
   243                           ;led.c: 63: case 400:
   244                           
   245                           
   246                           ;led.c: 64: PORTB&=~(1<<5);
   247  0035  1283               	bcf	3,5	;RP0=0, select bank0
   248  0036  1303               	bcf	3,6	;RP1=0, select bank0
   249  0037  1286               	bcf	6,5	;volatile
   250                           
   251                           ;led.c: 65: PORTB|=(1<<3);
   252  0038  1586               	bsf	6,3	;volatile
   253                           
   254                           ;led.c: 66: break;
   255  0039  2855               	goto	l1535
   256  003A                     l1533:	
   257                           
   258                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
   259                           ; Switch size 1, requested type "space"
   260                           ; Number of cases is 2, Range of values is 0 to 1
   261                           ; switch strategies available:
   262                           ; Name         Instructions Cycles
   263                           ; simple_byte            7     4 (average)
   264                           ; direct_byte            8     6 (fixed)
   265                           ; jumptable            260     6 (fixed)
   266                           ;	Chosen strategy is simple_byte
   267  003A  0873               	movf	main@count+1,w
   268  003B  3A00               	xorlw	0	; case 0
   269  003C  1903               	skipnz
   270  003D  2842               	goto	l1619
   271  003E  3A01               	xorlw	1	; case 1
   272  003F  1903               	skipnz
   273  0040  284D               	goto	l1621
   274  0041  2855               	goto	l1535
   275  0042                     l1619:	
   276                           
   277                           ; Switch size 1, requested type "space"
   278                           ; Number of cases is 3, Range of values is 0 to 200
   279                           ; switch strategies available:
   280                           ; Name         Instructions Cycles
   281                           ; simple_byte           10     6 (average)
   282                           ; direct_byte          207     6 (fixed)
   283                           ; jumptable            260     6 (fixed)
   284                           ;	Chosen strategy is simple_byte
   285  0042  0872               	movf	main@count,w
   286  0043  3A00               	xorlw	0	; case 0
   287  0044  1903               	skipnz
   288  0045  2821               	goto	l552
   289  0046  3A64               	xorlw	100	; case 100
   290  0047  1903               	skipnz
   291  0048  2826               	goto	l554
   292  0049  3AAC               	xorlw	172	; case 200
   293  004A  1903               	skipnz
   294  004B  282B               	goto	l555
   295  004C  2855               	goto	l1535
   296  004D                     l1621:	
   297                           
   298                           ; Switch size 1, requested type "space"
   299                           ; Number of cases is 2, Range of values is 44 to 144
   300                           ; switch strategies available:
   301                           ; Name         Instructions Cycles
   302                           ; simple_byte            7     4 (average)
   303                           ; direct_byte          110     9 (fixed)
   304                           ; jumptable            263     9 (fixed)
   305                           ;	Chosen strategy is simple_byte
   306  004D  0872               	movf	main@count,w
   307  004E  3A2C               	xorlw	44	; case 44
   308  004F  1903               	skipnz
   309  0050  2830               	goto	l556
   310  0051  3ABC               	xorlw	188	; case 144
   311  0052  1903               	skipnz
   312  0053  2835               	goto	l557
   313  0054  2855               	goto	l1535
   314  0055                     l1535:	
   315                           
   316                           ;led.c: 68: if(timeout1MSFlag == 10)
   317  0055  300A               	movlw	10
   318  0056  0674               	xorwf	_timeout1MSFlag,w
   319  0057  1D03               	btfss	3,2
   320  0058  285D               	goto	l1541
   321                           
   322                           ;led.c: 69: {
   323                           ;led.c: 70: timeout1MSFlag =0;
   324  0059  01F4               	clrf	_timeout1MSFlag
   325                           
   326                           ;led.c: 71: count++;
   327  005A  0AF2               	incf	main@count,f
   328  005B  1903               	skipnz
   329  005C  0AF3               	incf	main@count+1,f
   330  005D                     l1541:	
   331                           
   332                           ;led.c: 72: }
   333                           ;led.c: 74: timeout1MSFlag++;
   334  005D  0AF4               	incf	_timeout1MSFlag,f
   335  005E  2812               	goto	l1523
   336  005F                     __end_of_main:	
   337                           
   338                           	psect	text1
   339  005F                     __ptext1:	
   340 ;; *************** function _Init_System *****************
   341 ;; Defined at:
   342 ;;		line 9 in file "C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c"
   343 ;; Parameters:    Size  Location     Type
   344 ;;		None
   345 ;; Auto vars:     Size  Location     Type
   346 ;;		None
   347 ;; Return value:  Size  Location     Type
   348 ;;                  1    wreg      void 
   349 ;; Registers used:
   350 ;;		wreg, status,2
   351 ;; Tracked objects:
   352 ;;		On entry : B00/0
   353 ;;		On exit  : 300/100
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1
   356 ;;      Params:         0       0       0
   357 ;;      Locals:         0       0       0
   358 ;;      Temps:          0       0       0
   359 ;;      Totals:         0       0       0
   360 ;;Total ram usage:        0 bytes
   361 ;; Hardware stack levels used:    1
   362 ;; Hardware stack levels required when called:    1
   363 ;; This function calls:
   364 ;;		Nothing
   365 ;; This function is called by:
   366 ;;		_main
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           
   371                           ;psect for function _Init_System
   372  005F                     _Init_System:	
   373                           
   374                           ;incstack = 0
   375                           ; Regs used in _Init_System: [wreg+status,2]
   376  005F  0000               	nop	;# 
   377  0060  0064               	clrwdt	;# 
   378                           
   379                           ;led.c: 13: INTCON = 0;
   380  0061  018B               	clrf	11	;volatile
   381                           
   382                           ;led.c: 14: OSCCON = 0X71;
   383  0062  3071               	movlw	113
   384  0063  1683               	bsf	3,5	;RP0=1, select bank1
   385  0064  1303               	bcf	3,6	;RP1=0, select bank1
   386  0065  008F               	movwf	15	;volatile
   387                           
   388                           ;led.c: 15: OPTION_REG = 0x00;
   389  0066  0181               	clrf	1	;volatile
   390                           
   391                           ;led.c: 16: TMR0 = 0;
   392  0067  1283               	bcf	3,5	;RP0=0, select bank0
   393  0068  0181               	clrf	1	;volatile
   394                           
   395                           ;led.c: 17: INTCON = 0xE0;
   396  0069  30E0               	movlw	224
   397  006A  008B               	movwf	11	;volatile
   398                           
   399                           ;led.c: 20: TRISB = 0;
   400  006B  1683               	bsf	3,5	;RP0=1, select bank1
   401  006C  0186               	clrf	6	;volatile
   402                           
   403                           ;led.c: 21: WPUB = 0xFF;
   404  006D  30FF               	movlw	255
   405  006E  0095               	movwf	21	;volatile
   406                           
   407                           ;led.c: 22: PORTB = 0xFF;
   408  006F  1283               	bcf	3,5	;RP0=0, select bank0
   409  0070  0086               	movwf	6	;volatile
   410                           
   411                           ;led.c: 23: IOCB = 0x00;
   412  0071  1683               	bsf	3,5	;RP0=1, select bank1
   413  0072  0196               	clrf	22	;volatile
   414  0073  0008               	return
   415  0074                     __end_of_Init_System:	
   416                           
   417                           	psect	text2
   418  0074                     __ptext2:	
   419 ;; *************** function _Timer0_Isr *****************
   420 ;; Defined at:
   421 ;;		line 79 in file "C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1
   435 ;;      Params:         0       0       0
   436 ;;      Locals:         0       0       0
   437 ;;      Temps:          2       0       0
   438 ;;      Totals:         2       0       0
   439 ;;Total ram usage:        2 bytes
   440 ;; Hardware stack levels used:    1
   441 ;; This function calls:
   442 ;;		Nothing
   443 ;; This function is called by:
   444 ;;		Interrupt level 1
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _Timer0_Isr
   450  0074                     _Timer0_Isr:	
   451                           
   452                           ;led.c: 80: if (T0IF) {
   453  0074  1D0B               	btfss	11,2	;volatile
   454  0075  287D               	goto	i1l567
   455                           
   456                           ;led.c: 82: TMR0 += 155;
   457  0076  309B               	movlw	155
   458  0077  1283               	bcf	3,5	;RP0=0, select bank0
   459  0078  1303               	bcf	3,6	;RP1=0, select bank0
   460  0079  0781               	addwf	1,f	;volatile
   461                           
   462                           ;led.c: 85: T0IF = 0;
   463  007A  110B               	bcf	11,2	;volatile
   464                           
   465                           ;led.c: 86: timeoutFlag = 1;
   466  007B  01F5               	clrf	_timeoutFlag
   467  007C  0AF5               	incf	_timeoutFlag,f
   468  007D                     i1l567:	
   469  007D  0871               	movf	??_Timer0_Isr+1,w
   470  007E  008A               	movwf	10
   471  007F  0E70               	swapf	??_Timer0_Isr^(0+-128),w
   472  0080  0083               	movwf	3
   473  0081  0EFE               	swapf	126,f
   474  0082  0E7E               	swapf	126,w
   475  0083  0009               	retfie
   476  0084                     __end_of_Timer0_Isr:	
   477  007E                     btemp	set	126	;btemp
   478  007E                     wtemp0	set	126
   479                           
   480                           	psect	intentry
   481  0004                     __pintentry:	
   482                           ;incstack = 0
   483                           ; Regs used in _Timer0_Isr: [wreg+status,2+status,0]
   484                           
   485  0004                     interrupt_function:	
   486  007E                     saved_w	set	btemp
   487  0004  00FE               	movwf	btemp
   488  0005  0E03               	swapf	3,w
   489  0006  00F0               	movwf	??_Timer0_Isr
   490  0007  080A               	movf	10,w
   491  0008  00F1               	movwf	??_Timer0_Isr+1
   492  0009  2874               	ljmp	_Timer0_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer0_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      30
                                              2 COMMON     2     2      0
                        _Init_System
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer0_Isr                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_System

 _Timer0_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
DATA                 0      0       6       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 02 15:30:29 2020

                    l552 0021                      l554 0026                      l555 002B  
                    l556 0030                      l557 0035                     l1523 0012  
                   l1541 005D                     l1621 004D                     l1533 003A  
                   l1535 0055                     l1619 0042                     _T0IF 005A  
                   _IOCB 0096                     _TMR0 0001                     _WPUB 0095  
                   _main 000F                     btemp 007E                     start 000A  
          ??_Init_System 0072                    ?_main 0070                    i1l567 007D  
                  _PORTB 0006                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000B  
           __end_of_main 005F                   ??_main 0072      __end_of_Init_System 0074  
                 _INTCON 000B                   _OSCCON 008F               _Timer0_Isr 0074  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0070  
            _Init_System 005F              ?_Timer0_Isr 0070               __pmaintext 000F  
             __pintentry 0004                  __ptext0 0000                  __ptext1 005F  
                __ptext2 0074      __size_of_Timer0_Isr 0010     end_of_initialization 000D  
           ?_Init_System 0070      start_initialization 000B             ??_Timer0_Isr 0070  
            __pbssCOMMON 0074                ___latbits 0000       __end_of_Timer0_Isr 0084  
      interrupt_function 0004     __size_of_Init_System 0015                main@count 0072  
         _timeout1MSFlag 0074            __size_of_main 0050                 intlevel1 0000  
             _OPTION_REG 0081              _timeoutFlag 0075  
