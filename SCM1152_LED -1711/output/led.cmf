%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$led.obj
cinit CODE 0 B B 4 2
text1 CODE 0 5F 5F 15 2
text2 CODE 0 74 74 10 2
maintext CODE 0 F F 50 2
cstackCOMMON COMMON 1 70 70 4 1
intentry CODE 0 4 4 6 2
bssCOMMON COMMON 1 74 74 2 1
$startup.obj
reset_vec CODE 0 0 0 1 2
end_init CODE 0 A A 1 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
BANK0 20-6F 1
BANK1 A0-EF 1
CONST 1-3 2
CONST 84-7FF 2
ENTRY 1-3 2
ENTRY 84-7FF 2
IDLOC 2000-2003 2
STACK 20-6F 1
CODE 1-3 2
CODE 84-7FF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-16F 1
SFR3 180-1EF 1
COMMON 76-7D 1
CONFIG 2007-2008 2
STRCODE 1-3 2
STRCODE 84-7FF 2
STRING 1-3 2
STRING 84-7FF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$led.obj
B cinit CODE >58:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\led.as
B cinit CODE >61:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\led.as
B cinit CODE >75:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\led.as
C cinit CODE >76:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\led.as
D cinit CODE >82:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\led.as
D cinit CODE >84:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\led.as
E cinit CODE >85:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\led.as
4 intentry CODE >79:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
74 text2 CODE >79:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
74 text2 CODE >80:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
76 text2 CODE >82:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
7A text2 CODE >85:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
7B text2 CODE >86:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
7D text2 CODE >90:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
5F text1 CODE >9:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
5F text1 CODE >11:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
60 text1 CODE >12:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
61 text1 CODE >13:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
62 text1 CODE >14:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
66 text1 CODE >15:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
67 text1 CODE >16:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
69 text1 CODE >17:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
6B text1 CODE >20:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
6D text1 CODE >21:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
6F text1 CODE >22:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
71 text1 CODE >23:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
73 text1 CODE >24:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
F maintext CODE >26:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
F maintext CODE >28:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
10 maintext CODE >29:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
12 maintext CODE >33:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
15 maintext CODE >35:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
16 maintext CODE >37:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
17 maintext CODE >39:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
1E maintext CODE >41:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
21 maintext CODE >47:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
21 maintext CODE >48:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
24 maintext CODE >49:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
25 maintext CODE >50:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
26 maintext CODE >51:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
26 maintext CODE >52:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
29 maintext CODE >53:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
2A maintext CODE >54:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
2B maintext CODE >55:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
2B maintext CODE >56:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
2E maintext CODE >57:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
2F maintext CODE >58:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
30 maintext CODE >59:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
30 maintext CODE >60:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
33 maintext CODE >61:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
34 maintext CODE >62:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
35 maintext CODE >63:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
35 maintext CODE >64:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
38 maintext CODE >65:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
39 maintext CODE >66:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
3A maintext CODE >45:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
55 maintext CODE >68:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
59 maintext CODE >70:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
5A maintext CODE >71:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
5D maintext CODE >74:C:\SCMCU WorkSpace\SCM1152_LED -1711\led.c
$startup.obj
A end_init CODE >78:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
A init CODE >75:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
0 functab ENTRY >41:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
0 functab ENTRY >42:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
0 functab ENTRY >43:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
0 functab ENTRY >44:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
0 functab ENTRY >45:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
0 functab ENTRY >46:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
0 reset_vec CODE >65:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
0 reset_vec CODE >70:C:\SCMCU WorkSpace\SCM1152_LED -1711\output\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 0 0 ABS 0 - led.obj
__Hspace_0 84 0 ABS 0 - -
__Hspace_1 76 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__Hstrings 0 0 ABS 0 strings -
_IOCB 96 0 ABS 0 - led.obj
_T0IF 5A 0 ABS 0 - led.obj
_TMR0 1 0 ABS 0 - led.obj
_WPUB 95 0 ABS 0 - led.obj
___sp 0 0 STACK 2 stack startup.obj
_main 1E 0 CODE 0 maintext led.obj
btemp 7E 0 ABS 0 - led.obj
start 14 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - led.obj
__HbssCOMMON 0 0 ABS 0 bssCOMMON -
__Hpowerup 0 0 CODE 0 powerup -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
__size_of_Init_System 0 0 ABS 0 - led.obj
__LbssCOMMON 0 0 ABS 0 bssCOMMON -
wtemp0 7E 0 ABS 0 - led.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__Hpa_nodes0 0 0 ABS 0 pa_nodes0 -
__Lmaintext 0 0 ABS 0 maintext -
_INTCON B 0 ABS 0 - led.obj
_OPTION_REG 81 0 ABS 0 - led.obj
__Lpa_nodes0 0 0 ABS 0 pa_nodes0 -
start_initialization 16 0 CODE 0 cinit led.obj
_OSCCON 8F 0 ABS 0 - led.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 BANK2 1 bank2 -
__Hbank3 0 0 BANK3 1 bank3 -
__Hcinit 1E 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 0 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 BANK2 1 bank2 -
__Lbank3 0 0 BANK3 1 bank3 -
__Lcinit 16 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
_Init_System BE 0 CODE 0 text1 led.obj
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 14 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 14 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__S0 84 0 ABS 0 - -
__S1 76 0 ABS 0 - -
__S2 0 0 ABS 0 - -
saved_w 7E 0 ABS 0 - led.obj
_Timer0_Isr E8 0 CODE 0 text2 led.obj
_timeout1MSFlag 74 0 COMMON 1 bssCOMMON led.obj
__Lintentry 8 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
__pmaintext 1E 0 CODE 0 maintext led.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 0 config -
main@count 72 0 COMMON 1 cstackCOMMON led.obj
__end_of_Timer0_Isr 108 0 CODE 0 text2 led.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__pbssCOMMON 74 0 COMMON 1 bssCOMMON led.obj
__Lend_init 14 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization 1A 0 CODE 0 cinit led.obj
__Hintentry 14 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 2 0 CODE 0 reset_vec -
__ptext0 0 0 CODE 0 text0 led.obj
__ptext1 BE 0 CODE 0 text1 led.obj
__ptext2 E8 0 CODE 0 text2 led.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of__initialization 1A 0 CODE 0 cinit led.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__end_of_Init_System E8 0 CODE 0 text1 led.obj
__pcstackCOMMON 70 0 COMMON 1 cstackCOMMON led.obj
_timeoutFlag 75 0 COMMON 1 bssCOMMON led.obj
__Hend_init 16 0 CODE 0 end_init -
__end_of_main BE 0 CODE 0 maintext led.obj
_PORTB 6 0 ABS 0 - led.obj
_TRISB 86 0 ABS 0 - led.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
interrupt_function 8 0 CODE 0 intentry led.obj
__pintentry 8 0 CODE 0 intentry led.obj
__initialization 16 0 CODE 0 cinit led.obj
__size_of_Timer0_Isr 0 0 ABS 0 - led.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cstackCOMMON 1 70 70 6 1
intentry 0 4 8 80 2
reset_vec 0 0 0 1 2
