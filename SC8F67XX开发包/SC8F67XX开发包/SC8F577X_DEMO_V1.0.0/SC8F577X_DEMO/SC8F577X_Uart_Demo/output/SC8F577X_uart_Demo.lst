

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 22 17:57:25 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F5773
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	pa_nodes0,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	text0
    54  0000                     __ptext0:	
    55  000B                     _INTCON	set	11
    56  0008                     _WPUB	set	8
    57  0007                     _WPUA	set	7
    58  0006                     _PORTB	set	6
    59  0005                     _PORTA	set	5
    60  006D                     _RCIE	set	109
    61  0065                     _RCIF	set	101
    62  0058                     _RBIF	set	88
    63  005E                     _PEIE	set	94
    64  005F                     _GIE	set	95
    65  0036                     _RB6	set	54
    66  0088                     _OSCCON	set	136
    67  0086                     _TRISB	set	134
    68  0085                     _TRISA	set	133
    69  0081                     _OPTION_REG	set	129
    70  011B                     _RCREG	set	283
    71  011A                     _TXREG	set	282
    72  0119                     _SPBRG	set	281
    73  0118                     _RCSTA	set	280
    74  0117                     _TXSTA	set	279
    75  08B9                     _TRMT	set	2233
    76                           
    77                           	psect	cinit
    78  000F                     start_initialization:	
    79                           ; #config settings
    80                           
    81  000F                     __initialization:	
    82                           
    83                           ; Clear objects allocated to BITCOMMON
    84  000F  01FA               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
    85                           
    86                           ; Clear objects allocated to COMMON
    87  0010  01F0               	clrf	__pbssCOMMON& (0+127)
    88  0011  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    89  0012  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    90  0013  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    91  0014  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    92  0015  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    93  0016  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    94                           
    95                           ; Clear objects allocated to BANK0
    96  0017  1283               	bcf	3,5	;RP0=0, select bank0
    97  0018  1303               	bcf	3,6	;RP1=0, select bank0
    98  0019  01A0               	clrf	__pbssBANK0& (0+127)
    99  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   100  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   101  001C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   102  001D  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   103  001E  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   104  001F  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   105  0020  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   106  0021  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   107  0022  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   108  0023                     end_of_initialization:	
   109                           ;End of C runtime variable initialization code
   110                           
   111  0023                     __end_of__initialization:	
   112  0023  0183               	clrf	3
   113  0024  118A  284E         	ljmp	_main	;jump to C main() function
   114                           
   115                           	psect	bitbssCOMMON
   116  03D0                     __pbitbssCOMMON:	
   117  03D0                     _RXOK_f:	
   118  03D0                     	ds	1
   119                           
   120                           	psect	bssCOMMON
   121  0070                     __pbssCOMMON:	
   122  0070                     _result2:	
   123  0070                     	ds	2
   124  0072                     _result1:	
   125  0072                     	ds	2
   126  0074                     _result:	
   127  0074                     	ds	2
   128  0076                     PB_Isr@RxNum:	
   129  0076                     	ds	1
   130                           
   131                           	psect	bssBANK0
   132  0020                     __pbssBANK0:	
   133  0020                     _RxTable:	
   134  0020                     	ds	10
   135                           
   136                           	psect	cstackCOMMON
   137  0077                     __pcstackCOMMON:	
   138  0077                     ?_Init_System:	
   139  0077                     ?_main:	
   140                           ; 1 bytes @ 0x0
   141                           
   142  0077                     ?_PB_Isr:	
   143                           ; 1 bytes @ 0x0
   144                           
   145  0077                     ??_PB_Isr:	
   146                           ; 1 bytes @ 0x0
   147                           
   148                           
   149                           ; 1 bytes @ 0x0
   150  0077                     	ds	3
   151  007A                     ??_Init_System:	
   152  007A                     ??_main:	
   153                           ; 1 bytes @ 0x3
   154                           
   155                           
   156                           	psect	cstackBANK0
   157  002A                     __pcstackBANK0:	
   158                           ; 1 bytes @ 0x3
   159                           
   160  002A                     main@i:	
   161                           
   162                           ; 1 bytes @ 0x0
   163  002A                     	ds	1
   164                           
   165                           	psect	maintext
   166  004E                     __pmaintext:	
   167 ;;
   168 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   169 ;;
   170 ;; *************** function _main *****************
   171 ;; Defined at:
   172 ;;		line 44 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_Uart_Demo\main.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;  i               1    0[BANK0 ] unsigned char 
   177 ;; Return value:  Size  Location     Type
   178 ;;                  1    wreg      void 
   179 ;; Registers used:
   180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   181 ;; Tracked objects:
   182 ;;		On entry : B00/0
   183 ;;		On exit  : B00/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   186 ;;      Params:         0       0       0       0
   187 ;;      Locals:         0       1       0       0
   188 ;;      Temps:          0       0       0       0
   189 ;;      Totals:         0       1       0       0
   190 ;;Total ram usage:        1 bytes
   191 ;; Hardware stack levels required when called:    2
   192 ;; This function calls:
   193 ;;		_Init_System
   194 ;; This function is called by:
   195 ;;		Startup code after reset
   196 ;; This function uses a non-reentrant model
   197 ;;
   198                           
   199                           
   200                           ;psect for function _main
   201  004E                     _main:	
   202                           
   203                           ;main.c: 47: Init_System();
   204                           
   205                           ;incstack = 0
   206                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   207  004E  118A  206F  118A   	fcall	_Init_System
   208                           
   209                           ;main.c: 49: TXREG =0x55;
   210  0051  3055               	movlw	85
   211  0052  1703               	bsf	3,6	;RP1=1, select bank2
   212  0053  009A               	movwf	26	;volatile
   213  0054                     l890:	
   214                           ;main.c: 51: while(TRMT==0);
   215                           
   216  0054  1C97               	btfss	23,1	;volatile
   217  0055  2854               	goto	l890
   218                           
   219                           ;main.c: 52: TXREG =0xaa;
   220  0056  30AA               	movlw	170
   221  0057  009A               	movwf	26	;volatile
   222  0058                     l893:	
   223                           ;main.c: 54: while(TRMT==0);
   224                           
   225  0058  1C97               	btfss	23,1	;volatile
   226  0059  2858               	goto	l893
   227  005A                     l896:	
   228                           ;main.c: 56: while(1)
   229                           
   230                           
   231                           ;main.c: 57: {
   232                           ;main.c: 60: if(RXOK_f==1)
   233  005A  1C7A               	btfss	_RXOK_f/(0+8),_RXOK_f& (0+7)
   234  005B  285A               	goto	l896
   235                           
   236                           ;main.c: 61: {
   237                           ;main.c: 62: for(i=0;i<10;i++)
   238  005C  1303               	bcf	3,6	;RP1=0, select bank0
   239  005D  01AA               	clrf	main@i
   240  005E                     l1486:	
   241                           
   242                           ;main.c: 63: {
   243                           ;main.c: 65: TXREG =RxTable[i];
   244  005E  082A               	movf	main@i,w
   245  005F  3E20               	addlw	(low (_RxTable| 0))& (0+255)
   246  0060  0084               	movwf	4
   247  0061  1383               	bcf	3,7	;select IRP bank0
   248  0062  0800               	movf	0,w
   249  0063  1703               	bsf	3,6	;RP1=1, select bank2
   250  0064  009A               	movwf	26	;volatile
   251  0065                     l900:	
   252                           ;main.c: 67: while(TRMT==0);
   253                           
   254  0065  1C97               	btfss	23,1	;volatile
   255  0066  2865               	goto	l900
   256  0067  300A               	movlw	10
   257  0068  1303               	bcf	3,6	;RP1=0, select bank0
   258  0069  0AAA               	incf	main@i,f
   259  006A  022A               	subwf	main@i,w
   260  006B  1C03               	skipc
   261  006C  285E               	goto	l1486
   262                           
   263                           ;main.c: 68: }
   264                           ;main.c: 70: RXOK_f = 0;
   265  006D  107A               	bcf	_RXOK_f/(0+8),_RXOK_f& (0+7)
   266  006E  285A               	goto	l896
   267  006F                     __end_of_main:	
   268                           
   269                           	psect	text1
   270  006F                     __ptext1:	
   271 ;; *************** function _Init_System *****************
   272 ;; Defined at:
   273 ;;		line 84 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_Uart_Demo\main.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, status,2
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 300/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   287 ;;      Params:         0       0       0       0
   288 ;;      Locals:         0       0       0       0
   289 ;;      Temps:          0       0       0       0
   290 ;;      Totals:         0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _Init_System
   303  006F                     _Init_System:	
   304                           
   305                           ;incstack = 0
   306                           ; Regs used in _Init_System: [wreg+status,2]
   307  006F  0000               	nop	;# 
   308  0070  0064               	clrwdt	;# 
   309                           
   310                           ;main.c: 88: INTCON = 0;
   311  0071  018B               	clrf	11	;volatile
   312                           
   313                           ;main.c: 89: OSCCON = 0X70;
   314  0072  3070               	movlw	112
   315  0073  1683               	bsf	3,5	;RP0=1, select bank1
   316  0074  1303               	bcf	3,6	;RP1=0, select bank1
   317  0075  0088               	movwf	8	;volatile
   318                           
   319                           ;main.c: 90: OPTION_REG = 0;
   320  0076  0181               	clrf	1	;volatile
   321                           
   322                           ;main.c: 92: WPUA = 0B00000000;
   323  0077  1283               	bcf	3,5	;RP0=0, select bank0
   324  0078  0187               	clrf	7	;volatile
   325                           
   326                           ;main.c: 93: WPUB = 0B00001000;
   327  0079  3008               	movlw	8
   328  007A  0088               	movwf	8	;volatile
   329                           
   330                           ;main.c: 96: TRISA = 0B00000000;
   331  007B  1683               	bsf	3,5	;RP0=1, select bank1
   332  007C  0185               	clrf	5	;volatile
   333                           
   334                           ;main.c: 97: TRISB = 0B00011000;
   335  007D  3018               	movlw	24
   336  007E  0086               	movwf	6	;volatile
   337                           
   338                           ;main.c: 99: PORTA = 0B00000000;
   339  007F  1283               	bcf	3,5	;RP0=0, select bank0
   340  0080  0185               	clrf	5	;volatile
   341                           
   342                           ;main.c: 100: PORTB = 0B00000000;
   343  0081  0186               	clrf	6	;volatile
   344                           
   345                           ;main.c: 102: TXSTA = 0b10100000;
   346  0082  30A0               	movlw	160
   347  0083  1703               	bsf	3,6	;RP1=1, select bank2
   348  0084  0097               	movwf	23	;volatile
   349                           
   350                           ;main.c: 103: RCSTA = 0b10010000;
   351  0085  3090               	movlw	144
   352  0086  0098               	movwf	24	;volatile
   353                           
   354                           ;main.c: 104: SPBRG = 103;
   355  0087  3067               	movlw	103
   356  0088  0099               	movwf	25	;volatile
   357                           
   358                           ;main.c: 106: PEIE =1;
   359  0089  170B               	bsf	11,6	;volatile
   360                           
   361                           ;main.c: 107: RCIE =1;
   362  008A  1303               	bcf	3,6	;RP1=0, select bank0
   363  008B  168D               	bsf	13,5	;volatile
   364                           
   365                           ;main.c: 108: GIE =1;
   366  008C  178B               	bsf	11,7	;volatile
   367  008D  0008               	return
   368  008E                     __end_of_Init_System:	
   369                           
   370                           	psect	text2
   371  0026                     __ptext2:	
   372 ;; *************** function _PB_Isr *****************
   373 ;; Defined at:
   374 ;;		line 119 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_Uart_Demo\main.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 100/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   388 ;;      Params:         0       0       0       0
   389 ;;      Locals:         0       0       0       0
   390 ;;      Temps:          3       0       0       0
   391 ;;      Totals:         3       0       0       0
   392 ;;Total ram usage:        3 bytes
   393 ;; Hardware stack levels used:    1
   394 ;; This function calls:
   395 ;;		Nothing
   396 ;; This function is called by:
   397 ;;		Interrupt level 1
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           
   402                           ;psect for function _PB_Isr
   403  0026                     _PB_Isr:	
   404                           
   405                           ;main.c: 121: static unsigned char RxNum=0,TEMP;
   406                           ;main.c: 122: if(RBIF)
   407  0026  1C0B               	btfss	11,0	;volatile
   408  0027  282D               	goto	i1l1426
   409                           
   410                           ;main.c: 123: {
   411                           ;main.c: 124: RBIF = 0;
   412  0028  100B               	bcf	11,0	;volatile
   413                           
   414                           ;main.c: 125: RB6 = ~RB6;
   415  0029  3040               	movlw	64
   416  002A  1283               	bcf	3,5	;RP0=0, select bank0
   417  002B  1303               	bcf	3,6	;RP1=0, select bank0
   418  002C  0686               	xorwf	6,f
   419  002D                     i1l1426:	
   420                           
   421                           ;main.c: 127: }
   422                           ;main.c: 129: if(RCIF==1)
   423  002D  1283               	bcf	3,5	;RP0=0, select bank0
   424  002E  1303               	bcf	3,6	;RP1=0, select bank0
   425  002F  1E8C               	btfss	12,5	;volatile
   426  0030  2845               	goto	i1l922
   427                           
   428                           ;main.c: 130: {
   429                           ;main.c: 131: RCIF = 0;
   430  0031  128C               	bcf	12,5	;volatile
   431                           
   432                           ;main.c: 133: if(RXOK_f==0)
   433  0032  187A               	btfsc	_RXOK_f/(0+8),_RXOK_f& (0+7)
   434  0033  2843               	goto	i1l1440
   435                           
   436                           ;main.c: 134: {
   437                           ;main.c: 135: RxTable[RxNum] = RCREG;
   438  0034  0876               	movf	PB_Isr@RxNum,w
   439  0035  3E20               	addlw	(low (_RxTable| 0))& (0+255)
   440  0036  0084               	movwf	4
   441  0037  1703               	bsf	3,6	;RP1=1, select bank2
   442  0038  081B               	movf	27,w	;volatile
   443  0039  1383               	bcf	3,7	;select IRP bank0
   444  003A  0080               	movwf	0
   445  003B  300A               	movlw	10
   446                           
   447                           ;main.c: 136: RxNum++;
   448  003C  0AF6               	incf	PB_Isr@RxNum,f
   449                           
   450                           ;main.c: 137: if(RxNum > 9)
   451  003D  0276               	subwf	PB_Isr@RxNum,w
   452  003E  1C03               	skipc
   453  003F  2845               	goto	i1l922
   454                           
   455                           ;main.c: 138: {
   456                           ;main.c: 139: RxNum =0;
   457  0040  01F6               	clrf	PB_Isr@RxNum
   458                           
   459                           ;main.c: 140: RXOK_f =1;
   460  0041  147A               	bsf	_RXOK_f/(0+8),_RXOK_f& (0+7)
   461  0042  2845               	goto	i1l922
   462  0043                     i1l1440:	
   463                           
   464                           ;main.c: 143: else
   465                           ;main.c: 144: TEMP = RCREG;
   466  0043  1703               	bsf	3,6	;RP1=1, select bank2
   467  0044  081B               	movf	27,w	;volatile
   468  0045                     i1l922:	
   469  0045  0879               	movf	??_PB_Isr+2,w
   470  0046  008A               	movwf	10
   471  0047  0878               	movf	??_PB_Isr+1,w
   472  0048  0084               	movwf	4
   473  0049  0E77               	swapf	??_PB_Isr^(0+-128),w
   474  004A  0083               	movwf	3
   475  004B  0EFE               	swapf	126,f
   476  004C  0E7E               	swapf	126,w
   477  004D  0009               	retfie
   478  004E                     __end_of_PB_Isr:	
   479  007E                     btemp	set	126	;btemp
   480  007E                     wtemp0	set	126
   481                           
   482                           	psect	intentry
   483  0004                     __pintentry:	
   484                           ;incstack = 0
   485                           ; Regs used in _PB_Isr: [wreg-fsr0h+status,2+status,0]
   486                           
   487  0004                     interrupt_function:	
   488  007E                     saved_w	set	btemp
   489  0004  00FE               	movwf	btemp
   490  0005  0E03               	swapf	3,w
   491  0006  00F7               	movwf	??_PB_Isr
   492  0007  0804               	movf	4,w
   493  0008  00F8               	movwf	??_PB_Isr+1
   494  0009  080A               	movf	10,w
   495  000A  00F9               	movwf	??_PB_Isr+2
   496  000B  118A  2826         	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      11
    BANK0            80      1      11
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PB_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     102
                                              0 BANK0      1     1      0
                        _Init_System
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _PB_Isr                                               3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_System

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      1       B       4       13.8%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      16       8        0.0%
DATA                 0      0      16       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 22 17:57:25 2021

                    l900 0065                      l890 0054                      l893 0058  
                    l896 005A                      _GIE 005F                      _RB6 0036  
                    fsr0 0004                      indf 0000                     l1486 005E  
                   _PEIE 005E                     _RBIF 0058                     _RCIE 006D  
                   _RCIF 0065                     _TRMT 08B9                     _WPUA 0007  
                   _WPUB 0008                     _main 004E                     btemp 007E  
                   start 000D            ??_Init_System 007A                    ?_main 0077  
                  i1l922 0045                    _RCREG 011B                    _RCSTA 0118  
                  _SPBRG 0119                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TXREG 011A  
                  _TXSTA 0117                    main@i 002A           __pbitbssCOMMON 03D0  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 006F                   ??_main 007A  
    __end_of_Init_System 008E                   i1l1440 0043                   i1l1426 002D  
                 _INTCON 000B                   _OSCCON 0088                   _PB_Isr 0026  
                 _RXOK_f 03D0                   _result 0074                   saved_w 007E  
__end_of__initialization 0023           __pcstackCOMMON 0077              _Init_System 006F  
             __pbssBANK0 0020                  ?_PB_Isr 0077               __pmaintext 004E  
             __pintentry 0004              PB_Isr@RxNum 0076          __size_of_PB_Isr 0028  
                _RxTable 0020                  __ptext0 0000                  __ptext1 006F  
                __ptext2 0026                  _result1 0072                  _result2 0070  
   end_of_initialization 0023           __end_of_PB_Isr 004E             ?_Init_System 0077  
    start_initialization 000F                 ??_PB_Isr 0077              __pbssCOMMON 0070  
              ___latbits 0001            __pcstackBANK0 002A        interrupt_function 0004  
   __size_of_Init_System 001F            __size_of_main 0021                 intlevel1 0000  
             _OPTION_REG 0081  
