

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 22 15:48:43 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F5773
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	pa_nodes0,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	text0
    54  0000                     __ptext0:	
    55  000B                     _INTCON	set	11
    56  0008                     _WPUB	set	8
    57  0007                     _WPUA	set	7
    58  0006                     _PORTB	set	6
    59  0005                     _PORTA	set	5
    60  0058                     _RBIF	set	88
    61  0036                     _RB6	set	54
    62  0088                     _OSCCON	set	136
    63  0086                     _TRISB	set	134
    64  0085                     _TRISA	set	133
    65  0081                     _OPTION_REG	set	129
    66  010E                     _IICBUF	set	270
    67  010C                     _IICCON	set	268
    68  0109                     _IICADD	set	265
    69  0868                     _SEN	set	2152
    70  0869                     _RSEN	set	2153
    71  086A                     _PEN	set	2154
    72  086B                     _RCEN	set	2155
    73  083C                     _IICIF	set	2108
    74                           
    75                           	psect	cinit
    76  000D                     start_initialization:	
    77                           ; #config settings
    78                           
    79  000D                     __initialization:	
    80                           
    81                           ; Clear objects allocated to COMMON
    82  000D  01F0               	clrf	__pbssCOMMON& (0+127)
    83  000E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    84  000F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    85  0010  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    86  0011  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    87  0012  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    88  0013  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    89  0014                     end_of_initialization:	
    90                           ;End of C runtime variable initialization code
    91                           
    92  0014                     __end_of__initialization:	
    93  0014  0183               	clrf	3
    94  0015  118A  2817         	ljmp	_main	;jump to C main() function
    95                           
    96                           	psect	bssCOMMON
    97  0070                     __pbssCOMMON:	
    98  0070                     _result2:	
    99  0070                     	ds	2
   100  0072                     _result1:	
   101  0072                     	ds	2
   102  0074                     _result:	
   103  0074                     	ds	2
   104  0076                     _IICReadData:	
   105  0076                     	ds	1
   106                           
   107                           	psect	cstackCOMMON
   108  0077                     __pcstackCOMMON:	
   109  0077                     ?_Init_System:	
   110  0077                     ?_DelayXms:	
   111                           ; 1 bytes @ 0x0
   112                           
   113  0077                     ?_main:	
   114                           ; 1 bytes @ 0x0
   115                           
   116  0077                     ?_PB_Isr:	
   117                           ; 1 bytes @ 0x0
   118                           
   119  0077                     ??_PB_Isr:	
   120                           ; 1 bytes @ 0x0
   121                           
   122                           
   123                           ; 1 bytes @ 0x0
   124  0077                     	ds	2
   125  0079                     ??_Init_System:	
   126  0079                     ??_DelayXms:	
   127                           ; 1 bytes @ 0x2
   128                           
   129  0079                     ?_Write_IIC:	
   130                           ; 1 bytes @ 0x2
   131                           
   132  0079                     ?_Read_IIC:	
   133                           ; 1 bytes @ 0x2
   134                           
   135  0079                     DelayXms@x:	
   136                           ; 1 bytes @ 0x2
   137                           
   138  0079                     Write_IIC@data:	
   139                           ; 1 bytes @ 0x2
   140                           
   141  0079                     Read_IIC@data:	
   142                           ; 1 bytes @ 0x2
   143                           
   144                           
   145                           ; 1 bytes @ 0x2
   146  0079                     	ds	1
   147  007A                     ??_Write_IIC:	
   148  007A                     ??_Read_IIC:	
   149                           ; 1 bytes @ 0x3
   150                           
   151  007A                     DelayXms@i:	
   152                           ; 1 bytes @ 0x3
   153                           
   154  007A                     Write_IIC@Adress:	
   155                           ; 1 bytes @ 0x3
   156                           
   157  007A                     Read_IIC@ReadData:	
   158                           ; 1 bytes @ 0x3
   159                           
   160                           
   161                           ; 1 bytes @ 0x3
   162  007A                     	ds	1
   163  007B                     DelayXms@j:	
   164  007B                     Read_IIC@Adress:	
   165                           ; 1 bytes @ 0x4
   166                           
   167                           
   168                           ; 1 bytes @ 0x4
   169  007B                     	ds	1
   170  007C                     ??_main:	
   171                           
   172                           	psect	maintext
   173  0017                     __pmaintext:	
   174                           ; 1 bytes @ 0x5
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 102 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c
      +"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;		None
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2, status,0, pclath, cstack
   189 ;; Tracked objects:
   190 ;;		On entry : B00/0
   191 ;;		On exit  : 300/200
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   194 ;;      Params:         0       0       0       0
   195 ;;      Locals:         0       0       0       0
   196 ;;      Temps:          0       0       0       0
   197 ;;      Totals:         0       0       0       0
   198 ;;Total ram usage:        0 bytes
   199 ;; Hardware stack levels required when called:    2
   200 ;; This function calls:
   201 ;;		_DelayXms
   202 ;;		_Init_System
   203 ;;		_Read_IIC
   204 ;;		_Write_IIC
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           
   211                           ;psect for function _main
   212  0017                     _main:	
   213                           
   214                           ;main.c: 104: Init_System();
   215                           
   216                           ;incstack = 0
   217                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   218  0017  118A  207B  118A   	fcall	_Init_System
   219                           
   220                           ;main.c: 105: TRISA |= 0b00000011;
   221  001A  3003               	movlw	3
   222  001B  1683               	bsf	3,5	;RP0=1, select bank1
   223  001C  0485               	iorwf	5,f	;volatile
   224                           
   225                           ;main.c: 106: IICCON = 0B00100000;
   226  001D  3020               	movlw	32
   227  001E  1283               	bcf	3,5	;RP0=0, select bank2
   228  001F  1703               	bsf	3,6	;RP1=1, select bank2
   229  0020  008C               	movwf	12	;volatile
   230                           
   231                           ;main.c: 107: IICADD = 159;
   232  0021  309F               	movlw	159
   233  0022  0089               	movwf	9	;volatile
   234                           
   235                           ;main.c: 110: Write_IIC(0xa0,5);
   236  0023  3005               	movlw	5
   237  0024  00F9               	movwf	Write_IIC@data
   238  0025  30A0               	movlw	160
   239  0026  118A  2066  118A   	fcall	_Write_IIC
   240                           
   241                           ;main.c: 111: Write_IIC(0xa0,5);
   242  0029  3005               	movlw	5
   243  002A  00F9               	movwf	Write_IIC@data
   244  002B  30A0               	movlw	160
   245  002C  118A  2066  118A   	fcall	_Write_IIC
   246  002F                     l1431:	
   247                           
   248                           ;main.c: 113: {
   249                           ;main.c: 114: DelayXms(200);
   250  002F  30C8               	movlw	200
   251  0030  118A  209C  118A   	fcall	_DelayXms
   252                           
   253                           ;main.c: 115: Write_IIC(0xa0,0x80);
   254  0033  3080               	movlw	128
   255  0034  00F9               	movwf	Write_IIC@data
   256  0035  30A0               	movlw	160
   257  0036  118A  2066  118A   	fcall	_Write_IIC
   258                           
   259                           ;main.c: 117: IICReadData = Read_IIC(0xa0,0x80);
   260  0039  3080               	movlw	128
   261  003A  00F9               	movwf	Read_IIC@data
   262  003B  30A0               	movlw	160
   263  003C  118A  2041  118A   	fcall	_Read_IIC
   264  003F  00F6               	movwf	_IICReadData	;volatile
   265  0040  282F               	goto	l1431
   266  0041                     __end_of_main:	
   267                           
   268                           	psect	text1
   269  0066                     __ptext1:	
   270 ;; *************** function _Write_IIC *****************
   271 ;; Defined at:
   272 ;;		line 42 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   273 ;; Parameters:    Size  Location     Type
   274 ;;  Adress          1    wreg     unsigned char 
   275 ;;  data            1    2[COMMON] unsigned char 
   276 ;; Auto vars:     Size  Location     Type
   277 ;;  Adress          1    3[COMMON] unsigned char 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg
   282 ;; Tracked objects:
   283 ;;		On entry : 100/200
   284 ;;		On exit  : 300/200
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   287 ;;      Params:         1       0       0       0
   288 ;;      Locals:         1       0       0       0
   289 ;;      Temps:          0       0       0       0
   290 ;;      Totals:         2       0       0       0
   291 ;;Total ram usage:        2 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; Hardware stack levels required when called:    1
   294 ;; This function calls:
   295 ;;		Nothing
   296 ;; This function is called by:
   297 ;;		_main
   298 ;; This function uses a non-reentrant model
   299 ;;
   300                           
   301                           
   302                           ;psect for function _Write_IIC
   303  0066                     _Write_IIC:	
   304                           
   305                           ;incstack = 0
   306                           ; Regs used in _Write_IIC: [wreg]
   307                           ;Write_IIC@Adress stored from wreg
   308  0066  00FA               	movwf	Write_IIC@Adress
   309                           
   310                           ;main.c: 44: SEN =1;
   311  0067  1703               	bsf	3,6	;RP1=1, select bank2
   312  0068  140D               	bsf	13,0	;volatile
   313  0069                     l882:	
   314                           ;main.c: 45: while(IICIF==0);
   315                           
   316  0069  1E07               	btfss	7,4	;volatile
   317  006A  2869               	goto	l882
   318                           
   319                           ;main.c: 46: IICIF = 0;
   320  006B  1207               	bcf	7,4	;volatile
   321                           
   322                           ;main.c: 47: IICBUF = Adress;
   323  006C  087A               	movf	Write_IIC@Adress,w
   324  006D  008E               	movwf	14	;volatile
   325  006E                     l885:	
   326                           ;main.c: 48: while(IICIF==0);
   327                           
   328  006E  1E07               	btfss	7,4	;volatile
   329  006F  286E               	goto	l885
   330                           
   331                           ;main.c: 49: IICIF = 0;
   332  0070  1207               	bcf	7,4	;volatile
   333                           
   334                           ;main.c: 50: IICBUF = data;
   335  0071  0879               	movf	Write_IIC@data,w
   336  0072  008E               	movwf	14	;volatile
   337  0073                     l888:	
   338                           ;main.c: 51: while(IICIF==0);
   339                           
   340  0073  1E07               	btfss	7,4	;volatile
   341  0074  2873               	goto	l888
   342                           
   343                           ;main.c: 52: IICIF = 0;
   344  0075  1207               	bcf	7,4	;volatile
   345                           
   346                           ;main.c: 53: PEN =1;
   347  0076  150D               	bsf	13,2	;volatile
   348  0077                     l891:	
   349                           ;main.c: 54: while(IICIF==0);
   350                           
   351  0077  1E07               	btfss	7,4	;volatile
   352  0078  2877               	goto	l891
   353                           
   354                           ;main.c: 55: IICIF = 0;
   355  0079  1207               	bcf	7,4	;volatile
   356  007A  0008               	return
   357  007B                     __end_of_Write_IIC:	
   358                           
   359                           	psect	text2
   360  0041                     __ptext2:	
   361 ;; *************** function _Read_IIC *****************
   362 ;; Defined at:
   363 ;;		line 65 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;  Adress          1    wreg     unsigned char 
   366 ;;  data            1    2[COMMON] unsigned char 
   367 ;; Auto vars:     Size  Location     Type
   368 ;;  Adress          1    4[COMMON] unsigned char 
   369 ;;  ReadData        1    3[COMMON] unsigned char 
   370 ;; Return value:  Size  Location     Type
   371 ;;                  1    wreg      unsigned char 
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0
   374 ;; Tracked objects:
   375 ;;		On entry : 300/200
   376 ;;		On exit  : 300/200
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   379 ;;      Params:         1       0       0       0
   380 ;;      Locals:         2       0       0       0
   381 ;;      Temps:          0       0       0       0
   382 ;;      Totals:         3       0       0       0
   383 ;;Total ram usage:        3 bytes
   384 ;; Hardware stack levels used:    1
   385 ;; Hardware stack levels required when called:    1
   386 ;; This function calls:
   387 ;;		Nothing
   388 ;; This function is called by:
   389 ;;		_main
   390 ;; This function uses a non-reentrant model
   391 ;;
   392                           
   393                           
   394                           ;psect for function _Read_IIC
   395  0041                     _Read_IIC:	
   396                           
   397                           ;incstack = 0
   398                           ; Regs used in _Read_IIC: [wreg+status,2+status,0]
   399                           ;Read_IIC@Adress stored from wreg
   400  0041  00FB               	movwf	Read_IIC@Adress
   401                           
   402                           ;main.c: 67: unsigned char ReadData;
   403                           ;main.c: 69: SEN =1;
   404  0042  140D               	bsf	13,0	;volatile
   405  0043                     l897:	
   406                           ;main.c: 70: while(IICIF==0);
   407                           
   408  0043  1E07               	btfss	7,4	;volatile
   409  0044  2843               	goto	l897
   410                           
   411                           ;main.c: 71: IICIF = 0;
   412  0045  1207               	bcf	7,4	;volatile
   413                           
   414                           ;main.c: 72: IICBUF = Adress;
   415  0046  087B               	movf	Read_IIC@Adress,w
   416  0047  008E               	movwf	14	;volatile
   417  0048                     l900:	
   418                           ;main.c: 73: while(IICIF==0);
   419                           
   420  0048  1E07               	btfss	7,4	;volatile
   421  0049  2848               	goto	l900
   422                           
   423                           ;main.c: 75: IICIF = 0;
   424  004A  1207               	bcf	7,4	;volatile
   425                           
   426                           ;main.c: 76: IICBUF = data;
   427  004B  0879               	movf	Read_IIC@data,w
   428  004C  008E               	movwf	14	;volatile
   429  004D                     l903:	
   430                           ;main.c: 77: while(IICIF==0);
   431                           
   432  004D  1E07               	btfss	7,4	;volatile
   433  004E  284D               	goto	l903
   434                           
   435                           ;main.c: 78: IICIF = 0;
   436  004F  1207               	bcf	7,4	;volatile
   437                           
   438                           ;main.c: 80: RSEN =1;
   439  0050  148D               	bsf	13,1	;volatile
   440  0051                     l906:	
   441                           ;main.c: 81: while(IICIF==0);
   442                           
   443  0051  1E07               	btfss	7,4	;volatile
   444  0052  2851               	goto	l906
   445                           
   446                           ;main.c: 83: IICIF = 0;
   447  0053  1207               	bcf	7,4	;volatile
   448                           
   449                           ;main.c: 85: IICBUF = Adress+1;
   450  0054  087B               	movf	Read_IIC@Adress,w
   451  0055  3E01               	addlw	1
   452  0056  008E               	movwf	14	;volatile
   453  0057                     l909:	
   454                           ;main.c: 86: while(IICIF==0);
   455                           
   456  0057  1E07               	btfss	7,4	;volatile
   457  0058  2857               	goto	l909
   458                           
   459                           ;main.c: 87: IICIF = 0;
   460  0059  1207               	bcf	7,4	;volatile
   461                           
   462                           ;main.c: 88: RCEN = 1;
   463  005A  158D               	bsf	13,3	;volatile
   464  005B                     l912:	
   465                           ;main.c: 89: while(IICIF==0);
   466                           
   467  005B  1E07               	btfss	7,4	;volatile
   468  005C  285B               	goto	l912
   469                           
   470                           ;main.c: 90: IICIF = 0;
   471  005D  1207               	bcf	7,4	;volatile
   472                           
   473                           ;main.c: 91: ReadData = IICBUF;
   474  005E  080E               	movf	14,w	;volatile
   475  005F  00FA               	movwf	Read_IIC@ReadData
   476                           
   477                           ;main.c: 93: PEN =1;
   478  0060  150D               	bsf	13,2	;volatile
   479  0061                     l915:	
   480                           ;main.c: 94: while(IICIF==0);
   481                           
   482  0061  1E07               	btfss	7,4	;volatile
   483  0062  2861               	goto	l915
   484                           
   485                           ;main.c: 95: IICIF = 0;
   486  0063  1207               	bcf	7,4	;volatile
   487                           
   488                           ;main.c: 97: return ReadData;
   489  0064  087A               	movf	Read_IIC@ReadData,w
   490  0065  0008               	return
   491  0066                     __end_of_Read_IIC:	
   492                           
   493                           	psect	text3
   494  007B                     __ptext3:	
   495 ;; *************** function _Init_System *****************
   496 ;; Defined at:
   497 ;;		line 130 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c
      +"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2
   506 ;; Tracked objects:
   507 ;;		On entry : B00/0
   508 ;;		On exit  : 300/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   511 ;;      Params:         0       0       0       0
   512 ;;      Locals:         0       0       0       0
   513 ;;      Temps:          0       0       0       0
   514 ;;      Totals:         0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; Hardware stack levels required when called:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _Init_System
   527  007B                     _Init_System:	
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _Init_System: [wreg+status,2]
   531  007B  0000               	nop	;# 
   532  007C  0064               	clrwdt	;# 
   533                           
   534                           ;main.c: 134: INTCON = 0;
   535  007D  018B               	clrf	11	;volatile
   536                           
   537                           ;main.c: 135: OSCCON = 0X70;
   538  007E  3070               	movlw	112
   539  007F  1683               	bsf	3,5	;RP0=1, select bank1
   540  0080  1303               	bcf	3,6	;RP1=0, select bank1
   541  0081  0088               	movwf	8	;volatile
   542                           
   543                           ;main.c: 136: OPTION_REG = 0;
   544  0082  0181               	clrf	1	;volatile
   545                           
   546                           ;main.c: 138: WPUA = 0B00000000;
   547  0083  1283               	bcf	3,5	;RP0=0, select bank0
   548  0084  0187               	clrf	7	;volatile
   549                           
   550                           ;main.c: 139: WPUB = 0B00001000;
   551  0085  3008               	movlw	8
   552  0086  0088               	movwf	8	;volatile
   553                           
   554                           ;main.c: 142: TRISA = 0B00000000;
   555  0087  1683               	bsf	3,5	;RP0=1, select bank1
   556  0088  0185               	clrf	5	;volatile
   557                           
   558                           ;main.c: 143: TRISB = 0B00001000;
   559  0089  0086               	movwf	6	;volatile
   560                           
   561                           ;main.c: 145: PORTA = 0B00000000;
   562  008A  1283               	bcf	3,5	;RP0=0, select bank0
   563  008B  0185               	clrf	5	;volatile
   564                           
   565                           ;main.c: 146: PORTB = 0B00000000;
   566  008C  0186               	clrf	6	;volatile
   567  008D  0008               	return
   568  008E                     __end_of_Init_System:	
   569                           
   570                           	psect	text4
   571  009C                     __ptext4:	
   572 ;; *************** function _DelayXms *****************
   573 ;; Defined at:
   574 ;;		line 22 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;  x               1    wreg     unsigned char 
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  x               1    2[COMMON] unsigned char 
   579 ;;  j               1    4[COMMON] unsigned char 
   580 ;;  i               1    3[COMMON] unsigned char 
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0
   585 ;; Tracked objects:
   586 ;;		On entry : 100/200
   587 ;;		On exit  : 100/0
   588 ;;		Unchanged: 100/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   590 ;;      Params:         0       0       0       0
   591 ;;      Locals:         3       0       0       0
   592 ;;      Temps:          0       0       0       0
   593 ;;      Totals:         3       0       0       0
   594 ;;Total ram usage:        3 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _DelayXms
   606  009C                     _DelayXms:	
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   610                           ;DelayXms@x stored from wreg
   611  009C  00F9               	movwf	DelayXms@x
   612                           
   613                           ;main.c: 24: unsigned char i,j;
   614                           ;main.c: 25: for(i=x;i>0;i--)
   615  009D  00FA               	movwf	DelayXms@i
   616  009E                     l1315:	
   617  009E  087A               	movf	DelayXms@i,w
   618  009F  1903               	btfsc	3,2
   619  00A0  0008               	return
   620                           
   621                           ;main.c: 26: for(j=153;j>0;j--);
   622  00A1  3099               	movlw	153
   623  00A2  00FB               	movwf	DelayXms@j
   624  00A3                     l1325:	
   625  00A3  0BFB               	decfsz	DelayXms@j,f
   626  00A4  28A3               	goto	l1325
   627  00A5  03FA               	decf	DelayXms@i,f
   628  00A6  289E               	goto	l1315
   629  00A7                     __end_of_DelayXms:	
   630                           
   631                           	psect	text5
   632  008E                     __ptext5:	
   633 ;; *************** function _PB_Isr *****************
   634 ;; Defined at:
   635 ;;		line 157 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c
      +"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   649 ;;      Params:         0       0       0       0
   650 ;;      Locals:         0       0       0       0
   651 ;;      Temps:          2       0       0       0
   652 ;;      Totals:         2       0       0       0
   653 ;;Total ram usage:        2 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; This function calls:
   656 ;;		Nothing
   657 ;; This function is called by:
   658 ;;		Interrupt level 1
   659 ;; This function uses a non-reentrant model
   660 ;;
   661                           
   662                           
   663                           ;psect for function _PB_Isr
   664  008E                     _PB_Isr:	
   665                           
   666                           ;main.c: 159: if(RBIF)
   667  008E  1C0B               	btfss	11,0	;volatile
   668  008F  2895               	goto	i1l937
   669                           
   670                           ;main.c: 160: {
   671                           ;main.c: 161: RBIF = 0;
   672  0090  100B               	bcf	11,0	;volatile
   673                           
   674                           ;main.c: 162: RB6 = ~RB6;
   675  0091  3040               	movlw	64
   676  0092  1283               	bcf	3,5	;RP0=0, select bank0
   677  0093  1303               	bcf	3,6	;RP1=0, select bank0
   678  0094  0686               	xorwf	6,f
   679  0095                     i1l937:	
   680  0095  0878               	movf	??_PB_Isr+1,w
   681  0096  008A               	movwf	10
   682  0097  0E77               	swapf	??_PB_Isr^(0+-128),w
   683  0098  0083               	movwf	3
   684  0099  0EFE               	swapf	126,f
   685  009A  0E7E               	swapf	126,w
   686  009B  0009               	retfie
   687  009C                     __end_of_PB_Isr:	
   688  007E                     btemp	set	126	;btemp
   689  007E                     wtemp0	set	126
   690                           
   691                           	psect	intentry
   692  0004                     __pintentry:	
   693                           ;incstack = 0
   694                           ; Regs used in _PB_Isr: [wreg]
   695                           
   696  0004                     interrupt_function:	
   697  007E                     saved_w	set	btemp
   698  0004  00FE               	movwf	btemp
   699  0005  0E03               	swapf	3,w
   700  0006  00F7               	movwf	??_PB_Isr
   701  0007  080A               	movf	10,w
   702  0008  00F8               	movwf	??_PB_Isr+1
   703  0009  118A  288E         	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms
    _main->_Read_IIC

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PB_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     380
                           _DelayXms
                        _Init_System
                           _Read_IIC
                          _Write_IIC
 ---------------------------------------------------------------------------------
 (1) _Write_IIC                                            2     1      1     173
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Read_IIC                                             3     2      1     132
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0      75
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _PB_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Init_System
   _Read_IIC
   _Write_IIC

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       C       8        0.0%
DATA                 0      0       C       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 22 15:48:43 2021

                    l900 0048                      l903 004D                      l912 005B  
                    l906 0051                      l915 0061                      l909 0057  
                    l882 0069                      l891 0077                      l885 006E  
                    l888 0073                      l897 0043                      _RB6 0036  
                    _PEN 086A                      _SEN 0868                     l1315 009E  
                   l1325 00A3                     l1431 002F                     _RBIF 0058  
                   _RCEN 086B                     _RSEN 0869                     _WPUA 0007  
                   _WPUB 0008                     _main 0017                     btemp 007E  
                   start 000B            ??_Init_System 0079                    ?_main 0077  
                  _IICIF 083C                    i1l937 0095                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_DelayXms 00A7          __initialization 000D             __end_of_main 0041  
       __end_of_Read_IIC 0066                   ??_main 007C      __end_of_Init_System 008E  
           Read_IIC@data 0079                   _IICADD 0109                   _IICCON 010C  
                 _IICBUF 010E                   _INTCON 000B                   _OSCCON 0088  
                 _PB_Isr 008E                   _result 0074                   saved_w 007E  
__end_of__initialization 0014       __size_of_Write_IIC 0015           __pcstackCOMMON 0077  
            _Init_System 007B                ?_DelayXms 0077                ?_Read_IIC 0079  
                ?_PB_Isr 0077          Write_IIC@Adress 007A               __pmaintext 0017  
             __pintentry 0004        __end_of_Write_IIC 007B               ??_DelayXms 0079  
             ??_Read_IIC 007A          __size_of_PB_Isr 000E                  __ptext0 0000  
                __ptext1 0066                  __ptext2 0041                  __ptext3 007B  
                __ptext4 009C                  __ptext5 008E                  _result1 0072  
                _result2 0070     end_of_initialization 0014                DelayXms@i 007A  
              DelayXms@j 007B                DelayXms@x 0079           __end_of_PB_Isr 009C  
           ?_Init_System 0077      start_initialization 000D        __size_of_DelayXms 000B  
               ??_PB_Isr 0077            Write_IIC@data 0079        __size_of_Read_IIC 0025  
            __pbssCOMMON 0070                ___latbits 0001                _Write_IIC 0066  
         Read_IIC@Adress 007B               ?_Write_IIC 0079         Read_IIC@ReadData 007A  
      interrupt_function 0004              _IICReadData 0076     __size_of_Init_System 0013  
               _DelayXms 009C                 _Read_IIC 0041              ??_Write_IIC 007A  
          __size_of_main 002A                 intlevel1 0000               _OPTION_REG 0081  
