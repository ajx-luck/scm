

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Dec 11 10:09:01 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F5772
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	pa_nodes0,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           	psect	text0
    50  0000                     __ptext0:	
    51  000B                     _INTCON	set	11
    52  0009                     _IOCB	set	9
    53  0008                     _WPUB	set	8
    54  0007                     _WPUA	set	7
    55  0006                     _PORTB	set	6
    56  0005                     _PORTA	set	5
    57  0058                     _RBIF	set	88
    58  005B                     _RBIE	set	91
    59  005E                     _PEIE	set	94
    60  005F                     _GIE	set	95
    61  0036                     _RB6	set	54
    62  0088                     _OSCCON	set	136
    63  0086                     _TRISB	set	134
    64  0085                     _TRISA	set	133
    65  0081                     _OPTION_REG	set	129
    66  0115                     _COMPCON	set	277
    67  0845                     _COMPIE	set	2117
    68  083D                     _COMPIF	set	2109
    69                           
    70                           	psect	cinit
    71  000D                     start_initialization:	
    72                           ; #config settings
    73                           
    74  000D                     __initialization:	
    75  000D                     end_of_initialization:	
    76                           ;End of C runtime variable initialization code
    77                           
    78  000D                     __end_of__initialization:	
    79  000D  0183               	clrf	3
    80  000E  118A  2840         	ljmp	_main	;jump to C main() function
    81                           
    82                           	psect	cstackCOMMON
    83  0070                     __pcstackCOMMON:	
    84  0070                     ?_Init_System:	
    85  0070                     ?_main:	
    86                           ; 1 bytes @ 0x0
    87                           
    88  0070                     ?_PB_Isr:	
    89                           ; 1 bytes @ 0x0
    90                           
    91  0070                     ??_PB_Isr:	
    92                           ; 1 bytes @ 0x0
    93                           
    94                           
    95                           ; 1 bytes @ 0x0
    96  0070                     	ds	2
    97  0072                     ??_Init_System:	
    98  0072                     ??_main:	
    99                           ; 1 bytes @ 0x2
   100                           
   101                           
   102                           	psect	maintext
   103  0040                     __pmaintext:	
   104                           ; 1 bytes @ 0x2
   105 ;;
   106 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   107 ;;
   108 ;; *************** function _main *****************
   109 ;; Defined at:
   110 ;;		line 36 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_COMP_Demo\main.c"
   111 ;; Parameters:    Size  Location     Type
   112 ;;		None
   113 ;; Auto vars:     Size  Location     Type
   114 ;;		None
   115 ;; Return value:  Size  Location     Type
   116 ;;                  1    wreg      void 
   117 ;; Registers used:
   118 ;;		wreg, status,2, status,0, pclath, cstack
   119 ;; Tracked objects:
   120 ;;		On entry : B00/0
   121 ;;		On exit  : 300/0
   122 ;;		Unchanged: 0/0
   123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   124 ;;      Params:         0       0       0       0
   125 ;;      Locals:         0       0       0       0
   126 ;;      Temps:          0       0       0       0
   127 ;;      Totals:         0       0       0       0
   128 ;;Total ram usage:        0 bytes
   129 ;; Hardware stack levels required when called:    2
   130 ;; This function calls:
   131 ;;		_Init_System
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           
   138                           ;psect for function _main
   139  0040                     _main:	
   140                           
   141                           ;main.c: 38: Init_System();
   142                           
   143                           ;incstack = 0
   144                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   145  0040  118A  2010  118A   	fcall	_Init_System
   146  0043  2846               	goto	l1243
   147  0044                     l1245:	
   148                           
   149                           ;main.c: 45: {
   150                           ;main.c: 46: RB6=1;
   151  0044  1303               	bcf	3,6	;RP1=0, select bank0
   152  0045  1706               	bsf	6,6	;volatile
   153  0046                     l1243:	
   154                           ;main.c: 47: }
   155                           
   156                           
   157                           ;main.c: 42: {
   158                           ;main.c: 44: if((COMPCON&0x40)!=0)
   159  0046  1703               	bsf	3,6	;RP1=1, select bank2
   160  0047  1B15               	btfsc	21,6	;volatile
   161  0048  2844               	goto	l1245
   162                           
   163                           ;main.c: 48: else
   164                           ;main.c: 49: {
   165                           ;main.c: 50: RB6=0;
   166  0049  1303               	bcf	3,6	;RP1=0, select bank0
   167  004A  1306               	bcf	6,6	;volatile
   168  004B  2846               	goto	l1243
   169  004C                     __end_of_main:	
   170                           
   171                           	psect	text1
   172  0010                     __ptext1:	
   173 ;; *************** function _Init_System *****************
   174 ;; Defined at:
   175 ;;		line 69 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_COMP_Demo\main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, status,2
   184 ;; Tracked objects:
   185 ;;		On entry : B00/0
   186 ;;		On exit  : 300/200
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   189 ;;      Params:         0       0       0       0
   190 ;;      Locals:         0       0       0       0
   191 ;;      Temps:          0       0       0       0
   192 ;;      Totals:         0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels used:    1
   195 ;; Hardware stack levels required when called:    1
   196 ;; This function calls:
   197 ;;		Nothing
   198 ;; This function is called by:
   199 ;;		_main
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           
   204                           ;psect for function _Init_System
   205  0010                     _Init_System:	
   206                           
   207                           ;incstack = 0
   208                           ; Regs used in _Init_System: [wreg+status,2]
   209  0010  0000               	nop	;# 
   210  0011  0064               	clrwdt	;# 
   211                           
   212                           ;main.c: 73: INTCON = 0;
   213  0012  018B               	clrf	11	;volatile
   214                           
   215                           ;main.c: 74: OSCCON = 0X70;
   216  0013  3070               	movlw	112
   217  0014  1683               	bsf	3,5	;RP0=1, select bank1
   218  0015  1303               	bcf	3,6	;RP1=0, select bank1
   219  0016  0088               	movwf	8	;volatile
   220                           
   221                           ;main.c: 75: OPTION_REG = 0;
   222  0017  0181               	clrf	1	;volatile
   223                           
   224                           ;main.c: 77: WPUA = 0B00000000;
   225  0018  1283               	bcf	3,5	;RP0=0, select bank0
   226  0019  0187               	clrf	7	;volatile
   227                           
   228                           ;main.c: 78: WPUB = 0B00001000;
   229  001A  3008               	movlw	8
   230  001B  0088               	movwf	8	;volatile
   231                           
   232                           ;main.c: 81: TRISA = 0B00000000;
   233  001C  1683               	bsf	3,5	;RP0=1, select bank1
   234  001D  0185               	clrf	5	;volatile
   235                           
   236                           ;main.c: 82: TRISB = 0B00001000;
   237  001E  0086               	movwf	6	;volatile
   238                           
   239                           ;main.c: 84: PORTA = 0B00000000;
   240  001F  1283               	bcf	3,5	;RP0=0, select bank0
   241  0020  0185               	clrf	5	;volatile
   242                           
   243                           ;main.c: 85: PORTB = 0B00000000;
   244  0021  0186               	clrf	6	;volatile
   245                           
   246                           ;main.c: 88: COMPCON = 0b10000111;
   247  0022  3087               	movlw	135
   248  0023  1703               	bsf	3,6	;RP1=1, select bank2
   249  0024  0095               	movwf	21	;volatile
   250                           
   251                           ;main.c: 89: IOCB = 0B00001000;
   252  0025  3008               	movlw	8
   253  0026  1303               	bcf	3,6	;RP1=0, select bank0
   254  0027  0089               	movwf	9	;volatile
   255                           
   256                           ;main.c: 90: RBIE = 1;
   257  0028  158B               	bsf	11,3	;volatile
   258                           
   259                           ;main.c: 91: PEIE =1;
   260  0029  170B               	bsf	11,6	;volatile
   261                           
   262                           ;main.c: 92: COMPIE = 1;
   263  002A  1703               	bsf	3,6	;RP1=1, select bank2
   264  002B  1688               	bsf	8,5	;volatile
   265                           
   266                           ;main.c: 93: GIE = 1;
   267  002C  178B               	bsf	11,7	;volatile
   268  002D  0008               	return
   269  002E                     __end_of_Init_System:	
   270                           
   271                           	psect	text2
   272  002E                     __ptext2:	
   273 ;; *************** function _PB_Isr *****************
   274 ;; Defined at:
   275 ;;		line 105 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_COMP_Demo\main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 300/200
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   289 ;;      Params:         0       0       0       0
   290 ;;      Locals:         0       0       0       0
   291 ;;      Temps:          2       0       0       0
   292 ;;      Totals:         2       0       0       0
   293 ;;Total ram usage:        2 bytes
   294 ;; Hardware stack levels used:    1
   295 ;; This function calls:
   296 ;;		Nothing
   297 ;; This function is called by:
   298 ;;		Interrupt level 1
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302                           
   303                           ;psect for function _PB_Isr
   304  002E                     _PB_Isr:	
   305                           
   306                           ;main.c: 107: if(RBIF)
   307  002E  1C0B               	btfss	11,0	;volatile
   308  002F  2835               	goto	i1l1253
   309                           
   310                           ;main.c: 108: {
   311                           ;main.c: 109: RBIF = 0;
   312  0030  100B               	bcf	11,0	;volatile
   313                           
   314                           ;main.c: 110: RB6 = ~RB6;
   315  0031  3040               	movlw	64
   316  0032  1283               	bcf	3,5	;RP0=0, select bank0
   317  0033  1303               	bcf	3,6	;RP1=0, select bank0
   318  0034  0686               	xorwf	6,f
   319  0035                     i1l1253:	
   320                           
   321                           ;main.c: 111: }
   322                           ;main.c: 113: if(COMPIF==1)
   323  0035  1283               	bcf	3,5	;RP0=0, select bank2
   324  0036  1703               	bsf	3,6	;RP1=1, select bank2
   325  0037  1A87               	btfsc	7,5	;volatile
   326                           
   327                           ;main.c: 114: {
   328                           ;main.c: 115: COMPIF = 0;
   329  0038  1287               	bcf	7,5	;volatile
   330  0039  0871               	movf	??_PB_Isr+1,w
   331  003A  008A               	movwf	10
   332  003B  0E70               	swapf	??_PB_Isr^(0+-128),w
   333  003C  0083               	movwf	3
   334  003D  0EFE               	swapf	126,f
   335  003E  0E7E               	swapf	126,w
   336  003F  0009               	retfie
   337  0040                     __end_of_PB_Isr:	
   338  007E                     btemp	set	126	;btemp
   339  007E                     wtemp0	set	126
   340                           
   341                           	psect	intentry
   342  0004                     __pintentry:	
   343                           ;incstack = 0
   344                           ; Regs used in _PB_Isr: [wreg]
   345                           
   346  0004                     interrupt_function:	
   347  007E                     saved_w	set	btemp
   348  0004  00FE               	movwf	btemp
   349  0005  0E03               	swapf	3,w
   350  0006  00F0               	movwf	??_PB_Isr
   351  0007  080A               	movf	10,w
   352  0008  00F1               	movwf	??_PB_Isr+1
   353  0009  118A  282E         	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PB_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Init_System
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _PB_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_System

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Dec 11 10:09:01 2019

                    _GIE 005F                      _RB6 0036                     l1243 0046  
                   l1245 0044                     _IOCB 0009                     _PEIE 005E  
                   _RBIE 005B                     _RBIF 0058                     _WPUA 0007  
                   _WPUB 0008                     _main 0040                     btemp 007E  
                   start 000B            ??_Init_System 0072                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000D             __end_of_main 004C  
                 ??_main 0072      __end_of_Init_System 002E                   _COMPIE 0845  
                 _COMPIF 083D                   i1l1253 0035                   _INTCON 000B  
                 _OSCCON 0088                   _PB_Isr 002E                   saved_w 007E  
__end_of__initialization 000D           __pcstackCOMMON 0070              _Init_System 0010  
                ?_PB_Isr 0070               __pmaintext 0040               __pintentry 0004  
                _COMPCON 0115          __size_of_PB_Isr 0012                  __ptext0 0000  
                __ptext1 0010                  __ptext2 002E     end_of_initialization 000D  
         __end_of_PB_Isr 0040             ?_Init_System 0070      start_initialization 000D  
               ??_PB_Isr 0070                ___latbits 0001        interrupt_function 0004  
   __size_of_Init_System 001E            __size_of_main 000C                 intlevel1 0000  
             _OPTION_REG 0081  
