

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Dec 10 17:30:47 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F5772
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	pa_nodes0,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	text0
    52  0000                     __ptext0:	
    53  0013                     _PWMCON0	set	19
    54  000B                     _INTCON	set	11
    55  0009                     _IOCB	set	9
    56  0008                     _WPUB	set	8
    57  0007                     _WPUA	set	7
    58  0006                     _PORTB	set	6
    59  0005                     _PORTA	set	5
    60  0058                     _RBIF	set	88
    61  005B                     _RBIE	set	91
    62  005F                     _GIE	set	95
    63  0036                     _RB6	set	54
    64  009D                     _ADCON0	set	157
    65  008C                     _EECON1	set	140
    66  0088                     _OSCCON	set	136
    67  0086                     _TRISB	set	134
    68  0085                     _TRISA	set	133
    69  0081                     _OPTION_REG	set	129
    70                           
    71                           	psect	cinit
    72  000D                     start_initialization:	
    73                           ; #config settings
    74                           
    75  000D                     __initialization:	
    76                           
    77                           ; Clear objects allocated to COMMON
    78  000D  01F0               	clrf	__pbssCOMMON& (0+127)
    79  000E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    80  000F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    81  0010  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    82  0011  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    83  0012  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    84  0013                     end_of_initialization:	
    85                           ;End of C runtime variable initialization code
    86                           
    87  0013                     __end_of__initialization:	
    88  0013  0183               	clrf	3
    89  0014  118A  2848         	ljmp	_main	;jump to C main() function
    90                           
    91                           	psect	bssCOMMON
    92  0070                     __pbssCOMMON:	
    93  0070                     _result2:	
    94  0070                     	ds	2
    95  0072                     _result1:	
    96  0072                     	ds	2
    97  0074                     _result:	
    98  0074                     	ds	2
    99                           
   100                           	psect	cstackCOMMON
   101  0076                     __pcstackCOMMON:	
   102  0076                     ?_Init_System:	
   103  0076                     ?_Sleep_Mode:	
   104                           ; 1 bytes @ 0x0
   105                           
   106  0076                     ?_DelayXms:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  0076                     ?_main:	
   110                           ; 1 bytes @ 0x0
   111                           
   112  0076                     ?_PB_Isr:	
   113                           ; 1 bytes @ 0x0
   114                           
   115  0076                     ??_PB_Isr:	
   116                           ; 1 bytes @ 0x0
   117                           
   118                           
   119                           ; 1 bytes @ 0x0
   120  0076                     	ds	2
   121  0078                     ??_Init_System:	
   122  0078                     ??_Sleep_Mode:	
   123                           ; 1 bytes @ 0x2
   124                           
   125  0078                     ??_DelayXms:	
   126                           ; 1 bytes @ 0x2
   127                           
   128  0078                     DelayXms@x:	
   129                           ; 1 bytes @ 0x2
   130                           
   131                           
   132                           ; 1 bytes @ 0x2
   133  0078                     	ds	1
   134  0079                     DelayXms@i:	
   135                           
   136                           ; 1 bytes @ 0x3
   137  0079                     	ds	1
   138  007A                     DelayXms@j:	
   139                           
   140                           ; 1 bytes @ 0x4
   141  007A                     	ds	1
   142  007B                     ??_main:	
   143                           
   144                           	psect	maintext
   145  0048                     __pmaintext:	
   146                           ; 1 bytes @ 0x5
   147 ;;
   148 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   149 ;;
   150 ;; *************** function _main *****************
   151 ;; Defined at:
   152 ;;		line 40 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_Sleep_Demo\main.c"
   153 ;; Parameters:    Size  Location     Type
   154 ;;		None
   155 ;; Auto vars:     Size  Location     Type
   156 ;;		None
   157 ;; Return value:  Size  Location     Type
   158 ;;                  1    wreg      void 
   159 ;; Registers used:
   160 ;;		wreg, status,2, status,0, pclath, cstack
   161 ;; Tracked objects:
   162 ;;		On entry : B00/0
   163 ;;		On exit  : 300/0
   164 ;;		Unchanged: 0/0
   165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   166 ;;      Params:         0       0       0       0
   167 ;;      Locals:         0       0       0       0
   168 ;;      Temps:          0       0       0       0
   169 ;;      Totals:         0       0       0       0
   170 ;;Total ram usage:        0 bytes
   171 ;; Hardware stack levels required when called:    3
   172 ;; This function calls:
   173 ;;		_DelayXms
   174 ;;		_Init_System
   175 ;;		_Sleep_Mode
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           
   182                           ;psect for function _main
   183  0048                     _main:	
   184                           
   185                           ;main.c: 42: Init_System();
   186                           
   187                           ;incstack = 0
   188                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   189  0048  118A  2035  118A   	fcall	_Init_System
   190  004B                     l1283:	
   191                           
   192                           ;main.c: 44: {
   193                           ;main.c: 45: RB6=1;
   194  004B  1706               	bsf	6,6	;volatile
   195                           
   196                           ;main.c: 46: DelayXms(100);
   197  004C  3064               	movlw	100
   198  004D  118A  206C  118A   	fcall	_DelayXms
   199                           
   200                           ;main.c: 47: RB6 = 0;
   201  0050  1306               	bcf	6,6	;volatile
   202                           
   203                           ;main.c: 48: DelayXms(100);
   204  0051  3064               	movlw	100
   205  0052  118A  206C  118A   	fcall	_DelayXms
   206                           
   207                           ;main.c: 49: RB6=1;
   208  0055  1706               	bsf	6,6	;volatile
   209                           
   210                           ;main.c: 50: DelayXms(100);
   211  0056  3064               	movlw	100
   212  0057  118A  206C  118A   	fcall	_DelayXms
   213                           
   214                           ;main.c: 52: Sleep_Mode();
   215  005A  118A  2016  118A   	fcall	_Sleep_Mode
   216  005D  284B               	goto	l1283
   217  005E                     __end_of_main:	
   218                           
   219                           	psect	text1
   220  0016                     __ptext1:	
   221 ;; *************** function _Sleep_Mode *****************
   222 ;; Defined at:
   223 ;;		line 64 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_Sleep_Demo\main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, pclath, cstack
   232 ;; Tracked objects:
   233 ;;		On entry : 300/0
   234 ;;		On exit  : 300/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   237 ;;      Params:         0       0       0       0
   238 ;;      Locals:         0       0       0       0
   239 ;;      Temps:          0       0       0       0
   240 ;;      Totals:         0       0       0       0
   241 ;;Total ram usage:        0 bytes
   242 ;; Hardware stack levels used:    1
   243 ;; Hardware stack levels required when called:    2
   244 ;; This function calls:
   245 ;;		_Init_System
   246 ;; This function is called by:
   247 ;;		_main
   248 ;; This function uses a non-reentrant model
   249 ;;
   250                           
   251                           
   252                           ;psect for function _Sleep_Mode
   253  0016                     _Sleep_Mode:	
   254                           
   255                           ;main.c: 66: INTCON = 0;
   256                           
   257                           ;incstack = 0
   258                           ; Regs used in _Sleep_Mode: [wreg+status,2+status,0+pclath+cstack]
   259  0016  018B               	clrf	11	;volatile
   260                           
   261                           ;main.c: 68: OPTION_REG = 0;
   262  0017  1683               	bsf	3,5	;RP0=1, select bank1
   263  0018  0181               	clrf	1	;volatile
   264                           
   265                           ;main.c: 70: TRISA = 0B00000000;
   266  0019  0185               	clrf	5	;volatile
   267                           
   268                           ;main.c: 71: PORTA = 0B00000000;
   269  001A  1283               	bcf	3,5	;RP0=0, select bank0
   270  001B  0185               	clrf	5	;volatile
   271                           
   272                           ;main.c: 72: WPUA = 0B00000000;
   273  001C  0187               	clrf	7	;volatile
   274                           
   275                           ;main.c: 74: TRISB = 0B00001000;
   276  001D  3008               	movlw	8
   277  001E  1683               	bsf	3,5	;RP0=1, select bank1
   278  001F  0086               	movwf	6	;volatile
   279                           
   280                           ;main.c: 75: PORTB = 0B00000000;
   281  0020  1283               	bcf	3,5	;RP0=0, select bank0
   282  0021  0186               	clrf	6	;volatile
   283                           
   284                           ;main.c: 77: PORTB = 0;
   285  0022  0186               	clrf	6	;volatile
   286                           
   287                           ;main.c: 78: WPUB = 0B00001000;
   288  0023  0088               	movwf	8	;volatile
   289                           
   290                           ;main.c: 80: IOCB = 0B00001000;
   291  0024  0089               	movwf	9	;volatile
   292                           
   293                           ;main.c: 81: RBIE = 1;
   294  0025  158B               	bsf	11,3	;volatile
   295                           
   296                           ;main.c: 82: GIE = 1;
   297  0026  178B               	bsf	11,7	;volatile
   298                           
   299                           ;main.c: 84: ADCON0 = 0;
   300  0027  1683               	bsf	3,5	;RP0=1, select bank1
   301  0028  019D               	clrf	29	;volatile
   302                           
   303                           ;main.c: 85: PWMCON0 = 0;
   304  0029  1283               	bcf	3,5	;RP0=0, select bank0
   305  002A  0193               	clrf	19	;volatile
   306                           
   307                           ;main.c: 87: EECON1 = 0;
   308  002B  1683               	bsf	3,5	;RP0=1, select bank1
   309  002C  018C               	clrf	12	;volatile
   310                           
   311                           ;main.c: 89: OSCCON = 0X70;
   312  002D  3070               	movlw	112
   313  002E  0088               	movwf	8	;volatile
   314                           
   315                           ;main.c: 91: PORTB;
   316  002F  1283               	bcf	3,5	;RP0=0, select bank0
   317  0030  0806               	movf	6,w	;volatile
   318  0031  0064               	clrwdt	;# 
   319  0032  0063               	sleep	;# 
   320  0033  0000               	nop	;# 
   321                           
   322                           ;main.c: 97: Init_System();
   323  0034  2835               	ljmp	l1219
   324  0035                     __end_of_Sleep_Mode:	
   325  0035                     __ptext2:	
   326 ;; *************** function _Init_System *****************
   327 ;; Defined at:
   328 ;;		line 108 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_Sleep_Demo\main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, status,2
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 300/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   342 ;;      Params:         0       0       0       0
   343 ;;      Locals:         0       0       0       0
   344 ;;      Temps:          0       0       0       0
   345 ;;      Totals:         0       0       0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels used:    1
   348 ;; Hardware stack levels required when called:    1
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		_main
   353 ;;		_Sleep_Mode
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           
   358                           ;psect for function _Init_System
   359  0035                     _Init_System:	
   360  0035                     l1219:	
   361                           ;incstack = 0
   362                           ; Regs used in _Init_System: [wreg+status,2]
   363                           
   364  0035  0000               	nop	;# 
   365  0036  0064               	clrwdt	;# 
   366                           
   367                           ;main.c: 112: INTCON = 0;
   368  0037  018B               	clrf	11	;volatile
   369                           
   370                           ;main.c: 113: OSCCON = 0X70;
   371  0038  3070               	movlw	112
   372  0039  1683               	bsf	3,5	;RP0=1, select bank1
   373  003A  1303               	bcf	3,6	;RP1=0, select bank1
   374  003B  0088               	movwf	8	;volatile
   375                           
   376                           ;main.c: 114: OPTION_REG = 0;
   377  003C  0181               	clrf	1	;volatile
   378                           
   379                           ;main.c: 116: WPUA = 0B00000000;
   380  003D  1283               	bcf	3,5	;RP0=0, select bank0
   381  003E  0187               	clrf	7	;volatile
   382                           
   383                           ;main.c: 117: WPUB = 0B00001000;
   384  003F  3008               	movlw	8
   385  0040  0088               	movwf	8	;volatile
   386                           
   387                           ;main.c: 120: TRISA = 0B00000000;
   388  0041  1683               	bsf	3,5	;RP0=1, select bank1
   389  0042  0185               	clrf	5	;volatile
   390                           
   391                           ;main.c: 121: TRISB = 0B00001000;
   392  0043  0086               	movwf	6	;volatile
   393                           
   394                           ;main.c: 123: PORTA = 0B00000000;
   395  0044  1283               	bcf	3,5	;RP0=0, select bank0
   396  0045  0185               	clrf	5	;volatile
   397                           
   398                           ;main.c: 124: PORTB = 0B00000000;
   399  0046  0186               	clrf	6	;volatile
   400  0047  0008               	return
   401  0048                     __end_of_Init_System:	
   402                           
   403                           	psect	text3
   404  006C                     __ptext3:	
   405 ;; *************** function _DelayXms *****************
   406 ;; Defined at:
   407 ;;		line 23 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_Sleep_Demo\main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;  x               1    wreg     unsigned char 
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  x               1    2[COMMON] unsigned char 
   412 ;;  j               1    4[COMMON] unsigned char 
   413 ;;  i               1    3[COMMON] unsigned char 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0
   418 ;; Tracked objects:
   419 ;;		On entry : 300/0
   420 ;;		On exit  : 300/0
   421 ;;		Unchanged: 300/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   423 ;;      Params:         0       0       0       0
   424 ;;      Locals:         3       0       0       0
   425 ;;      Temps:          0       0       0       0
   426 ;;      Totals:         3       0       0       0
   427 ;;Total ram usage:        3 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    1
   430 ;; This function calls:
   431 ;;		Nothing
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           
   438                           ;psect for function _DelayXms
   439  006C                     _DelayXms:	
   440                           
   441                           ;incstack = 0
   442                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   443                           ;DelayXms@x stored from wreg
   444  006C  00F8               	movwf	DelayXms@x
   445                           
   446                           ;main.c: 25: unsigned char i,j;
   447                           ;main.c: 26: for(i=x;i>0;i--)
   448  006D  00F9               	movwf	DelayXms@i
   449  006E                     l1239:	
   450  006E  0879               	movf	DelayXms@i,w
   451  006F  1903               	btfsc	3,2
   452  0070  0008               	return
   453                           
   454                           ;main.c: 27: for(j=153;j>0;j--);
   455  0071  3099               	movlw	153
   456  0072  00FA               	movwf	DelayXms@j
   457  0073                     l1249:	
   458  0073  0BFA               	decfsz	DelayXms@j,f
   459  0074  2873               	goto	l1249
   460  0075  03F9               	decf	DelayXms@i,f
   461  0076  286E               	goto	l1239
   462  0077                     __end_of_DelayXms:	
   463                           
   464                           	psect	text4
   465  005E                     __ptext4:	
   466 ;; *************** function _PB_Isr *****************
   467 ;; Defined at:
   468 ;;		line 135 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_Sleep_Demo\main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   482 ;;      Params:         0       0       0       0
   483 ;;      Locals:         0       0       0       0
   484 ;;      Temps:          2       0       0       0
   485 ;;      Totals:         2       0       0       0
   486 ;;Total ram usage:        2 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		Interrupt level 1
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function _PB_Isr
   497  005E                     _PB_Isr:	
   498                           
   499                           ;main.c: 137: if(RBIF)
   500  005E  1C0B               	btfss	11,0	;volatile
   501  005F  2865               	goto	i1l843
   502                           
   503                           ;main.c: 138: {
   504                           ;main.c: 139: RBIF = 0;
   505  0060  100B               	bcf	11,0	;volatile
   506                           
   507                           ;main.c: 140: RB6 = ~RB6;
   508  0061  3040               	movlw	64
   509  0062  1283               	bcf	3,5	;RP0=0, select bank0
   510  0063  1303               	bcf	3,6	;RP1=0, select bank0
   511  0064  0686               	xorwf	6,f
   512  0065                     i1l843:	
   513  0065  0877               	movf	??_PB_Isr+1,w
   514  0066  008A               	movwf	10
   515  0067  0E76               	swapf	??_PB_Isr^(0+-128),w
   516  0068  0083               	movwf	3
   517  0069  0EFE               	swapf	126,f
   518  006A  0E7E               	swapf	126,w
   519  006B  0009               	retfie
   520  006C                     __end_of_PB_Isr:	
   521  007E                     btemp	set	126	;btemp
   522  007E                     wtemp0	set	126
   523                           
   524                           	psect	intentry
   525  0004                     __pintentry:	
   526                           ;incstack = 0
   527                           ; Regs used in _PB_Isr: [wreg]
   528                           
   529  0004                     interrupt_function:	
   530  007E                     saved_w	set	btemp
   531  0004  00FE               	movwf	btemp
   532  0005  0E03               	swapf	3,w
   533  0006  00F6               	movwf	??_PB_Isr
   534  0007  080A               	movf	10,w
   535  0008  00F7               	movwf	??_PB_Isr+1
   536  0009  118A  285E         	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PB_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
                           _DelayXms
                        _Init_System
                         _Sleep_Mode
 ---------------------------------------------------------------------------------
 (1) _Sleep_Mode                                           0     0      0       0
                        _Init_System
 ---------------------------------------------------------------------------------
 (2) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0      75
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _PB_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Init_System
   _Sleep_Mode
     _Init_System

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       B       8        0.0%
DATA                 0      0       B       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Dec 10 17:30:47 2019

                    _GIE 005F                      _RB6 0036                     l1219 0035  
                   l1239 006E                     l1249 0073                     l1283 004B  
                   _IOCB 0009                     _RBIE 005B                     _RBIF 0058  
                   _WPUA 0007                     _WPUB 0008                     _main 0048  
                   btemp 007E                     start 000B            ??_Init_System 0078  
                  ?_main 0076                    i1l843 0065                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_DelayXms 0077          __initialization 000D             __end_of_main 005E  
                 ??_main 007B      __end_of_Init_System 0048                   _ADCON0 009D  
                 _EECON1 008C                   _INTCON 000B                   _OSCCON 0088  
                 _PB_Isr 005E               _Sleep_Mode 0016                   _result 0074  
                 saved_w 007E  __end_of__initialization 0013           __pcstackCOMMON 0076  
            _Init_System 0035                ?_DelayXms 0076                  ?_PB_Isr 0076  
            ?_Sleep_Mode 0076               __pmaintext 0048               __pintentry 0004  
             ??_DelayXms 0078                  _PWMCON0 0013          __size_of_PB_Isr 000E  
                __ptext0 0000                  __ptext1 0016                  __ptext2 0035  
                __ptext3 006C                  __ptext4 005E                  _result1 0072  
                _result2 0070      __size_of_Sleep_Mode 001F     end_of_initialization 0013  
              DelayXms@i 0079                DelayXms@j 007A                DelayXms@x 0078  
         __end_of_PB_Isr 006C             ?_Init_System 0076      start_initialization 000D  
      __size_of_DelayXms 000B                 ??_PB_Isr 0076             ??_Sleep_Mode 0078  
            __pbssCOMMON 0070                ___latbits 0001       __end_of_Sleep_Mode 0035  
      interrupt_function 0004     __size_of_Init_System 0013                 _DelayXms 006C  
          __size_of_main 0016                 intlevel1 0000               _OPTION_REG 0081  
