
# 1 "E:\CMS_WORK\democode\SC8F275X_DEMO_C\SC8F275X_ADC_Demo\SC8F275X_ADC.c"

# 26 "E:\CMS_WORK\TOOLS\SCMCU_IDE_V2.00.05_Beta_0911\data\include\htc.h"
extern const char __xc8_OPTIM_SPEED;

extern double __fpnormalize(double);


# 13 "E:\CMS_WORK\TOOLS\SCMCU_IDE_V2.00.05_Beta_0911\data\include\xc8debug.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 16 "E:\CMS_WORK\TOOLS\SCMCU_IDE_V2.00.05_Beta_0911\data\include\SC8F2752.h"
volatile unsigned char INDF @ 0x000;
volatile unsigned char TMR0 @ 0x001;
volatile unsigned char PCL @ 0x002;
volatile unsigned char STATUS @ 0x003;
volatile unsigned char FSR @ 0x004;
volatile unsigned char PORTA @ 0x005;
volatile unsigned char PORTB @ 0x006;
volatile unsigned char WPUA @ 0x007;
volatile unsigned char WPUB @ 0x008;
volatile unsigned char IOCB @ 0x009;
volatile unsigned char PCLATH @ 0x00A;
volatile unsigned char INTCON @ 0x00B;
volatile unsigned char PIR1 @ 0x00C;
volatile unsigned char PIE1 @ 0x00D;
volatile unsigned char PWMD23H @ 0x00E;
volatile unsigned char PWM01DT @ 0x00F;
volatile unsigned char PWM23DT @ 0x010;
volatile unsigned char TMR2 @ 0x011;
volatile unsigned char T2CON @ 0x012;
volatile unsigned char PWMCON0 @ 0x013;
volatile unsigned char PWMCON1 @ 0x014;
volatile unsigned char PWMTL @ 0x015;
volatile unsigned char PWMTH @ 0x016;
volatile unsigned char PWMD0L @ 0x017;
volatile unsigned char PWMD1L @ 0x018;
volatile unsigned char PWMD2L @ 0x019;
volatile unsigned char PWMD3L @ 0x01A;
volatile unsigned char PWMD4L @ 0x01B;
volatile unsigned char PWMD01H @ 0x01C;
volatile unsigned char PWMCON2 @ 0x01D;



volatile unsigned char OPTION_REG @ 0x081;



volatile unsigned char TRISA @ 0x085;
volatile unsigned char TRISB @ 0x086;
volatile unsigned char WPDB @ 0x087;
volatile unsigned char OSCCON @ 0x088;




volatile unsigned char PR2 @ 0x091;

volatile unsigned char OPA0CON @ 0x098;
volatile unsigned char OPA0ADJ @ 0x099;
volatile unsigned char OPA1CON @ 0x09A;
volatile unsigned char OPA1ADJ @ 0x09B;
volatile unsigned char ADCON1 @ 0x09C;
volatile unsigned char ADCON0 @ 0x09D;
volatile unsigned char ADRESL @ 0x09E;
volatile unsigned char ADRESH @ 0x09F;




volatile bit IRP @ ((unsigned)&STATUS*8)+7;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit TO @ ((unsigned)&STATUS*8)+4;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit Z @ ((unsigned)&STATUS*8)+2;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit C @ ((unsigned)&STATUS*8)+0;


volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA0 @ ((unsigned)&PORTA*8)+0;


volatile bit RB7 @ ((unsigned)&PORTB*8)+7;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB0 @ ((unsigned)&PORTB*8)+0;


volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;


volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;


volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;



volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;

volatile bit RABIE @ ((unsigned)&INTCON*8)+3;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;

volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;

volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
volatile bit RABIF @ ((unsigned)&INTCON*8)+0;


volatile bit PWMIF @ ((unsigned)&PIR1*8)+2;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit ADIF @ ((unsigned)&PIR1*8)+0;


volatile bit PWMIE @ ((unsigned)&PIE1*8)+2;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit ADIE @ ((unsigned)&PIE1*8)+0;


volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;

volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;


volatile bit CLK_SEL @ ((unsigned)&T2CON*8)+7;
volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;


volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;


volatile bit PWMIO_SEL1 @ ((unsigned)&PWMCON1*8)+7;
volatile bit PWMIO_SEL0 @ ((unsigned)&PWMCON1*8)+6;
volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
volatile bit PWM0DETN @ ((unsigned)&PWMCON1*8)+4;

volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;



volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;

volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;


volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;




volatile bit RBPU @ ((unsigned)&OPTION_REG*8)+7;
volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;



volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;


volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;


volatile bit WPDB7 @ ((unsigned)&WPDB*8)+7;
volatile bit WPDB6 @ ((unsigned)&WPDB*8)+6;
volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;


volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+1;




volatile bit OPA0_CON @ ((unsigned)&OPA0CON*8)+7;
volatile bit OPA0EN @ ((unsigned)&OPA0CON*8)+6;
volatile bit CMP0MODE @ ((unsigned)&OPA0CON*8)+5;
volatile bit OPA0_ADC @ ((unsigned)&OPA0CON*8)+4;
volatile bit OPA0FT @ ((unsigned)&OPA0CON*8)+0;


volatile bit OPA0OUT @ ((unsigned)&OPA0ADJ*8)+7;
volatile bit OPA0COFM @ ((unsigned)&OPA0ADJ*8)+6;
volatile bit OPA0CRS @ ((unsigned)&OPA0ADJ*8)+5;
volatile bit OPA0ADJ4 @ ((unsigned)&OPA0ADJ*8)+4;
volatile bit OPA0ADJ3 @ ((unsigned)&OPA0ADJ*8)+3;
volatile bit OPA0ADJ2 @ ((unsigned)&OPA0ADJ*8)+2;
volatile bit OPA0ADJ1 @ ((unsigned)&OPA0ADJ*8)+1;
volatile bit OPA0ADJ0 @ ((unsigned)&OPA0ADJ*8)+0;


volatile bit OPA1_CON @ ((unsigned)&OPA1CON*8)+7;
volatile bit OPA1EN @ ((unsigned)&OPA1CON*8)+6;
volatile bit CMP1MODE @ ((unsigned)&OPA1CON*8)+5;
volatile bit OPA1_ADC @ ((unsigned)&OPA1CON*8)+4;
volatile bit OPA1FT @ ((unsigned)&OPA1CON*8)+0;


volatile bit OPA1OUT @ ((unsigned)&OPA1ADJ*8)+7;
volatile bit OPA1COFM @ ((unsigned)&OPA1ADJ*8)+6;
volatile bit OPA1CRS @ ((unsigned)&OPA1ADJ*8)+5;
volatile bit OPA1ADJ4 @ ((unsigned)&OPA1ADJ*8)+4;
volatile bit OPA1ADJ3 @ ((unsigned)&OPA1ADJ*8)+3;
volatile bit OPA1ADJ2 @ ((unsigned)&OPA1ADJ*8)+2;
volatile bit OPA1ADJ1 @ ((unsigned)&OPA1ADJ*8)+1;
volatile bit OPA1ADJ0 @ ((unsigned)&OPA1ADJ*8)+0;


volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
volatile bit LDO_SEL1 @ ((unsigned)&ADCON1*8)+1;
volatile bit LDO_SEL0 @ ((unsigned)&ADCON1*8)+0;


volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
volatile bit ADON @ ((unsigned)&ADCON0*8)+0;


# 27 "E:\CMS_WORK\TOOLS\SCMCU_IDE_V2.00.05_Beta_0911\data\include\SC.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 76
extern unsigned int flash_read(unsigned short addr);


# 149
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);

# 184
extern unsigned char __resetbits;
extern __bit __powerdown;
extern __bit __timeout;

# 8 "E:\CMS_WORK\democode\SC8F275X_DEMO_C\SC8F275X_ADC_Demo\SC8F275X_ADC.c"
volatile unsigned int adresult,Tempadresult,Tempadresult1;
volatile unsigned int result;


bit Ms20_f,Ms500_f,Start_f,Led_f;
unsigned char Ms200_Cnt;
unsigned char Key_Cnt;
void ADC_Sample(unsigned char adch);
void DelayXms(unsigned char x);

# 29
void ADC_Sample(unsigned char adch)
{
unsigned long adsum = 0;
static unsigned int admin = 0,admax = 0;
static unsigned char adtimes = 0;
volatile unsigned int ad_temp;

ADCON0 = 0X81 | (adch << 2);

asm("nop");
asm("nop");
GODONE = 1;

for(adtimes=0;adtimes<10;adtimes++)
{
unsigned char i = 0;
while(GODONE)
{
if(0 == (--i))
return;
}

ad_temp=(ADRESH<<4)+(ADRESL>>4);

if(0 == adtimes)
{
admax = ad_temp;
admin = ad_temp;
}
else if(ad_temp > admax)
admax = ad_temp;
else if(ad_temp < admin)
admin = ad_temp;

adsum += ad_temp;
}

adsum -= admax;
if(adsum >= admin) adsum -= admin;
else adsum = 0;

adresult = adsum >> 3;



}



unsigned char ADC_Result(unsigned char adch)
{
unsigned char i = 0;

ADCON0 = 0X81 | (adch << 2);
asm("nop");
asm("nop");
GODONE = 1;


while(GODONE)
{
if(0 == (--i))
return 0;
}
result=(ADRESH<<4)+(ADRESL>>4);
}

# 102
void DelayXms(unsigned char x)
{
unsigned char i,j;
for(i=x;i>0;i--)
for(j=153;j>0;j--);
}

# 112
void main()
{

asm("nop");
asm("clrwdt");
INTCON = 0;
OSCCON = 0X70;
TRISA0 = 1;

WPUB = 0B00000001;
ADCON0 = 0B01111101;
ADCON1 = 0B00000111;


OPTION_REG = 0B00000011;
TMR0 = 6;
T0IF = 0;
T0IE = 1;


TRISA = 0b11111011;
RA2= 0;
RA2= 1;

Key_Cnt = 0;
TRISB = 0b11101001;
PORTB = 0b00000000;
PORTB = 0b00010111;

INTF = 0;


GIE =1;

while(1)
{
asm("clrwdt");

# 154
ADC_Result(15);
if(result < 3689)

{


{




}
}

if(Ms20_f ==1)
{
Ms20_f = 0;
Ms200_Cnt++;
if(Ms200_Cnt < 25)
Ms500_f =0;
else
Ms500_f =1;
if(Ms200_Cnt >= 50)
{
Ms200_Cnt = 0;

}

if(RB0==0)
{
if(Key_Cnt <200)
Key_Cnt++;
}
else
{
if(Key_Cnt >5)
{
if(Start_f==0)
{
Start_f = 1;
Led_f = 1;
RA1 = 0;
TRISA1 = 0;
INTF = 0;
INTE = 1;

}
}
Key_Cnt = 0;
}
}



}
}

void interrupt Timer0_Isr(void)
{
static unsigned char Led_Cn=0;
static unsigned char Ms2_Cnt=0;

if(INTF)
{




}
if(T0IF)
{
TMR0 += 6;
T0IF = 0;

Ms2_Cnt++;
if(Ms2_Cnt >=10 )
{
Ms2_Cnt = 0;
Ms20_f =1;
}

Led_Cn++;
if(Led_Cn >= 3)
{
Led_Cn = 0;
}

if(Led_Cn==0)
{
RA2= 0;
TRISA2 = 0;

RB1= 1;
TRISB1 = 0;
if(Led_f==0)
{
RB4= 1;
TRISB4 = 0;
}else
{
RB4= 0;
TRISB4 = 0;
}
}
if(Led_Cn==1)
{
RA2= 1;
TRISA2 = 0;

RB1= 0;
TRISB1 = 0;

if(Ms500_f==1||Start_f==1)
{
RB4= 0;
TRISB4 = 0;
}
else
{
RB4= 1;
TRISB4 = 0;
}
}


}

}

