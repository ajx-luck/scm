

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 22 14:15:33 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F5773
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	pa_nodes0,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	text0
    54  0000                     __ptext0:	
    55  0012                     _T2CON	set	18
    56  0011                     _TMR2	set	17
    57  000B                     _INTCON	set	11
    58  0001                     _TMR0	set	1
    59  0092                     _TMR2ON	set	146
    60  0069                     _TMR2IE	set	105
    61  0061                     _TMR2IF	set	97
    62  0059                     _INTF	set	89
    63  005A                     _T0IF	set	90
    64  005D                     _T0IE	set	93
    65  005E                     _PEIE	set	94
    66  005F                     _GIE	set	95
    67  0035                     _RB5	set	53
    68  0036                     _RB6	set	54
    69  009F                     _ADRESL	set	159
    70  009E                     _ADRESH	set	158
    71  009D                     _ADCON0	set	157
    72  009C                     _ADCON1	set	156
    73  0091                     _PR2	set	145
    74  0088                     _OSCCON	set	136
    75  0081                     _OPTION_REG	set	129
    76  04E8                     _ADON	set	1256
    77  04E9                     _GODONE	set	1257
    78  04E6                     _CHS4	set	1254
    79  0435                     _TRISB5	set	1077
    80  0436                     _TRISB6	set	1078
    81                           
    82                           	psect	cinit
    83  000D                     start_initialization:	
    84                           ; #config settings
    85                           
    86  000D                     __initialization:	
    87                           
    88                           ; Clear objects allocated to COMMON
    89  000D  01F5               	clrf	__pbssCOMMON& (0+127)
    90  000E  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
    91  000F  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
    92  0010  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
    93                           
    94                           ; Clear objects allocated to BANK0
    95  0011  1283               	bcf	3,5	;RP0=0, select bank0
    96  0012  1303               	bcf	3,6	;RP1=0, select bank0
    97  0013  01A4               	clrf	__pbssBANK0& (0+127)
    98  0014  01A5               	clrf	(__pbssBANK0+1)& (0+127)
    99  0015                     end_of_initialization:	
   100                           ;End of C runtime variable initialization code
   101                           
   102  0015                     __end_of__initialization:	
   103  0015  0183               	clrf	3
   104  0016  118A  286D         	ljmp	_main	;jump to C main() function
   105                           
   106                           	psect	bssCOMMON
   107  0075                     __pbssCOMMON:	
   108  0075                     _result1:	
   109  0075                     	ds	2
   110  0077                     _result:	
   111  0077                     	ds	2
   112                           
   113                           	psect	bssBANK0
   114  0024                     __pbssBANK0:	
   115  0024                     _result2:	
   116  0024                     	ds	2
   117                           
   118                           	psect	cstackCOMMON
   119  0070                     __pcstackCOMMON:	
   120  0070                     ?_DelayXms:	
   121  0070                     ?_main:	
   122                           ; 1 bytes @ 0x0
   123                           
   124  0070                     ?_Timer0_Isr:	
   125                           ; 1 bytes @ 0x0
   126                           
   127  0070                     ??_Timer0_Isr:	
   128                           ; 1 bytes @ 0x0
   129                           
   130                           
   131                           ; 1 bytes @ 0x0
   132  0070                     	ds	2
   133  0072                     ??_DelayXms:	
   134  0072                     ?_Read_ADC:	
   135                           ; 1 bytes @ 0x2
   136                           
   137  0072                     DelayXms@x:	
   138                           ; 2 bytes @ 0x2
   139                           
   140  0072                     Read_ADC@ADCLDORef:	
   141                           ; 1 bytes @ 0x2
   142                           
   143                           
   144                           ; 1 bytes @ 0x2
   145  0072                     	ds	1
   146  0073                     DelayXms@i:	
   147                           
   148                           ; 1 bytes @ 0x3
   149  0073                     	ds	1
   150  0074                     ??_Read_ADC:	
   151  0074                     DelayXms@j:	
   152                           ; 1 bytes @ 0x4
   153                           
   154                           
   155                           ; 1 bytes @ 0x4
   156  0074                     	ds	1
   157  0075                     ??_main:	
   158                           
   159                           	psect	cstackBANK0
   160  0020                     __pcstackBANK0:	
   161                           ; 1 bytes @ 0x5
   162                           
   163  0020                     Read_ADC@i:	
   164                           
   165                           ; 1 bytes @ 0x0
   166  0020                     	ds	1
   167  0021                     Read_ADC@Adc_Result:	
   168                           
   169                           ; 2 bytes @ 0x1
   170  0021                     	ds	2
   171  0023                     Read_ADC@ADCchannel:	
   172                           
   173                           ; 1 bytes @ 0x3
   174  0023                     	ds	1
   175                           
   176                           	psect	maintext
   177  006D                     __pmaintext:	
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 33 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_ADC_Timer_Demo\SC8F577X
      +_ADC.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, pclath, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : B00/0
   194 ;;		On exit  : 300/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   197 ;;      Params:         0       0       0       0
   198 ;;      Locals:         0       0       0       0
   199 ;;      Temps:          0       0       0       0
   200 ;;      Totals:         0       0       0       0
   201 ;;Total ram usage:        0 bytes
   202 ;; Hardware stack levels required when called:    2
   203 ;; This function calls:
   204 ;;		_DelayXms
   205 ;;		_Read_ADC
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           
   212                           ;psect for function _main
   213  006D                     _main:	
   214                           
   215                           ;incstack = 0
   216                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   217  006D  0000               	nop	;# 
   218  006E  0064               	clrwdt	;# 
   219                           
   220                           ;SC8F577X_ADC.c: 38: INTCON = 0;
   221  006F  018B               	clrf	11	;volatile
   222                           
   223                           ;SC8F577X_ADC.c: 39: OSCCON = 0X70;
   224  0070  3070               	movlw	112
   225  0071  1683               	bsf	3,5	;RP0=1, select bank1
   226  0072  1303               	bcf	3,6	;RP1=0, select bank1
   227  0073  0088               	movwf	8	;volatile
   228                           
   229                           ;SC8F577X_ADC.c: 41: DelayXms(2);
   230  0074  3002               	movlw	2
   231  0075  118A  20C9  118A   	fcall	_DelayXms
   232                           
   233                           ;SC8F577X_ADC.c: 43: ADCON0 = 0B10000001;
   234  0078  3081               	movlw	129
   235  0079  009D               	movwf	29	;volatile
   236                           
   237                           ;SC8F577X_ADC.c: 44: ADCON1 = 0B00000011;
   238  007A  3003               	movlw	3
   239  007B  009C               	movwf	28	;volatile
   240                           
   241                           ;SC8F577X_ADC.c: 46: OPTION_REG = 0B00001111;
   242  007C  300F               	movlw	15
   243  007D  0081               	movwf	1	;volatile
   244                           
   245                           ;SC8F577X_ADC.c: 48: TMR0 = 6;
   246  007E  3006               	movlw	6
   247  007F  1283               	bcf	3,5	;RP0=0, select bank0
   248  0080  0081               	movwf	1	;volatile
   249                           
   250                           ;SC8F577X_ADC.c: 49: T0IF = 0;
   251  0081  110B               	bcf	11,2	;volatile
   252                           
   253                           ;SC8F577X_ADC.c: 50: T0IE = 1;
   254  0082  168B               	bsf	11,5	;volatile
   255                           
   256                           ;SC8F577X_ADC.c: 52: T2CON = 0B00000011;
   257  0083  3003               	movlw	3
   258  0084  0092               	movwf	18	;volatile
   259                           
   260                           ;SC8F577X_ADC.c: 53: PR2 = 250;
   261  0085  30FA               	movlw	250
   262  0086  1683               	bsf	3,5	;RP0=1, select bank1
   263  0087  0091               	movwf	17	;volatile
   264                           
   265                           ;SC8F577X_ADC.c: 54: TMR2 = 0;
   266  0088  1283               	bcf	3,5	;RP0=0, select bank0
   267  0089  0191               	clrf	17	;volatile
   268                           
   269                           ;SC8F577X_ADC.c: 55: TMR2ON = 1;
   270  008A  1512               	bsf	18,2	;volatile
   271                           
   272                           ;SC8F577X_ADC.c: 56: TMR2IE = 1;
   273  008B  148D               	bsf	13,1	;volatile
   274                           
   275                           ;SC8F577X_ADC.c: 58: PEIE = 1;
   276  008C  170B               	bsf	11,6	;volatile
   277                           
   278                           ;SC8F577X_ADC.c: 60: TRISB6 = 0;
   279  008D  1683               	bsf	3,5	;RP0=1, select bank1
   280  008E  1306               	bcf	6,6	;volatile
   281                           
   282                           ;SC8F577X_ADC.c: 61: TRISB5 = 0;
   283  008F  1286               	bcf	6,5	;volatile
   284                           
   285                           ;SC8F577X_ADC.c: 63: ADON = 1;
   286  0090  141D               	bsf	29,0	;volatile
   287                           
   288                           ;SC8F577X_ADC.c: 64: INTF = 0;
   289  0091  108B               	bcf	11,1	;volatile
   290                           
   291                           ;SC8F577X_ADC.c: 66: GIE = 1;
   292  0092  178B               	bsf	11,7	;volatile
   293  0093                     l884:	
   294                           ;SC8F577X_ADC.c: 68: while(1)
   295                           
   296  0093  0064               	clrwdt	;# 
   297  0094  3013               	movlw	19
   298                           
   299                           ;SC8F577X_ADC.c: 72: result = Read_ADC(19,0);
   300  0095  01F2               	clrf	Read_ADC@ADCLDORef
   301  0096  118A  2018  118A   	fcall	_Read_ADC
   302  0099  0873               	movf	?_Read_ADC+1,w
   303  009A  00F8               	movwf	_result+1	;volatile
   304  009B  0872               	movf	?_Read_ADC,w
   305  009C  00F7               	movwf	_result	;volatile
   306  009D  3013               	movlw	19
   307                           
   308                           ;SC8F577X_ADC.c: 74: result1 = Read_ADC(19,1);
   309  009E  01F2               	clrf	Read_ADC@ADCLDORef
   310  009F  0AF2               	incf	Read_ADC@ADCLDORef,f
   311  00A0  118A  2018  118A   	fcall	_Read_ADC
   312  00A3  0873               	movf	?_Read_ADC+1,w
   313  00A4  00F6               	movwf	_result1+1	;volatile
   314  00A5  0872               	movf	?_Read_ADC,w
   315  00A6  00F5               	movwf	_result1	;volatile
   316                           
   317                           ;SC8F577X_ADC.c: 75: result2 = Read_ADC(19,2);
   318  00A7  3002               	movlw	2
   319  00A8  00F2               	movwf	Read_ADC@ADCLDORef
   320  00A9  3013               	movlw	19
   321  00AA  118A  2018  118A   	fcall	_Read_ADC
   322  00AD  0873               	movf	?_Read_ADC+1,w
   323  00AE  00A5               	movwf	_result2+1	;volatile
   324  00AF  0872               	movf	?_Read_ADC,w
   325  00B0  00A4               	movwf	_result2	;volatile
   326  00B1  2893               	goto	l884
   327  00B2                     __end_of_main:	
   328                           
   329                           	psect	text1
   330  0018                     __ptext1:	
   331 ;; *************** function _Read_ADC *****************
   332 ;; Defined at:
   333 ;;		line 110 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_ADC_Timer_Demo\SC8F577
      +X_ADC.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;  ADCchannel      1    wreg     unsigned char 
   336 ;;  ADCLDORef       1    2[COMMON] unsigned char 
   337 ;; Auto vars:     Size  Location     Type
   338 ;;  ADCchannel      1    3[BANK0 ] unsigned char 
   339 ;;  Adc_Result      2    1[BANK0 ] unsigned int 
   340 ;;  i               1    0[BANK0 ] unsigned char 
   341 ;; Return value:  Size  Location     Type
   342 ;;                  2    2[COMMON] unsigned int 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0
   345 ;; Tracked objects:
   346 ;;		On entry : 0/100
   347 ;;		On exit  : 300/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   350 ;;      Params:         2       0       0       0
   351 ;;      Locals:         0       4       0       0
   352 ;;      Temps:          1       0       0       0
   353 ;;      Totals:         3       4       0       0
   354 ;;Total ram usage:        7 bytes
   355 ;; Hardware stack levels used:    1
   356 ;; Hardware stack levels required when called:    1
   357 ;; This function calls:
   358 ;;		Nothing
   359 ;; This function is called by:
   360 ;;		_main
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           
   365                           ;psect for function _Read_ADC
   366  0018                     _Read_ADC:	
   367                           
   368                           ;incstack = 0
   369                           ; Regs used in _Read_ADC: [wreg+status,2+status,0]
   370                           ;Read_ADC@ADCchannel stored from wreg
   371  0018  1283               	bcf	3,5	;RP0=0, select bank0
   372  0019  1303               	bcf	3,6	;RP1=0, select bank0
   373  001A  00A3               	movwf	Read_ADC@ADCchannel
   374                           
   375                           ;SC8F577X_ADC.c: 112: unsigned int Adc_Result;
   376                           ;SC8F577X_ADC.c: 113: unsigned char i=200;
   377  001B  30C8               	movlw	200
   378  001C  00A0               	movwf	Read_ADC@i
   379                           
   380                           ;SC8F577X_ADC.c: 116: if(ADCLDORef==0)
   381  001D  0872               	movf	Read_ADC@ADCLDORef,w
   382  001E  1D03               	btfss	3,2
   383  001F  2823               	goto	l1507
   384                           
   385                           ;SC8F577X_ADC.c: 117: {
   386                           ;SC8F577X_ADC.c: 118: ADCON1 = 0B00000000;
   387  0020  1683               	bsf	3,5	;RP0=1, select bank1
   388  0021  019C               	clrf	28	;volatile
   389                           
   390                           ;SC8F577X_ADC.c: 119: }
   391  0022  282A               	goto	l1513
   392  0023                     l1507:	
   393                           
   394                           ;SC8F577X_ADC.c: 120: else if(ADCLDORef==1)
   395  0023  0B72               	decfsz	Read_ADC@ADCLDORef,w
   396  0024  2827               	goto	l1511
   397                           
   398                           ;SC8F577X_ADC.c: 121: {
   399                           ;SC8F577X_ADC.c: 122: ADCON1 = 0B00000101;
   400  0025  3005               	movlw	5
   401  0026  2828               	goto	L2
   402  0027                     l1511:	
   403                           ;SC8F577X_ADC.c: 123: }
   404                           
   405                           
   406                           ;SC8F577X_ADC.c: 124: else
   407                           ;SC8F577X_ADC.c: 125: {
   408                           ;SC8F577X_ADC.c: 126: ADCON1 = 0B00000110;
   409  0027  3006               	movlw	6
   410  0028                     L2:	
   411  0028  1683               	bsf	3,5	;RP0=1, select bank1
   412  0029  009C               	movwf	28	;volatile
   413  002A                     l1513:	
   414                           
   415                           ;SC8F577X_ADC.c: 127: }
   416                           ;SC8F577X_ADC.c: 129: CHS4 = 0;
   417  002A  131C               	bcf	28,6	;volatile
   418                           
   419                           ;SC8F577X_ADC.c: 130: if(ADCchannel >=16)
   420  002B  3010               	movlw	16
   421  002C  1283               	bcf	3,5	;RP0=0, select bank0
   422  002D  0223               	subwf	Read_ADC@ADCchannel,w
   423  002E  1C03               	skipc
   424  002F  2834               	goto	l901
   425                           
   426                           ;SC8F577X_ADC.c: 131: {
   427                           ;SC8F577X_ADC.c: 132: ADCchannel -= 16;
   428  0030  3010               	movlw	16
   429  0031  02A3               	subwf	Read_ADC@ADCchannel,f
   430                           
   431                           ;SC8F577X_ADC.c: 133: CHS4 = 1;
   432  0032  1683               	bsf	3,5	;RP0=1, select bank1
   433  0033  171C               	bsf	28,6	;volatile
   434  0034                     l901:	
   435                           
   436                           ;SC8F577X_ADC.c: 134: }
   437                           ;SC8F577X_ADC.c: 136: ADCON0 &= 0b11000011;
   438  0034  30C3               	movlw	195
   439  0035  1683               	bsf	3,5	;RP0=1, select bank1
   440  0036  059D               	andwf	29,f	;volatile
   441                           
   442                           ;SC8F577X_ADC.c: 137: ADCON0 |= ADCchannel<<2;
   443  0037  1283               	bcf	3,5	;RP0=0, select bank0
   444  0038  0823               	movf	Read_ADC@ADCchannel,w
   445  0039  00F4               	movwf	??_Read_ADC
   446  003A  3001               	movlw	1
   447  003B  1003               	clrc
   448  003C                     L1:	
   449  003C  0DF4               	rlf	??_Read_ADC,f
   450  003D  3EFF               	addlw	-1
   451  003E  1003               	clrc
   452  003F  1D03               	skipz
   453  0040  283C               	goto	L1
   454  0041  0D74               	rlf	??_Read_ADC,w
   455  0042  1683               	bsf	3,5	;RP0=1, select bank1
   456  0043  049D               	iorwf	29,f	;volatile
   457  0044  0000               	nop	;# 
   458                           
   459                           ;SC8F577X_ADC.c: 139: GODONE = 1;
   460  0045  1683               	bsf	3,5	;RP0=1, select bank1
   461  0046  1303               	bcf	3,6	;RP1=0, select bank1
   462  0047  149D               	bsf	29,1	;volatile
   463                           
   464                           ;SC8F577X_ADC.c: 140: while(GODONE==1&&i>0)
   465  0048  284F               	goto	l1523
   466  0049                     l1525:	
   467  0049  1283               	bcf	3,5	;RP0=0, select bank0
   468  004A  0820               	movf	Read_ADC@i,w
   469  004B  1903               	btfsc	3,2
   470  004C  2853               	goto	l1527
   471                           
   472                           ;SC8F577X_ADC.c: 141: {
   473                           ;SC8F577X_ADC.c: 142: i--;
   474  004D  03A0               	decf	Read_ADC@i,f
   475  004E  0000               	nop	;# 
   476  004F                     l1523:	
   477  004F  1683               	bsf	3,5	;RP0=1, select bank1
   478  0050  1303               	bcf	3,6	;RP1=0, select bank1
   479  0051  189D               	btfsc	29,1	;volatile
   480  0052  2849               	goto	l1525
   481  0053                     l1527:	
   482                           
   483                           ;SC8F577X_ADC.c: 144: }
   484                           ;SC8F577X_ADC.c: 145: Adc_Result = ADRESH<<4;
   485  0053  1683               	bsf	3,5	;RP0=1, select bank1
   486  0054  081E               	movf	30,w	;volatile
   487  0055  1283               	bcf	3,5	;RP0=0, select bank0
   488  0056  00A1               	movwf	Read_ADC@Adc_Result
   489  0057  30F0               	movlw	240
   490  0058  01A2               	clrf	Read_ADC@Adc_Result+1
   491  0059  0EA1               	swapf	Read_ADC@Adc_Result,f
   492  005A  0EA2               	swapf	Read_ADC@Adc_Result+1,f
   493  005B  05A2               	andwf	Read_ADC@Adc_Result+1,f
   494  005C  0821               	movf	Read_ADC@Adc_Result,w
   495  005D  390F               	andlw	15
   496  005E  04A2               	iorwf	Read_ADC@Adc_Result+1,f
   497  005F  30F0               	movlw	240
   498  0060  05A1               	andwf	Read_ADC@Adc_Result,f
   499                           
   500                           ;SC8F577X_ADC.c: 146: Adc_Result += ADRESL>>4;
   501  0061  1683               	bsf	3,5	;RP0=1, select bank1
   502  0062  0E1F               	swapf	31,w	;volatile
   503  0063  390F               	andlw	15
   504  0064  1283               	bcf	3,5	;RP0=0, select bank0
   505  0065  07A1               	addwf	Read_ADC@Adc_Result,f
   506  0066  1803               	skipnc
   507  0067  0AA2               	incf	Read_ADC@Adc_Result+1,f
   508                           
   509                           ;SC8F577X_ADC.c: 148: return Adc_Result;
   510  0068  0822               	movf	Read_ADC@Adc_Result+1,w
   511  0069  00F3               	movwf	?_Read_ADC+1
   512  006A  0821               	movf	Read_ADC@Adc_Result,w
   513  006B  00F2               	movwf	?_Read_ADC
   514  006C  0008               	return
   515  006D                     __end_of_Read_ADC:	
   516                           
   517                           	psect	text2
   518  00C9                     __ptext2:	
   519 ;; *************** function _DelayXms *****************
   520 ;; Defined at:
   521 ;;		line 23 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_ADC_Timer_Demo\SC8F577X
      +_ADC.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  x               1    wreg     unsigned char 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  x               1    2[COMMON] unsigned char 
   526 ;;  j               1    4[COMMON] unsigned char 
   527 ;;  i               1    3[COMMON] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, status,2, status,0
   532 ;; Tracked objects:
   533 ;;		On entry : 300/100
   534 ;;		On exit  : 300/100
   535 ;;		Unchanged: 300/0
   536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   537 ;;      Params:         0       0       0       0
   538 ;;      Locals:         3       0       0       0
   539 ;;      Temps:          0       0       0       0
   540 ;;      Totals:         3       0       0       0
   541 ;;Total ram usage:        3 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           
   552                           ;psect for function _DelayXms
   553  00C9                     _DelayXms:	
   554                           
   555                           ;incstack = 0
   556                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   557                           ;DelayXms@x stored from wreg
   558  00C9  00F2               	movwf	DelayXms@x
   559                           
   560                           ;SC8F577X_ADC.c: 25: unsigned char i,j;
   561                           ;SC8F577X_ADC.c: 26: for(i=x;i>0;i--)
   562  00CA  00F3               	movwf	DelayXms@i
   563  00CB                     l1401:	
   564  00CB  0873               	movf	DelayXms@i,w
   565  00CC  1903               	btfsc	3,2
   566  00CD  0008               	return
   567                           
   568                           ;SC8F577X_ADC.c: 27: for(j=153;j>0;j--);
   569  00CE  3099               	movlw	153
   570  00CF  00F4               	movwf	DelayXms@j
   571  00D0                     l1411:	
   572  00D0  0BF4               	decfsz	DelayXms@j,f
   573  00D1  28D0               	goto	l1411
   574  00D2  03F3               	decf	DelayXms@i,f
   575  00D3  28CB               	goto	l1401
   576  00D4                     __end_of_DelayXms:	
   577                           
   578                           	psect	text3
   579  00B2                     __ptext3:	
   580 ;; *************** function _Timer0_Isr *****************
   581 ;; Defined at:
   582 ;;		line 79 in file "H:\MyDownloads\ËµÃ÷Êé&²âÊÔ±¨¸æ\¿ª·¢°ü\SC8F577X¿ª·¢°ü\SC8F577X_DEMO\SC8F577X_ADC_Timer_Demo\SC8F577X
      +_ADC.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 300/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   596 ;;      Params:         0       0       0       0
   597 ;;      Locals:         0       0       0       0
   598 ;;      Temps:          2       0       0       0
   599 ;;      Totals:         2       0       0       0
   600 ;;Total ram usage:        2 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		Interrupt level 1
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           
   610                           ;psect for function _Timer0_Isr
   611  00B2                     _Timer0_Isr:	
   612                           
   613                           ;SC8F577X_ADC.c: 82: if(T0IF)
   614  00B2  1D0B               	btfss	11,2	;volatile
   615  00B3  28BB               	goto	i1l1393
   616                           
   617                           ;SC8F577X_ADC.c: 83: {
   618                           ;SC8F577X_ADC.c: 84: TMR0 += 6;
   619  00B4  3006               	movlw	6
   620  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   621  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   622  00B7  0781               	addwf	1,f	;volatile
   623                           
   624                           ;SC8F577X_ADC.c: 85: T0IF = 0;
   625  00B8  110B               	bcf	11,2	;volatile
   626                           
   627                           ;SC8F577X_ADC.c: 87: RB6 = ~RB6;
   628  00B9  3040               	movlw	64
   629  00BA  0686               	xorwf	6,f
   630  00BB                     i1l1393:	
   631                           
   632                           ;SC8F577X_ADC.c: 89: }
   633                           ;SC8F577X_ADC.c: 91: if(TMR2IF)
   634  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   635  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   636  00BD  1C8C               	btfss	12,1	;volatile
   637  00BE  28C2               	goto	i1l894
   638                           
   639                           ;SC8F577X_ADC.c: 92: {
   640                           ;SC8F577X_ADC.c: 94: TMR2IF = 0;
   641  00BF  108C               	bcf	12,1	;volatile
   642                           
   643                           ;SC8F577X_ADC.c: 95: RB5 = ~RB5;
   644  00C0  3020               	movlw	32
   645  00C1  0686               	xorwf	6,f
   646  00C2                     i1l894:	
   647  00C2  0871               	movf	??_Timer0_Isr+1,w
   648  00C3  008A               	movwf	10
   649  00C4  0E70               	swapf	??_Timer0_Isr^(0+-128),w
   650  00C5  0083               	movwf	3
   651  00C6  0EFE               	swapf	126,f
   652  00C7  0E7E               	swapf	126,w
   653  00C8  0009               	retfie
   654  00C9                     __end_of_Timer0_Isr:	
   655  007E                     btemp	set	126	;btemp
   656  007E                     wtemp0	set	126
   657                           
   658                           	psect	intentry
   659  0004                     __pintentry:	
   660                           ;incstack = 0
   661                           ; Regs used in _Timer0_Isr: [wreg+status,2+status,0]
   662                           
   663  0004                     interrupt_function:	
   664  007E                     saved_w	set	btemp
   665  0004  00FE               	movwf	btemp
   666  0005  0E03               	swapf	3,w
   667  0006  00F0               	movwf	??_Timer0_Isr
   668  0007  080A               	movf	10,w
   669  0008  00F1               	movwf	??_Timer0_Isr+1
   670  0009  118A  28B2         	ljmp	_Timer0_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      4       6
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms
    _main->_Read_ADC

Critical Paths under _Timer0_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Read_ADC

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Timer0_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     480
                           _DelayXms
                           _Read_ADC
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             7     5      2     366
                                              2 COMMON     3     1      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0     114
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer0_Isr                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Read_ADC

 _Timer0_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      4       6       4        7.5%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       F       8        0.0%
DATA                 0      0       F       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 22 14:15:33 2021

                    l901 0034                      l884 0093                      _GIE 005F  
                    _RB5 0035                      _RB6 0036                      _PR2 0091  
                   l1401 00CB                     l1411 00D0                     l1511 0027  
                   l1513 002A                     l1523 004F                     l1507 0023  
                   l1525 0049                     l1527 0053                     _ADON 04E8  
                   _CHS4 04E6                     _T0IE 005D                     _T0IF 005A  
                   _PEIE 005E                     _INTF 0059                     _TMR0 0001  
                   _TMR2 0011                     _main 006D                     btemp 007E  
                   start 000B                    ?_main 0070                    _T2CON 0012  
                  i1l894 00C2                    pclath 000A                    status 0003  
     Read_ADC@ADCchannel 0023                    wtemp0 007E         __end_of_DelayXms 00D4  
        __initialization 000D             __end_of_main 00B2         __end_of_Read_ADC 006D  
                 ??_main 0075                   _ADCON0 009D                   _ADCON1 009C  
                 _ADRESH 009E                   _ADRESL 009F                   _GODONE 04E9  
                 i1l1393 00BB                   _INTCON 000B                   _OSCCON 0088  
                 _TMR2IE 0069                   _TMR2IF 0061                   _TMR2ON 0092  
                 _TRISB5 0435                   _TRISB6 0436               _Timer0_Isr 00B2  
                 _result 0077                   saved_w 007E  __end_of__initialization 0015  
         __pcstackCOMMON 0070                ?_DelayXms 0070       Read_ADC@Adc_Result 0021  
             __pbssBANK0 0024                ?_Read_ADC 0072              ?_Timer0_Isr 0070  
             __pmaintext 006D               __pintentry 0004               ??_DelayXms 0072  
             ??_Read_ADC 0074                  __ptext0 0000                  __ptext1 0018  
                __ptext2 00C9                  __ptext3 00B2                  _result1 0075  
                _result2 0024      __size_of_Timer0_Isr 0017     end_of_initialization 0015  
              DelayXms@i 0073                DelayXms@j 0074                DelayXms@x 0072  
              Read_ADC@i 0020        Read_ADC@ADCLDORef 0072      start_initialization 000D  
      __size_of_DelayXms 000B        __size_of_Read_ADC 0055             ??_Timer0_Isr 0070  
            __pbssCOMMON 0075                ___latbits 0001            __pcstackBANK0 0020  
     __end_of_Timer0_Isr 00C9        interrupt_function 0004                 _DelayXms 00C9  
               _Read_ADC 0018            __size_of_main 0045                 intlevel1 0000  
             _OPTION_REG 0081  
