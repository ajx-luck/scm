---- H:\MyDownloads\说明书&测试报告\开发包\SC8F577X开发包\SC8F577X_DEMO\SC8F577X_IIC_Slave_Demo\main.c ----------------------------------------------------------------------
1:                /**********************************************************
2:                
3:                **********************************************************/
4:                
5:                #include <sc.h>
6:                
7:                
8:                
9:                volatile unsigned int   result,result1,result2;
10:               
11:               
12:               
13:               /***********************************************************
14:               main主函数
15:               ***********************************************************/
16:               
17:               #include <sc.h>
18:               
19:               
20:               #define  SLAVE_ADRSS   0xa0
21:               
22:                
23:               void Init_System();
24:               
25:               volatile unsigned char IICReadData;
26:               
27:               void main()
28:               {
29:               	Init_System();
  0042    118A    CLRB	0xA,3
  0043    202F    CALL	0x2F
  0044    118A    CLRB	0xA,3
30:               	TRISA |=  0b00000011;  //RA0 RA1输入态，做IIC 引脚
  0045    3003    LDIA	0x3
  0046    1683    SETB	0x3,5
  0047    0485    ORR	0x5
31:               	
32:               	IICCON =  0B00100001;  // IIC 使能  从机模式
  0048    3021    LDIA	0x21
  0049    1283    CLRB	0x3,5
  004A    1703    SETB	0x3,6
  004B    008C    LD	0xC,A
33:               	
34:                   IICADD = 0xa0;          // 
  004C    30A0    LDIA	0xA0
  004D    0089    LD	0x9,A
35:               	IICIE =1;
  004E    1608    SETB	0x8,4
36:               	PEIE =1;
  004F    170B    SETB	0xB,6
37:                   GIE =1;	
  0050    178B    SETB	0xB,7
38:               
39:               
40:               	while(1)
41:               	{
  0051    2851    JP	0x51
42:               
43:               	}
44:               }
45:               
46:               
47:               
48:               /***********************************************
49:               函数名称：Init_System
50:               函数功能：系统初始化
51:               入口参数：无
52:               出口参数：无
53:               备注：
54:               ************************************************/
55:               void Init_System()
  002F    0000    NOP
  0030    0064    CLRWDT
56:               {
57:               	asm("nop");
58:               	asm("clrwdt");
59:               	INTCON = 0;					//系统初始化
  0031    018B    CLR	0xB
60:               	OSCCON = 0X70;				//配置振荡为16M,关 WDT
  0032    3070    LDIA	0x70
  0033    1683    SETB	0x3,5
  0034    1303    CLRB	0x3,6
  0035    0088    LD	0x8,A
61:               	OPTION_REG = 0;
  0036    0181    CLR	0x1
62:               	
63:                   WPUA  = 0B00000000;			//初始化上拉
  0037    1283    CLRB	0x3,5
  0038    0187    CLR	0x7
64:                   WPUB  = 0B00001000;			
  0039    3008    LDIA	0x8
  003A    0088    LD	0x8,A
65:                 
66:                
67:               	TRISA = 0B00000000;			//初始化IO状态
  003B    1683    SETB	0x3,5
  003C    0185    CLR	0x5
68:               	TRISB = 0B00001000;
  003D    0086    LD	0x6,A
69:               
70:               	PORTA = 0B00000000;
  003E    1283    CLRB	0x3,5
  003F    0185    CLR	0x5
71:               	PORTB = 0B00000000;			//初始化输出
  0040    0186    CLR	0x6
  0041    0008    RET
72:               
73:               }
74:               
75:               /***********************************************
76:               函数名称：IIC_Isr
77:               函数功能：IIC中断服务
78:               入口参数：无
79:               出口参数：无
80:               备注：
81:               ************************************************/
82:               void interrupt IIC_Isr()
83:               {
84:               	
85:               	if(IICIF==1)
  0017    1283    CLRB	0x3,5
  0018    1703    SETB	0x3,6
  0019    1E07    SNZB	0x7,4
  001A    2828    JP	0x28
86:               	{
87:               		IICIF =0;
  001B    1207    CLRB	0x7,4
88:               	
89:               		
90:               		if(RW==1)   //发送数据
  001C    1D0F    SNZB	0xF,2
  001D    2821    JP	0x21
91:               		{
92:               			IICBUF = 0x55;
  001E    3055    LDIA	0x55
  001F    008E    LD	0xE,A
93:               		}
  0020    2827    JP	0x27
94:               		else
95:               		{
96:               			if(DA==0)  //地址匹配
  0021    1A8F    SZB	0xF,5
  0022    2825    JP	0x25
97:               			{
98:               				IICBUF;
  0023    080E    LD	A,0xE
99:               				
100:              			}
  0024    2827    JP	0x27
101:              			else
102:              			{
103:              				
104:              			  IICReadData = IICBUF;  //接收数据
  0025    080E    LD	A,0xE
  0026    00F6    LD	0x76,A
105:              			}
106:              		}
107:              			
108:              		
109:              		
110:              		IICCKP =1;
  0027    160C    SETB	0xC,4
  0028    0878    LD	A,0x78
  0029    008A    LD	0xA,A
  002A    0E77    SWAPA	0x77
  002B    0083    LD	0x3,A
  002C    0EFE    SWAPR	0x7E
  002D    0E7E    SWAPA	0x7E
  002E    0009    RETI
111:              	
112:              	}
113:              }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    280B    JP	0xB
  000B    118A    CLRB	0xA,3
  000C    280D    JP	0xD
---- start_initialization ------------------------------------------------------------------
  000D    01F0    CLR	0x70
  000E    01F1    CLR	0x71
  000F    01F2    CLR	0x72
  0010    01F3    CLR	0x73
  0011    01F4    CLR	0x74
  0012    01F5    CLR	0x75
  0013    01F6    CLR	0x76
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F7    LD	0x77,A
  0007    080A    LD	A,0xA
  0008    00F8    LD	0x78,A
  0009    118A    CLRB	0xA,3
  000A    2817    JP	0x17
---- common_function ------------------------------------------------------------------
  0014    0183    CLR	0x3
  0015    118A    CLRB	0xA,3
  0016    2842    JP	0x42
