

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 22 17:46:21 2021

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F5773
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	pa_nodes0,global,class=CODE,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.45
    17                           ; Generated 16/11/2017 GMT
    18                           ; 
    19                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	text0
    52  0000                     __ptext0:	
    53  000B                     _INTCON	set	11
    54  0008                     _WPUB	set	8
    55  0007                     _WPUA	set	7
    56  0006                     _PORTB	set	6
    57  0005                     _PORTA	set	5
    58  006B                     _SPIIE	set	107
    59  0063                     _SPIIF	set	99
    60  0058                     _RBIF	set	88
    61  005E                     _PEIE	set	94
    62  005F                     _GIE	set	95
    63  0088                     _OSCCON	set	136
    64  0086                     _TRISB	set	134
    65  0085                     _TRISA	set	133
    66  0081                     _OPTION_REG	set	129
    67  011E                     _SPICON2	set	286
    68  011D                     _SPICON	set	285
    69  011C                     _SPIBUF	set	284
    70                           
    71                           	psect	cinit
    72  000D                     start_initialization:	
    73                           ; #config settings
    74                           
    75  000D                     __initialization:	
    76                           
    77                           ; Clear objects allocated to COMMON
    78  000D  01F0               	clrf	__pbssCOMMON& (0+127)
    79  000E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    80  000F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    81  0010  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    82  0011  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    83  0012  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    84  0013  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    85  0014  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
    86  0015  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
    87  0016                     end_of_initialization:	
    88                           ;End of C runtime variable initialization code
    89                           
    90  0016                     __end_of__initialization:	
    91  0016  0183               	clrf	3
    92  0017  118A  2819         	ljmp	_main	;jump to C main() function
    93                           
    94                           	psect	bssCOMMON
    95  0070                     __pbssCOMMON:	
    96  0070                     _result2:	
    97  0070                     	ds	2
    98  0072                     _result1:	
    99  0072                     	ds	2
   100  0074                     _result:	
   101  0074                     	ds	2
   102  0076                     _IICReadData:	
   103  0076                     	ds	1
   104  0077                     _SendBuffer:	
   105  0077                     	ds	1
   106  0078                     _ReceBuffer:	
   107  0078                     	ds	1
   108                           
   109                           	psect	cstackCOMMON
   110  0079                     __pcstackCOMMON:	
   111  0079                     ?_Init_System:	
   112  0079                     ?_DelayXms:	
   113                           ; 1 bytes @ 0x0
   114                           
   115  0079                     ?_main:	
   116                           ; 1 bytes @ 0x0
   117                           
   118  0079                     ?_PB_Isr:	
   119                           ; 1 bytes @ 0x0
   120                           
   121  0079                     ??_PB_Isr:	
   122                           ; 1 bytes @ 0x0
   123                           
   124                           
   125                           ; 1 bytes @ 0x0
   126  0079                     	ds	2
   127  007B                     ??_Init_System:	
   128  007B                     ??_DelayXms:	
   129                           ; 1 bytes @ 0x2
   130                           
   131  007B                     DelayXms@x:	
   132                           ; 1 bytes @ 0x2
   133                           
   134                           
   135                           ; 1 bytes @ 0x2
   136  007B                     	ds	1
   137  007C                     DelayXms@i:	
   138                           
   139                           ; 1 bytes @ 0x3
   140  007C                     	ds	1
   141  007D                     DelayXms@j:	
   142                           
   143                           ; 1 bytes @ 0x4
   144  007D                     	ds	1
   145  007E                     ??_main:	
   146                           
   147                           	psect	maintext
   148  0019                     __pmaintext:	
   149                           ; 1 bytes @ 0x5
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 38 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F577X开发包\SC8F577X_DEMO\SC8F577X_SPI_slave_Demo\main.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;		None
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2, status,0, pclath, cstack
   164 ;; Tracked objects:
   165 ;;		On entry : B00/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   169 ;;      Params:         0       0       0       0
   170 ;;      Locals:         0       0       0       0
   171 ;;      Temps:          0       0       0       0
   172 ;;      Totals:         0       0       0       0
   173 ;;Total ram usage:        0 bytes
   174 ;; Hardware stack levels required when called:    2
   175 ;; This function calls:
   176 ;;		_DelayXms
   177 ;;		_Init_System
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           
   184                           ;psect for function _main
   185  0019                     _main:	
   186                           
   187                           ;main.c: 40: Init_System();
   188                           
   189                           ;incstack = 0
   190                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   191  0019  118A  202E  118A   	fcall	_Init_System
   192                           
   193                           ;main.c: 42: TRISA |= 0b00000011;
   194  001C  3003               	movlw	3
   195  001D  1683               	bsf	3,5	;RP0=1, select bank1
   196  001E  0485               	iorwf	5,f	;volatile
   197                           
   198                           ;main.c: 43: SPICON = 0B00100100;
   199  001F  3024               	movlw	36
   200  0020  1283               	bcf	3,5	;RP0=0, select bank2
   201  0021  1703               	bsf	3,6	;RP1=1, select bank2
   202  0022  009D               	movwf	29	;volatile
   203                           
   204                           ;main.c: 44: SPICON2 = 0B00000000;
   205  0023  019E               	clrf	30	;volatile
   206                           
   207                           ;main.c: 46: SPIIF =0;
   208  0024  1303               	bcf	3,6	;RP1=0, select bank0
   209  0025  118C               	bcf	12,3	;volatile
   210                           
   211                           ;main.c: 47: SPIIE=1;
   212  0026  158D               	bsf	13,3	;volatile
   213                           
   214                           ;main.c: 48: PEIE =1;
   215  0027  170B               	bsf	11,6	;volatile
   216                           
   217                           ;main.c: 49: GIE =1;
   218  0028  178B               	bsf	11,7	;volatile
   219  0029                     l1333:	
   220                           
   221                           ;main.c: 52: {
   222                           ;main.c: 53: DelayXms(200);
   223  0029  30C8               	movlw	200
   224  002A  118A  2055  118A   	fcall	_DelayXms
   225  002D  2829               	goto	l1333
   226  002E                     __end_of_main:	
   227                           
   228                           	psect	text1
   229  002E                     __ptext1:	
   230 ;; *************** function _Init_System *****************
   231 ;; Defined at:
   232 ;;		line 67 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F577X开发包\SC8F577X_DEMO\SC8F577X_SPI_slave_Demo\main.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;		None
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2
   241 ;; Tracked objects:
   242 ;;		On entry : B00/0
   243 ;;		On exit  : 300/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   246 ;;      Params:         0       0       0       0
   247 ;;      Locals:         0       0       0       0
   248 ;;      Temps:          0       0       0       0
   249 ;;      Totals:         0       0       0       0
   250 ;;Total ram usage:        0 bytes
   251 ;; Hardware stack levels used:    1
   252 ;; Hardware stack levels required when called:    1
   253 ;; This function calls:
   254 ;;		Nothing
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           
   261                           ;psect for function _Init_System
   262  002E                     _Init_System:	
   263                           
   264                           ;incstack = 0
   265                           ; Regs used in _Init_System: [wreg+status,2]
   266  002E  0000               	nop	;# 
   267  002F  0064               	clrwdt	;# 
   268                           
   269                           ;main.c: 71: INTCON = 0;
   270  0030  018B               	clrf	11	;volatile
   271                           
   272                           ;main.c: 72: OSCCON = 0X70;
   273  0031  3070               	movlw	112
   274  0032  1683               	bsf	3,5	;RP0=1, select bank1
   275  0033  1303               	bcf	3,6	;RP1=0, select bank1
   276  0034  0088               	movwf	8	;volatile
   277                           
   278                           ;main.c: 73: OPTION_REG = 0;
   279  0035  0181               	clrf	1	;volatile
   280                           
   281                           ;main.c: 75: WPUA = 0B00000000;
   282  0036  1283               	bcf	3,5	;RP0=0, select bank0
   283  0037  0187               	clrf	7	;volatile
   284                           
   285                           ;main.c: 76: WPUB = 0B00001000;
   286  0038  3008               	movlw	8
   287  0039  0088               	movwf	8	;volatile
   288                           
   289                           ;main.c: 79: TRISA = 0B00000000;
   290  003A  1683               	bsf	3,5	;RP0=1, select bank1
   291  003B  0185               	clrf	5	;volatile
   292                           
   293                           ;main.c: 80: TRISB = 0B00110100;
   294  003C  3034               	movlw	52
   295  003D  0086               	movwf	6	;volatile
   296                           
   297                           ;main.c: 82: PORTA = 0B00000000;
   298  003E  1283               	bcf	3,5	;RP0=0, select bank0
   299  003F  0185               	clrf	5	;volatile
   300                           
   301                           ;main.c: 83: PORTB = 0B00000000;
   302  0040  0186               	clrf	6	;volatile
   303  0041  0008               	return
   304  0042                     __end_of_Init_System:	
   305                           
   306                           	psect	text2
   307  0055                     __ptext2:	
   308 ;; *************** function _DelayXms *****************
   309 ;; Defined at:
   310 ;;		line 24 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F577X开发包\SC8F577X_DEMO\SC8F577X_SPI_slave_Demo\main.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;  x               1    wreg     unsigned char 
   313 ;; Auto vars:     Size  Location     Type
   314 ;;  x               1    2[COMMON] unsigned char 
   315 ;;  j               1    4[COMMON] unsigned char 
   316 ;;  i               1    3[COMMON] unsigned char 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   326 ;;      Params:         0       0       0       0
   327 ;;      Locals:         3       0       0       0
   328 ;;      Temps:          0       0       0       0
   329 ;;      Totals:         3       0       0       0
   330 ;;Total ram usage:        3 bytes
   331 ;; Hardware stack levels used:    1
   332 ;; Hardware stack levels required when called:    1
   333 ;; This function calls:
   334 ;;		Nothing
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           
   341                           ;psect for function _DelayXms
   342  0055                     _DelayXms:	
   343                           
   344                           ;incstack = 0
   345                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   346                           ;DelayXms@x stored from wreg
   347  0055  00FB               	movwf	DelayXms@x
   348                           
   349                           ;main.c: 26: unsigned char i,j;
   350                           ;main.c: 27: for(i=x;i>0;i--)
   351  0056  00FC               	movwf	DelayXms@i
   352  0057                     l1281:	
   353  0057  087C               	movf	DelayXms@i,w
   354  0058  1903               	btfsc	3,2
   355  0059  0008               	return
   356                           
   357                           ;main.c: 28: for(j=153;j>0;j--);
   358  005A  3099               	movlw	153
   359  005B  00FD               	movwf	DelayXms@j
   360  005C                     l1291:	
   361  005C  0BFD               	decfsz	DelayXms@j,f
   362  005D  285C               	goto	l1291
   363  005E  03FC               	decf	DelayXms@i,f
   364  005F  2857               	goto	l1281
   365  0060                     __end_of_DelayXms:	
   366                           
   367                           	psect	text3
   368  0042                     __ptext3:	
   369 ;; *************** function _PB_Isr *****************
   370 ;; Defined at:
   371 ;;		line 94 in file "H:\MyDownloads\说明书&测试报告\开发包\SC8F577X开发包\SC8F577X_DEMO\SC8F577X_SPI_slave_Demo\main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 100/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   385 ;;      Params:         0       0       0       0
   386 ;;      Locals:         0       0       0       0
   387 ;;      Temps:          2       0       0       0
   388 ;;      Totals:         2       0       0       0
   389 ;;Total ram usage:        2 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		Interrupt level 1
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           
   399                           ;psect for function _PB_Isr
   400  0042                     _PB_Isr:	
   401                           
   402                           ;main.c: 96: if(RBIF)
   403  0042  180B               	btfsc	11,0	;volatile
   404                           
   405                           ;main.c: 97: {
   406                           ;main.c: 98: RBIF = 0;
   407  0043  100B               	bcf	11,0	;volatile
   408                           
   409                           ;main.c: 101: }
   410                           ;main.c: 103: if(SPIIF==1)
   411  0044  1283               	bcf	3,5	;RP0=0, select bank0
   412  0045  1303               	bcf	3,6	;RP1=0, select bank0
   413  0046  1D8C               	btfss	12,3	;volatile
   414  0047  284E               	goto	i1l903
   415                           
   416                           ;main.c: 104: {
   417                           ;main.c: 105: SPIIF = 0;
   418  0048  118C               	bcf	12,3	;volatile
   419                           
   420                           ;main.c: 107: ReceBuffer = SPIBUF;
   421  0049  1703               	bsf	3,6	;RP1=1, select bank2
   422  004A  081C               	movf	28,w	;volatile
   423  004B  00F8               	movwf	_ReceBuffer	;volatile
   424                           
   425                           ;main.c: 110: SPIBUF =0x11;
   426  004C  3011               	movlw	17
   427  004D  009C               	movwf	28	;volatile
   428  004E                     i1l903:	
   429  004E  087A               	movf	??_PB_Isr+1,w
   430  004F  008A               	movwf	10
   431  0050  0E79               	swapf	??_PB_Isr^(0+-128),w
   432  0051  0083               	movwf	3
   433  0052  0EFE               	swapf	126,f
   434  0053  0E7E               	swapf	126,w
   435  0054  0009               	retfie
   436  0055                     __end_of_PB_Isr:	
   437  007E                     btemp	set	126	;btemp
   438  007E                     wtemp0	set	126
   439                           
   440                           	psect	intentry
   441  0004                     __pintentry:	
   442                           ;incstack = 0
   443                           ; Regs used in _PB_Isr: [wreg]
   444                           
   445  0004                     interrupt_function:	
   446  007E                     saved_w	set	btemp
   447  0004  00FE               	movwf	btemp
   448  0005  0E03               	swapf	3,w
   449  0006  00F9               	movwf	??_PB_Isr
   450  0007  080A               	movf	10,w
   451  0008  00FA               	movwf	??_PB_Isr+1
   452  0009  118A  2842         	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PB_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
                           _DelayXms
                        _Init_System
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0      75
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _PB_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Init_System

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       E       8        0.0%
DATA                 0      0       E       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 22 17:46:21 2021

                    _GIE 005F                     l1333 0029                     l1281 0057  
                   l1291 005C                     _PEIE 005E                     _RBIF 0058  
                   _WPUA 0007                     _WPUB 0008                     _main 0019  
                   btemp 007E                     start 000B            ??_Init_System 007B  
                  ?_main 0079                    i1l903 004E                    _PORTA 0005  
                  _PORTB 0006                    _SPIIE 006B                    _SPIIF 0063  
                  _TRISA 0085                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E         __end_of_DelayXms 0060  
        __initialization 000D             __end_of_main 002E               _ReceBuffer 0078  
                 ??_main 007E      __end_of_Init_System 0042               _SendBuffer 0077  
                 _INTCON 000B                   _OSCCON 0088                   _PB_Isr 0042  
                 _SPIBUF 011C                   _SPICON 011D                   _result 0074  
                 saved_w 007E  __end_of__initialization 0016           __pcstackCOMMON 0079  
            _Init_System 002E                ?_DelayXms 0079                  ?_PB_Isr 0079  
             __pmaintext 0019               __pintentry 0004               ??_DelayXms 007B  
                _SPICON2 011E          __size_of_PB_Isr 0013                  __ptext0 0000  
                __ptext1 002E                  __ptext2 0055                  __ptext3 0042  
                _result1 0072                  _result2 0070     end_of_initialization 0016  
              DelayXms@i 007C                DelayXms@j 007D                DelayXms@x 007B  
         __end_of_PB_Isr 0055             ?_Init_System 0079      start_initialization 000D  
      __size_of_DelayXms 000B                 ??_PB_Isr 0079              __pbssCOMMON 0070  
              ___latbits 0001        interrupt_function 0004              _IICReadData 0076  
   __size_of_Init_System 0014                 _DelayXms 0055            __size_of_main 0015  
               intlevel1 0000               _OPTION_REG 0081  
