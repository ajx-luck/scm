

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Dec 16 09:02:19 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8F5772
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	pa_nodes0,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 1.45
    19                           ; Generated 16/11/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	text0
    54  0000                     __ptext0:	
    55  000B                     _INTCON	set	11
    56  0008                     _WPUB	set	8
    57  0007                     _WPUA	set	7
    58  0006                     _PORTB	set	6
    59  0005                     _PORTA	set	5
    60  0058                     _RBIF	set	88
    61  0036                     _RB6	set	54
    62  0088                     _OSCCON	set	136
    63  0086                     _TRISB	set	134
    64  0085                     _TRISA	set	133
    65  0081                     _OPTION_REG	set	129
    66  010E                     _IICBUF	set	270
    67  010C                     _IICCON	set	268
    68  0109                     _IICADD	set	265
    69  0868                     _SEN	set	2152
    70  0869                     _RSEN	set	2153
    71  086A                     _PEN	set	2154
    72  086B                     _RCEN	set	2155
    73  083C                     _IICIF	set	2108
    74                           
    75                           	psect	cinit
    76  000D                     start_initialization:	
    77                           ; #config settings
    78                           
    79  000D                     __initialization:	
    80                           
    81                           ; Clear objects allocated to COMMON
    82  000D  01F0               	clrf	__pbssCOMMON& (0+127)
    83  000E  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
    84  000F  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
    85  0010  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
    86  0011  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
    87  0012  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
    88  0013  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
    89  0014                     end_of_initialization:	
    90                           ;End of C runtime variable initialization code
    91                           
    92  0014                     __end_of__initialization:	
    93  0014  0183               	clrf	3
    94  0015  118A  283C         	ljmp	_main	;jump to C main() function
    95                           
    96                           	psect	bssCOMMON
    97  0070                     __pbssCOMMON:	
    98  0070                     _result2:	
    99  0070                     	ds	2
   100  0072                     _result1:	
   101  0072                     	ds	2
   102  0074                     _result:	
   103  0074                     	ds	2
   104  0076                     _IICReadData:	
   105  0076                     	ds	1
   106                           
   107                           	psect	cstackCOMMON
   108  0077                     __pcstackCOMMON:	
   109  0077                     ?_Init_System:	
   110  0077                     ?_DelayXms:	
   111                           ; 1 bytes @ 0x0
   112                           
   113  0077                     ?_main:	
   114                           ; 1 bytes @ 0x0
   115                           
   116  0077                     ?_PB_Isr:	
   117                           ; 1 bytes @ 0x0
   118                           
   119  0077                     ??_PB_Isr:	
   120                           ; 1 bytes @ 0x0
   121                           
   122                           
   123                           ; 1 bytes @ 0x0
   124  0077                     	ds	2
   125  0079                     ??_Init_System:	
   126  0079                     ??_DelayXms:	
   127                           ; 1 bytes @ 0x2
   128                           
   129  0079                     ?_Write_IIC:	
   130                           ; 1 bytes @ 0x2
   131                           
   132  0079                     ?_Read_IIC:	
   133                           ; 1 bytes @ 0x2
   134                           
   135  0079                     DelayXms@x:	
   136                           ; 1 bytes @ 0x2
   137                           
   138  0079                     Write_IIC@data:	
   139                           ; 1 bytes @ 0x2
   140                           
   141  0079                     Read_IIC@data:	
   142                           ; 1 bytes @ 0x2
   143                           
   144                           
   145                           ; 1 bytes @ 0x2
   146  0079                     	ds	1
   147  007A                     ??_Write_IIC:	
   148  007A                     ??_Read_IIC:	
   149                           ; 1 bytes @ 0x3
   150                           
   151  007A                     DelayXms@i:	
   152                           ; 1 bytes @ 0x3
   153                           
   154  007A                     Write_IIC@Adress:	
   155                           ; 1 bytes @ 0x3
   156                           
   157  007A                     Read_IIC@ReadData:	
   158                           ; 1 bytes @ 0x3
   159                           
   160                           
   161                           ; 1 bytes @ 0x3
   162  007A                     	ds	1
   163  007B                     DelayXms@j:	
   164  007B                     Read_IIC@Adress:	
   165                           ; 1 bytes @ 0x4
   166                           
   167                           
   168                           ; 1 bytes @ 0x4
   169  007B                     	ds	1
   170  007C                     ??_main:	
   171                           
   172                           	psect	maintext
   173  003C                     __pmaintext:	
   174                           ; 1 bytes @ 0x5
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 105 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;		None
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2, status,0, pclath, cstack
   189 ;; Tracked objects:
   190 ;;		On entry : B00/0
   191 ;;		On exit  : 300/200
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   194 ;;      Params:         0       0       0       0
   195 ;;      Locals:         0       0       0       0
   196 ;;      Temps:          0       0       0       0
   197 ;;      Totals:         0       0       0       0
   198 ;;Total ram usage:        0 bytes
   199 ;; Hardware stack levels required when called:    2
   200 ;; This function calls:
   201 ;;		_DelayXms
   202 ;;		_Init_System
   203 ;;		_Read_IIC
   204 ;;		_Write_IIC
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           
   211                           ;psect for function _main
   212  003C                     _main:	
   213                           
   214                           ;main.c: 107: Init_System();
   215                           
   216                           ;incstack = 0
   217                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   218  003C  118A  2075  118A   	fcall	_Init_System
   219                           
   220                           ;main.c: 108: TRISA |= 0b00000011;
   221  003F  3003               	movlw	3
   222  0040  1683               	bsf	3,5	;RP0=1, select bank1
   223  0041  0485               	iorwf	5,f	;volatile
   224                           
   225                           ;main.c: 109: IICCON = 0B00100000;
   226  0042  3020               	movlw	32
   227  0043  1283               	bcf	3,5	;RP0=0, select bank2
   228  0044  1703               	bsf	3,6	;RP1=1, select bank2
   229  0045  008C               	movwf	12	;volatile
   230                           
   231                           ;main.c: 110: IICADD = 159;
   232  0046  309F               	movlw	159
   233  0047  0089               	movwf	9	;volatile
   234                           
   235                           ;main.c: 113: Write_IIC(0xa0,5);
   236  0048  3005               	movlw	5
   237  0049  00F9               	movwf	Write_IIC@data
   238  004A  30A0               	movlw	160
   239  004B  118A  2060  118A   	fcall	_Write_IIC
   240  004E                     l1369:	
   241                           
   242                           ;main.c: 116: {
   243                           ;main.c: 117: DelayXms(200);
   244  004E  30C8               	movlw	200
   245  004F  118A  2096  118A   	fcall	_DelayXms
   246                           
   247                           ;main.c: 118: Write_IIC(0xa0,0x80);
   248  0052  3080               	movlw	128
   249  0053  00F9               	movwf	Write_IIC@data
   250  0054  30A0               	movlw	160
   251  0055  118A  2060  118A   	fcall	_Write_IIC
   252                           
   253                           ;main.c: 120: IICReadData = Read_IIC(0xa0,0x80);
   254  0058  3080               	movlw	128
   255  0059  00F9               	movwf	Read_IIC@data
   256  005A  30A0               	movlw	160
   257  005B  118A  2017  118A   	fcall	_Read_IIC
   258  005E  00F6               	movwf	_IICReadData	;volatile
   259  005F  284E               	goto	l1369
   260  0060                     __end_of_main:	
   261                           
   262                           	psect	text1
   263  0060                     __ptext1:	
   264 ;; *************** function _Write_IIC *****************
   265 ;; Defined at:
   266 ;;		line 45 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;  Adress          1    wreg     unsigned char 
   269 ;;  data            1    2[COMMON] unsigned char 
   270 ;; Auto vars:     Size  Location     Type
   271 ;;  Adress          1    3[COMMON] unsigned char 
   272 ;; Return value:  Size  Location     Type
   273 ;;                  1    wreg      void 
   274 ;; Registers used:
   275 ;;		wreg
   276 ;; Tracked objects:
   277 ;;		On entry : 100/200
   278 ;;		On exit  : 300/200
   279 ;;		Unchanged: 0/0
   280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   281 ;;      Params:         1       0       0       0
   282 ;;      Locals:         1       0       0       0
   283 ;;      Temps:          0       0       0       0
   284 ;;      Totals:         2       0       0       0
   285 ;;Total ram usage:        2 bytes
   286 ;; Hardware stack levels used:    1
   287 ;; Hardware stack levels required when called:    1
   288 ;; This function calls:
   289 ;;		Nothing
   290 ;; This function is called by:
   291 ;;		_main
   292 ;; This function uses a non-reentrant model
   293 ;;
   294                           
   295                           
   296                           ;psect for function _Write_IIC
   297  0060                     _Write_IIC:	
   298                           
   299                           ;incstack = 0
   300                           ; Regs used in _Write_IIC: [wreg]
   301                           ;Write_IIC@Adress stored from wreg
   302  0060  00FA               	movwf	Write_IIC@Adress
   303                           
   304                           ;main.c: 47: SEN =1;
   305  0061  1703               	bsf	3,6	;RP1=1, select bank2
   306  0062  140D               	bsf	13,0	;volatile
   307  0063                     l824:	
   308                           ;main.c: 48: while(IICIF==0);
   309                           
   310  0063  1E07               	btfss	7,4	;volatile
   311  0064  2863               	goto	l824
   312                           
   313                           ;main.c: 49: IICIF = 0;
   314  0065  1207               	bcf	7,4	;volatile
   315                           
   316                           ;main.c: 50: IICBUF = Adress;
   317  0066  087A               	movf	Write_IIC@Adress,w
   318  0067  008E               	movwf	14	;volatile
   319  0068                     l827:	
   320                           ;main.c: 51: while(IICIF==0);
   321                           
   322  0068  1E07               	btfss	7,4	;volatile
   323  0069  2868               	goto	l827
   324                           
   325                           ;main.c: 52: IICIF = 0;
   326  006A  1207               	bcf	7,4	;volatile
   327                           
   328                           ;main.c: 53: IICBUF = data;
   329  006B  0879               	movf	Write_IIC@data,w
   330  006C  008E               	movwf	14	;volatile
   331  006D                     l830:	
   332                           ;main.c: 54: while(IICIF==0);
   333                           
   334  006D  1E07               	btfss	7,4	;volatile
   335  006E  286D               	goto	l830
   336                           
   337                           ;main.c: 55: IICIF = 0;
   338  006F  1207               	bcf	7,4	;volatile
   339                           
   340                           ;main.c: 56: PEN =1;
   341  0070  150D               	bsf	13,2	;volatile
   342  0071                     l833:	
   343                           ;main.c: 57: while(IICIF==0);
   344                           
   345  0071  1E07               	btfss	7,4	;volatile
   346  0072  2871               	goto	l833
   347                           
   348                           ;main.c: 58: IICIF = 0;
   349  0073  1207               	bcf	7,4	;volatile
   350  0074  0008               	return
   351  0075                     __end_of_Write_IIC:	
   352                           
   353                           	psect	text2
   354  0017                     __ptext2:	
   355 ;; *************** function _Read_IIC *****************
   356 ;; Defined at:
   357 ;;		line 68 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;  Adress          1    wreg     unsigned char 
   360 ;;  data            1    2[COMMON] unsigned char 
   361 ;; Auto vars:     Size  Location     Type
   362 ;;  Adress          1    4[COMMON] unsigned char 
   363 ;;  ReadData        1    3[COMMON] unsigned char 
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      unsigned char 
   366 ;; Registers used:
   367 ;;		wreg, status,2, status,0
   368 ;; Tracked objects:
   369 ;;		On entry : 300/200
   370 ;;		On exit  : 300/200
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   373 ;;      Params:         1       0       0       0
   374 ;;      Locals:         2       0       0       0
   375 ;;      Temps:          0       0       0       0
   376 ;;      Totals:         3       0       0       0
   377 ;;Total ram usage:        3 bytes
   378 ;; Hardware stack levels used:    1
   379 ;; Hardware stack levels required when called:    1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		_main
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           
   388                           ;psect for function _Read_IIC
   389  0017                     _Read_IIC:	
   390                           
   391                           ;incstack = 0
   392                           ; Regs used in _Read_IIC: [wreg+status,2+status,0]
   393                           ;Read_IIC@Adress stored from wreg
   394  0017  00FB               	movwf	Read_IIC@Adress
   395                           
   396                           ;main.c: 70: unsigned char ReadData;
   397                           ;main.c: 72: SEN =1;
   398  0018  140D               	bsf	13,0	;volatile
   399  0019                     l839:	
   400                           ;main.c: 73: while(IICIF==0);
   401                           
   402  0019  1E07               	btfss	7,4	;volatile
   403  001A  2819               	goto	l839
   404                           
   405                           ;main.c: 74: IICIF = 0;
   406  001B  1207               	bcf	7,4	;volatile
   407                           
   408                           ;main.c: 75: IICBUF = Adress;
   409  001C  087B               	movf	Read_IIC@Adress,w
   410  001D  008E               	movwf	14	;volatile
   411  001E                     l842:	
   412                           ;main.c: 76: while(IICIF==0);
   413                           
   414  001E  1E07               	btfss	7,4	;volatile
   415  001F  281E               	goto	l842
   416                           
   417                           ;main.c: 78: IICIF = 0;
   418  0020  1207               	bcf	7,4	;volatile
   419                           
   420                           ;main.c: 79: IICBUF = data;
   421  0021  0879               	movf	Read_IIC@data,w
   422  0022  008E               	movwf	14	;volatile
   423  0023                     l845:	
   424                           ;main.c: 80: while(IICIF==0);
   425                           
   426  0023  1E07               	btfss	7,4	;volatile
   427  0024  2823               	goto	l845
   428                           
   429                           ;main.c: 81: IICIF = 0;
   430  0025  1207               	bcf	7,4	;volatile
   431                           
   432                           ;main.c: 83: RSEN =1;
   433  0026  148D               	bsf	13,1	;volatile
   434  0027                     l848:	
   435                           ;main.c: 84: while(IICIF==0);
   436                           
   437  0027  1E07               	btfss	7,4	;volatile
   438  0028  2827               	goto	l848
   439                           
   440                           ;main.c: 86: IICIF = 0;
   441  0029  1207               	bcf	7,4	;volatile
   442                           
   443                           ;main.c: 88: IICBUF = Adress+1;
   444  002A  087B               	movf	Read_IIC@Adress,w
   445  002B  3E01               	addlw	1
   446  002C  008E               	movwf	14	;volatile
   447  002D                     l851:	
   448                           ;main.c: 89: while(IICIF==0);
   449                           
   450  002D  1E07               	btfss	7,4	;volatile
   451  002E  282D               	goto	l851
   452                           
   453                           ;main.c: 90: IICIF = 0;
   454  002F  1207               	bcf	7,4	;volatile
   455                           
   456                           ;main.c: 91: RCEN = 1;
   457  0030  158D               	bsf	13,3	;volatile
   458  0031                     l854:	
   459                           ;main.c: 92: while(IICIF==0);
   460                           
   461  0031  1E07               	btfss	7,4	;volatile
   462  0032  2831               	goto	l854
   463                           
   464                           ;main.c: 93: IICIF = 0;
   465  0033  1207               	bcf	7,4	;volatile
   466                           
   467                           ;main.c: 94: ReadData = IICBUF;
   468  0034  080E               	movf	14,w	;volatile
   469  0035  00FA               	movwf	Read_IIC@ReadData
   470                           
   471                           ;main.c: 96: PEN =1;
   472  0036  150D               	bsf	13,2	;volatile
   473  0037                     l857:	
   474                           ;main.c: 97: while(IICIF==0);
   475                           
   476  0037  1E07               	btfss	7,4	;volatile
   477  0038  2837               	goto	l857
   478                           
   479                           ;main.c: 98: IICIF = 0;
   480  0039  1207               	bcf	7,4	;volatile
   481                           
   482                           ;main.c: 100: return ReadData;
   483  003A  087A               	movf	Read_IIC@ReadData,w
   484  003B  0008               	return
   485  003C                     __end_of_Read_IIC:	
   486                           
   487                           	psect	text3
   488  0075                     __ptext3:	
   489 ;; *************** function _Init_System *****************
   490 ;; Defined at:
   491 ;;		line 133 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 300/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   505 ;;      Params:         0       0       0       0
   506 ;;      Locals:         0       0       0       0
   507 ;;      Temps:          0       0       0       0
   508 ;;      Totals:         0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    1
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_main
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _Init_System
   521  0075                     _Init_System:	
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _Init_System: [wreg+status,2]
   525  0075  0000               	nop	;# 
   526  0076  0064               	clrwdt	;# 
   527                           
   528                           ;main.c: 137: INTCON = 0;
   529  0077  018B               	clrf	11	;volatile
   530                           
   531                           ;main.c: 138: OSCCON = 0X70;
   532  0078  3070               	movlw	112
   533  0079  1683               	bsf	3,5	;RP0=1, select bank1
   534  007A  1303               	bcf	3,6	;RP1=0, select bank1
   535  007B  0088               	movwf	8	;volatile
   536                           
   537                           ;main.c: 139: OPTION_REG = 0;
   538  007C  0181               	clrf	1	;volatile
   539                           
   540                           ;main.c: 141: WPUA = 0B00000000;
   541  007D  1283               	bcf	3,5	;RP0=0, select bank0
   542  007E  0187               	clrf	7	;volatile
   543                           
   544                           ;main.c: 142: WPUB = 0B00001000;
   545  007F  3008               	movlw	8
   546  0080  0088               	movwf	8	;volatile
   547                           
   548                           ;main.c: 145: TRISA = 0B00000000;
   549  0081  1683               	bsf	3,5	;RP0=1, select bank1
   550  0082  0185               	clrf	5	;volatile
   551                           
   552                           ;main.c: 146: TRISB = 0B00001000;
   553  0083  0086               	movwf	6	;volatile
   554                           
   555                           ;main.c: 148: PORTA = 0B00000000;
   556  0084  1283               	bcf	3,5	;RP0=0, select bank0
   557  0085  0185               	clrf	5	;volatile
   558                           
   559                           ;main.c: 149: PORTB = 0B00000000;
   560  0086  0186               	clrf	6	;volatile
   561  0087  0008               	return
   562  0088                     __end_of_Init_System:	
   563                           
   564                           	psect	text4
   565  0096                     __ptext4:	
   566 ;; *************** function _DelayXms *****************
   567 ;; Defined at:
   568 ;;		line 22 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  x               1    wreg     unsigned char 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  x               1    2[COMMON] unsigned char 
   573 ;;  j               1    4[COMMON] unsigned char 
   574 ;;  i               1    3[COMMON] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, status,2, status,0
   579 ;; Tracked objects:
   580 ;;		On entry : 100/200
   581 ;;		On exit  : 100/0
   582 ;;		Unchanged: 100/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   584 ;;      Params:         0       0       0       0
   585 ;;      Locals:         3       0       0       0
   586 ;;      Temps:          0       0       0       0
   587 ;;      Totals:         3       0       0       0
   588 ;;Total ram usage:        3 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    1
   591 ;; This function calls:
   592 ;;		Nothing
   593 ;; This function is called by:
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           
   599                           ;psect for function _DelayXms
   600  0096                     _DelayXms:	
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   604                           ;DelayXms@x stored from wreg
   605  0096  00F9               	movwf	DelayXms@x
   606                           
   607                           ;main.c: 24: unsigned char i,j;
   608                           ;main.c: 25: for(i=x;i>0;i--)
   609  0097  00FA               	movwf	DelayXms@i
   610  0098                     l1257:	
   611  0098  087A               	movf	DelayXms@i,w
   612  0099  1903               	btfsc	3,2
   613  009A  0008               	return
   614                           
   615                           ;main.c: 26: for(j=153;j>0;j--);
   616  009B  3099               	movlw	153
   617  009C  00FB               	movwf	DelayXms@j
   618  009D                     l1267:	
   619  009D  0BFB               	decfsz	DelayXms@j,f
   620  009E  289D               	goto	l1267
   621  009F  03FA               	decf	DelayXms@i,f
   622  00A0  2898               	goto	l1257
   623  00A1                     __end_of_DelayXms:	
   624                           
   625                           	psect	text5
   626  0088                     __ptext5:	
   627 ;; *************** function _PB_Isr *****************
   628 ;; Defined at:
   629 ;;		line 160 in file "E:\CMS_WORK\democode\SC8F577X_DEMO\SC8F577X_IIC_Master_Demo\main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   643 ;;      Params:         0       0       0       0
   644 ;;      Locals:         0       0       0       0
   645 ;;      Temps:          2       0       0       0
   646 ;;      Totals:         2       0       0       0
   647 ;;Total ram usage:        2 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		Interrupt level 1
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _PB_Isr
   658  0088                     _PB_Isr:	
   659                           
   660                           ;main.c: 162: if(RBIF)
   661  0088  1C0B               	btfss	11,0	;volatile
   662  0089  288F               	goto	i1l879
   663                           
   664                           ;main.c: 163: {
   665                           ;main.c: 164: RBIF = 0;
   666  008A  100B               	bcf	11,0	;volatile
   667                           
   668                           ;main.c: 165: RB6 = ~RB6;
   669  008B  3040               	movlw	64
   670  008C  1283               	bcf	3,5	;RP0=0, select bank0
   671  008D  1303               	bcf	3,6	;RP1=0, select bank0
   672  008E  0686               	xorwf	6,f
   673  008F                     i1l879:	
   674  008F  0878               	movf	??_PB_Isr+1,w
   675  0090  008A               	movwf	10
   676  0091  0E77               	swapf	??_PB_Isr^(0+-128),w
   677  0092  0083               	movwf	3
   678  0093  0EFE               	swapf	126,f
   679  0094  0E7E               	swapf	126,w
   680  0095  0009               	retfie
   681  0096                     __end_of_PB_Isr:	
   682  007E                     btemp	set	126	;btemp
   683  007E                     wtemp0	set	126
   684                           
   685                           	psect	intentry
   686  0004                     __pintentry:	
   687                           ;incstack = 0
   688                           ; Regs used in _PB_Isr: [wreg]
   689                           
   690  0004                     interrupt_function:	
   691  007E                     saved_w	set	btemp
   692  0004  00FE               	movwf	btemp
   693  0005  0E03               	swapf	3,w
   694  0006  00F7               	movwf	??_PB_Isr
   695  0007  080A               	movf	10,w
   696  0008  00F8               	movwf	??_PB_Isr+1
   697  0009  118A  2888         	ljmp	_PB_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_DelayXms
    _main->_Read_IIC

Critical Paths under _PB_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PB_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PB_Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PB_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     337
                           _DelayXms
                        _Init_System
                           _Read_IIC
                          _Write_IIC
 ---------------------------------------------------------------------------------
 (1) _Write_IIC                                            2     1      1     130
                                              2 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Read_IIC                                             3     2      1     132
                                              2 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0      75
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _PB_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayXms
   _Init_System
   _Read_IIC
   _Write_IIC

 _PB_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BITBANK1            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BANK1               50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       C       8        0.0%
DATA                 0      0       C       9        0.0%
BITBANK2            50      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Dec 16 09:02:19 2019

                    l830 006D                      l824 0063                      l833 0071  
                    l842 001E                      l851 002D                      l827 0068  
                    l845 0023                      l854 0031                      l839 0019  
                    l848 0027                      l857 0037                      _RB6 0036  
                    _PEN 086A                      _SEN 0868                     l1257 0098  
                   l1267 009D                     l1369 004E                     _RBIF 0058  
                   _RCEN 086B                     _RSEN 0869                     _WPUA 0007  
                   _WPUB 0008                     _main 003C                     btemp 007E  
                   start 000B            ??_Init_System 0079                    ?_main 0077  
                  _IICIF 083C                    i1l879 008F                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_DelayXms 00A1          __initialization 000D             __end_of_main 0060  
       __end_of_Read_IIC 003C                   ??_main 007C      __end_of_Init_System 0088  
           Read_IIC@data 0079                   _IICADD 0109                   _IICCON 010C  
                 _IICBUF 010E                   _INTCON 000B                   _OSCCON 0088  
                 _PB_Isr 0088                   _result 0074                   saved_w 007E  
__end_of__initialization 0014       __size_of_Write_IIC 0015           __pcstackCOMMON 0077  
            _Init_System 0075                ?_DelayXms 0077                ?_Read_IIC 0079  
                ?_PB_Isr 0077          Write_IIC@Adress 007A               __pmaintext 003C  
             __pintentry 0004        __end_of_Write_IIC 0075               ??_DelayXms 0079  
             ??_Read_IIC 007A          __size_of_PB_Isr 000E                  __ptext0 0000  
                __ptext1 0060                  __ptext2 0017                  __ptext3 0075  
                __ptext4 0096                  __ptext5 0088                  _result1 0072  
                _result2 0070     end_of_initialization 0014                DelayXms@i 007A  
              DelayXms@j 007B                DelayXms@x 0079           __end_of_PB_Isr 0096  
           ?_Init_System 0077      start_initialization 000D        __size_of_DelayXms 000B  
               ??_PB_Isr 0077            Write_IIC@data 0079        __size_of_Read_IIC 0025  
            __pbssCOMMON 0070                ___latbits 0001                _Write_IIC 0060  
         Read_IIC@Adress 007B               ?_Write_IIC 0079         Read_IIC@ReadData 007A  
      interrupt_function 0004              _IICReadData 0076     __size_of_Init_System 0013  
               _DelayXms 0096                 _Read_IIC 0017              ??_Write_IIC 007A  
          __size_of_main 0024                 intlevel1 0000               _OPTION_REG 0081  
