---- H:\MyDownloads\说明书&测试报告\开发包\SC8F577X开发包\SC8F577X_DEMO\SC8F577X_LVD_Demo\main.c ----------------------------------------------------------------------
1:                /**********************************************************
2:                
3:                **********************************************************/
4:                
5:                #include <sc.h>
6:                
7:                
8:                
9:                /***********************************************************
10:               main主函数
11:               ***********************************************************/
12:               
13:               void Init_System();
14:               
15:               
16:               void main()
17:               {
18:               	Init_System();
  0025    118A    CLRB	0xA,3
  0026    2010    CALL	0x10
  0027    118A    CLRB	0xA,3
19:               	LVDIE =1;  //开启LVD中断
  0028    1703    SETB	0x3,6
  0029    1408    SETB	0x8,0
20:               	LVDCON = 0b00000111;  // 3V LVD 
  002A    3007    LDIA	0x7
  002B    009F    LD	0x1F,A
  002C    282F    JP	0x2F
21:               
22:               	while(1)
23:               	{
24:               		asm("clrwdt");
25:               		if(LVD_RES==0)  //VDD高于3V
  0030    1283    CLRB	0x3,5
  0031    1703    SETB	0x3,6
  0032    1F9F    SNZB	0x1F,7
  0033    282D    JP	0x2D
26:               		{
27:               			RB6=1;
  002D    1303    CLRB	0x3,6
  002E    1706    SETB	0x6,6
28:               		}
  002F    0064    CLRWDT
29:               		else
30:               		{
31:               			RB6=0;	
  0034    1303    CLRB	0x3,6
  0035    1306    CLRB	0x6,6
  0036    282F    JP	0x2F
32:               		}
33:               	
34:               	}
35:               }
36:               
37:               
38:               
39:               
40:               /***********************************************
41:               函数名称：Init_System
42:               函数功能：系统初始化
43:               入口参数：无
44:               出口参数：无
45:               备注：
46:               ************************************************/
47:               void Init_System()
  0010    0000    NOP
  0011    0064    CLRWDT
48:               {
49:               	asm("nop");
50:               	asm("clrwdt");
51:               	INTCON = 0;					//系统初始化
  0012    018B    CLR	0xB
52:               	OSCCON = 0X72;				//配置振荡为8M,开 WDT
  0013    3072    LDIA	0x72
  0014    1683    SETB	0x3,5
  0015    1303    CLRB	0x3,6
  0016    0088    LD	0x8,A
53:               	OPTION_REG = 0;
  0017    0181    CLR	0x1
54:               	
55:                   WPUA  = 0B00000000;			
  0018    1283    CLRB	0x3,5
  0019    0187    CLR	0x7
56:                   WPUB  = 0B00001000;			//初始化RB3上拉
  001A    3008    LDIA	0x8
  001B    0088    LD	0x8,A
57:                 
58:                
59:               	TRISA = 0B00000000;			//初始化IO状态
  001C    1683    SETB	0x3,5
  001D    0185    CLR	0x5
60:               	TRISB = 0B00001000;
  001E    0086    LD	0x6,A
61:               
62:               	PORTA = 0B00000000;
  001F    1283    CLRB	0x3,5
  0020    0185    CLR	0x5
63:               	PORTB = 0B00000000;			//初始化输出
  0021    0186    CLR	0x6
64:               		
65:               	PEIE =1;
  0022    170B    SETB	0xB,6
66:               	GIE = 1;					//
  0023    178B    SETB	0xB,7
  0024    0008    RET
67:               
68:               }
69:               
70:               /***********************************************
71:               函数名称：LVD_Isr
72:               函数功能：PB电平变化中断服务
73:               入口参数：无
74:               出口参数：无
75:               备注：
76:               ************************************************/
77:               void interrupt LVD_Isr()
78:               {
79:               	
80:               	if(LVDIF==1)    //LVD 中断清中断标志
  0037    1283    CLRB	0x3,5
  0038    1703    SETB	0x3,6
  0039    1C07    SNZB	0x7,0
  003A    283E    JP	0x3E
81:               	{
82:               		LVDIF = 0;
  003B    1007    CLRB	0x7,0
83:               		RB6 = 0;	
  003C    1303    CLRB	0x3,6
  003D    1306    CLRB	0x6,6
  003E    0871    LD	A,0x71
  003F    008A    LD	0xA,A
  0040    0E70    SWAPA	0x70
  0041    0083    LD	0x3,A
  0042    0EFE    SWAPR	0x7E
  0043    0E7E    SWAPA	0x7E
  0044    0009    RETI
84:               
85:               	}
86:               
87:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    280B    JP	0xB
  000B    118A    CLRB	0xA,3
  000C    280D    JP	0xD
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    080A    LD	A,0xA
  0008    00F1    LD	0x71,A
  0009    118A    CLRB	0xA,3
  000A    2837    JP	0x37
---- common_function ------------------------------------------------------------------
  000D    0183    CLR	0x3
  000E    118A    CLRB	0xA,3
  000F    2825    JP	0x25
