Version 3.2 HI-TECH Software Intermediate Code
[p mainexit ]
"27 C:\mcuproject\scm\xfx\Z302_1153A_SOP14_\main.c
[v _InitSys `(v ~T0 @X0 0 ef ]
"29
[v _showRGB `(v ~T0 @X0 0 ef ]
"33
[v _chrgCtr `(v ~T0 @X0 0 ef ]
"30
[v _keyCtr `(v ~T0 @X0 0 ef ]
"28
[v _workCtr `(v ~T0 @X0 0 ef ]
"34
[v _gotoSleep `(v ~T0 @X0 0 ef ]
"32
[v _rainbow `(v ~T0 @X0 0 ef ]
"31
[v _keyRead `(uc ~T0 @X0 0 ef1`uc ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"10 C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\SC8P1153.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;SC8P1153.h: 10: volatile unsigned char INDF @0x0000;
"11
[v _TMR0 `Vuc ~T0 @X0 1 e@1 ]
[; ;SC8P1153.h: 11: volatile unsigned char TMR0 @0x0001;
"12
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;SC8P1153.h: 12: volatile unsigned char PCL @0x0002;
"13
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;SC8P1153.h: 13: volatile unsigned char STATUS @0x0003;
"14
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;SC8P1153.h: 14: volatile unsigned char FSR @0x0004;
"15
[v _PORTB `Vuc ~T0 @X0 1 e@5 ]
[; ;SC8P1153.h: 15: volatile unsigned char PORTB @0x0005;
"16
[v _TRISB `Vuc ~T0 @X0 1 e@6 ]
[; ;SC8P1153.h: 16: volatile unsigned char TRISB @0x0006;
"17
[v _OPTION_REG `Vuc ~T0 @X0 1 e@7 ]
[; ;SC8P1153.h: 17: volatile unsigned char OPTION_REG @0x0007;
"18
[v _OSCCON `Vuc ~T0 @X0 1 e@8 ]
[; ;SC8P1153.h: 18: volatile unsigned char OSCCON @0x0008;
"19
[v _INTCON `Vuc ~T0 @X0 1 e@9 ]
[; ;SC8P1153.h: 19: volatile unsigned char INTCON @0x0009;
"20
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;SC8P1153.h: 20: volatile unsigned char PCLATH @0x000A;
"21
[v _PDCONB `Vuc ~T0 @X0 1 e@11 ]
[; ;SC8P1153.h: 21: volatile unsigned char PDCONB @0x000B;
"22
[v _ODCONB `Vuc ~T0 @X0 1 e@12 ]
[; ;SC8P1153.h: 22: volatile unsigned char ODCONB @0x000C;
"23
[v _WPUB `Vuc ~T0 @X0 1 e@13 ]
[; ;SC8P1153.h: 23: volatile unsigned char WPUB @0x000D;
"24
[v _IOCB `Vuc ~T0 @X0 1 e@14 ]
[; ;SC8P1153.h: 24: volatile unsigned char IOCB @0x000E;
"25
[v _TMR0PRD `Vuc ~T0 @X0 1 e@15 ]
[; ;SC8P1153.h: 25: volatile unsigned char TMR0PRD @0x000F;
"26
[v _PWMCTR0 `Vuc ~T0 @X0 1 e@16 ]
[; ;SC8P1153.h: 26: volatile unsigned char PWMCTR0 @0x0010;
"27
[v _PWMCTR1 `Vuc ~T0 @X0 1 e@17 ]
[; ;SC8P1153.h: 27: volatile unsigned char PWMCTR1 @0x0011;
"28
[v _PWMCTR2 `Vuc ~T0 @X0 1 e@18 ]
[; ;SC8P1153.h: 28: volatile unsigned char PWMCTR2 @0x0012;
"29
[v _PWMR `Vuc ~T0 @X0 1 e@19 ]
[; ;SC8P1153.h: 29: volatile unsigned char PWMR @0x0013;
"30
[v _PWM_PRD `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P1153.h: 30: volatile unsigned char PWM_PRD @0x0014;
"31
[v _PWMPRD `Vuc ~T0 @X0 1 e@20 ]
[; ;SC8P1153.h: 31: volatile unsigned char PWMPRD @0x0014;
"34
[v _DTCON `Vuc ~T0 @X0 1 e@21 ]
[; ;SC8P1153.h: 34: volatile unsigned char DTCON @0x0015;
"35
[v _DTREG `Vuc ~T0 @X0 1 e@22 ]
[; ;SC8P1153.h: 35: volatile unsigned char DTREG @0x0016;
"36
[v _PORTA `Vuc ~T0 @X0 1 e@23 ]
[; ;SC8P1153.h: 36: volatile unsigned char PORTA @0x0017;
"37
[v _TRISA `Vuc ~T0 @X0 1 e@24 ]
[; ;SC8P1153.h: 37: volatile unsigned char TRISA @0x0018;
"38
[v _UPDOWNA `Vuc ~T0 @X0 1 e@25 ]
[; ;SC8P1153.h: 38: volatile unsigned char UPDOWNA @0x0019;
"43
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;SC8P1153.h: 43: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"44
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;SC8P1153.h: 44: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"45
[v _ZERO `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P1153.h: 45: volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
"46
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;SC8P1153.h: 46: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"47
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;SC8P1153.h: 47: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"48
[v _CARRY `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P1153.h: 48: volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
"49
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;SC8P1153.h: 49: volatile bit C @ ((unsigned)&STATUS*8)+0;
"52
[v _PB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P1153.h: 52: volatile bit PB7 @ ((unsigned)&PORTB*8)+7;
"53
[v _PB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P1153.h: 53: volatile bit PB6 @ ((unsigned)&PORTB*8)+6;
"54
[v _PB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P1153.h: 54: volatile bit PB5 @ ((unsigned)&PORTB*8)+5;
"55
[v _PB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P1153.h: 55: volatile bit PB4 @ ((unsigned)&PORTB*8)+4;
"56
[v _PB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P1153.h: 56: volatile bit PB3 @ ((unsigned)&PORTB*8)+3;
"57
[v _PB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P1153.h: 57: volatile bit PB2 @ ((unsigned)&PORTB*8)+2;
"58
[v _PB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P1153.h: 58: volatile bit PB1 @ ((unsigned)&PORTB*8)+1;
"59
[v _PB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P1153.h: 59: volatile bit PB0 @ ((unsigned)&PORTB*8)+0;
"62
[v _PORTB7 `Vb ~T0 @X0 1 e@47 ]
[; ;SC8P1153.h: 62: volatile bit PORTB7 @ ((unsigned)&PORTB*8)+7;
"63
[v _PORTB6 `Vb ~T0 @X0 1 e@46 ]
[; ;SC8P1153.h: 63: volatile bit PORTB6 @ ((unsigned)&PORTB*8)+6;
"64
[v _PORTB5 `Vb ~T0 @X0 1 e@45 ]
[; ;SC8P1153.h: 64: volatile bit PORTB5 @ ((unsigned)&PORTB*8)+5;
"65
[v _PORTB4 `Vb ~T0 @X0 1 e@44 ]
[; ;SC8P1153.h: 65: volatile bit PORTB4 @ ((unsigned)&PORTB*8)+4;
"66
[v _PORTB3 `Vb ~T0 @X0 1 e@43 ]
[; ;SC8P1153.h: 66: volatile bit PORTB3 @ ((unsigned)&PORTB*8)+3;
"67
[v _PORTB2 `Vb ~T0 @X0 1 e@42 ]
[; ;SC8P1153.h: 67: volatile bit PORTB2 @ ((unsigned)&PORTB*8)+2;
"68
[v _PORTB1 `Vb ~T0 @X0 1 e@41 ]
[; ;SC8P1153.h: 68: volatile bit PORTB1 @ ((unsigned)&PORTB*8)+1;
"69
[v _PORTB0 `Vb ~T0 @X0 1 e@40 ]
[; ;SC8P1153.h: 69: volatile bit PORTB0 @ ((unsigned)&PORTB*8)+0;
"72
[v _TRISB7 `Vb ~T0 @X0 1 e@55 ]
[; ;SC8P1153.h: 72: volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;
"73
[v _TRISB6 `Vb ~T0 @X0 1 e@54 ]
[; ;SC8P1153.h: 73: volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
"74
[v _TRISB5 `Vb ~T0 @X0 1 e@53 ]
[; ;SC8P1153.h: 74: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"75
[v _TRISB4 `Vb ~T0 @X0 1 e@52 ]
[; ;SC8P1153.h: 75: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"76
[v _TRISB3 `Vb ~T0 @X0 1 e@51 ]
[; ;SC8P1153.h: 76: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"77
[v _TRISB2 `Vb ~T0 @X0 1 e@50 ]
[; ;SC8P1153.h: 77: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"78
[v _TRISB1 `Vb ~T0 @X0 1 e@49 ]
[; ;SC8P1153.h: 78: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"79
[v _TRISB0 `Vb ~T0 @X0 1 e@48 ]
[; ;SC8P1153.h: 79: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"82
[v _XT_EN `Vb ~T0 @X0 1 e@63 ]
[; ;SC8P1153.h: 82: volatile bit XT_EN @ ((unsigned)&OPTION_REG*8)+7;
"83
[v _T0SYNC `Vb ~T0 @X0 1 e@62 ]
[; ;SC8P1153.h: 83: volatile bit T0SYNC @ ((unsigned)&OPTION_REG*8)+6;
"84
[v _T0CS `Vb ~T0 @X0 1 e@61 ]
[; ;SC8P1153.h: 84: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"85
[v _T0SE `Vb ~T0 @X0 1 e@60 ]
[; ;SC8P1153.h: 85: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"86
[v _PSA `Vb ~T0 @X0 1 e@59 ]
[; ;SC8P1153.h: 86: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"87
[v _PS2 `Vb ~T0 @X0 1 e@58 ]
[; ;SC8P1153.h: 87: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"88
[v _PS1 `Vb ~T0 @X0 1 e@57 ]
[; ;SC8P1153.h: 88: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"89
[v _PS0 `Vb ~T0 @X0 1 e@56 ]
[; ;SC8P1153.h: 89: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"92
[v _SWDTEN `Vb ~T0 @X0 1 e@71 ]
[; ;SC8P1153.h: 92: volatile bit SWDTEN @ ((unsigned)&OSCCON*8)+7;
"93
[v _IRCF2 `Vb ~T0 @X0 1 e@70 ]
[; ;SC8P1153.h: 93: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"94
[v _IRCF1 `Vb ~T0 @X0 1 e@69 ]
[; ;SC8P1153.h: 94: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"95
[v _IRCF0 `Vb ~T0 @X0 1 e@68 ]
[; ;SC8P1153.h: 95: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"96
[v _TMR2EN `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P1153.h: 96: volatile bit TMR2EN @ ((unsigned)&OSCCON*8)+0;
"97
[v _TMR0EN `Vb ~T0 @X0 1 e@64 ]
[; ;SC8P1153.h: 97: volatile bit TMR0EN @ ((unsigned)&OSCCON*8)+0;
"100
[v _GIE `Vb ~T0 @X0 1 e@79 ]
[; ;SC8P1153.h: 100: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"101
[v _INTEG `Vb ~T0 @X0 1 e@78 ]
[; ;SC8P1153.h: 101: volatile bit INTEG @ ((unsigned)&INTCON*8)+6;
"102
[v _T0IE `Vb ~T0 @X0 1 e@77 ]
[; ;SC8P1153.h: 102: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"103
[v _INTE `Vb ~T0 @X0 1 e@76 ]
[; ;SC8P1153.h: 103: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"104
[v _RBIE `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P1153.h: 104: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"105
[v _PBIE `Vb ~T0 @X0 1 e@75 ]
[; ;SC8P1153.h: 105: volatile bit PBIE @ ((unsigned)&INTCON*8)+3;
"107
[v _T0IF `Vb ~T0 @X0 1 e@74 ]
[; ;SC8P1153.h: 107: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"108
[v _INTF `Vb ~T0 @X0 1 e@73 ]
[; ;SC8P1153.h: 108: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"109
[v _RBIF `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P1153.h: 109: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"110
[v _PBIF `Vb ~T0 @X0 1 e@72 ]
[; ;SC8P1153.h: 110: volatile bit PBIF @ ((unsigned)&INTCON*8)+0;
"113
[v _PDCONB7 `Vb ~T0 @X0 1 e@95 ]
[; ;SC8P1153.h: 113: volatile bit PDCONB7 @ ((unsigned)&PDCONB*8)+7;
"114
[v _PDCONB6 `Vb ~T0 @X0 1 e@94 ]
[; ;SC8P1153.h: 114: volatile bit PDCONB6 @ ((unsigned)&PDCONB*8)+6;
"115
[v _PDCONB5 `Vb ~T0 @X0 1 e@93 ]
[; ;SC8P1153.h: 115: volatile bit PDCONB5 @ ((unsigned)&PDCONB*8)+5;
"116
[v _PDCONB4 `Vb ~T0 @X0 1 e@92 ]
[; ;SC8P1153.h: 116: volatile bit PDCONB4 @ ((unsigned)&PDCONB*8)+4;
"117
[v _PDCONB2 `Vb ~T0 @X0 1 e@90 ]
[; ;SC8P1153.h: 117: volatile bit PDCONB2 @ ((unsigned)&PDCONB*8)+2;
"118
[v _PDCONB1 `Vb ~T0 @X0 1 e@89 ]
[; ;SC8P1153.h: 118: volatile bit PDCONB1 @ ((unsigned)&PDCONB*8)+1;
"119
[v _PDCONB0 `Vb ~T0 @X0 1 e@88 ]
[; ;SC8P1153.h: 119: volatile bit PDCONB0 @ ((unsigned)&PDCONB*8)+0;
"123
[v _ODCONB7 `Vb ~T0 @X0 1 e@103 ]
[; ;SC8P1153.h: 123: volatile bit ODCONB7 @ ((unsigned)&ODCONB*8)+7;
"124
[v _ODCONB6 `Vb ~T0 @X0 1 e@102 ]
[; ;SC8P1153.h: 124: volatile bit ODCONB6 @ ((unsigned)&ODCONB*8)+6;
"125
[v _ODCONB5 `Vb ~T0 @X0 1 e@101 ]
[; ;SC8P1153.h: 125: volatile bit ODCONB5 @ ((unsigned)&ODCONB*8)+5;
"126
[v _ODCONB4 `Vb ~T0 @X0 1 e@100 ]
[; ;SC8P1153.h: 126: volatile bit ODCONB4 @ ((unsigned)&ODCONB*8)+4;
"127
[v _ODCONB2 `Vb ~T0 @X0 1 e@98 ]
[; ;SC8P1153.h: 127: volatile bit ODCONB2 @ ((unsigned)&ODCONB*8)+2;
"128
[v _ODCONB1 `Vb ~T0 @X0 1 e@97 ]
[; ;SC8P1153.h: 128: volatile bit ODCONB1 @ ((unsigned)&ODCONB*8)+1;
"129
[v _ODCONB0 `Vb ~T0 @X0 1 e@96 ]
[; ;SC8P1153.h: 129: volatile bit ODCONB0 @ ((unsigned)&ODCONB*8)+0;
"132
[v _WPUB7 `Vb ~T0 @X0 1 e@111 ]
[; ;SC8P1153.h: 132: volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;
"133
[v _WPUB6 `Vb ~T0 @X0 1 e@110 ]
[; ;SC8P1153.h: 133: volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
"134
[v _WPUB5 `Vb ~T0 @X0 1 e@109 ]
[; ;SC8P1153.h: 134: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"135
[v _WPUB4 `Vb ~T0 @X0 1 e@108 ]
[; ;SC8P1153.h: 135: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"136
[v _WPUB3 `Vb ~T0 @X0 1 e@107 ]
[; ;SC8P1153.h: 136: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"137
[v _WPUB2 `Vb ~T0 @X0 1 e@106 ]
[; ;SC8P1153.h: 137: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"138
[v _WPUB1 `Vb ~T0 @X0 1 e@105 ]
[; ;SC8P1153.h: 138: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"139
[v _WPUB0 `Vb ~T0 @X0 1 e@104 ]
[; ;SC8P1153.h: 139: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"142
[v _IOCB7 `Vb ~T0 @X0 1 e@119 ]
[; ;SC8P1153.h: 142: volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;
"143
[v _IOCB6 `Vb ~T0 @X0 1 e@118 ]
[; ;SC8P1153.h: 143: volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
"144
[v _IOCB5 `Vb ~T0 @X0 1 e@117 ]
[; ;SC8P1153.h: 144: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"145
[v _IOCB4 `Vb ~T0 @X0 1 e@116 ]
[; ;SC8P1153.h: 145: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"146
[v _IOCB3 `Vb ~T0 @X0 1 e@115 ]
[; ;SC8P1153.h: 146: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"147
[v _IOCB2 `Vb ~T0 @X0 1 e@114 ]
[; ;SC8P1153.h: 147: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"148
[v _IOCB1 `Vb ~T0 @X0 1 e@113 ]
[; ;SC8P1153.h: 148: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"149
[v _IOCB0 `Vb ~T0 @X0 1 e@112 ]
[; ;SC8P1153.h: 149: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"152
[v _PWMR49 `Vb ~T0 @X0 1 e@135 ]
[; ;SC8P1153.h: 152: volatile bit PWMR49 @ ((unsigned)&PWMCTR0*8)+7;
"153
[v _PWMR48 `Vb ~T0 @X0 1 e@134 ]
[; ;SC8P1153.h: 153: volatile bit PWMR48 @ ((unsigned)&PWMCTR0*8)+6;
"154
[v _PWM4EN `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P1153.h: 154: volatile bit PWM4EN @ ((unsigned)&PWMCTR0*8)+4;
"155
[v _PWM3EN `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P1153.h: 155: volatile bit PWM3EN @ ((unsigned)&PWMCTR0*8)+3;
"156
[v _PWM2EN `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P1153.h: 156: volatile bit PWM2EN @ ((unsigned)&PWMCTR0*8)+2;
"157
[v _PWM1EN `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P1153.h: 157: volatile bit PWM1EN @ ((unsigned)&PWMCTR0*8)+1;
"158
[v _PWM0EN `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P1153.h: 158: volatile bit PWM0EN @ ((unsigned)&PWMCTR0*8)+0;
"160
[v _PWMEN4 `Vb ~T0 @X0 1 e@132 ]
[; ;SC8P1153.h: 160: volatile bit PWMEN4 @ ((unsigned)&PWMCTR0*8)+4;
"161
[v _PWMEN3 `Vb ~T0 @X0 1 e@131 ]
[; ;SC8P1153.h: 161: volatile bit PWMEN3 @ ((unsigned)&PWMCTR0*8)+3;
"162
[v _PWMEN2 `Vb ~T0 @X0 1 e@130 ]
[; ;SC8P1153.h: 162: volatile bit PWMEN2 @ ((unsigned)&PWMCTR0*8)+2;
"163
[v _PWMEN1 `Vb ~T0 @X0 1 e@129 ]
[; ;SC8P1153.h: 163: volatile bit PWMEN1 @ ((unsigned)&PWMCTR0*8)+1;
"164
[v _PWMEN0 `Vb ~T0 @X0 1 e@128 ]
[; ;SC8P1153.h: 164: volatile bit PWMEN0 @ ((unsigned)&PWMCTR0*8)+0;
"167
[v _PWMR39 `Vb ~T0 @X0 1 e@143 ]
[; ;SC8P1153.h: 167: volatile bit PWMR39 @ ((unsigned)&PWMCTR1*8)+7;
"168
[v _PWMR38 `Vb ~T0 @X0 1 e@142 ]
[; ;SC8P1153.h: 168: volatile bit PWMR38 @ ((unsigned)&PWMCTR1*8)+6;
"169
[v _PWMR29 `Vb ~T0 @X0 1 e@141 ]
[; ;SC8P1153.h: 169: volatile bit PWMR29 @ ((unsigned)&PWMCTR1*8)+5;
"170
[v _PWMR28 `Vb ~T0 @X0 1 e@140 ]
[; ;SC8P1153.h: 170: volatile bit PWMR28 @ ((unsigned)&PWMCTR1*8)+4;
"171
[v _PWMR19 `Vb ~T0 @X0 1 e@139 ]
[; ;SC8P1153.h: 171: volatile bit PWMR19 @ ((unsigned)&PWMCTR1*8)+3;
"172
[v _PWMR18 `Vb ~T0 @X0 1 e@138 ]
[; ;SC8P1153.h: 172: volatile bit PWMR18 @ ((unsigned)&PWMCTR1*8)+2;
"173
[v _PWMR09 `Vb ~T0 @X0 1 e@137 ]
[; ;SC8P1153.h: 173: volatile bit PWMR09 @ ((unsigned)&PWMCTR1*8)+1;
"174
[v _PWMR08 `Vb ~T0 @X0 1 e@136 ]
[; ;SC8P1153.h: 174: volatile bit PWMR08 @ ((unsigned)&PWMCTR1*8)+0;
"177
[v _PWMPRD9 `Vb ~T0 @X0 1 e@151 ]
[; ;SC8P1153.h: 177: volatile bit PWMPRD9 @ ((unsigned)&PWMCTR2*8)+7;
"178
[v _PWMPRD8 `Vb ~T0 @X0 1 e@150 ]
[; ;SC8P1153.h: 178: volatile bit PWMPRD8 @ ((unsigned)&PWMCTR2*8)+6;
"179
[v _T2CKPS1 `Vb ~T0 @X0 1 e@149 ]
[; ;SC8P1153.h: 179: volatile bit T2CKPS1 @ ((unsigned)&PWMCTR2*8)+5;
"180
[v _T2CKPS0 `Vb ~T0 @X0 1 e@148 ]
[; ;SC8P1153.h: 180: volatile bit T2CKPS0 @ ((unsigned)&PWMCTR2*8)+4;
"181
[v _SEL2 `Vb ~T0 @X0 1 e@146 ]
[; ;SC8P1153.h: 181: volatile bit SEL2 @ ((unsigned)&PWMCTR2*8)+2;
"182
[v _SEL1 `Vb ~T0 @X0 1 e@145 ]
[; ;SC8P1153.h: 182: volatile bit SEL1 @ ((unsigned)&PWMCTR2*8)+1;
"183
[v _SEL0 `Vb ~T0 @X0 1 e@144 ]
[; ;SC8P1153.h: 183: volatile bit SEL0 @ ((unsigned)&PWMCTR2*8)+0;
"185
[v _PWMCK1 `Vb ~T0 @X0 1 e@149 ]
[; ;SC8P1153.h: 185: volatile bit PWMCK1 @ ((unsigned)&PWMCTR2*8)+5;
"186
[v _PWMCK0 `Vb ~T0 @X0 1 e@148 ]
[; ;SC8P1153.h: 186: volatile bit PWMCK0 @ ((unsigned)&PWMCTR2*8)+4;
"187
[v _PWMS2 `Vb ~T0 @X0 1 e@146 ]
[; ;SC8P1153.h: 187: volatile bit PWMS2 @ ((unsigned)&PWMCTR2*8)+2;
"188
[v _PWMS1 `Vb ~T0 @X0 1 e@145 ]
[; ;SC8P1153.h: 188: volatile bit PWMS1 @ ((unsigned)&PWMCTR2*8)+1;
"189
[v _PWMS0 `Vb ~T0 @X0 1 e@144 ]
[; ;SC8P1153.h: 189: volatile bit PWMS0 @ ((unsigned)&PWMCTR2*8)+0;
"193
[v _DTSEL1 `Vb ~T0 @X0 1 e@175 ]
[; ;SC8P1153.h: 193: volatile bit DTSEL1 @ ((unsigned)&DTCON*8)+7;
"194
[v _DTSEL0 `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P1153.h: 194: volatile bit DTSEL0 @ ((unsigned)&DTCON*8)+6;
"195
[v _DTSEL `Vb ~T0 @X0 1 e@174 ]
[; ;SC8P1153.h: 195: volatile bit DTSEL @ ((unsigned)&DTCON*8)+6;
"196
[v _ENDT1 `Vb ~T0 @X0 1 e@171 ]
[; ;SC8P1153.h: 196: volatile bit ENDT1 @ ((unsigned)&DTCON*8)+3;
"197
[v _ENDT0 `Vb ~T0 @X0 1 e@170 ]
[; ;SC8P1153.h: 197: volatile bit ENDT0 @ ((unsigned)&DTCON*8)+2;
"198
[v _ENCM1 `Vb ~T0 @X0 1 e@169 ]
[; ;SC8P1153.h: 198: volatile bit ENCM1 @ ((unsigned)&DTCON*8)+1;
"199
[v _ENCM0 `Vb ~T0 @X0 1 e@168 ]
[; ;SC8P1153.h: 199: volatile bit ENCM0 @ ((unsigned)&DTCON*8)+0;
"202
[v _PA3 `Vb ~T0 @X0 1 e@187 ]
[; ;SC8P1153.h: 202: volatile bit PA3 @ ((unsigned)&PORTA*8)+3;
"203
[v _PA2 `Vb ~T0 @X0 1 e@186 ]
[; ;SC8P1153.h: 203: volatile bit PA2 @ ((unsigned)&PORTA*8)+2;
"204
[v _PA1 `Vb ~T0 @X0 1 e@185 ]
[; ;SC8P1153.h: 204: volatile bit PA1 @ ((unsigned)&PORTA*8)+1;
"205
[v _PA0 `Vb ~T0 @X0 1 e@184 ]
[; ;SC8P1153.h: 205: volatile bit PA0 @ ((unsigned)&PORTA*8)+0;
"208
[v _PORTA3 `Vb ~T0 @X0 1 e@187 ]
[; ;SC8P1153.h: 208: volatile bit PORTA3 @ ((unsigned)&PORTA*8)+3;
"209
[v _PORTA2 `Vb ~T0 @X0 1 e@186 ]
[; ;SC8P1153.h: 209: volatile bit PORTA2 @ ((unsigned)&PORTA*8)+2;
"210
[v _PORTA1 `Vb ~T0 @X0 1 e@185 ]
[; ;SC8P1153.h: 210: volatile bit PORTA1 @ ((unsigned)&PORTA*8)+1;
"211
[v _PORTA0 `Vb ~T0 @X0 1 e@184 ]
[; ;SC8P1153.h: 211: volatile bit PORTA0 @ ((unsigned)&PORTA*8)+0;
"214
[v _TRISA3 `Vb ~T0 @X0 1 e@195 ]
[; ;SC8P1153.h: 214: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"215
[v _TRISA2 `Vb ~T0 @X0 1 e@194 ]
[; ;SC8P1153.h: 215: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"216
[v _TRISA1 `Vb ~T0 @X0 1 e@193 ]
[; ;SC8P1153.h: 216: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"217
[v _TRISA0 `Vb ~T0 @X0 1 e@192 ]
[; ;SC8P1153.h: 217: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"220
[v _WPUA3 `Vb ~T0 @X0 1 e@207 ]
[; ;SC8P1153.h: 220: volatile bit WPUA3 @ ((unsigned)&UPDOWNA*8)+7;
"221
[v _WPUA2 `Vb ~T0 @X0 1 e@206 ]
[; ;SC8P1153.h: 221: volatile bit WPUA2 @ ((unsigned)&UPDOWNA*8)+6;
"222
[v _WPUA1 `Vb ~T0 @X0 1 e@205 ]
[; ;SC8P1153.h: 222: volatile bit WPUA1 @ ((unsigned)&UPDOWNA*8)+5;
"223
[v _WPUA0 `Vb ~T0 @X0 1 e@204 ]
[; ;SC8P1153.h: 223: volatile bit WPUA0 @ ((unsigned)&UPDOWNA*8)+4;
"224
[v _PDCONA3 `Vb ~T0 @X0 1 e@203 ]
[; ;SC8P1153.h: 224: volatile bit PDCONA3 @ ((unsigned)&UPDOWNA*8)+3;
"225
[v _PDCONA2 `Vb ~T0 @X0 1 e@202 ]
[; ;SC8P1153.h: 225: volatile bit PDCONA2 @ ((unsigned)&UPDOWNA*8)+2;
"226
[v _PDCONA1 `Vb ~T0 @X0 1 e@201 ]
[; ;SC8P1153.h: 226: volatile bit PDCONA1 @ ((unsigned)&UPDOWNA*8)+1;
"227
[v _PDCONA0 `Vb ~T0 @X0 1 e@200 ]
[; ;SC8P1153.h: 227: volatile bit PDCONA0 @ ((unsigned)&UPDOWNA*8)+0;
[; ;sc.h: 28: extern void __nop(void);
[; ;sc.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;sc.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;sc.h: 184: extern unsigned char __resetbits;
[; ;sc.h: 185: extern __bit __powerdown;
[; ;sc.h: 186: extern __bit __timeout;
[; ;main.c: 3: typedef unsigned char u8t;
[; ;main.c: 4: typedef unsigned short u16t;
"6 C:\mcuproject\scm\xfx\Z302_1153A_SOP14_\main.c
[v _IntFlag `uc ~T0 @X0 1 e ]
[i _IntFlag
-> -> 0 `i `uc
]
[; ;main.c: 6: u8t IntFlag = 0;
"7
[v _intCount `uc ~T0 @X0 1 e ]
[i _intCount
-> -> 0 `i `uc
]
[; ;main.c: 7: u8t intCount = 0;
"8
[v _colorStep `uc ~T0 @X0 1 e ]
[i _colorStep
-> -> 0 `i `uc
]
[; ;main.c: 8: u8t colorStep = 0;
"9
[v _red `uc ~T0 @X0 1 e ]
[i _red
-> -> 0 `i `uc
]
[; ;main.c: 9: u8t red = 0;
"10
[v _lastRed `uc ~T0 @X0 1 e ]
[i _lastRed
-> -> 0 `i `uc
]
[; ;main.c: 10: u8t lastRed = 0;
"11
[v _green `uc ~T0 @X0 1 e ]
[i _green
-> -> 0 `i `uc
]
[; ;main.c: 11: u8t green = 0;
"12
[v _lastGreen `uc ~T0 @X0 1 e ]
[i _lastGreen
-> -> 0 `i `uc
]
[; ;main.c: 12: u8t lastGreen = 0;
"13
[v _blue `uc ~T0 @X0 1 e ]
[i _blue
-> -> 0 `i `uc
]
[; ;main.c: 13: u8t blue = 0;
"14
[v _lastBlue `uc ~T0 @X0 1 e ]
[i _lastBlue
-> -> 0 `i `uc
]
[; ;main.c: 14: u8t lastBlue = 0;
"15
[v _delayTime `uc ~T0 @X0 1 e ]
[i _delayTime
-> -> 0 `i `uc
]
[; ;main.c: 15: u8t delayTime = 0;
"16
[v _workStep `uc ~T0 @X0 1 e ]
[i _workStep
-> -> 0 `i `uc
]
[; ;main.c: 16: u8t workStep = 0;
"17
[v _waitTime `uc ~T0 @X0 1 e ]
[i _waitTime
-> -> 0 `i `uc
]
[; ;main.c: 17: u8t waitTime = 0;
"18
[v _workTime `uc ~T0 @X0 1 e ]
[i _workTime
-> -> 0 `i `uc
]
[; ;main.c: 18: u8t workTime = 0;
"19
[v _count1s `uc ~T0 @X0 1 e ]
[i _count1s
-> -> 0 `i `uc
]
[; ;main.c: 19: u8t count1s = 0;
"20
[v _ledCount `uc ~T0 @X0 1 e ]
[i _ledCount
-> -> 0 `i `uc
]
[; ;main.c: 20: u8t ledCount = 0;
"21
[v _keyCount `uc ~T0 @X0 1 e ]
[i _keyCount
-> -> 0 `i `uc
]
[; ;main.c: 21: u8t keyCount = 0;
"22
[v _chrgFlag `uc ~T0 @X0 1 e ]
[i _chrgFlag
-> -> 0 `i `uc
]
[; ;main.c: 22: u8t chrgFlag = 0;
"23
[v _chrgFullCount `uc ~T0 @X0 1 e ]
[i _chrgFullCount
-> -> 0 `i `uc
]
[; ;main.c: 23: u8t chrgFullCount = 0;
"24
[v _sleepTime `uc ~T0 @X0 1 e ]
[i _sleepTime
-> -> 0 `i `uc
]
[; ;main.c: 24: u8t sleepTime = 0;
[; ;main.c: 27: void InitSys();
[; ;main.c: 28: void workCtr();
[; ;main.c: 29: void showRGB();
[; ;main.c: 30: void keyCtr();
[; ;main.c: 31: char keyRead(char KeyStatus);
[; ;main.c: 32: void rainbow();
[; ;main.c: 33: void chrgCtr();
[; ;main.c: 34: void gotoSleep();
[v $root$_main `(v ~T0 @X0 0 e ]
"36
[v _main `(v ~T0 @X0 1 ef ]
"37
{
[; ;main.c: 36: void main()
[; ;main.c: 37: {
[e :U _main ]
[f ]
[; ;main.c: 38: InitSys();
"38
[e ( _InitSys ..  ]
[; ;main.c: 39: while(1)
"39
[e :U 3 ]
[; ;main.c: 40: {
"40
{
[; ;main.c: 41: asm("clrwdt");
"41
[; <" clrwdt ;# ">
[; ;main.c: 42: if(workStep == 1)
"42
[e $ ! == -> _workStep `i -> 1 `i 5  ]
[; ;main.c: 43: {
"43
{
[; ;main.c: 44: showRGB();
"44
[e ( _showRGB ..  ]
"45
}
[e :U 5 ]
[; ;main.c: 45: }
[; ;main.c: 46: if(!IntFlag)
"46
[e $ ! ! != -> _IntFlag `i -> -> -> 0 `i `uc `i 6  ]
[; ;main.c: 47: continue;
"47
[e $U 2  ]
[e :U 6 ]
[; ;main.c: 48: IntFlag = 0;
"48
[e = _IntFlag -> -> 0 `i `uc ]
[; ;main.c: 49: chrgCtr();
"49
[e ( _chrgCtr ..  ]
[; ;main.c: 50: if(chrgFlag == 0)
"50
[e $ ! == -> _chrgFlag `i -> 0 `i 7  ]
[; ;main.c: 51: keyCtr();
"51
[e ( _keyCtr ..  ]
[e :U 7 ]
[; ;main.c: 52: workCtr();
"52
[e ( _workCtr ..  ]
[; ;main.c: 53: if((0x10 & PORTB) == 0 && keyCount == 0 && workStep == 0)
"53
[e $ ! && && == & -> 16 `i -> _PORTB `i -> 0 `i == -> _keyCount `i -> 0 `i == -> _workStep `i -> 0 `i 8  ]
[; ;main.c: 54: {
"54
{
[; ;main.c: 55: if(++sleepTime > 200)
"55
[e $ ! > -> =+ _sleepTime -> -> 1 `i `uc `i -> 200 `i 9  ]
[; ;main.c: 56: {
"56
{
[; ;main.c: 57: sleepTime = 0;
"57
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 58: gotoSleep();
"58
[e ( _gotoSleep ..  ]
"59
}
[e :U 9 ]
"60
}
[e :U 8 ]
"61
}
[e :U 2 ]
"39
[e $U 3  ]
[e :U 4 ]
[; ;main.c: 59: }
[; ;main.c: 60: }
[; ;main.c: 61: }
[; ;main.c: 62: }
"62
[e :UE 1 ]
}
"65
[v _gotoSleep `(v ~T0 @X0 1 ef ]
"66
{
[; ;main.c: 65: void gotoSleep()
[; ;main.c: 66: {
[e :U _gotoSleep ]
[f ]
[; ;main.c: 67: sleepTime = 0;
"67
[e = _sleepTime -> -> 0 `i `uc ]
[; ;main.c: 68: RBIE = 1;
"68
[e = _RBIE -> -> 1 `i `b ]
[; ;main.c: 69: GIE = 1;
"69
[e = _GIE -> -> 1 `i `b ]
[; ;main.c: 71: IOCB = 0x18;
"71
[e = _IOCB -> -> 24 `i `uc ]
[; ;main.c: 72: OSCCON = 0X71;
"72
[e = _OSCCON -> -> 113 `i `uc ]
[; ;main.c: 73: PORTA;
"73
[e _PORTA ]
[; ;main.c: 74: PORTB;
"74
[e _PORTB ]
[; ;main.c: 76: asm("clrwdt");
"76
[; <" clrwdt ;# ">
[; ;main.c: 78: asm("sleep");
"78
[; <" sleep ;# ">
[; ;main.c: 80: asm("nop");
"80
[; <" nop ;# ">
[; ;main.c: 81: OSCCON = 0X81;
"81
[e = _OSCCON -> -> 129 `i `uc ]
[; ;main.c: 82: PORTA;
"82
[e _PORTA ]
[; ;main.c: 83: PORTB;
"83
[e _PORTB ]
[; ;main.c: 84: IOCB = 0x00;
"84
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 85: RBIE = 0;
"85
[e = _RBIE -> -> 0 `i `b ]
[; ;main.c: 86: }
"86
[e :UE 10 ]
}
"89
[v _chrgCtr `(v ~T0 @X0 1 ef ]
"90
{
[; ;main.c: 89: void chrgCtr()
[; ;main.c: 90: {
[e :U _chrgCtr ]
[f ]
[; ;main.c: 91: if(0x10 & PORTB)
"91
[e $ ! != & -> 16 `i -> _PORTB `i -> 0 `i 12  ]
[; ;main.c: 92: {
"92
{
[; ;main.c: 94: workStep = 0;
"94
[e = _workStep -> -> 0 `i `uc ]
[; ;main.c: 95: waitTime = 0;
"95
[e = _waitTime -> -> 0 `i `uc ]
[; ;main.c: 96: workTime = 0;
"96
[e = _workTime -> -> 0 `i `uc ]
[; ;main.c: 97: chrgFlag = 1;
"97
[e = _chrgFlag -> -> 1 `i `uc ]
[; ;main.c: 98: if(0x20 & PORTB)
"98
[e $ ! != & -> 32 `i -> _PORTB `i -> 0 `i 13  ]
[; ;main.c: 99: {
"99
{
[; ;main.c: 101: if(++chrgFullCount > 200)
"101
[e $ ! > -> =+ _chrgFullCount -> -> 1 `i `uc `i -> 200 `i 14  ]
[; ;main.c: 102: {
"102
{
[; ;main.c: 103: chrgFullCount = 200;
"103
[e = _chrgFullCount -> -> 200 `i `uc ]
[; ;main.c: 104: PORTA |= 01;
"104
[e =| _PORTA -> -> 1 `i `uc ]
[; ;main.c: 105: PORTB &= 0x7F;
"105
[e =& _PORTB -> -> 127 `i `uc ]
"106
}
[e :U 14 ]
"107
}
[; ;main.c: 106: }
[; ;main.c: 107: }
[e $U 15  ]
"108
[e :U 13 ]
[; ;main.c: 108: else
[; ;main.c: 109: {
"109
{
[; ;main.c: 110: chrgFullCount = 0;
"110
[e = _chrgFullCount -> -> 0 `i `uc ]
[; ;main.c: 112: PORTB |= 0xC3;
"112
[e =| _PORTB -> -> 195 `i `uc ]
[; ;main.c: 113: if(count1s < 50)
"113
[e $ ! < -> _count1s `i -> 50 `i 16  ]
[; ;main.c: 114: {
"114
{
[; ;main.c: 115: PORTA |= 0x01;
"115
[e =| _PORTA -> -> 1 `i `uc ]
"116
}
[; ;main.c: 116: }
[e $U 17  ]
"117
[e :U 16 ]
[; ;main.c: 117: else
[; ;main.c: 118: {
"118
{
[; ;main.c: 119: PORTA &= 0xFE;
"119
[e =& _PORTA -> -> 254 `i `uc ]
"120
}
[e :U 17 ]
"121
}
[e :U 15 ]
"122
}
[; ;main.c: 120: }
[; ;main.c: 121: }
[; ;main.c: 122: }
[e $U 18  ]
"123
[e :U 12 ]
[; ;main.c: 123: else
[; ;main.c: 124: {
"124
{
[; ;main.c: 125: chrgFlag = 0;
"125
[e = _chrgFlag -> -> 0 `i `uc ]
"126
}
[e :U 18 ]
[; ;main.c: 126: }
[; ;main.c: 127: }
"127
[e :UE 11 ]
}
"130
[v _workCtr `(v ~T0 @X0 1 ef ]
"131
{
[; ;main.c: 130: void workCtr()
[; ;main.c: 131: {
[e :U _workCtr ]
[f ]
[; ;main.c: 132: if(workStep == 1)
"132
[e $ ! == -> _workStep `i -> 1 `i 20  ]
[; ;main.c: 133: {
"133
{
[; ;main.c: 134: PORTA |= 0x06;
"134
[e =| _PORTA -> -> 6 `i `uc ]
[; ;main.c: 135: rainbow();
"135
[e ( _rainbow ..  ]
[; ;main.c: 136: if(workTime == 0)
"136
[e $ ! == -> _workTime `i -> 0 `i 21  ]
[; ;main.c: 137: {
"137
{
[; ;main.c: 138: workStep = 2;
"138
[e = _workStep -> -> 2 `i `uc ]
"139
}
[e :U 21 ]
"140
}
[; ;main.c: 139: }
[; ;main.c: 140: }
[e $U 22  ]
"141
[e :U 20 ]
[; ;main.c: 141: else if(workStep == 0)
[e $ ! == -> _workStep `i -> 0 `i 23  ]
[; ;main.c: 142: {
"142
{
[; ;main.c: 143: if(chrgFlag)
"143
[e $ ! != -> _chrgFlag `i -> -> -> 0 `i `uc `i 24  ]
[; ;main.c: 144: {
"144
{
[; ;main.c: 145: PORTA &= 0x01;
"145
[e =& _PORTA -> -> 1 `i `uc ]
[; ;main.c: 146: PORTB |= 0x7F;
"146
[e =| _PORTB -> -> 127 `i `uc ]
"147
}
[; ;main.c: 147: }
[e $U 25  ]
"148
[e :U 24 ]
[; ;main.c: 148: else
[; ;main.c: 149: {
"149
{
[; ;main.c: 150: PORTA = 0x01;
"150
[e = _PORTA -> -> 1 `i `uc ]
[; ;main.c: 151: PORTB = 0xFF;
"151
[e = _PORTB -> -> 255 `i `uc ]
"152
}
[e :U 25 ]
"153
}
[; ;main.c: 152: }
[; ;main.c: 153: }
[e $U 26  ]
"154
[e :U 23 ]
[; ;main.c: 154: else if(workStep == 2)
[e $ ! == -> _workStep `i -> 2 `i 27  ]
[; ;main.c: 155: {
"155
{
[; ;main.c: 156: PORTB = 0xBE;
"156
[e = _PORTB -> -> 190 `i `uc ]
[; ;main.c: 157: PORTA = 0x01;
"157
[e = _PORTA -> -> 1 `i `uc ]
[; ;main.c: 158: if(waitTime == 0)
"158
[e $ ! == -> _waitTime `i -> 0 `i 28  ]
[; ;main.c: 159: {
"159
{
[; ;main.c: 160: workStep = 0;
"160
[e = _workStep -> -> 0 `i `uc ]
"161
}
[e :U 28 ]
"162
}
[e :U 27 ]
"163
[e :U 26 ]
[e :U 22 ]
[; ;main.c: 161: }
[; ;main.c: 162: }
[; ;main.c: 163: }
[e :UE 19 ]
}
"166
[v _showRGB `(v ~T0 @X0 1 ef ]
"167
{
[; ;main.c: 166: void showRGB()
[; ;main.c: 167: {
[e :U _showRGB ]
[f ]
[; ;main.c: 169: if(blue > ledCount)
"169
[e $ ! > -> _blue `i -> _ledCount `i 30  ]
[; ;main.c: 170: {
"170
{
[; ;main.c: 171: PORTB |= 0x41;
"171
[e =| _PORTB -> -> 65 `i `uc ]
"172
}
[; ;main.c: 172: }
[e $U 31  ]
"173
[e :U 30 ]
[; ;main.c: 173: else
[; ;main.c: 174: {
"174
{
[; ;main.c: 175: PORTB &= 0xBE;
"175
[e =& _PORTB -> -> 190 `i `uc ]
"176
}
[e :U 31 ]
[; ;main.c: 176: }
[; ;main.c: 178: if(red > ledCount)
"178
[e $ ! > -> _red `i -> _ledCount `i 32  ]
[; ;main.c: 179: {
"179
{
[; ;main.c: 180: PORTA |= 0x01;
"180
[e =| _PORTA -> -> 1 `i `uc ]
[; ;main.c: 181: PORTB |= 0x04;
"181
[e =| _PORTB -> -> 4 `i `uc ]
"182
}
[; ;main.c: 182: }
[e $U 33  ]
"183
[e :U 32 ]
[; ;main.c: 183: else
[; ;main.c: 184: {
"184
{
[; ;main.c: 185: PORTA &= 0xFE;
"185
[e =& _PORTA -> -> 254 `i `uc ]
[; ;main.c: 186: PORTB &= 0xFB;
"186
[e =& _PORTB -> -> 251 `i `uc ]
"187
}
[e :U 33 ]
[; ;main.c: 187: }
[; ;main.c: 189: if(green > ledCount)
"189
[e $ ! > -> _green `i -> _ledCount `i 34  ]
[; ;main.c: 190: {
"190
{
[; ;main.c: 191: PORTB |= 0x82;
"191
[e =| _PORTB -> -> 130 `i `uc ]
"192
}
[; ;main.c: 192: }
[e $U 35  ]
"193
[e :U 34 ]
[; ;main.c: 193: else
[; ;main.c: 194: {
"194
{
[; ;main.c: 195: PORTB &= 0x7D;
"195
[e =& _PORTB -> -> 125 `i `uc ]
"196
}
[e :U 35 ]
[; ;main.c: 196: }
[; ;main.c: 197: if(++ledCount > 254)
"197
[e $ ! > -> =+ _ledCount -> -> 1 `i `uc `i -> 254 `i 36  ]
[; ;main.c: 198: ledCount = 0;
"198
[e = _ledCount -> -> 0 `i `uc ]
[e :U 36 ]
[; ;main.c: 199: }
"199
[e :UE 29 ]
}
"203
[v _InitSys `(v ~T0 @X0 1 ef ]
"204
{
[; ;main.c: 203: void InitSys()
[; ;main.c: 204: {
[e :U _InitSys ]
[f ]
[; ;main.c: 205: asm("nop");
"205
[; <" nop ;# ">
[; ;main.c: 206: asm("clrwdt");
"206
[; <" clrwdt ;# ">
[; ;main.c: 207: PORTA = 0x01;
"207
[e = _PORTA -> -> 1 `i `uc ]
[; ;main.c: 208: PORTB = 0xFF;
"208
[e = _PORTB -> -> 255 `i `uc ]
[; ;main.c: 209: INTCON = 0;
"209
[e = _INTCON -> -> 0 `i `uc ]
[; ;main.c: 210: OSCCON = 0X71;
"210
[e = _OSCCON -> -> 113 `i `uc ]
[; ;main.c: 211: OPTION_REG = 0x00;
"211
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 212: TMR0 = 155;
"212
[e = _TMR0 -> -> 155 `i `uc ]
[; ;main.c: 213: INTCON = 0xE0;
"213
[e = _INTCON -> -> 224 `i `uc ]
[; ;main.c: 214: TRISA = 0x00;
"214
[e = _TRISA -> -> 0 `i `uc ]
[; ;main.c: 215: TRISB = 0x38;
"215
[e = _TRISB -> -> 56 `i `uc ]
[; ;main.c: 216: PORTA = 0x01;
"216
[e = _PORTA -> -> 1 `i `uc ]
[; ;main.c: 217: PORTB = 0xFF;
"217
[e = _PORTB -> -> 255 `i `uc ]
[; ;main.c: 218: PDCONB = 0x00;
"218
[e = _PDCONB -> -> 0 `i `uc ]
[; ;main.c: 219: WPUB = 0x28;
"219
[e = _WPUB -> -> 40 `i `uc ]
[; ;main.c: 222: }
"222
[e :UE 37 ]
}
"224
[v _keyCtr `(v ~T0 @X0 1 ef ]
"225
{
[; ;main.c: 224: void keyCtr()
[; ;main.c: 225: {
[e :U _keyCtr ]
[f ]
[; ;main.c: 226: PORTB;
"226
[e _PORTB ]
[; ;main.c: 227: if(keyRead(0x08 & (~PORTB)))
"227
[e $ ! != -> ( _keyRead (1 -> & -> 8 `i ~ -> _PORTB `i `uc `i -> -> -> 0 `i `uc `i 39  ]
[; ;main.c: 228: {
"228
{
[; ;main.c: 229: if(workStep == 1)
"229
[e $ ! == -> _workStep `i -> 1 `i 40  ]
[; ;main.c: 230: {
"230
{
[; ;main.c: 231: workStep = 2;
"231
[e = _workStep -> -> 2 `i `uc ]
[; ;main.c: 232: waitTime = 30;
"232
[e = _waitTime -> -> 30 `i `uc ]
"233
}
[; ;main.c: 233: }
[e $U 41  ]
"234
[e :U 40 ]
[; ;main.c: 234: else
[; ;main.c: 235: {
"235
{
[; ;main.c: 236: workStep = 1;
"236
[e = _workStep -> -> 1 `i `uc ]
[; ;main.c: 237: colorStep = 1;
"237
[e = _colorStep -> -> 1 `i `uc ]
[; ;main.c: 238: workTime = 120;
"238
[e = _workTime -> -> 120 `i `uc ]
"239
}
[e :U 41 ]
"240
}
[e :U 39 ]
[; ;main.c: 239: }
[; ;main.c: 240: }
[; ;main.c: 241: }
"241
[e :UE 38 ]
}
"243
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"244
{
[; ;main.c: 243: char keyRead(char KeyStatus)
[; ;main.c: 244: {
[e :U _keyRead ]
"243
[v _KeyStatus `uc ~T0 @X0 1 r1 ]
"244
[f ]
[; ;main.c: 245: if (KeyStatus)
"245
[e $ ! != -> _KeyStatus `i -> -> -> 0 `i `uc `i 43  ]
[; ;main.c: 246: {
"246
{
[; ;main.c: 247: if(++keyCount >= 150)
"247
[e $ ! >= -> =+ _keyCount -> -> 1 `i `uc `i -> 150 `i 44  ]
[; ;main.c: 248: {
"248
{
[; ;main.c: 249: keyCount = 150;
"249
[e = _keyCount -> -> 150 `i `uc ]
"250
}
[e :U 44 ]
"251
}
[; ;main.c: 250: }
[; ;main.c: 251: }
[e $U 45  ]
"252
[e :U 43 ]
[; ;main.c: 252: else
[; ;main.c: 253: {
"253
{
[; ;main.c: 254: if(keyCount >= 5)
"254
[e $ ! >= -> _keyCount `i -> 5 `i 46  ]
[; ;main.c: 255: {
"255
{
[; ;main.c: 256: keyCount = 0;
"256
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 257: return 1;
"257
[e ) -> -> 1 `i `uc ]
[e $UE 42  ]
"258
}
[e :U 46 ]
[; ;main.c: 258: }
[; ;main.c: 259: keyCount = 0;
"259
[e = _keyCount -> -> 0 `i `uc ]
"260
}
[e :U 45 ]
[; ;main.c: 260: }
[; ;main.c: 261: return 0;
"261
[e ) -> -> 0 `i `uc ]
[e $UE 42  ]
[; ;main.c: 262: }
"262
[e :UE 42 ]
}
"266
[v _rainbow `(v ~T0 @X0 1 ef ]
"267
{
[; ;main.c: 266: void rainbow()
[; ;main.c: 267: {
[e :U _rainbow ]
[f ]
[; ;main.c: 269: if(red > lastRed)
"269
[e $ ! > -> _red `i -> _lastRed `i 48  ]
[; ;main.c: 270: red--;
"270
[e -- _red -> -> 1 `i `uc ]
[e :U 48 ]
[; ;main.c: 271: if(green > lastGreen)
"271
[e $ ! > -> _green `i -> _lastGreen `i 49  ]
[; ;main.c: 272: green--;
"272
[e -- _green -> -> 1 `i `uc ]
[e :U 49 ]
[; ;main.c: 273: if(blue > lastBlue)
"273
[e $ ! > -> _blue `i -> _lastBlue `i 50  ]
[; ;main.c: 274: blue--;
"274
[e -- _blue -> -> 1 `i `uc ]
[e :U 50 ]
[; ;main.c: 275: if(red < lastRed)
"275
[e $ ! < -> _red `i -> _lastRed `i 51  ]
[; ;main.c: 276: red++;
"276
[e ++ _red -> -> 1 `i `uc ]
[e :U 51 ]
[; ;main.c: 277: if(green < lastGreen)
"277
[e $ ! < -> _green `i -> _lastGreen `i 52  ]
[; ;main.c: 278: green++;
"278
[e ++ _green -> -> 1 `i `uc ]
[e :U 52 ]
[; ;main.c: 279: if(blue < lastBlue)
"279
[e $ ! < -> _blue `i -> _lastBlue `i 53  ]
[; ;main.c: 280: blue++;
"280
[e ++ _blue -> -> 1 `i `uc ]
[e :U 53 ]
[; ;main.c: 281: if(delayTime > 0)
"281
[e $ ! > -> _delayTime `i -> 0 `i 54  ]
[; ;main.c: 282: {
"282
{
[; ;main.c: 283: delayTime--;
"283
[e -- _delayTime -> -> 1 `i `uc ]
[; ;main.c: 284: return;
"284
[e $UE 47  ]
"285
}
[e :U 54 ]
[; ;main.c: 285: }
[; ;main.c: 286: if(colorStep == 1)
"286
[e $ ! == -> _colorStep `i -> 1 `i 55  ]
[; ;main.c: 287: {
"287
{
[; ;main.c: 288: lastRed = 255;
"288
[e = _lastRed -> -> 255 `i `uc ]
[; ;main.c: 289: lastGreen = 0;
"289
[e = _lastGreen -> -> 0 `i `uc ]
[; ;main.c: 290: lastBlue = 0;
"290
[e = _lastBlue -> -> 0 `i `uc ]
"292
}
[; ;main.c: 292: }
[e $U 56  ]
"293
[e :U 55 ]
[; ;main.c: 293: else if(colorStep == 2)
[e $ ! == -> _colorStep `i -> 2 `i 57  ]
[; ;main.c: 294: {
"294
{
[; ;main.c: 295: lastRed = 255;
"295
[e = _lastRed -> -> 255 `i `uc ]
[; ;main.c: 296: lastGreen = 255;
"296
[e = _lastGreen -> -> 255 `i `uc ]
[; ;main.c: 297: lastBlue = 0;
"297
[e = _lastBlue -> -> 0 `i `uc ]
"298
}
[; ;main.c: 298: }
[e $U 58  ]
"299
[e :U 57 ]
[; ;main.c: 299: else if(colorStep == 3)
[e $ ! == -> _colorStep `i -> 3 `i 59  ]
[; ;main.c: 300: {
"300
{
[; ;main.c: 301: lastRed = 0;
"301
[e = _lastRed -> -> 0 `i `uc ]
[; ;main.c: 302: lastGreen = 255;
"302
[e = _lastGreen -> -> 255 `i `uc ]
[; ;main.c: 303: lastBlue = 0;
"303
[e = _lastBlue -> -> 0 `i `uc ]
"304
}
[; ;main.c: 304: }
[e $U 60  ]
"305
[e :U 59 ]
[; ;main.c: 305: else if(colorStep == 4)
[e $ ! == -> _colorStep `i -> 4 `i 61  ]
[; ;main.c: 306: {
"306
{
[; ;main.c: 307: lastRed = 0;
"307
[e = _lastRed -> -> 0 `i `uc ]
[; ;main.c: 308: lastGreen = 0;
"308
[e = _lastGreen -> -> 0 `i `uc ]
[; ;main.c: 309: lastBlue = 255;
"309
[e = _lastBlue -> -> 255 `i `uc ]
"310
}
[; ;main.c: 310: }
[e $U 62  ]
"311
[e :U 61 ]
[; ;main.c: 311: else if(colorStep == 5)
[e $ ! == -> _colorStep `i -> 5 `i 63  ]
[; ;main.c: 312: {
"312
{
[; ;main.c: 313: lastRed = 255;
"313
[e = _lastRed -> -> 255 `i `uc ]
[; ;main.c: 314: lastGreen = 0;
"314
[e = _lastGreen -> -> 0 `i `uc ]
[; ;main.c: 315: lastBlue = 255;
"315
[e = _lastBlue -> -> 255 `i `uc ]
"316
}
[; ;main.c: 316: }
[e $U 64  ]
"317
[e :U 63 ]
[; ;main.c: 317: else if(colorStep == 6)
[e $ ! == -> _colorStep `i -> 6 `i 65  ]
[; ;main.c: 318: {
"318
{
[; ;main.c: 319: lastRed = 255;
"319
[e = _lastRed -> -> 255 `i `uc ]
[; ;main.c: 320: lastGreen = 0;
"320
[e = _lastGreen -> -> 0 `i `uc ]
[; ;main.c: 321: lastBlue = 0;
"321
[e = _lastBlue -> -> 0 `i `uc ]
"322
}
[; ;main.c: 322: }
[e $U 66  ]
"323
[e :U 65 ]
[; ;main.c: 323: else if(colorStep == 7)
[e $ ! == -> _colorStep `i -> 7 `i 67  ]
[; ;main.c: 324: {
"324
{
[; ;main.c: 325: lastRed = 255;
"325
[e = _lastRed -> -> 255 `i `uc ]
[; ;main.c: 326: lastGreen = 255;
"326
[e = _lastGreen -> -> 255 `i `uc ]
[; ;main.c: 327: lastBlue = 0;
"327
[e = _lastBlue -> -> 0 `i `uc ]
"328
}
[; ;main.c: 328: }
[e $U 68  ]
"329
[e :U 67 ]
[; ;main.c: 329: else if(colorStep == 8)
[e $ ! == -> _colorStep `i -> 8 `i 69  ]
[; ;main.c: 330: {
"330
{
[; ;main.c: 331: lastRed = 0;
"331
[e = _lastRed -> -> 0 `i `uc ]
[; ;main.c: 332: lastGreen = 255;
"332
[e = _lastGreen -> -> 255 `i `uc ]
[; ;main.c: 333: lastBlue = 0;
"333
[e = _lastBlue -> -> 0 `i `uc ]
"334
}
[e :U 69 ]
"337
[e :U 68 ]
[e :U 66 ]
[e :U 64 ]
[e :U 62 ]
[e :U 60 ]
[e :U 58 ]
[e :U 56 ]
[; ;main.c: 334: }
[; ;main.c: 337: if(red == lastRed && blue == lastBlue && green == lastGreen)
[e $ ! && && == -> _red `i -> _lastRed `i == -> _blue `i -> _lastBlue `i == -> _green `i -> _lastGreen `i 70  ]
[; ;main.c: 338: {
"338
{
[; ;main.c: 339: if(++colorStep > 8)
"339
[e $ ! > -> =+ _colorStep -> -> 1 `i `uc `i -> 8 `i 71  ]
[; ;main.c: 340: {
"340
{
[; ;main.c: 341: colorStep = 4;
"341
[e = _colorStep -> -> 4 `i `uc ]
"342
}
[e :U 71 ]
[; ;main.c: 342: }
[; ;main.c: 343: if(delayTime == 0)
"343
[e $ ! == -> _delayTime `i -> 0 `i 72  ]
[; ;main.c: 344: delayTime = 90;
"344
[e = _delayTime -> -> 90 `i `uc ]
[e :U 72 ]
"345
}
[e :U 70 ]
[; ;main.c: 345: }
[; ;main.c: 346: }
"346
[e :UE 47 ]
}
[v $root$_Timer0_Isr `(v ~T0 @X0 0 e ]
[v F364 `(v ~T0 @X0 1 tf ]
"355
[v _Timer0_Isr `IF364 ~T0 @X0 1 e ]
{
[; ;main.c: 355: void interrupt Timer0_Isr() {
[e :U _Timer0_Isr ]
[f ]
[; ;main.c: 356: if (T0IF) {
"356
[e $ ! _T0IF 74  ]
{
[; ;main.c: 358: TMR0 += 155;
"358
[e =+ _TMR0 -> -> 155 `i `uc ]
[; ;main.c: 361: T0IF = 0;
"361
[e = _T0IF -> -> 0 `i `b ]
[; ;main.c: 362: if(++intCount >= 100)
"362
[e $ ! >= -> =+ _intCount -> -> 1 `i `uc `i -> 100 `i 75  ]
[; ;main.c: 363: {
"363
{
[; ;main.c: 364: IntFlag = 1;
"364
[e = _IntFlag -> -> 1 `i `uc ]
[; ;main.c: 365: intCount = 0;
"365
[e = _intCount -> -> 0 `i `uc ]
[; ;main.c: 366: if(++count1s >= 100)
"366
[e $ ! >= -> =+ _count1s -> -> 1 `i `uc `i -> 100 `i 76  ]
[; ;main.c: 367: {
"367
{
[; ;main.c: 368: count1s = 0;
"368
[e = _count1s -> -> 0 `i `uc ]
[; ;main.c: 369: if(workTime > 0)
"369
[e $ ! > -> _workTime `i -> 0 `i 77  ]
[; ;main.c: 370: workTime--;
"370
[e -- _workTime -> -> 1 `i `uc ]
[e :U 77 ]
[; ;main.c: 371: if(waitTime > 0)
"371
[e $ ! > -> _waitTime `i -> 0 `i 78  ]
[; ;main.c: 372: waitTime--;
"372
[e -- _waitTime -> -> 1 `i `uc ]
[e :U 78 ]
"373
}
[e :U 76 ]
"374
}
[e :U 75 ]
"376
}
[e :U 74 ]
[; ;main.c: 373: }
[; ;main.c: 374: }
[; ;main.c: 376: }
[; ;main.c: 378: if (RBIF) {
"378
[e $ ! _RBIF 79  ]
{
[; ;main.c: 379: RBIF = 0;
"379
[e = _RBIF -> -> 0 `i `b ]
"380
}
[e :U 79 ]
[; ;main.c: 380: }
[; ;main.c: 381: }
"381
[e :UE 73 ]
}
