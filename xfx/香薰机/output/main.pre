
# 1 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"

# 26 "C:\mcuproject\scm\CMS_IDE_V2.03.26\CMS_IDE_V2.03.26\data\include\htc.h"
extern const char __xc8_OPTIM_SPEED;

extern double __fpnormalize(double);


# 13 "C:\mcuproject\scm\CMS_IDE_V2.03.26\CMS_IDE_V2.03.26\data\include\xc8debug.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 8 "C:\mcuproject\scm\CMS_IDE_V2.03.26\CMS_IDE_V2.03.26\data\include\cms79f5139.h"
volatile unsigned char INDF @ 0x0000;
volatile unsigned char TMR0 @ 0x0001;
volatile unsigned char PCL @ 0x0002;
volatile unsigned char STATUS @ 0x0003;
volatile unsigned char FSR @ 0x0004;
volatile unsigned char PORTA @ 0x0005;
volatile unsigned char PORTB @ 0x0006;
volatile unsigned char WPDA @ 0x0007;
volatile unsigned char WPDB @ 0x0008;
volatile unsigned char PCLATH @ 0x000A;
volatile unsigned char INTCON @ 0x000B;
volatile unsigned char PIR1 @ 0x000C;
volatile unsigned char PIR2 @ 0x000D;
volatile unsigned char TMR1L @ 0x000E;
volatile unsigned char TMR1H @ 0x000F;
volatile unsigned char T1CON @ 0x0010;
volatile unsigned char TMR2 @ 0x0011;
volatile unsigned char T2CON @ 0x0012;
volatile unsigned char DIVS1 @ 0x0013;
volatile unsigned char DIVS0 @ 0x0014;
volatile unsigned char DIVE2 @ 0x0015;
volatile unsigned char DIVE1 @ 0x0016;
volatile unsigned char DIVE0 @ 0x0017;
volatile unsigned char DIVQ2 @ 0x0015;
volatile unsigned char DIVQ1 @ 0x0016;
volatile unsigned char DIVQ0 @ 0x0017;
volatile unsigned char RCSTA @ 0x0018;
volatile unsigned char TXREG @ 0x0019;
volatile unsigned char RCREG @ 0x001A;
volatile unsigned char DIVCON @ 0x001B;
volatile unsigned char ADRESH @ 0x001E;
volatile unsigned char ADCON0 @ 0x001F;
volatile unsigned char OPTION_REG @ 0x0081;
volatile unsigned char TRISA @ 0x0085;
volatile unsigned char TRISB @ 0x0086;
volatile unsigned char IOCA @ 0x0087;
volatile unsigned char PIE1 @ 0x008C;
volatile unsigned char PIE2 @ 0x008D;
volatile unsigned char OSCCON @ 0x008F;
volatile unsigned char OSCTUNE @ 0x0090;
volatile unsigned char PR2 @ 0x0092;
volatile unsigned char PWM01DT @ 0x0093;
volatile unsigned char PWM23DT @ 0x0094;
volatile unsigned char WPUB @ 0x0095;
volatile unsigned char IOCB @ 0x0096;
volatile unsigned char LVDCON @ 0x0097;
volatile unsigned char TXSTA @ 0x0098;
volatile unsigned char SPBRG @ 0x0099;
volatile unsigned char OPA0CON @ 0x009A;
volatile unsigned char OPA0ADJ @ 0x009B;
volatile unsigned char OPA1CON @ 0x009C;
volatile unsigned char OPA1ADJ @ 0x009D;
volatile unsigned char ADRESL @ 0x009E;
volatile unsigned char ADCON1 @ 0x009F;
volatile unsigned char WDTCON @ 0x0105;
volatile unsigned char PWMCON0 @ 0x0107;
volatile unsigned char PWMCON1 @ 0x0108;
volatile unsigned char PWMCON2 @ 0x0109;
volatile unsigned char EEDAT @ 0x010C;
volatile unsigned char EEADR @ 0x010D;
volatile unsigned char EEDATH @ 0x010E;
volatile unsigned char EEADRH @ 0x010F;
volatile unsigned char TABLE_SPH @ 0x0110;
volatile unsigned char TABLE_SPL @ 0x0111;
volatile unsigned char TABLE_DATAH @ 0x0112;
volatile unsigned char PWMD01H @ 0x011C;
volatile unsigned char PWMD23H @ 0x011D;
volatile unsigned char ANSEL @ 0x0188;
volatile unsigned char ANSELH @ 0x0189;
volatile unsigned char EECON1 @ 0x018C;
volatile unsigned char EECON2 @ 0x018D;
volatile unsigned char WPUA @ 0x018E;
volatile unsigned char PWMTL @ 0x018F;
volatile unsigned char PWMTH @ 0x0190;
volatile unsigned char PWMT4L @ 0x0191;
volatile unsigned char PWMD0L @ 0x0193;
volatile unsigned char PWMD1L @ 0x0194;
volatile unsigned char PWMD2L @ 0x0195;
volatile unsigned char PWMD3L @ 0x0196;
volatile unsigned char PWMD4L @ 0x0197;

# 93
volatile bit IRP @ ((unsigned)&STATUS*8)+7;
volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
volatile bit TO @ ((unsigned)&STATUS*8)+4;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit Z @ ((unsigned)&STATUS*8)+2;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit C @ ((unsigned)&STATUS*8)+0;



volatile bit RA7 @ ((unsigned)&PORTA*8)+7;
volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA0 @ ((unsigned)&PORTA*8)+0;



volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB0 @ ((unsigned)&PORTB*8)+0;



volatile bit WPDA7 @ ((unsigned)&WPDA*8)+7;
volatile bit WPDA6 @ ((unsigned)&WPDA*8)+6;
volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;



volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;



volatile bit GIE @ ((unsigned)&INTCON*8)+7;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit RBIF @ ((unsigned)&INTCON*8)+0;



volatile bit RAIF @ ((unsigned)&PIR1*8)+7;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
volatile bit EEIF @ ((unsigned)&PIR1*8)+3;
volatile bit PWMIF @ ((unsigned)&PIR1*8)+2;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;



volatile bit LVDIF @ ((unsigned)&PIR2*8)+0;



volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;



volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;



volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
volatile bit RX9EN @ ((unsigned)&RCSTA*8)+6;
volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
volatile bit RCIDL @ ((unsigned)&RCSTA*8)+3;
volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;


volatile bit DIVEN @ ((unsigned)&DIVCON*8)+7;
volatile bit CAL_END @ ((unsigned)&DIVCON*8)+6;
volatile bit DIV_CLK @ ((unsigned)&DIVCON*8)+0;


volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
volatile bit ADON @ ((unsigned)&ADCON0*8)+0;



volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;



volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;



volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;



volatile bit IOCA7 @ ((unsigned)&IOCA*8)+7;
volatile bit IOCA6 @ ((unsigned)&IOCA*8)+6;
volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;



volatile bit RAIE @ ((unsigned)&PIE1*8)+7;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
volatile bit EEIE @ ((unsigned)&PIE1*8)+3;
volatile bit PWMIE @ ((unsigned)&PIE1*8)+2;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;



volatile bit LVDIE @ ((unsigned)&PIE2*8)+0;



volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit SCS @ ((unsigned)&OSCCON*8)+0;



volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;



volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;



volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;


volatile bit LVD_RES @ ((unsigned)&LVDCON*8)+7;
volatile bit LVD_SEL2 @ ((unsigned)&LVDCON*8)+3;
volatile bit LVD_SEL1 @ ((unsigned)&LVDCON*8)+2;
volatile bit LVD_SEL0 @ ((unsigned)&LVDCON*8)+1;
volatile bit LVDEN @ ((unsigned)&LVDCON*8)+0;


volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
volatile bit TX9EN @ ((unsigned)&TXSTA*8)+6;
volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
volatile bit SCKP @ ((unsigned)&TXSTA*8)+3;
volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;



volatile bit BRG7 @ ((unsigned)&SPBRG*8)+7;
volatile bit BRG6 @ ((unsigned)&SPBRG*8)+6;
volatile bit BRG5 @ ((unsigned)&SPBRG*8)+5;
volatile bit BRG4 @ ((unsigned)&SPBRG*8)+4;
volatile bit BRG3 @ ((unsigned)&SPBRG*8)+3;
volatile bit BRG2 @ ((unsigned)&SPBRG*8)+2;
volatile bit BRG1 @ ((unsigned)&SPBRG*8)+1;
volatile bit BRG0 @ ((unsigned)&SPBRG*8)+0;



volatile bit OPA0EN @ ((unsigned)&OPA0CON*8)+7;
volatile bit OPA0O @ ((unsigned)&OPA0CON*8)+6;
volatile bit OPA0_CMP @ ((unsigned)&OPA0CON*8)+5;
volatile bit OPA0_ADC @ ((unsigned)&OPA0CON*8)+4;
volatile bit OPA0_FW @ ((unsigned)&OPA0CON*8)+3;
volatile bit OPA0_BG @ ((unsigned)&OPA0CON*8)+2;



volatile bit OPA0OUT @ ((unsigned)&OPA0ADJ*8)+7;
volatile bit OPA0COFM @ ((unsigned)&OPA0ADJ*8)+6;
volatile bit OPA0CRS @ ((unsigned)&OPA0ADJ*8)+5;
volatile bit OPA0ADJ4 @ ((unsigned)&OPA0ADJ*8)+4;
volatile bit OPA0ADJ3 @ ((unsigned)&OPA0ADJ*8)+3;
volatile bit OPA0ADJ2 @ ((unsigned)&OPA0ADJ*8)+2;
volatile bit OPA0ADJ1 @ ((unsigned)&OPA0ADJ*8)+1;
volatile bit OPA0ADJ0 @ ((unsigned)&OPA0ADJ*8)+0;



volatile bit OPA1EN @ ((unsigned)&OPA1CON*8)+7;
volatile bit OPA1O @ ((unsigned)&OPA1CON*8)+6;
volatile bit OPA1_CMP @ ((unsigned)&OPA1CON*8)+5;
volatile bit OPA1_ADC @ ((unsigned)&OPA1CON*8)+4;
volatile bit OPA1_FW @ ((unsigned)&OPA1CON*8)+3;
volatile bit OPA1_BG @ ((unsigned)&OPA1CON*8)+2;



volatile bit OPA1OUT @ ((unsigned)&OPA1ADJ*8)+7;
volatile bit OPA1COFM @ ((unsigned)&OPA1ADJ*8)+6;
volatile bit OPA1CRS @ ((unsigned)&OPA1ADJ*8)+5;
volatile bit OPA1ADJ4 @ ((unsigned)&OPA1ADJ*8)+4;
volatile bit OPA1ADJ3 @ ((unsigned)&OPA1ADJ*8)+3;
volatile bit OPA1ADJ2 @ ((unsigned)&OPA1ADJ*8)+2;
volatile bit OPA1ADJ1 @ ((unsigned)&OPA1ADJ*8)+1;
volatile bit OPA1ADJ0 @ ((unsigned)&OPA1ADJ*8)+0;



volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
volatile bit LDO_SEL @ ((unsigned)&ADCON1*8)+0;



volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;



volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;



volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;



volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;



volatile bit EEDAT7 @ ((unsigned)&EEDAT*8)+7;
volatile bit EEDAT6 @ ((unsigned)&EEDAT*8)+6;
volatile bit EEDAT5 @ ((unsigned)&EEDAT*8)+5;
volatile bit EEDAT4 @ ((unsigned)&EEDAT*8)+4;
volatile bit EEDAT3 @ ((unsigned)&EEDAT*8)+3;
volatile bit EEDAT2 @ ((unsigned)&EEDAT*8)+2;
volatile bit EEDAT1 @ ((unsigned)&EEDAT*8)+1;
volatile bit EEDAT0 @ ((unsigned)&EEDAT*8)+0;



volatile bit EEADR7 @ ((unsigned)&EEADR*8)+7;
volatile bit EEADR6 @ ((unsigned)&EEADR*8)+6;
volatile bit EEADR5 @ ((unsigned)&EEADR*8)+5;
volatile bit EEADR4 @ ((unsigned)&EEADR*8)+4;
volatile bit EEADR3 @ ((unsigned)&EEADR*8)+3;
volatile bit EEADR2 @ ((unsigned)&EEADR*8)+2;
volatile bit EEADR1 @ ((unsigned)&EEADR*8)+1;
volatile bit EEADR0 @ ((unsigned)&EEADR*8)+0;



volatile bit EEDATH7 @ ((unsigned)&EEDATH*8)+7;
volatile bit EEDATH6 @ ((unsigned)&EEDATH*8)+6;
volatile bit EEDATH5 @ ((unsigned)&EEDATH*8)+5;
volatile bit EEDATH4 @ ((unsigned)&EEDATH*8)+4;
volatile bit EEDATH3 @ ((unsigned)&EEDATH*8)+3;
volatile bit EEDATH2 @ ((unsigned)&EEDATH*8)+2;
volatile bit EEDATH1 @ ((unsigned)&EEDATH*8)+1;
volatile bit EEDATH0 @ ((unsigned)&EEDATH*8)+0;



volatile bit EEADRH3 @ ((unsigned)&EEADRH*8)+3;
volatile bit EEADRH2 @ ((unsigned)&EEADRH*8)+2;
volatile bit EEADRH1 @ ((unsigned)&EEADRH*8)+1;
volatile bit EEADRH0 @ ((unsigned)&EEADRH*8)+0;



volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;



volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;



volatile bit ANS7 @ ((unsigned)&ANSEL*8)+7;
volatile bit ANS6 @ ((unsigned)&ANSEL*8)+6;
volatile bit ANS5 @ ((unsigned)&ANSEL*8)+5;
volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;
volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;



volatile bit ANS13 @ ((unsigned)&ANSELH*8)+5;
volatile bit ANS12 @ ((unsigned)&ANSELH*8)+4;
volatile bit ANS11 @ ((unsigned)&ANSELH*8)+3;
volatile bit ANS10 @ ((unsigned)&ANSELH*8)+2;
volatile bit ANS9 @ ((unsigned)&ANSELH*8)+1;
volatile bit ANS8 @ ((unsigned)&ANSELH*8)+0;



volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
volatile bit WREN @ ((unsigned)&EECON1*8)+2;
volatile bit WR @ ((unsigned)&EECON1*8)+1;
volatile bit RD @ ((unsigned)&EECON1*8)+0;



volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;
volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;


# 27 "C:\mcuproject\scm\CMS_IDE_V2.03.26\CMS_IDE_V2.03.26\data\include\cms.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 76
extern unsigned int flash_read(unsigned short addr);


# 149
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);

# 184
extern unsigned char __resetbits;
extern __bit __powerdown;
extern __bit __timeout;

# 28 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.h"
typedef unsigned char u8;
typedef unsigned int u16;
typedef unsigned long u32;

# 8 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\delay.h"
void Delay(unsigned int dtemp);
void Delay_nms (unsigned int inittempl);


# 7 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\WHQ_TP_ZPGS.h"
#pragma warning disable 752,759,520

# 11
extern volatile unsigned char cur_addat;
extern unsigned int pwmdisp;
extern unsigned int xldisp;

# 17
extern unsigned char Test_Pwm(void);

# 25
extern void Set_Pwm_Onoff(unsigned char fun);

# 179
const unsigned char pfg_select = 2;

const unsigned char Cur_Adcon = 1<<2;

const unsigned char PwmFst = 250;
const unsigned char PwmLst = 250;

const unsigned char Curlimitf = 1;
const unsigned char Curlimitl = 10;

const unsigned char Pwmmaxc = 48;
const unsigned char Pwmcyl = 24;

const unsigned char Curlmtl = 5;
const unsigned char Curlmth = 6;
const unsigned char Kj_Fre = 1;
const unsigned char curset = 26;

const unsigned char D_En = 0;
const unsigned char Drange = 16;
const unsigned char Dbujin = 0B00001000;
const unsigned char Djiange = 0B00000010;

# 10 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\WHQ_Sender.h"
void WHQ_SenderLoop();

# 8 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\iic_soft.h"
volatile bit I2C_SCL_IO @((unsigned)&TRISB*8)+2;
volatile bit I2C_SDA_IO @((unsigned)&TRISB*8)+3;

unsigned char I2C_Read1bYTE(unsigned char ack);
unsigned char I2C_Write1bYTE(unsigned char data);
void I2C_WriteStop();
void I2C_WriteStart();
void I2C_WaitMoment();

# 21 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\WHQ_Sender.h"
typedef int s32;
typedef short int s16;
typedef char s8;

typedef unsigned int u32;
typedef unsigned short int u16;
typedef unsigned char u8;

# 38
typedef struct _PackHeader
{
u8 length;
union
{
u16 mask;
struct
{
u8 packIdx : 4;
u8 packIdxMax : 4;
u8 typeId;
}m;
};
}PackHeader;

# 13 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\drive.h"
void drive_data_init(void);
void register_init(void);
void Sys_set(void);
void led_drive(void);

# 22
extern u8 time_10ms_flg;
extern u8 fog_time_5ms_flg;


extern u8 led_drive_cnt;
extern u8 ledr_pecent;
extern u8 ledg_pecent;
extern u8 ledb_pecent;


extern u8 fog_drive_mod;

# 21 "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
u8 btn_work_cnt;
u8 btn_led_cnt;
u8 btn_fog_cnt;


u8 work_mod;
u8 led_mod;
u8 fog_mod;


u8 led_breath_cnt;
u8 led_breath_way;
u8 ledr_breath_duty;
u8 ledg_breath_duty;
u8 ledb_breath_duty;

u8 led_mod1_flg;
u8 led_mod2_flg;
u8 led_mod3_flg;
u8 led_mod4_flg;
u8 led_scan_delay;


u8 beep_cnt;
u8 beep_flg;


u8 fog_status_buff;
u8 fog_erro_flg;
u8 fog_erro_cnt;


u16 timing_10ms_cnt;
u8 timing_1min_cnt;
u8 timing_set_num;



void data_init(void);

void button_scan(void);
void fog_erro_scan(void);

void fan_handle(void);
void fog_handle(void);
void beep_handle(void);
void led_handle(void);
void timing_handle(void);

# 76
void main(void)
{

register_init();
data_init();
drive_data_init();
while(1)
{
Sys_set();
if(fog_time_5ms_flg)
{
fog_time_5ms_flg=0;

# 91
fog_erro_scan();
}
if(time_10ms_flg)
{
time_10ms_flg=0;
asm("clrwdt");

button_scan();

fan_handle();
fog_handle();
beep_handle();
led_handle();
timing_handle();
}
}
}

# 114
void data_init(void)
{

btn_work_cnt=0;
btn_led_cnt=0;
btn_fog_cnt=0;


work_mod=0;
led_mod=0;
fog_mod=0;


led_breath_cnt=0;
led_breath_way=0;
ledr_breath_duty=0;
ledg_breath_duty=0;
ledb_breath_duty=0;

led_mod1_flg=0;
led_mod2_flg=0;
led_mod3_flg=0;
led_mod4_flg=0;
led_scan_delay=0;


beep_cnt=26;
beep_flg=0;


fog_status_buff=0;
fog_erro_flg=0;
fog_erro_cnt=0;


timing_10ms_cnt=0;
timing_1min_cnt=0;
timing_set_num=60;
}

# 158
void button_scan(void)
{




if(!RB2)
{
if(btn_work_cnt < 250)
{
btn_work_cnt++;
}
if(btn_work_cnt == 100)
{
if(work_mod)
{
work_mod=0;
led_mod=0;
beep_cnt=26;
timing_10ms_cnt=0;
timing_1min_cnt=0;
}
}
}
else
{
if((btn_work_cnt > 5) && (btn_work_cnt < 100))
{
work_mod++;
if(work_mod > 4)
{
work_mod=0;
led_mod=0;
beep_cnt=26;
}
else
{
beep_cnt=8;
}
timing_10ms_cnt=0;
timing_1min_cnt=0;
}
btn_work_cnt=0;
}

if(!RB0)
{
if(btn_led_cnt < 250)
{
btn_led_cnt++;
}
if(btn_led_cnt == 100)
{
if(led_mod)
{
led_mod=0;
beep_cnt=26;
}
}
}
else
{
if((btn_led_cnt > 5) && (btn_led_cnt < 100))
{
led_mod++;
if(led_mod > 16)
{
led_mod=0;
beep_cnt=26;
}
if(led_mod == 1)
{
led_breath_cnt=0;
led_breath_way=0;
ledr_breath_duty=100;
ledg_breath_duty=100;
ledb_breath_duty=100;
}
}
btn_led_cnt=0;
}

if(!RB1)
{
if(btn_fog_cnt < 250)
{
btn_fog_cnt++;
}
if(btn_fog_cnt == 5)
{
if(work_mod)
{
fog_mod++;
if(fog_mod > 1)
{
fog_mod=0;
}
if(!fog_mod)
{
beep_cnt=8;
}
else
{
beep_cnt=26;
}
}
}
}
else
{
btn_fog_cnt=0;
}

if(fog_erro_flg)
{
if(work_mod)
{
work_mod=0;
led_mod=0;
beep_cnt=8;
}
}
}

# 286
void fan_handle(void)
{
if(work_mod)
{
{RA6=1;};
}
else
{
{RA6=0;};
}
}

# 302
void fog_handle(void)
{
if(!work_mod)
{
fog_mod=0;
fog_drive_mod=0;
}
else
{
if(!fog_mod)
{
fog_drive_mod=1;
}
else
{
fog_drive_mod=2;
}
}
}

# 326
void beep_handle(void)
{
if(beep_cnt)
{
beep_cnt--;
if(beep_cnt >= 18)
{
beep_flg=1;
}
else if(beep_cnt >= 8)
{
beep_flg=0;
}
else
{
beep_flg=1;
}
}
else
{
beep_flg=0;
}

if(beep_flg)
{
{PWMD4L=62;PWM4EN=1;};
}
else
{
{PWM4EN=0;RA5=0;};
}
}

# 363
void led_handle(void)
{
if(!led_mod)
{
led_breath_cnt=0;
led_breath_way=0;
ledr_breath_duty=100;
ledg_breath_duty=100;
ledb_breath_duty=100;

ledr_pecent=0;
ledg_pecent=0;
ledb_pecent=0;
}
else if(led_mod == 1)
{
led_breath_cnt++;
if(led_breath_cnt >= 8)
{
led_breath_cnt=0;
switch(led_breath_way)
{
case 0 :
ledg_breath_duty=100;
if(ledr_breath_duty)
{
ledr_breath_duty--;
}
if(ledb_breath_duty)
{
ledb_breath_duty--;
}
else
{
led_breath_way++;
ledr_breath_duty=0;
}
break;
case 1 :
ledb_breath_duty=0;
if(ledr_breath_duty < 100)
{
ledr_breath_duty++;
}
if(ledg_breath_duty)
{
ledg_breath_duty--;
}
else
{
led_breath_way++;
ledr_breath_duty = 100;
}
break;
case 2 :
ledg_breath_duty=0;
if(ledb_breath_duty < 100)
{
ledb_breath_duty++;
}
if(ledr_breath_duty)
{
ledr_breath_duty--;
}
else
{
led_breath_way++;
ledb_breath_duty = 100;
}
break;
case 3 :
ledb_breath_duty = 100;
if(ledr_breath_duty < 100)
{
ledr_breath_duty++;
}
if(ledg_breath_duty < 100)
{
ledg_breath_duty++;
}
else
{
led_breath_way=0;
ledr_breath_duty = 100;
}
break;
default :
led_breath_way=0;
break;
}
}
ledr_pecent=ledr_breath_duty;
ledg_pecent=ledg_breath_duty;
ledb_pecent=ledb_breath_duty;
}
else if(led_mod == 2)
{
ledr_pecent=ledr_breath_duty;
ledg_pecent=ledg_breath_duty;
ledb_pecent=ledb_breath_duty;
}
else if(led_mod == 3)
{
ledr_pecent=0;
ledg_pecent=50;
ledb_pecent=0;
}
else if(led_mod == 4)
{
ledr_pecent=0;
ledg_pecent=100;
ledb_pecent=0;
}
else if(led_mod == 5)
{
ledr_pecent=0;
ledg_pecent=0;
ledb_pecent=50;
}
else if(led_mod == 6)
{
ledr_pecent=0;
ledg_pecent=0;
ledb_pecent=100;
}
else if(led_mod == 7)
{
ledr_pecent=50;
ledg_pecent=0;
ledb_pecent=0;
}
else if(led_mod == 8)
{
ledr_pecent=100;
ledg_pecent=0;
ledb_pecent=0;
}
else if(led_mod == 9)
{
ledr_pecent=50;
ledg_pecent=50;
ledb_pecent=0;
}
else if(led_mod == 10)
{
ledr_pecent=100;
ledg_pecent=100;
ledb_pecent=0;
}
else if(led_mod == 11)
{
ledr_pecent=50;
ledg_pecent=0;
ledb_pecent=50;
}
else if(led_mod == 12)
{
ledr_pecent=100;
ledg_pecent=0;
ledb_pecent=100;
}
else if(led_mod == 13)
{
ledr_pecent=0;
ledg_pecent=50;
ledb_pecent=50;
}
else if(led_mod == 14)
{
ledr_pecent=0;
ledg_pecent=100;
ledb_pecent=100;
}
else if(led_mod == 15)
{
ledr_pecent=50;
ledg_pecent=50;
ledb_pecent=50;
}
else
{
ledr_pecent=100;
ledg_pecent=100;
ledb_pecent=100;
}


if(!ledr_pecent)
{
{PWM2EN=0;};
{RA3=0;};
}
else if(ledr_pecent > 99)
{
{PWM2EN=0;};
{RA3=1;};
}
else
{
PWMD2L=ledr_pecent;
{PWM2EN=1;};
}
if(!ledg_pecent)
{
{PWM1EN=0;};
{RA2=0;};
}
else if(ledg_pecent > 99)
{
{PWM1EN=0;};
{RA2=1;};
}
else
{
PWMD1L=ledg_pecent;
{PWM1EN=1;};
}
if(!ledb_pecent)
{
{PWM3EN=0;};
{RA4=0;};
}
else if(ledb_pecent > 99)
{
{PWM3EN=0;};
{RA4=1;};
}
else
{
PWMD3L=ledb_pecent;
{PWM3EN=1;};
}

switch(work_mod)
{
case 0 :
led_mod1_flg=0;
led_mod2_flg=0;
led_mod3_flg=0;
led_mod4_flg=0;
break;
case 1 :
led_mod1_flg=1;
led_mod2_flg=0;
led_mod3_flg=0;
led_mod4_flg=0;
break;
case 2 :
led_mod1_flg=0;
led_mod2_flg=1;
led_mod3_flg=0;
led_mod4_flg=0;
break;
case 3 :
led_mod1_flg=0;
led_mod2_flg=0;
led_mod3_flg=1;
led_mod4_flg=0;
break;
case 4 :
led_mod1_flg=0;
led_mod2_flg=0;
led_mod3_flg=0;
led_mod4_flg=1;
break;
default :
work_mod=0;
break;
}

{TRISB5=1;TRISA7=1;TRISB4=1;};
led_scan_delay=10;
while(led_scan_delay)
{
led_scan_delay--;
}
{RB5=0;RA7=0;RB4=0;};
if(led_mod1_flg)
{
{TRISB5=0;RB5=1;TRISA7=0;RA7=0;};
}
else if(led_mod2_flg)
{
{TRISA7=0;RA7=1;TRISB5=0;RB5=0;};
}
else if(led_mod3_flg)
{
{TRISB5=0;RB5=1;TRISB4=0;RB4=0;};
}
else if(led_mod4_flg)
{
{TRISB4=0;RB4=1;TRISB5=0;RB5=0;};
}
else
{

}
}

# 667
void fog_erro_scan(void)
{
if(!work_mod)
{
fog_status_buff=0;
fog_erro_flg=0;
fog_erro_cnt=0;
}
else
{
fog_status_buff=0;
fog_status_buff = Test_Pwm();

if(fog_status_buff == 0x55)
{
fog_erro_flg=1;
}
if(fog_status_buff == 0xff)
{
fog_erro_flg=1;
}
}
}

# 695
void timing_handle(void)
{
switch(work_mod)
{
case 0 :
timing_set_num=60;
break;
case 1 :
timing_set_num=60;
break;
case 2 :
timing_set_num=120;
break;
case 3 :
timing_set_num=180;
break;
case 4 :
timing_set_num=0;
break;
default :
work_mod=0;
break;
}
if(!work_mod)
{
timing_10ms_cnt=0;
timing_1min_cnt=0;
}
else
{
if(!timing_set_num)
{
timing_10ms_cnt=0;
timing_1min_cnt=0;
}
else
{
timing_10ms_cnt++;
if(timing_10ms_cnt >= 6000)
{
timing_10ms_cnt=0;
timing_1min_cnt++;
if(timing_1min_cnt >= timing_set_num)
{
timing_1min_cnt=0;
work_mod=0;
led_mod=0;
beep_cnt=8;
}
}
}
}
}
