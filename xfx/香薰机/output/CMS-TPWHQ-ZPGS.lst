

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Thu Aug 17 13:31:49 2023

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	79F5135
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text20,local,class=CODE,merge=1,delta=2
    20                           	psect	text21,local,class=CODE,merge=1,delta=2
    21                           	psect	text22,local,class=CODE,merge=1,delta=2
    22                           	psect	text24,local,class=CODE,merge=1,delta=2
    23                           	psect	text25,local,class=CODE,merge=1,delta=2
    24                           	psect	text26,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	pa_nodes0,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	strings
    65  07C7                     __pstrings:	
    66  07C7                     stringtab:	
    67  07C7                     __stringtab:	
    68  07C7                     stringcode:	
    69                           ;	String table - string pointers are 1 byte each
    70                           
    71  07C7                     stringdir:	
    72  07C7  3007               	movlw	high stringdir
    73  07C8  008A               	movwf	10
    74  07C9  0804               	movf	4,w
    75  07CA  0A84               	incf	4,f
    76  07CB  0782               	addwf	2,f
    77  07CC                     __stringbase:	
    78  07CC  3400               	retlw	0
    79  07CD                     __end_of__stringtab:	
    80  07CD                     _pfg_select:	
    81  07CD  3402               	retlw	2
    82  07CE                     __end_of_pfg_select:	
    83  07CE                     _curset:	
    84  07CE  341A               	retlw	26
    85  07CF                     __end_of_curset:	
    86  07CF                     _Cur_Adcon:	
    87  07CF  3404               	retlw	4
    88  07D0                     __end_of_Cur_Adcon:	
    89  001F                     _ADCON0	set	31
    90  001E                     _ADRESH	set	30
    91  0012                     _T2CON	set	18
    92  000D                     _PIR2	set	13
    93  000C                     _PIR1	set	12
    94  000B                     _INTCON	set	11
    95  0008                     _WPDB	set	8
    96  0007                     _WPDA	set	7
    97  0006                     _PORTB	set	6
    98  0005                     _PORTA	set	5
    99  0001                     _TMR0	set	1
   100  0061                     _TMR2IF	set	97
   101  005B                     _RBIE	set	91
   102  005D                     _T0IE	set	93
   103  005E                     _PEIE	set	94
   104  005F                     _GIE	set	95
   105  0030                     _RB0	set	48
   106  0031                     _RB1	set	49
   107  0032                     _RB2	set	50
   108  0034                     _RB4	set	52
   109  0035                     _RB5	set	53
   110  002A                     _RA2	set	42
   111  002B                     _RA3	set	43
   112  002C                     _RA4	set	44
   113  002D                     _RA5	set	45
   114  002E                     _RA6	set	46
   115  002F                     _RA7	set	47
   116  0088                     _PFGSTOP	set	136
   117  009F                     _ADCON1	set	159
   118  009E                     _ADRESL	set	158
   119  0096                     _IOCB	set	150
   120  0095                     _WPUB	set	149
   121  0092                     _PR2	set	146
   122  008F                     _OSCCON	set	143
   123  008D                     _PIE2	set	141
   124  008C                     _PIE1	set	140
   125  0087                     _IOCA	set	135
   126  0086                     _TRISB	set	134
   127  0085                     _TRISA	set	133
   128  0081                     _OPTION_REG	set	129
   129  0461                     _TMR2IE	set	1121
   130  0434                     _TRISB4	set	1076
   131  0435                     _TRISB5	set	1077
   132  042F                     _TRISA7	set	1071
   133  011E                     _PFGCON1	set	286
   134  011B                     _PFGCON	set	283
   135  0119                     _PFGADJ	set	281
   136  011F                     _PFGDATA1	set	287
   137  011D                     _PWMD23H	set	285
   138  011C                     _PWMD01H	set	284
   139  010D                     _EEADR	set	269
   140  010C                     _EEDAT	set	268
   141  0109                     _PWMCON2	set	265
   142  0108                     _PWMCON1	set	264
   143  0107                     _PWMCON0	set	263
   144  0105                     _WDTCON	set	261
   145  0839                     _PWM1EN	set	2105
   146  083A                     _PWM2EN	set	2106
   147  083B                     _PWM3EN	set	2107
   148  083C                     _PWM4EN	set	2108
   149  0828                     _SWDTEN	set	2088
   150  0197                     _PWMD4L	set	407
   151  0196                     _PWMD3L	set	406
   152  0195                     _PWMD2L	set	405
   153  0194                     _PWMD1L	set	404
   154  0193                     _PWMD0L	set	403
   155  0191                     _PWMT4L	set	401
   156  0190                     _PWMTH	set	400
   157  018F                     _PWMTL	set	399
   158  018E                     _WPUA	set	398
   159  0189                     _ANSELH	set	393
   160  0188                     _ANSEL	set	392
   161  0C60                     _RD	set	3168
   162  0C67                     _EEPGD	set	3175
   163                           
   164                           	psect	cinit
   165  000D                     start_initialization:	
   166                           ; #config settings
   167                           
   168  000D                     __initialization:	
   169  000D  3020               	movlw	low __pbssBANK0
   170                           
   171                           ; Clear objects allocated to BITCOMMON
   172  000E  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   173  000F  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
   174                           
   175                           ; Clear objects allocated to COMMON
   176  0010  01F7               	clrf	__pbssCOMMON& (0+127)
   177  0011  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   178  0012  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   179  0013  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   180                           
   181                           ; Clear objects allocated to BANK0
   182  0014  1383               	bcf	3,7	;select IRP bank0
   183  0015  0084               	movwf	4
   184  0016  305E               	movlw	low (__pbssBANK0+62)
   185  0017  118A  27D9  118A   	fcall	clear_ram0
   186                           
   187                           ; Clear objects allocated to BANK1
   188  001A  30A0               	movlw	low __pbssBANK1
   189  001B  0084               	movwf	4
   190  001C  30A8               	movlw	low (__pbssBANK1+8)
   191  001D  118A  27D9         	fcall	clear_ram0
   192  001F                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  001F                     __end_of__initialization:	
   196  001F  0183               	clrf	3
   197  0020  118A  2F15         	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	bitbssCOMMON
   200  0380                     __pbitbssCOMMON:	
   201  0380                     Test_Pwm@curokf1:	
   202  0380                     	ds	1
   203  0381                     Test_water@watnof:	
   204  0381                     	ds	1
   205  0382                     Set_Pwm_Onoff@adonf:	
   206  0382                     	ds	1
   207  0383                     _PfgChangef:	
   208  0383                     	ds	1
   209  0384                     _curupf:	
   210  0384                     	ds	1
   211  0385                     _onoff_fst:	
   212  0385                     	ds	1
   213  0386                     _PFGchgf:	
   214  0386                     	ds	1
   215  0387                     _curokf:	
   216  0387                     	ds	1
   217  0388                     _ponecf:	
   218  0388                     	ds	1
   219  0389                     _pwmtonf:	
   220  0389                     	ds	1
   221  038A                     _pwmtf1:	
   222  038A                     	ds	1
   223  038B                     _pwmtf:	
   224  038B                     	ds	1
   225  038C                     _on_off:	
   226  038C                     	ds	1
   227                           
   228                           	psect	bssCOMMON
   229  0077                     __pbssCOMMON:	
   230  0077                     _pfgonetemp:	
   231  0077                     	ds	2
   232  0079                     _ledr_breath_duty:	
   233  0079                     	ds	1
   234  007A                     _led_mod:	
   235  007A                     	ds	1
   236                           
   237                           	psect	bssBANK0
   238  0020                     __pbssBANK0:	
   239  0020                     Test_water@curstrold:	
   240  0020                     	ds	2
   241  0022                     _pwmlv:	
   242  0022                     	ds	2
   243  0024                     _pwmold:	
   244  0024                     	ds	2
   245  0026                     _pwmnold:	
   246  0026                     	ds	2
   247  0028                     _pwmlst:	
   248  0028                     	ds	2
   249  002A                     _pwmfst:	
   250  002A                     	ds	2
   251  002C                     _adonetemp:	
   252  002C                     	ds	2
   253  002E                     Test_Pwm@ondly:	
   254  002E                     	ds	1
   255  002F                     Set_Pwm_Onoff@funold:	
   256  002F                     	ds	1
   257  0030                     Set_Pwm_Onoff@cur_adcl:	
   258  0030                     	ds	1
   259  0031                     Set_Pwm_Onoff@pwmcl:	
   260  0031                     	ds	1
   261  0032                     Test_Pwm_Cur@curdowncl:	
   262  0032                     	ds	1
   263  0033                     Test_Pwm_Cur@curupcl:	
   264  0033                     	ds	1
   265  0034                     _curmax:	
   266  0034                     	ds	1
   267  0035                     _pwmlc:	
   268  0035                     	ds	1
   269  0036                     _pwmhc:	
   270  0036                     	ds	1
   271  0037                     _whavecl:	
   272  0037                     	ds	1
   273  0038                     _wnoncl:	
   274  0038                     	ds	1
   275  0039                     _Ytzpcl:	
   276  0039                     	ds	1
   277  003A                     _curokcl:	
   278  003A                     	ds	1
   279  003B                     _cur_addatold2:	
   280  003B                     	ds	1
   281  003C                     _cur_addatold1:	
   282  003C                     	ds	1
   283  003D                     _cur_addatold0:	
   284  003D                     	ds	1
   285  003E                     _curdownc:	
   286  003E                     	ds	1
   287  003F                     _curupc:	
   288  003F                     	ds	1
   289  0040                     _ponesec:	
   290  0040                     	ds	1
   291  0041                     _fog_time_125us_cnt:	
   292  0041                     	ds	1
   293  0042                     _time_125us_cnt:	
   294  0042                     	ds	1
   295  0043                     _cur_addat:	
   296  0043                     	ds	1
   297  0044                     _timing_set_num:	
   298  0044                     	ds	1
   299  0045                     _timing_1min_cnt:	
   300  0045                     	ds	1
   301  0046                     _fog_erro_flg:	
   302  0046                     	ds	1
   303  0047                     _fog_status_buff:	
   304  0047                     	ds	1
   305  0048                     _beep_flg:	
   306  0048                     	ds	1
   307  0049                     _beep_cnt:	
   308  0049                     	ds	1
   309  004A                     _led_scan_delay:	
   310  004A                     	ds	1
   311  004B                     _led_mod4_flg:	
   312  004B                     	ds	1
   313  004C                     _led_mod3_flg:	
   314  004C                     	ds	1
   315  004D                     _led_mod2_flg:	
   316  004D                     	ds	1
   317  004E                     _led_mod1_flg:	
   318  004E                     	ds	1
   319  004F                     _ledb_breath_duty:	
   320  004F                     	ds	1
   321  0050                     _ledg_breath_duty:	
   322  0050                     	ds	1
   323  0051                     _led_breath_way:	
   324  0051                     	ds	1
   325  0052                     _led_breath_cnt:	
   326  0052                     	ds	1
   327  0053                     _fog_mod:	
   328  0053                     	ds	1
   329  0054                     _work_mod:	
   330  0054                     	ds	1
   331  0055                     _btn_fog_cnt:	
   332  0055                     	ds	1
   333  0056                     _btn_led_cnt:	
   334  0056                     	ds	1
   335  0057                     _btn_work_cnt:	
   336  0057                     	ds	1
   337  0058                     _ledb_pecent:	
   338  0058                     	ds	1
   339  0059                     _ledg_pecent:	
   340  0059                     	ds	1
   341  005A                     _ledr_pecent:	
   342  005A                     	ds	1
   343  005B                     _fog_drive_mod:	
   344  005B                     	ds	1
   345  005C                     _time_10ms_flg:	
   346  005C                     	ds	1
   347  005D                     _fog_time_5ms_flg:	
   348  005D                     	ds	1
   349                           
   350                           	psect	bssBANK1
   351  00A0                     __pbssBANK1:	
   352  00A0                     Test_water@strupc:	
   353  00A0                     	ds	2
   354  00A2                     Set_Pwm_Onoff@cursumt:	
   355  00A2                     	ds	2
   356  00A4                     _cursum:	
   357  00A4                     	ds	2
   358  00A6                     _timing_10ms_cnt:	
   359  00A6                     	ds	2
   360                           
   361                           	psect	clrtext
   362  07D9                     clear_ram0:	
   363                           ;	Called with FSR containing the base address, and
   364                           ;	W with the last address+1
   365                           
   366  07D9  0064               	clrwdt	;clear the watchdog before getting into this loop
   367  07DA                     clrloop0:	
   368  07DA  0180               	clrf	0	;clear RAM location pointed to by FSR
   369  07DB  0A84               	incf	4,f	;increment pointer
   370  07DC  0604               	xorwf	4,w	;XOR with final address
   371  07DD  1903               	btfsc	3,2	;have we reached the end yet?
   372  07DE  3400               	retlw	0	;all done for this memory range, return
   373  07DF  0604               	xorwf	4,w	;XOR again to restore value
   374  07E0  2FDA               	goto	clrloop0	;do the next byte
   375                           
   376                           	psect	cstackCOMMON
   377  0072                     __pcstackCOMMON:	
   378  0072                     ?_Set_jiyi_re:	
   379  0072                     ?_register_init:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0072                     ?_data_init:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0072                     ?_drive_data_init:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0072                     ?_Sys_set:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0072                     ?_fog_erro_scan:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0072                     ?_button_scan:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0072                     ?_fan_handle:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0072                     ?_fog_handle:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0072                     ?_beep_handle:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0072                     ?_led_handle:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0072                     ?_timing_handle:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0072                     ?_Test_Pwm:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0072                     ?_Set_Pwm_Onoff:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0072                     ??_Set_Pwm_Onoff:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0072                     ?_main:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0072                     ?_time0:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0072                     ?_Test_Pwm_Cur:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0072                     ?_PFG_read_fst:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0072                     ?_Work_RAM_CLR:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0072                     ?_Get_CUR_Dat:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0072                     ?_YTPFG_Flash:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0072                     ?_Test_PWM_Fst:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0072                     ?_Test_water:	
   446                           ; 1 bytes @ 0x0
   447                           
   448                           
   449                           ; 1 bytes @ 0x0
   450  0072                     	ds	1
   451  0073                     Set_Pwm_Onoff@funod:	
   452                           
   453                           ; 1 bytes @ 0x1
   454  0073                     	ds	1
   455  0074                     Set_Pwm_Onoff@fun:	
   456                           
   457                           ; 1 bytes @ 0x2
   458  0074                     	ds	1
   459  0075                     ??_time0:	
   460                           
   461                           ; 1 bytes @ 0x3
   462  0075                     	ds	2
   463                           
   464                           	psect	cstackBANK0
   465  005E                     __pcstackBANK0:	
   466  005E                     ??_Set_jiyi_re:	
   467  005E                     ??_data_init:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  005E                     ??_drive_data_init:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  005E                     ??_Sys_set:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  005E                     ??_button_scan:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  005E                     ??_fan_handle:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  005E                     ??_fog_handle:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  005E                     ??_beep_handle:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  005E                     ??_led_handle:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  005E                     ??_timing_handle:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  005E                     ?_Delay:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  005E                     ?_Pwm_add:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  005E                     ?_Pwm_dec:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  005E                     ??_Work_RAM_CLR:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  005E                     ??_YTPFG_Flash:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  005E                     ??_Test_water:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  005E                     ?___awdiv:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  005E                     Set_jiyi_re@raddr:	
   516                           ; 2 bytes @ 0x0
   517                           
   518  005E                     Delay@dtemp:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  005E                     Pwm_add@pwmlset:	
   522                           ; 2 bytes @ 0x0
   523                           
   524  005E                     Pwm_dec@pwmfset:	
   525                           ; 2 bytes @ 0x0
   526                           
   527  005E                     ___awdiv@divisor:	
   528                           ; 2 bytes @ 0x0
   529                           
   530                           
   531                           ; 2 bytes @ 0x0
   532  005E                     	ds	1
   533  005F                     Set_jiyi_re@redata:	
   534                           
   535                           ; 1 bytes @ 0x1
   536  005F                     	ds	1
   537  0060                     ??_Delay:	
   538  0060                     ?_Delay_nms:	
   539                           ; 1 bytes @ 0x2
   540                           
   541  0060                     ??_Pwm_add:	
   542                           ; 1 bytes @ 0x2
   543                           
   544  0060                     ??_Pwm_dec:	
   545                           ; 1 bytes @ 0x2
   546                           
   547  0060                     ??_PFG_read_fst:	
   548                           ; 1 bytes @ 0x2
   549                           
   550  0060                     YTPFG_Flash@templ:	
   551                           ; 1 bytes @ 0x2
   552                           
   553  0060                     Delay_nms@inittempl:	
   554                           ; 1 bytes @ 0x2
   555                           
   556  0060                     ___awdiv@dividend:	
   557                           ; 2 bytes @ 0x2
   558                           
   559                           
   560                           ; 2 bytes @ 0x2
   561  0060                     	ds	1
   562  0061                     Test_water@temph:	
   563  0061                     YTPFG_Flash@temp:	
   564                           ; 1 bytes @ 0x3
   565                           
   566                           
   567                           ; 2 bytes @ 0x3
   568  0061                     	ds	1
   569  0062                     ??_Delay_nms:	
   570  0062                     ??___awdiv:	
   571                           ; 1 bytes @ 0x4
   572                           
   573  0062                     Pwm_add@addcl:	
   574                           ; 1 bytes @ 0x4
   575                           
   576  0062                     Pwm_dec@deccl:	
   577                           ; 1 bytes @ 0x4
   578                           
   579  0062                     PFG_read_fst@templ:	
   580                           ; 1 bytes @ 0x4
   581                           
   582  0062                     ___awdiv@counter:	
   583                           ; 1 bytes @ 0x4
   584                           
   585  0062                     Delay_nms@i:	
   586                           ; 1 bytes @ 0x4
   587                           
   588  0062                     Test_water@temp:	
   589                           ; 2 bytes @ 0x4
   590                           
   591                           
   592                           ; 2 bytes @ 0x4
   593  0062                     	ds	1
   594  0063                     PFG_read_fst@temph:	
   595  0063                     ___awdiv@sign:	
   596                           ; 1 bytes @ 0x5
   597                           
   598  0063                     Pwm_add@temp:	
   599                           ; 1 bytes @ 0x5
   600                           
   601  0063                     Pwm_dec@temp:	
   602                           ; 2 bytes @ 0x5
   603                           
   604                           
   605                           ; 2 bytes @ 0x5
   606  0063                     	ds	1
   607  0064                     Delay_nms@gtemp:	
   608  0064                     PFG_read_fst@pfgconset:	
   609                           ; 1 bytes @ 0x6
   610                           
   611  0064                     ___awdiv@quotient:	
   612                           ; 1 bytes @ 0x6
   613                           
   614                           
   615                           ; 2 bytes @ 0x6
   616  0064                     	ds	1
   617  0065                     ??_register_init:	
   618  0065                     ??_Test_Pwm_Cur:	
   619                           ; 1 bytes @ 0x7
   620                           
   621  0065                     Test_Pwm_Cur@temph:	
   622                           ; 1 bytes @ 0x7
   623                           
   624  0065                     PFG_read_fst@temp:	
   625                           ; 1 bytes @ 0x7
   626                           
   627                           
   628                           ; 2 bytes @ 0x7
   629  0065                     	ds	1
   630  0066                     ??_Get_CUR_Dat:	
   631  0066                     Test_Pwm_Cur@templ:	
   632                           ; 1 bytes @ 0x8
   633                           
   634                           
   635                           ; 1 bytes @ 0x8
   636  0066                     	ds	1
   637  0067                     ??_Test_PWM_Fst:	
   638  0067                     Test_PWM_Fst@templ:	
   639                           ; 1 bytes @ 0x9
   640                           
   641                           
   642                           ; 1 bytes @ 0x9
   643  0067                     	ds	1
   644  0068                     ??_Test_Pwm:	
   645                           
   646                           ; 1 bytes @ 0xA
   647  0068                     	ds	4
   648  006C                     Test_Pwm@templ:	
   649                           
   650                           ; 1 bytes @ 0xE
   651  006C                     	ds	1
   652  006D                     ??_fog_erro_scan:	
   653  006D                     ??_main:	
   654                           ; 1 bytes @ 0xF
   655                           
   656                           
   657                           	psect	maintext
   658  0715                     __pmaintext:	
   659                           ; 1 bytes @ 0xF
   660 ;;
   661 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   662 ;;
   663 ;; *************** function _main *****************
   664 ;; Defined at:
   665 ;;		line 76 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : B00/0
   676 ;;		On exit  : 200/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels required when called:    7
   685 ;; This function calls:
   686 ;;		_Sys_set
   687 ;;		_beep_handle
   688 ;;		_button_scan
   689 ;;		_data_init
   690 ;;		_drive_data_init
   691 ;;		_fan_handle
   692 ;;		_fog_erro_scan
   693 ;;		_fog_handle
   694 ;;		_led_handle
   695 ;;		_register_init
   696 ;;		_timing_handle
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _main
   704  0715                     _main:	
   705                           
   706                           ;main.c: 79: register_init();
   707                           
   708                           ;incstack = 0
   709                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   710  0715  118A  2693  118A   	fcall	_register_init
   711                           
   712                           ;main.c: 80: data_init();
   713  0718  118A  2785  118A   	fcall	_data_init
   714                           
   715                           ;main.c: 81: drive_data_init();
   716  071B  118A  27D0  118A   	fcall	_drive_data_init
   717  071E                     l9848:	
   718                           
   719                           ;main.c: 83: {
   720                           ;main.c: 84: Sys_set();
   721  071E  118A  27A3  118A   	fcall	_Sys_set
   722                           
   723                           ;main.c: 85: if(fog_time_5ms_flg)
   724  0721  085D               	movf	_fog_time_5ms_flg,w
   725  0722  1903               	btfsc	3,2
   726  0723  2F28               	goto	l9856
   727                           
   728                           ;main.c: 86: {
   729                           ;main.c: 87: fog_time_5ms_flg=0;
   730  0724  01DD               	clrf	_fog_time_5ms_flg
   731                           
   732                           ;main.c: 91: fog_erro_scan();
   733  0725  118A  2022  118A   	fcall	_fog_erro_scan
   734  0728                     l9856:	
   735                           
   736                           ;main.c: 92: }
   737                           ;main.c: 93: if(time_10ms_flg)
   738  0728  085C               	movf	_time_10ms_flg,w
   739  0729  1903               	btfsc	3,2
   740  072A  2F1E               	goto	l9848
   741                           
   742                           ;main.c: 94: {
   743                           ;main.c: 95: time_10ms_flg=0;
   744  072B  01DC               	clrf	_time_10ms_flg
   745  072C  0064               	clrwdt	;# 
   746                           
   747                           ;main.c: 98: button_scan();
   748  072D  118A  2539  118A   	fcall	_button_scan
   749                           
   750                           ;main.c: 100: fan_handle();
   751  0730  118A  27E1  118A   	fcall	_fan_handle
   752                           
   753                           ;main.c: 101: fog_handle();
   754  0733  118A  27B8  118A   	fcall	_fog_handle
   755                           
   756                           ;main.c: 102: beep_handle();
   757  0736  118A  2766  118A   	fcall	_beep_handle
   758                           
   759                           ;main.c: 103: led_handle();
   760  0739  118A  23BC  118A   	fcall	_led_handle
   761                           
   762                           ;main.c: 104: timing_handle();
   763  073C  118A  2381  118A   	fcall	_timing_handle
   764  073F  2F1E               	goto	l9848
   765  0740                     __end_of_main:	
   766                           
   767                           	psect	text1
   768  0381                     __ptext1:	
   769 ;; *************** function _timing_handle *****************
   770 ;; Defined at:
   771 ;;		line 695 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   780 ;; Tracked objects:
   781 ;;		On entry : 300/0
   782 ;;		On exit  : 200/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    2
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           
   800                           ;psect for function _timing_handle
   801  0381                     _timing_handle:	
   802                           
   803                           ;main.c: 697: switch(work_mod)
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _timing_handle: [wreg-fsr0h+status,2+status,0]
   807  0381  2B8D               	goto	l9820
   808  0382                     l9806:	
   809                           
   810                           ;main.c: 700: timing_set_num=60;
   811  0382  303C               	movlw	60
   812  0383  2B87               	goto	L2
   813  0384                     l9810:	
   814                           ;main.c: 701: break;
   815                           
   816                           
   817                           ;main.c: 706: timing_set_num=120;
   818  0384  3078               	movlw	120
   819  0385  2B87               	goto	L2
   820  0386                     l9812:	
   821                           ;main.c: 707: break;
   822                           
   823                           
   824                           ;main.c: 709: timing_set_num=180;
   825  0386  30B4               	movlw	180
   826  0387                     L2:	
   827  0387  00C4               	movwf	_timing_set_num
   828                           
   829                           ;main.c: 710: break;
   830  0388  2B9E               	goto	l9822
   831  0389                     l9814:	
   832                           
   833                           ;main.c: 712: timing_set_num=0;
   834  0389  01C4               	clrf	_timing_set_num
   835                           
   836                           ;main.c: 713: break;
   837  038A  2B9E               	goto	l9822
   838  038B                     l9816:	
   839                           
   840                           ;main.c: 715: work_mod=0;
   841  038B  01D4               	clrf	_work_mod
   842                           
   843                           ;main.c: 716: break;
   844  038C  2B9E               	goto	l9822
   845  038D                     l9820:	
   846  038D  0854               	movf	_work_mod,w
   847                           
   848                           ; Switch size 1, requested type "space"
   849                           ; Number of cases is 5, Range of values is 0 to 4
   850                           ; switch strategies available:
   851                           ; Name         Instructions Cycles
   852                           ; simple_byte           16     9 (average)
   853                           ; direct_byte           17     7 (fixed)
   854                           ; jumptable            260     6 (fixed)
   855                           ;	Chosen strategy is simple_byte
   856  038E  3A00               	xorlw	0	; case 0
   857  038F  1903               	skipnz
   858  0390  2B82               	goto	l9806
   859  0391  3A01               	xorlw	1	; case 1
   860  0392  1903               	skipnz
   861  0393  2B82               	goto	l9806
   862  0394  3A03               	xorlw	3	; case 2
   863  0395  1903               	skipnz
   864  0396  2B84               	goto	l9810
   865  0397  3A01               	xorlw	1	; case 3
   866  0398  1903               	skipnz
   867  0399  2B86               	goto	l9812
   868  039A  3A07               	xorlw	7	; case 4
   869  039B  1903               	skipnz
   870  039C  2B89               	goto	l9814
   871  039D  2B8B               	goto	l9816
   872  039E                     l9822:	
   873                           
   874                           ;main.c: 718: if(!work_mod)
   875  039E  0854               	movf	_work_mod,w
   876  039F  1D03               	btfss	3,2
   877  03A0  2BA3               	goto	l9826
   878  03A1                     l9824:	
   879                           
   880                           ;main.c: 719: {
   881                           ;main.c: 720: timing_10ms_cnt=0;
   882                           
   883                           ;main.c: 721: timing_1min_cnt=0;
   884  03A1  25B2               	fcall	PL6	;call to abstracted procedure
   885                           
   886                           ;main.c: 722: }
   887  03A2  0008               	return
   888  03A3                     l9826:	
   889                           
   890                           ;main.c: 723: else
   891                           ;main.c: 724: {
   892                           ;main.c: 725: if(!timing_set_num)
   893  03A3  0844               	movf	_timing_set_num,w
   894  03A4  1903               	btfsc	3,2
   895  03A5  2BA1               	goto	l9824
   896                           
   897                           ;main.c: 730: else
   898                           ;main.c: 731: {
   899                           ;main.c: 732: timing_10ms_cnt++;
   900  03A6  1683               	bsf	3,5	;RP0=1, select bank1
   901  03A7  0AA6               	incf	_timing_10ms_cnt^(0+128),f
   902  03A8  1903               	skipnz
   903  03A9  0AA7               	incf	(_timing_10ms_cnt+1)^(0+128),f
   904                           
   905                           ;main.c: 733: if(timing_10ms_cnt >= 6000)
   906  03AA  3017               	movlw	23
   907  03AB  0227               	subwf	(_timing_10ms_cnt+1)^(0+128),w
   908  03AC  3070               	movlw	112
   909  03AD  1903               	skipnz
   910  03AE  0226               	subwf	_timing_10ms_cnt^(0+128),w
   911  03AF  1C03               	skipc
   912  03B0  0008               	return
   913                           
   914                           ;main.c: 734: {
   915                           ;main.c: 735: timing_10ms_cnt=0;
   916  03B1  01A6               	clrf	_timing_10ms_cnt^(0+128)
   917  03B2  01A7               	clrf	(_timing_10ms_cnt+1)^(0+128)
   918                           
   919                           ;main.c: 736: timing_1min_cnt++;
   920  03B3  1283               	bcf	3,5	;RP0=0, select bank0
   921  03B4  0AC5               	incf	_timing_1min_cnt,f
   922                           
   923                           ;main.c: 737: if(timing_1min_cnt >= timing_set_num)
   924  03B5  0844               	movf	_timing_set_num,w
   925  03B6  0245               	subwf	_timing_1min_cnt,w
   926  03B7  1C03               	skipc
   927  03B8  0008               	return
   928  03B9  3008               	movlw	8
   929                           
   930                           ;main.c: 738: {
   931                           ;main.c: 739: timing_1min_cnt=0;
   932  03BA  01C5               	clrf	_timing_1min_cnt
   933                           
   934                           ;main.c: 740: work_mod=0;
   935                           
   936                           ;main.c: 741: led_mod=0;
   937                           
   938                           ;main.c: 742: beep_cnt=8;
   939  03BB  2DBE               	ljmp	PL22	;call to abstracted procedure
   940  03BC                     __end_of_timing_handle:	
   941  03BC                     __ptext5:	
   942 ;; *************** function _led_handle *****************
   943 ;; Defined at:
   944 ;;		line 363 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   953 ;; Tracked objects:
   954 ;;		On entry : 100/0
   955 ;;		On exit  : 300/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0
   961 ;;      Totals:         0       0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    2
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _led_handle
   974  03BC                     _led_handle:	
   975                           
   976                           ;main.c: 365: if(!led_mod)
   977                           
   978                           ;incstack = 0
   979                           ; Regs used in _led_handle: [wreg-fsr0h+status,2+status,0]
   980  03BC  087A               	movf	_led_mod,w
   981  03BD  1D03               	btfss	3,2
   982  03BE  2BC7               	goto	l9556
   983  03BF  3064               	movlw	100
   984                           
   985                           ;main.c: 366: {
   986                           ;main.c: 367: led_breath_cnt=0;
   987  03C0  1303               	bcf	3,6	;RP1=0, select bank0
   988                           
   989                           ;main.c: 368: led_breath_way=0;
   990                           
   991                           ;main.c: 369: ledr_breath_duty=100;
   992                           
   993                           ;main.c: 370: ledg_breath_duty=100;
   994                           
   995                           ;main.c: 371: ledb_breath_duty=100;
   996  03C1  25B8  118A         	fcall	PL12	;call to abstracted procedure
   997                           
   998                           ;main.c: 373: ledr_pecent=0;
   999  03C3  01DA               	clrf	_ledr_pecent
  1000  03C4                     l9552:	
  1001                           
  1002                           ;main.c: 374: ledg_pecent=0;
  1003  03C4  01D9               	clrf	_ledg_pecent
  1004  03C5                     l9554:	
  1005                           
  1006                           ;main.c: 375: ledb_pecent=0;
  1007  03C5  01D8               	clrf	_ledb_pecent
  1008                           
  1009                           ;main.c: 376: }
  1010  03C6  2C8C               	goto	l9724
  1011  03C7                     l9556:	
  1012                           
  1013                           ;main.c: 377: else if(led_mod == 1)
  1014  03C7  0B7A               	decfsz	_led_mod,w
  1015  03C8  2C1E               	goto	l9626
  1016  03C9  3008               	movlw	8
  1017                           
  1018                           ;main.c: 378: {
  1019                           ;main.c: 379: led_breath_cnt++;
  1020  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1021  03CB  0AD2               	incf	_led_breath_cnt,f
  1022                           
  1023                           ;main.c: 380: if(led_breath_cnt >= 8)
  1024  03CC  0252               	subwf	_led_breath_cnt,w
  1025  03CD  1C03               	skipc
  1026  03CE  2C17               	goto	l9624
  1027                           
  1028                           ;main.c: 381: {
  1029                           ;main.c: 382: led_breath_cnt=0;
  1030  03CF  01D2               	clrf	_led_breath_cnt
  1031                           
  1032                           ;main.c: 383: switch(led_breath_way)
  1033  03D0  2C09               	goto	l9622
  1034  03D1                     l9564:	
  1035                           
  1036                           ;main.c: 386: ledg_breath_duty=100;
  1037  03D1  3064               	movlw	100
  1038  03D2  00D0               	movwf	_ledg_breath_duty
  1039                           
  1040                           ;main.c: 387: if(ledr_breath_duty)
  1041  03D3  0879               	movf	_ledr_breath_duty,w
  1042  03D4  1D03               	btfss	3,2
  1043                           
  1044                           ;main.c: 388: {
  1045                           ;main.c: 389: ledr_breath_duty--;
  1046  03D5  03F9               	decf	_ledr_breath_duty,f
  1047                           
  1048                           ;main.c: 390: }
  1049                           ;main.c: 391: if(ledb_breath_duty)
  1050  03D6  084F               	movf	_ledb_breath_duty,w
  1051  03D7  1903               	btfsc	3,2
  1052  03D8  2BDB               	goto	l9574
  1053                           
  1054                           ;main.c: 392: {
  1055                           ;main.c: 393: ledb_breath_duty--;
  1056  03D9  03CF               	decf	_ledb_breath_duty,f
  1057                           
  1058                           ;main.c: 394: }
  1059  03DA  2C17               	goto	l9624
  1060  03DB                     l9574:	
  1061                           
  1062                           ;main.c: 395: else
  1063                           ;main.c: 396: {
  1064                           ;main.c: 397: led_breath_way++;
  1065  03DB  0AD1               	incf	_led_breath_way,f
  1066                           
  1067                           ;main.c: 398: ledr_breath_duty=0;
  1068  03DC  01F9               	clrf	_ledr_breath_duty
  1069  03DD  2C17               	goto	l9624
  1070  03DE                     l9578:	
  1071  03DE  3064               	movlw	100
  1072                           
  1073                           ;main.c: 402: ledb_breath_duty=0;
  1074  03DF  01CF               	clrf	_ledb_breath_duty
  1075                           
  1076                           ;main.c: 403: if(ledr_breath_duty < 100)
  1077  03E0  0279               	subwf	_ledr_breath_duty,w
  1078  03E1  1C03               	btfss	3,0
  1079                           
  1080                           ;main.c: 404: {
  1081                           ;main.c: 405: ledr_breath_duty++;
  1082  03E2  0AF9               	incf	_ledr_breath_duty,f
  1083                           
  1084                           ;main.c: 406: }
  1085                           ;main.c: 407: if(ledg_breath_duty)
  1086  03E3  0850               	movf	_ledg_breath_duty,w
  1087  03E4  1903               	btfsc	3,2
  1088  03E5  2BE8               	goto	l9588
  1089                           
  1090                           ;main.c: 408: {
  1091                           ;main.c: 409: ledg_breath_duty--;
  1092  03E6  03D0               	decf	_ledg_breath_duty,f
  1093                           
  1094                           ;main.c: 410: }
  1095  03E7  2C17               	goto	l9624
  1096  03E8                     l9588:	
  1097                           
  1098                           ;main.c: 411: else
  1099                           ;main.c: 412: {
  1100                           ;main.c: 413: led_breath_way++;
  1101  03E8  0AD1               	incf	_led_breath_way,f
  1102  03E9                     l9590:	
  1103                           
  1104                           ;main.c: 414: ledr_breath_duty = 100;
  1105  03E9  3064               	movlw	100
  1106  03EA  00F9               	movwf	_ledr_breath_duty
  1107  03EB  2C17               	goto	l9624
  1108  03EC                     l9592:	
  1109  03EC  3064               	movlw	100
  1110                           
  1111                           ;main.c: 418: ledg_breath_duty=0;
  1112  03ED  01D0               	clrf	_ledg_breath_duty
  1113                           
  1114                           ;main.c: 419: if(ledb_breath_duty < 100)
  1115  03EE  024F               	subwf	_ledb_breath_duty,w
  1116  03EF  1C03               	btfss	3,0
  1117                           
  1118                           ;main.c: 420: {
  1119                           ;main.c: 421: ledb_breath_duty++;
  1120  03F0  0ACF               	incf	_ledb_breath_duty,f
  1121                           
  1122                           ;main.c: 422: }
  1123                           ;main.c: 423: if(ledr_breath_duty)
  1124  03F1  0879               	movf	_ledr_breath_duty,w
  1125  03F2  1903               	btfsc	3,2
  1126  03F3  2BF6               	goto	l9602
  1127                           
  1128                           ;main.c: 424: {
  1129                           ;main.c: 425: ledr_breath_duty--;
  1130  03F4  03F9               	decf	_ledr_breath_duty,f
  1131                           
  1132                           ;main.c: 426: }
  1133  03F5  2C17               	goto	l9624
  1134  03F6                     l9602:	
  1135  03F6  3064               	movlw	100
  1136                           
  1137                           ;main.c: 427: else
  1138                           ;main.c: 428: {
  1139                           ;main.c: 429: led_breath_way++;
  1140  03F7  0AD1               	incf	_led_breath_way,f
  1141                           
  1142                           ;main.c: 430: ledb_breath_duty = 100;
  1143  03F8  00CF               	movwf	_ledb_breath_duty
  1144  03F9  2C17               	goto	l9624
  1145  03FA                     l9606:	
  1146                           
  1147                           ;main.c: 434: ledb_breath_duty = 100;
  1148  03FA  3064               	movlw	100
  1149  03FB  00CF               	movwf	_ledb_breath_duty
  1150                           
  1151                           ;main.c: 435: if(ledr_breath_duty < 100)
  1152  03FC  0279               	subwf	_ledr_breath_duty,w
  1153  03FD  1C03               	btfss	3,0
  1154                           
  1155                           ;main.c: 436: {
  1156                           ;main.c: 437: ledr_breath_duty++;
  1157  03FE  0AF9               	incf	_ledr_breath_duty,f
  1158                           
  1159                           ;main.c: 438: }
  1160                           ;main.c: 439: if(ledg_breath_duty < 100)
  1161  03FF  3064               	movlw	100
  1162  0400  0250               	subwf	_ledg_breath_duty,w
  1163  0401  1803               	skipnc
  1164  0402  2C05               	goto	l9614
  1165                           
  1166                           ;main.c: 440: {
  1167                           ;main.c: 441: ledg_breath_duty++;
  1168  0403  0AD0               	incf	_ledg_breath_duty,f
  1169                           
  1170                           ;main.c: 442: }
  1171  0404  2C17               	goto	l9624
  1172  0405                     l9614:	
  1173                           
  1174                           ;main.c: 443: else
  1175                           ;main.c: 444: {
  1176                           ;main.c: 445: led_breath_way=0;
  1177  0405  01D1               	clrf	_led_breath_way
  1178  0406  2BE9               	goto	l9590
  1179  0407                     l9618:	
  1180                           
  1181                           ;main.c: 450: led_breath_way=0;
  1182  0407  01D1               	clrf	_led_breath_way
  1183                           
  1184                           ;main.c: 451: break;
  1185  0408  2C17               	goto	l9624
  1186  0409                     l9622:	
  1187  0409  0851               	movf	_led_breath_way,w
  1188                           
  1189                           ; Switch size 1, requested type "space"
  1190                           ; Number of cases is 4, Range of values is 0 to 3
  1191                           ; switch strategies available:
  1192                           ; Name         Instructions Cycles
  1193                           ; simple_byte           13     7 (average)
  1194                           ; direct_byte           15     7 (fixed)
  1195                           ; jumptable            260     6 (fixed)
  1196                           ;	Chosen strategy is simple_byte
  1197  040A  3A00               	xorlw	0	; case 0
  1198  040B  1903               	skipnz
  1199  040C  2BD1               	goto	l9564
  1200  040D  3A01               	xorlw	1	; case 1
  1201  040E  1903               	skipnz
  1202  040F  2BDE               	goto	l9578
  1203  0410  3A03               	xorlw	3	; case 2
  1204  0411  1903               	skipnz
  1205  0412  2BEC               	goto	l9592
  1206  0413  3A01               	xorlw	1	; case 3
  1207  0414  1903               	skipnz
  1208  0415  2BFA               	goto	l9606
  1209  0416  2C07               	goto	l9618
  1210  0417                     l9624:	
  1211                           
  1212                           ;main.c: 453: }
  1213                           ;main.c: 454: ledr_pecent=ledr_breath_duty;
  1214  0417  0879               	movf	_ledr_breath_duty,w
  1215  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0419  00DA               	movwf	_ledr_pecent
  1217                           
  1218                           ;main.c: 455: ledg_pecent=ledg_breath_duty;
  1219  041A  0850               	movf	_ledg_breath_duty,w
  1220  041B  00D9               	movwf	_ledg_pecent
  1221                           
  1222                           ;main.c: 456: ledb_pecent=ledb_breath_duty;
  1223  041C  084F               	movf	_ledb_breath_duty,w
  1224  041D  2C8B               	goto	L3
  1225  041E                     l9626:	
  1226                           ;main.c: 457: }
  1227                           
  1228                           
  1229                           ;main.c: 458: else if(led_mod == 2)
  1230  041E  3002               	movlw	2
  1231  041F  067A               	xorwf	_led_mod,w
  1232  0420  1903               	btfsc	3,2
  1233  0421  2C17               	goto	l9624
  1234                           
  1235                           ;main.c: 464: else if(led_mod == 3)
  1236  0422  3003               	movlw	3
  1237  0423  067A               	xorwf	_led_mod,w
  1238  0424  1D03               	btfss	3,2
  1239  0425  2C28               	goto	l9638
  1240  0426  3032               	movlw	50
  1241  0427  2C2D               	goto	L14
  1242  0428                     l9638:	
  1243                           ;main.c: 467: ledg_pecent=50;
  1244                           
  1245                           ;main.c: 465: {
  1246                           ;main.c: 466: ledr_pecent=0;
  1247                           
  1248                           
  1249                           ;main.c: 470: else if(led_mod == 4)
  1250  0428  3004               	movlw	4
  1251  0429  067A               	xorwf	_led_mod,w
  1252  042A  1D03               	btfss	3,2
  1253  042B  2C30               	goto	l9646
  1254  042C  3064               	movlw	100
  1255  042D                     L14:	
  1256                           
  1257                           ;main.c: 471: {
  1258                           ;main.c: 472: ledr_pecent=0;
  1259  042D  1303               	bcf	3,6	;RP1=0, select bank0
  1260  042E  01DA               	clrf	_ledr_pecent
  1261                           
  1262                           ;main.c: 473: ledg_pecent=100;
  1263  042F  2C5D               	goto	L7
  1264  0430                     l9646:	
  1265                           
  1266                           ;main.c: 476: else if(led_mod == 5)
  1267  0430  3005               	movlw	5
  1268  0431  067A               	xorwf	_led_mod,w
  1269  0432  1D03               	btfss	3,2
  1270  0433  2C39               	goto	l9652
  1271                           
  1272                           ;main.c: 477: {
  1273                           ;main.c: 478: ledr_pecent=0;
  1274  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1275  0435  01DA               	clrf	_ledr_pecent
  1276  0436                     L8:	
  1277                           
  1278                           ;main.c: 479: ledg_pecent=0;
  1279  0436  01D9               	clrf	_ledg_pecent
  1280  0437                     l9650:	
  1281                           
  1282                           ;main.c: 480: ledb_pecent=50;
  1283  0437  3032               	movlw	50
  1284  0438  2C8B               	goto	L3
  1285  0439                     l9652:	
  1286                           ;main.c: 481: }
  1287                           
  1288                           
  1289                           ;main.c: 482: else if(led_mod == 6)
  1290  0439  3006               	movlw	6
  1291  043A  067A               	xorwf	_led_mod,w
  1292  043B  1D03               	btfss	3,2
  1293  043C  2C42               	goto	l9658
  1294                           
  1295                           ;main.c: 483: {
  1296                           ;main.c: 484: ledr_pecent=0;
  1297  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1298  043E  01DA               	clrf	_ledr_pecent
  1299  043F                     L9:	
  1300                           
  1301                           ;main.c: 485: ledg_pecent=0;
  1302  043F  01D9               	clrf	_ledg_pecent
  1303  0440                     l9656:	
  1304                           
  1305                           ;main.c: 486: ledb_pecent=100;
  1306  0440  3064               	movlw	100
  1307  0441  2C8B               	goto	L3
  1308  0442                     l9658:	
  1309                           ;main.c: 487: }
  1310                           
  1311                           
  1312                           ;main.c: 488: else if(led_mod == 7)
  1313  0442  3007               	movlw	7
  1314  0443  067A               	xorwf	_led_mod,w
  1315  0444  1D03               	btfss	3,2
  1316  0445  2C48               	goto	l9666
  1317                           
  1318                           ;main.c: 489: {
  1319                           ;main.c: 490: ledr_pecent=50;
  1320  0446  3032               	movlw	50
  1321  0447  2C4D               	goto	L6
  1322  0448                     l9666:	
  1323                           
  1324                           ;main.c: 494: else if(led_mod == 8)
  1325  0448  3008               	movlw	8
  1326  0449  067A               	xorwf	_led_mod,w
  1327  044A  1D03               	btfss	3,2
  1328  044B  2C50               	goto	l9674
  1329                           
  1330                           ;main.c: 495: {
  1331                           ;main.c: 496: ledr_pecent=100;
  1332  044C  3064               	movlw	100
  1333  044D                     L6:	
  1334  044D  1303               	bcf	3,6	;RP1=0, select bank0
  1335  044E  00DA               	movwf	_ledr_pecent
  1336  044F  2BC4               	goto	l9552
  1337  0450                     l9674:	
  1338                           
  1339                           ;main.c: 500: else if(led_mod == 9)
  1340  0450  3009               	movlw	9
  1341  0451  067A               	xorwf	_led_mod,w
  1342  0452  1D03               	btfss	3,2
  1343  0453  2C56               	goto	l9680
  1344                           
  1345                           ;main.c: 501: {
  1346                           ;main.c: 502: ledr_pecent=50;
  1347  0454  3032               	movlw	50
  1348  0455  2C5B               	goto	L13
  1349  0456                     l9680:	
  1350                           ;main.c: 503: ledg_pecent=50;
  1351                           
  1352                           
  1353                           ;main.c: 506: else if(led_mod == 10)
  1354  0456  300A               	movlw	10
  1355  0457  067A               	xorwf	_led_mod,w
  1356  0458  1D03               	btfss	3,2
  1357  0459  2C5F               	goto	l9686
  1358                           
  1359                           ;main.c: 507: {
  1360                           ;main.c: 508: ledr_pecent=100;
  1361  045A  3064               	movlw	100
  1362  045B                     L13:	
  1363  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1364  045C  00DA               	movwf	_ledr_pecent
  1365  045D                     L7:	
  1366                           
  1367                           ;main.c: 509: ledg_pecent=100;
  1368  045D  00D9               	movwf	_ledg_pecent
  1369  045E  2BC5               	goto	l9554
  1370  045F                     l9686:	
  1371                           
  1372                           ;main.c: 512: else if(led_mod == 11)
  1373  045F  300B               	movlw	11
  1374  0460  067A               	xorwf	_led_mod,w
  1375  0461  1D03               	btfss	3,2
  1376  0462  2C67               	goto	l9694
  1377                           
  1378                           ;main.c: 513: {
  1379                           ;main.c: 514: ledr_pecent=50;
  1380  0463  3032               	movlw	50
  1381  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0465  00DA               	movwf	_ledr_pecent
  1383  0466  2C36               	goto	L8
  1384  0467                     l9694:	
  1385                           ;main.c: 515: ledg_pecent=0;
  1386                           
  1387                           
  1388                           ;main.c: 518: else if(led_mod == 12)
  1389  0467  300C               	movlw	12
  1390  0468  067A               	xorwf	_led_mod,w
  1391  0469  1D03               	btfss	3,2
  1392  046A  2C6F               	goto	l9702
  1393                           
  1394                           ;main.c: 519: {
  1395                           ;main.c: 520: ledr_pecent=100;
  1396  046B  3064               	movlw	100
  1397  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1398  046D  00DA               	movwf	_ledr_pecent
  1399  046E  2C3F               	goto	L9
  1400  046F                     l9702:	
  1401                           ;main.c: 521: ledg_pecent=0;
  1402                           
  1403                           
  1404                           ;main.c: 524: else if(led_mod == 13)
  1405  046F  300D               	movlw	13
  1406  0470  067A               	xorwf	_led_mod,w
  1407  0471  1D03               	btfss	3,2
  1408  0472  2C78               	goto	l9710
  1409  0473  3032               	movlw	50
  1410                           
  1411                           ;main.c: 525: {
  1412                           ;main.c: 526: ledr_pecent=0;
  1413  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0475  01DA               	clrf	_ledr_pecent
  1415                           
  1416                           ;main.c: 527: ledg_pecent=50;
  1417  0476  00D9               	movwf	_ledg_pecent
  1418  0477  2C37               	goto	l9650
  1419  0478                     l9710:	
  1420                           
  1421                           ;main.c: 530: else if(led_mod == 14)
  1422  0478  300E               	movlw	14
  1423  0479  067A               	xorwf	_led_mod,w
  1424  047A  1D03               	btfss	3,2
  1425  047B  2C81               	goto	l9718
  1426  047C  3064               	movlw	100
  1427                           
  1428                           ;main.c: 531: {
  1429                           ;main.c: 532: ledr_pecent=0;
  1430  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1431  047E  01DA               	clrf	_ledr_pecent
  1432                           
  1433                           ;main.c: 533: ledg_pecent=100;
  1434  047F  00D9               	movwf	_ledg_pecent
  1435  0480  2C40               	goto	l9656
  1436  0481                     l9718:	
  1437                           
  1438                           ;main.c: 536: else if(led_mod == 15)
  1439  0481  300F               	movlw	15
  1440  0482  067A               	xorwf	_led_mod,w
  1441  0483  1D03               	btfss	3,2
  1442  0484  2C87               	goto	l9722
  1443                           
  1444                           ;main.c: 537: {
  1445                           ;main.c: 538: ledr_pecent=50;
  1446  0485  3032               	movlw	50
  1447  0486  2C88               	goto	L12
  1448  0487                     l9722:	
  1449                           ;main.c: 541: }
  1450                           
  1451                           ;main.c: 540: ledb_pecent=50;
  1452                           
  1453                           ;main.c: 539: ledg_pecent=50;
  1454                           
  1455                           
  1456                           ;main.c: 542: else
  1457                           ;main.c: 543: {
  1458                           ;main.c: 544: ledr_pecent=100;
  1459  0487  3064               	movlw	100
  1460  0488                     L12:	
  1461  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0489  00DA               	movwf	_ledr_pecent
  1463                           
  1464                           ;main.c: 545: ledg_pecent=100;
  1465  048A  00D9               	movwf	_ledg_pecent
  1466  048B                     L3:	
  1467                           
  1468                           ;main.c: 546: ledb_pecent=100;
  1469  048B  00D8               	movwf	_ledb_pecent
  1470  048C                     l9724:	
  1471                           
  1472                           ;main.c: 547: }
  1473                           ;main.c: 550: if(!ledr_pecent)
  1474  048C  085A               	movf	_ledr_pecent,w
  1475  048D  1D03               	btfss	3,2
  1476  048E  2C94               	goto	l9728
  1477                           
  1478                           ;main.c: 551: {
  1479                           ;main.c: 552: {PWM2EN=0;};
  1480  048F  1703               	bsf	3,6	;RP1=1, select bank2
  1481  0490  1107               	bcf	7,2	;volatile
  1482                           
  1483                           ;main.c: 553: {RA3=0;};
  1484  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1485  0492  1185               	bcf	5,3	;volatile
  1486                           
  1487                           ;main.c: 554: }
  1488  0493  2CA3               	goto	l9736
  1489  0494                     l9728:	
  1490                           
  1491                           ;main.c: 555: else if(ledr_pecent > 99)
  1492  0494  3064               	movlw	100
  1493  0495  025A               	subwf	_ledr_pecent,w
  1494  0496  1C03               	skipc
  1495  0497  2C9D               	goto	l9732
  1496                           
  1497                           ;main.c: 556: {
  1498                           ;main.c: 557: {PWM2EN=0;};
  1499  0498  1703               	bsf	3,6	;RP1=1, select bank2
  1500  0499  1107               	bcf	7,2	;volatile
  1501                           
  1502                           ;main.c: 558: {RA3=1;};
  1503  049A  1303               	bcf	3,6	;RP1=0, select bank0
  1504  049B  1585               	bsf	5,3	;volatile
  1505                           
  1506                           ;main.c: 559: }
  1507  049C  2CA3               	goto	l9736
  1508  049D                     l9732:	
  1509                           
  1510                           ;main.c: 560: else
  1511                           ;main.c: 561: {
  1512                           ;main.c: 562: PWMD2L=ledr_pecent;
  1513  049D  085A               	movf	_ledr_pecent,w
  1514  049E  1683               	bsf	3,5	;RP0=1, select bank3
  1515  049F  1703               	bsf	3,6	;RP1=1, select bank3
  1516  04A0  0095               	movwf	21	;volatile
  1517                           
  1518                           ;main.c: 563: {PWM2EN=1;};
  1519  04A1  1283               	bcf	3,5	;RP0=0, select bank2
  1520  04A2  1507               	bsf	7,2	;volatile
  1521  04A3                     l9736:	
  1522                           
  1523                           ;main.c: 564: }
  1524                           ;main.c: 565: if(!ledg_pecent)
  1525  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  1526  04A4  0859               	movf	_ledg_pecent,w
  1527  04A5  1D03               	btfss	3,2
  1528  04A6  2CAC               	goto	l9740
  1529                           
  1530                           ;main.c: 566: {
  1531                           ;main.c: 567: {PWM1EN=0;};
  1532  04A7  1703               	bsf	3,6	;RP1=1, select bank2
  1533  04A8  1087               	bcf	7,1	;volatile
  1534                           
  1535                           ;main.c: 568: {RA2=0;};
  1536  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1537  04AA  1105               	bcf	5,2	;volatile
  1538                           
  1539                           ;main.c: 569: }
  1540  04AB  2CBB               	goto	l9748
  1541  04AC                     l9740:	
  1542                           
  1543                           ;main.c: 570: else if(ledg_pecent > 99)
  1544  04AC  3064               	movlw	100
  1545  04AD  0259               	subwf	_ledg_pecent,w
  1546  04AE  1C03               	skipc
  1547  04AF  2CB5               	goto	l9744
  1548                           
  1549                           ;main.c: 571: {
  1550                           ;main.c: 572: {PWM1EN=0;};
  1551  04B0  1703               	bsf	3,6	;RP1=1, select bank2
  1552  04B1  1087               	bcf	7,1	;volatile
  1553                           
  1554                           ;main.c: 573: {RA2=1;};
  1555  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1556  04B3  1505               	bsf	5,2	;volatile
  1557                           
  1558                           ;main.c: 574: }
  1559  04B4  2CBB               	goto	l9748
  1560  04B5                     l9744:	
  1561                           
  1562                           ;main.c: 575: else
  1563                           ;main.c: 576: {
  1564                           ;main.c: 577: PWMD1L=ledg_pecent;
  1565  04B5  0859               	movf	_ledg_pecent,w
  1566  04B6  1683               	bsf	3,5	;RP0=1, select bank3
  1567  04B7  1703               	bsf	3,6	;RP1=1, select bank3
  1568  04B8  0094               	movwf	20	;volatile
  1569                           
  1570                           ;main.c: 578: {PWM1EN=1;};
  1571  04B9  1283               	bcf	3,5	;RP0=0, select bank2
  1572  04BA  1487               	bsf	7,1	;volatile
  1573  04BB                     l9748:	
  1574                           
  1575                           ;main.c: 579: }
  1576                           ;main.c: 580: if(!ledb_pecent)
  1577  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1578  04BC  0858               	movf	_ledb_pecent,w
  1579  04BD  1D03               	btfss	3,2
  1580  04BE  2CC4               	goto	l9752
  1581                           
  1582                           ;main.c: 581: {
  1583                           ;main.c: 582: {PWM3EN=0;};
  1584  04BF  1703               	bsf	3,6	;RP1=1, select bank2
  1585  04C0  1187               	bcf	7,3	;volatile
  1586                           
  1587                           ;main.c: 583: {RA4=0;};
  1588  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1589  04C2  1205               	bcf	5,4	;volatile
  1590                           
  1591                           ;main.c: 584: }
  1592  04C3  2CED               	goto	l9780
  1593  04C4                     l9752:	
  1594                           
  1595                           ;main.c: 585: else if(ledb_pecent > 99)
  1596  04C4  3064               	movlw	100
  1597  04C5  0258               	subwf	_ledb_pecent,w
  1598  04C6  1C03               	skipc
  1599  04C7  2CCD               	goto	l9756
  1600                           
  1601                           ;main.c: 586: {
  1602                           ;main.c: 587: {PWM3EN=0;};
  1603  04C8  1703               	bsf	3,6	;RP1=1, select bank2
  1604  04C9  1187               	bcf	7,3	;volatile
  1605                           
  1606                           ;main.c: 588: {RA4=1;};
  1607  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1608  04CB  1605               	bsf	5,4	;volatile
  1609                           
  1610                           ;main.c: 589: }
  1611  04CC  2CED               	goto	l9780
  1612  04CD                     l9756:	
  1613                           
  1614                           ;main.c: 590: else
  1615                           ;main.c: 591: {
  1616                           ;main.c: 592: PWMD3L=ledb_pecent;
  1617  04CD  0858               	movf	_ledb_pecent,w
  1618  04CE  1683               	bsf	3,5	;RP0=1, select bank3
  1619  04CF  1703               	bsf	3,6	;RP1=1, select bank3
  1620  04D0  0096               	movwf	22	;volatile
  1621                           
  1622                           ;main.c: 593: {PWM3EN=1;};
  1623  04D1  1283               	bcf	3,5	;RP0=0, select bank2
  1624  04D2  1587               	bsf	7,3	;volatile
  1625  04D3  2CED               	goto	l9780
  1626  04D4                     l9760:	
  1627                           
  1628                           ;main.c: 599: led_mod1_flg=0;
  1629  04D4  01CE               	clrf	_led_mod1_flg
  1630  04D5  2CD8               	goto	l9762
  1631  04D6                     l2424:	
  1632                           ;main.c: 604: case 1 :
  1633                           
  1634                           ;main.c: 603: break;
  1635                           
  1636                           ;main.c: 602: led_mod4_flg=0;
  1637                           
  1638                           ;main.c: 601: led_mod3_flg=0;
  1639                           
  1640                           ;main.c: 600: led_mod2_flg=0;
  1641                           
  1642                           
  1643                           ;main.c: 605: led_mod1_flg=1;
  1644  04D6  01CE               	clrf	_led_mod1_flg
  1645  04D7  0ACE               	incf	_led_mod1_flg,f
  1646  04D8                     l9762:	
  1647                           
  1648                           ;main.c: 606: led_mod2_flg=0;
  1649  04D8  01CD               	clrf	_led_mod2_flg
  1650  04D9  2CDD               	goto	L10
  1651  04DA                     l9764:	
  1652                           ;main.c: 609: break;
  1653                           
  1654                           ;main.c: 608: led_mod4_flg=0;
  1655                           
  1656                           ;main.c: 607: led_mod3_flg=0;
  1657                           
  1658                           
  1659                           ;main.c: 611: led_mod1_flg=0;
  1660  04DA  01CE               	clrf	_led_mod1_flg
  1661                           
  1662                           ;main.c: 612: led_mod2_flg=1;
  1663  04DB  01CD               	clrf	_led_mod2_flg
  1664  04DC  0ACD               	incf	_led_mod2_flg,f
  1665  04DD                     L10:	
  1666                           
  1667                           ;main.c: 613: led_mod3_flg=0;
  1668  04DD  01CC               	clrf	_led_mod3_flg
  1669  04DE  2CE3               	goto	L11
  1670  04DF                     l9768:	
  1671                           ;main.c: 615: break;
  1672                           
  1673                           ;main.c: 614: led_mod4_flg=0;
  1674                           
  1675                           
  1676                           ;main.c: 617: led_mod1_flg=0;
  1677  04DF  01CE               	clrf	_led_mod1_flg
  1678                           
  1679                           ;main.c: 618: led_mod2_flg=0;
  1680  04E0  01CD               	clrf	_led_mod2_flg
  1681                           
  1682                           ;main.c: 619: led_mod3_flg=1;
  1683  04E1  01CC               	clrf	_led_mod3_flg
  1684  04E2  0ACC               	incf	_led_mod3_flg,f
  1685  04E3                     L11:	
  1686                           
  1687                           ;main.c: 620: led_mod4_flg=0;
  1688  04E3  01CB               	clrf	_led_mod4_flg
  1689                           
  1690                           ;main.c: 621: break;
  1691  04E4  2CFF               	goto	l2423
  1692  04E5                     l9772:	
  1693                           
  1694                           ;main.c: 623: led_mod1_flg=0;
  1695  04E5  01CE               	clrf	_led_mod1_flg
  1696                           
  1697                           ;main.c: 624: led_mod2_flg=0;
  1698  04E6  01CD               	clrf	_led_mod2_flg
  1699                           
  1700                           ;main.c: 625: led_mod3_flg=0;
  1701  04E7  01CC               	clrf	_led_mod3_flg
  1702                           
  1703                           ;main.c: 626: led_mod4_flg=1;
  1704  04E8  01CB               	clrf	_led_mod4_flg
  1705  04E9  0ACB               	incf	_led_mod4_flg,f
  1706                           
  1707                           ;main.c: 627: break;
  1708  04EA  2CFF               	goto	l2423
  1709  04EB                     l9776:	
  1710                           
  1711                           ;main.c: 629: work_mod=0;
  1712  04EB  01D4               	clrf	_work_mod
  1713                           
  1714                           ;main.c: 630: break;
  1715  04EC  2CFF               	goto	l2423
  1716  04ED                     l9780:	
  1717  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1718  04EE  0854               	movf	_work_mod,w
  1719                           
  1720                           ; Switch size 1, requested type "space"
  1721                           ; Number of cases is 5, Range of values is 0 to 4
  1722                           ; switch strategies available:
  1723                           ; Name         Instructions Cycles
  1724                           ; simple_byte           16     9 (average)
  1725                           ; direct_byte           17     7 (fixed)
  1726                           ; jumptable            260     6 (fixed)
  1727                           ;	Chosen strategy is simple_byte
  1728  04EF  3A00               	xorlw	0	; case 0
  1729  04F0  1903               	skipnz
  1730  04F1  2CD4               	goto	l9760
  1731  04F2  3A01               	xorlw	1	; case 1
  1732  04F3  1903               	skipnz
  1733  04F4  2CD6               	goto	l2424
  1734  04F5  3A03               	xorlw	3	; case 2
  1735  04F6  1903               	skipnz
  1736  04F7  2CDA               	goto	l9764
  1737  04F8  3A01               	xorlw	1	; case 3
  1738  04F9  1903               	skipnz
  1739  04FA  2CDF               	goto	l9768
  1740  04FB  3A07               	xorlw	7	; case 4
  1741  04FC  1903               	skipnz
  1742  04FD  2CE5               	goto	l9772
  1743  04FE  2CEB               	goto	l9776
  1744  04FF                     l2423:	
  1745                           
  1746                           ;main.c: 633: {TRISB5=1;TRISA7=1;TRISB4=1;};
  1747  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  1748  0500  1686               	bsf	6,5	;volatile
  1749  0501  1785               	bsf	5,7	;volatile
  1750  0502  1606               	bsf	6,4	;volatile
  1751                           
  1752                           ;main.c: 634: led_scan_delay=10;
  1753  0503  300A               	movlw	10
  1754  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0505  00CA               	movwf	_led_scan_delay
  1756  0506                     l9786:	
  1757                           ;main.c: 635: while(led_scan_delay)
  1758                           
  1759  0506  084A               	movf	_led_scan_delay,w
  1760  0507  1903               	btfsc	3,2
  1761  0508  2D0B               	goto	l2431
  1762                           
  1763                           ;main.c: 636: {
  1764                           ;main.c: 637: led_scan_delay--;
  1765  0509  03CA               	decf	_led_scan_delay,f
  1766  050A  2D06               	goto	l9786
  1767  050B                     l2431:	
  1768                           
  1769                           ;main.c: 638: }
  1770                           ;main.c: 639: {RB5=0;RA7=0;RB4=0;};
  1771  050B  1286               	bcf	6,5	;volatile
  1772  050C  1385               	bcf	5,7	;volatile
  1773  050D  1206               	bcf	6,4	;volatile
  1774                           
  1775                           ;main.c: 640: if(led_mod1_flg)
  1776  050E  084E               	movf	_led_mod1_flg,w
  1777  050F  1903               	btfsc	3,2
  1778  0510  2D16               	goto	l9792
  1779                           
  1780                           ;main.c: 641: {
  1781                           ;main.c: 642: {TRISB5=0;RB5=1;TRISA7=0;RA7=0;};
  1782  0511  2533               	fcall	PL18	;call to abstracted procedure
  1783  0512  1385               	bcf	5,7	;volatile
  1784  0513  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0514  1385               	bcf	5,7	;volatile
  1786                           
  1787                           ;main.c: 643: }
  1788  0515  0008               	return
  1789  0516                     l9792:	
  1790                           
  1791                           ;main.c: 644: else if(led_mod2_flg)
  1792  0516  084D               	movf	_led_mod2_flg,w
  1793  0517  1903               	btfsc	3,2
  1794  0518  2D1E               	goto	l9796
  1795                           
  1796                           ;main.c: 645: {
  1797                           ;main.c: 646: {TRISA7=0;RA7=1;TRISB5=0;RB5=0;};
  1798  0519  1683               	bsf	3,5	;RP0=1, select bank1
  1799  051A  1385               	bcf	5,7	;volatile
  1800  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1801  051C  1785               	bsf	5,7	;volatile
  1802                           
  1803                           ;main.c: 647: }
  1804  051D  2D2E               	ljmp	PL16	;call to abstracted procedure
  1805  051E                     l9796:	
  1806                           
  1807                           ;main.c: 648: else if(led_mod3_flg)
  1808  051E  084C               	movf	_led_mod3_flg,w
  1809  051F  1903               	btfsc	3,2
  1810  0520  2D26               	goto	l9800
  1811                           
  1812                           ;main.c: 649: {
  1813                           ;main.c: 650: {TRISB5=0;RB5=1;TRISB4=0;RB4=0;};
  1814  0521  2533               	fcall	PL18	;call to abstracted procedure
  1815  0522  1206               	bcf	6,4	;volatile
  1816  0523  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0524  1206               	bcf	6,4	;volatile
  1818                           
  1819                           ;main.c: 651: }
  1820  0525  0008               	return
  1821  0526                     l9800:	
  1822                           
  1823                           ;main.c: 652: else if(led_mod4_flg)
  1824  0526  084B               	movf	_led_mod4_flg,w
  1825  0527  1903               	btfsc	3,2
  1826  0528  0008               	return
  1827                           
  1828                           ;main.c: 653: {
  1829                           ;main.c: 654: {TRISB4=0;RB4=1;TRISB5=0;RB5=0;};
  1830  0529  1683               	bsf	3,5	;RP0=1, select bank1
  1831  052A  1206               	bcf	6,4	;volatile
  1832  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1833  052C  1606               	bsf	6,4	;volatile
  1834                           
  1835                           ;main.c: 655: }
  1836  052D  2D2E               	ljmp	PL16	;call to abstracted procedure
  1837  052E                     __end_of_led_handle:	
  1838  052E                     PL16:	
  1839  052E  1683               	bsf	3,5	;RP0=1, select bank1
  1840  052F  1286               	bcf	6,5	;volatile
  1841  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0531  1286               	bcf	6,5	;volatile
  1843  0532  0008               	return
  1844  0533                     __end_ofPL16:	
  1845  0533                     PL18:	
  1846  0533  1683               	bsf	3,5	;RP0=1, select bank1
  1847  0534  1286               	bcf	6,5	;volatile
  1848  0535  1283               	bcf	3,5	;RP0=0, select bank0
  1849  0536  1686               	bsf	6,5	;volatile
  1850  0537  1683               	bsf	3,5	;RP0=1, select bank1
  1851  0538  0008               	return
  1852  0539                     __end_ofPL18:	
  1853  0539                     __ptext23:	
  1854 ;; *************** function _button_scan *****************
  1855 ;; Defined at:
  1856 ;;		line 158 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;		None
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;		None
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  1    wreg      void 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 300/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1870 ;;      Params:         0       0       0       0       0
  1871 ;;      Locals:         0       0       0       0       0
  1872 ;;      Temps:          0       0       0       0       0
  1873 ;;      Totals:         0       0       0       0       0
  1874 ;;Total ram usage:        0 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:    2
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_main
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           
  1885                           ;psect for function _button_scan
  1886  0539                     _button_scan:	
  1887                           
  1888                           ;main.c: 164: if(!RB2)
  1889                           
  1890                           ;incstack = 0
  1891                           ; Regs used in _button_scan: [wreg+status,2+status,0]
  1892  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1893  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1894  053B  1906               	btfsc	6,2	;volatile
  1895  053C  2D50               	goto	l9416
  1896                           
  1897                           ;main.c: 165: {
  1898                           ;main.c: 166: if(btn_work_cnt < 250)
  1899  053D  30FA               	movlw	250
  1900  053E  0257               	subwf	_btn_work_cnt,w
  1901  053F  1803               	skipnc
  1902  0540  2D42               	goto	l9404
  1903                           
  1904                           ;main.c: 167: {
  1905                           ;main.c: 168: btn_work_cnt++;
  1906  0541  0AD7               	incf	_btn_work_cnt,f
  1907  0542                     l9404:	
  1908                           
  1909                           ;main.c: 169: }
  1910                           ;main.c: 170: if(btn_work_cnt == 100)
  1911  0542  3064               	movlw	100
  1912  0543  0657               	xorwf	_btn_work_cnt,w
  1913  0544  1D03               	btfss	3,2
  1914  0545  2D66               	goto	l9436
  1915                           
  1916                           ;main.c: 171: {
  1917                           ;main.c: 172: if(work_mod)
  1918  0546  0854               	movf	_work_mod,w
  1919  0547  1903               	btfsc	3,2
  1920  0548  2D66               	goto	l9436
  1921  0549  301A               	movlw	26
  1922                           
  1923                           ;main.c: 173: {
  1924                           ;main.c: 174: work_mod=0;
  1925  054A  01D4               	clrf	_work_mod
  1926                           
  1927                           ;main.c: 175: led_mod=0;
  1928  054B  01FA               	clrf	_led_mod
  1929                           
  1930                           ;main.c: 176: beep_cnt=26;
  1931  054C  00C9               	movwf	_beep_cnt
  1932                           
  1933                           ;main.c: 177: timing_10ms_cnt=0;
  1934                           
  1935                           ;main.c: 178: timing_1min_cnt=0;
  1936  054D  25B2  118A         	fcall	PL6	;call to abstracted procedure
  1937  054F  2D66               	goto	l9436
  1938  0550                     l9416:	
  1939                           
  1940                           ;main.c: 182: else
  1941                           ;main.c: 183: {
  1942                           ;main.c: 184: if((btn_work_cnt > 5) && (btn_work_cnt < 100))
  1943  0550  3006               	movlw	6
  1944  0551  0257               	subwf	_btn_work_cnt,w
  1945  0552  1C03               	skipc
  1946  0553  2D65               	goto	l9434
  1947  0554  3064               	movlw	100
  1948  0555  0257               	subwf	_btn_work_cnt,w
  1949  0556  1803               	skipnc
  1950  0557  2D65               	goto	l9434
  1951  0558  3005               	movlw	5
  1952                           
  1953                           ;main.c: 185: {
  1954                           ;main.c: 186: work_mod++;
  1955  0559  0AD4               	incf	_work_mod,f
  1956                           
  1957                           ;main.c: 187: if(work_mod > 4)
  1958  055A  0254               	subwf	_work_mod,w
  1959  055B  1C03               	skipc
  1960  055C  2D61               	goto	l9428
  1961  055D  301A               	movlw	26
  1962                           
  1963                           ;main.c: 188: {
  1964                           ;main.c: 189: work_mod=0;
  1965  055E  01D4               	clrf	_work_mod
  1966                           
  1967                           ;main.c: 190: led_mod=0;
  1968  055F  01FA               	clrf	_led_mod
  1969                           
  1970                           ;main.c: 191: beep_cnt=26;
  1971  0560  2D62               	goto	L23
  1972  0561                     l9428:	
  1973                           ;main.c: 192: }
  1974                           
  1975                           
  1976                           ;main.c: 193: else
  1977                           ;main.c: 194: {
  1978                           ;main.c: 195: beep_cnt=8;
  1979  0561  3008               	movlw	8
  1980  0562                     L23:	
  1981  0562  00C9               	movwf	_beep_cnt
  1982                           
  1983                           ;main.c: 196: }
  1984                           ;main.c: 197: timing_10ms_cnt=0;
  1985                           
  1986                           ;main.c: 198: timing_1min_cnt=0;
  1987  0563  25B2  118A         	fcall	PL6	;call to abstracted procedure
  1988  0565                     l9434:	
  1989                           
  1990                           ;main.c: 199: }
  1991                           ;main.c: 200: btn_work_cnt=0;
  1992  0565  01D7               	clrf	_btn_work_cnt
  1993  0566                     l9436:	
  1994                           
  1995                           ;main.c: 201: }
  1996                           ;main.c: 203: if(!RB0)
  1997  0566  1806               	btfsc	6,0	;volatile
  1998  0567  2D78               	goto	l9450
  1999                           
  2000                           ;main.c: 204: {
  2001                           ;main.c: 205: if(btn_led_cnt < 250)
  2002  0568  30FA               	movlw	250
  2003  0569  0256               	subwf	_btn_led_cnt,w
  2004  056A  1803               	skipnc
  2005  056B  2D6D               	goto	l9442
  2006                           
  2007                           ;main.c: 206: {
  2008                           ;main.c: 207: btn_led_cnt++;
  2009  056C  0AD6               	incf	_btn_led_cnt,f
  2010  056D                     l9442:	
  2011                           
  2012                           ;main.c: 208: }
  2013                           ;main.c: 209: if(btn_led_cnt == 100)
  2014  056D  3064               	movlw	100
  2015  056E  0656               	xorwf	_btn_led_cnt,w
  2016  056F  1D03               	btfss	3,2
  2017  0570  2D8E               	goto	l9474
  2018                           
  2019                           ;main.c: 210: {
  2020                           ;main.c: 211: if(led_mod)
  2021  0571  087A               	movf	_led_mod,w
  2022  0572  1903               	btfsc	3,2
  2023  0573  2D8E               	goto	l9474
  2024  0574  301A               	movlw	26
  2025                           
  2026                           ;main.c: 212: {
  2027                           ;main.c: 213: led_mod=0;
  2028  0575  01FA               	clrf	_led_mod
  2029                           
  2030                           ;main.c: 214: beep_cnt=26;
  2031  0576  00C9               	movwf	_beep_cnt
  2032  0577  2D8E               	goto	l9474
  2033  0578                     l9450:	
  2034                           
  2035                           ;main.c: 218: else
  2036                           ;main.c: 219: {
  2037                           ;main.c: 220: if((btn_led_cnt > 5) && (btn_led_cnt < 100))
  2038  0578  3006               	movlw	6
  2039  0579  0256               	subwf	_btn_led_cnt,w
  2040  057A  1C03               	skipc
  2041  057B  2D8D               	goto	l9472
  2042  057C  3064               	movlw	100
  2043  057D  0256               	subwf	_btn_led_cnt,w
  2044  057E  1803               	skipnc
  2045  057F  2D8D               	goto	l9472
  2046  0580  3011               	movlw	17
  2047                           
  2048                           ;main.c: 221: {
  2049                           ;main.c: 222: led_mod++;
  2050  0581  0AFA               	incf	_led_mod,f
  2051                           
  2052                           ;main.c: 223: if(led_mod > 16)
  2053  0582  027A               	subwf	_led_mod,w
  2054  0583  1C03               	skipc
  2055  0584  2D88               	goto	l9462
  2056  0585  301A               	movlw	26
  2057                           
  2058                           ;main.c: 224: {
  2059                           ;main.c: 225: led_mod=0;
  2060  0586  01FA               	clrf	_led_mod
  2061                           
  2062                           ;main.c: 226: beep_cnt=26;
  2063  0587  00C9               	movwf	_beep_cnt
  2064  0588                     l9462:	
  2065                           
  2066                           ;main.c: 227: }
  2067                           ;main.c: 228: if(led_mod == 1)
  2068  0588  0B7A               	decfsz	_led_mod,w
  2069  0589  2D8D               	goto	l9472
  2070  058A  3064               	movlw	100
  2071                           
  2072                           ;main.c: 229: {
  2073                           ;main.c: 230: led_breath_cnt=0;
  2074                           
  2075                           ;main.c: 231: led_breath_way=0;
  2076                           
  2077                           ;main.c: 232: ledr_breath_duty=100;
  2078                           
  2079                           ;main.c: 233: ledg_breath_duty=100;
  2080                           
  2081                           ;main.c: 234: ledb_breath_duty=100;
  2082  058B  25B8  118A         	fcall	PL12	;call to abstracted procedure
  2083  058D                     l9472:	
  2084                           
  2085                           ;main.c: 235: }
  2086                           ;main.c: 236: }
  2087                           ;main.c: 237: btn_led_cnt=0;
  2088  058D  01D6               	clrf	_btn_led_cnt
  2089  058E                     l9474:	
  2090                           
  2091                           ;main.c: 238: }
  2092                           ;main.c: 240: if(!RB1)
  2093  058E  1886               	btfsc	6,1	;volatile
  2094  058F  2DA9               	goto	l9496
  2095                           
  2096                           ;main.c: 241: {
  2097                           ;main.c: 242: if(btn_fog_cnt < 250)
  2098  0590  30FA               	movlw	250
  2099  0591  0255               	subwf	_btn_fog_cnt,w
  2100  0592  1803               	skipnc
  2101  0593  2D95               	goto	l9480
  2102                           
  2103                           ;main.c: 243: {
  2104                           ;main.c: 244: btn_fog_cnt++;
  2105  0594  0AD5               	incf	_btn_fog_cnt,f
  2106  0595                     l9480:	
  2107                           
  2108                           ;main.c: 245: }
  2109                           ;main.c: 246: if(btn_fog_cnt == 5)
  2110  0595  3005               	movlw	5
  2111  0596  0655               	xorwf	_btn_fog_cnt,w
  2112  0597  1D03               	btfss	3,2
  2113  0598  2DAA               	goto	l9498
  2114                           
  2115                           ;main.c: 247: {
  2116                           ;main.c: 248: if(work_mod)
  2117  0599  0854               	movf	_work_mod,w
  2118  059A  1903               	btfsc	3,2
  2119  059B  2DAA               	goto	l9498
  2120  059C  3002               	movlw	2
  2121                           
  2122                           ;main.c: 249: {
  2123                           ;main.c: 250: fog_mod++;
  2124  059D  0AD3               	incf	_fog_mod,f
  2125                           
  2126                           ;main.c: 251: if(fog_mod > 1)
  2127  059E  0253               	subwf	_fog_mod,w
  2128  059F  1803               	btfsc	3,0
  2129                           
  2130                           ;main.c: 252: {
  2131                           ;main.c: 253: fog_mod=0;
  2132  05A0  01D3               	clrf	_fog_mod
  2133                           
  2134                           ;main.c: 254: }
  2135                           ;main.c: 255: if(!fog_mod)
  2136  05A1  0853               	movf	_fog_mod,w
  2137  05A2  1D03               	btfss	3,2
  2138  05A3  2DA6               	goto	l9494
  2139                           
  2140                           ;main.c: 256: {
  2141                           ;main.c: 257: beep_cnt=8;
  2142  05A4  3008               	movlw	8
  2143  05A5  2DA7               	goto	L24
  2144  05A6                     l9494:	
  2145                           ;main.c: 258: }
  2146                           
  2147                           
  2148                           ;main.c: 259: else
  2149                           ;main.c: 260: {
  2150                           ;main.c: 261: beep_cnt=26;
  2151  05A6  301A               	movlw	26
  2152  05A7                     L24:	
  2153  05A7  00C9               	movwf	_beep_cnt
  2154  05A8  2DAA               	goto	l9498
  2155  05A9                     l9496:	
  2156                           
  2157                           ;main.c: 266: else
  2158                           ;main.c: 267: {
  2159                           ;main.c: 268: btn_fog_cnt=0;
  2160  05A9  01D5               	clrf	_btn_fog_cnt
  2161  05AA                     l9498:	
  2162                           
  2163                           ;main.c: 269: }
  2164                           ;main.c: 271: if(fog_erro_flg)
  2165  05AA  0846               	movf	_fog_erro_flg,w
  2166  05AB  1903               	btfsc	3,2
  2167  05AC  0008               	return
  2168                           
  2169                           ;main.c: 272: {
  2170                           ;main.c: 273: if(work_mod)
  2171  05AD  0854               	movf	_work_mod,w
  2172  05AE  1903               	btfsc	3,2
  2173  05AF  0008               	return
  2174  05B0  3008               	movlw	8
  2175                           
  2176                           ;main.c: 274: {
  2177                           ;main.c: 275: work_mod=0;
  2178                           
  2179                           ;main.c: 276: led_mod=0;
  2180                           
  2181                           ;main.c: 277: beep_cnt=8;
  2182  05B1  2DBE               	ljmp	PL22	;call to abstracted procedure
  2183  05B2                     __end_of_button_scan:	
  2184  05B2                     PL6:	
  2185  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  2186  05B3  01A6               	clrf	_timing_10ms_cnt^(0+128)
  2187  05B4  01A7               	clrf	(_timing_10ms_cnt+1)^(0+128)
  2188  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2189  05B6  01C5               	clrf	_timing_1min_cnt
  2190  05B7  0008               	return
  2191  05B8                     __end_ofPL6:	
  2192  05B8                     PL12:	
  2193  05B8  01D2               	clrf	_led_breath_cnt
  2194  05B9  01D1               	clrf	_led_breath_way
  2195  05BA  00F9               	movwf	_ledr_breath_duty
  2196  05BB  00D0               	movwf	_ledg_breath_duty
  2197  05BC  00CF               	movwf	_ledb_breath_duty
  2198  05BD  0008               	return
  2199  05BE                     __end_ofPL12:	
  2200  05BE                     PL22:	
  2201  05BE  01D4               	clrf	_work_mod
  2202  05BF  01FA               	clrf	_led_mod
  2203  05C0  00C9               	movwf	_beep_cnt
  2204  05C1  0008               	return
  2205  05C2                     __end_ofPL22:	
  2206                           
  2207                           	psect	text2
  2208  0693                     __ptext2:	
  2209 ;; *************** function _register_init *****************
  2210 ;; Defined at:
  2211 ;;		line 73 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\drive.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : B00/0
  2222 ;;		On exit  : 300/100
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    4
  2232 ;; This function calls:
  2233 ;;		_Delay_nms
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _register_init
  2241  0693                     _register_init:	
  2242                           
  2243                           ;drive.c: 75: GIE=0;
  2244                           
  2245                           ;incstack = 0
  2246                           ; Regs used in _register_init: [wreg+status,2+status,0+pclath+cstack]
  2247  0693  138B               	bcf	11,7	;volatile
  2248  0694  0064               	clrwdt	;# 
  2249                           
  2250                           ;drive.c: 78: PORTA=0b00000000;
  2251  0695  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0696  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0697  0185               	clrf	5	;volatile
  2254                           
  2255                           ;drive.c: 79: PORTB=0b00000000;
  2256  0698  0186               	clrf	6	;volatile
  2257                           
  2258                           ;drive.c: 81: TRISA=0b10000010;
  2259  0699  3082               	movlw	130
  2260  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2261  069B  0085               	movwf	5	;volatile
  2262                           
  2263                           ;drive.c: 82: TRISB=0b11111111;
  2264  069C  30FF               	movlw	255
  2265  069D  0086               	movwf	6	;volatile
  2266                           
  2267                           ;drive.c: 84: WPUA= 0b00000000;
  2268  069E  1703               	bsf	3,6	;RP1=1, select bank3
  2269  069F  018E               	clrf	14	;volatile
  2270                           
  2271                           ;drive.c: 85: WPUB= 0b00001111;
  2272  06A0  300F               	movlw	15
  2273  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2274  06A2  0095               	movwf	21	;volatile
  2275                           
  2276                           ;drive.c: 87: WPDA= 0b00000000;
  2277  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  2278  06A4  0187               	clrf	7	;volatile
  2279                           
  2280                           ;drive.c: 88: WPDB= 0b00000000;
  2281  06A5  0188               	clrf	8	;volatile
  2282                           
  2283                           ;drive.c: 90: IOCA=0b00000000;
  2284  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  2285  06A7  0187               	clrf	7	;volatile
  2286                           
  2287                           ;drive.c: 91: IOCB=0b00000000;
  2288  06A8  0196               	clrf	22	;volatile
  2289                           
  2290                           ;drive.c: 93: ANSEL= 0b00000000;
  2291  06A9  1703               	bsf	3,6	;RP1=1, select bank3
  2292  06AA  0188               	clrf	8	;volatile
  2293                           
  2294                           ;drive.c: 94: ANSELH=0b00000000;
  2295  06AB  0189               	clrf	9	;volatile
  2296                           
  2297                           ;drive.c: 96: Delay_nms(200);
  2298  06AC  30C8               	movlw	200
  2299  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2300  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2301  06AF  00E0               	movwf	Delay_nms@inittempl
  2302  06B0  01E1               	clrf	Delay_nms@inittempl+1
  2303  06B1  26E9  118A         	fcall	_Delay_nms
  2304                           
  2305                           ;drive.c: 100: ADCON0=0b00000000;
  2306  06B3  019F               	clrf	31	;volatile
  2307                           
  2308                           ;drive.c: 101: ADCON1=0b00000000;
  2309  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  2310  06B5  019F               	clrf	31	;volatile
  2311                           
  2312                           ;drive.c: 105: OSCCON = 0x71;
  2313  06B6  3071               	movlw	113
  2314  06B7  008F               	movwf	15	;volatile
  2315                           
  2316                           ;drive.c: 106: OPTION_REG=0B00000000;
  2317  06B8  0181               	clrf	1	;volatile
  2318                           
  2319                           ;drive.c: 107: TMR0=6;
  2320  06B9  3006               	movlw	6
  2321  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  2322  06BB  0081               	movwf	1	;volatile
  2323                           
  2324                           ;drive.c: 108: SWDTEN = 1;
  2325  06BC  1703               	bsf	3,6	;RP1=1, select bank2
  2326  06BD  1405               	bsf	5,0	;volatile
  2327                           
  2328                           ;drive.c: 110: PR2 = 125;
  2329  06BE  307D               	movlw	125
  2330  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  2331  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  2332  06C1  0092               	movwf	18	;volatile
  2333                           
  2334                           ;drive.c: 111: T2CON = 0b00000101;
  2335  06C2  3005               	movlw	5
  2336  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  2337  06C4  0092               	movwf	18	;volatile
  2338                           
  2339                           ;drive.c: 114: PWMCON0=0b10100000;
  2340  06C5  30A0               	movlw	160
  2341  06C6  1703               	bsf	3,6	;RP1=1, select bank2
  2342  06C7  0087               	movwf	7	;volatile
  2343                           
  2344                           ;drive.c: 115: PWMCON1=0b00000000;
  2345  06C8  0188               	clrf	8	;volatile
  2346                           
  2347                           ;drive.c: 116: PWMCON2=0b00000000;
  2348  06C9  0189               	clrf	9	;volatile
  2349                           
  2350                           ;drive.c: 117: PWMTH=0;
  2351  06CA  1683               	bsf	3,5	;RP0=1, select bank3
  2352  06CB  0190               	clrf	16	;volatile
  2353                           
  2354                           ;drive.c: 118: PWMTL=100;
  2355  06CC  3064               	movlw	100
  2356  06CD  008F               	movwf	15	;volatile
  2357                           
  2358                           ;drive.c: 120: PWMD01H=0;
  2359  06CE  1283               	bcf	3,5	;RP0=0, select bank2
  2360  06CF  019C               	clrf	28	;volatile
  2361                           
  2362                           ;drive.c: 121: PWMD1L = 0;
  2363  06D0  1683               	bsf	3,5	;RP0=1, select bank3
  2364  06D1  0194               	clrf	20	;volatile
  2365                           
  2366                           ;drive.c: 122: PWMD0L = 0;
  2367  06D2  0193               	clrf	19	;volatile
  2368                           
  2369                           ;drive.c: 123: PWMD23H=0;
  2370  06D3  1283               	bcf	3,5	;RP0=0, select bank2
  2371  06D4  019D               	clrf	29	;volatile
  2372                           
  2373                           ;drive.c: 124: PWMD3L = 0;
  2374  06D5  1683               	bsf	3,5	;RP0=1, select bank3
  2375  06D6  0196               	clrf	22	;volatile
  2376                           
  2377                           ;drive.c: 126: PWMT4L = 124;
  2378  06D7  307C               	movlw	124
  2379  06D8  0091               	movwf	17	;volatile
  2380                           
  2381                           ;drive.c: 127: PWMD4L = 62;
  2382  06D9  303E               	movlw	62
  2383  06DA  0097               	movwf	23	;volatile
  2384                           
  2385                           ;drive.c: 130: INTCON=0;
  2386  06DB  018B               	clrf	11	;volatile
  2387                           
  2388                           ;drive.c: 131: PIE1=0;
  2389  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  2390  06DD  018C               	clrf	12	;volatile
  2391                           
  2392                           ;drive.c: 132: PIE2=0;
  2393  06DE  018D               	clrf	13	;volatile
  2394                           
  2395                           ;drive.c: 133: PIR1=0;
  2396  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2397  06E0  018C               	clrf	12	;volatile
  2398                           
  2399                           ;drive.c: 134: PIR2=0;
  2400  06E1  018D               	clrf	13	;volatile
  2401                           
  2402                           ;drive.c: 135: T0IE=0;
  2403  06E2  128B               	bcf	11,5	;volatile
  2404                           
  2405                           ;drive.c: 136: TMR2IE=1;
  2406  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  2407  06E4  148C               	bsf	12,1	;volatile
  2408                           
  2409                           ;drive.c: 137: PEIE=1;
  2410  06E5  170B               	bsf	11,6	;volatile
  2411                           
  2412                           ;drive.c: 138: RBIE=0;
  2413  06E6  118B               	bcf	11,3	;volatile
  2414                           
  2415                           ;drive.c: 139: GIE=1;
  2416  06E7  178B               	bsf	11,7	;volatile
  2417  06E8  0008               	return
  2418  06E9                     __end_of_register_init:	
  2419  06E9                     __ptext3:	
  2420 ;; *************** function _Delay_nms *****************
  2421 ;; Defined at:
  2422 ;;		line 15 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\delay.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  inittempl       2    2[BANK0 ] unsigned int 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  i               2    4[BANK0 ] unsigned int 
  2427 ;;  gtemp           1    6[BANK0 ] unsigned char 
  2428 ;; Return value:  Size  Location     Type
  2429 ;;                  1    wreg      void 
  2430 ;; Registers used:
  2431 ;;		wreg, status,2, status,0, pclath, cstack
  2432 ;; Tracked objects:
  2433 ;;		On entry : 300/0
  2434 ;;		On exit  : 300/0
  2435 ;;		Unchanged: 0/0
  2436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2437 ;;      Params:         0       2       0       0       0
  2438 ;;      Locals:         0       3       0       0       0
  2439 ;;      Temps:          0       0       0       0       0
  2440 ;;      Totals:         0       5       0       0       0
  2441 ;;Total ram usage:        5 bytes
  2442 ;; Hardware stack levels used:    1
  2443 ;; Hardware stack levels required when called:    3
  2444 ;; This function calls:
  2445 ;;		_Delay
  2446 ;; This function is called by:
  2447 ;;		_register_init
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _Delay_nms
  2453  06E9                     _Delay_nms:	
  2454                           
  2455                           ;delay.c: 17: unsigned int i;
  2456                           ;delay.c: 18: unsigned char gtemp;
  2457                           ;delay.c: 20: gtemp=0;
  2458                           
  2459                           ;incstack = 0
  2460                           ; Regs used in _Delay_nms: [wreg+status,2+status,0+pclath+cstack]
  2461  06E9  01E4               	clrf	Delay_nms@gtemp
  2462                           
  2463                           ;delay.c: 21: if(GIE==1)
  2464  06EA  1F8B               	btfss	11,7	;volatile
  2465  06EB  2EEF               	goto	l9180
  2466                           
  2467                           ;delay.c: 22: {
  2468                           ;delay.c: 23: gtemp=1;
  2469  06EC  01E4               	clrf	Delay_nms@gtemp
  2470  06ED  0AE4               	incf	Delay_nms@gtemp,f
  2471                           
  2472                           ;delay.c: 24: GIE=0;
  2473  06EE  138B               	bcf	11,7	;volatile
  2474  06EF                     l9180:	
  2475                           
  2476                           ;delay.c: 25: }
  2477                           ;delay.c: 26: for(i=0;i<inittempl;i++)
  2478  06EF  01E2               	clrf	Delay_nms@i
  2479  06F0  01E3               	clrf	Delay_nms@i+1
  2480  06F1                     l9186:	
  2481  06F1  0861               	movf	Delay_nms@inittempl+1,w
  2482  06F2  0263               	subwf	Delay_nms@i+1,w
  2483  06F3  1D03               	skipz
  2484  06F4  2EF7               	goto	u3855
  2485  06F5  0860               	movf	Delay_nms@inittempl,w
  2486  06F6  0262               	subwf	Delay_nms@i,w
  2487  06F7                     u3855:	
  2488  06F7  1803               	btfsc	3,0
  2489  06F8  2F05               	goto	l9188
  2490                           
  2491                           ;delay.c: 27: {
  2492                           ;delay.c: 28: Delay(154);
  2493  06F9  309A               	movlw	154
  2494  06FA  00DE               	movwf	Delay@dtemp
  2495  06FB  01DF               	clrf	Delay@dtemp+1
  2496  06FC  2709  118A         	fcall	_Delay
  2497  06FE  0064               	clrwdt	;# 
  2498  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0700  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0701  0AE2               	incf	Delay_nms@i,f
  2501  0702  1903               	skipnz
  2502  0703  0AE3               	incf	Delay_nms@i+1,f
  2503  0704  2EF1               	goto	l9186
  2504  0705                     l9188:	
  2505                           
  2506                           ;delay.c: 30: }
  2507                           ;delay.c: 31: if(gtemp==1) GIE=1;
  2508  0705  0B64               	decfsz	Delay_nms@gtemp,w
  2509  0706  0008               	return
  2510  0707  178B               	bsf	11,7	;volatile
  2511  0708  0008               	return
  2512  0709                     __end_of_Delay_nms:	
  2513  0709                     __ptext4:	
  2514 ;; *************** function _Delay *****************
  2515 ;; Defined at:
  2516 ;;		line 8 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\delay.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  dtemp           2    0[BANK0 ] unsigned int 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0
  2525 ;; Tracked objects:
  2526 ;;		On entry : 300/0
  2527 ;;		On exit  : 300/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2530 ;;      Params:         0       2       0       0       0
  2531 ;;      Locals:         0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0
  2533 ;;      Totals:         0       2       0       0       0
  2534 ;;Total ram usage:        2 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    2
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_Delay_nms
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function _Delay
  2546  0709                     _Delay:	
  2547  0709                     l8852:	
  2548                           ;delay.c: 10: while(dtemp--);
  2549                           
  2550                           ;incstack = 0
  2551                           ; Regs used in _Delay: [wreg+status,2+status,0]
  2552                           
  2553  0709  3001               	movlw	1
  2554  070A  02DE               	subwf	Delay@dtemp,f
  2555  070B  3000               	movlw	0
  2556  070C  1C03               	skipc
  2557  070D  03DF               	decf	Delay@dtemp+1,f
  2558  070E  02DF               	subwf	Delay@dtemp+1,f
  2559  070F  0F5E               	incfsz	Delay@dtemp,w
  2560  0710  2F09               	goto	l8852
  2561  0711  0A5F               	incf	Delay@dtemp+1,w
  2562  0712  1903               	btfsc	3,2
  2563  0713  0008               	return
  2564  0714  2F09               	goto	l8852
  2565  0715                     __end_of_Delay:	
  2566                           
  2567                           	psect	text6
  2568  07B8                     __ptext6:	
  2569 ;; *************** function _fog_handle *****************
  2570 ;; Defined at:
  2571 ;;		line 302 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 300/0
  2582 ;;		On exit  : 300/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0
  2588 ;;      Totals:         0       0       0       0       0
  2589 ;;Total ram usage:        0 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    2
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function _fog_handle
  2601  07B8                     _fog_handle:	
  2602                           
  2603                           ;main.c: 304: if(!work_mod)
  2604                           
  2605                           ;incstack = 0
  2606                           ; Regs used in _fog_handle: [wreg+status,2+status,0]
  2607  07B8  0854               	movf	_work_mod,w
  2608  07B9  1D03               	btfss	3,2
  2609  07BA  2FBE               	goto	l9514
  2610                           
  2611                           ;main.c: 305: {
  2612                           ;main.c: 306: fog_mod=0;
  2613  07BB  01D3               	clrf	_fog_mod
  2614                           
  2615                           ;main.c: 307: fog_drive_mod=0;
  2616  07BC  01DB               	clrf	_fog_drive_mod
  2617                           
  2618                           ;main.c: 308: }
  2619  07BD  0008               	return
  2620  07BE                     l9514:	
  2621                           
  2622                           ;main.c: 309: else
  2623                           ;main.c: 310: {
  2624                           ;main.c: 311: if(!fog_mod)
  2625  07BE  0853               	movf	_fog_mod,w
  2626  07BF  1D03               	btfss	3,2
  2627  07C0  2FC4               	goto	l9518
  2628                           
  2629                           ;main.c: 312: {
  2630                           ;main.c: 313: fog_drive_mod=1;
  2631  07C1  01DB               	clrf	_fog_drive_mod
  2632  07C2  0ADB               	incf	_fog_drive_mod,f
  2633                           
  2634                           ;main.c: 314: }
  2635  07C3  0008               	return
  2636  07C4                     l9518:	
  2637                           
  2638                           ;main.c: 315: else
  2639                           ;main.c: 316: {
  2640                           ;main.c: 317: fog_drive_mod=2;
  2641  07C4  3002               	movlw	2
  2642  07C5  00DB               	movwf	_fog_drive_mod
  2643  07C6  0008               	return
  2644  07C7                     __end_of_fog_handle:	
  2645                           
  2646                           	psect	text7
  2647  0022                     __ptext7:	
  2648 ;; *************** function _fog_erro_scan *****************
  2649 ;; Defined at:
  2650 ;;		line 667 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 300/0
  2661 ;;		On exit  : 300/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    6
  2671 ;; This function calls:
  2672 ;;		_Test_Pwm
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function _fog_erro_scan
  2680  0022                     _fog_erro_scan:	
  2681                           
  2682                           ;main.c: 669: if(!work_mod)
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _fog_erro_scan: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2686  0022  0854               	movf	_work_mod,w
  2687  0023  1D03               	btfss	3,2
  2688  0024  2828               	goto	l9386
  2689                           
  2690                           ;main.c: 670: {
  2691                           ;main.c: 671: fog_status_buff=0;
  2692  0025  01C7               	clrf	_fog_status_buff
  2693                           
  2694                           ;main.c: 673: fog_erro_cnt=0;
  2695  0026  01C6               	clrf	_fog_erro_flg
  2696                           
  2697                           ;main.c: 674: }
  2698  0027  0008               	return
  2699  0028                     l9386:	
  2700                           
  2701                           ;main.c: 675: else
  2702                           ;main.c: 676: {
  2703                           ;main.c: 677: fog_status_buff=0;
  2704  0028  01C7               	clrf	_fog_status_buff
  2705                           
  2706                           ;main.c: 678: fog_status_buff = Test_Pwm();
  2707  0029  2036  118A         	fcall	_Test_Pwm
  2708  002B  00C7               	movwf	_fog_status_buff
  2709                           
  2710                           ;main.c: 680: if(fog_status_buff == 0x55)
  2711  002C  3A55               	xorlw	85
  2712  002D  1D03               	btfss	3,2
  2713  002E  2831               	goto	l9394
  2714                           
  2715                           ;main.c: 681: {
  2716                           ;main.c: 682: fog_erro_flg=1;
  2717  002F  01C6               	clrf	_fog_erro_flg
  2718  0030  0AC6               	incf	_fog_erro_flg,f
  2719  0031                     l9394:	
  2720                           
  2721                           ;main.c: 683: }
  2722                           ;main.c: 684: if(fog_status_buff == 0xff)
  2723  0031  0F47               	incfsz	_fog_status_buff,w
  2724  0032  0008               	return
  2725                           
  2726                           ;main.c: 685: {
  2727                           ;main.c: 686: fog_erro_flg=1;
  2728  0033  01C6               	clrf	_fog_erro_flg
  2729  0034  0AC6               	incf	_fog_erro_flg,f
  2730  0035  0008               	return
  2731  0036                     __end_of_fog_erro_scan:	
  2732  0036                     __ptext8:	
  2733 ;; *************** function _Test_Pwm *****************
  2734 ;; Defined at:
  2735 ;;		line 736 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  templ           1   14[BANK0 ] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      unsigned char 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2744 ;; Tracked objects:
  2745 ;;		On entry : 300/0
  2746 ;;		On exit  : 300/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2749 ;;      Params:         0       0       0       0       0
  2750 ;;      Locals:         0       1       0       0       0
  2751 ;;      Temps:          0       4       0       0       0
  2752 ;;      Totals:         0       5       0       0       0
  2753 ;;Total ram usage:        5 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; Hardware stack levels required when called:    5
  2756 ;; This function calls:
  2757 ;;		_Get_CUR_Dat
  2758 ;;		_PFG_read_fst
  2759 ;;		_Test_PWM_Fst
  2760 ;;		_Test_Pwm_Cur
  2761 ;;		_Test_water
  2762 ;;		_Work_RAM_CLR
  2763 ;;		_YTPFG_Flash
  2764 ;; This function is called by:
  2765 ;;		_fog_erro_scan
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _Test_Pwm
  2771  0036                     _Test_Pwm:	
  2772                           
  2773                           ;WHQ_TP_ZPGS_V1.2.c: 743: if(0 == pfgonetemp.pfgtemp)
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _Test_Pwm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2777  0036  0877               	movf	_pfgonetemp,w
  2778  0037  0478               	iorwf	_pfgonetemp+1,w
  2779  0038  1D03               	btfss	3,2
  2780  0039  283C               	goto	l5779
  2781                           
  2782                           ;WHQ_TP_ZPGS_V1.2.c: 744: {
  2783                           ;WHQ_TP_ZPGS_V1.2.c: 745: PFG_read_fst();
  2784  003A  22A5               	fcall	_PFG_read_fst
  2785                           
  2786                           ;WHQ_TP_ZPGS_V1.2.c: 746: }
  2787  003B  3400               	retlw	0
  2788  003C                     l5779:	
  2789                           
  2790                           ;WHQ_TP_ZPGS_V1.2.c: 748: else
  2791                           ;WHQ_TP_ZPGS_V1.2.c: 749: {
  2792                           ;WHQ_TP_ZPGS_V1.2.c: 750: if(!on_off)
  2793  003C  1A71               	btfsc	_on_off/(0+8),_on_off& (0+7)	;volatile
  2794  003D  2842               	goto	l5781
  2795                           
  2796                           ;WHQ_TP_ZPGS_V1.2.c: 751: {
  2797                           ;WHQ_TP_ZPGS_V1.2.c: 752: Work_RAM_CLR();
  2798  003E  232D               	fcall	_Work_RAM_CLR
  2799                           
  2800                           ;WHQ_TP_ZPGS_V1.2.c: 753: ondly = 0;
  2801  003F  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0040  01AE               	clrf	Test_Pwm@ondly
  2803                           
  2804                           ;WHQ_TP_ZPGS_V1.2.c: 754: }
  2805  0041  3400               	retlw	0
  2806  0042                     l5781:	
  2807                           
  2808                           ;WHQ_TP_ZPGS_V1.2.c: 756: else
  2809                           ;WHQ_TP_ZPGS_V1.2.c: 757: {
  2810                           ;WHQ_TP_ZPGS_V1.2.c: 758: if(!onoff_fst)
  2811  0042  1AF0               	btfsc	_onoff_fst/(0+8),_onoff_fst& (0+7)	;volatile
  2812  0043  284E               	goto	l5783
  2813                           
  2814                           ;WHQ_TP_ZPGS_V1.2.c: 759: {
  2815                           ;WHQ_TP_ZPGS_V1.2.c: 760: if(++ondly >= 20)
  2816  0044  3014               	movlw	20
  2817  0045  0AAE               	incf	Test_Pwm@ondly,f
  2818  0046  022E               	subwf	Test_Pwm@ondly,w
  2819  0047  1C03               	skipc
  2820  0048  285D               	goto	l5785
  2821                           
  2822                           ;WHQ_TP_ZPGS_V1.2.c: 761: {
  2823                           ;WHQ_TP_ZPGS_V1.2.c: 762: ondly = 0;
  2824  0049  01AE               	clrf	Test_Pwm@ondly
  2825                           
  2826                           ;WHQ_TP_ZPGS_V1.2.c: 763: onoff_fst = 1;
  2827  004A  16F0               	bsf	_onoff_fst/(0+8),_onoff_fst& (0+7)	;volatile
  2828                           
  2829                           ;WHQ_TP_ZPGS_V1.2.c: 764: curokf = 0;
  2830  004B  13F0               	bcf	_curokf/(0+8),_curokf& (0+7)	;volatile
  2831                           
  2832                           ;WHQ_TP_ZPGS_V1.2.c: 765: curokf1 = 0;
  2833  004C  1070               	bcf	Test_Pwm@curokf1/(0+8),Test_Pwm@curokf1& (0+7)
  2834  004D  285D               	goto	l5785
  2835  004E                     l5783:	
  2836                           
  2837                           ;WHQ_TP_ZPGS_V1.2.c: 769: else
  2838                           ;WHQ_TP_ZPGS_V1.2.c: 770: {
  2839                           ;WHQ_TP_ZPGS_V1.2.c: 771: if(curokf)
  2840  004E  1FF0               	btfss	_curokf/(0+8),_curokf& (0+7)	;volatile
  2841  004F  285D               	goto	l5785
  2842                           
  2843                           ;WHQ_TP_ZPGS_V1.2.c: 772: {
  2844                           ;WHQ_TP_ZPGS_V1.2.c: 773: curokf = 0;
  2845  0050  13F0               	bcf	_curokf/(0+8),_curokf& (0+7)	;volatile
  2846                           
  2847                           ;WHQ_TP_ZPGS_V1.2.c: 774: Get_CUR_Dat();
  2848  0051  2090  118A         	fcall	_Get_CUR_Dat
  2849                           
  2850                           ;WHQ_TP_ZPGS_V1.2.c: 775: curokf1 = 1;
  2851  0053  1470               	bsf	Test_Pwm@curokf1/(0+8),Test_Pwm@curokf1& (0+7)
  2852                           
  2853                           ;WHQ_TP_ZPGS_V1.2.c: 777: {
  2854                           ;WHQ_TP_ZPGS_V1.2.c: 778: templ = Test_water();
  2855  0054  2162  118A         	fcall	_Test_water
  2856  0056  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0057  00EC               	movwf	Test_Pwm@templ
  2858                           
  2859                           ;WHQ_TP_ZPGS_V1.2.c: 779: if(0 != templ)
  2860  0058  086C               	movf	Test_Pwm@templ,w
  2861  0059  1903               	btfsc	3,2
  2862  005A  285D               	goto	l5785
  2863  005B                     l9220:	
  2864                           
  2865                           ;WHQ_TP_ZPGS_V1.2.c: 780: {
  2866                           ;WHQ_TP_ZPGS_V1.2.c: 781: return templ;
  2867  005B  086C               	movf	Test_Pwm@templ,w
  2868  005C  0008               	return
  2869  005D                     l5785:	
  2870                           
  2871                           ;WHQ_TP_ZPGS_V1.2.c: 782: }
  2872                           ;WHQ_TP_ZPGS_V1.2.c: 783: }
  2873                           ;WHQ_TP_ZPGS_V1.2.c: 784: }
  2874                           ;WHQ_TP_ZPGS_V1.2.c: 785: }
  2875                           ;WHQ_TP_ZPGS_V1.2.c: 787: if(curokf1)
  2876  005D  1C70               	btfss	Test_Pwm@curokf1/(0+8),Test_Pwm@curokf1& (0+7)
  2877  005E  3400               	retlw	0
  2878                           
  2879                           ;WHQ_TP_ZPGS_V1.2.c: 790: if(pwmtf)
  2880  005F  1070               	bcf	Test_Pwm@curokf1/(0+8),Test_Pwm@curokf1& (0+7)
  2881                           
  2882                           ;WHQ_TP_ZPGS_V1.2.c: 795: }
  2883                           ;WHQ_TP_ZPGS_V1.2.c: 796: }
  2884                           ;WHQ_TP_ZPGS_V1.2.c: 797: if((!pwmtf) || (!pwmtf1))
  2885  0060  1DF1               	btfss	_pwmtf/(0+8),_pwmtf& (0+7)	;volatile
  2886  0061  2864               	goto	l9234
  2887  0062  1971               	btfsc	_pwmtf1/(0+8),_pwmtf1& (0+7)	;volatile
  2888  0063  2868               	goto	l5793
  2889  0064                     l9234:	
  2890                           
  2891                           ;WHQ_TP_ZPGS_V1.2.c: 798: {
  2892                           ;WHQ_TP_ZPGS_V1.2.c: 799: templ = Test_PWM_Fst();
  2893  0064  20C7  118A         	fcall	_Test_PWM_Fst
  2894  0066  00EC               	movwf	Test_Pwm@templ
  2895  0067  285B               	goto	l9220
  2896  0068                     l5793:	
  2897                           
  2898                           ;WHQ_TP_ZPGS_V1.2.c: 802: else
  2899                           ;WHQ_TP_ZPGS_V1.2.c: 803: {
  2900                           ;WHQ_TP_ZPGS_V1.2.c: 804: if(!ponecf)
  2901  0068  1871               	btfsc	_ponecf/(0+8),_ponecf& (0+7)	;volatile
  2902  0069  2885               	goto	l9252
  2903                           
  2904                           ;WHQ_TP_ZPGS_V1.2.c: 805: {
  2905                           ;WHQ_TP_ZPGS_V1.2.c: 806: if(++ponesec >= 125)
  2906  006A  307D               	movlw	125
  2907  006B  0AC0               	incf	_ponesec,f	;volatile
  2908  006C  0240               	subwf	_ponesec,w	;volatile
  2909  006D  1C03               	skipc
  2910  006E  3400               	retlw	0
  2911                           
  2912                           ;WHQ_TP_ZPGS_V1.2.c: 807: {
  2913                           ;WHQ_TP_ZPGS_V1.2.c: 808: ponesec = 0;
  2914  006F  01C0               	clrf	_ponesec	;volatile
  2915                           
  2916                           ;WHQ_TP_ZPGS_V1.2.c: 809: ondly = 0;
  2917  0070  01AE               	clrf	Test_Pwm@ondly
  2918                           
  2919                           ;WHQ_TP_ZPGS_V1.2.c: 810: ponecf = 1;
  2920  0071  1471               	bsf	_ponecf/(0+8),_ponecf& (0+7)	;volatile
  2921                           
  2922                           ;WHQ_TP_ZPGS_V1.2.c: 811: pfgonetemp.pfgtemp = (pfgonetemp.pfgtemp & 0xfc00) + (pwmnold 
      +                          & 0x03ff);
  2923  0072  0826               	movf	_pwmnold,w	;volatile
  2924  0073  00E8               	movwf	??_Test_Pwm
  2925  0074  3003               	movlw	3
  2926  0075  0527               	andwf	_pwmnold+1,w	;volatile
  2927  0076  00E9               	movwf	??_Test_Pwm+1
  2928  0077  30FC               	movlw	252
  2929  0078  01EA               	clrf	??_Test_Pwm+2
  2930  0079  0578               	andwf	_pfgonetemp+1,w
  2931  007A  00EB               	movwf	??_Test_Pwm+3
  2932  007B  0868               	movf	??_Test_Pwm,w
  2933  007C  076A               	addwf	??_Test_Pwm+2,w
  2934  007D  00F7               	movwf	_pfgonetemp
  2935  007E  0869               	movf	??_Test_Pwm+1,w
  2936  007F  1803               	skipnc
  2937  0080  0A69               	incf	??_Test_Pwm+1,w
  2938  0081  076B               	addwf	??_Test_Pwm+3,w
  2939  0082  00F8               	movwf	_pfgonetemp+1
  2940                           
  2941                           ;WHQ_TP_ZPGS_V1.2.c: 812: PfgChangef = 1;
  2942  0083  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  2943  0084  3400               	retlw	0
  2944  0085                     l9252:	
  2945                           
  2946                           ;WHQ_TP_ZPGS_V1.2.c: 815: else
  2947                           ;WHQ_TP_ZPGS_V1.2.c: 816: {
  2948                           ;WHQ_TP_ZPGS_V1.2.c: 817: if(++ondly >= 4)
  2949  0085  3004               	movlw	4
  2950  0086  0AAE               	incf	Test_Pwm@ondly,f
  2951  0087  022E               	subwf	Test_Pwm@ondly,w
  2952  0088  1C03               	skipc
  2953  0089  3400               	retlw	0
  2954                           
  2955                           ;WHQ_TP_ZPGS_V1.2.c: 818: {
  2956                           ;WHQ_TP_ZPGS_V1.2.c: 819: ondly = 0;
  2957  008A  01AE               	clrf	Test_Pwm@ondly
  2958                           
  2959                           ;WHQ_TP_ZPGS_V1.2.c: 820: Test_Pwm_Cur();
  2960  008B  20EE  118A         	fcall	_Test_Pwm_Cur
  2961                           
  2962                           ;WHQ_TP_ZPGS_V1.2.c: 821: pwmnold = pfgonetemp.pfgtemp & 0x7fff;
  2963  008D  237B               	fcall	PL20	;call to abstracted procedure
  2964                           
  2965                           ;WHQ_TP_ZPGS_V1.2.c: 822: ponecf = 0;
  2966  008E  1071               	bcf	_ponecf/(0+8),_ponecf& (0+7)	;volatile
  2967                           
  2968                           ;WHQ_TP_ZPGS_V1.2.c: 823: }
  2969                           ;WHQ_TP_ZPGS_V1.2.c: 824: }
  2970                           ;WHQ_TP_ZPGS_V1.2.c: 825: }
  2971                           ;WHQ_TP_ZPGS_V1.2.c: 826: }
  2972                           ;WHQ_TP_ZPGS_V1.2.c: 827: }
  2973                           ;WHQ_TP_ZPGS_V1.2.c: 828: }
  2974                           ;WHQ_TP_ZPGS_V1.2.c: 829: return 0;
  2975  008F  3400               	retlw	0
  2976  0090                     __end_of_Test_Pwm:	
  2977  0090                     __ptext18:	
  2978 ;; *************** function _Get_CUR_Dat *****************
  2979 ;; Defined at:
  2980 ;;		line 465 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0, pclath, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 300/0
  2991 ;;		On exit  : 300/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0
  2996 ;;      Temps:          0       2       0       0       0
  2997 ;;      Totals:         0       2       0       0       0
  2998 ;;Total ram usage:        2 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    3
  3001 ;; This function calls:
  3002 ;;		___awdiv
  3003 ;; This function is called by:
  3004 ;;		_Test_Pwm
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function _Get_CUR_Dat
  3010  0090                     _Get_CUR_Dat:	
  3011                           
  3012                           ;WHQ_TP_ZPGS_V1.2.c: 467: cur_addat = cursum/32;
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _Get_CUR_Dat: [wreg+status,2+status,0+pclath+cstack]
  3016  0090  1683               	bsf	3,5	;RP0=1, select bank1
  3017  0091  0825               	movf	(_cursum+1)^(0+128),w	;volatile
  3018  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0093  00E7               	movwf	??_Get_CUR_Dat+1
  3020  0094  1683               	bsf	3,5	;RP0=1, select bank1
  3021  0095  0824               	movf	_cursum^(0+128),w	;volatile
  3022  0096  1283               	bcf	3,5	;RP0=0, select bank0
  3023  0097  00E6               	movwf	??_Get_CUR_Dat
  3024  0098  3005               	movlw	5
  3025  0099                     u3455:	
  3026  0099  1003               	clrc
  3027  009A  0CE7               	rrf	??_Get_CUR_Dat+1,f
  3028  009B  0CE6               	rrf	??_Get_CUR_Dat,f
  3029  009C  3EFF               	addlw	-1
  3030  009D  1D03               	skipz
  3031  009E  2899               	goto	u3455
  3032  009F  0866               	movf	??_Get_CUR_Dat,w
  3033  00A0  00C3               	movwf	_cur_addat	;volatile
  3034                           
  3035                           ;WHQ_TP_ZPGS_V1.2.c: 468: if(0 == cur_addatold0)
  3036  00A1  083D               	movf	_cur_addatold0,w	;volatile
  3037  00A2  1D03               	btfss	3,2
  3038  00A3  28AB               	goto	l8974
  3039                           
  3040                           ;WHQ_TP_ZPGS_V1.2.c: 469: {
  3041                           ;WHQ_TP_ZPGS_V1.2.c: 470: cur_addatold0 = cur_addat;
  3042  00A4  0843               	movf	_cur_addat,w	;volatile
  3043  00A5  00BD               	movwf	_cur_addatold0	;volatile
  3044                           
  3045                           ;WHQ_TP_ZPGS_V1.2.c: 471: cur_addatold1 = cur_addat;
  3046  00A6  0843               	movf	_cur_addat,w	;volatile
  3047  00A7  00BC               	movwf	_cur_addatold1	;volatile
  3048                           
  3049                           ;WHQ_TP_ZPGS_V1.2.c: 472: cur_addatold2 = cur_addat;
  3050  00A8  0843               	movf	_cur_addat,w	;volatile
  3051  00A9  00BB               	movwf	_cur_addatold2	;volatile
  3052                           
  3053                           ;WHQ_TP_ZPGS_V1.2.c: 473: }
  3054  00AA  28C0               	goto	l8976
  3055  00AB                     l8974:	
  3056                           
  3057                           ;WHQ_TP_ZPGS_V1.2.c: 474: else
  3058                           ;WHQ_TP_ZPGS_V1.2.c: 475: {
  3059                           ;WHQ_TP_ZPGS_V1.2.c: 476: cur_addat = (unsigned char)((cur_addat + cur_addatold0 + cur_a
      +                          ddatold1 + cur_addatold2)/4);
  3060  00AB  0843               	movf	_cur_addat,w	;volatile
  3061  00AC  00E0               	movwf	___awdiv@dividend
  3062  00AD  01E1               	clrf	___awdiv@dividend+1
  3063  00AE  083D               	movf	_cur_addatold0,w	;volatile
  3064  00AF  07E0               	addwf	___awdiv@dividend,f
  3065  00B0  1803               	skipnc
  3066  00B1  0AE1               	incf	___awdiv@dividend+1,f
  3067  00B2  083C               	movf	_cur_addatold1,w	;volatile
  3068  00B3  07E0               	addwf	___awdiv@dividend,f
  3069  00B4  1803               	skipnc
  3070  00B5  0AE1               	incf	___awdiv@dividend+1,f
  3071  00B6  083B               	movf	_cur_addatold2,w	;volatile
  3072  00B7  07E0               	addwf	___awdiv@dividend,f
  3073  00B8  1803               	skipnc
  3074  00B9  0AE1               	incf	___awdiv@dividend+1,f
  3075  00BA  3004               	movlw	4
  3076  00BB  00DE               	movwf	___awdiv@divisor
  3077  00BC  01DF               	clrf	___awdiv@divisor+1
  3078  00BD  2260               	fcall	___awdiv
  3079  00BE  085E               	movf	?___awdiv,w
  3080  00BF  00C3               	movwf	_cur_addat	;volatile
  3081  00C0                     l8976:	
  3082                           
  3083                           ;WHQ_TP_ZPGS_V1.2.c: 477: }
  3084                           ;WHQ_TP_ZPGS_V1.2.c: 478: cur_addatold2 = cur_addatold1;
  3085  00C0  083C               	movf	_cur_addatold1,w	;volatile
  3086  00C1  00BB               	movwf	_cur_addatold2	;volatile
  3087                           
  3088                           ;WHQ_TP_ZPGS_V1.2.c: 479: cur_addatold1 = cur_addatold0;
  3089  00C2  083D               	movf	_cur_addatold0,w	;volatile
  3090  00C3  00BC               	movwf	_cur_addatold1	;volatile
  3091                           
  3092                           ;WHQ_TP_ZPGS_V1.2.c: 480: cur_addatold0 = cur_addat;
  3093  00C4  0843               	movf	_cur_addat,w	;volatile
  3094  00C5  00BD               	movwf	_cur_addatold0	;volatile
  3095  00C6  0008               	return
  3096  00C7                     __end_of_Get_CUR_Dat:	
  3097  00C7                     __ptext11:	
  3098 ;; *************** function _Test_PWM_Fst *****************
  3099 ;; Defined at:
  3100 ;;		line 501 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  templ           1    9[BANK0 ] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      unsigned char 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0, pclath, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 300/0
  3111 ;;		On exit  : 300/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3114 ;;      Params:         0       0       0       0       0
  3115 ;;      Locals:         0       1       0       0       0
  3116 ;;      Temps:          0       0       0       0       0
  3117 ;;      Totals:         0       1       0       0       0
  3118 ;;Total ram usage:        1 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    4
  3121 ;; This function calls:
  3122 ;;		_Test_Pwm_Cur
  3123 ;;		_YTPFG_Flash
  3124 ;; This function is called by:
  3125 ;;		_Test_Pwm
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _Test_PWM_Fst
  3131  00C7                     _Test_PWM_Fst:	
  3132                           
  3133                           ;WHQ_TP_ZPGS_V1.2.c: 503: unsigned char templ;
  3134                           ;WHQ_TP_ZPGS_V1.2.c: 505: templ = Test_Pwm_Cur();
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in _Test_PWM_Fst: [wreg+status,2+status,0+pclath+cstack]
  3138  00C7  20EE  118A         	fcall	_Test_Pwm_Cur
  3139  00C9  00E7               	movwf	Test_PWM_Fst@templ
  3140                           
  3141                           ;WHQ_TP_ZPGS_V1.2.c: 506: if((0xff == templ) || (cur_addat == curset))
  3142  00CA  0A67               	incf	Test_PWM_Fst@templ,w
  3143  00CB  1903               	btfsc	3,2
  3144  00CC  28D1               	goto	l5708
  3145  00CD  301A               	movlw	26
  3146  00CE  0643               	xorwf	_cur_addat,w	;volatile
  3147  00CF  1D03               	btfss	3,2
  3148  00D0  28E9               	goto	l9016
  3149  00D1                     l5708:	
  3150                           
  3151                           ;WHQ_TP_ZPGS_V1.2.c: 507: {
  3152                           ;WHQ_TP_ZPGS_V1.2.c: 508: pwmtonf = 1;
  3153  00D1  14F1               	bsf	_pwmtonf/(0+8),_pwmtonf& (0+7)	;volatile
  3154                           
  3155                           ;WHQ_TP_ZPGS_V1.2.c: 509: if(++curokcl >= 3)
  3156  00D2  3003               	movlw	3
  3157  00D3  0ABA               	incf	_curokcl,f	;volatile
  3158  00D4  023A               	subwf	_curokcl,w	;volatile
  3159  00D5  1C03               	skipc
  3160  00D6  3400               	retlw	0
  3161                           
  3162                           ;WHQ_TP_ZPGS_V1.2.c: 510: {
  3163                           ;WHQ_TP_ZPGS_V1.2.c: 511: curokcl = 0;
  3164  00D7  01BA               	clrf	_curokcl	;volatile
  3165                           
  3166                           ;WHQ_TP_ZPGS_V1.2.c: 512: if(!pwmtf)
  3167  00D8  19F1               	btfsc	_pwmtf/(0+8),_pwmtf& (0+7)	;volatile
  3168  00D9  28DE               	goto	l5710
  3169                           
  3170                           ;WHQ_TP_ZPGS_V1.2.c: 513: {
  3171                           ;WHQ_TP_ZPGS_V1.2.c: 514: Ytzpcl = 0;
  3172  00DA  01B9               	clrf	_Ytzpcl	;volatile
  3173                           
  3174                           ;WHQ_TP_ZPGS_V1.2.c: 515: onoff_fst = 0;
  3175  00DB  12F0               	bcf	_onoff_fst/(0+8),_onoff_fst& (0+7)	;volatile
  3176                           
  3177                           ;WHQ_TP_ZPGS_V1.2.c: 516: pwmtf = 1;
  3178  00DC  15F1               	bsf	_pwmtf/(0+8),_pwmtf& (0+7)	;volatile
  3179  00DD  28DF               	goto	l5711
  3180  00DE                     l5710:	
  3181                           
  3182                           ;WHQ_TP_ZPGS_V1.2.c: 528: else if(!pwmtf1)
  3183  00DE  1D71               	btfss	_pwmtf1/(0+8),_pwmtf1& (0+7)	;volatile
  3184  00DF                     l5711:	
  3185                           
  3186                           ;WHQ_TP_ZPGS_V1.2.c: 523: else
  3187                           ;WHQ_TP_ZPGS_V1.2.c: 524: {
  3188                           ;WHQ_TP_ZPGS_V1.2.c: 525: pwmtf1 = 1;
  3189  00DF  1571               	bsf	_pwmtf1/(0+8),_pwmtf1& (0+7)	;volatile
  3190                           
  3191                           ;WHQ_TP_ZPGS_V1.2.c: 531: }
  3192                           ;WHQ_TP_ZPGS_V1.2.c: 532: pfgonetemp.pfgtemp = pfgonetemp.pfgtemp-2;
  3193  00E0  30FE               	movlw	254
  3194  00E1  07F7               	addwf	_pfgonetemp,f
  3195  00E2  1803               	skipnc
  3196  00E3  0AF8               	incf	_pfgonetemp+1,f
  3197  00E4  30FF               	movlw	255
  3198  00E5  07F8               	addwf	_pfgonetemp+1,f
  3199                           
  3200                           ;WHQ_TP_ZPGS_V1.2.c: 533: PfgChangef = 1;
  3201  00E6  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  3202                           
  3203                           ;WHQ_TP_ZPGS_V1.2.c: 534: pwmnold = pfgonetemp.pfgtemp&0x7fff;
  3204  00E7  237B               	fcall	PL20	;call to abstracted procedure
  3205                           
  3206                           ;WHQ_TP_ZPGS_V1.2.c: 535: return 0xaa;
  3207  00E8  34AA               	retlw	170
  3208  00E9                     l9016:	
  3209                           
  3210                           ;WHQ_TP_ZPGS_V1.2.c: 538: else if(0x55 == templ)
  3211  00E9  3055               	movlw	85
  3212  00EA  0667               	xorwf	Test_PWM_Fst@templ,w
  3213  00EB  1903               	btfsc	3,2
  3214                           
  3215                           ;WHQ_TP_ZPGS_V1.2.c: 539: {
  3216                           ;WHQ_TP_ZPGS_V1.2.c: 540: return 0x55;
  3217  00EC  3455               	retlw	85
  3218                           
  3219                           ;WHQ_TP_ZPGS_V1.2.c: 541: }
  3220                           ;WHQ_TP_ZPGS_V1.2.c: 542: return 0x00;
  3221  00ED  3400               	retlw	0
  3222  00EE                     __end_of_Test_PWM_Fst:	
  3223  00EE                     __ptext13:	
  3224 ;; *************** function _Test_Pwm_Cur *****************
  3225 ;; Defined at:
  3226 ;;		line 144 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;		None
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  templ           1    8[BANK0 ] unsigned char 
  3231 ;;  temph           1    7[BANK0 ] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  1    wreg      unsigned char 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0, pclath, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 300/0
  3238 ;;		On exit  : 300/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       0       0       0       0
  3242 ;;      Locals:         0       2       0       0       0
  3243 ;;      Temps:          0       0       0       0       0
  3244 ;;      Totals:         0       2       0       0       0
  3245 ;;Total ram usage:        2 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    3
  3248 ;; This function calls:
  3249 ;;		_Pwm_add
  3250 ;;		_Pwm_dec
  3251 ;; This function is called by:
  3252 ;;		_Test_PWM_Fst
  3253 ;;		_Test_Pwm
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _Test_Pwm_Cur
  3259  00EE                     _Test_Pwm_Cur:	
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _Test_Pwm_Cur: [wreg+status,2+status,0+pclath+cstack]
  3263  00EE  301B               	movlw	27
  3264  00EF  0243               	subwf	_cur_addat,w	;volatile
  3265  00F0  1C03               	skipc
  3266  00F1  2906               	goto	l8758
  3267  00F2  3002               	movlw	2
  3268                           
  3269                           ;WHQ_TP_ZPGS_V1.2.c: 150: {
  3270                           ;WHQ_TP_ZPGS_V1.2.c: 151: curdowncl = 0;
  3271  00F3  01B2               	clrf	Test_Pwm_Cur@curdowncl
  3272                           
  3273                           ;WHQ_TP_ZPGS_V1.2.c: 152: if(++curupcl >= 2)
  3274  00F4  0AB3               	incf	Test_Pwm_Cur@curupcl,f
  3275  00F5  0233               	subwf	Test_Pwm_Cur@curupcl,w
  3276  00F6  1C03               	skipc
  3277  00F7  3400               	retlw	0
  3278                           
  3279                           ;WHQ_TP_ZPGS_V1.2.c: 153: {
  3280                           ;WHQ_TP_ZPGS_V1.2.c: 154: PFGchgf = 1;
  3281  00F8  1770               	bsf	_PFGchgf/(0+8),_PFGchgf& (0+7)	;volatile
  3282                           
  3283                           ;WHQ_TP_ZPGS_V1.2.c: 155: curupcl = 0;
  3284  00F9  01B3               	clrf	Test_Pwm_Cur@curupcl
  3285                           
  3286                           ;WHQ_TP_ZPGS_V1.2.c: 156: if(0 == Pwm_dec(1,pwmfst))
  3287  00FA  082B               	movf	_pwmfst+1,w	;volatile
  3288  00FB  00DF               	movwf	Pwm_dec@pwmfset+1
  3289  00FC  082A               	movf	_pwmfst,w	;volatile
  3290  00FD  00DE               	movwf	Pwm_dec@pwmfset
  3291  00FE  3001               	movlw	1
  3292  00FF  214A  118A         	fcall	_Pwm_dec
  3293  0101  3A00               	xorlw	0
  3294  0102  1D03               	skipz
  3295  0103  34FF               	retlw	255
  3296  0104                     l8746:	
  3297                           
  3298                           ;WHQ_TP_ZPGS_V1.2.c: 157: {
  3299                           ;WHQ_TP_ZPGS_V1.2.c: 158: pfgonetemp.pfgtemp = pwmfst;
  3300                           
  3301                           ;WHQ_TP_ZPGS_V1.2.c: 159: PfgChangef = 1;
  3302  0104  2375               	fcall	PL14	;call to abstracted procedure
  3303                           
  3304                           ;WHQ_TP_ZPGS_V1.2.c: 160: return 0x55;
  3305  0105  3455               	retlw	85
  3306  0106                     l8758:	
  3307                           ;WHQ_TP_ZPGS_V1.2.c: 162: else
  3308                           ;WHQ_TP_ZPGS_V1.2.c: 163: return 0xff;
  3309                           
  3310  0106  301A               	movlw	26
  3311  0107  0243               	subwf	_cur_addat,w	;volatile
  3312                           
  3313                           ;WHQ_TP_ZPGS_V1.2.c: 167: {
  3314                           ;WHQ_TP_ZPGS_V1.2.c: 168: curupcl = 0;
  3315  0108  01B3               	clrf	Test_Pwm_Cur@curupcl
  3316  0109  1803               	skipnc
  3317  010A  292F               	goto	L17
  3318                           
  3319                           ;WHQ_TP_ZPGS_V1.2.c: 169: if(++curdowncl >= 2)
  3320  010B  3002               	movlw	2
  3321  010C  0AB2               	incf	Test_Pwm_Cur@curdowncl,f
  3322  010D  0232               	subwf	Test_Pwm_Cur@curdowncl,w
  3323  010E  1C03               	skipc
  3324  010F  3400               	retlw	0
  3325                           
  3326                           ;WHQ_TP_ZPGS_V1.2.c: 170: {
  3327                           ;WHQ_TP_ZPGS_V1.2.c: 171: PFGchgf = 1;
  3328  0110  1770               	bsf	_PFGchgf/(0+8),_PFGchgf& (0+7)	;volatile
  3329                           
  3330                           ;WHQ_TP_ZPGS_V1.2.c: 172: curdowncl = 0;
  3331  0111  01B2               	clrf	Test_Pwm_Cur@curdowncl
  3332  0112  0843               	movf	_cur_addat,w	;volatile
  3333  0113  3C1A               	sublw	26
  3334  0114  00E6               	movwf	Test_Pwm_Cur@templ
  3335                           
  3336                           ;WHQ_TP_ZPGS_V1.2.c: 174: if(templ >= 20)
  3337  0115  3014               	movlw	20
  3338  0116  0266               	subwf	Test_Pwm_Cur@templ,w
  3339  0117  1C03               	skipc
  3340  0118  291B               	goto	l8774
  3341                           
  3342                           ;WHQ_TP_ZPGS_V1.2.c: 175: temph = 4;
  3343  0119  3004               	movlw	4
  3344  011A  2920               	goto	L16
  3345  011B                     l8774:	
  3346                           
  3347                           ;WHQ_TP_ZPGS_V1.2.c: 176: else if(templ >= 15)
  3348  011B  300F               	movlw	15
  3349  011C  0266               	subwf	Test_Pwm_Cur@templ,w
  3350  011D  1C03               	skipc
  3351  011E  2922               	goto	l5634
  3352                           
  3353                           ;WHQ_TP_ZPGS_V1.2.c: 177: {
  3354                           ;WHQ_TP_ZPGS_V1.2.c: 178: temph = 2;
  3355  011F  3002               	movlw	2
  3356  0120                     L16:	
  3357  0120  00E5               	movwf	Test_Pwm_Cur@temph
  3358                           
  3359                           ;WHQ_TP_ZPGS_V1.2.c: 179: }
  3360  0121  2924               	goto	l8778
  3361  0122                     l5634:	
  3362                           
  3363                           ;WHQ_TP_ZPGS_V1.2.c: 180: else
  3364                           ;WHQ_TP_ZPGS_V1.2.c: 181: temph = 1;
  3365  0122  01E5               	clrf	Test_Pwm_Cur@temph
  3366  0123  0AE5               	incf	Test_Pwm_Cur@temph,f
  3367  0124                     l8778:	
  3368                           
  3369                           ;WHQ_TP_ZPGS_V1.2.c: 182: if(0 == Pwm_add(temph,pwmlst))
  3370  0124  0829               	movf	_pwmlst+1,w	;volatile
  3371  0125  00DF               	movwf	Pwm_add@pwmlset+1
  3372  0126  0828               	movf	_pwmlst,w	;volatile
  3373  0127  00DE               	movwf	Pwm_add@pwmlset
  3374  0128  0865               	movf	Test_Pwm_Cur@temph,w
  3375  0129  2131  118A         	fcall	_Pwm_add
  3376  012B  3A00               	xorlw	0
  3377  012C  1D03               	skipz
  3378                           
  3379                           ;WHQ_TP_ZPGS_V1.2.c: 188: else
  3380                           ;WHQ_TP_ZPGS_V1.2.c: 189: return 0xaa;
  3381  012D  34AA               	retlw	170
  3382  012E  2904               	goto	l8746
  3383  012F                     L17:	
  3384                           ;WHQ_TP_ZPGS_V1.2.c: 192: else
  3385                           ;WHQ_TP_ZPGS_V1.2.c: 193: {
  3386                           ;WHQ_TP_ZPGS_V1.2.c: 194: curupcl = 0;
  3387                           
  3388                           
  3389                           ;WHQ_TP_ZPGS_V1.2.c: 195: curdowncl = 0;
  3390  012F  01B2               	clrf	Test_Pwm_Cur@curdowncl
  3391                           
  3392                           ;WHQ_TP_ZPGS_V1.2.c: 196: }
  3393                           ;WHQ_TP_ZPGS_V1.2.c: 197: return 0x00;
  3394  0130  3400               	retlw	0
  3395  0131                     __end_of_Test_Pwm_Cur:	
  3396  0131                     __ptext15:	
  3397 ;; *************** function _Pwm_add *****************
  3398 ;; Defined at:
  3399 ;;		line 105 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  addcl           1    wreg     unsigned char 
  3402 ;;  pwmlset         2    0[BANK0 ] unsigned int 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  addcl           1    4[BANK0 ] unsigned char 
  3405 ;;  temp            2    5[BANK0 ] unsigned int 
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      unsigned char 
  3408 ;; Registers used:
  3409 ;;		wreg
  3410 ;; Tracked objects:
  3411 ;;		On entry : 300/0
  3412 ;;		On exit  : 300/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3415 ;;      Params:         0       2       0       0       0
  3416 ;;      Locals:         0       3       0       0       0
  3417 ;;      Temps:          0       2       0       0       0
  3418 ;;      Totals:         0       7       0       0       0
  3419 ;;Total ram usage:        7 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    2
  3422 ;; This function calls:
  3423 ;;		Nothing
  3424 ;; This function is called by:
  3425 ;;		_Test_Pwm_Cur
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           
  3430                           ;psect for function _Pwm_add
  3431  0131                     _Pwm_add:	
  3432                           
  3433                           ;incstack = 0
  3434                           ; Regs used in _Pwm_add: [wreg]
  3435                           ;Pwm_add@addcl stored from wreg
  3436  0131  00E2               	movwf	Pwm_add@addcl
  3437                           
  3438                           ;WHQ_TP_ZPGS_V1.2.c: 108: unsigned int temp;
  3439                           ;WHQ_TP_ZPGS_V1.2.c: 110: pfgonetemp.pfgtemp = pfgonetemp.pfgtemp + addcl;
  3440  0132  07F7               	addwf	_pfgonetemp,f
  3441  0133  1803               	skipnc
  3442  0134  0AF8               	incf	_pfgonetemp+1,f
  3443                           
  3444                           ;WHQ_TP_ZPGS_V1.2.c: 111: PfgChangef = 1;
  3445  0135  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  3446                           
  3447                           ;WHQ_TP_ZPGS_V1.2.c: 112: temp = pfgonetemp.pfgtemp & 0x03ff;
  3448  0136  0878               	movf	_pfgonetemp+1,w
  3449  0137  00E4               	movwf	Pwm_add@temp+1
  3450  0138  0877               	movf	_pfgonetemp,w
  3451  0139  00E3               	movwf	Pwm_add@temp
  3452  013A  3003               	movlw	3
  3453  013B  05E4               	andwf	Pwm_add@temp+1,f
  3454                           
  3455                           ;WHQ_TP_ZPGS_V1.2.c: 113: if(temp > (pwmlset & 0x03ff)) return 0;
  3456  013C  085E               	movf	Pwm_add@pwmlset,w
  3457  013D  00E0               	movwf	??_Pwm_add
  3458  013E  3003               	movlw	3
  3459  013F  055F               	andwf	Pwm_add@pwmlset+1,w
  3460  0140  00E1               	movwf	??_Pwm_add+1
  3461  0141  0864               	movf	Pwm_add@temp+1,w
  3462  0142  0261               	subwf	??_Pwm_add+1,w
  3463  0143  1D03               	skipz
  3464  0144  2947               	goto	u3255
  3465  0145  0863               	movf	Pwm_add@temp,w
  3466  0146  0260               	subwf	??_Pwm_add,w
  3467  0147                     u3255:	
  3468  0147  1C03               	btfss	3,0
  3469  0148  3400               	retlw	0
  3470                           
  3471                           ;WHQ_TP_ZPGS_V1.2.c: 114: return 1;
  3472  0149  3401               	retlw	1
  3473  014A                     __end_of_Pwm_add:	
  3474  014A                     __ptext14:	
  3475 ;; *************** function _Pwm_dec *****************
  3476 ;; Defined at:
  3477 ;;		line 124 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;  deccl           1    wreg     unsigned char 
  3480 ;;  pwmfset         2    0[BANK0 ] unsigned int 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  deccl           1    4[BANK0 ] unsigned char 
  3483 ;;  temp            2    5[BANK0 ] unsigned int 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      unsigned char 
  3486 ;; Registers used:
  3487 ;;		wreg
  3488 ;; Tracked objects:
  3489 ;;		On entry : 300/0
  3490 ;;		On exit  : 300/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3493 ;;      Params:         0       2       0       0       0
  3494 ;;      Locals:         0       3       0       0       0
  3495 ;;      Temps:          0       2       0       0       0
  3496 ;;      Totals:         0       7       0       0       0
  3497 ;;Total ram usage:        7 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; Hardware stack levels required when called:    2
  3500 ;; This function calls:
  3501 ;;		Nothing
  3502 ;; This function is called by:
  3503 ;;		_Test_Pwm_Cur
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function _Pwm_dec
  3509  014A                     _Pwm_dec:	
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _Pwm_dec: [wreg]
  3513                           ;Pwm_dec@deccl stored from wreg
  3514  014A  00E2               	movwf	Pwm_dec@deccl
  3515                           
  3516                           ;WHQ_TP_ZPGS_V1.2.c: 127: unsigned int temp;
  3517                           ;WHQ_TP_ZPGS_V1.2.c: 129: pfgonetemp.pfgtemp = pfgonetemp.pfgtemp - deccl;
  3518  014B  02F7               	subwf	_pfgonetemp,f
  3519  014C  1C03               	skipc
  3520  014D  03F8               	decf	_pfgonetemp+1,f
  3521                           
  3522                           ;WHQ_TP_ZPGS_V1.2.c: 130: PfgChangef = 1;
  3523  014E  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  3524                           
  3525                           ;WHQ_TP_ZPGS_V1.2.c: 131: temp = pfgonetemp.pfgtemp & 0x03ff;
  3526  014F  0878               	movf	_pfgonetemp+1,w
  3527  0150  00E4               	movwf	Pwm_dec@temp+1
  3528  0151  0877               	movf	_pfgonetemp,w
  3529  0152  00E3               	movwf	Pwm_dec@temp
  3530  0153  3003               	movlw	3
  3531  0154  05E4               	andwf	Pwm_dec@temp+1,f
  3532                           
  3533                           ;WHQ_TP_ZPGS_V1.2.c: 132: if(temp < (pwmfset & 0x03ff)) return 0;
  3534  0155  085E               	movf	Pwm_dec@pwmfset,w
  3535  0156  00E0               	movwf	??_Pwm_dec
  3536  0157  3003               	movlw	3
  3537  0158  055F               	andwf	Pwm_dec@pwmfset+1,w
  3538  0159  00E1               	movwf	??_Pwm_dec+1
  3539  015A  0264               	subwf	Pwm_dec@temp+1,w
  3540  015B  1D03               	skipz
  3541  015C  295F               	goto	u3265
  3542  015D  0860               	movf	??_Pwm_dec,w
  3543  015E  0263               	subwf	Pwm_dec@temp,w
  3544  015F                     u3265:	
  3545  015F  1C03               	btfss	3,0
  3546  0160  3400               	retlw	0
  3547                           
  3548                           ;WHQ_TP_ZPGS_V1.2.c: 133: return 1;
  3549  0161  3401               	retlw	1
  3550  0162                     __end_of_Pwm_dec:	
  3551  0162                     __ptext10:	
  3552 ;; *************** function _Test_water *****************
  3553 ;; Defined at:
  3554 ;;		line 548 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  temp            2    4[BANK0 ] unsigned int 
  3559 ;;  temph           1    3[BANK0 ] unsigned char 
  3560 ;;  templ           1    0        unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      unsigned char 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0, btemp+1
  3565 ;; Tracked objects:
  3566 ;;		On entry : 300/0
  3567 ;;		On exit  : 200/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3570 ;;      Params:         0       0       0       0       0
  3571 ;;      Locals:         0       4       0       0       0
  3572 ;;      Temps:          0       2       0       0       0
  3573 ;;      Totals:         0       6       0       0       0
  3574 ;;Total ram usage:        6 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    2
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_Test_Pwm
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           
  3585                           ;psect for function _Test_water
  3586  0162                     _Test_water:	
  3587                           
  3588                           ;WHQ_TP_ZPGS_V1.2.c: 550: unsigned char templ,temph;
  3589                           ;WHQ_TP_ZPGS_V1.2.c: 551: unsigned int temp;
  3590                           ;WHQ_TP_ZPGS_V1.2.c: 552: static unsigned int curstrold;
  3591                           ;WHQ_TP_ZPGS_V1.2.c: 553: static unsigned int strupc;
  3592                           ;WHQ_TP_ZPGS_V1.2.c: 554: static unsigned int ytdly;
  3593                           ;WHQ_TP_ZPGS_V1.2.c: 555: static bit watnof = 0;
  3594                           ;WHQ_TP_ZPGS_V1.2.c: 557: watnof=0;
  3595                           
  3596                           ;incstack = 0
  3597                           ; Regs used in _Test_water: [wreg+status,2+status,0+btemp+1]
  3598  0162  10F0               	bcf	Test_water@watnof/(0+8),Test_water@watnof& (0+7)
  3599                           
  3600                           ;WHQ_TP_ZPGS_V1.2.c: 559: if(!pwmtf)
  3601  0163  19F1               	btfsc	_pwmtf/(0+8),_pwmtf& (0+7)	;volatile
  3602  0164  29EE               	goto	l5728
  3603                           
  3604                           ;WHQ_TP_ZPGS_V1.2.c: 560: {
  3605                           ;WHQ_TP_ZPGS_V1.2.c: 561: if(pwmtonf)
  3606  0165  1CF1               	btfss	_pwmtonf/(0+8),_pwmtonf& (0+7)	;volatile
  3607  0166  2990               	goto	l9048
  3608                           
  3609                           ;WHQ_TP_ZPGS_V1.2.c: 562: {
  3610                           ;WHQ_TP_ZPGS_V1.2.c: 563: if((pfgonetemp.pfgtemp & 0x03ff) > pwmlv)
  3611  0167  2368  118A         	fcall	PL8	;call to abstracted procedure
  3612  0169  0223               	subwf	_pwmlv+1,w	;volatile
  3613  016A  1D03               	skipz
  3614  016B  296E               	goto	u3555
  3615  016C  085E               	movf	??_Test_water,w
  3616  016D  0222               	subwf	_pwmlv,w	;volatile
  3617  016E                     u3555:	
  3618  016E  1803               	skipnc
  3619  016F  2983               	goto	l5730
  3620                           
  3621                           ;WHQ_TP_ZPGS_V1.2.c: 564: {
  3622                           ;WHQ_TP_ZPGS_V1.2.c: 565: temp = (pfgonetemp.pfgtemp&0x03ff) - pwmlv;
  3623  0170  0878               	movf	_pfgonetemp+1,w
  3624  0171  00E3               	movwf	Test_water@temp+1
  3625  0172  0877               	movf	_pfgonetemp,w
  3626  0173  00E2               	movwf	Test_water@temp
  3627  0174  3003               	movlw	3
  3628  0175  05E3               	andwf	Test_water@temp+1,f
  3629                           
  3630                           ;WHQ_TP_ZPGS_V1.2.c: 566: xldisp = temp;
  3631  0176  0822               	movf	_pwmlv,w	;volatile
  3632  0177  02E2               	subwf	Test_water@temp,f
  3633  0178  0823               	movf	_pwmlv+1,w	;volatile
  3634  0179  1C03               	skipc
  3635  017A  03E3               	decf	Test_water@temp+1,f
  3636  017B  02E3               	subwf	Test_water@temp+1,f
  3637  017C  3000               	movlw	0
  3638  017D  0263               	subwf	Test_water@temp+1,w
  3639  017E  300B               	movlw	11
  3640  017F  1903               	skipnz
  3641  0180  0262               	subwf	Test_water@temp,w
  3642  0181  1C03               	btfss	3,0
  3643                           
  3644                           ;WHQ_TP_ZPGS_V1.2.c: 568: {
  3645                           ;WHQ_TP_ZPGS_V1.2.c: 569: return 0xff;
  3646  0182  34FF               	retlw	255
  3647  0183                     l5730:	
  3648                           
  3649                           ;WHQ_TP_ZPGS_V1.2.c: 570: }
  3650                           ;WHQ_TP_ZPGS_V1.2.c: 571: }
  3651                           ;WHQ_TP_ZPGS_V1.2.c: 572: if(!curupf)
  3652  0183  1E70               	btfss	_curupf/(0+8),_curupf& (0+7)	;volatile
  3653  0184  34FF               	retlw	255
  3654  0185  0843               	movf	_cur_addat,w	;volatile
  3655  0186  3E05               	addlw	5
  3656  0187  235E  118A         	fcall	PL4	;call to abstracted procedure
  3657  0189  1D03               	skipz
  3658  018A  298D               	goto	u3585
  3659  018B  301B               	movlw	27
  3660  018C  025E               	subwf	??_Test_water,w
  3661  018D                     u3585:	
  3662  018D  1C03               	btfss	3,0
  3663  018E  2A49               	goto	l9046
  3664  018F  2A4A               	goto	l5752
  3665  0190                     l9048:	
  3666  0190  300E               	movlw	14
  3667  0191  0243               	subwf	_cur_addat,w	;volatile
  3668  0192  1803               	skipnc
  3669  0193  299C               	goto	l9056
  3670                           
  3671                           ;WHQ_TP_ZPGS_V1.2.c: 587: {
  3672                           ;WHQ_TP_ZPGS_V1.2.c: 588: strupc = 0;
  3673  0194  1683               	bsf	3,5	;RP0=1, select bank1
  3674  0195  01A0               	clrf	Test_water@strupc^(0+128)
  3675  0196  01A1               	clrf	(Test_water@strupc+1)^(0+128)
  3676                           
  3677                           ;WHQ_TP_ZPGS_V1.2.c: 589: pwmlv = pfgonetemp.pfgtemp&0x03ff;
  3678  0197  0878               	movf	_pfgonetemp+1,w
  3679  0198  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0199  2356  118A         	fcall	PL2	;call to abstracted procedure
  3681                           
  3682                           ;WHQ_TP_ZPGS_V1.2.c: 590: }
  3683  019B  29AA               	goto	l5738
  3684  019C                     l9056:	
  3685                           
  3686                           ;WHQ_TP_ZPGS_V1.2.c: 591: else
  3687                           ;WHQ_TP_ZPGS_V1.2.c: 592: {
  3688                           ;WHQ_TP_ZPGS_V1.2.c: 593: if(++strupc >= 500)
  3689  019C  1683               	bsf	3,5	;RP0=1, select bank1
  3690  019D  0AA0               	incf	Test_water@strupc^(0+128),f
  3691  019E  1903               	skipnz
  3692  019F  0AA1               	incf	(Test_water@strupc+1)^(0+128),f
  3693  01A0  3001               	movlw	1
  3694  01A1  0221               	subwf	(Test_water@strupc+1)^(0+128),w
  3695  01A2  30F4               	movlw	244
  3696  01A3  1903               	skipnz
  3697  01A4  0220               	subwf	Test_water@strupc^(0+128),w
  3698  01A5  1C03               	skipc
  3699  01A6  29AA               	goto	l5738
  3700                           
  3701                           ;WHQ_TP_ZPGS_V1.2.c: 594: {
  3702                           ;WHQ_TP_ZPGS_V1.2.c: 595: strupc=0;
  3703  01A7  01A0               	clrf	Test_water@strupc^(0+128)
  3704  01A8  01A1               	clrf	(Test_water@strupc+1)^(0+128)
  3705  01A9  34FF               	retlw	255
  3706  01AA                     l5738:	
  3707                           
  3708                           ;WHQ_TP_ZPGS_V1.2.c: 597: }
  3709                           ;WHQ_TP_ZPGS_V1.2.c: 598: }
  3710                           ;WHQ_TP_ZPGS_V1.2.c: 599: if(curupf)
  3711  01AA  1E70               	btfss	_curupf/(0+8),_curupf& (0+7)	;volatile
  3712  01AB  29B6               	goto	l9072
  3713                           
  3714                           ;WHQ_TP_ZPGS_V1.2.c: 600: {
  3715                           ;WHQ_TP_ZPGS_V1.2.c: 601: curstrold = 0;
  3716  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  3717  01AD  01A0               	clrf	Test_water@curstrold
  3718  01AE  01A1               	clrf	Test_water@curstrold+1
  3719                           
  3720                           ;WHQ_TP_ZPGS_V1.2.c: 602: if(curmax < cur_addat)
  3721  01AF  0843               	movf	_cur_addat,w	;volatile
  3722  01B0  0234               	subwf	_curmax,w	;volatile
  3723  01B1  1803               	skipnc
  3724  01B2  2A4A               	goto	l5752
  3725                           
  3726                           ;WHQ_TP_ZPGS_V1.2.c: 603: {
  3727                           ;WHQ_TP_ZPGS_V1.2.c: 604: curmax = cur_addat;
  3728  01B3  0843               	movf	_cur_addat,w	;volatile
  3729  01B4  00B4               	movwf	_curmax	;volatile
  3730                           
  3731                           ;WHQ_TP_ZPGS_V1.2.c: 609: }
  3732                           ;WHQ_TP_ZPGS_V1.2.c: 610: }
  3733                           
  3734                           ;WHQ_TP_ZPGS_V1.2.c: 605: }
  3735  01B5  2A4A               	goto	l5752
  3736  01B6                     l9072:	
  3737                           
  3738                           ;WHQ_TP_ZPGS_V1.2.c: 611: else
  3739                           ;WHQ_TP_ZPGS_V1.2.c: 612: {
  3740                           ;WHQ_TP_ZPGS_V1.2.c: 613: curmax = 0;
  3741  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  3742  01B7  01B4               	clrf	_curmax	;volatile
  3743                           
  3744                           ;WHQ_TP_ZPGS_V1.2.c: 614: if(0 != curstrold)
  3745  01B8  0820               	movf	Test_water@curstrold,w
  3746  01B9  0421               	iorwf	Test_water@curstrold+1,w
  3747  01BA  1903               	btfsc	3,2
  3748  01BB  29EA               	goto	l5745
  3749                           
  3750                           ;WHQ_TP_ZPGS_V1.2.c: 615: {
  3751                           ;WHQ_TP_ZPGS_V1.2.c: 616: if(curstrold > cur_addat)
  3752  01BC  0843               	movf	_cur_addat,w	;volatile
  3753  01BD  00DE               	movwf	??_Test_water
  3754  01BE  01DF               	clrf	??_Test_water+1
  3755  01BF  0821               	movf	Test_water@curstrold+1,w
  3756  01C0  025F               	subwf	??_Test_water+1,w
  3757  01C1  1D03               	skipz
  3758  01C2  29C5               	goto	u3645
  3759  01C3  0820               	movf	Test_water@curstrold,w
  3760  01C4  025E               	subwf	??_Test_water,w
  3761  01C5                     u3645:	
  3762  01C5  1803               	skipnc
  3763  01C6  29D2               	goto	l9088
  3764                           
  3765                           ;WHQ_TP_ZPGS_V1.2.c: 617: {
  3766                           ;WHQ_TP_ZPGS_V1.2.c: 618: curdownc++;
  3767  01C7  0ABE               	incf	_curdownc,f	;volatile
  3768                           
  3769                           ;WHQ_TP_ZPGS_V1.2.c: 619: if(curdownc >= 2)
  3770  01C8  3002               	movlw	2
  3771  01C9  023E               	subwf	_curdownc,w	;volatile
  3772  01CA  1C03               	skipc
  3773  01CB  29EA               	goto	l5745
  3774                           
  3775                           ;WHQ_TP_ZPGS_V1.2.c: 620: {
  3776                           ;WHQ_TP_ZPGS_V1.2.c: 621: curdownc = 0;
  3777  01CC  01BE               	clrf	_curdownc	;volatile
  3778                           
  3779                           ;WHQ_TP_ZPGS_V1.2.c: 622: curupc = 0;
  3780  01CD  01BF               	clrf	_curupc	;volatile
  3781                           
  3782                           ;WHQ_TP_ZPGS_V1.2.c: 623: pwmlv = pfgonetemp.pfgtemp&0x03ff;
  3783  01CE  0878               	movf	_pfgonetemp+1,w
  3784  01CF  2356  118A         	fcall	PL2	;call to abstracted procedure
  3785  01D1  29EA               	goto	l5745
  3786  01D2                     l9088:	
  3787                           
  3788                           ;WHQ_TP_ZPGS_V1.2.c: 626: else if(curstrold < cur_addat)
  3789  01D2  0843               	movf	_cur_addat,w	;volatile
  3790  01D3  00DE               	movwf	??_Test_water
  3791  01D4  01DF               	clrf	??_Test_water+1
  3792  01D5  085F               	movf	??_Test_water+1,w
  3793  01D6  0221               	subwf	Test_water@curstrold+1,w
  3794  01D7  1D03               	skipz
  3795  01D8  29DB               	goto	u3665
  3796  01D9  085E               	movf	??_Test_water,w
  3797  01DA  0220               	subwf	Test_water@curstrold,w
  3798  01DB                     u3665:	
  3799  01DB  1803               	skipnc
  3800  01DC  29EA               	goto	l5745
  3801                           
  3802                           ;WHQ_TP_ZPGS_V1.2.c: 627: {
  3803                           ;WHQ_TP_ZPGS_V1.2.c: 628: curupc++;
  3804  01DD  0ABF               	incf	_curupc,f	;volatile
  3805                           
  3806                           ;WHQ_TP_ZPGS_V1.2.c: 629: if(curupc >= 3)
  3807  01DE  3003               	movlw	3
  3808  01DF  023F               	subwf	_curupc,w	;volatile
  3809  01E0  1C03               	skipc
  3810  01E1  29EA               	goto	l5745
  3811                           
  3812                           ;WHQ_TP_ZPGS_V1.2.c: 630: {
  3813                           ;WHQ_TP_ZPGS_V1.2.c: 631: curupc = 0;
  3814  01E2  01BF               	clrf	_curupc	;volatile
  3815                           
  3816                           ;WHQ_TP_ZPGS_V1.2.c: 632: curdownc = 0;
  3817  01E3  01BE               	clrf	_curdownc	;volatile
  3818                           
  3819                           ;WHQ_TP_ZPGS_V1.2.c: 633: if(0 == curupf)
  3820  01E4  1A70               	btfsc	_curupf/(0+8),_curupf& (0+7)	;volatile
  3821  01E5  29EA               	goto	l5745
  3822                           
  3823                           ;WHQ_TP_ZPGS_V1.2.c: 634: {
  3824                           ;WHQ_TP_ZPGS_V1.2.c: 635: pwmlv = pfgonetemp.pfgtemp&0x03ff;
  3825  01E6  0878               	movf	_pfgonetemp+1,w
  3826  01E7  2356  118A         	fcall	PL2	;call to abstracted procedure
  3827                           
  3828                           ;WHQ_TP_ZPGS_V1.2.c: 636: }
  3829                           ;WHQ_TP_ZPGS_V1.2.c: 637: curupf = 1;
  3830  01E9  1670               	bsf	_curupf/(0+8),_curupf& (0+7)	;volatile
  3831  01EA                     l5745:	
  3832                           
  3833                           ;WHQ_TP_ZPGS_V1.2.c: 638: }
  3834                           ;WHQ_TP_ZPGS_V1.2.c: 639: }
  3835                           ;WHQ_TP_ZPGS_V1.2.c: 640: }
  3836                           ;WHQ_TP_ZPGS_V1.2.c: 641: curstrold = cur_addat;
  3837  01EA  0843               	movf	_cur_addat,w	;volatile
  3838  01EB  00A0               	movwf	Test_water@curstrold
  3839  01EC  01A1               	clrf	Test_water@curstrold+1
  3840  01ED  2A4A               	goto	l5752
  3841  01EE                     l5728:	
  3842                           
  3843                           ;WHQ_TP_ZPGS_V1.2.c: 646: else
  3844                           ;WHQ_TP_ZPGS_V1.2.c: 647: {
  3845                           ;WHQ_TP_ZPGS_V1.2.c: 648: if(!pwmtf1)
  3846  01EE  1971               	btfsc	_pwmtf1/(0+8),_pwmtf1& (0+7)	;volatile
  3847  01EF  29F7               	goto	l9110
  3848                           
  3849                           ;WHQ_TP_ZPGS_V1.2.c: 649: {
  3850                           ;WHQ_TP_ZPGS_V1.2.c: 650: if(++Ytzpcl >= 125)
  3851  01F0  307D               	movlw	125
  3852  01F1  0AB9               	incf	_Ytzpcl,f	;volatile
  3853  01F2  0239               	subwf	_Ytzpcl,w	;volatile
  3854  01F3  1C03               	skipc
  3855  01F4  2A4A               	goto	l5752
  3856                           
  3857                           ;WHQ_TP_ZPGS_V1.2.c: 651: {
  3858                           ;WHQ_TP_ZPGS_V1.2.c: 652: Ytzpcl=0;
  3859  01F5  01B9               	clrf	_Ytzpcl	;volatile
  3860  01F6  34FF               	retlw	255
  3861  01F7                     l9110:	
  3862  01F7  301D               	movlw	29
  3863  01F8  0243               	subwf	_cur_addat,w	;volatile
  3864  01F9  1C03               	skipc
  3865  01FA  2A05               	goto	l9114
  3866  01FB  0843               	movf	_cur_addat,w	;volatile
  3867  01FC  3E02               	addlw	2
  3868  01FD  235E  118A         	fcall	PL4	;call to abstracted procedure
  3869  01FF  1D03               	skipz
  3870  0200  2A03               	goto	u3725
  3871  0201  301A               	movlw	26
  3872  0202  025E               	subwf	??_Test_water,w
  3873  0203                     u3725:	
  3874  0203  1C03               	skipc
  3875  0204  2A0A               	goto	l5756
  3876  0205                     l9114:	
  3877                           
  3878                           ;WHQ_TP_ZPGS_V1.2.c: 659: {
  3879                           ;WHQ_TP_ZPGS_V1.2.c: 660: pwmlc = 0;
  3880  0205  1283               	bcf	3,5	;RP0=0, select bank0
  3881  0206  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0207  01B5               	clrf	_pwmlc	;volatile
  3883                           
  3884                           ;WHQ_TP_ZPGS_V1.2.c: 661: pwmhc = 0;
  3885  0208  01B6               	clrf	_pwmhc	;volatile
  3886                           
  3887                           ;WHQ_TP_ZPGS_V1.2.c: 662: }
  3888  0209  2A3E               	goto	l5759
  3889  020A                     l5756:	
  3890                           
  3891                           ;WHQ_TP_ZPGS_V1.2.c: 663: else
  3892                           ;WHQ_TP_ZPGS_V1.2.c: 664: {
  3893                           ;WHQ_TP_ZPGS_V1.2.c: 665: if(PFGchgf)
  3894  020A  1F70               	btfss	_PFGchgf/(0+8),_PFGchgf& (0+7)	;volatile
  3895  020B  2A3E               	goto	l5759
  3896                           
  3897                           ;WHQ_TP_ZPGS_V1.2.c: 666: {
  3898                           ;WHQ_TP_ZPGS_V1.2.c: 667: PFGchgf = 0;
  3899  020C  1370               	bcf	_PFGchgf/(0+8),_PFGchgf& (0+7)	;volatile
  3900                           
  3901                           ;WHQ_TP_ZPGS_V1.2.c: 668: if(0 != pwmold)
  3902  020D  1283               	bcf	3,5	;RP0=0, select bank0
  3903  020E  1303               	bcf	3,6	;RP1=0, select bank0
  3904  020F  0824               	movf	_pwmold,w	;volatile
  3905  0210  0425               	iorwf	_pwmold+1,w	;volatile
  3906  0211  1903               	btfsc	3,2
  3907  0212  2A36               	goto	l9144
  3908                           
  3909                           ;WHQ_TP_ZPGS_V1.2.c: 669: {
  3910                           ;WHQ_TP_ZPGS_V1.2.c: 670: if((pfgonetemp.pfgtemp & 0x03ff) > pwmold)
  3911  0213  2368  118A         	fcall	PL8	;call to abstracted procedure
  3912  0215  0225               	subwf	_pwmold+1,w	;volatile
  3913  0216  1D03               	skipz
  3914  0217  2A1A               	goto	u3755
  3915  0218  085E               	movf	??_Test_water,w
  3916  0219  0224               	subwf	_pwmold,w	;volatile
  3917  021A                     u3755:	
  3918  021A  1803               	skipnc
  3919  021B  2A24               	goto	l9132
  3920                           
  3921                           ;WHQ_TP_ZPGS_V1.2.c: 671: {
  3922                           ;WHQ_TP_ZPGS_V1.2.c: 672: pwmlc = 0;
  3923  021C  01B5               	clrf	_pwmlc	;volatile
  3924                           
  3925                           ;WHQ_TP_ZPGS_V1.2.c: 673: if(++pwmhc >= 6)
  3926  021D  3006               	movlw	6
  3927  021E  0AB6               	incf	_pwmhc,f	;volatile
  3928  021F  0236               	subwf	_pwmhc,w	;volatile
  3929  0220  1C03               	skipc
  3930  0221  2A36               	goto	l9144
  3931                           
  3932                           ;WHQ_TP_ZPGS_V1.2.c: 674: {
  3933                           ;WHQ_TP_ZPGS_V1.2.c: 675: pwmhc = 0;
  3934  0222  01B6               	clrf	_pwmhc	;volatile
  3935  0223  34FF               	retlw	255
  3936  0224                     l9132:	
  3937                           
  3938                           ;WHQ_TP_ZPGS_V1.2.c: 679: else if((pfgonetemp.pfgtemp & 0x03ff) < pwmold)
  3939  0224  2368  118A         	fcall	PL8	;call to abstracted procedure
  3940  0226  0825               	movf	_pwmold+1,w	;volatile
  3941  0227  025F               	subwf	??_Test_water+1,w
  3942  0228  1D03               	skipz
  3943  0229  2A2C               	goto	u3775
  3944  022A  0824               	movf	_pwmold,w	;volatile
  3945  022B  025E               	subwf	??_Test_water,w
  3946  022C                     u3775:	
  3947  022C  1803               	skipnc
  3948  022D  2A36               	goto	l9144
  3949                           
  3950                           ;WHQ_TP_ZPGS_V1.2.c: 680: {
  3951                           ;WHQ_TP_ZPGS_V1.2.c: 681: pwmhc = 0;
  3952  022E  01B6               	clrf	_pwmhc	;volatile
  3953                           
  3954                           ;WHQ_TP_ZPGS_V1.2.c: 682: if(++pwmlc >= 6)
  3955  022F  3006               	movlw	6
  3956  0230  0AB5               	incf	_pwmlc,f	;volatile
  3957  0231  0235               	subwf	_pwmlc,w	;volatile
  3958  0232  1C03               	skipc
  3959  0233  2A36               	goto	l9144
  3960                           
  3961                           ;WHQ_TP_ZPGS_V1.2.c: 683: {
  3962                           ;WHQ_TP_ZPGS_V1.2.c: 684: pwmlc = 0;
  3963  0234  01B5               	clrf	_pwmlc	;volatile
  3964  0235  34FF               	retlw	255
  3965  0236                     l9144:	
  3966                           
  3967                           ;WHQ_TP_ZPGS_V1.2.c: 686: }
  3968                           ;WHQ_TP_ZPGS_V1.2.c: 687: }
  3969                           ;WHQ_TP_ZPGS_V1.2.c: 689: }
  3970                           ;WHQ_TP_ZPGS_V1.2.c: 690: pwmold = pfgonetemp.pfgtemp & 0x03ff;
  3971  0236  0878               	movf	_pfgonetemp+1,w
  3972  0237  00A5               	movwf	_pwmold+1	;volatile
  3973  0238  0877               	movf	_pfgonetemp,w
  3974  0239  00A4               	movwf	_pwmold	;volatile
  3975  023A  30FF               	movlw	255
  3976  023B  05A4               	andwf	_pwmold,f	;volatile
  3977  023C  3003               	movlw	3
  3978  023D  05A5               	andwf	_pwmold+1,f	;volatile
  3979  023E                     l5759:	
  3980  023E  3020               	movlw	32
  3981  023F  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0240  1303               	bcf	3,6	;RP1=0, select bank0
  3983  0241  00E1               	movwf	Test_water@temph
  3984                           
  3985                           ;WHQ_TP_ZPGS_V1.2.c: 695: if(cur_addat <= templ)
  3986  0242  3016               	movlw	22
  3987  0243  0243               	subwf	_cur_addat,w	;volatile
  3988  0244  1C03               	btfss	3,0
  3989                           
  3990                           ;WHQ_TP_ZPGS_V1.2.c: 696: {
  3991                           ;WHQ_TP_ZPGS_V1.2.c: 697: watnof = 1;
  3992  0245  14F0               	bsf	Test_water@watnof/(0+8),Test_water@watnof& (0+7)
  3993                           
  3994                           ;WHQ_TP_ZPGS_V1.2.c: 698: }
  3995                           ;WHQ_TP_ZPGS_V1.2.c: 699: if(cur_addat >= temph)
  3996  0246  3020               	movlw	32
  3997  0247  0243               	subwf	_cur_addat,w	;volatile
  3998  0248  1803               	btfsc	3,0
  3999  0249                     l9046:	
  4000                           
  4001                           ;WHQ_TP_ZPGS_V1.2.c: 579: {
  4002                           ;WHQ_TP_ZPGS_V1.2.c: 580: watnof=1;
  4003  0249  14F0               	bsf	Test_water@watnof/(0+8),Test_water@watnof& (0+7)
  4004  024A                     l5752:	
  4005                           
  4006                           ;WHQ_TP_ZPGS_V1.2.c: 702: }
  4007                           ;WHQ_TP_ZPGS_V1.2.c: 703: }
  4008                           ;WHQ_TP_ZPGS_V1.2.c: 704: }
  4009                           ;WHQ_TP_ZPGS_V1.2.c: 706: if(watnof)
  4010  024A  1CF0               	btfss	Test_water@watnof/(0+8),Test_water@watnof& (0+7)
  4011  024B  2A56               	goto	l9164
  4012                           
  4013                           ;WHQ_TP_ZPGS_V1.2.c: 707: {
  4014                           ;WHQ_TP_ZPGS_V1.2.c: 708: wnoncl++;
  4015  024C  1283               	bcf	3,5	;RP0=0, select bank0
  4016  024D  1303               	bcf	3,6	;RP1=0, select bank0
  4017  024E  0AB8               	incf	_wnoncl,f	;volatile
  4018                           
  4019                           ;WHQ_TP_ZPGS_V1.2.c: 709: whavecl=0;
  4020  024F  01B7               	clrf	_whavecl	;volatile
  4021                           
  4022                           ;WHQ_TP_ZPGS_V1.2.c: 710: if(wnoncl >= 2)
  4023  0250  3002               	movlw	2
  4024  0251  0238               	subwf	_wnoncl,w	;volatile
  4025  0252  1C03               	skipc
  4026  0253  3400               	retlw	0
  4027                           
  4028                           ;WHQ_TP_ZPGS_V1.2.c: 711: {
  4029                           ;WHQ_TP_ZPGS_V1.2.c: 712: wnoncl=0;
  4030  0254  01B8               	clrf	_wnoncl	;volatile
  4031  0255  34FF               	retlw	255
  4032  0256                     l9164:	
  4033                           
  4034                           ;WHQ_TP_ZPGS_V1.2.c: 716: else
  4035                           ;WHQ_TP_ZPGS_V1.2.c: 717: {
  4036                           ;WHQ_TP_ZPGS_V1.2.c: 718: whavecl++;
  4037  0256  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0257  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0258  0AB7               	incf	_whavecl,f	;volatile
  4040                           
  4041                           ;WHQ_TP_ZPGS_V1.2.c: 719: if(whavecl>=5)
  4042  0259  3005               	movlw	5
  4043  025A  0237               	subwf	_whavecl,w	;volatile
  4044  025B  1C03               	skipc
  4045  025C  3400               	retlw	0
  4046                           
  4047                           ;WHQ_TP_ZPGS_V1.2.c: 720: {
  4048                           ;WHQ_TP_ZPGS_V1.2.c: 721: whavecl=0;
  4049  025D  01B7               	clrf	_whavecl	;volatile
  4050                           
  4051                           ;WHQ_TP_ZPGS_V1.2.c: 722: wnoncl=0;
  4052  025E  01B8               	clrf	_wnoncl	;volatile
  4053                           
  4054                           ;WHQ_TP_ZPGS_V1.2.c: 723: }
  4055                           ;WHQ_TP_ZPGS_V1.2.c: 724: }
  4056                           ;WHQ_TP_ZPGS_V1.2.c: 725: return 0;
  4057  025F  3400               	retlw	0
  4058  0260                     __end_of_Test_water:	
  4059  0260                     __ptext19:	
  4060 ;; *************** function ___awdiv *****************
  4061 ;; Defined at:
  4062 ;;		line 6 in file "C:\mcuproject\scm\CMS_IDE_V2.03.26\CMS_IDE_V2.03.26\data\sources\common\awdiv.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  divisor         2    0[BANK0 ] int 
  4065 ;;  dividend        2    2[BANK0 ] int 
  4066 ;; Auto vars:     Size  Location     Type
  4067 ;;  quotient        2    6[BANK0 ] int 
  4068 ;;  sign            1    5[BANK0 ] unsigned char 
  4069 ;;  counter         1    4[BANK0 ] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  2    0[BANK0 ] int 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0
  4074 ;; Tracked objects:
  4075 ;;		On entry : 300/0
  4076 ;;		On exit  : 300/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       4       0       0       0
  4080 ;;      Locals:         0       4       0       0       0
  4081 ;;      Temps:          0       0       0       0       0
  4082 ;;      Totals:         0       8       0       0       0
  4083 ;;Total ram usage:        8 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    2
  4086 ;; This function calls:
  4087 ;;		Nothing
  4088 ;; This function is called by:
  4089 ;;		_Get_CUR_Dat
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           
  4094                           ;psect for function ___awdiv
  4095  0260                     ___awdiv:	
  4096                           
  4097                           ;incstack = 0
  4098                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4099  0260  01E3               	clrf	___awdiv@sign
  4100  0261  1FDF               	btfss	___awdiv@divisor+1,7
  4101  0262  2A6A               	goto	l8814
  4102  0263  09DE               	comf	___awdiv@divisor,f
  4103  0264  09DF               	comf	___awdiv@divisor+1,f
  4104  0265  0ADE               	incf	___awdiv@divisor,f
  4105  0266  1903               	skipnz
  4106  0267  0ADF               	incf	___awdiv@divisor+1,f
  4107  0268  01E3               	clrf	___awdiv@sign
  4108  0269  0AE3               	incf	___awdiv@sign,f
  4109  026A                     l8814:	
  4110  026A  1FE1               	btfss	___awdiv@dividend+1,7
  4111  026B  2A73               	goto	l8820
  4112  026C  09E0               	comf	___awdiv@dividend,f
  4113  026D  09E1               	comf	___awdiv@dividend+1,f
  4114  026E  0AE0               	incf	___awdiv@dividend,f
  4115  026F  1903               	skipnz
  4116  0270  0AE1               	incf	___awdiv@dividend+1,f
  4117  0271  3001               	movlw	1
  4118  0272  06E3               	xorwf	___awdiv@sign,f
  4119  0273                     l8820:	
  4120  0273  01E4               	clrf	___awdiv@quotient
  4121  0274  01E5               	clrf	___awdiv@quotient+1
  4122  0275  085E               	movf	___awdiv@divisor,w
  4123  0276  045F               	iorwf	___awdiv@divisor+1,w
  4124  0277  1903               	btfsc	3,2
  4125  0278  2A98               	goto	l8842
  4126  0279  01E2               	clrf	___awdiv@counter
  4127  027A                     L21:	
  4128  027A  0AE2               	incf	___awdiv@counter,f
  4129  027B  1BDF               	btfsc	___awdiv@divisor+1,7
  4130  027C  2A81               	goto	l8830
  4131  027D  1003               	clrc
  4132  027E  0DDE               	rlf	___awdiv@divisor,f
  4133  027F  0DDF               	rlf	___awdiv@divisor+1,f
  4134  0280  2A7A               	goto	L21
  4135  0281                     l8830:	
  4136  0281  1003               	clrc
  4137  0282  0DE4               	rlf	___awdiv@quotient,f
  4138  0283  0DE5               	rlf	___awdiv@quotient+1,f
  4139  0284  085F               	movf	___awdiv@divisor+1,w
  4140  0285  0261               	subwf	___awdiv@dividend+1,w
  4141  0286  1D03               	skipz
  4142  0287  2A8A               	goto	u3395
  4143  0288  085E               	movf	___awdiv@divisor,w
  4144  0289  0260               	subwf	___awdiv@dividend,w
  4145  028A                     u3395:	
  4146  028A  1C03               	skipc
  4147  028B  2A94               	goto	L22
  4148  028C  085E               	movf	___awdiv@divisor,w
  4149  028D  02E0               	subwf	___awdiv@dividend,f
  4150  028E  085F               	movf	___awdiv@divisor+1,w
  4151  028F  1C03               	skipc
  4152  0290  03E1               	decf	___awdiv@dividend+1,f
  4153  0291  02E1               	subwf	___awdiv@dividend+1,f
  4154  0292  1464               	bsf	___awdiv@quotient,0
  4155  0293  1003               	clrc
  4156  0294                     L22:	
  4157  0294  0CDF               	rrf	___awdiv@divisor+1,f
  4158  0295  0CDE               	rrf	___awdiv@divisor,f
  4159  0296  0BE2               	decfsz	___awdiv@counter,f
  4160  0297  2A81               	goto	l8830
  4161  0298                     l8842:	
  4162  0298  0863               	movf	___awdiv@sign,w
  4163  0299  1903               	btfsc	3,2
  4164  029A  2AA0               	goto	l8846
  4165  029B  09E4               	comf	___awdiv@quotient,f
  4166  029C  09E5               	comf	___awdiv@quotient+1,f
  4167  029D  0AE4               	incf	___awdiv@quotient,f
  4168  029E  1903               	skipnz
  4169  029F  0AE5               	incf	___awdiv@quotient+1,f
  4170  02A0                     l8846:	
  4171  02A0  0865               	movf	___awdiv@quotient+1,w
  4172  02A1  00DF               	movwf	?___awdiv+1
  4173  02A2  0864               	movf	___awdiv@quotient,w
  4174  02A3  00DE               	movwf	?___awdiv
  4175  02A4  0008               	return
  4176  02A5                     __end_of___awdiv:	
  4177  02A5                     __ptext16:	
  4178 ;; *************** function _PFG_read_fst *****************
  4179 ;; Defined at:
  4180 ;;		line 206 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  temp            2    7[BANK0 ] unsigned int 
  4185 ;;  pfgconset       1    6[BANK0 ] unsigned char 
  4186 ;;  temph           1    5[BANK0 ] unsigned char 
  4187 ;;  templ           1    4[BANK0 ] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 300/0
  4194 ;;		On exit  : 300/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4197 ;;      Params:         0       0       0       0       0
  4198 ;;      Locals:         0       5       0       0       0
  4199 ;;      Temps:          0       2       0       0       0
  4200 ;;      Totals:         0       7       0       0       0
  4201 ;;Total ram usage:        7 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    3
  4204 ;; This function calls:
  4205 ;;		_Set_jiyi_re
  4206 ;; This function is called by:
  4207 ;;		_Test_Pwm
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _PFG_read_fst
  4213  02A5                     _PFG_read_fst:	
  4214                           
  4215                           ;WHQ_TP_ZPGS_V1.2.c: 208: unsigned char templ,temph;
  4216                           ;WHQ_TP_ZPGS_V1.2.c: 209: unsigned int temp;
  4217                           ;WHQ_TP_ZPGS_V1.2.c: 210: unsigned char pfgconset;
  4218                           ;WHQ_TP_ZPGS_V1.2.c: 212: switch(pfg_select)
  4219                           
  4220                           ;incstack = 0
  4221                           ; Regs used in _PFG_read_fst: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4222  02A5  2ACF               	goto	l8874
  4223  02A6                     l8856:	
  4224                           
  4225                           ;WHQ_TP_ZPGS_V1.2.c: 215: {
  4226                           ;WHQ_TP_ZPGS_V1.2.c: 216: templ = Set_jiyi_re(0x18);
  4227  02A6  3018               	movlw	24
  4228  02A7  2319  118A         	fcall	_Set_jiyi_re
  4229  02A9  00E2               	movwf	PFG_read_fst@templ
  4230                           
  4231                           ;WHQ_TP_ZPGS_V1.2.c: 217: temph = Set_jiyi_re(0x19);
  4232  02AA  3019               	movlw	25
  4233  02AB  2319  118A         	fcall	_Set_jiyi_re
  4234  02AD  00E3               	movwf	PFG_read_fst@temph
  4235                           
  4236                           ;WHQ_TP_ZPGS_V1.2.c: 218: pfgconset = 0x04;
  4237  02AE  3004               	movlw	4
  4238  02AF  2ACD               	goto	L20
  4239  02B0                     l8860:	
  4240                           ;WHQ_TP_ZPGS_V1.2.c: 219: break;
  4241                           
  4242                           
  4243                           ;WHQ_TP_ZPGS_V1.2.c: 222: {
  4244                           ;WHQ_TP_ZPGS_V1.2.c: 223: templ = Set_jiyi_re(0x1a);
  4245  02B0  301A               	movlw	26
  4246  02B1  2319  118A         	fcall	_Set_jiyi_re
  4247  02B3  00E2               	movwf	PFG_read_fst@templ
  4248                           
  4249                           ;WHQ_TP_ZPGS_V1.2.c: 224: temph = Set_jiyi_re(0x1b);
  4250  02B4  301B               	movlw	27
  4251  02B5  2319  118A         	fcall	_Set_jiyi_re
  4252  02B7  00E3               	movwf	PFG_read_fst@temph
  4253                           
  4254                           ;WHQ_TP_ZPGS_V1.2.c: 225: pfgconset = 0x24;
  4255  02B8  3024               	movlw	36
  4256  02B9  2ACD               	goto	L20
  4257  02BA                     l8864:	
  4258                           ;WHQ_TP_ZPGS_V1.2.c: 226: break;
  4259                           
  4260                           
  4261                           ;WHQ_TP_ZPGS_V1.2.c: 229: {
  4262                           ;WHQ_TP_ZPGS_V1.2.c: 230: templ = Set_jiyi_re(0x1c);
  4263  02BA  301C               	movlw	28
  4264  02BB  2319  118A         	fcall	_Set_jiyi_re
  4265  02BD  00E2               	movwf	PFG_read_fst@templ
  4266                           
  4267                           ;WHQ_TP_ZPGS_V1.2.c: 231: temph = Set_jiyi_re(0x1d);
  4268  02BE  301D               	movlw	29
  4269  02BF  2319  118A         	fcall	_Set_jiyi_re
  4270  02C1  00E3               	movwf	PFG_read_fst@temph
  4271                           
  4272                           ;WHQ_TP_ZPGS_V1.2.c: 232: pfgconset = 0x44;
  4273  02C2  3044               	movlw	68
  4274  02C3  2ACD               	goto	L20
  4275  02C4                     l8868:	
  4276                           ;WHQ_TP_ZPGS_V1.2.c: 233: break;
  4277                           
  4278                           
  4279                           ;WHQ_TP_ZPGS_V1.2.c: 236: {
  4280                           ;WHQ_TP_ZPGS_V1.2.c: 237: templ = Set_jiyi_re(0x1e);
  4281  02C4  301E               	movlw	30
  4282  02C5  2319  118A         	fcall	_Set_jiyi_re
  4283  02C7  00E2               	movwf	PFG_read_fst@templ
  4284                           
  4285                           ;WHQ_TP_ZPGS_V1.2.c: 238: temph = Set_jiyi_re(0x1f);
  4286  02C8  301F               	movlw	31
  4287  02C9  2319  118A         	fcall	_Set_jiyi_re
  4288  02CB  00E3               	movwf	PFG_read_fst@temph
  4289                           
  4290                           ;WHQ_TP_ZPGS_V1.2.c: 239: pfgconset = 0x64;
  4291  02CC  3064               	movlw	100
  4292  02CD                     L20:	
  4293  02CD  00E4               	movwf	PFG_read_fst@pfgconset
  4294                           
  4295                           ;WHQ_TP_ZPGS_V1.2.c: 240: break;
  4296  02CE  2AE1               	goto	l8876
  4297  02CF                     l8874:	
  4298  02CF  3001               	movlw	low (_pfg_select-__stringbase)
  4299  02D0  0084               	movwf	4
  4300  02D1  118A  27C7  118A   	fcall	stringdir
  4301                           
  4302                           ; Switch size 1, requested type "space"
  4303                           ; Number of cases is 4, Range of values is 1 to 4
  4304                           ; switch strategies available:
  4305                           ; Name         Instructions Cycles
  4306                           ; simple_byte           13     7 (average)
  4307                           ; direct_byte           18    10 (fixed)
  4308                           ; jumptable            263     9 (fixed)
  4309                           ;	Chosen strategy is simple_byte
  4310  02D4  3A01               	xorlw	1	; case 1
  4311  02D5  1903               	skipnz
  4312  02D6  2AA6               	goto	l8856
  4313  02D7  3A03               	xorlw	3	; case 2
  4314  02D8  1903               	skipnz
  4315  02D9  2AB0               	goto	l8860
  4316  02DA  3A01               	xorlw	1	; case 3
  4317  02DB  1903               	skipnz
  4318  02DC  2ABA               	goto	l8864
  4319  02DD  3A07               	xorlw	7	; case 4
  4320  02DE  1903               	skipnz
  4321  02DF  2AC4               	goto	l8868
  4322  02E0  2AE1               	goto	l8876
  4323  02E1                     l8876:	
  4324                           
  4325                           ;WHQ_TP_ZPGS_V1.2.c: 244: temph = (unsigned char)(temph&0x03);
  4326  02E1  3003               	movlw	3
  4327  02E2  05E3               	andwf	PFG_read_fst@temph,f
  4328                           
  4329                           ;WHQ_TP_ZPGS_V1.2.c: 245: temp = (unsigned int)(temph*256 + templ);
  4330  02E3  0863               	movf	PFG_read_fst@temph,w
  4331  02E4  00E6               	movwf	PFG_read_fst@temp+1
  4332  02E5  01E5               	clrf	PFG_read_fst@temp
  4333  02E6  0862               	movf	PFG_read_fst@templ,w
  4334  02E7  07E5               	addwf	PFG_read_fst@temp,f
  4335  02E8  1803               	skipnc
  4336  02E9  0AE6               	incf	PFG_read_fst@temp+1,f
  4337  02EA  3000               	movlw	0
  4338  02EB  0266               	subwf	PFG_read_fst@temp+1,w
  4339  02EC  30FB               	movlw	251
  4340  02ED  1903               	skipnz
  4341  02EE  0265               	subwf	PFG_read_fst@temp,w
  4342  02EF  1C03               	skipc
  4343  02F0  2AFA               	goto	l8886
  4344  02F1  0865               	movf	PFG_read_fst@temp,w
  4345  02F2  3E06               	addlw	6
  4346  02F3  00AA               	movwf	_pwmfst	;volatile
  4347  02F4  0866               	movf	PFG_read_fst@temp+1,w
  4348  02F5  1803               	skipnc
  4349  02F6  3E01               	addlw	1
  4350  02F7  3EFF               	addlw	255
  4351  02F8  00AB               	movwf	_pwmfst+1	;volatile
  4352  02F9  2AFC               	goto	l8888
  4353  02FA                     l8886:	
  4354                           
  4355                           ;WHQ_TP_ZPGS_V1.2.c: 248: else
  4356                           ;WHQ_TP_ZPGS_V1.2.c: 249: pwmfst = 0;
  4357  02FA  01AA               	clrf	_pwmfst	;volatile
  4358  02FB  01AB               	clrf	_pwmfst+1	;volatile
  4359  02FC                     l8888:	
  4360  02FC  0865               	movf	PFG_read_fst@temp,w
  4361  02FD  3EFA               	addlw	250
  4362  02FE  00A8               	movwf	_pwmlst	;volatile
  4363  02FF  0866               	movf	PFG_read_fst@temp+1,w
  4364  0300  1803               	skipnc
  4365  0301  3E01               	addlw	1
  4366  0302  3E00               	addlw	0
  4367  0303  00A9               	movwf	_pwmlst+1	;volatile
  4368                           
  4369                           ;WHQ_TP_ZPGS_V1.2.c: 252: if((pwmlst&0x0400) != 0)
  4370  0304  1D29               	btfss	_pwmlst+1,2	;volatile
  4371  0305  2B09               	goto	l8894
  4372                           
  4373                           ;WHQ_TP_ZPGS_V1.2.c: 253: pwmlst = 1024;
  4374  0306  01A8               	clrf	_pwmlst	;volatile
  4375  0307  3004               	movlw	4
  4376  0308  00A9               	movwf	_pwmlst+1	;volatile
  4377  0309                     l8894:	
  4378                           
  4379                           ;WHQ_TP_ZPGS_V1.2.c: 255: pwmfst = (unsigned int)(pwmfst|(unsigned int)(pfgconset<<8));
  4380  0309  236E  118A         	fcall	PL10	;call to abstracted procedure
  4381  030B  04AA               	iorwf	_pwmfst,f	;volatile
  4382  030C  0861               	movf	??_PFG_read_fst+1,w
  4383  030D  04AB               	iorwf	_pwmfst+1,f	;volatile
  4384                           
  4385                           ;WHQ_TP_ZPGS_V1.2.c: 256: pwmlst = (unsigned int)(pwmlst|(unsigned int)(pfgconset<<8));
  4386  030E  236E  118A         	fcall	PL10	;call to abstracted procedure
  4387  0310  04A8               	iorwf	_pwmlst,f	;volatile
  4388  0311  0861               	movf	??_PFG_read_fst+1,w
  4389  0312  04A9               	iorwf	_pwmlst+1,f	;volatile
  4390                           
  4391                           ;WHQ_TP_ZPGS_V1.2.c: 257: pfgonetemp.pfgtemp = pwmfst;
  4392                           
  4393                           ;WHQ_TP_ZPGS_V1.2.c: 258: PfgChangef = 1;
  4394  0313  2375               	fcall	PL14	;call to abstracted procedure
  4395                           
  4396                           ;WHQ_TP_ZPGS_V1.2.c: 259: pwmnold = pfgonetemp.pfgtemp;
  4397  0314  0878               	movf	_pfgonetemp+1,w
  4398  0315  00A7               	movwf	_pwmnold+1	;volatile
  4399  0316  0877               	movf	_pfgonetemp,w
  4400  0317  00A6               	movwf	_pwmnold	;volatile
  4401  0318  0008               	return
  4402  0319                     __end_of_PFG_read_fst:	
  4403  0319                     __ptext17:	
  4404 ;; *************** function _Set_jiyi_re *****************
  4405 ;; Defined at:
  4406 ;;		line 68 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\Eeprom.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  raddr           1    wreg     unsigned char 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  raddr           1    0[BANK0 ] unsigned char 
  4411 ;;  redata          1    1[BANK0 ] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      unsigned char 
  4414 ;; Registers used:
  4415 ;;		wreg
  4416 ;; Tracked objects:
  4417 ;;		On entry : 300/0
  4418 ;;		On exit  : 300/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4421 ;;      Params:         0       0       0       0       0
  4422 ;;      Locals:         0       2       0       0       0
  4423 ;;      Temps:          0       0       0       0       0
  4424 ;;      Totals:         0       2       0       0       0
  4425 ;;Total ram usage:        2 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    2
  4428 ;; This function calls:
  4429 ;;		Nothing
  4430 ;; This function is called by:
  4431 ;;		_PFG_read_fst
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           
  4436                           ;psect for function _Set_jiyi_re
  4437  0319                     _Set_jiyi_re:	
  4438                           
  4439                           ;incstack = 0
  4440                           ; Regs used in _Set_jiyi_re: [wreg]
  4441                           ;Set_jiyi_re@raddr stored from wreg
  4442  0319  00DE               	movwf	Set_jiyi_re@raddr
  4443                           
  4444                           ;Eeprom.c: 70: unsigned char redata;
  4445                           ;Eeprom.c: 72: EEADR = raddr;
  4446  031A  1703               	bsf	3,6	;RP1=1, select bank2
  4447  031B  008D               	movwf	13	;volatile
  4448  031C  0000               	nop	;# 
  4449                           
  4450                           ;Eeprom.c: 74: EEPGD = 0;
  4451  031D  1683               	bsf	3,5	;RP0=1, select bank3
  4452  031E  1703               	bsf	3,6	;RP1=1, select bank3
  4453  031F  138C               	bcf	12,7	;volsfr
  4454  0320  0000               	nop	;# 
  4455                           
  4456                           ;Eeprom.c: 76: RD = 1;
  4457  0321  1683               	bsf	3,5	;RP0=1, select bank3
  4458  0322  1703               	bsf	3,6	;RP1=1, select bank3
  4459  0323  140C               	bsf	12,0	;volsfr
  4460  0324  0000               	nop	;# 
  4461  0325  0000               	nop	;# 
  4462  0326  0000               	nop	;# 
  4463                           
  4464                           ;Eeprom.c: 80: redata = EEDAT;
  4465  0327  1283               	bcf	3,5	;RP0=0, select bank2
  4466  0328  1703               	bsf	3,6	;RP1=1, select bank2
  4467  0329  080C               	movf	12,w	;volatile
  4468  032A  1303               	bcf	3,6	;RP1=0, select bank0
  4469  032B  00DF               	movwf	Set_jiyi_re@redata
  4470                           
  4471                           ;Eeprom.c: 81: return redata;
  4472  032C  0008               	return
  4473  032D                     __end_of_Set_jiyi_re:	
  4474  032D                     __ptext9:	
  4475 ;; *************** function _Work_RAM_CLR *****************
  4476 ;; Defined at:
  4477 ;;		line 416 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 300/0
  4488 ;;		On exit  : 300/200
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4491 ;;      Params:         0       0       0       0       0
  4492 ;;      Locals:         0       0       0       0       0
  4493 ;;      Temps:          0       2       0       0       0
  4494 ;;      Totals:         0       2       0       0       0
  4495 ;;Total ram usage:        2 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    2
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_Test_Pwm
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           
  4506                           ;psect for function _Work_RAM_CLR
  4507  032D                     _Work_RAM_CLR:	
  4508                           
  4509                           ;WHQ_TP_ZPGS_V1.2.c: 435: else
  4510                           ;WHQ_TP_ZPGS_V1.2.c: 436: {
  4511                           ;WHQ_TP_ZPGS_V1.2.c: 437: pwmtf = 0;
  4512                           
  4513                           ;incstack = 0
  4514                           ; Regs used in _Work_RAM_CLR: [wreg+status,2+status,0]
  4515  032D  11F1               	bcf	_pwmtf/(0+8),_pwmtf& (0+7)	;volatile
  4516                           
  4517                           ;WHQ_TP_ZPGS_V1.2.c: 438: pwmtf1 = 0;
  4518  032E  1171               	bcf	_pwmtf1/(0+8),_pwmtf1& (0+7)	;volatile
  4519                           
  4520                           ;WHQ_TP_ZPGS_V1.2.c: 439: pwmtonf = 0;
  4521  032F  10F1               	bcf	_pwmtonf/(0+8),_pwmtonf& (0+7)	;volatile
  4522                           
  4523                           ;WHQ_TP_ZPGS_V1.2.c: 440: pfgonetemp.pfgtemp = (pfgonetemp.pfgtemp & 0x8000) + pwmfst;
  4524  0330  3080               	movlw	128
  4525  0331  01DE               	clrf	??_Work_RAM_CLR
  4526  0332  0578               	andwf	_pfgonetemp+1,w
  4527  0333  00DF               	movwf	??_Work_RAM_CLR+1
  4528  0334  082A               	movf	_pwmfst,w	;volatile
  4529  0335  075E               	addwf	??_Work_RAM_CLR,w
  4530  0336  00F7               	movwf	_pfgonetemp
  4531  0337  082B               	movf	_pwmfst+1,w	;volatile
  4532  0338  1803               	skipnc
  4533  0339  0A2B               	incf	_pwmfst+1,w	;volatile
  4534  033A  075F               	addwf	??_Work_RAM_CLR+1,w
  4535  033B  00F8               	movwf	_pfgonetemp+1
  4536                           
  4537                           ;WHQ_TP_ZPGS_V1.2.c: 441: pwmnold = pfgonetemp.pfgtemp & 0x7fff;
  4538  033C  00A7               	movwf	_pwmnold+1	;volatile
  4539  033D  0877               	movf	_pfgonetemp,w
  4540  033E  00A6               	movwf	_pwmnold	;volatile
  4541  033F  13A7               	bcf	_pwmnold+1,7	;volatile
  4542                           
  4543                           ;WHQ_TP_ZPGS_V1.2.c: 442: PfgChangef = 1;
  4544  0340  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  4545                           
  4546                           ;WHQ_TP_ZPGS_V1.2.c: 443: ponecf = 0;
  4547  0341  1071               	bcf	_ponecf/(0+8),_ponecf& (0+7)	;volatile
  4548                           
  4549                           ;WHQ_TP_ZPGS_V1.2.c: 444: cur_addatold0 = 0;
  4550  0342  01BD               	clrf	_cur_addatold0	;volatile
  4551                           
  4552                           ;WHQ_TP_ZPGS_V1.2.c: 445: cur_addatold1 = 0;
  4553  0343  01BC               	clrf	_cur_addatold1	;volatile
  4554                           
  4555                           ;WHQ_TP_ZPGS_V1.2.c: 446: cur_addatold2 = 0;
  4556  0344  01BB               	clrf	_cur_addatold2	;volatile
  4557                           
  4558                           ;WHQ_TP_ZPGS_V1.2.c: 447: curokcl = 0;
  4559  0345  01BA               	clrf	_curokcl	;volatile
  4560                           
  4561                           ;WHQ_TP_ZPGS_V1.2.c: 448: onoff_fst = 0;
  4562  0346  12F0               	bcf	_onoff_fst/(0+8),_onoff_fst& (0+7)	;volatile
  4563                           
  4564                           ;WHQ_TP_ZPGS_V1.2.c: 449: whavecl = 0;
  4565  0347  01B7               	clrf	_whavecl	;volatile
  4566                           
  4567                           ;WHQ_TP_ZPGS_V1.2.c: 450: wnoncl = 0;
  4568  0348  01B8               	clrf	_wnoncl	;volatile
  4569                           
  4570                           ;WHQ_TP_ZPGS_V1.2.c: 451: ponesec = 0;
  4571  0349  01C0               	clrf	_ponesec	;volatile
  4572                           
  4573                           ;WHQ_TP_ZPGS_V1.2.c: 452: curupc = 0;
  4574  034A  01BF               	clrf	_curupc	;volatile
  4575                           
  4576                           ;WHQ_TP_ZPGS_V1.2.c: 453: curdownc = 0;
  4577  034B  01BE               	clrf	_curdownc	;volatile
  4578                           
  4579                           ;WHQ_TP_ZPGS_V1.2.c: 454: curupf = 0;
  4580  034C  1270               	bcf	_curupf/(0+8),_curupf& (0+7)	;volatile
  4581                           
  4582                           ;WHQ_TP_ZPGS_V1.2.c: 455: pwmlv = 0;
  4583  034D  01A2               	clrf	_pwmlv	;volatile
  4584  034E  01A3               	clrf	_pwmlv+1	;volatile
  4585                           
  4586                           ;WHQ_TP_ZPGS_V1.2.c: 456: pwmold = 0;
  4587  034F  01A4               	clrf	_pwmold	;volatile
  4588  0350  01A5               	clrf	_pwmold+1	;volatile
  4589                           
  4590                           ;WHQ_TP_ZPGS_V1.2.c: 457: pwmhc = 0;
  4591  0351  01B6               	clrf	_pwmhc	;volatile
  4592                           
  4593                           ;WHQ_TP_ZPGS_V1.2.c: 458: pwmlc = 0;
  4594  0352  01B5               	clrf	_pwmlc	;volatile
  4595                           
  4596                           ;WHQ_TP_ZPGS_V1.2.c: 459: PFGCON1 &= ~0x80;
  4597  0353  1703               	bsf	3,6	;RP1=1, select bank2
  4598  0354  139E               	bcf	30,7	;volatile
  4599  0355  0008               	return
  4600  0356                     __end_of_Work_RAM_CLR:	
  4601  0356                     PL2:	
  4602  0356  00A3               	movwf	_pwmlv+1	;volatile
  4603  0357  0877               	movf	_pfgonetemp,w
  4604  0358  00A2               	movwf	_pwmlv	;volatile
  4605  0359  30FF               	movlw	255
  4606  035A  05A2               	andwf	_pwmlv,f	;volatile
  4607  035B  3003               	movlw	3
  4608  035C  05A3               	andwf	_pwmlv+1,f	;volatile
  4609  035D  0008               	return
  4610  035E                     __end_ofPL2:	
  4611  035E                     PL4:	
  4612  035E  00DE               	movwf	??_Test_water
  4613  035F  3000               	movlw	0
  4614  0360  1803               	skipnc
  4615  0361  3001               	movlw	1
  4616  0362  00DF               	movwf	??_Test_water+1
  4617  0363  3A80               	xorlw	128
  4618  0364  00FF               	movwf	127
  4619  0365  3080               	movlw	128
  4620  0366  027F               	subwf	127,w
  4621  0367  0008               	return
  4622  0368                     __end_ofPL4:	
  4623  0368                     PL8:	
  4624  0368  0877               	movf	_pfgonetemp,w
  4625  0369  00DE               	movwf	??_Test_water
  4626  036A  3003               	movlw	3
  4627  036B  0578               	andwf	_pfgonetemp+1,w
  4628  036C  00DF               	movwf	??_Test_water+1
  4629  036D  0008               	return
  4630  036E                     __end_ofPL8:	
  4631  036E                     PL10:	
  4632  036E  0864               	movf	PFG_read_fst@pfgconset,w
  4633  036F  00E0               	movwf	??_PFG_read_fst
  4634  0370  01E1               	clrf	??_PFG_read_fst+1
  4635  0371  00E1               	movwf	??_PFG_read_fst+1
  4636  0372  01E0               	clrf	??_PFG_read_fst
  4637  0373  0860               	movf	??_PFG_read_fst,w
  4638  0374  0008               	return
  4639  0375                     __end_ofPL10:	
  4640  0375                     PL14:	
  4641  0375  082B               	movf	_pwmfst+1,w	;volatile
  4642  0376  00F8               	movwf	_pfgonetemp+1
  4643  0377  082A               	movf	_pwmfst,w	;volatile
  4644  0378  00F7               	movwf	_pfgonetemp
  4645  0379  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  4646  037A  0008               	return
  4647  037B                     __end_ofPL14:	
  4648  037B                     PL20:	
  4649  037B  0878               	movf	_pfgonetemp+1,w
  4650  037C  00A7               	movwf	_pwmnold+1	;volatile
  4651  037D  0877               	movf	_pfgonetemp,w
  4652  037E  00A6               	movwf	_pwmnold	;volatile
  4653  037F  13A7               	bcf	_pwmnold+1,7	;volatile
  4654  0380  0008               	return
  4655  0381                     __end_ofPL20:	
  4656                           
  4657                           	psect	text12
  4658  0740                     __ptext12:	
  4659 ;; *************** function _YTPFG_Flash *****************
  4660 ;; Defined at:
  4661 ;;		line 485 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  4662 ;; Parameters:    Size  Location     Type
  4663 ;;		None
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  temp            2    3[BANK0 ] unsigned int 
  4666 ;;  templ           1    2[BANK0 ] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 300/200
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4676 ;;      Params:         0       0       0       0       0
  4677 ;;      Locals:         0       3       0       0       0
  4678 ;;      Temps:          0       2       0       0       0
  4679 ;;      Totals:         0       5       0       0       0
  4680 ;;Total ram usage:        5 bytes
  4681 ;; Hardware stack levels used:    1
  4682 ;; Hardware stack levels required when called:    2
  4683 ;; This function calls:
  4684 ;;		Nothing
  4685 ;; This function is called by:
  4686 ;;		_Test_PWM_Fst
  4687 ;;		_Test_Pwm
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           
  4692                           ;psect for function _YTPFG_Flash
  4693  0740                     _YTPFG_Flash:	
  4694                           
  4695                           ;WHQ_TP_ZPGS_V1.2.c: 487: unsigned char templ;
  4696                           ;WHQ_TP_ZPGS_V1.2.c: 488: unsigned int temp;
  4697                           ;WHQ_TP_ZPGS_V1.2.c: 490: temp = (pfgonetemp.pfgtemp & 0x03ff) + Drange;
  4698                           
  4699                           ;incstack = 0
  4700                           ; Regs used in _YTPFG_Flash: [wreg+status,2+status,0]
  4701  0740  0878               	movf	_pfgonetemp+1,w
  4702  0741  1283               	bcf	3,5	;RP0=0, select bank0
  4703  0742  1303               	bcf	3,6	;RP1=0, select bank0
  4704  0743  00E2               	movwf	YTPFG_Flash@temp+1
  4705  0744  0877               	movf	_pfgonetemp,w
  4706  0745  00E1               	movwf	YTPFG_Flash@temp
  4707  0746  3003               	movlw	3
  4708  0747  05E2               	andwf	YTPFG_Flash@temp+1,f
  4709  0748  3010               	movlw	16
  4710  0749  07E1               	addwf	YTPFG_Flash@temp,f
  4711  074A  1803               	skipnc
  4712  074B  0AE2               	incf	YTPFG_Flash@temp+1,f
  4713                           
  4714                           ;WHQ_TP_ZPGS_V1.2.c: 491: PFGDATA1 = (unsigned char)(temp);
  4715  074C  0861               	movf	YTPFG_Flash@temp,w
  4716  074D  1703               	bsf	3,6	;RP1=1, select bank2
  4717  074E  009F               	movwf	31	;volatile
  4718                           
  4719                           ;WHQ_TP_ZPGS_V1.2.c: 492: templ = (unsigned char)((temp >> 3) & 0x60);
  4720  074F  1303               	bcf	3,6	;RP1=0, select bank0
  4721  0750  0862               	movf	YTPFG_Flash@temp+1,w
  4722  0751  00DF               	movwf	??_YTPFG_Flash+1
  4723  0752  0861               	movf	YTPFG_Flash@temp,w
  4724  0753  00DE               	movwf	??_YTPFG_Flash
  4725  0754  1003               	clrc
  4726  0755  0CDF               	rrf	??_YTPFG_Flash+1,f
  4727  0756  0CDE               	rrf	??_YTPFG_Flash,f
  4728  0757  1003               	clrc
  4729  0758  0CDF               	rrf	??_YTPFG_Flash+1,f
  4730  0759  0CDE               	rrf	??_YTPFG_Flash,f
  4731  075A  1003               	clrc
  4732  075B  0CDF               	rrf	??_YTPFG_Flash+1,f
  4733  075C  0CDE               	rrf	??_YTPFG_Flash,f
  4734  075D  085E               	movf	??_YTPFG_Flash,w
  4735  075E  00E0               	movwf	YTPFG_Flash@templ
  4736  075F  3060               	movlw	96
  4737  0760  05E0               	andwf	YTPFG_Flash@templ,f
  4738  0761  0860               	movf	YTPFG_Flash@templ,w
  4739  0762  388A               	iorlw	138
  4740  0763  1703               	bsf	3,6	;RP1=1, select bank2
  4741  0764  009E               	movwf	30	;volatile
  4742  0765  0008               	return
  4743  0766                     __end_of_YTPFG_Flash:	
  4744                           
  4745                           	psect	text20
  4746  07E1                     __ptext20:	
  4747 ;; *************** function _fan_handle *****************
  4748 ;; Defined at:
  4749 ;;		line 286 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg, status,2, status,0
  4758 ;; Tracked objects:
  4759 ;;		On entry : 300/0
  4760 ;;		On exit  : 300/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4763 ;;      Params:         0       0       0       0       0
  4764 ;;      Locals:         0       0       0       0       0
  4765 ;;      Temps:          0       0       0       0       0
  4766 ;;      Totals:         0       0       0       0       0
  4767 ;;Total ram usage:        0 bytes
  4768 ;; Hardware stack levels used:    1
  4769 ;; Hardware stack levels required when called:    2
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_main
  4774 ;; This function uses a non-reentrant model
  4775 ;;
  4776                           
  4777                           
  4778                           ;psect for function _fan_handle
  4779  07E1                     _fan_handle:	
  4780                           
  4781                           ;main.c: 288: if(work_mod)
  4782                           
  4783                           ;incstack = 0
  4784                           ; Regs used in _fan_handle: [wreg+status,2+status,0]
  4785  07E1  0854               	movf	_work_mod,w
  4786  07E2  1903               	btfsc	3,2
  4787  07E3  2FE6               	goto	l2334
  4788                           
  4789                           ;main.c: 289: {
  4790                           ;main.c: 290: {RA6=1;};
  4791  07E4  1705               	bsf	5,6	;volatile
  4792                           
  4793                           ;main.c: 291: }
  4794  07E5  0008               	return
  4795  07E6                     l2334:	
  4796                           
  4797                           ;main.c: 292: else
  4798                           ;main.c: 293: {
  4799                           ;main.c: 294: {RA6=0;};
  4800  07E6  1305               	bcf	5,6	;volatile
  4801  07E7  0008               	return
  4802  07E8                     __end_of_fan_handle:	
  4803                           
  4804                           	psect	text21
  4805  07D0                     __ptext21:	
  4806 ;; *************** function _drive_data_init *****************
  4807 ;; Defined at:
  4808 ;;		line 148 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\drive.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;		None
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;		None
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      void 
  4815 ;; Registers used:
  4816 ;;		status,2
  4817 ;; Tracked objects:
  4818 ;;		On entry : 300/0
  4819 ;;		On exit  : 300/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4822 ;;      Params:         0       0       0       0       0
  4823 ;;      Locals:         0       0       0       0       0
  4824 ;;      Temps:          0       0       0       0       0
  4825 ;;      Totals:         0       0       0       0       0
  4826 ;;Total ram usage:        0 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; Hardware stack levels required when called:    2
  4829 ;; This function calls:
  4830 ;;		Nothing
  4831 ;; This function is called by:
  4832 ;;		_main
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           
  4837                           ;psect for function _drive_data_init
  4838  07D0                     _drive_data_init:	
  4839                           
  4840                           ;drive.c: 151: time_125us_cnt=0;
  4841                           
  4842                           ;incstack = 0
  4843                           ; Regs used in _drive_data_init: [status,2]
  4844  07D0  01C2               	clrf	_time_125us_cnt
  4845                           
  4846                           ;drive.c: 152: time_10ms_flg=0;
  4847  07D1  01DC               	clrf	_time_10ms_flg
  4848                           
  4849                           ;drive.c: 153: fog_time_125us_cnt=0;
  4850  07D2  01C1               	clrf	_fog_time_125us_cnt
  4851                           
  4852                           ;drive.c: 157: led_drive_cnt=0;
  4853  07D3  01DD               	clrf	_fog_time_5ms_flg
  4854                           
  4855                           ;drive.c: 158: ledr_pecent=0;
  4856  07D4  01DA               	clrf	_ledr_pecent
  4857                           
  4858                           ;drive.c: 159: ledg_pecent=0;
  4859  07D5  01D9               	clrf	_ledg_pecent
  4860                           
  4861                           ;drive.c: 160: ledb_pecent=0;
  4862  07D6  01D8               	clrf	_ledb_pecent
  4863                           
  4864                           ;drive.c: 166: io_read_buff=0;
  4865  07D7  01DB               	clrf	_fog_drive_mod
  4866  07D8  0008               	return
  4867  07D9                     __end_of_drive_data_init:	
  4868                           
  4869                           	psect	text22
  4870  0785                     __ptext22:	
  4871 ;; *************** function _data_init *****************
  4872 ;; Defined at:
  4873 ;;		line 114 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;		None
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;		None
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  1    wreg      void 
  4880 ;; Registers used:
  4881 ;;		wreg, status,2
  4882 ;; Tracked objects:
  4883 ;;		On entry : 300/100
  4884 ;;		On exit  : 300/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4887 ;;      Params:         0       0       0       0       0
  4888 ;;      Locals:         0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0
  4890 ;;      Totals:         0       0       0       0       0
  4891 ;;Total ram usage:        0 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    2
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_main
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function _data_init
  4903  0785                     _data_init:	
  4904                           
  4905                           ;main.c: 117: btn_work_cnt=0;
  4906                           
  4907                           ;incstack = 0
  4908                           ; Regs used in _data_init: [wreg+status,2]
  4909  0785  1283               	bcf	3,5	;RP0=0, select bank0
  4910  0786  301A               	movlw	26
  4911  0787  01D7               	clrf	_btn_work_cnt
  4912                           
  4913                           ;main.c: 118: btn_led_cnt=0;
  4914  0788  01D6               	clrf	_btn_led_cnt
  4915                           
  4916                           ;main.c: 119: btn_fog_cnt=0;
  4917  0789  01D5               	clrf	_btn_fog_cnt
  4918                           
  4919                           ;main.c: 122: work_mod=0;
  4920  078A  01D4               	clrf	_work_mod
  4921                           
  4922                           ;main.c: 123: led_mod=0;
  4923  078B  01FA               	clrf	_led_mod
  4924                           
  4925                           ;main.c: 124: fog_mod=0;
  4926  078C  01D3               	clrf	_fog_mod
  4927                           
  4928                           ;main.c: 127: led_breath_cnt=0;
  4929  078D  01D2               	clrf	_led_breath_cnt
  4930                           
  4931                           ;main.c: 128: led_breath_way=0;
  4932  078E  01D1               	clrf	_led_breath_way
  4933                           
  4934                           ;main.c: 129: ledr_breath_duty=0;
  4935  078F  01F9               	clrf	_ledr_breath_duty
  4936                           
  4937                           ;main.c: 130: ledg_breath_duty=0;
  4938  0790  01D0               	clrf	_ledg_breath_duty
  4939                           
  4940                           ;main.c: 131: ledb_breath_duty=0;
  4941  0791  01CF               	clrf	_ledb_breath_duty
  4942                           
  4943                           ;main.c: 133: led_mod1_flg=0;
  4944  0792  01CE               	clrf	_led_mod1_flg
  4945                           
  4946                           ;main.c: 134: led_mod2_flg=0;
  4947  0793  01CD               	clrf	_led_mod2_flg
  4948                           
  4949                           ;main.c: 135: led_mod3_flg=0;
  4950  0794  01CC               	clrf	_led_mod3_flg
  4951                           
  4952                           ;main.c: 136: led_mod4_flg=0;
  4953  0795  01CB               	clrf	_led_mod4_flg
  4954                           
  4955                           ;main.c: 137: led_scan_delay=0;
  4956  0796  01CA               	clrf	_led_scan_delay
  4957                           
  4958                           ;main.c: 140: beep_cnt=26;
  4959  0797  00C9               	movwf	_beep_cnt
  4960                           
  4961                           ;main.c: 141: beep_flg=0;
  4962  0798  01C8               	clrf	_beep_flg
  4963                           
  4964                           ;main.c: 144: fog_status_buff=0;
  4965  0799  01C7               	clrf	_fog_status_buff
  4966                           
  4967                           ;main.c: 146: fog_erro_cnt=0;
  4968  079A  01C6               	clrf	_fog_erro_flg
  4969                           
  4970                           ;main.c: 149: timing_10ms_cnt=0;
  4971  079B  1683               	bsf	3,5	;RP0=1, select bank1
  4972  079C  01A6               	clrf	_timing_10ms_cnt^(0+128)
  4973  079D  01A7               	clrf	(_timing_10ms_cnt+1)^(0+128)
  4974                           
  4975                           ;main.c: 150: timing_1min_cnt=0;
  4976  079E  1283               	bcf	3,5	;RP0=0, select bank0
  4977  079F  303C               	movlw	60
  4978  07A0  01C5               	clrf	_timing_1min_cnt
  4979                           
  4980                           ;main.c: 151: timing_set_num=60;
  4981  07A1  00C4               	movwf	_timing_set_num
  4982  07A2  0008               	return
  4983  07A3                     __end_of_data_init:	
  4984                           
  4985                           	psect	text24
  4986  0766                     __ptext24:	
  4987 ;; *************** function _beep_handle *****************
  4988 ;; Defined at:
  4989 ;;		line 326 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\main.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;		None
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;		None
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 300/0
  5000 ;;		On exit  : 100/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5003 ;;      Params:         0       0       0       0       0
  5004 ;;      Locals:         0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0
  5006 ;;      Totals:         0       0       0       0       0
  5007 ;;Total ram usage:        0 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    2
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           
  5018                           ;psect for function _beep_handle
  5019  0766                     _beep_handle:	
  5020                           
  5021                           ;main.c: 328: if(beep_cnt)
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _beep_handle: [wreg+status,2+status,0]
  5025  0766  0849               	movf	_beep_cnt,w
  5026  0767  1903               	btfsc	3,2
  5027  0768  2F75               	goto	l9530
  5028  0769  3012               	movlw	18
  5029                           
  5030                           ;main.c: 329: {
  5031                           ;main.c: 330: beep_cnt--;
  5032  076A  03C9               	decf	_beep_cnt,f
  5033                           
  5034                           ;main.c: 331: if(beep_cnt >= 18)
  5035  076B  0249               	subwf	_beep_cnt,w
  5036  076C  1C03               	skipc
  5037  076D  2F71               	goto	l9528
  5038  076E                     l9526:	
  5039                           
  5040                           ;main.c: 332: {
  5041                           ;main.c: 333: beep_flg=1;
  5042  076E  01C8               	clrf	_beep_flg
  5043  076F  0AC8               	incf	_beep_flg,f
  5044                           
  5045                           ;main.c: 334: }
  5046  0770  2F76               	goto	l9534
  5047  0771                     l9528:	
  5048                           
  5049                           ;main.c: 335: else if(beep_cnt >= 8)
  5050  0771  3008               	movlw	8
  5051  0772  0249               	subwf	_beep_cnt,w
  5052  0773  1C03               	skipc
  5053  0774  2F6E               	goto	l9526
  5054  0775                     l9530:	
  5055                           
  5056                           ;main.c: 336: {
  5057                           ;main.c: 337: beep_flg=0;
  5058  0775  01C8               	clrf	_beep_flg
  5059  0776                     l9534:	
  5060                           ;main.c: 338: }
  5061                           
  5062                           
  5063                           ;main.c: 347: }
  5064                           ;main.c: 349: if(beep_flg)
  5065  0776  0848               	movf	_beep_flg,w
  5066  0777  1903               	btfsc	3,2
  5067  0778  2F80               	goto	l2352
  5068                           
  5069                           ;main.c: 350: {
  5070                           ;main.c: 351: {PWMD4L=62;PWM4EN=1;};
  5071  0779  303E               	movlw	62
  5072  077A  1683               	bsf	3,5	;RP0=1, select bank3
  5073  077B  1703               	bsf	3,6	;RP1=1, select bank3
  5074  077C  0097               	movwf	23	;volatile
  5075  077D  1283               	bcf	3,5	;RP0=0, select bank2
  5076  077E  1607               	bsf	7,4	;volatile
  5077                           
  5078                           ;main.c: 352: }
  5079  077F  0008               	return
  5080  0780                     l2352:	
  5081                           
  5082                           ;main.c: 353: else
  5083                           ;main.c: 354: {
  5084                           ;main.c: 355: {PWM4EN=0;RA5=0;};
  5085  0780  1703               	bsf	3,6	;RP1=1, select bank2
  5086  0781  1207               	bcf	7,4	;volatile
  5087  0782  1303               	bcf	3,6	;RP1=0, select bank0
  5088  0783  1285               	bcf	5,5	;volatile
  5089  0784  0008               	return
  5090  0785                     __end_of_beep_handle:	
  5091                           
  5092                           	psect	text25
  5093  07A3                     __ptext25:	
  5094 ;; *************** function _Sys_set *****************
  5095 ;; Defined at:
  5096 ;;		line 174 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\drive.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;		None
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2, status,0
  5105 ;; Tracked objects:
  5106 ;;		On entry : 200/0
  5107 ;;		On exit  : 300/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5110 ;;      Params:         0       0       0       0       0
  5111 ;;      Locals:         0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0
  5113 ;;      Totals:         0       0       0       0       0
  5114 ;;Total ram usage:        0 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    2
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_main
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           
  5125                           ;psect for function _Sys_set
  5126  07A3                     _Sys_set:	
  5127                           
  5128                           ;drive.c: 177: WDTCON = 0x01;
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in _Sys_set: [wreg+status,2+status,0]
  5132  07A3  3001               	movlw	1
  5133  07A4  1283               	bcf	3,5	;RP0=0, select bank2
  5134  07A5  1703               	bsf	3,6	;RP1=1, select bank2
  5135  07A6  0085               	movwf	5	;volatile
  5136                           
  5137                           ;drive.c: 180: OPTION_REG = 0;
  5138  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  5139  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  5140  07A9  0181               	clrf	1	;volatile
  5141                           
  5142                           ;drive.c: 181: PIE1 = 0B00000010;
  5143  07AA  3002               	movlw	2
  5144  07AB  008C               	movwf	12	;volatile
  5145                           
  5146                           ;drive.c: 182: PR2 = 125;
  5147  07AC  307D               	movlw	125
  5148  07AD  0092               	movwf	18	;volatile
  5149                           
  5150                           ;drive.c: 183: INTCON = 0XC0;
  5151  07AE  30C0               	movlw	192
  5152  07AF  008B               	movwf	11	;volatile
  5153                           
  5154                           ;drive.c: 184: if(5 != T2CON)
  5155  07B0  3005               	movlw	5
  5156  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  5157  07B2  0612               	xorwf	18,w	;volatile
  5158  07B3  1903               	btfsc	3,2
  5159  07B4  0008               	return
  5160                           
  5161                           ;drive.c: 185: {
  5162                           ;drive.c: 186: T2CON = 5;
  5163  07B5  3005               	movlw	5
  5164  07B6  0092               	movwf	18	;volatile
  5165  07B7  0008               	return
  5166  07B8                     __end_of_Sys_set:	
  5167                           
  5168                           	psect	text26
  5169  05C2                     __ptext26:	
  5170 ;; *************** function _time0 *****************
  5171 ;; Defined at:
  5172 ;;		line 28 in file "C:\mcuproject\scm\xfx\ÏãÞ¹»ú\drive.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 300/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5186 ;;      Params:         0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0
  5188 ;;      Temps:          2       0       0       0       0
  5189 ;;      Totals:         2       0       0       0       0
  5190 ;;Total ram usage:        2 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    1
  5193 ;; This function calls:
  5194 ;;		_Set_Pwm_Onoff
  5195 ;; This function is called by:
  5196 ;;		Interrupt level 1
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           
  5201                           ;psect for function _time0
  5202  05C2                     _time0:	
  5203                           
  5204                           ;drive.c: 30: if(TMR2IF)
  5205  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  5206  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  5207  05C4  1C8C               	btfss	12,1	;volatile
  5208  05C5  2DE6               	goto	i1l8700
  5209                           
  5210                           ;drive.c: 31: {
  5211                           ;drive.c: 32: TMR2IF = 0;
  5212  05C6  108C               	bcf	12,1	;volatile
  5213                           
  5214                           ;drive.c: 35: if(!fog_drive_mod)
  5215  05C7  085B               	movf	_fog_drive_mod,w
  5216  05C8  1D03               	btfss	3,2
  5217  05C9  2DCC               	goto	i1l8678
  5218                           
  5219                           ;drive.c: 36: {
  5220                           ;drive.c: 37: Set_Pwm_Onoff(0);
  5221  05CA  3000               	movlw	0
  5222  05CB  2DD1               	goto	L25
  5223  05CC                     i1l8678:	
  5224                           ;drive.c: 38: }
  5225                           
  5226                           
  5227                           ;drive.c: 39: else if(fog_drive_mod == 1)
  5228  05CC  0B5B               	decfsz	_fog_drive_mod,w
  5229  05CD  2DD0               	goto	i1l8682
  5230                           
  5231                           ;drive.c: 40: {
  5232                           ;drive.c: 41: Set_Pwm_Onoff(20);
  5233  05CE  3014               	movlw	20
  5234  05CF  2DD1               	goto	L25
  5235  05D0                     i1l8682:	
  5236                           ;drive.c: 42: }
  5237                           
  5238                           
  5239                           ;drive.c: 43: else
  5240                           ;drive.c: 44: {
  5241                           ;drive.c: 45: Set_Pwm_Onoff(30);
  5242  05D0  301E               	movlw	30
  5243  05D1                     L25:	
  5244  05D1  25EF  118A         	fcall	_Set_Pwm_Onoff
  5245                           
  5246                           ;drive.c: 46: }
  5247                           ;drive.c: 48: fog_time_125us_cnt++;
  5248  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  5249  05D4  3028               	movlw	40
  5250  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  5251  05D6  0AC1               	incf	_fog_time_125us_cnt,f
  5252                           
  5253                           ;drive.c: 49: if(fog_time_125us_cnt >= 40)
  5254  05D7  0241               	subwf	_fog_time_125us_cnt,w
  5255  05D8  1C03               	skipc
  5256  05D9  2DDD               	goto	i1l8692
  5257                           
  5258                           ;drive.c: 50: {
  5259                           ;drive.c: 51: fog_time_125us_cnt=0;
  5260  05DA  01C1               	clrf	_fog_time_125us_cnt
  5261                           
  5262                           ;drive.c: 52: fog_time_5ms_flg=1;
  5263  05DB  01DD               	clrf	_fog_time_5ms_flg
  5264  05DC  0ADD               	incf	_fog_time_5ms_flg,f
  5265  05DD                     i1l8692:	
  5266  05DD  3050               	movlw	80
  5267                           
  5268                           ;drive.c: 53: }
  5269                           ;drive.c: 55: time_125us_cnt++;
  5270  05DE  0AC2               	incf	_time_125us_cnt,f
  5271                           
  5272                           ;drive.c: 56: if(time_125us_cnt >= 80)
  5273  05DF  0242               	subwf	_time_125us_cnt,w
  5274  05E0  1C03               	skipc
  5275  05E1  2DE8               	goto	i1l4765
  5276                           
  5277                           ;drive.c: 57: {
  5278                           ;drive.c: 58: time_125us_cnt=0;
  5279  05E2  01C2               	clrf	_time_125us_cnt
  5280                           
  5281                           ;drive.c: 59: time_10ms_flg=1;
  5282  05E3  01DC               	clrf	_time_10ms_flg
  5283  05E4  0ADC               	incf	_time_10ms_flg,f
  5284  05E5  2DE8               	goto	i1l4765
  5285  05E6                     i1l8700:	
  5286                           
  5287                           ;drive.c: 62: else
  5288                           ;drive.c: 63: {
  5289                           ;drive.c: 64: PIR1 = 0;
  5290  05E6  018C               	clrf	12	;volatile
  5291                           
  5292                           ;drive.c: 65: PIR2 = 0;
  5293  05E7  018D               	clrf	13	;volatile
  5294  05E8                     i1l4765:	
  5295  05E8  0876               	movf	??_time0+1,w
  5296  05E9  008A               	movwf	10
  5297  05EA  0E75               	swapf	??_time0^(0+-128),w
  5298  05EB  0083               	movwf	3
  5299  05EC  0EFE               	swapf	126,f
  5300  05ED  0E7E               	swapf	126,w
  5301  05EE  0009               	retfie
  5302  05EF                     __end_of_time0:	
  5303  05EF                     __ptext27:	
  5304 ;; *************** function _Set_Pwm_Onoff *****************
  5305 ;; Defined at:
  5306 ;;		line 273 in file "E:\ZW PROJECT\2020 PROJECT\Îí»¯Æ÷ÏîÄ¿\CMS-TPWHQ(Ô´)\CMS-TPWHQ-ZPGS_V1.2(Ô´)\WHQ_TP_ZPGS_V1.2.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  fun             1    wreg     unsigned char 
  5309 ;; Auto vars:     Size  Location     Type
  5310 ;;  fun             1    2[COMMON] unsigned char 
  5311 ;;  funod           1    1[COMMON] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, status,2, status,0
  5316 ;; Tracked objects:
  5317 ;;		On entry : 300/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5321 ;;      Params:         0       0       0       0       0
  5322 ;;      Locals:         2       0       0       0       0
  5323 ;;      Temps:          1       0       0       0       0
  5324 ;;      Totals:         3       0       0       0       0
  5325 ;;Total ram usage:        3 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; This function calls:
  5328 ;;		Nothing
  5329 ;; This function is called by:
  5330 ;;		_time0
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function _Set_Pwm_Onoff
  5336  05EF                     _Set_Pwm_Onoff:	
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _Set_Pwm_Onoff: [wreg+status,2+status,0]
  5340                           ;Set_Pwm_Onoff@fun stored from wreg
  5341  05EF  00F4               	movwf	Set_Pwm_Onoff@fun
  5342                           
  5343                           ;WHQ_TP_ZPGS_V1.2.c: 275: unsigned char funod;
  5344                           ;WHQ_TP_ZPGS_V1.2.c: 277: static unsigned char pwmcl = 0;
  5345                           ;WHQ_TP_ZPGS_V1.2.c: 278: static bit adonf = 0;
  5346                           ;WHQ_TP_ZPGS_V1.2.c: 279: static unsigned char cur_adcl = 0;
  5347                           ;WHQ_TP_ZPGS_V1.2.c: 280: static unsigned int cursumt = 0;
  5348                           ;WHQ_TP_ZPGS_V1.2.c: 281: static unsigned char funold;
  5349                           ;WHQ_TP_ZPGS_V1.2.c: 283: PFGCON |= 0x04;
  5350  05F0  1703               	bsf	3,6	;RP1=1, select bank2
  5351  05F1  151B               	bsf	27,2	;volatile
  5352                           
  5353                           ;WHQ_TP_ZPGS_V1.2.c: 284: TRISA &= 0xfe;
  5354  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  5355  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  5356  05F4  1005               	bcf	5,0	;volatile
  5357                           
  5358                           ;WHQ_TP_ZPGS_V1.2.c: 285: PORTA = (unsigned char)(PORTA & 0xfe);
  5359  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  5360  05F6  1005               	bcf	5,0	;volatile
  5361                           
  5362                           ;WHQ_TP_ZPGS_V1.2.c: 286: if(0 != pfgonetemp.pfgtemp)
  5363  05F7  0877               	movf	_pfgonetemp,w
  5364  05F8  0478               	iorwf	_pfgonetemp+1,w
  5365  05F9  1903               	btfsc	3,2
  5366  05FA  0008               	return
  5367                           
  5368                           ;WHQ_TP_ZPGS_V1.2.c: 287: {
  5369                           ;WHQ_TP_ZPGS_V1.2.c: 288: if(PfgChangef)
  5370  05FB  1DF0               	btfss	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  5371  05FC  2E1B               	goto	i1l8572
  5372                           
  5373                           ;WHQ_TP_ZPGS_V1.2.c: 289: {
  5374                           ;WHQ_TP_ZPGS_V1.2.c: 290: PfgChangef = 0;
  5375  05FD  11F0               	bcf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  5376                           
  5377                           ;WHQ_TP_ZPGS_V1.2.c: 291: if((0 == (pfgonetemp.pfgonebyte.pfgtemph & 0x80)) && ((PFGCON&
      +                          0x80) != 0))
  5378  05FE  1BF8               	btfsc	_pfgonetemp+1,7
  5379  05FF  2E09               	goto	i1l8562
  5380  0600  1703               	bsf	3,6	;RP1=1, select bank2
  5381  0601  1F9B               	btfss	27,7	;volatile
  5382  0602  2E09               	goto	i1l8562
  5383                           
  5384                           ;WHQ_TP_ZPGS_V1.2.c: 292: {
  5385                           ;WHQ_TP_ZPGS_V1.2.c: 293: PFGCON1 &= ~0x80;
  5386  0603  139E               	bcf	30,7	;volatile
  5387                           
  5388                           ;WHQ_TP_ZPGS_V1.2.c: 294: PFGSTOP = 0xfa;
  5389  0604  30FA               	movlw	250
  5390  0605  1683               	bsf	3,5	;RP0=1, select bank1
  5391  0606  1303               	bcf	3,6	;RP1=0, select bank1
  5392  0607  0088               	movwf	8	;volatile
  5393                           
  5394                           ;WHQ_TP_ZPGS_V1.2.c: 295: }
  5395  0608  2E1B               	goto	i1l8572
  5396  0609                     i1l8562:	
  5397                           
  5398                           ;WHQ_TP_ZPGS_V1.2.c: 296: else
  5399                           ;WHQ_TP_ZPGS_V1.2.c: 297: {
  5400                           ;WHQ_TP_ZPGS_V1.2.c: 298: if((pfgonetemp.pfgonebyte.pfgtemph & 0x03) >= (PFGCON & 0x03))
  5401  0609  3003               	movlw	3
  5402  060A  0578               	andwf	_pfgonetemp+1,w
  5403  060B  00F2               	movwf	??_Set_Pwm_Onoff
  5404  060C  1703               	bsf	3,6	;RP1=1, select bank2
  5405  060D  081B               	movf	27,w	;volatile
  5406  060E  3903               	andlw	3
  5407  060F  0272               	subwf	??_Set_Pwm_Onoff,w
  5408  0610  1C03               	skipc
  5409  0611  2E17               	goto	i1l8566
  5410                           
  5411                           ;WHQ_TP_ZPGS_V1.2.c: 299: {
  5412                           ;WHQ_TP_ZPGS_V1.2.c: 300: PFGADJ = pfgonetemp.pfgonebyte.pfgtempl;
  5413  0612  0877               	movf	_pfgonetemp,w
  5414  0613  0099               	movwf	25	;volatile
  5415                           
  5416                           ;WHQ_TP_ZPGS_V1.2.c: 301: PFGCON = pfgonetemp.pfgonebyte.pfgtemph;
  5417  0614  0878               	movf	_pfgonetemp+1,w
  5418  0615  009B               	movwf	27	;volatile
  5419                           
  5420                           ;WHQ_TP_ZPGS_V1.2.c: 302: }
  5421  0616  2E1B               	goto	i1l8572
  5422  0617                     i1l8566:	
  5423                           
  5424                           ;WHQ_TP_ZPGS_V1.2.c: 303: else
  5425                           ;WHQ_TP_ZPGS_V1.2.c: 304: {
  5426                           ;WHQ_TP_ZPGS_V1.2.c: 305: PFGCON = pfgonetemp.pfgonebyte.pfgtemph;
  5427  0617  0878               	movf	_pfgonetemp+1,w
  5428  0618  009B               	movwf	27	;volatile
  5429                           
  5430                           ;WHQ_TP_ZPGS_V1.2.c: 306: PFGADJ = pfgonetemp.pfgonebyte.pfgtempl;
  5431  0619  0877               	movf	_pfgonetemp,w
  5432  061A  0099               	movwf	25	;volatile
  5433  061B                     i1l8572:	
  5434                           
  5435                           ;WHQ_TP_ZPGS_V1.2.c: 315: }
  5436                           ;WHQ_TP_ZPGS_V1.2.c: 316: }
  5437                           ;WHQ_TP_ZPGS_V1.2.c: 318: if(0 == fun)
  5438  061B  0874               	movf	Set_Pwm_Onoff@fun,w
  5439  061C  1D03               	btfss	3,2
  5440  061D  2E2A               	goto	i1l5672
  5441                           
  5442                           ;WHQ_TP_ZPGS_V1.2.c: 319: {
  5443                           ;WHQ_TP_ZPGS_V1.2.c: 321: pfgonetemp.pfgonebyte.pfgtemph &= ~0x80;
  5444  061E  13F8               	bcf	_pfgonetemp+1,7
  5445                           
  5446                           ;WHQ_TP_ZPGS_V1.2.c: 322: PfgChangef = 1;
  5447  061F  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  5448                           
  5449                           ;WHQ_TP_ZPGS_V1.2.c: 323: cur_addat = 0;
  5450  0620  1283               	bcf	3,5	;RP0=0, select bank0
  5451  0621  1303               	bcf	3,6	;RP1=0, select bank0
  5452  0622  01C3               	clrf	_cur_addat	;volatile
  5453                           
  5454                           ;WHQ_TP_ZPGS_V1.2.c: 324: curokf = 0;
  5455  0623  13F0               	bcf	_curokf/(0+8),_curokf& (0+7)	;volatile
  5456                           
  5457                           ;WHQ_TP_ZPGS_V1.2.c: 325: pwmcl = 0;
  5458  0624  01B1               	clrf	Set_Pwm_Onoff@pwmcl
  5459                           
  5460                           ;WHQ_TP_ZPGS_V1.2.c: 326: cursumt = 0;
  5461  0625  1683               	bsf	3,5	;RP0=1, select bank1
  5462  0626  01A2               	clrf	Set_Pwm_Onoff@cursumt^(0+128)
  5463  0627  01A3               	clrf	(Set_Pwm_Onoff@cursumt+1)^(0+128)
  5464                           
  5465                           ;WHQ_TP_ZPGS_V1.2.c: 327: on_off = 0;
  5466  0628  1271               	bcf	_on_off/(0+8),_on_off& (0+7)	;volatile
  5467                           
  5468                           ;WHQ_TP_ZPGS_V1.2.c: 328: }
  5469  0629  0008               	return
  5470  062A                     i1l5672:	
  5471                           
  5472                           ;WHQ_TP_ZPGS_V1.2.c: 329: else
  5473                           ;WHQ_TP_ZPGS_V1.2.c: 330: {
  5474                           ;WHQ_TP_ZPGS_V1.2.c: 332: on_off = 1;
  5475  062A  1671               	bsf	_on_off/(0+8),_on_off& (0+7)	;volatile
  5476                           
  5477                           ;WHQ_TP_ZPGS_V1.2.c: 334: if(!pwmtf)
  5478  062B  19F1               	btfsc	_pwmtf/(0+8),_pwmtf& (0+7)	;volatile
  5479  062C  2E30               	goto	i1l8584
  5480  062D  3018               	movlw	24
  5481  062E  00F3               	movwf	Set_Pwm_Onoff@funod
  5482  062F  2E37               	goto	L26
  5483  0630                     i1l8584:	
  5484                           ;WHQ_TP_ZPGS_V1.2.c: 338: }
  5485                           
  5486                           ;WHQ_TP_ZPGS_V1.2.c: 337: funold = funod;
  5487                           
  5488  0630  3031               	movlw	49
  5489  0631  0274               	subwf	Set_Pwm_Onoff@fun,w
  5490  0632  1803               	skipnc
  5491  0633  2E3B               	goto	i1l8588
  5492                           
  5493                           ;WHQ_TP_ZPGS_V1.2.c: 342: {
  5494                           ;WHQ_TP_ZPGS_V1.2.c: 343: funod = fun;
  5495  0634  0874               	movf	Set_Pwm_Onoff@fun,w
  5496  0635  00F3               	movwf	Set_Pwm_Onoff@funod
  5497                           
  5498                           ;WHQ_TP_ZPGS_V1.2.c: 344: funold = fun;
  5499  0636  0874               	movf	Set_Pwm_Onoff@fun,w
  5500  0637                     L26:	
  5501  0637  1283               	bcf	3,5	;RP0=0, select bank0
  5502  0638  1303               	bcf	3,6	;RP1=0, select bank0
  5503  0639  00AF               	movwf	Set_Pwm_Onoff@funold
  5504                           
  5505                           ;WHQ_TP_ZPGS_V1.2.c: 345: }
  5506  063A  2E3F               	goto	i1l8590
  5507  063B                     i1l8588:	
  5508                           
  5509                           ;WHQ_TP_ZPGS_V1.2.c: 346: else
  5510                           ;WHQ_TP_ZPGS_V1.2.c: 347: funod = funold;
  5511  063B  1283               	bcf	3,5	;RP0=0, select bank0
  5512  063C  1303               	bcf	3,6	;RP1=0, select bank0
  5513  063D  082F               	movf	Set_Pwm_Onoff@funold,w
  5514  063E  00F3               	movwf	Set_Pwm_Onoff@funod
  5515  063F                     i1l8590:	
  5516  063F  3030               	movlw	48
  5517  0640  0673               	xorwf	Set_Pwm_Onoff@funod,w
  5518  0641  1D03               	btfss	3,2
  5519  0642  2E46               	goto	i1l8594
  5520  0643                     i1l8592:	
  5521                           
  5522                           ;WHQ_TP_ZPGS_V1.2.c: 350: {
  5523                           ;WHQ_TP_ZPGS_V1.2.c: 351: ((pfgonetemp.pfgtemp) |= (1 << (15)));
  5524  0643  17F8               	bsf	_pfgonetemp+1,7
  5525  0644                     L27:	
  5526                           
  5527                           ;WHQ_TP_ZPGS_V1.2.c: 352: PfgChangef = 1;
  5528  0644  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  5529                           
  5530                           ;WHQ_TP_ZPGS_V1.2.c: 353: }
  5531  0645  2E57               	goto	i1l8608
  5532  0646                     i1l8594:	
  5533                           
  5534                           ;WHQ_TP_ZPGS_V1.2.c: 354: else
  5535                           ;WHQ_TP_ZPGS_V1.2.c: 355: {
  5536                           ;WHQ_TP_ZPGS_V1.2.c: 356: pwmcl++;
  5537  0646  0AB1               	incf	Set_Pwm_Onoff@pwmcl,f
  5538                           
  5539                           ;WHQ_TP_ZPGS_V1.2.c: 357: if(pwmcl <= funod)
  5540  0647  0831               	movf	Set_Pwm_Onoff@pwmcl,w
  5541  0648  0273               	subwf	Set_Pwm_Onoff@funod,w
  5542  0649  1C03               	skipc
  5543  064A  2E4F               	goto	i1l5680
  5544                           
  5545                           ;WHQ_TP_ZPGS_V1.2.c: 358: {
  5546                           ;WHQ_TP_ZPGS_V1.2.c: 359: if((((pfgonetemp.pfgtemp) & (1 << (15))) == 0))
  5547  064B  1BF8               	btfsc	_pfgonetemp+1,7
  5548  064C  2E44               	goto	L27
  5549                           
  5550                           ;WHQ_TP_ZPGS_V1.2.c: 360: adonf = 0;
  5551  064D  1170               	bcf	Set_Pwm_Onoff@adonf/(0+8),Set_Pwm_Onoff@adonf& (0+7)
  5552  064E  2E43               	goto	i1l8592
  5553  064F                     i1l5680:	
  5554                           
  5555                           ;WHQ_TP_ZPGS_V1.2.c: 364: else
  5556                           ;WHQ_TP_ZPGS_V1.2.c: 365: {
  5557                           ;WHQ_TP_ZPGS_V1.2.c: 366: if(((pfgonetemp.pfgtemp) & (1 << (15))))
  5558  064F  1BF8               	btfsc	_pfgonetemp+1,7
  5559                           
  5560                           ;WHQ_TP_ZPGS_V1.2.c: 367: adonf = 0;
  5561  0650  1170               	bcf	Set_Pwm_Onoff@adonf/(0+8),Set_Pwm_Onoff@adonf& (0+7)
  5562                           
  5563                           ;WHQ_TP_ZPGS_V1.2.c: 368: pfgonetemp.pfgtemp &= ~0x8000;
  5564  0651  13F8               	bcf	_pfgonetemp+1,7
  5565                           
  5566                           ;WHQ_TP_ZPGS_V1.2.c: 369: PfgChangef = 1;
  5567  0652  15F0               	bsf	_PfgChangef/(0+8),_PfgChangef& (0+7)	;volatile
  5568  0653  3030               	movlw	48
  5569  0654  0231               	subwf	Set_Pwm_Onoff@pwmcl,w
  5570  0655  1803               	btfsc	3,0
  5571                           
  5572                           ;WHQ_TP_ZPGS_V1.2.c: 371: pwmcl = 0;
  5573  0656  01B1               	clrf	Set_Pwm_Onoff@pwmcl
  5574  0657                     i1l8608:	
  5575                           
  5576                           ;WHQ_TP_ZPGS_V1.2.c: 372: }
  5577                           ;WHQ_TP_ZPGS_V1.2.c: 373: }
  5578                           ;WHQ_TP_ZPGS_V1.2.c: 377: if(0xff != fun)
  5579  0657  0A74               	incf	Set_Pwm_Onoff@fun,w
  5580  0658  1903               	btfsc	3,2
  5581  0659  2E91               	goto	i1l5685
  5582                           
  5583                           ;WHQ_TP_ZPGS_V1.2.c: 378: {
  5584                           ;WHQ_TP_ZPGS_V1.2.c: 379: if(adonf&&((((ADCON0) & (1 << (1))) == 0)))
  5585  065A  1970               	btfsc	Set_Pwm_Onoff@adonf/(0+8),Set_Pwm_Onoff@adonf& (0+7)
  5586  065B  189F               	btfsc	31,1	;volatile
  5587  065C  2E7E               	goto	i1l8630
  5588                           
  5589                           ;WHQ_TP_ZPGS_V1.2.c: 380: {
  5590                           ;WHQ_TP_ZPGS_V1.2.c: 381: adonf = 0;
  5591  065D  1170               	bcf	Set_Pwm_Onoff@adonf/(0+8),Set_Pwm_Onoff@adonf& (0+7)
  5592                           
  5593                           ;WHQ_TP_ZPGS_V1.2.c: 382: adonetemp.adonebyte.adtempl = ADRESL;
  5594  065E  1683               	bsf	3,5	;RP0=1, select bank1
  5595  065F  081E               	movf	30,w	;volatile
  5596  0660  1283               	bcf	3,5	;RP0=0, select bank0
  5597  0661  00AC               	movwf	_adonetemp
  5598                           
  5599                           ;WHQ_TP_ZPGS_V1.2.c: 383: adonetemp.adonebyte.adtemph = (unsigned char)(ADRESH&0x03);
  5600  0662  081E               	movf	30,w	;volatile
  5601  0663  00AD               	movwf	_adonetemp+1
  5602  0664  3003               	movlw	3
  5603  0665  05AD               	andwf	_adonetemp+1,f
  5604                           
  5605                           ;WHQ_TP_ZPGS_V1.2.c: 384: cursumt = adonetemp.adtemp + cursumt;
  5606  0666  082C               	movf	_adonetemp,w
  5607  0667  1683               	bsf	3,5	;RP0=1, select bank1
  5608  0668  07A2               	addwf	Set_Pwm_Onoff@cursumt^(0+128),f
  5609  0669  1803               	skipnc
  5610  066A  0AA3               	incf	(Set_Pwm_Onoff@cursumt+1)^(0+128),f
  5611  066B  1283               	bcf	3,5	;RP0=0, select bank0
  5612  066C  082D               	movf	_adonetemp+1,w
  5613  066D  1683               	bsf	3,5	;RP0=1, select bank1
  5614  066E  07A3               	addwf	(Set_Pwm_Onoff@cursumt+1)^(0+128),f
  5615                           
  5616                           ;WHQ_TP_ZPGS_V1.2.c: 385: if(++cur_adcl >= 32)
  5617  066F  3020               	movlw	32
  5618  0670  1283               	bcf	3,5	;RP0=0, select bank0
  5619  0671  0AB0               	incf	Set_Pwm_Onoff@cur_adcl,f
  5620  0672  0230               	subwf	Set_Pwm_Onoff@cur_adcl,w
  5621  0673  1C03               	skipc
  5622  0674  2E7E               	goto	i1l8630
  5623                           
  5624                           ;WHQ_TP_ZPGS_V1.2.c: 386: {
  5625                           ;WHQ_TP_ZPGS_V1.2.c: 387: cur_adcl = 0;
  5626  0675  01B0               	clrf	Set_Pwm_Onoff@cur_adcl
  5627                           
  5628                           ;WHQ_TP_ZPGS_V1.2.c: 388: cursum = cursumt;
  5629  0676  1683               	bsf	3,5	;RP0=1, select bank1
  5630  0677  0823               	movf	(Set_Pwm_Onoff@cursumt+1)^(0+128),w
  5631  0678  00A5               	movwf	(_cursum+1)^(0+128)	;volatile
  5632  0679  0822               	movf	Set_Pwm_Onoff@cursumt^(0+128),w
  5633  067A  00A4               	movwf	_cursum^(0+128)	;volatile
  5634                           
  5635                           ;WHQ_TP_ZPGS_V1.2.c: 389: cursumt = 0;
  5636  067B  01A2               	clrf	Set_Pwm_Onoff@cursumt^(0+128)
  5637  067C  01A3               	clrf	(Set_Pwm_Onoff@cursumt+1)^(0+128)
  5638                           
  5639                           ;WHQ_TP_ZPGS_V1.2.c: 390: curokf = 1;
  5640  067D  17F0               	bsf	_curokf/(0+8),_curokf& (0+7)	;volatile
  5641  067E                     i1l8630:	
  5642                           
  5643                           ;WHQ_TP_ZPGS_V1.2.c: 391: }
  5644                           ;WHQ_TP_ZPGS_V1.2.c: 392: }
  5645                           ;WHQ_TP_ZPGS_V1.2.c: 394: if((PFGCON&0x80) != 0)
  5646  067E  1283               	bcf	3,5	;RP0=0, select bank2
  5647  067F  1703               	bsf	3,6	;RP1=1, select bank2
  5648  0680  1F9B               	btfss	27,7	;volatile
  5649  0681  0008               	return
  5650                           
  5651                           ;WHQ_TP_ZPGS_V1.2.c: 395: {
  5652                           ;WHQ_TP_ZPGS_V1.2.c: 396: ADCON0 = 0;
  5653  0682  1303               	bcf	3,6	;RP1=0, select bank0
  5654  0683  019F               	clrf	31	;volatile
  5655                           
  5656                           ;WHQ_TP_ZPGS_V1.2.c: 397: ADCON1 = 0x80;
  5657  0684  3080               	movlw	128
  5658  0685  1683               	bsf	3,5	;RP0=1, select bank1
  5659  0686  009F               	movwf	31	;volatile
  5660  0687  3045               	movlw	69
  5661  0688  1283               	bcf	3,5	;RP0=0, select bank0
  5662  0689  009F               	movwf	31	;volatile
  5663  068A  0000               	nop	;# 
  5664  068B  0000               	nop	;# 
  5665                           
  5666                           ;WHQ_TP_ZPGS_V1.2.c: 401: adonf = 1;
  5667  068C  1570               	bsf	Set_Pwm_Onoff@adonf/(0+8),Set_Pwm_Onoff@adonf& (0+7)
  5668                           
  5669                           ;WHQ_TP_ZPGS_V1.2.c: 402: ((ADCON0) |= (1 << (1)));
  5670  068D  1283               	bcf	3,5	;RP0=0, select bank0
  5671  068E  1303               	bcf	3,6	;RP1=0, select bank0
  5672  068F  149F               	bsf	31,1	;volatile
  5673  0690  0008               	return
  5674  0691                     i1l5685:	
  5675                           
  5676                           ;WHQ_TP_ZPGS_V1.2.c: 405: else
  5677                           ;WHQ_TP_ZPGS_V1.2.c: 406: {
  5678                           ;WHQ_TP_ZPGS_V1.2.c: 407: adonf = 0;
  5679  0691  1170               	bcf	Set_Pwm_Onoff@adonf/(0+8),Set_Pwm_Onoff@adonf& (0+7)
  5680  0692  0008               	return
  5681  0693                     __end_of_Set_Pwm_Onoff:	
  5682  007E                     btemp	set	126	;btemp
  5683  007E                     wtemp0	set	126
  5684                           
  5685                           	psect	intentry
  5686  0004                     __pintentry:	
  5687                           ;incstack = 0
  5688                           ; Regs used in _time0: [wreg+status,2+status,0+pclath+cstack]
  5689                           
  5690  0004                     interrupt_function:	
  5691  007E                     saved_w	set	btemp
  5692  0004  00FE               	movwf	btemp
  5693  0005  0E03               	swapf	3,w
  5694  0006  00F5               	movwf	??_time0
  5695  0007  080A               	movf	10,w
  5696  0008  00F6               	movwf	??_time0+1
  5697  0009  118A  2DC2         	ljmp	_time0


Data Sizes:
    Strings     0
    Constant    3
    Data        0
    BSS         74
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80     15      77
    BANK1            80      0       8
    BANK3            88      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _time0 in COMMON

    _time0->_Set_Pwm_Onoff

Critical Paths under _main in BANK0

    _register_init->_Delay_nms
    _Delay_nms->_Delay
    _fog_erro_scan->_Test_Pwm
    _Test_Pwm->_Get_CUR_Dat
    _Test_Pwm->_Test_PWM_Fst
    _Test_PWM_Fst->_Test_Pwm_Cur
    _Test_Pwm_Cur->_Pwm_add
    _Test_Pwm_Cur->_Pwm_dec
    _PFG_read_fst->_Set_jiyi_re
    _Get_CUR_Dat->___awdiv

Critical Paths under _time0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _time0 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _time0 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _time0 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2940
                            _Sys_set
                        _beep_handle
                        _button_scan
                          _data_init
                    _drive_data_init
                         _fan_handle
                      _fog_erro_scan
                         _fog_handle
                         _led_handle
                      _register_init
                      _timing_handle
 ---------------------------------------------------------------------------------
 (1) _timing_handle                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _register_init                                        0     0      0     344
                          _Delay_nms
 ---------------------------------------------------------------------------------
 (2) _Delay_nms                                            5     3      2     344
                                              2 BANK0      5     3      2
                              _Delay
 ---------------------------------------------------------------------------------
 (3) _Delay                                                2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _led_handle                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fog_handle                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fog_erro_scan                                        0     0      0    2596
                           _Test_Pwm
 ---------------------------------------------------------------------------------
 (2) _Test_Pwm                                             5     5      0    2596
                                             10 BANK0      5     5      0
                        _Get_CUR_Dat
                       _PFG_read_fst
                       _Test_PWM_Fst
                       _Test_Pwm_Cur
                         _Test_water
                       _Work_RAM_CLR
                        _YTPFG_Flash
 ---------------------------------------------------------------------------------
 (3) _Work_RAM_CLR                                         2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Test_water                                           6     6      0     121
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) _Test_PWM_Fst                                         1     1      0     684
                                              9 BANK0      1     1      0
                       _Test_Pwm_Cur
                        _YTPFG_Flash
 ---------------------------------------------------------------------------------
 (3) _YTPFG_Flash                                          5     5      0     108
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _Test_Pwm_Cur                                         2     2      0     511
                                              7 BANK0      2     2      0
                            _Pwm_add
                            _Pwm_dec
 ---------------------------------------------------------------------------------
 (4) _Pwm_dec                                              7     5      2     203
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _Pwm_add                                              7     5      2     203
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) _PFG_read_fst                                         7     7      0     327
                                              2 BANK0      7     7      0
                        _Set_jiyi_re
 ---------------------------------------------------------------------------------
 (4) _Set_jiyi_re                                          2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _Get_CUR_Dat                                          2     2      0     746
                                              8 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     746
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _fan_handle                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drive_data_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _data_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _button_scan                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _beep_handle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Sys_set                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _time0                                                2     2      0     179
                                              3 COMMON     2     2      0
                      _Set_Pwm_Onoff
 ---------------------------------------------------------------------------------
 (7) _Set_Pwm_Onoff                                        3     3      0     179
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sys_set
   _beep_handle
   _button_scan
   _data_init
   _drive_data_init
   _fan_handle
   _fog_erro_scan
     _Test_Pwm
       _Get_CUR_Dat
         ___awdiv
       _PFG_read_fst
         _Set_jiyi_re
       _Test_PWM_Fst
         _Test_Pwm_Cur
           _Pwm_add
           _Pwm_dec
         _YTPFG_Flash
       _Test_Pwm_Cur
         _Pwm_add
         _Pwm_dec
       _Test_water
       _Work_RAM_CLR
       _YTPFG_Flash
   _fog_handle
   _led_handle
   _register_init
     _Delay_nms
       _Delay
   _timing_handle

 _time0 (ROOT)
   _Set_Pwm_Onoff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       2       0       14.3%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      60       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       8       7       10.0%
BITBANK3            58      0       0       8        0.0%
BANK3               58      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%
BANK2               50      0       0      11        0.0%
DATA                 0      0      60      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Aug 17 13:31:49 2023

          _led_scan_delay 004A     __end_of_Set_Pwm_Onoff 0693                         pc 0002  
     __end_of_Get_CUR_Dat 00C7                        PL2 0356                        PL4 035E  
                      PL6 05B2                        PL8 0368                        _RD 0C60  
            ___awdiv@sign 0063                        fsr 0004                       PL10 036E  
                     PL20 037B                       PL12 05B8                       PL22 05BE  
                     PL14 0375                       PL16 052E                       PL18 0533  
                     _GIE 005F                       _RA2 002A                       _RB0 0030  
                     _RA3 002B                       _RB1 0031                       _RA4 002C  
                     _RB2 0032                       _RA5 002D                       _RA6 002E  
                     _RB4 0034                       _RA7 002F                       _RB5 0035  
                     _PR2 0092           YTPFG_Flash@temp 0061       Test_water@curstrold 0020  
                     fsr0 0004                       indf 0000              _Work_RAM_CLR 032D  
        _fog_time_5ms_flg 005D            ?_fog_erro_scan 0072                      l2334 07E6  
                    l2431 050B                      l2423 04FF                      l2352 0780  
                    l2424 04D6                      l5710 00DE                      l5711 00DF  
                    l5634 0122                      l5730 0183                      l5708 00D1  
                    l9110 01F7                      l9016 00E9                      l5752 024A  
                    l5728 01EE                      l5745 01EA                      l9114 0205  
                    l5738 01AA                      l9132 0224                      l5756 020A  
                    l9220 005B                      l5781 0042                      l9046 0249  
                    l5759 023E                      l5783 004E                      l9144 0236  
                    l9072 01B6                      l9056 019C                      l9048 0190  
                    l5793 0068                      l5785 005D                      l9234 0064  
                    l5779 003C                      l9404 0542                      l9164 0256  
                    l9252 0085                      l9180 06EF                      l9416 0550  
                    l9088 01D2                      l9530 0775                      l9442 056D  
                    l9450 0578                      l9434 0565                      l9514 07BE  
                    l9602 03F6                      l9186 06F1                      l9428 0561  
                    l9436 0566                      l8820 0273                      l9188 0705  
                    l9534 0776                      l9526 076E                      l9462 0588  
                    l8830 0281                      l8814 026A                      l9518 07C4  
                    l9710 0478                      l9702 046F                      l9614 0405  
                    l9606 03FA                      l9622 0409                      l9528 0771  
                    l9480 0595                      l9472 058D                      l9800 0526  
                    l9624 0417                      l9552 03C4                      l9474 058E  
                    l8842 0298                      l8746 0104                      l9394 0031  
                    l9386 0028                      l9722 0487                      l9650 0437  
                    l9618 0407                      l9626 041E                      l9554 03C5  
                    l9810 0384                      l8860 02B0                      l9740 04AC  
                    l9732 049D                      l9652 0439                      l9564 03D1  
                    l9724 048C                      l9556 03C7                      l8852 0709  
                    l9812 0386                      l9820 038D                      l9494 05A6  
                    l8846 02A0                      l8774 011B                      l8758 0106  
                    l9718 0481                      l9646 0430                      l9638 0428  
                    l9590 03E9                      l9574 03DB                      l9814 0389  
                    l9822 039E                      l9806 0382                      l9496 05A9  
                    l8864 02BA                      l8856 02A6                      l9760 04D4  
                    l9752 04C4                      l9744 04B5                      l9736 04A3  
                    l9728 0494                      l9680 0456                      l9656 0440  
                    l9592 03EC                      l9824 03A1                      l9816 038B  
                    l9498 05AA                      l8874 02CF                      l8778 0124  
                    l9762 04D8                      l9674 0450                      l9666 0448  
                    l9658 0442                      l9578 03DE                      l9826 03A3  
                    l8868 02C4                      l8876 02E1                      l9772 04E5  
                    l9764 04DA                      l9756 04CD                      l9780 04ED  
                    l9748 04BB                      l9588 03E8                      l8974 00AB  
                    l8894 0309                      l8886 02FA                      l9694 0467  
                    l9686 045F                      l8976 00C0                      l8888 02FC  
                    l9792 0516                      l9776 04EB                      l9768 04DF  
                    l9856 0728                      l9848 071E                      l9786 0506  
                    l9796 051E                      _T0IE 005D                      _IOCA 0087  
                    _IOCB 0096                      u3255 0147                      _PIE1 008C  
                    _PIE2 008D                      u3265 015F                      u3455 0099  
                    u3395 028A                      u3555 016E                      _PEIE 005E  
                    u3725 0203                      u3645 01C5                      _RBIE 005B  
                    u3665 01DB                      u3585 018D                      u3755 021A  
                    u3775 022C                      u3855 06F7                      _PIR1 000C  
                    _PIR2 000D          YTPFG_Flash@templ 0060                      _TMR0 0001  
                    _WPDA 0007                      _WPDB 0008                      _WPUA 018E  
                    _WPUB 0095                      _main 0715                      btemp 007E  
                    start 000B  __size_of_drive_data_init 0009      __size_of_beep_handle 001F  
         __end_of_Pwm_add 014A           __end_of_Pwm_dec 0162                     ?_main 0072  
         __end_of___awdiv 02A5                     _EEADR 010D                     _EEDAT 010C  
                   _EEPGD 0C67                     _ANSEL 0188           ___awdiv@divisor 005E  
                   _T2CON 0012           ??_timing_handle 005E           __end_of_Sys_set 07B8  
         ___awdiv@counter 0062               _YTPFG_Flash 0740                     _PORTA 0005  
                   _PORTB 0006                     _TRISA 0085                     _PWMTH 0190  
                   _TRISB 0086                     _PWMTL 018F                     _Delay 0709  
            ?_button_scan 0072             _cur_addatold0 003D             _cur_addatold1 003C  
           _cur_addatold2 003B                     _time0 05C2                     _pwmhc 0036  
                   _pwmlc 0035                     _pwmlv 0022                     _pwmtf 038B  
          __pbitbssCOMMON 0380                     pclath 000A                _PfgChangef 0383  
   __end_of_register_init 06E9                     status 0003                     wtemp0 007E  
             _Get_CUR_Dat 0090           _fog_status_buff 0047           __initialization 000D  
            __end_of_main 0740        __size_of_Delay_nms 0020                    ??_main 006D  
        PFG_read_fst@temp 0065                    ?_Delay 005E          __end_of_Test_Pwm 0090  
         ??_fog_erro_scan 006D                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    _ADRESL 009E                    ?_time0 0072  
      Set_Pwm_Onoff@adonf 0382          ___awdiv@dividend 0060                    _ANSELH 0189  
      Set_Pwm_Onoff@funod 0073                    _PFGADJ 0119                    i1l4765 05E8  
                  i1l5680 064F                    i1l5672 062A                    i1l5685 0691  
                  i1l8700 05E6                    i1l8630 067E                    i1l8608 0657  
                  _PFGCON 011B                    i1l8562 0609                    i1l8572 061B  
                  i1l8590 063F                    i1l8566 0617                    i1l8592 0643  
                  i1l8584 0630                    _INTCON 000B                    i1l8594 0646  
                  i1l8682 05D0                    i1l8588 063B                    i1l8692 05DD  
                  i1l8678 05CC        Set_Pwm_Onoff@pwmcl 0031                    _OSCCON 008F  
                  _PWM1EN 0839                    _PWM2EN 083A                    _PWM3EN 083B  
                  _TMR2IE 0461                    _PWM4EN 083C                    _TMR2IF 0061  
                  _PWMD0L 0193                    _PWMD1L 0194                    _PWMD2L 0195  
                  _PWMD3L 0196                    _PWMD4L 0197                    _WDTCON 0105  
                  _PWMT4L 0191                    _TRISB4 0434                    _TRISA7 042F  
                  _TRISB5 0435                    _SWDTEN 0828             ??_Set_jiyi_re 005E  
               ??_Pwm_add 0060                 ??_Pwm_dec 0060                 ??___awdiv 0062  
                  _Ytzpcl 0039                 ??_Sys_set 005E         ??_drive_data_init 005E  
                  _curmax 0034                    _curokf 0387                    _curset 07CE  
                  _curupc 003F                    _curupf 0384                    _cursum 00A4  
                  _on_off 038C          ___awdiv@quotient 0064                    _ponecf 0388  
                  _pwmtf1 038A                    _pwmfst 002A                    _pwmold 0024  
                  _pwmlst 0028                    _wnoncl 0038                _Test_water 0162  
       Test_PWM_Fst@templ 0067                    saved_w 007E        Delay_nms@inittempl 0060  
          _time_125us_cnt 0042         __end_of_Delay_nms 0709   __end_of__initialization 001F  
         Test_water@temph 0061             __end_of_Delay 0715            __pcstackCOMMON 0072  
       __end_of_Cur_Adcon 07D0       __end_of_Set_jiyi_re 032D             __end_of_time0 05EF  
      __size_of_data_init 001E                __end_ofPL2 035E                __end_ofPL4 0368  
              __end_ofPL6 05B8                __end_ofPL8 036E                   ??_Delay 0060  
    __size_of_button_scan 0079                   ??_time0 0075         PFG_read_fst@temph 0063  
       PFG_read_fst@templ 0062                __pbssBANK0 0020                __pbssBANK1 00A0  
           ?_PFG_read_fst 0072                _fan_handle 07E1                __pmaintext 0715  
               ?_Test_Pwm 0072                __pintentry 0004       Test_Pwm_Cur@curupcl 0033  
             ?_Test_water 0072       Set_Pwm_Onoff@funold 002F              ?_YTPFG_Flash 0072  
           ?_Test_PWM_Fst 0072                   _PFGCON1 011E                   _PFGSTOP 0088  
                 _PFGchgf 0386                _fog_handle 07B8                   _PWMD01H 011C  
                 _PWMD23H 011D                _led_handle 03BC                   _PWMCON0 0107  
                 _PWMCON1 0108                   _PWMCON2 0109            ??_PFG_read_fst 0060  
              __stringtab 07C7    __size_of_Set_Pwm_Onoff 00A4         __end_of_data_init 07A3  
           ?_Test_Pwm_Cur 0072              ?_Get_CUR_Dat 0072               _Set_jiyi_re 0319  
           ??_beep_handle 005E                   _Pwm_add 0131                ??_Test_Pwm 0068  
                 _Pwm_dec 014A     Test_Pwm_Cur@curdowncl 0032                   ___awdiv 0260  
                 _Sys_set 07A3     Set_Pwm_Onoff@cur_adcl 0030                   __ptext1 0381  
                 __ptext2 0693                   __ptext3 06E9                   __ptext4 0709  
                 __ptext5 03BC                   __ptext6 07B8                   __ptext7 0022  
                 __ptext8 0036                   __ptext9 032D          Set_jiyi_re@raddr 005E  
          ??_Test_PWM_Fst 0067                _pfg_select 07CD                   _fog_mod 0053  
                 _led_mod 007A                   _curokcl 003A     __end_of_timing_handle 03BC  
                 _ponesec 0040           _timing_10ms_cnt 00A6                   _whavecl 0037  
              _pfgonetemp 0077                   _pwmnold 0026                   clrloop0 07DA  
                 _pwmtonf 0389      end_of_initialization 001F            ??_Test_Pwm_Cur 0065  
          Delay_nms@gtemp 0064           _drive_data_init 07D0               ?_fan_handle 0072  
             Pwm_add@temp 0063       __size_of_Test_water 00FE               Pwm_dec@temp 0063  
           _Set_Pwm_Onoff 05EF       __end_of_beep_handle 0785              _led_mod1_flg 004E  
            _led_mod2_flg 004D              _led_mod3_flg 004C              _led_mod4_flg 004B  
            _fog_erro_flg 0046    __size_of_register_init 0056           _timing_1min_cnt 0045  
             ?_fog_handle 0072               ?_led_handle 0072     __end_of_fog_erro_scan 0036  
        Test_water@watnof 0381          Test_water@strupc 00A0                 _Delay_nms 06E9  
            _btn_work_cnt 0057            ?_Set_Pwm_Onoff 0072      __end_of_PFG_read_fst 0319  
               _Cur_Adcon 07CF            __end_of_curset 07CF       __size_of_fan_handle 0007  
             __end_ofPL10 0375               __end_ofPL20 0381               __end_ofPL12 05BE  
             __end_ofPL22 05C2               __end_ofPL14 037B               __end_ofPL16 0533  
             __end_ofPL18 0539       start_initialization 000D      __size_of_YTPFG_Flash 0026  
           ?_Work_RAM_CLR 0072   __end_of_drive_data_init 07D9             _register_init 0693  
    __end_of_Test_PWM_Fst 00EE                ?_Delay_nms 0060      __size_of_Get_CUR_Dat 0037  
             _beep_handle 0766       __size_of_fog_handle 000F       __size_of_led_handle 0172  
       __size_of_Test_Pwm 005A      __end_of_Test_Pwm_Cur 0131              ??_Test_water 005E  
          Test_water@temp 0062             ??_button_scan 005E               __pbssCOMMON 0077  
               ___latbits 0001             __pcstackBANK0 005E            ??_Work_RAM_CLR 005E  
           _time_10ms_flg 005C            ?_register_init 0072                 _adonetemp 002C  
        _ledb_breath_duty 004F                 _data_init 0785              ?_Set_jiyi_re 0072  
      __end_of_Test_water 0260            Pwm_add@pwmlset 005E           ??_Set_Pwm_Onoff 0072  
                ?_Pwm_add 005E                  ?_Pwm_dec 005E             Test_Pwm@ondly 002E  
           Test_Pwm@templ 006C                  ?___awdiv 005E                  ?_Sys_set 0072  
         Test_Pwm@curokf1 0380                 __pstrings 07C7                 _cur_addat 0043  
          __size_of_Delay 000C          ?_drive_data_init 0072            __size_of_time0 002D  
     __end_of_button_scan 05B2      Set_Pwm_Onoff@cursumt 00A2         interrupt_function 0004  
          Pwm_dec@pwmfset 005E                  _PFGDATA1 011F              ??_fan_handle 005E  
               clear_ram0 07D9                ?_data_init 0072               ??_Delay_nms 0062  
               _onoff_fst 0385     __size_of_PFG_read_fst 0074          _ledr_breath_duty 0079  
             _ledb_pecent 0058               _btn_fog_cnt 0055               _btn_led_cnt 0056  
             __stringbase 07CC               _ledg_pecent 0059        __end_of_fan_handle 07E8  
            ??_fog_handle 005E              ??_led_handle 005E               _ledr_pecent 005A  
         ??_register_init 0065     __size_of_Test_PWM_Fst 0027              _PFG_read_fst 02A5  
        Set_Pwm_Onoff@fun 0074    __size_of_timing_handle 003B     __size_of_Test_Pwm_Cur 0043  
                _Test_Pwm 0036      __end_of_Work_RAM_CLR 0356          __size_of_Pwm_add 0019  
        __size_of_Pwm_dec 0018        __end_of_fog_handle 07C7          __size_of___awdiv 0045  
      __end_of_led_handle 052E          __size_of_Sys_set 0015            _timing_set_num 0044  
      __end_of__stringtab 07CD                  _beep_flg 0048                  _beep_cnt 0049  
            _Test_PWM_Fst 00C7               _button_scan 0539                  __ptext10 0162  
                __ptext11 00C7                  __ptext20 07E1                  __ptext12 0740  
                __ptext21 07D0                  __ptext13 00EE                  __ptext22 0785  
                __ptext14 014A                  __ptext23 0539                  __ptext15 0131  
                __ptext24 0766                  __ptext16 02A5                  __ptext25 07A3  
                __ptext17 0319                  __ptext26 05C2                  __ptext18 0090  
                __ptext27 05EF                  __ptext19 0260         Test_Pwm_Cur@temph 0065  
       Test_Pwm_Cur@templ 0066         Set_jiyi_re@redata 005F                  _curdownc 003E  
            _Test_Pwm_Cur 00EE             __size_of_main 002B               ??_data_init 005E  
      __end_of_pfg_select 07CE              ?_beep_handle 0072      __size_of_Set_jiyi_re 0014  
  __size_of_fog_erro_scan 0014                Delay@dtemp 005E                  _work_mod 0054  
           ??_YTPFG_Flash 005E             _timing_handle 0381                Delay_nms@i 0062  
            Pwm_add@addcl 0062                  intlevel1 0000              Pwm_dec@deccl 0062  
           ??_Get_CUR_Dat 0066                 stringcode 07C7            _led_breath_cnt 0052  
          _led_breath_way 0051     PFG_read_fst@pfgconset 0064                _OPTION_REG 0081  
          ?_timing_handle 0072                  stringdir 07C7                  stringtab 07C7  
           _fog_drive_mod 005B        _fog_time_125us_cnt 0041       __end_of_YTPFG_Flash 0766  
           _fog_erro_scan 0022     __size_of_Work_RAM_CLR 0029          _ledg_breath_duty 0050  
