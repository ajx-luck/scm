

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 15 09:52:03 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	79F123
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  000B                     _INTCON	set	11
    51  0059                     _INTF	set	89
    52  008F                     _OSCCON	set	143
    53  0085                     _TRISA	set	133
    54  0081                     _OPTION_REG	set	129
    55  040E                     _INTEDG	set	1038
    56  018E                     _WPUA	set	398
    57                           
    58                           	psect	cinit
    59  000D                     start_initialization:	
    60                           ; #config settings
    61                           
    62  000D                     __initialization:	
    63  000D                     end_of_initialization:	
    64                           ;End of C runtime variable initialization code
    65                           
    66  000D                     __end_of__initialization:	
    67  000D  0183               	clrf	3
    68  000E  118A  2810         	ljmp	_main	;jump to C main() function
    69                           
    70                           	psect	cstackCOMMON
    71  0070                     __pcstackCOMMON:	
    72  0070                     ?_main:	
    73  0070                     ?_INT_Isr:	
    74                           ; 1 bytes @ 0x0
    75                           
    76  0070                     ??_INT_Isr:	
    77                           ; 1 bytes @ 0x0
    78                           
    79                           
    80                           ; 1 bytes @ 0x0
    81  0070                     	ds	2
    82  0072                     ??_main:	
    83                           
    84                           	psect	maintext
    85  0010                     __pmaintext:	
    86                           ; 1 bytes @ 0x2
    87 ;;
    88 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    89 ;;
    90 ;; *************** function _main *****************
    91 ;; Defined at:
    92 ;;		line 15 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\External_Int_Demo\INT_Interrup
      +t_Demo.c"
    93 ;; Parameters:    Size  Location     Type
    94 ;;		None
    95 ;; Auto vars:     Size  Location     Type
    96 ;;		None
    97 ;; Return value:  Size  Location     Type
    98 ;;                  1    wreg      void 
    99 ;; Registers used:
   100 ;;		wreg, status,2
   101 ;; Tracked objects:
   102 ;;		On entry : B00/0
   103 ;;		On exit  : 0/0
   104 ;;		Unchanged: 0/0
   105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   106 ;;      Params:         0       0       0       0       0
   107 ;;      Locals:         0       0       0       0       0
   108 ;;      Temps:          0       0       0       0       0
   109 ;;      Totals:         0       0       0       0       0
   110 ;;Total ram usage:        0 bytes
   111 ;; Hardware stack levels required when called:    1
   112 ;; This function calls:
   113 ;;		Nothing
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           
   120                           ;psect for function _main
   121  0010                     _main:	
   122                           
   123                           ;incstack = 0
   124                           ; Regs used in _main: [wreg+status,2]
   125  0010  0000               	nop	;# 
   126  0011  0064               	clrwdt	;# 
   127                           
   128                           ;INT_Interrupt_Demo.c: 20: OSCCON = 0x71;
   129  0012  3071               	movlw	113
   130  0013  1683               	bsf	3,5	;RP0=1, select bank1
   131  0014  1303               	bcf	3,6	;RP1=0, select bank1
   132  0015  008F               	movwf	15	;volatile
   133                           
   134                           ;INT_Interrupt_Demo.c: 21: OPTION_REG = 0;
   135  0016  0181               	clrf	1	;volatile
   136                           
   137                           ;INT_Interrupt_Demo.c: 24: WPUA = 0B00100000;
   138  0017  3020               	movlw	32
   139  0018  1703               	bsf	3,6	;RP1=1, select bank3
   140  0019  008E               	movwf	14	;volatile
   141                           
   142                           ;INT_Interrupt_Demo.c: 25: TRISA = 0B00100000;
   143  001A  1303               	bcf	3,6	;RP1=0, select bank1
   144  001B  0085               	movwf	5	;volatile
   145                           
   146                           ;INT_Interrupt_Demo.c: 26: INTEDG = 0;
   147  001C  1301               	bcf	1,6	;volatile
   148                           
   149                           ;INT_Interrupt_Demo.c: 27: INTCON = 0x90;
   150  001D  3090               	movlw	144
   151  001E  008B               	movwf	11	;volatile
   152  001F                     l717:	
   153                           ;INT_Interrupt_Demo.c: 30: while(1)
   154                           
   155  001F  0064               	clrwdt	;# 
   156  0020  281F               	goto	l717
   157  0021                     __end_of_main:	
   158                           
   159                           	psect	text1
   160  0021                     __ptext1:	
   161 ;; *************** function _INT_Isr *****************
   162 ;; Defined at:
   163 ;;		line 44 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\External_Int_Demo\INT_Interrup
      +t_Demo.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		None
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   177 ;;      Params:         0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0
   179 ;;      Temps:          2       0       0       0       0
   180 ;;      Totals:         2       0       0       0       0
   181 ;;Total ram usage:        2 bytes
   182 ;; Hardware stack levels used:    1
   183 ;; This function calls:
   184 ;;		Nothing
   185 ;; This function is called by:
   186 ;;		Interrupt level 1
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           
   191                           ;psect for function _INT_Isr
   192  0021                     _INT_Isr:	
   193                           
   194                           ;INT_Interrupt_Demo.c: 46: if(INTF)
   195  0021  188B               	btfsc	11,1	;volatile
   196                           
   197                           ;INT_Interrupt_Demo.c: 47: {
   198                           ;INT_Interrupt_Demo.c: 48: INTF = 0;
   199  0022  108B               	bcf	11,1	;volatile
   200  0023  0871               	movf	??_INT_Isr+1,w
   201  0024  008A               	movwf	10
   202  0025  0E70               	swapf	??_INT_Isr^(0+-128),w
   203  0026  0083               	movwf	3
   204  0027  0EFE               	swapf	126,f
   205  0028  0E7E               	swapf	126,w
   206  0029  0009               	retfie
   207  002A                     __end_of_INT_Isr:	
   208  007E                     btemp	set	126	;btemp
   209  007E                     wtemp0	set	126
   210                           
   211                           	psect	intentry
   212  0004                     __pintentry:	
   213                           ;incstack = 0
   214                           ; Regs used in _INT_Isr: []
   215                           
   216  0004                     interrupt_function:	
   217  007E                     saved_w	set	btemp
   218  0004  00FE               	movwf	btemp
   219  0005  0E03               	swapf	3,w
   220  0006  00F0               	movwf	??_INT_Isr
   221  0007  080A               	movf	10,w
   222  0008  00F1               	movwf	??_INT_Isr+1
   223  0009  118A  2821         	ljmp	_INT_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            88      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _INT_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT_Isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT_Isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _INT_Isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _INT_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            58      0       0       8        0.0%
BANK3               58      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%
BANK2               50      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 15 09:52:03 2020

                    l717 001F                     _INTF 0059          __end_of_INT_Isr 002A  
                   _WPUA 018E                     _main 0010                     btemp 007E  
                   start 000B                    ?_main 0070                    _TRISA 0085  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000D             __end_of_main 0021                   ??_main 0072  
              ??_INT_Isr 0070                   _INTEDG 040E                   _INTCON 000B  
                 _OSCCON 008F                   saved_w 007E  __end_of__initialization 000D  
         __pcstackCOMMON 0070               __pmaintext 0010               __pintentry 0004  
                _INT_Isr 0021                  __ptext0 0000                  __ptext1 0021  
   end_of_initialization 000D      start_initialization 000D                ___latbits 0001  
               ?_INT_Isr 0070        interrupt_function 0004         __size_of_INT_Isr 0009  
          __size_of_main 0011                 intlevel1 0000               _OPTION_REG 0081  
