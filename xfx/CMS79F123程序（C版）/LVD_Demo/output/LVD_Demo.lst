

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 30 11:21:10 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	79F123
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	pa_nodes0,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 1.45
    14                           ; Generated 16/11/2017 GMT
    15                           ; 
    16                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	text0
    49  0000                     __ptext0:	
    50  000B                     _INTCON	set	11
    51  0068                     _LVDIF	set	104
    52  0097                     _LVDCON	set	151
    53  008F                     _OSCCON	set	143
    54  008D                     _PIE2	set	141
    55  0081                     _OPTION_REG	set	129
    56                           
    57                           	psect	cinit
    58  000D                     start_initialization:	
    59                           ; #config settings
    60                           
    61  000D                     __initialization:	
    62  000D                     end_of_initialization:	
    63                           ;End of C runtime variable initialization code
    64                           
    65  000D                     __end_of__initialization:	
    66  000D  0183               	clrf	3
    67  000E  118A  2810         	ljmp	_main	;jump to C main() function
    68                           
    69                           	psect	cstackCOMMON
    70  0070                     __pcstackCOMMON:	
    71  0070                     ?_main:	
    72  0070                     ?_LVD_Isr:	
    73                           ; 1 bytes @ 0x0
    74                           
    75  0070                     ??_LVD_Isr:	
    76                           ; 1 bytes @ 0x0
    77                           
    78                           
    79                           ; 1 bytes @ 0x0
    80  0070                     	ds	2
    81  0072                     ??_main:	
    82                           
    83                           	psect	maintext
    84  0010                     __pmaintext:	
    85                           ; 1 bytes @ 0x2
    86 ;;
    87 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    88 ;;
    89 ;; *************** function _main *****************
    90 ;; Defined at:
    91 ;;		line 14 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\LVD_Demo\LVD_Demo.c"
    92 ;; Parameters:    Size  Location     Type
    93 ;;		None
    94 ;; Auto vars:     Size  Location     Type
    95 ;;		None
    96 ;; Return value:  Size  Location     Type
    97 ;;                  1    wreg      void 
    98 ;; Registers used:
    99 ;;		wreg, status,2
   100 ;; Tracked objects:
   101 ;;		On entry : B00/0
   102 ;;		On exit  : 0/0
   103 ;;		Unchanged: 0/0
   104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   105 ;;      Params:         0       0       0       0       0
   106 ;;      Locals:         0       0       0       0       0
   107 ;;      Temps:          0       0       0       0       0
   108 ;;      Totals:         0       0       0       0       0
   109 ;;Total ram usage:        0 bytes
   110 ;; Hardware stack levels required when called:    1
   111 ;; This function calls:
   112 ;;		Nothing
   113 ;; This function is called by:
   114 ;;		Startup code after reset
   115 ;; This function uses a non-reentrant model
   116 ;;
   117                           
   118                           
   119                           ;psect for function _main
   120  0010                     _main:	
   121                           
   122                           ;incstack = 0
   123                           ; Regs used in _main: [wreg+status,2]
   124  0010  0000               	nop	;# 
   125  0011  0064               	clrwdt	;# 
   126                           
   127                           ;LVD_Demo.c: 19: OSCCON = 0x71;
   128  0012  3071               	movlw	113
   129  0013  1683               	bsf	3,5	;RP0=1, select bank1
   130  0014  1303               	bcf	3,6	;RP1=0, select bank1
   131  0015  008F               	movwf	15	;volatile
   132                           
   133                           ;LVD_Demo.c: 20: OPTION_REG = 0;
   134  0016  0181               	clrf	1	;volatile
   135                           
   136                           ;LVD_Demo.c: 22: LVDCON = 0x07;
   137  0017  3007               	movlw	7
   138  0018  0097               	movwf	23	;volatile
   139                           
   140                           ;LVD_Demo.c: 23: INTCON = 0xC0;
   141  0019  30C0               	movlw	192
   142  001A  008B               	movwf	11	;volatile
   143                           
   144                           ;LVD_Demo.c: 24: PIE2 = 0x01;
   145  001B  3001               	movlw	1
   146  001C  008D               	movwf	13	;volatile
   147  001D                     l717:	
   148                           ;LVD_Demo.c: 27: while(1)
   149                           
   150  001D  0064               	clrwdt	;# 
   151  001E  281D               	goto	l717
   152  001F                     __end_of_main:	
   153                           
   154                           	psect	text1
   155  001F                     __ptext1:	
   156 ;; *************** function _LVD_Isr *****************
   157 ;; Defined at:
   158 ;;		line 40 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\LVD_Demo\LVD_Demo.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;		None
   163 ;; Return value:  Size  Location     Type
   164 ;;                  1    wreg      void 
   165 ;; Registers used:
   166 ;;		None
   167 ;; Tracked objects:
   168 ;;		On entry : 0/0
   169 ;;		On exit  : 300/0
   170 ;;		Unchanged: 0/0
   171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   172 ;;      Params:         0       0       0       0       0
   173 ;;      Locals:         0       0       0       0       0
   174 ;;      Temps:          2       0       0       0       0
   175 ;;      Totals:         2       0       0       0       0
   176 ;;Total ram usage:        2 bytes
   177 ;; Hardware stack levels used:    1
   178 ;; This function calls:
   179 ;;		Nothing
   180 ;; This function is called by:
   181 ;;		Interrupt level 1
   182 ;; This function uses a non-reentrant model
   183 ;;
   184                           
   185                           
   186                           ;psect for function _LVD_Isr
   187  001F                     _LVD_Isr:	
   188                           
   189                           ;LVD_Demo.c: 42: if(LVDIF)
   190  001F  1283               	bcf	3,5	;RP0=0, select bank0
   191  0020  1303               	bcf	3,6	;RP1=0, select bank0
   192  0021  180D               	btfsc	13,0	;volatile
   193                           
   194                           ;LVD_Demo.c: 43: {
   195                           ;LVD_Demo.c: 44: LVDIF = 0;
   196  0022  100D               	bcf	13,0	;volatile
   197  0023  0871               	movf	??_LVD_Isr+1,w
   198  0024  008A               	movwf	10
   199  0025  0E70               	swapf	??_LVD_Isr^(0+-128),w
   200  0026  0083               	movwf	3
   201  0027  0EFE               	swapf	126,f
   202  0028  0E7E               	swapf	126,w
   203  0029  0009               	retfie
   204  002A                     __end_of_LVD_Isr:	
   205  007E                     btemp	set	126	;btemp
   206  007E                     wtemp0	set	126
   207                           
   208                           	psect	intentry
   209  0004                     __pintentry:	
   210                           ;incstack = 0
   211                           ; Regs used in _LVD_Isr: []
   212                           
   213  0004                     interrupt_function:	
   214  007E                     saved_w	set	btemp
   215  0004  00FE               	movwf	btemp
   216  0005  0E03               	swapf	3,w
   217  0006  00F0               	movwf	??_LVD_Isr
   218  0007  080A               	movf	10,w
   219  0008  00F1               	movwf	??_LVD_Isr+1
   220  0009  118A  281F         	ljmp	_LVD_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            88      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _LVD_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _LVD_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LVD_Isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LVD_Isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LVD_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _LVD_Isr                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _LVD_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            58      0       0       8        0.0%
BANK3               58      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%
BANK2               50      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 30 11:21:10 2020

                    l717 001D                     _PIE2 008D          __end_of_LVD_Isr 002A  
                   _main 0010                     btemp 007E                     start 000B  
                  ?_main 0070                    _LVDIF 0068                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000D  
           __end_of_main 001F                   ??_main 0072                ??_LVD_Isr 0070  
                 _INTCON 000B                   _LVDCON 0097                   _OSCCON 008F  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0070  
             __pmaintext 0010               __pintentry 0004                  _LVD_Isr 001F  
                __ptext0 0000                  __ptext1 001F     end_of_initialization 000D  
    start_initialization 000D                ___latbits 0001                 ?_LVD_Isr 0070  
      interrupt_function 0004         __size_of_LVD_Isr 000B            __size_of_main 000F  
               intlevel1 0000               _OPTION_REG 0081  
