

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 31 14:07:46 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	79F123
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	pa_nodes0,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.45
    13                           ; Generated 16/11/2017 GMT
    14                           ; 
    15                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     
    47                           	psect	text0
    48  0000                     __ptext0:	
    49  009B                     _OPA0ADJ	set	155
    50  009A                     _OPA0CON	set	154
    51  0085                     _TRISA	set	133
    52                           
    53                           	psect	cinit
    54  07FD                     start_initialization:	
    55                           ; #config settings
    56                           
    57  07FD                     __initialization:	
    58  07FD                     end_of_initialization:	
    59                           ;End of C runtime variable initialization code
    60                           
    61  07FD                     __end_of__initialization:	
    62  07FD  0183               	clrf	3
    63  07FE  118A  2FD4         	ljmp	_main	;jump to C main() function
    64                           
    65                           	psect	cstackCOMMON
    66  0070                     __pcstackCOMMON:	
    67  0070                     ?_Set_OPA:	
    68  0070                     ?_DelayXus:	
    69                           ; 1 bytes @ 0x0
    70                           
    71  0070                     ??_DelayXus:	
    72                           ; 1 bytes @ 0x0
    73                           
    74  0070                     ?_main:	
    75                           ; 1 bytes @ 0x0
    76                           
    77  0070                     DelayXus@X:	
    78                           ; 1 bytes @ 0x0
    79                           
    80                           
    81                           ; 1 bytes @ 0x0
    82  0070                     	ds	1
    83  0071                     ??_Set_OPA:	
    84  0071                     ??_main:	
    85                           ; 1 bytes @ 0x1
    86                           
    87                           
    88                           	psect	maintext
    89  07D4                     __pmaintext:	
    90                           ; 1 bytes @ 0x1
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 20 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\OPA_Demo\OPA_Demo.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, status,2, status,0, pclath, cstack
   105 ;; Tracked objects:
   106 ;;		On entry : B00/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   110 ;;      Params:         0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0
   112 ;;      Temps:          0       0       0       0       0
   113 ;;      Totals:         0       0       0       0       0
   114 ;;Total ram usage:        0 bytes
   115 ;; Hardware stack levels required when called:    2
   116 ;; This function calls:
   117 ;;		_Set_OPA
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           
   124                           ;psect for function _main
   125  07D4                     _main:	
   126                           
   127                           ;incstack = 0
   128                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   129  07D4  0000               	nop	;# 
   130  07D5  0064               	clrwdt	;# 
   131                           
   132                           ;OPA_Demo.c: 25: TRISA = 0B00000111;
   133  07D6  3007               	movlw	7
   134  07D7  1683               	bsf	3,5	;RP0=1, select bank1
   135  07D8  1303               	bcf	3,6	;RP1=0, select bank1
   136  07D9  0085               	movwf	5	;volatile
   137                           
   138                           ;OPA_Demo.c: 27: Set_OPA();
   139  07DA  118A  27DF  118A   	fcall	_Set_OPA
   140  07DD                     l721:	
   141                           ;OPA_Demo.c: 29: while(1)
   142                           
   143  07DD  0064               	clrwdt	;# 
   144  07DE  2FDD               	goto	l721
   145  07DF                     __end_of_main:	
   146                           
   147                           	psect	text1
   148  07DF                     __ptext1:	
   149 ;; *************** function _Set_OPA *****************
   150 ;; Defined at:
   151 ;;		line 42 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\OPA_Demo\OPA_Demo.c"
   152 ;; Parameters:    Size  Location     Type
   153 ;;		None
   154 ;; Auto vars:     Size  Location     Type
   155 ;;		None
   156 ;; Return value:  Size  Location     Type
   157 ;;                  1    wreg      void 
   158 ;; Registers used:
   159 ;;		wreg, status,2, status,0, pclath, cstack
   160 ;; Tracked objects:
   161 ;;		On entry : 300/100
   162 ;;		On exit  : 300/100
   163 ;;		Unchanged: 0/0
   164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   165 ;;      Params:         0       0       0       0       0
   166 ;;      Locals:         0       0       0       0       0
   167 ;;      Temps:          0       0       0       0       0
   168 ;;      Totals:         0       0       0       0       0
   169 ;;Total ram usage:        0 bytes
   170 ;; Hardware stack levels used:    1
   171 ;; Hardware stack levels required when called:    1
   172 ;; This function calls:
   173 ;;		_DelayXus
   174 ;; This function is called by:
   175 ;;		_main
   176 ;; This function uses a non-reentrant model
   177 ;;
   178                           
   179                           
   180                           ;psect for function _Set_OPA
   181  07DF                     _Set_OPA:	
   182                           
   183                           ;OPA_Demo.c: 44: static bit OPA_Out;
   184                           ;OPA_Demo.c: 47: OPA0ADJ = 0B01111111;
   185                           
   186                           ;incstack = 0
   187                           ; Regs used in _Set_OPA: [wreg+status,2+status,0+pclath+cstack]
   188  07DF  307F               	movlw	127
   189  07E0  009B               	movwf	27	;volatile
   190                           
   191                           ;OPA_Demo.c: 48: OPA0CON = 0B11000000;
   192  07E1  30C0               	movlw	192
   193  07E2  009A               	movwf	26	;volatile
   194  07E3                     l1124:	
   195                           
   196                           ;OPA_Demo.c: 51: {
   197                           ;OPA_Demo.c: 52: DelayXus(10);
   198  07E3  300A               	movlw	10
   199  07E4  27F8  118A         	fcall	_DelayXus
   200                           
   201                           ;OPA_Demo.c: 54: if(0X80 & OPA0ADJ)
   202  07E6  1B9B               	btfsc	27,7	;volatile
   203  07E7  2FEF               	goto	l1138
   204                           
   205                           ;OPA_Demo.c: 56: else
   206                           ;OPA_Demo.c: 57: {
   207                           ;OPA_Demo.c: 58: OPA0ADJ--;
   208  07E8  039B               	decf	27,f	;volatile
   209                           
   210                           ;OPA_Demo.c: 60: if(!(0x1f & OPA0ADJ))
   211  07E9  081B               	movf	27,w	;volatile
   212  07EA  391F               	andlw	31
   213  07EB  1D03               	btfss	3,2
   214  07EC  2FE3               	goto	l1124
   215                           
   216                           ;OPA_Demo.c: 61: {
   217                           ;OPA_Demo.c: 62: OPA0ADJ = 0x10;
   218  07ED  3010               	movlw	16
   219  07EE  009B               	movwf	27	;volatile
   220  07EF                     l1138:	
   221                           ;OPA_Demo.c: 63: break;
   222                           
   223                           
   224                           ;OPA_Demo.c: 64: }
   225                           ;OPA_Demo.c: 65: }
   226                           ;OPA_Demo.c: 66: }
   227                           ;OPA_Demo.c: 68: OPA0ADJ &= 0x1f;
   228  07EF  301F               	movlw	31
   229  07F0  059B               	andwf	27,f	;volatile
   230                           
   231                           ;OPA_Demo.c: 70: if(0x20 & OPA0ADJ)
   232  07F1  1E9B               	btfss	27,5	;volatile
   233  07F2  2FF5               	goto	l735
   234                           
   235                           ;OPA_Demo.c: 71: {
   236                           ;OPA_Demo.c: 72: OPA0ADJ = 0x1f;
   237  07F3  301F               	movlw	31
   238  07F4  009B               	movwf	27	;volatile
   239  07F5                     l735:	
   240                           
   241                           ;OPA_Demo.c: 73: }
   242                           ;OPA_Demo.c: 75: OPA0CON = 0B11000000;
   243  07F5  30C0               	movlw	192
   244  07F6  009A               	movwf	26	;volatile
   245  07F7  0008               	return
   246  07F8                     __end_of_Set_OPA:	
   247  07F8                     __ptext2:	
   248 ;; *************** function _DelayXus *****************
   249 ;; Defined at:
   250 ;;		line 79 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\OPA_Demo\OPA_Demo.c"
   251 ;; Parameters:    Size  Location     Type
   252 ;;  X               1    wreg     unsigned char 
   253 ;; Auto vars:     Size  Location     Type
   254 ;;  X               1    0[COMMON] unsigned char 
   255 ;; Return value:  Size  Location     Type
   256 ;;                  1    wreg      void 
   257 ;; Registers used:
   258 ;;		wreg, status,2, status,0
   259 ;; Tracked objects:
   260 ;;		On entry : 300/100
   261 ;;		On exit  : 300/100
   262 ;;		Unchanged: 300/0
   263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   264 ;;      Params:         0       0       0       0       0
   265 ;;      Locals:         1       0       0       0       0
   266 ;;      Temps:          0       0       0       0       0
   267 ;;      Totals:         1       0       0       0       0
   268 ;;Total ram usage:        1 bytes
   269 ;; Hardware stack levels used:    1
   270 ;; This function calls:
   271 ;;		Nothing
   272 ;; This function is called by:
   273 ;;		_Set_OPA
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           
   278                           ;psect for function _DelayXus
   279  07F8                     _DelayXus:	
   280                           
   281                           ;incstack = 0
   282                           ; Regs used in _DelayXus: [wreg+status,2+status,0]
   283                           ;DelayXus@X stored from wreg
   284  07F8  00F0               	movwf	DelayXus@X
   285  07F9                     l1120:	
   286                           ;OPA_Demo.c: 81: while(X--);
   287                           
   288  07F9  03F0               	decf	DelayXus@X,f
   289  07FA  0F70               	incfsz	DelayXus@X,w
   290  07FB  2FF9               	goto	l1120
   291  07FC  0008               	return
   292  07FD                     __end_of_DelayXus:	
   293  007E                     btemp	set	126	;btemp
   294  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       1
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            88      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Set_OPA->_DelayXus

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                            _Set_OPA
 ---------------------------------------------------------------------------------
 (1) _Set_OPA                                              0     0      0      15
                           _DelayXus
 ---------------------------------------------------------------------------------
 (2) _DelayXus                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Set_OPA
     _DelayXus

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            58      0       0       8        0.0%
BANK3               58      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%
BANK2               50      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 31 14:07:46 2020

                    l721 07DD                      l735 07F5                     l1120 07F9  
                   l1124 07E3                     l1138 07EF                     _main 07D4  
                   btemp 007E                     start 0000          __end_of_Set_OPA 07F8  
                  ?_main 0070                    _TRISA 0085                    status 0003  
                  wtemp0 007E         __end_of_DelayXus 07FD          __initialization 07FD  
           __end_of_main 07DF                   ??_main 0071                ??_Set_OPA 0071  
__end_of__initialization 07FD           __pcstackCOMMON 0070                ?_DelayXus 0070  
             __pmaintext 07D4                  _OPA0ADJ 009B                  _OPA0CON 009A  
             ??_DelayXus 0070                  _Set_OPA 07DF                  __ptext0 0000  
                __ptext1 07DF                  __ptext2 07F8     end_of_initialization 07FD  
              DelayXus@X 0070      start_initialization 07FD        __size_of_DelayXus 0005  
              ___latbits 0001                 ?_Set_OPA 0070                 _DelayXus 07F8  
       __size_of_Set_OPA 0019            __size_of_main 000B  
