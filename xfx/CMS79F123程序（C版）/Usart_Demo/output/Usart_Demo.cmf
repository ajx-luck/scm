%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$Usart_Demo.obj
cinit CODE 0 F F D 2
text1 CODE 0 67 67 13 2
text2 CODE 0 4C 4C 1B 2
maintext CODE 0 1C 1C 30 2
cstackCOMMON COMMON 1 7A 7A 3 1
intentry CODE 0 4 4 9 2
bssCOMMON COMMON 1 70 70 A 1
$startup.obj
reset_vec CODE 0 0 0 2 2
end_init CODE 0 D D 2 2
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 120-16F 1
RAM 198-1EF 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 120-16F 1
BANK3 198-1EF 1
CONST 2-3 2
CONST 7A-FFF 2
ENTRY 2-3 2
ENTRY 7A-FFF 2
IDLOC 2000-2003 2
STACK 198-1EF 1
CODE 2-3 2
CODE 7A-FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-11F 1
SFR3 180-197 1
COMMON 7D-7D 1
CONFIG 2007-2008 2
STRCODE 2-3 2
STRCODE 7A-FFF 2
STRING 2-3 2
STRING 7A-FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$Usart_Demo.obj
F cinit CODE >88:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
F cinit CODE >91:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
F cinit CODE >111:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
10 cinit CODE >112:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
11 cinit CODE >113:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
12 cinit CODE >114:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
13 cinit CODE >115:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
14 cinit CODE >116:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
15 cinit CODE >117:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
16 cinit CODE >118:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
17 cinit CODE >119:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
18 cinit CODE >120:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
19 cinit CODE >126:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
19 cinit CODE >128:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
1A cinit CODE >129:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\Usart_Demo.as
4 intentry CODE >87:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
4C text2 CODE >87:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
4C text2 CODE >95:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
50 text2 CODE >99:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
55 text2 CODE >102:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
56 text2 CODE >100:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
57 text2 CODE >102:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
59 text2 CODE >104:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
5A text2 CODE >107:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
5C text2 CODE >109:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
5D text2 CODE >110:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
5E text2 CODE >114:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
67 text1 CODE >125:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
67 text1 CODE >127:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
6A text1 CODE >129:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
6B text1 CODE >130:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
6C text1 CODE >132:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
6E text1 CODE >133:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
70 text1 CODE >134:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
71 text1 CODE >135:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
73 text1 CODE >136:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
75 text1 CODE >137:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
77 text1 CODE >138:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
79 text1 CODE >139:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
1C maintext CODE >35:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
1C maintext CODE >37:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
1D maintext CODE >38:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
1E maintext CODE >40:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
22 maintext CODE >41:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
23 maintext CODE >43:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
25 maintext CODE >44:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
27 maintext CODE >45:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
29 maintext CODE >46:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
2B maintext CODE >48:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
2C maintext CODE >49:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
2E maintext CODE >52:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
31 maintext CODE >55:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
33 maintext CODE >58:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
33 maintext CODE >60:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
34 maintext CODE >62:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
38 maintext CODE >68:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
3B maintext CODE >70:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
41 maintext CODE >72:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
44 maintext CODE >75:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
45 maintext CODE >72:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
46 maintext CODE >74:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
47 maintext CODE >75:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
4A maintext CODE >77:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\Async_Usart_Demo.c
$startup.obj
D end_init CODE >79:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
D init CODE >76:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
0 functab ENTRY >42:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
0 functab ENTRY >43:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
0 functab ENTRY >44:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
0 functab ENTRY >45:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
0 functab ENTRY >46:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
0 functab ENTRY >47:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
0 reset_vec CODE >66:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
0 reset_vec CODE >71:C:\mcuproject\scm\xfx\CMS79F123³ÌÐò£¨C°æ£©\Usart_Demo\output\startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___latbits 1 0 ABS 0 - Usart_Demo.obj
__Hspace_0 7A 0 ABS 0 - -
__Hspace_1 7D 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
__Hstrings 0 0 ABS 0 strings -
_CREN C4 0 ABS 0 - Usart_Demo.obj
_OERR C1 0 ABS 0 - Usart_Demo.obj
_PIE1 8C 0 ABS 0 - Usart_Demo.obj
_PIE2 8D 0 ABS 0 - Usart_Demo.obj
_PIR1 C 0 ABS 0 - Usart_Demo.obj
_PIR2 D 0 ABS 0 - Usart_Demo.obj
_RCIE 465 0 ABS 0 - Usart_Demo.obj
_RCIF 65 0 ABS 0 - Usart_Demo.obj
_SCKP 4C3 0 ABS 0 - Usart_Demo.obj
_SPEN C7 0 ABS 0 - Usart_Demo.obj
_SYNC 4C4 0 ABS 0 - Usart_Demo.obj
_TRMT 4C1 0 ABS 0 - Usart_Demo.obj
_TXEN 4C5 0 ABS 0 - Usart_Demo.obj
_TXIE 464 0 ABS 0 - Usart_Demo.obj
___sp 0 0 STACK 2 stack startup.obj
_main 38 0 CODE 0 maintext Usart_Demo.obj
btemp 7E 0 ABS 0 - Usart_Demo.obj
start 1A 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - Usart_Demo.obj
__HbssCOMMON 0 0 ABS 0 bssCOMMON -
__Hpowerup 0 0 CODE 0 powerup -
__size_of_Set_Usart_Async 0 0 ABS 0 - Usart_Demo.obj
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
__LbssCOMMON 0 0 ABS 0 bssCOMMON -
wtemp0 7E 0 ABS 0 - Usart_Demo.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
_Sendbuffer 70 0 COMMON 1 bssCOMMON Usart_Demo.obj
__Hpa_nodes0 0 0 ABS 0 pa_nodes0 -
__Lmaintext 0 0 ABS 0 maintext -
_sendcount 79 0 COMMON 1 bssCOMMON Usart_Demo.obj
_INTCON B 0 ABS 0 - Usart_Demo.obj
__Lpa_nodes0 0 0 ABS 0 pa_nodes0 -
start_initialization 1E 0 CODE 0 cinit Usart_Demo.obj
_Recebuffer 74 0 COMMON 1 bssCOMMON Usart_Demo.obj
_OSCCON 8F 0 ABS 0 - Usart_Demo.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 ABS 0 bank2 -
__Hbank3 0 0 ABS 0 bank3 -
__Hcinit 38 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
__Hcommon 0 0 ABS 0 common -
__Hconfig 0 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 ABS 0 bank2 -
__Lbank3 0 0 ABS 0 bank3 -
__Lcinit 1E 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 1A 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 1A 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
__S0 7A 0 ABS 0 - -
__S1 7D 0 ABS 0 - -
__S2 0 0 ABS 0 - -
_rececount 78 0 COMMON 1 bssCOMMON Usart_Demo.obj
saved_w 7E 0 ABS 0 - Usart_Demo.obj
__Lintentry 8 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
__pmaintext 38 0 CODE 0 maintext Usart_Demo.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 0 config -
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__end_of_Usart_Isr CE 0 CODE 0 text2 Usart_Demo.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__pbssCOMMON 70 0 COMMON 1 bssCOMMON Usart_Demo.obj
__size_of_Usart_Isr 0 0 ABS 0 - Usart_Demo.obj
__Lend_init 1A 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization 32 0 CODE 0 cinit Usart_Demo.obj
__Hintentry 1A 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 4 0 CODE 0 reset_vec -
_Usart_Isr 98 0 CODE 0 text2 Usart_Demo.obj
__ptext0 0 0 CODE 0 text0 Usart_Demo.obj
__ptext1 CE 0 CODE 0 text1 Usart_Demo.obj
__ptext2 98 0 CODE 0 text2 Usart_Demo.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__end_of_Set_Usart_Async F4 0 CODE 0 text1 Usart_Demo.obj
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of__initialization 32 0 CODE 0 cinit Usart_Demo.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__pcstackCOMMON 7A 0 COMMON 1 cstackCOMMON Usart_Demo.obj
__Hend_init 1E 0 CODE 0 end_init -
__end_of_main 98 0 CODE 0 maintext Usart_Demo.obj
_PORTA 5 0 ABS 0 - Usart_Demo.obj
_RCREG 1A 0 ABS 0 - Usart_Demo.obj
_RX9EN C6 0 ABS 0 - Usart_Demo.obj
_SPBRG 99 0 ABS 0 - Usart_Demo.obj
_TRISA 85 0 ABS 0 - Usart_Demo.obj
_TX9EN 4C6 0 ABS 0 - Usart_Demo.obj
_TXREG 19 0 ABS 0 - Usart_Demo.obj
_Set_Usart_Async CE 0 CODE 0 text1 Usart_Demo.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
interrupt_function 8 0 CODE 0 intentry Usart_Demo.obj
__pintentry 8 0 CODE 0 intentry Usart_Demo.obj
__initialization 1E 0 CODE 0 cinit Usart_Demo.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
intentry 0 4 8 76 2
reset_vec 0 0 0 2 2
bssCOMMON 1 70 70 D 1
