

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Thu Jul 30 17:29:17 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	79F123
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	pa_nodes0,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 1.45
    15                           ; Generated 16/11/2017 GMT
    16                           ; 
    17                           ; Copyright 漏 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     
    49                           	psect	text0
    50  0000                     __ptext0:	
    51  001F                     _ADCON0	set	31
    52  000B                     _INTCON	set	11
    53  0006                     _PORTB	set	6
    54  0005                     _PORTA	set	5
    55  0067                     _RAIF	set	103
    56  005E                     _PEIE	set	94
    57  005F                     _GIE	set	95
    58  0095                     _WPUB	set	149
    59  008F                     _OSCCON	set	143
    60  0087                     _IOCA	set	135
    61  0086                     _TRISB	set	134
    62  0085                     _TRISA	set	133
    63  0081                     _OPTION_REG	set	129
    64  0467                     _RAIE	set	1127
    65  0105                     _WDTCON	set	261
    66  018E                     _WPUA	set	398
    67  018C                     _EECON1	set	396
    68                           
    69                           	psect	cinit
    70  000D                     start_initialization:	
    71                           ; #config settings
    72                           
    73  000D                     __initialization:	
    74  000D                     end_of_initialization:	
    75                           ;End of C runtime variable initialization code
    76                           
    77  000D                     __end_of__initialization:	
    78  000D  0183               	clrf	3
    79  000E  118A  285B         	ljmp	_main	;jump to C main() function
    80                           
    81                           	psect	cstackCOMMON
    82  0070                     __pcstackCOMMON:	
    83  0070                     ?_Init_System:	
    84  0070                     ?_Sleep_Mode:	
    85                           ; 1 bytes @ 0x0
    86                           
    87  0070                     ?_main:	
    88                           ; 1 bytes @ 0x0
    89                           
    90  0070                     ?_PA_Isr:	
    91                           ; 1 bytes @ 0x0
    92                           
    93  0070                     ??_PA_Isr:	
    94                           ; 1 bytes @ 0x0
    95                           
    96                           
    97                           ; 1 bytes @ 0x0
    98  0070                     	ds	2
    99  0072                     ??_Init_System:	
   100  0072                     ??_Sleep_Mode:	
   101                           ; 1 bytes @ 0x2
   102                           
   103  0072                     ??_main:	
   104                           ; 1 bytes @ 0x2
   105                           
   106                           
   107                           	psect	maintext
   108  005B                     __pmaintext:	
   109                           ; 1 bytes @ 0x2
   110 ;;
   111 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   112 ;;
   113 ;; *************** function _main *****************
   114 ;; Defined at:
   115 ;;		line 23 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\Sleep_Demo\Sleep_Demo.c"
   116 ;; Parameters:    Size  Location     Type
   117 ;;		None
   118 ;; Auto vars:     Size  Location     Type
   119 ;;		None
   120 ;; Return value:  Size  Location     Type
   121 ;;                  1    wreg      void 
   122 ;; Registers used:
   123 ;;		wreg, status,2, status,0, pclath, cstack
   124 ;; Tracked objects:
   125 ;;		On entry : B00/0
   126 ;;		On exit  : 300/0
   127 ;;		Unchanged: 0/0
   128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   129 ;;      Params:         0       0       0       0       0
   130 ;;      Locals:         0       0       0       0       0
   131 ;;      Temps:          0       0       0       0       0
   132 ;;      Totals:         0       0       0       0       0
   133 ;;Total ram usage:        0 bytes
   134 ;; Hardware stack levels required when called:    3
   135 ;; This function calls:
   136 ;;		_Init_System
   137 ;;		_Sleep_Mode
   138 ;; This function is called by:
   139 ;;		Startup code after reset
   140 ;; This function uses a non-reentrant model
   141 ;;
   142                           
   143                           
   144                           ;psect for function _main
   145  005B                     _main:	
   146                           
   147                           ;Sleep_Demo.c: 25: Init_System();
   148                           
   149                           ;incstack = 0
   150                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   151  005B  118A  203B  118A   	fcall	_Init_System
   152  005E                     l721:	
   153                           ;Sleep_Demo.c: 26: while(1)
   154                           
   155  005E  0064               	clrwdt	;# 
   156                           
   157                           ;Sleep_Demo.c: 30: Sleep_Mode();
   158  005F  118A  2010  118A   	fcall	_Sleep_Mode
   159  0062  285E               	goto	l721
   160  0063                     __end_of_main:	
   161                           
   162                           	psect	text1
   163  0010                     __ptext1:	
   164 ;; *************** function _Sleep_Mode *****************
   165 ;; Defined at:
   166 ;;		line 42 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\Sleep_Demo\Sleep_Demo.c"
   167 ;; Parameters:    Size  Location     Type
   168 ;;		None
   169 ;; Auto vars:     Size  Location     Type
   170 ;;		None
   171 ;; Return value:  Size  Location     Type
   172 ;;                  1    wreg      void 
   173 ;; Registers used:
   174 ;;		wreg, status,2, status,0, pclath, cstack
   175 ;; Tracked objects:
   176 ;;		On entry : 0/0
   177 ;;		On exit  : 300/0
   178 ;;		Unchanged: 0/0
   179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   180 ;;      Params:         0       0       0       0       0
   181 ;;      Locals:         0       0       0       0       0
   182 ;;      Temps:          0       0       0       0       0
   183 ;;      Totals:         0       0       0       0       0
   184 ;;Total ram usage:        0 bytes
   185 ;; Hardware stack levels used:    1
   186 ;; Hardware stack levels required when called:    2
   187 ;; This function calls:
   188 ;;		_Init_System
   189 ;; This function is called by:
   190 ;;		_main
   191 ;; This function uses a non-reentrant model
   192 ;;
   193                           
   194                           
   195                           ;psect for function _Sleep_Mode
   196  0010                     _Sleep_Mode:	
   197                           
   198                           ;Sleep_Demo.c: 44: INTCON = 0;
   199                           
   200                           ;incstack = 0
   201                           ; Regs used in _Sleep_Mode: [wreg+status,2+status,0+pclath+cstack]
   202  0010  018B               	clrf	11	;volatile
   203                           
   204                           ;Sleep_Demo.c: 46: OPTION_REG = 0;
   205  0011  1683               	bsf	3,5	;RP0=1, select bank1
   206  0012  1303               	bcf	3,6	;RP1=0, select bank1
   207  0013  0181               	clrf	1	;volatile
   208                           
   209                           ;Sleep_Demo.c: 48: TRISA = 0B00000001;
   210  0014  3001               	movlw	1
   211  0015  0085               	movwf	5	;volatile
   212                           
   213                           ;Sleep_Demo.c: 49: PORTA = 0B00000000;
   214  0016  1283               	bcf	3,5	;RP0=0, select bank0
   215  0017  0185               	clrf	5	;volatile
   216                           
   217                           ;Sleep_Demo.c: 50: WPUA = 0B00000001;
   218  0018  1683               	bsf	3,5	;RP0=1, select bank3
   219  0019  1703               	bsf	3,6	;RP1=1, select bank3
   220  001A  008E               	movwf	14	;volatile
   221                           
   222                           ;Sleep_Demo.c: 52: TRISB = 0B00000000;
   223  001B  1303               	bcf	3,6	;RP1=0, select bank1
   224  001C  0186               	clrf	6	;volatile
   225                           
   226                           ;Sleep_Demo.c: 53: PORTB = 0B00000000;
   227  001D  1283               	bcf	3,5	;RP0=0, select bank0
   228  001E  0186               	clrf	6	;volatile
   229                           
   230                           ;Sleep_Demo.c: 54: WPUB = 0B00000000;
   231  001F  1683               	bsf	3,5	;RP0=1, select bank1
   232  0020  0195               	clrf	21	;volatile
   233                           
   234                           ;Sleep_Demo.c: 58: IOCA = 0B00000001;
   235  0021  0087               	movwf	7	;volatile
   236                           
   237                           ;Sleep_Demo.c: 59: RAIF = 0;
   238  0022  1283               	bcf	3,5	;RP0=0, select bank0
   239  0023  138C               	bcf	12,7	;volatile
   240                           
   241                           ;Sleep_Demo.c: 60: RAIE = 1;
   242  0024  1683               	bsf	3,5	;RP0=1, select bank1
   243  0025  178C               	bsf	12,7	;volatile
   244                           
   245                           ;Sleep_Demo.c: 61: PEIE = 1;
   246  0026  170B               	bsf	11,6	;volatile
   247                           
   248                           ;Sleep_Demo.c: 62: GIE = 1;
   249  0027  178B               	bsf	11,7	;volatile
   250                           
   251                           ;Sleep_Demo.c: 63: ADCON0 = 0;
   252  0028  1283               	bcf	3,5	;RP0=0, select bank0
   253  0029  019F               	clrf	31	;volatile
   254                           
   255                           ;Sleep_Demo.c: 64: EECON1 = 0;
   256  002A  1683               	bsf	3,5	;RP0=1, select bank3
   257  002B  1703               	bsf	3,6	;RP1=1, select bank3
   258  002C  018C               	clrf	12	;volsfr
   259                           
   260                           ;Sleep_Demo.c: 65: WDTCON = 0;
   261  002D  1283               	bcf	3,5	;RP0=0, select bank2
   262  002E  0185               	clrf	5	;volatile
   263                           
   264                           ;Sleep_Demo.c: 67: PORTA;
   265  002F  1303               	bcf	3,6	;RP1=0, select bank0
   266  0030  0805               	movf	5,w	;volatile
   267  0031  0064               	clrwdt	;# 
   268  0032  0063               	sleep	;# 
   269  0033  0000               	nop	;# 
   270  0034  0000               	nop	;# 
   271  0035  0064               	clrwdt	;# 
   272                           
   273                           ;Sleep_Demo.c: 75: WDTCON = 0x01;
   274  0036  3001               	movlw	1
   275  0037  1283               	bcf	3,5	;RP0=0, select bank2
   276  0038  1703               	bsf	3,6	;RP1=1, select bank2
   277  0039  0085               	movwf	5	;volatile
   278                           
   279                           ;Sleep_Demo.c: 76: Init_System();
   280  003A  283B               	ljmp	l1112
   281  003B                     __end_of_Sleep_Mode:	
   282  003B                     __ptext2:	
   283 ;; *************** function _Init_System *****************
   284 ;; Defined at:
   285 ;;		line 86 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\Sleep_Demo\Sleep_Demo.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2
   294 ;; Tracked objects:
   295 ;;		On entry : 100/0
   296 ;;		On exit  : 300/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          0       0       0       0       0
   302 ;;      Totals:         0       0       0       0       0
   303 ;;Total ram usage:        0 bytes
   304 ;; Hardware stack levels used:    1
   305 ;; Hardware stack levels required when called:    1
   306 ;; This function calls:
   307 ;;		Nothing
   308 ;; This function is called by:
   309 ;;		_main
   310 ;;		_Sleep_Mode
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _Init_System
   316  003B                     _Init_System:	
   317  003B                     l1112:	
   318                           ;incstack = 0
   319                           ; Regs used in _Init_System: [wreg+status,2]
   320                           
   321  003B  0000               	nop	;# 
   322  003C  0064               	clrwdt	;# 
   323                           
   324                           ;Sleep_Demo.c: 90: INTCON = 0;
   325  003D  018B               	clrf	11	;volatile
   326                           
   327                           ;Sleep_Demo.c: 91: OSCCON = 0X71;
   328  003E  3071               	movlw	113
   329  003F  1683               	bsf	3,5	;RP0=1, select bank1
   330  0040  1303               	bcf	3,6	;RP1=0, select bank1
   331  0041  008F               	movwf	15	;volatile
   332                           
   333                           ;Sleep_Demo.c: 92: OPTION_REG = 0;
   334  0042  0181               	clrf	1	;volatile
   335                           
   336                           ;Sleep_Demo.c: 94: WPUA = 0B00000001;
   337  0043  3001               	movlw	1
   338  0044  1703               	bsf	3,6	;RP1=1, select bank3
   339  0045  008E               	movwf	14	;volatile
   340                           
   341                           ;Sleep_Demo.c: 95: WPUB = 0B00000000;
   342  0046  1303               	bcf	3,6	;RP1=0, select bank1
   343  0047  0195               	clrf	21	;volatile
   344                           
   345                           ;Sleep_Demo.c: 97: TRISA = 0B00000001;
   346  0048  0085               	movwf	5	;volatile
   347                           
   348                           ;Sleep_Demo.c: 98: TRISB = 0B00000000;
   349  0049  0186               	clrf	6	;volatile
   350                           
   351                           ;Sleep_Demo.c: 100: PORTA = 0B00000000;
   352  004A  1283               	bcf	3,5	;RP0=0, select bank0
   353  004B  0185               	clrf	5	;volatile
   354                           
   355                           ;Sleep_Demo.c: 101: PORTB = 0B00000000;
   356  004C  0186               	clrf	6	;volatile
   357  004D  0008               	return
   358  004E                     __end_of_Init_System:	
   359                           
   360                           	psect	text3
   361  004E                     __ptext3:	
   362 ;; *************** function _PA_Isr *****************
   363 ;; Defined at:
   364 ;;		line 111 in file "E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\Sleep_Demo\Sleep_Demo.c"
   365 ;; Parameters:    Size  Location     Type
   366 ;;		None
   367 ;; Auto vars:     Size  Location     Type
   368 ;;		None
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 300/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         0       0       0       0       0
   379 ;;      Locals:         0       0       0       0       0
   380 ;;      Temps:          2       0       0       0       0
   381 ;;      Totals:         2       0       0       0       0
   382 ;;Total ram usage:        2 bytes
   383 ;; Hardware stack levels used:    1
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		Interrupt level 1
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _PA_Isr
   393  004E                     _PA_Isr:	
   394                           
   395                           ;Sleep_Demo.c: 113: if(RAIF)
   396  004E  1283               	bcf	3,5	;RP0=0, select bank0
   397  004F  1303               	bcf	3,6	;RP1=0, select bank0
   398  0050  1F8C               	btfss	12,7	;volatile
   399  0051  2854               	goto	i1l736
   400                           
   401                           ;Sleep_Demo.c: 114: {
   402                           ;Sleep_Demo.c: 115: PORTA;
   403  0052  0805               	movf	5,w	;volatile
   404                           
   405                           ;Sleep_Demo.c: 116: RAIF = 0;
   406  0053  138C               	bcf	12,7	;volatile
   407  0054                     i1l736:	
   408  0054  0871               	movf	??_PA_Isr+1,w
   409  0055  008A               	movwf	10
   410  0056  0E70               	swapf	??_PA_Isr^(0+-128),w
   411  0057  0083               	movwf	3
   412  0058  0EFE               	swapf	126,f
   413  0059  0E7E               	swapf	126,w
   414  005A  0009               	retfie
   415  005B                     __end_of_PA_Isr:	
   416  007E                     btemp	set	126	;btemp
   417  007E                     wtemp0	set	126
   418                           
   419                           	psect	intentry
   420  0004                     __pintentry:	
   421                           ;incstack = 0
   422                           ; Regs used in _PA_Isr: [wreg]
   423                           
   424  0004                     interrupt_function:	
   425  007E                     saved_w	set	btemp
   426  0004  00FE               	movwf	btemp
   427  0005  0E03               	swapf	3,w
   428  0006  00F0               	movwf	??_PA_Isr
   429  0007  080A               	movf	10,w
   430  0008  00F1               	movwf	??_PA_Isr+1
   431  0009  118A  284E         	ljmp	_PA_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            88      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _PA_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _PA_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _PA_Isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _PA_Isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _PA_Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _Init_System
                         _Sleep_Mode
 ---------------------------------------------------------------------------------
 (1) _Sleep_Mode                                           0     0      0       0
                        _Init_System
 ---------------------------------------------------------------------------------
 (2) _Init_System                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _PA_Isr                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_System
   _Sleep_Mode
     _Init_System

 _PA_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            58      0       0       8        0.0%
BANK3               58      0       0       9        0.0%
BITBANK2            50      0       0      10        0.0%
BANK2               50      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Jul 30 17:29:17 2020

                    l721 005E                      _GIE 005F                     l1112 003B  
                   _IOCA 0087                     _RAIE 0467                     _PEIE 005E  
                   _RAIF 0067                     _WPUA 018E                     _WPUB 0095  
                   _main 005B                     btemp 007E                     start 000B  
          ??_Init_System 0072                    ?_main 0070                    i1l736 0054  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000D             __end_of_main 0063  
                 ??_main 0072      __end_of_Init_System 004E                   _ADCON0 001F  
                 _EECON1 018C                   _INTCON 000B                   _OSCCON 008F  
                 _PA_Isr 004E                   _WDTCON 0105               _Sleep_Mode 0010  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0070  
            _Init_System 003B                  ?_PA_Isr 0070              ?_Sleep_Mode 0070  
             __pmaintext 005B               __pintentry 0004          __size_of_PA_Isr 000D  
                __ptext0 0000                  __ptext1 0010                  __ptext2 003B  
                __ptext3 004E      __size_of_Sleep_Mode 002B     end_of_initialization 000D  
         __end_of_PA_Isr 005B             ?_Init_System 0070      start_initialization 000D  
               ??_PA_Isr 0070             ??_Sleep_Mode 0072                ___latbits 0001  
     __end_of_Sleep_Mode 003B        interrupt_function 0004     __size_of_Init_System 0013  
          __size_of_main 0008                 intlevel1 0000               _OPTION_REG 0081  
