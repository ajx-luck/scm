---- E:\ZW PROJECT\DEMO程序\模板\79F系列_Demo(C语言)\CMS79F123程序（C版）\TIMER\Timer0_Demo.c ----------------------------------------------------------------------
1:                /*-------------------------------------------
2:                功能：TMR0演示
3:                版本：V1.0
4:                日期：2020.06.20 
5:                
6:                *本程序由 中微半导体 &应用支持部& 编写整理
7:                *公司网址 www.mcu.com.cn
8:                *技术支持QQ 3001082102  罗工
9:                            3001030138	莫工
10:               -------------------------------------------*/
11:               
12:               #include <cms.h>
13:               
14:               void main()
  0010    0000    NOP
  0011    0064    CLRWDT
15:               {
16:               	asm("nop");
17:               	asm("clrwdt");
18:               	
19:               	OSCCON = 0x71;			//16MHZ,内部振荡器用作系统时钟，Fsoc/1，4T系统，每条指令0.25us
  0012    3071    LDIA	0x71
  0013    1683    SETB	0x3,5
  0014    1303    CLRB	0x3,6
  0015    008F    LD	0xF,A
20:               //250us中断初始化
21:               //---------------------------------------	
22:               	OPTION_REG = 0x01;		//Timer0预分频比为1:4，每个值0.25uS*4=1uS
  0016    3001    LDIA	0x1
  0017    0081    LD	0x1,A
23:               	TMR0 = 6;				//赋予初始值
  0018    3006    LDIA	0x6
  0019    1283    CLRB	0x3,5
  001A    0081    LD	0x1,A
24:               	INTCON = 0xA0;			//允许所有未被屏蔽的中断、禁止外设中断，使能Timer0中断
  001B    30A0    LDIA	0xA0
  001C    008B    LD	0xB,A
25:               //---------------------------------------		
26:               	
27:               	TRISB = 0x00;
  001D    1683    SETB	0x3,5
  001E    0186    CLR	0x6
28:               	PORTB = 0x00;
  001F    1283    CLRB	0x3,5
  0020    0186    CLR	0x6
29:               
30:               	while(1)			
  0021    0064    CLRWDT
  0022    2821    JP	0x21
31:               	{
32:               		asm("clrwdt");
33:               	}
34:               }
35:               
36:               /***********************************************
37:               函数名称：Timer0_Isr
38:               函数功能：中断服务
39:               入口参数：无
40:               出口参数：无
41:               备注：
42:               ************************************************/
43:               void interrupt Timer0_Isr()
44:               {
45:               	if(T0IF)
  0023    1D0B    SNZB	0xB,2
  0024    282C    JP	0x2C
46:               	{
47:               	//---------------------------------------
48:               		TMR0 += 8;		//在操作TIME的时候,TIME是不计数的，一般为两个周期，所以多给两个数
  0025    3008    LDIA	0x8
  0026    1283    CLRB	0x3,5
  0027    1303    CLRB	0x3,6
  0028    0781    ADDR	0x1
49:               	//---------------------------------------
50:               			
51:               		T0IF = 0;			//清中断标志位
  0029    110B    CLRB	0xB,2
52:               		
53:               		PORTB ^= 0xff;
  002A    30FF    LDIA	0xFF
  002B    0686    XORR	0x6
  002C    0871    LD	A,0x71
  002D    008A    LD	0xA,A
  002E    0E70    SWAPA	0x70
  002F    0083    LD	0x3,A
  0030    0EFE    SWAPR	0x7E
  0031    0E7E    SWAPA	0x7E
  0032    0009    RETI
54:               	}
55:               }
---- stringtab ------------------------------------------------------------------
---- reset_enter ------------------------------------------------------------------
  0000    118A    CLRB	0xA,3
  0001    280B    JP	0xB
  000B    118A    CLRB	0xA,3
  000C    280D    JP	0xD
---- start_initialization ------------------------------------------------------------------
---- interrupt_function_enter ----------------------------------------------------------
  0004    00FE    LD	0x7E,A
  0005    0E03    SWAPA	0x3
  0006    00F0    LD	0x70,A
  0007    080A    LD	A,0xA
  0008    00F1    LD	0x71,A
  0009    118A    CLRB	0xA,3
  000A    2823    JP	0x23
---- common_function ------------------------------------------------------------------
  000D    0183    CLR	0x3
  000E    118A    CLRB	0xA,3
  000F    2810    JP	0x10
