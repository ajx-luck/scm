%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$startup.obj
end_init CODE 0 0 0 2 2
$EEPRom_Demo.obj
cinit CODE 0 7FB 7FB 5 2
text1 CODE 0 7AB 7AB 28 2
text2 CODE 0 79C 79C F 2
nvCOMMON COMMON 1 74 74 2 1
maintext CODE 0 7D3 7D3 28 2
cstackCOMMON COMMON 1 70 70 4 1
bssCOMMON COMMON 1 76 76 2 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 20-6F 1
RAM A0-EF 1
RAM 120-16F 1
RAM 198-1EF 1
BANK0 20-6F 1
BANK1 A0-EF 1
BANK2 120-16F 1
BANK3 198-1EF 1
CONST 2-79B 2
CONST 800-FFF 2
ENTRY 2-79B 2
ENTRY 800-FFF 2
IDLOC 2000-2003 2
STACK 198-1EF 1
CODE 2-79B 2
CODE 800-FFF 2
SFR0 0-1F 1
SFR1 80-9F 1
SFR2 100-11F 1
SFR3 180-197 1
COMMON 78-7D 1
CONFIG 2007-2008 2
STRCODE 2-79B 2
STRCODE 800-FFF 2
STRING 2-79B 2
STRING 800-FFF 2
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$startup.obj
0 end_init CODE >75:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
0 init CODE >72:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
0 functab ENTRY >42:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
0 functab ENTRY >43:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
0 functab ENTRY >44:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
0 functab ENTRY >45:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
0 functab ENTRY >46:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
0 functab ENTRY >47:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
0 reset_vec CODE >66:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\startup.as
$EEPRom_Demo.obj
7FB cinit CODE >59:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\EEPRom_Demo.as
7FB cinit CODE >62:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\EEPRom_Demo.as
7FB cinit CODE >73:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\EEPRom_Demo.as
7FC cinit CODE >74:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\EEPRom_Demo.as
7FD cinit CODE >80:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\EEPRom_Demo.as
7FD cinit CODE >82:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\EEPRom_Demo.as
7FE cinit CODE >83:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\output\EEPRom_Demo.as
79C text2 CODE >107:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
79C text2 CODE >110:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7A0 text2 CODE >111:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7A2 text2 CODE >118:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7A3 text2 CODE >119:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7A4 text2 CODE >120:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7A5 text2 CODE >123:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7AA text2 CODE >127:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7AB text1 CODE >58:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7AB text1 CODE >60:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7AC text1 CODE >62:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7B0 text1 CODE >63:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7B2 text1 CODE >64:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7B4 text1 CODE >66:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7B5 text1 CODE >68:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7B8 text1 CODE >70:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7B9 text1 CODE >71:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7BA text1 CODE >72:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7BB text1 CODE >73:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7BB text1 CODE >82:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7BD text1 CODE >75:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7BE text1 CODE >76:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7C0 text1 CODE >79:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7C1 text1 CODE >80:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7C2 text1 CODE >84:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7C6 text1 CODE >85:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7C8 text1 CODE >86:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7C9 text1 CODE >87:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7CA text1 CODE >88:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7CB text1 CODE >89:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7CC text1 CODE >90:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7CF text1 CODE >92:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7D0 text1 CODE >94:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7D3 maintext CODE >27:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7D3 maintext CODE >29:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7D4 maintext CODE >30:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7D5 maintext CODE >33:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7D8 maintext CODE >37:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7E4 maintext CODE >34:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7E4 maintext CODE >35:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7E5 maintext CODE >36:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7E6 maintext CODE >37:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7F0 maintext CODE >40:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7F0 maintext CODE >42:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
7F1 maintext CODE >43:E:\CMS_MCU相关资料(共享)\3.RISC系列资源\Demo程序（仅供参考）\C语言\CMS79F123程序（C版）\CMS79F123程序（C版）\CMS79F123程序（C版）\EEPRom_Demo\EEPRom_Demo.c
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
_t 76 0 COMMON 1 bssCOMMON EEPRom_Demo.obj
___latbits 1 0 ABS 0 - EEPRom_Demo.obj
__Hspace_0 800 0 ABS 0 - -
__Hspace_1 78 0 ABS 0 - -
__Hspace_2 0 0 ABS 0 - -
__Hspace_3 0 0 ABS 0 - -
__size_of_Memory_Write 0 0 ABS 0 - EEPRom_Demo.obj
__Heeprom_data 0 0 EEDATA 3 eeprom_data -
_RD C60 0 ABS 0 - EEPRom_Demo.obj
_WR C61 0 ABS 0 - EEPRom_Demo.obj
__Hstrings 0 0 ABS 0 strings -
_WREN C62 0 ABS 0 - EEPRom_Demo.obj
___sp 0 0 STACK 2 stack startup.obj
_main FA6 0 CODE 0 maintext EEPRom_Demo.obj
btemp 7E 0 ABS 0 - EEPRom_Demo.obj
__end_of_Memory_Read F56 0 CODE 0 text2 EEPRom_Demo.obj
start 0 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - EEPRom_Demo.obj
__HbssCOMMON 0 0 ABS 0 bssCOMMON -
__end_of_Memory_Write FA6 0 CODE 0 text1 EEPRom_Demo.obj
__Hpowerup 0 0 CODE 0 powerup -
__LnvCOMMON 0 0 ABS 0 nvCOMMON -
intlevel0 0 0 ENTRY 0 functab startup.obj
intlevel1 0 0 ENTRY 0 functab startup.obj
intlevel2 0 0 ENTRY 0 functab startup.obj
intlevel3 0 0 ENTRY 0 functab startup.obj
intlevel4 0 0 ENTRY 0 functab startup.obj
intlevel5 0 0 ENTRY 0 functab startup.obj
__LbssCOMMON 0 0 ABS 0 bssCOMMON -
wtemp0 7E 0 ABS 0 - EEPRom_Demo.obj
__Hfunctab 0 0 ENTRY 0 functab -
__Hclrtext 0 0 ABS 0 clrtext -
__Hpa_nodes0 0 0 ABS 0 pa_nodes0 -
_EECON2 18D 0 ABS 0 - EEPRom_Demo.obj
__Lmaintext 0 0 ABS 0 maintext -
?_Memory_Read 70 0 COMMON 1 cstackCOMMON EEPRom_Demo.obj
__Lpa_nodes0 0 0 ABS 0 pa_nodes0 -
__HnvCOMMON 0 0 ABS 0 nvCOMMON -
start_initialization FF6 0 CODE 0 cinit EEPRom_Demo.obj
__size_of_Memory_Read 0 0 ABS 0 - EEPRom_Demo.obj
___int_sp 0 0 STACK 2 stack startup.obj
__Hbank0 0 0 ABS 0 bank0 -
__Hbank1 0 0 ABS 0 bank1 -
__Hbank2 0 0 ABS 0 bank2 -
__Hbank3 0 0 ABS 0 bank3 -
__Hcinit 1000 0 CODE 0 cinit -
__Hidloc 0 0 IDLOC 0 idloc -
__Hstack 0 0 STACK 2 stack -
__Hmaintext 0 0 ABS 0 maintext -
Memory_Read@Addr 70 0 COMMON 1 cstackCOMMON EEPRom_Demo.obj
__Hcommon 0 0 ABS 0 common -
__Hconfig 0 0 CONFIG 0 config -
__Lbank0 0 0 ABS 0 bank0 -
__Lbank1 0 0 ABS 0 bank1 -
__Lbank2 0 0 ABS 0 bank2 -
__Lbank3 0 0 ABS 0 bank3 -
__Lcinit FF6 0 CODE 0 cinit -
__Lidloc 0 0 IDLOC 0 idloc -
__Lstack 0 0 STACK 2 stack -
__Habs1 0 0 ABS 0 abs1 -
__Hcode 0 0 ABS 0 code -
__Hinit 0 0 CODE 0 init -
__Hsfr0 0 0 ABS 0 sfr0 -
__Hsfr1 0 0 ABS 0 sfr1 -
__Hsfr2 0 0 ABS 0 sfr2 -
__Hsfr3 0 0 ABS 0 sfr3 -
__Htext 0 0 ABS 0 text -
__Labs1 0 0 ABS 0 abs1 -
__Lcode 0 0 ABS 0 code -
__Linit 0 0 CODE 0 init -
__Lsfr0 0 0 ABS 0 sfr0 -
__Lsfr1 0 0 ABS 0 sfr1 -
__Lsfr2 0 0 ABS 0 sfr2 -
__Lsfr3 0 0 ABS 0 sfr3 -
__Ltext 0 0 ABS 0 text -
__HcstackCOMMON 0 0 ABS 0 cstackCOMMON -
_GIE 5F 0 ABS 0 - EEPRom_Demo.obj
__S0 800 0 ABS 0 - -
__S1 78 0 ABS 0 - -
__S2 0 0 ABS 0 - -
__pnvCOMMON 74 0 COMMON 1 nvCOMMON EEPRom_Demo.obj
__Lintentry 0 0 CODE 0 intentry -
reset_vec 0 0 CODE 0 reset_vec startup.obj
Memory_Write@Addr 70 0 COMMON 1 cstackCOMMON EEPRom_Demo.obj
Memory_Write@i 73 0 COMMON 1 cstackCOMMON EEPRom_Demo.obj
__pmaintext FA6 0 CODE 0 maintext EEPRom_Demo.obj
__Lcommon 0 0 ABS 0 common -
__Lconfig 0 0 CONFIG 0 config -
_Memory_Read F38 0 CODE 0 text2 EEPRom_Demo.obj
stackhi 0 0 ABS 0 - startup.obj
stacklo 0 0 ABS 0 - startup.obj
__Lspace_0 0 0 ABS 0 - -
__Lspace_1 0 0 ABS 0 - -
__Lspace_2 0 0 ABS 0 - -
__Lspace_3 0 0 ABS 0 - -
__pbssCOMMON 76 0 COMMON 1 bssCOMMON EEPRom_Demo.obj
__Lend_init 0 0 CODE 0 end_init -
__LcstackCOMMON 0 0 ABS 0 cstackCOMMON -
end_of_initialization FFA 0 CODE 0 cinit EEPRom_Demo.obj
__Hintentry 0 0 CODE 0 intentry -
__Lstrings 0 0 ABS 0 strings -
__Hreset_vec 0 0 CODE 0 reset_vec -
__ptext1 F56 0 CODE 0 text1 EEPRom_Demo.obj
__ptext2 F38 0 CODE 0 text2 EEPRom_Demo.obj
__Lpowerup 0 0 CODE 0 powerup -
__Leeprom_data 0 0 EEDATA 3 eeprom_data -
__Lreset_vec 0 0 CODE 0 reset_vec -
__end_of__initialization FFA 0 CODE 0 cinit EEPRom_Demo.obj
__Lfunctab 0 0 ENTRY 0 functab -
__Lclrtext 0 0 ABS 0 clrtext -
__pcstackCOMMON 70 0 COMMON 1 cstackCOMMON EEPRom_Demo.obj
__Hend_init 4 0 CODE 0 end_init -
__end_of_main FF6 0 CODE 0 maintext EEPRom_Demo.obj
Memory_Write@Value 72 0 COMMON 1 cstackCOMMON EEPRom_Demo.obj
_EEADR 10D 0 ABS 0 - EEPRom_Demo.obj
_EEDAT 10C 0 ABS 0 - EEPRom_Demo.obj
_EEPGD C67 0 ABS 0 - EEPRom_Demo.obj
_WRERR C63 0 ABS 0 - EEPRom_Demo.obj
__Hram 0 0 ABS 0 ram -
__Lram 0 0 ABS 0 ram -
_templ 74 0 COMMON 1 nvCOMMON EEPRom_Demo.obj
_Memory_Write F56 0 CODE 0 text1 EEPRom_Demo.obj
__initialization FF6 0 CODE 0 cinit EEPRom_Demo.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
- 1 7E 2
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
cinit 0 7FB FF6 5 2
text1 0 7AB F56 28 2
text2 0 79C F38 F 2
maintext 0 7D3 FA6 28 2
cstackCOMMON 1 70 70 8 1
reset_vec 0 0 0 2 2
