Version 3.2 HI-TECH Software Intermediate Code
"17 C:\mcuproject\scm\xfx\追频+干烧检水-24V2.4M(0818-A)\追频+干烧检水-24V2.4M(0904)\追频+干烧检水-24V2.4M - 副本\WHQ_TP_ZPGS.h
[v _Test_Pwm `(uc ~T0 @X0 0 ef ]
"25
[v _Set_Pwm_Onoff `(v ~T0 @X0 0 ef1`uc ]
[p mainexit ]
"9 C:\mcuproject\scm\xfx\追频+干烧检水-24V2.4M(0818-A)\追频+干烧检水-24V2.4M(0904)\追频+干烧检水-24V2.4M - 副本\delay.h
[v _Delay_nms `(v ~T0 @X0 0 ef1`ui ]
"76 C:\mcuproject\scm\xfx\追频+干烧检水-24V2.4M(0818-A)\追频+干烧检水-24V2.4M(0904)\追频+干烧检水-24V2.4M - 副本\main.c
[v _Set_Usart_Async `(v ~T0 @X0 0 ef ]
"79
[v _rgbShow `(v ~T0 @X0 0 ef ]
"71
[v _AD_Testing `(v ~T0 @X0 0 ef3`uc`uc`uc ]
"72
[v _Set_CCP_PWM `(v ~T0 @X0 0 ef ]
"74
[v _checkVoll `(v ~T0 @X0 0 ef ]
"80
[v _colorCtr `(v ~T0 @X0 0 ef ]
"75
[v _closePWM `(v ~T0 @X0 0 ef ]
"81
[v _uartRevCtr `(v ~T0 @X0 0 ef ]
"82
[v _checkLed `(v ~T0 @X0 0 ef ]
"84
[v _rainbow2 `(v ~T0 @X0 0 ef ]
"83
[v _rainbow `(v ~T0 @X0 0 ef ]
"77
[v _breathAddLed `(v ~T0 @X0 0 ef1`*uc ]
"78
[v _breathSubLed `(v ~T0 @X0 0 ef1`*uc ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
"8 C:\mcuproject\scm\CMS_IDE_V2.03.26\CMS_IDE_V2.03.26\data\include\cms79f5139.h
[v _INDF `Vuc ~T0 @X0 1 e@0 ]
[; ;cms79f5139.h: 8: volatile unsigned char INDF @ 0x0000;
"9
[v _TMR0 `Vuc ~T0 @X0 1 e@1 ]
[; ;cms79f5139.h: 9: volatile unsigned char TMR0 @ 0x0001;
"10
[v _PCL `Vuc ~T0 @X0 1 e@2 ]
[; ;cms79f5139.h: 10: volatile unsigned char PCL @ 0x0002;
"11
[v _STATUS `Vuc ~T0 @X0 1 e@3 ]
[; ;cms79f5139.h: 11: volatile unsigned char STATUS @ 0x0003;
"12
[v _FSR `Vuc ~T0 @X0 1 e@4 ]
[; ;cms79f5139.h: 12: volatile unsigned char FSR @ 0x0004;
"13
[v _PORTA `Vuc ~T0 @X0 1 e@5 ]
[; ;cms79f5139.h: 13: volatile unsigned char PORTA @ 0x0005;
"14
[v _PORTB `Vuc ~T0 @X0 1 e@6 ]
[; ;cms79f5139.h: 14: volatile unsigned char PORTB @ 0x0006;
"15
[v _WPDA `Vuc ~T0 @X0 1 e@7 ]
[; ;cms79f5139.h: 15: volatile unsigned char WPDA @ 0x0007;
"16
[v _WPDB `Vuc ~T0 @X0 1 e@8 ]
[; ;cms79f5139.h: 16: volatile unsigned char WPDB @ 0x0008;
"17
[v _PCLATH `Vuc ~T0 @X0 1 e@10 ]
[; ;cms79f5139.h: 17: volatile unsigned char PCLATH @ 0x000A;
"18
[v _INTCON `Vuc ~T0 @X0 1 e@11 ]
[; ;cms79f5139.h: 18: volatile unsigned char INTCON @ 0x000B;
"19
[v _PIR1 `Vuc ~T0 @X0 1 e@12 ]
[; ;cms79f5139.h: 19: volatile unsigned char PIR1 @ 0x000C;
"20
[v _PIR2 `Vuc ~T0 @X0 1 e@13 ]
[; ;cms79f5139.h: 20: volatile unsigned char PIR2 @ 0x000D;
"21
[v _TMR1L `Vuc ~T0 @X0 1 e@14 ]
[; ;cms79f5139.h: 21: volatile unsigned char TMR1L @ 0x000E;
"22
[v _TMR1H `Vuc ~T0 @X0 1 e@15 ]
[; ;cms79f5139.h: 22: volatile unsigned char TMR1H @ 0x000F;
"23
[v _T1CON `Vuc ~T0 @X0 1 e@16 ]
[; ;cms79f5139.h: 23: volatile unsigned char T1CON @ 0x0010;
"24
[v _TMR2 `Vuc ~T0 @X0 1 e@17 ]
[; ;cms79f5139.h: 24: volatile unsigned char TMR2 @ 0x0011;
"25
[v _T2CON `Vuc ~T0 @X0 1 e@18 ]
[; ;cms79f5139.h: 25: volatile unsigned char T2CON @ 0x0012;
"26
[v _DIVS1 `Vuc ~T0 @X0 1 e@19 ]
[; ;cms79f5139.h: 26: volatile unsigned char DIVS1 @ 0x0013;
"27
[v _DIVS0 `Vuc ~T0 @X0 1 e@20 ]
[; ;cms79f5139.h: 27: volatile unsigned char DIVS0 @ 0x0014;
"28
[v _DIVE2 `Vuc ~T0 @X0 1 e@21 ]
[; ;cms79f5139.h: 28: volatile unsigned char DIVE2 @ 0x0015;
"29
[v _DIVE1 `Vuc ~T0 @X0 1 e@22 ]
[; ;cms79f5139.h: 29: volatile unsigned char DIVE1 @ 0x0016;
"30
[v _DIVE0 `Vuc ~T0 @X0 1 e@23 ]
[; ;cms79f5139.h: 30: volatile unsigned char DIVE0 @ 0x0017;
"31
[v _DIVQ2 `Vuc ~T0 @X0 1 e@21 ]
[; ;cms79f5139.h: 31: volatile unsigned char DIVQ2 @ 0x0015;
"32
[v _DIVQ1 `Vuc ~T0 @X0 1 e@22 ]
[; ;cms79f5139.h: 32: volatile unsigned char DIVQ1 @ 0x0016;
"33
[v _DIVQ0 `Vuc ~T0 @X0 1 e@23 ]
[; ;cms79f5139.h: 33: volatile unsigned char DIVQ0 @ 0x0017;
"34
[v _RCSTA `Vuc ~T0 @X0 1 e@24 ]
[; ;cms79f5139.h: 34: volatile unsigned char RCSTA @ 0x0018;
"35
[v _TXREG `Vuc ~T0 @X0 1 e@25 ]
[; ;cms79f5139.h: 35: volatile unsigned char TXREG @ 0x0019;
"36
[v _RCREG `Vuc ~T0 @X0 1 e@26 ]
[; ;cms79f5139.h: 36: volatile unsigned char RCREG @ 0x001A;
"37
[v _DIVCON `Vuc ~T0 @X0 1 e@27 ]
[; ;cms79f5139.h: 37: volatile unsigned char DIVCON @ 0x001B;
"38
[v _ADRESH `Vuc ~T0 @X0 1 e@30 ]
[; ;cms79f5139.h: 38: volatile unsigned char ADRESH @ 0x001E;
"39
[v _ADCON0 `Vuc ~T0 @X0 1 e@31 ]
[; ;cms79f5139.h: 39: volatile unsigned char ADCON0 @ 0x001F;
"40
[v _OPTION_REG `Vuc ~T0 @X0 1 e@129 ]
[; ;cms79f5139.h: 40: volatile unsigned char OPTION_REG @ 0x0081;
"41
[v _TRISA `Vuc ~T0 @X0 1 e@133 ]
[; ;cms79f5139.h: 41: volatile unsigned char TRISA @ 0x0085;
"42
[v _TRISB `Vuc ~T0 @X0 1 e@134 ]
[; ;cms79f5139.h: 42: volatile unsigned char TRISB @ 0x0086;
"43
[v _IOCA `Vuc ~T0 @X0 1 e@135 ]
[; ;cms79f5139.h: 43: volatile unsigned char IOCA @ 0x0087;
"44
[v _PIE1 `Vuc ~T0 @X0 1 e@140 ]
[; ;cms79f5139.h: 44: volatile unsigned char PIE1 @ 0x008C;
"45
[v _PIE2 `Vuc ~T0 @X0 1 e@141 ]
[; ;cms79f5139.h: 45: volatile unsigned char PIE2 @ 0x008D;
"46
[v _OSCCON `Vuc ~T0 @X0 1 e@143 ]
[; ;cms79f5139.h: 46: volatile unsigned char OSCCON @ 0x008F;
"47
[v _OSCTUNE `Vuc ~T0 @X0 1 e@144 ]
[; ;cms79f5139.h: 47: volatile unsigned char OSCTUNE @ 0x0090;
"48
[v _PR2 `Vuc ~T0 @X0 1 e@146 ]
[; ;cms79f5139.h: 48: volatile unsigned char PR2 @ 0x0092;
"49
[v _PWM01DT `Vuc ~T0 @X0 1 e@147 ]
[; ;cms79f5139.h: 49: volatile unsigned char PWM01DT @ 0x0093;
"50
[v _PWM23DT `Vuc ~T0 @X0 1 e@148 ]
[; ;cms79f5139.h: 50: volatile unsigned char PWM23DT @ 0x0094;
"51
[v _WPUB `Vuc ~T0 @X0 1 e@149 ]
[; ;cms79f5139.h: 51: volatile unsigned char WPUB @ 0x0095;
"52
[v _IOCB `Vuc ~T0 @X0 1 e@150 ]
[; ;cms79f5139.h: 52: volatile unsigned char IOCB @ 0x0096;
"53
[v _LVDCON `Vuc ~T0 @X0 1 e@151 ]
[; ;cms79f5139.h: 53: volatile unsigned char LVDCON @ 0x0097;
"54
[v _TXSTA `Vuc ~T0 @X0 1 e@152 ]
[; ;cms79f5139.h: 54: volatile unsigned char TXSTA @ 0x0098;
"55
[v _SPBRG `Vuc ~T0 @X0 1 e@153 ]
[; ;cms79f5139.h: 55: volatile unsigned char SPBRG @ 0x0099;
"56
[v _OPA0CON `Vuc ~T0 @X0 1 e@154 ]
[; ;cms79f5139.h: 56: volatile unsigned char OPA0CON @ 0x009A;
"57
[v _OPA0ADJ `Vuc ~T0 @X0 1 e@155 ]
[; ;cms79f5139.h: 57: volatile unsigned char OPA0ADJ @ 0x009B;
"58
[v _OPA1CON `Vuc ~T0 @X0 1 e@156 ]
[; ;cms79f5139.h: 58: volatile unsigned char OPA1CON @ 0x009C;
"59
[v _OPA1ADJ `Vuc ~T0 @X0 1 e@157 ]
[; ;cms79f5139.h: 59: volatile unsigned char OPA1ADJ @ 0x009D;
"60
[v _ADRESL `Vuc ~T0 @X0 1 e@158 ]
[; ;cms79f5139.h: 60: volatile unsigned char ADRESL @ 0x009E;
"61
[v _ADCON1 `Vuc ~T0 @X0 1 e@159 ]
[; ;cms79f5139.h: 61: volatile unsigned char ADCON1 @ 0x009F;
"62
[v _WDTCON `Vuc ~T0 @X0 1 e@261 ]
[; ;cms79f5139.h: 62: volatile unsigned char WDTCON @ 0x0105;
"63
[v _PWMCON0 `Vuc ~T0 @X0 1 e@263 ]
[; ;cms79f5139.h: 63: volatile unsigned char PWMCON0 @ 0x0107;
"64
[v _PWMCON1 `Vuc ~T0 @X0 1 e@264 ]
[; ;cms79f5139.h: 64: volatile unsigned char PWMCON1 @ 0x0108;
"65
[v _PWMCON2 `Vuc ~T0 @X0 1 e@265 ]
[; ;cms79f5139.h: 65: volatile unsigned char PWMCON2 @ 0x0109;
"66
[v _EEDAT `Vuc ~T0 @X0 1 e@268 ]
[; ;cms79f5139.h: 66: volatile unsigned char EEDAT @ 0x010C;
"67
[v _EEADR `Vuc ~T0 @X0 1 e@269 ]
[; ;cms79f5139.h: 67: volatile unsigned char EEADR @ 0x010D;
"68
[v _EEDATH `Vuc ~T0 @X0 1 e@270 ]
[; ;cms79f5139.h: 68: volatile unsigned char EEDATH @ 0x010E;
"69
[v _EEADRH `Vuc ~T0 @X0 1 e@271 ]
[; ;cms79f5139.h: 69: volatile unsigned char EEADRH @ 0x010F;
"70
[v _TABLE_SPH `Vuc ~T0 @X0 1 e@272 ]
[; ;cms79f5139.h: 70: volatile unsigned char TABLE_SPH @ 0x0110;
"71
[v _TABLE_SPL `Vuc ~T0 @X0 1 e@273 ]
[; ;cms79f5139.h: 71: volatile unsigned char TABLE_SPL @ 0x0111;
"72
[v _TABLE_DATAH `Vuc ~T0 @X0 1 e@274 ]
[; ;cms79f5139.h: 72: volatile unsigned char TABLE_DATAH @ 0x0112;
"73
[v _PWMD01H `Vuc ~T0 @X0 1 e@284 ]
[; ;cms79f5139.h: 73: volatile unsigned char PWMD01H @ 0x011C;
"74
[v _PWMD23H `Vuc ~T0 @X0 1 e@285 ]
[; ;cms79f5139.h: 74: volatile unsigned char PWMD23H @ 0x011D;
"75
[v _ANSEL `Vuc ~T0 @X0 1 e@392 ]
[; ;cms79f5139.h: 75: volatile unsigned char ANSEL @ 0x0188;
"76
[v _ANSELH `Vuc ~T0 @X0 1 e@393 ]
[; ;cms79f5139.h: 76: volatile unsigned char ANSELH @ 0x0189;
"77
[v _EECON1 `Vuc ~T0 @X0 1 e@396 ]
[; ;cms79f5139.h: 77: volatile unsigned char EECON1 @ 0x018C;
"78
[v _EECON2 `Vuc ~T0 @X0 1 e@397 ]
[; ;cms79f5139.h: 78: volatile unsigned char EECON2 @ 0x018D;
"79
[v _WPUA `Vuc ~T0 @X0 1 e@398 ]
[; ;cms79f5139.h: 79: volatile unsigned char WPUA @ 0x018E;
"80
[v _PWMTL `Vuc ~T0 @X0 1 e@399 ]
[; ;cms79f5139.h: 80: volatile unsigned char PWMTL @ 0x018F;
"81
[v _PWMTH `Vuc ~T0 @X0 1 e@400 ]
[; ;cms79f5139.h: 81: volatile unsigned char PWMTH @ 0x0190;
"82
[v _PWMT4L `Vuc ~T0 @X0 1 e@401 ]
[; ;cms79f5139.h: 82: volatile unsigned char PWMT4L @ 0x0191;
"83
[v _PWMD0L `Vuc ~T0 @X0 1 e@403 ]
[; ;cms79f5139.h: 83: volatile unsigned char PWMD0L @ 0x0193;
"84
[v _PWMD1L `Vuc ~T0 @X0 1 e@404 ]
[; ;cms79f5139.h: 84: volatile unsigned char PWMD1L @ 0x0194;
"85
[v _PWMD2L `Vuc ~T0 @X0 1 e@405 ]
[; ;cms79f5139.h: 85: volatile unsigned char PWMD2L @ 0x0195;
"86
[v _PWMD3L `Vuc ~T0 @X0 1 e@406 ]
[; ;cms79f5139.h: 86: volatile unsigned char PWMD3L @ 0x0196;
"87
[v _PWMD4L `Vuc ~T0 @X0 1 e@407 ]
[; ;cms79f5139.h: 87: volatile unsigned char PWMD4L @ 0x0197;
"93
[v _IRP `Vb ~T0 @X0 1 e@31 ]
[; ;cms79f5139.h: 93: volatile bit IRP @ ((unsigned)&STATUS*8)+7;
"94
[v _RP1 `Vb ~T0 @X0 1 e@30 ]
[; ;cms79f5139.h: 94: volatile bit RP1 @ ((unsigned)&STATUS*8)+6;
"95
[v _RP0 `Vb ~T0 @X0 1 e@29 ]
[; ;cms79f5139.h: 95: volatile bit RP0 @ ((unsigned)&STATUS*8)+5;
"96
[v _TO `Vb ~T0 @X0 1 e@28 ]
[; ;cms79f5139.h: 96: volatile bit TO @ ((unsigned)&STATUS*8)+4;
"97
[v _PD `Vb ~T0 @X0 1 e@27 ]
[; ;cms79f5139.h: 97: volatile bit PD @ ((unsigned)&STATUS*8)+3;
"98
[v _Z `Vb ~T0 @X0 1 e@26 ]
[; ;cms79f5139.h: 98: volatile bit Z @ ((unsigned)&STATUS*8)+2;
"99
[v _DC `Vb ~T0 @X0 1 e@25 ]
[; ;cms79f5139.h: 99: volatile bit DC @ ((unsigned)&STATUS*8)+1;
"100
[v _C `Vb ~T0 @X0 1 e@24 ]
[; ;cms79f5139.h: 100: volatile bit C @ ((unsigned)&STATUS*8)+0;
"104
[v _RA7 `Vb ~T0 @X0 1 e@47 ]
[; ;cms79f5139.h: 104: volatile bit RA7 @ ((unsigned)&PORTA*8)+7;
"105
[v _RA6 `Vb ~T0 @X0 1 e@46 ]
[; ;cms79f5139.h: 105: volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
"106
[v _RA5 `Vb ~T0 @X0 1 e@45 ]
[; ;cms79f5139.h: 106: volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
"107
[v _RA4 `Vb ~T0 @X0 1 e@44 ]
[; ;cms79f5139.h: 107: volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
"108
[v _RA3 `Vb ~T0 @X0 1 e@43 ]
[; ;cms79f5139.h: 108: volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
"109
[v _RA2 `Vb ~T0 @X0 1 e@42 ]
[; ;cms79f5139.h: 109: volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
"110
[v _RA1 `Vb ~T0 @X0 1 e@41 ]
[; ;cms79f5139.h: 110: volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
"111
[v _RA0 `Vb ~T0 @X0 1 e@40 ]
[; ;cms79f5139.h: 111: volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
"115
[v _RB5 `Vb ~T0 @X0 1 e@53 ]
[; ;cms79f5139.h: 115: volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
"116
[v _RB4 `Vb ~T0 @X0 1 e@52 ]
[; ;cms79f5139.h: 116: volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
"117
[v _RB3 `Vb ~T0 @X0 1 e@51 ]
[; ;cms79f5139.h: 117: volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
"118
[v _RB2 `Vb ~T0 @X0 1 e@50 ]
[; ;cms79f5139.h: 118: volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
"119
[v _RB1 `Vb ~T0 @X0 1 e@49 ]
[; ;cms79f5139.h: 119: volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
"120
[v _RB0 `Vb ~T0 @X0 1 e@48 ]
[; ;cms79f5139.h: 120: volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
"124
[v _WPDA7 `Vb ~T0 @X0 1 e@63 ]
[; ;cms79f5139.h: 124: volatile bit WPDA7 @ ((unsigned)&WPDA*8)+7;
"125
[v _WPDA6 `Vb ~T0 @X0 1 e@62 ]
[; ;cms79f5139.h: 125: volatile bit WPDA6 @ ((unsigned)&WPDA*8)+6;
"126
[v _WPDA5 `Vb ~T0 @X0 1 e@61 ]
[; ;cms79f5139.h: 126: volatile bit WPDA5 @ ((unsigned)&WPDA*8)+5;
"127
[v _WPDA4 `Vb ~T0 @X0 1 e@60 ]
[; ;cms79f5139.h: 127: volatile bit WPDA4 @ ((unsigned)&WPDA*8)+4;
"128
[v _WPDA3 `Vb ~T0 @X0 1 e@59 ]
[; ;cms79f5139.h: 128: volatile bit WPDA3 @ ((unsigned)&WPDA*8)+3;
"129
[v _WPDA2 `Vb ~T0 @X0 1 e@58 ]
[; ;cms79f5139.h: 129: volatile bit WPDA2 @ ((unsigned)&WPDA*8)+2;
"130
[v _WPDA1 `Vb ~T0 @X0 1 e@57 ]
[; ;cms79f5139.h: 130: volatile bit WPDA1 @ ((unsigned)&WPDA*8)+1;
"131
[v _WPDA0 `Vb ~T0 @X0 1 e@56 ]
[; ;cms79f5139.h: 131: volatile bit WPDA0 @ ((unsigned)&WPDA*8)+0;
"135
[v _WPDB5 `Vb ~T0 @X0 1 e@69 ]
[; ;cms79f5139.h: 135: volatile bit WPDB5 @ ((unsigned)&WPDB*8)+5;
"136
[v _WPDB4 `Vb ~T0 @X0 1 e@68 ]
[; ;cms79f5139.h: 136: volatile bit WPDB4 @ ((unsigned)&WPDB*8)+4;
"137
[v _WPDB3 `Vb ~T0 @X0 1 e@67 ]
[; ;cms79f5139.h: 137: volatile bit WPDB3 @ ((unsigned)&WPDB*8)+3;
"138
[v _WPDB2 `Vb ~T0 @X0 1 e@66 ]
[; ;cms79f5139.h: 138: volatile bit WPDB2 @ ((unsigned)&WPDB*8)+2;
"139
[v _WPDB1 `Vb ~T0 @X0 1 e@65 ]
[; ;cms79f5139.h: 139: volatile bit WPDB1 @ ((unsigned)&WPDB*8)+1;
"140
[v _WPDB0 `Vb ~T0 @X0 1 e@64 ]
[; ;cms79f5139.h: 140: volatile bit WPDB0 @ ((unsigned)&WPDB*8)+0;
"144
[v _GIE `Vb ~T0 @X0 1 e@95 ]
[; ;cms79f5139.h: 144: volatile bit GIE @ ((unsigned)&INTCON*8)+7;
"145
[v _PEIE `Vb ~T0 @X0 1 e@94 ]
[; ;cms79f5139.h: 145: volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
"146
[v _T0IE `Vb ~T0 @X0 1 e@93 ]
[; ;cms79f5139.h: 146: volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
"147
[v _INTE `Vb ~T0 @X0 1 e@92 ]
[; ;cms79f5139.h: 147: volatile bit INTE @ ((unsigned)&INTCON*8)+4;
"148
[v _RBIE `Vb ~T0 @X0 1 e@91 ]
[; ;cms79f5139.h: 148: volatile bit RBIE @ ((unsigned)&INTCON*8)+3;
"149
[v _T0IF `Vb ~T0 @X0 1 e@90 ]
[; ;cms79f5139.h: 149: volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
"150
[v _INTF `Vb ~T0 @X0 1 e@89 ]
[; ;cms79f5139.h: 150: volatile bit INTF @ ((unsigned)&INTCON*8)+1;
"151
[v _RBIF `Vb ~T0 @X0 1 e@88 ]
[; ;cms79f5139.h: 151: volatile bit RBIF @ ((unsigned)&INTCON*8)+0;
"155
[v _RAIF `Vb ~T0 @X0 1 e@103 ]
[; ;cms79f5139.h: 155: volatile bit RAIF @ ((unsigned)&PIR1*8)+7;
"156
[v _ADIF `Vb ~T0 @X0 1 e@102 ]
[; ;cms79f5139.h: 156: volatile bit ADIF @ ((unsigned)&PIR1*8)+6;
"157
[v _RCIF `Vb ~T0 @X0 1 e@101 ]
[; ;cms79f5139.h: 157: volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
"158
[v _TXIF `Vb ~T0 @X0 1 e@100 ]
[; ;cms79f5139.h: 158: volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
"159
[v _EEIF `Vb ~T0 @X0 1 e@99 ]
[; ;cms79f5139.h: 159: volatile bit EEIF @ ((unsigned)&PIR1*8)+3;
"160
[v _PWMIF `Vb ~T0 @X0 1 e@98 ]
[; ;cms79f5139.h: 160: volatile bit PWMIF @ ((unsigned)&PIR1*8)+2;
"161
[v _TMR2IF `Vb ~T0 @X0 1 e@97 ]
[; ;cms79f5139.h: 161: volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
"162
[v _TMR1IF `Vb ~T0 @X0 1 e@96 ]
[; ;cms79f5139.h: 162: volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
"166
[v _LVDIF `Vb ~T0 @X0 1 e@104 ]
[; ;cms79f5139.h: 166: volatile bit LVDIF @ ((unsigned)&PIR2*8)+0;
"170
[v _T1GINV `Vb ~T0 @X0 1 e@135 ]
[; ;cms79f5139.h: 170: volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;
"171
[v _TMR1GE `Vb ~T0 @X0 1 e@134 ]
[; ;cms79f5139.h: 171: volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
"172
[v _T1CKPS1 `Vb ~T0 @X0 1 e@133 ]
[; ;cms79f5139.h: 172: volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
"173
[v _T1CKPS0 `Vb ~T0 @X0 1 e@132 ]
[; ;cms79f5139.h: 173: volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
"174
[v _T1SYNC `Vb ~T0 @X0 1 e@130 ]
[; ;cms79f5139.h: 174: volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
"175
[v _TMR1CS `Vb ~T0 @X0 1 e@129 ]
[; ;cms79f5139.h: 175: volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
"176
[v _TMR1ON `Vb ~T0 @X0 1 e@128 ]
[; ;cms79f5139.h: 176: volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
"180
[v _TOUTPS3 `Vb ~T0 @X0 1 e@150 ]
[; ;cms79f5139.h: 180: volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;
"181
[v _TOUTPS2 `Vb ~T0 @X0 1 e@149 ]
[; ;cms79f5139.h: 181: volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
"182
[v _TOUTPS1 `Vb ~T0 @X0 1 e@148 ]
[; ;cms79f5139.h: 182: volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
"183
[v _TOUTPS0 `Vb ~T0 @X0 1 e@147 ]
[; ;cms79f5139.h: 183: volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
"184
[v _TMR2ON `Vb ~T0 @X0 1 e@146 ]
[; ;cms79f5139.h: 184: volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
"185
[v _T2CKPS1 `Vb ~T0 @X0 1 e@145 ]
[; ;cms79f5139.h: 185: volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
"186
[v _T2CKPS0 `Vb ~T0 @X0 1 e@144 ]
[; ;cms79f5139.h: 186: volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
"190
[v _SPEN `Vb ~T0 @X0 1 e@199 ]
[; ;cms79f5139.h: 190: volatile bit SPEN @ ((unsigned)&RCSTA*8)+7;
"191
[v _RX9EN `Vb ~T0 @X0 1 e@198 ]
[; ;cms79f5139.h: 191: volatile bit RX9EN @ ((unsigned)&RCSTA*8)+6;
"192
[v _SREN `Vb ~T0 @X0 1 e@197 ]
[; ;cms79f5139.h: 192: volatile bit SREN @ ((unsigned)&RCSTA*8)+5;
"193
[v _CREN `Vb ~T0 @X0 1 e@196 ]
[; ;cms79f5139.h: 193: volatile bit CREN @ ((unsigned)&RCSTA*8)+4;
"194
[v _RCIDL `Vb ~T0 @X0 1 e@195 ]
[; ;cms79f5139.h: 194: volatile bit RCIDL @ ((unsigned)&RCSTA*8)+3;
"195
[v _FERR `Vb ~T0 @X0 1 e@194 ]
[; ;cms79f5139.h: 195: volatile bit FERR @ ((unsigned)&RCSTA*8)+2;
"196
[v _OERR `Vb ~T0 @X0 1 e@193 ]
[; ;cms79f5139.h: 196: volatile bit OERR @ ((unsigned)&RCSTA*8)+1;
"197
[v _RX9D `Vb ~T0 @X0 1 e@192 ]
[; ;cms79f5139.h: 197: volatile bit RX9D @ ((unsigned)&RCSTA*8)+0;
"200
[v _DIVEN `Vb ~T0 @X0 1 e@223 ]
[; ;cms79f5139.h: 200: volatile bit DIVEN @ ((unsigned)&DIVCON*8)+7;
"201
[v _CAL_END `Vb ~T0 @X0 1 e@222 ]
[; ;cms79f5139.h: 201: volatile bit CAL_END @ ((unsigned)&DIVCON*8)+6;
"202
[v _DIV_CLK `Vb ~T0 @X0 1 e@216 ]
[; ;cms79f5139.h: 202: volatile bit DIV_CLK @ ((unsigned)&DIVCON*8)+0;
"205
[v _ADCS1 `Vb ~T0 @X0 1 e@255 ]
[; ;cms79f5139.h: 205: volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;
"206
[v _ADCS0 `Vb ~T0 @X0 1 e@254 ]
[; ;cms79f5139.h: 206: volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
"207
[v _CHS3 `Vb ~T0 @X0 1 e@253 ]
[; ;cms79f5139.h: 207: volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
"208
[v _CHS2 `Vb ~T0 @X0 1 e@252 ]
[; ;cms79f5139.h: 208: volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
"209
[v _CHS1 `Vb ~T0 @X0 1 e@251 ]
[; ;cms79f5139.h: 209: volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
"210
[v _CHS0 `Vb ~T0 @X0 1 e@250 ]
[; ;cms79f5139.h: 210: volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
"211
[v _GODONE `Vb ~T0 @X0 1 e@249 ]
[; ;cms79f5139.h: 211: volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
"212
[v _ADON `Vb ~T0 @X0 1 e@248 ]
[; ;cms79f5139.h: 212: volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
"216
[v _INTEDG `Vb ~T0 @X0 1 e@1038 ]
[; ;cms79f5139.h: 216: volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
"217
[v _T0CS `Vb ~T0 @X0 1 e@1037 ]
[; ;cms79f5139.h: 217: volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
"218
[v _T0SE `Vb ~T0 @X0 1 e@1036 ]
[; ;cms79f5139.h: 218: volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
"219
[v _PSA `Vb ~T0 @X0 1 e@1035 ]
[; ;cms79f5139.h: 219: volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
"220
[v _PS2 `Vb ~T0 @X0 1 e@1034 ]
[; ;cms79f5139.h: 220: volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
"221
[v _PS1 `Vb ~T0 @X0 1 e@1033 ]
[; ;cms79f5139.h: 221: volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
"222
[v _PS0 `Vb ~T0 @X0 1 e@1032 ]
[; ;cms79f5139.h: 222: volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
"226
[v _TRISA7 `Vb ~T0 @X0 1 e@1071 ]
[; ;cms79f5139.h: 226: volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;
"227
[v _TRISA6 `Vb ~T0 @X0 1 e@1070 ]
[; ;cms79f5139.h: 227: volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
"228
[v _TRISA5 `Vb ~T0 @X0 1 e@1069 ]
[; ;cms79f5139.h: 228: volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
"229
[v _TRISA4 `Vb ~T0 @X0 1 e@1068 ]
[; ;cms79f5139.h: 229: volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
"230
[v _TRISA3 `Vb ~T0 @X0 1 e@1067 ]
[; ;cms79f5139.h: 230: volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
"231
[v _TRISA2 `Vb ~T0 @X0 1 e@1066 ]
[; ;cms79f5139.h: 231: volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
"232
[v _TRISA1 `Vb ~T0 @X0 1 e@1065 ]
[; ;cms79f5139.h: 232: volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
"233
[v _TRISA0 `Vb ~T0 @X0 1 e@1064 ]
[; ;cms79f5139.h: 233: volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
"237
[v _TRISB5 `Vb ~T0 @X0 1 e@1077 ]
[; ;cms79f5139.h: 237: volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
"238
[v _TRISB4 `Vb ~T0 @X0 1 e@1076 ]
[; ;cms79f5139.h: 238: volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
"239
[v _TRISB3 `Vb ~T0 @X0 1 e@1075 ]
[; ;cms79f5139.h: 239: volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
"240
[v _TRISB2 `Vb ~T0 @X0 1 e@1074 ]
[; ;cms79f5139.h: 240: volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
"241
[v _TRISB1 `Vb ~T0 @X0 1 e@1073 ]
[; ;cms79f5139.h: 241: volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
"242
[v _TRISB0 `Vb ~T0 @X0 1 e@1072 ]
[; ;cms79f5139.h: 242: volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
"246
[v _IOCA7 `Vb ~T0 @X0 1 e@1087 ]
[; ;cms79f5139.h: 246: volatile bit IOCA7 @ ((unsigned)&IOCA*8)+7;
"247
[v _IOCA6 `Vb ~T0 @X0 1 e@1086 ]
[; ;cms79f5139.h: 247: volatile bit IOCA6 @ ((unsigned)&IOCA*8)+6;
"248
[v _IOCA5 `Vb ~T0 @X0 1 e@1085 ]
[; ;cms79f5139.h: 248: volatile bit IOCA5 @ ((unsigned)&IOCA*8)+5;
"249
[v _IOCA4 `Vb ~T0 @X0 1 e@1084 ]
[; ;cms79f5139.h: 249: volatile bit IOCA4 @ ((unsigned)&IOCA*8)+4;
"250
[v _IOCA3 `Vb ~T0 @X0 1 e@1083 ]
[; ;cms79f5139.h: 250: volatile bit IOCA3 @ ((unsigned)&IOCA*8)+3;
"251
[v _IOCA2 `Vb ~T0 @X0 1 e@1082 ]
[; ;cms79f5139.h: 251: volatile bit IOCA2 @ ((unsigned)&IOCA*8)+2;
"252
[v _IOCA1 `Vb ~T0 @X0 1 e@1081 ]
[; ;cms79f5139.h: 252: volatile bit IOCA1 @ ((unsigned)&IOCA*8)+1;
"253
[v _IOCA0 `Vb ~T0 @X0 1 e@1080 ]
[; ;cms79f5139.h: 253: volatile bit IOCA0 @ ((unsigned)&IOCA*8)+0;
"257
[v _RAIE `Vb ~T0 @X0 1 e@1127 ]
[; ;cms79f5139.h: 257: volatile bit RAIE @ ((unsigned)&PIE1*8)+7;
"258
[v _ADIE `Vb ~T0 @X0 1 e@1126 ]
[; ;cms79f5139.h: 258: volatile bit ADIE @ ((unsigned)&PIE1*8)+6;
"259
[v _RCIE `Vb ~T0 @X0 1 e@1125 ]
[; ;cms79f5139.h: 259: volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
"260
[v _TXIE `Vb ~T0 @X0 1 e@1124 ]
[; ;cms79f5139.h: 260: volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
"261
[v _EEIE `Vb ~T0 @X0 1 e@1123 ]
[; ;cms79f5139.h: 261: volatile bit EEIE @ ((unsigned)&PIE1*8)+3;
"262
[v _PWMIE `Vb ~T0 @X0 1 e@1122 ]
[; ;cms79f5139.h: 262: volatile bit PWMIE @ ((unsigned)&PIE1*8)+2;
"263
[v _TMR2IE `Vb ~T0 @X0 1 e@1121 ]
[; ;cms79f5139.h: 263: volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
"264
[v _TMR1IE `Vb ~T0 @X0 1 e@1120 ]
[; ;cms79f5139.h: 264: volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
"268
[v _LVDIE `Vb ~T0 @X0 1 e@1128 ]
[; ;cms79f5139.h: 268: volatile bit LVDIE @ ((unsigned)&PIE2*8)+0;
"272
[v _IRCF2 `Vb ~T0 @X0 1 e@1150 ]
[; ;cms79f5139.h: 272: volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;
"273
[v _IRCF1 `Vb ~T0 @X0 1 e@1149 ]
[; ;cms79f5139.h: 273: volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
"274
[v _IRCF0 `Vb ~T0 @X0 1 e@1148 ]
[; ;cms79f5139.h: 274: volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
"275
[v _SCS `Vb ~T0 @X0 1 e@1144 ]
[; ;cms79f5139.h: 275: volatile bit SCS @ ((unsigned)&OSCCON*8)+0;
"279
[v _TUN4 `Vb ~T0 @X0 1 e@1156 ]
[; ;cms79f5139.h: 279: volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;
"280
[v _TUN3 `Vb ~T0 @X0 1 e@1155 ]
[; ;cms79f5139.h: 280: volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
"281
[v _TUN2 `Vb ~T0 @X0 1 e@1154 ]
[; ;cms79f5139.h: 281: volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
"282
[v _TUN1 `Vb ~T0 @X0 1 e@1153 ]
[; ;cms79f5139.h: 282: volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
"283
[v _TUN0 `Vb ~T0 @X0 1 e@1152 ]
[; ;cms79f5139.h: 283: volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
"287
[v _WPUB5 `Vb ~T0 @X0 1 e@1197 ]
[; ;cms79f5139.h: 287: volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
"288
[v _WPUB4 `Vb ~T0 @X0 1 e@1196 ]
[; ;cms79f5139.h: 288: volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
"289
[v _WPUB3 `Vb ~T0 @X0 1 e@1195 ]
[; ;cms79f5139.h: 289: volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
"290
[v _WPUB2 `Vb ~T0 @X0 1 e@1194 ]
[; ;cms79f5139.h: 290: volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
"291
[v _WPUB1 `Vb ~T0 @X0 1 e@1193 ]
[; ;cms79f5139.h: 291: volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
"292
[v _WPUB0 `Vb ~T0 @X0 1 e@1192 ]
[; ;cms79f5139.h: 292: volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
"296
[v _IOCB5 `Vb ~T0 @X0 1 e@1205 ]
[; ;cms79f5139.h: 296: volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
"297
[v _IOCB4 `Vb ~T0 @X0 1 e@1204 ]
[; ;cms79f5139.h: 297: volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
"298
[v _IOCB3 `Vb ~T0 @X0 1 e@1203 ]
[; ;cms79f5139.h: 298: volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
"299
[v _IOCB2 `Vb ~T0 @X0 1 e@1202 ]
[; ;cms79f5139.h: 299: volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
"300
[v _IOCB1 `Vb ~T0 @X0 1 e@1201 ]
[; ;cms79f5139.h: 300: volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
"301
[v _IOCB0 `Vb ~T0 @X0 1 e@1200 ]
[; ;cms79f5139.h: 301: volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
"304
[v _LVD_RES `Vb ~T0 @X0 1 e@1215 ]
[; ;cms79f5139.h: 304: volatile bit LVD_RES @ ((unsigned)&LVDCON*8)+7;
"305
[v _LVD_SEL2 `Vb ~T0 @X0 1 e@1211 ]
[; ;cms79f5139.h: 305: volatile bit LVD_SEL2 @ ((unsigned)&LVDCON*8)+3;
"306
[v _LVD_SEL1 `Vb ~T0 @X0 1 e@1210 ]
[; ;cms79f5139.h: 306: volatile bit LVD_SEL1 @ ((unsigned)&LVDCON*8)+2;
"307
[v _LVD_SEL0 `Vb ~T0 @X0 1 e@1209 ]
[; ;cms79f5139.h: 307: volatile bit LVD_SEL0 @ ((unsigned)&LVDCON*8)+1;
"308
[v _LVDEN `Vb ~T0 @X0 1 e@1208 ]
[; ;cms79f5139.h: 308: volatile bit LVDEN @ ((unsigned)&LVDCON*8)+0;
"311
[v _CSRC `Vb ~T0 @X0 1 e@1223 ]
[; ;cms79f5139.h: 311: volatile bit CSRC @ ((unsigned)&TXSTA*8)+7;
"312
[v _TX9EN `Vb ~T0 @X0 1 e@1222 ]
[; ;cms79f5139.h: 312: volatile bit TX9EN @ ((unsigned)&TXSTA*8)+6;
"313
[v _TXEN `Vb ~T0 @X0 1 e@1221 ]
[; ;cms79f5139.h: 313: volatile bit TXEN @ ((unsigned)&TXSTA*8)+5;
"314
[v _SYNC `Vb ~T0 @X0 1 e@1220 ]
[; ;cms79f5139.h: 314: volatile bit SYNC @ ((unsigned)&TXSTA*8)+4;
"315
[v _SCKP `Vb ~T0 @X0 1 e@1219 ]
[; ;cms79f5139.h: 315: volatile bit SCKP @ ((unsigned)&TXSTA*8)+3;
"316
[v _TRMT `Vb ~T0 @X0 1 e@1217 ]
[; ;cms79f5139.h: 316: volatile bit TRMT @ ((unsigned)&TXSTA*8)+1;
"317
[v _TX9D `Vb ~T0 @X0 1 e@1216 ]
[; ;cms79f5139.h: 317: volatile bit TX9D @ ((unsigned)&TXSTA*8)+0;
"321
[v _BRG7 `Vb ~T0 @X0 1 e@1231 ]
[; ;cms79f5139.h: 321: volatile bit BRG7 @ ((unsigned)&SPBRG*8)+7;
"322
[v _BRG6 `Vb ~T0 @X0 1 e@1230 ]
[; ;cms79f5139.h: 322: volatile bit BRG6 @ ((unsigned)&SPBRG*8)+6;
"323
[v _BRG5 `Vb ~T0 @X0 1 e@1229 ]
[; ;cms79f5139.h: 323: volatile bit BRG5 @ ((unsigned)&SPBRG*8)+5;
"324
[v _BRG4 `Vb ~T0 @X0 1 e@1228 ]
[; ;cms79f5139.h: 324: volatile bit BRG4 @ ((unsigned)&SPBRG*8)+4;
"325
[v _BRG3 `Vb ~T0 @X0 1 e@1227 ]
[; ;cms79f5139.h: 325: volatile bit BRG3 @ ((unsigned)&SPBRG*8)+3;
"326
[v _BRG2 `Vb ~T0 @X0 1 e@1226 ]
[; ;cms79f5139.h: 326: volatile bit BRG2 @ ((unsigned)&SPBRG*8)+2;
"327
[v _BRG1 `Vb ~T0 @X0 1 e@1225 ]
[; ;cms79f5139.h: 327: volatile bit BRG1 @ ((unsigned)&SPBRG*8)+1;
"328
[v _BRG0 `Vb ~T0 @X0 1 e@1224 ]
[; ;cms79f5139.h: 328: volatile bit BRG0 @ ((unsigned)&SPBRG*8)+0;
"332
[v _OPA0EN `Vb ~T0 @X0 1 e@1239 ]
[; ;cms79f5139.h: 332: volatile bit OPA0EN @ ((unsigned)&OPA0CON*8)+7;
"333
[v _OPA0O `Vb ~T0 @X0 1 e@1238 ]
[; ;cms79f5139.h: 333: volatile bit OPA0O @ ((unsigned)&OPA0CON*8)+6;
"334
[v _OPA0_CMP `Vb ~T0 @X0 1 e@1237 ]
[; ;cms79f5139.h: 334: volatile bit OPA0_CMP @ ((unsigned)&OPA0CON*8)+5;
"335
[v _OPA0_ADC `Vb ~T0 @X0 1 e@1236 ]
[; ;cms79f5139.h: 335: volatile bit OPA0_ADC @ ((unsigned)&OPA0CON*8)+4;
"336
[v _OPA0_FW `Vb ~T0 @X0 1 e@1235 ]
[; ;cms79f5139.h: 336: volatile bit OPA0_FW @ ((unsigned)&OPA0CON*8)+3;
"337
[v _OPA0_BG `Vb ~T0 @X0 1 e@1234 ]
[; ;cms79f5139.h: 337: volatile bit OPA0_BG @ ((unsigned)&OPA0CON*8)+2;
"341
[v _OPA0OUT `Vb ~T0 @X0 1 e@1247 ]
[; ;cms79f5139.h: 341: volatile bit OPA0OUT @ ((unsigned)&OPA0ADJ*8)+7;
"342
[v _OPA0COFM `Vb ~T0 @X0 1 e@1246 ]
[; ;cms79f5139.h: 342: volatile bit OPA0COFM @ ((unsigned)&OPA0ADJ*8)+6;
"343
[v _OPA0CRS `Vb ~T0 @X0 1 e@1245 ]
[; ;cms79f5139.h: 343: volatile bit OPA0CRS @ ((unsigned)&OPA0ADJ*8)+5;
"344
[v _OPA0ADJ4 `Vb ~T0 @X0 1 e@1244 ]
[; ;cms79f5139.h: 344: volatile bit OPA0ADJ4 @ ((unsigned)&OPA0ADJ*8)+4;
"345
[v _OPA0ADJ3 `Vb ~T0 @X0 1 e@1243 ]
[; ;cms79f5139.h: 345: volatile bit OPA0ADJ3 @ ((unsigned)&OPA0ADJ*8)+3;
"346
[v _OPA0ADJ2 `Vb ~T0 @X0 1 e@1242 ]
[; ;cms79f5139.h: 346: volatile bit OPA0ADJ2 @ ((unsigned)&OPA0ADJ*8)+2;
"347
[v _OPA0ADJ1 `Vb ~T0 @X0 1 e@1241 ]
[; ;cms79f5139.h: 347: volatile bit OPA0ADJ1 @ ((unsigned)&OPA0ADJ*8)+1;
"348
[v _OPA0ADJ0 `Vb ~T0 @X0 1 e@1240 ]
[; ;cms79f5139.h: 348: volatile bit OPA0ADJ0 @ ((unsigned)&OPA0ADJ*8)+0;
"352
[v _OPA1EN `Vb ~T0 @X0 1 e@1255 ]
[; ;cms79f5139.h: 352: volatile bit OPA1EN @ ((unsigned)&OPA1CON*8)+7;
"353
[v _OPA1O `Vb ~T0 @X0 1 e@1254 ]
[; ;cms79f5139.h: 353: volatile bit OPA1O @ ((unsigned)&OPA1CON*8)+6;
"354
[v _OPA1_CMP `Vb ~T0 @X0 1 e@1253 ]
[; ;cms79f5139.h: 354: volatile bit OPA1_CMP @ ((unsigned)&OPA1CON*8)+5;
"355
[v _OPA1_ADC `Vb ~T0 @X0 1 e@1252 ]
[; ;cms79f5139.h: 355: volatile bit OPA1_ADC @ ((unsigned)&OPA1CON*8)+4;
"356
[v _OPA1_FW `Vb ~T0 @X0 1 e@1251 ]
[; ;cms79f5139.h: 356: volatile bit OPA1_FW @ ((unsigned)&OPA1CON*8)+3;
"357
[v _OPA1_BG `Vb ~T0 @X0 1 e@1250 ]
[; ;cms79f5139.h: 357: volatile bit OPA1_BG @ ((unsigned)&OPA1CON*8)+2;
"361
[v _OPA1OUT `Vb ~T0 @X0 1 e@1263 ]
[; ;cms79f5139.h: 361: volatile bit OPA1OUT @ ((unsigned)&OPA1ADJ*8)+7;
"362
[v _OPA1COFM `Vb ~T0 @X0 1 e@1262 ]
[; ;cms79f5139.h: 362: volatile bit OPA1COFM @ ((unsigned)&OPA1ADJ*8)+6;
"363
[v _OPA1CRS `Vb ~T0 @X0 1 e@1261 ]
[; ;cms79f5139.h: 363: volatile bit OPA1CRS @ ((unsigned)&OPA1ADJ*8)+5;
"364
[v _OPA1ADJ4 `Vb ~T0 @X0 1 e@1260 ]
[; ;cms79f5139.h: 364: volatile bit OPA1ADJ4 @ ((unsigned)&OPA1ADJ*8)+4;
"365
[v _OPA1ADJ3 `Vb ~T0 @X0 1 e@1259 ]
[; ;cms79f5139.h: 365: volatile bit OPA1ADJ3 @ ((unsigned)&OPA1ADJ*8)+3;
"366
[v _OPA1ADJ2 `Vb ~T0 @X0 1 e@1258 ]
[; ;cms79f5139.h: 366: volatile bit OPA1ADJ2 @ ((unsigned)&OPA1ADJ*8)+2;
"367
[v _OPA1ADJ1 `Vb ~T0 @X0 1 e@1257 ]
[; ;cms79f5139.h: 367: volatile bit OPA1ADJ1 @ ((unsigned)&OPA1ADJ*8)+1;
"368
[v _OPA1ADJ0 `Vb ~T0 @X0 1 e@1256 ]
[; ;cms79f5139.h: 368: volatile bit OPA1ADJ0 @ ((unsigned)&OPA1ADJ*8)+0;
"372
[v _ADFM `Vb ~T0 @X0 1 e@1279 ]
[; ;cms79f5139.h: 372: volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;
"373
[v _LDO_EN `Vb ~T0 @X0 1 e@1274 ]
[; ;cms79f5139.h: 373: volatile bit LDO_EN @ ((unsigned)&ADCON1*8)+2;
"374
[v _LDO_SEL `Vb ~T0 @X0 1 e@1272 ]
[; ;cms79f5139.h: 374: volatile bit LDO_SEL @ ((unsigned)&ADCON1*8)+0;
"378
[v _SWDTEN `Vb ~T0 @X0 1 e@2088 ]
[; ;cms79f5139.h: 378: volatile bit SWDTEN @ ((unsigned)&WDTCON*8)+0;
"382
[v _CLKDIV2 `Vb ~T0 @X0 1 e@2111 ]
[; ;cms79f5139.h: 382: volatile bit CLKDIV2 @ ((unsigned)&PWMCON0*8)+7;
"383
[v _CLKDIV1 `Vb ~T0 @X0 1 e@2110 ]
[; ;cms79f5139.h: 383: volatile bit CLKDIV1 @ ((unsigned)&PWMCON0*8)+6;
"384
[v _CLKDIV0 `Vb ~T0 @X0 1 e@2109 ]
[; ;cms79f5139.h: 384: volatile bit CLKDIV0 @ ((unsigned)&PWMCON0*8)+5;
"385
[v _PWM4EN `Vb ~T0 @X0 1 e@2108 ]
[; ;cms79f5139.h: 385: volatile bit PWM4EN @ ((unsigned)&PWMCON0*8)+4;
"386
[v _PWM3EN `Vb ~T0 @X0 1 e@2107 ]
[; ;cms79f5139.h: 386: volatile bit PWM3EN @ ((unsigned)&PWMCON0*8)+3;
"387
[v _PWM2EN `Vb ~T0 @X0 1 e@2106 ]
[; ;cms79f5139.h: 387: volatile bit PWM2EN @ ((unsigned)&PWMCON0*8)+2;
"388
[v _PWM1EN `Vb ~T0 @X0 1 e@2105 ]
[; ;cms79f5139.h: 388: volatile bit PWM1EN @ ((unsigned)&PWMCON0*8)+1;
"389
[v _PWM0EN `Vb ~T0 @X0 1 e@2104 ]
[; ;cms79f5139.h: 389: volatile bit PWM0EN @ ((unsigned)&PWMCON0*8)+0;
"393
[v _PWM2DTEN `Vb ~T0 @X0 1 e@2117 ]
[; ;cms79f5139.h: 393: volatile bit PWM2DTEN @ ((unsigned)&PWMCON1*8)+5;
"394
[v _PWM0DTEN `Vb ~T0 @X0 1 e@2116 ]
[; ;cms79f5139.h: 394: volatile bit PWM0DTEN @ ((unsigned)&PWMCON1*8)+4;
"395
[v _DT_DIV1 `Vb ~T0 @X0 1 e@2113 ]
[; ;cms79f5139.h: 395: volatile bit DT_DIV1 @ ((unsigned)&PWMCON1*8)+1;
"396
[v _DT_DIV0 `Vb ~T0 @X0 1 e@2112 ]
[; ;cms79f5139.h: 396: volatile bit DT_DIV0 @ ((unsigned)&PWMCON1*8)+0;
"400
[v _PWM4DIR `Vb ~T0 @X0 1 e@2124 ]
[; ;cms79f5139.h: 400: volatile bit PWM4DIR @ ((unsigned)&PWMCON2*8)+4;
"401
[v _PWM3DIR `Vb ~T0 @X0 1 e@2123 ]
[; ;cms79f5139.h: 401: volatile bit PWM3DIR @ ((unsigned)&PWMCON2*8)+3;
"402
[v _PWM2DIR `Vb ~T0 @X0 1 e@2122 ]
[; ;cms79f5139.h: 402: volatile bit PWM2DIR @ ((unsigned)&PWMCON2*8)+2;
"403
[v _PWM1DIR `Vb ~T0 @X0 1 e@2121 ]
[; ;cms79f5139.h: 403: volatile bit PWM1DIR @ ((unsigned)&PWMCON2*8)+1;
"404
[v _PWM0DIR `Vb ~T0 @X0 1 e@2120 ]
[; ;cms79f5139.h: 404: volatile bit PWM0DIR @ ((unsigned)&PWMCON2*8)+0;
"408
[v _EEDAT7 `Vb ~T0 @X0 1 e@2151 ]
[; ;cms79f5139.h: 408: volatile bit EEDAT7 @ ((unsigned)&EEDAT*8)+7;
"409
[v _EEDAT6 `Vb ~T0 @X0 1 e@2150 ]
[; ;cms79f5139.h: 409: volatile bit EEDAT6 @ ((unsigned)&EEDAT*8)+6;
"410
[v _EEDAT5 `Vb ~T0 @X0 1 e@2149 ]
[; ;cms79f5139.h: 410: volatile bit EEDAT5 @ ((unsigned)&EEDAT*8)+5;
"411
[v _EEDAT4 `Vb ~T0 @X0 1 e@2148 ]
[; ;cms79f5139.h: 411: volatile bit EEDAT4 @ ((unsigned)&EEDAT*8)+4;
"412
[v _EEDAT3 `Vb ~T0 @X0 1 e@2147 ]
[; ;cms79f5139.h: 412: volatile bit EEDAT3 @ ((unsigned)&EEDAT*8)+3;
"413
[v _EEDAT2 `Vb ~T0 @X0 1 e@2146 ]
[; ;cms79f5139.h: 413: volatile bit EEDAT2 @ ((unsigned)&EEDAT*8)+2;
"414
[v _EEDAT1 `Vb ~T0 @X0 1 e@2145 ]
[; ;cms79f5139.h: 414: volatile bit EEDAT1 @ ((unsigned)&EEDAT*8)+1;
"415
[v _EEDAT0 `Vb ~T0 @X0 1 e@2144 ]
[; ;cms79f5139.h: 415: volatile bit EEDAT0 @ ((unsigned)&EEDAT*8)+0;
"419
[v _EEADR7 `Vb ~T0 @X0 1 e@2159 ]
[; ;cms79f5139.h: 419: volatile bit EEADR7 @ ((unsigned)&EEADR*8)+7;
"420
[v _EEADR6 `Vb ~T0 @X0 1 e@2158 ]
[; ;cms79f5139.h: 420: volatile bit EEADR6 @ ((unsigned)&EEADR*8)+6;
"421
[v _EEADR5 `Vb ~T0 @X0 1 e@2157 ]
[; ;cms79f5139.h: 421: volatile bit EEADR5 @ ((unsigned)&EEADR*8)+5;
"422
[v _EEADR4 `Vb ~T0 @X0 1 e@2156 ]
[; ;cms79f5139.h: 422: volatile bit EEADR4 @ ((unsigned)&EEADR*8)+4;
"423
[v _EEADR3 `Vb ~T0 @X0 1 e@2155 ]
[; ;cms79f5139.h: 423: volatile bit EEADR3 @ ((unsigned)&EEADR*8)+3;
"424
[v _EEADR2 `Vb ~T0 @X0 1 e@2154 ]
[; ;cms79f5139.h: 424: volatile bit EEADR2 @ ((unsigned)&EEADR*8)+2;
"425
[v _EEADR1 `Vb ~T0 @X0 1 e@2153 ]
[; ;cms79f5139.h: 425: volatile bit EEADR1 @ ((unsigned)&EEADR*8)+1;
"426
[v _EEADR0 `Vb ~T0 @X0 1 e@2152 ]
[; ;cms79f5139.h: 426: volatile bit EEADR0 @ ((unsigned)&EEADR*8)+0;
"430
[v _EEDATH7 `Vb ~T0 @X0 1 e@2167 ]
[; ;cms79f5139.h: 430: volatile bit EEDATH7 @ ((unsigned)&EEDATH*8)+7;
"431
[v _EEDATH6 `Vb ~T0 @X0 1 e@2166 ]
[; ;cms79f5139.h: 431: volatile bit EEDATH6 @ ((unsigned)&EEDATH*8)+6;
"432
[v _EEDATH5 `Vb ~T0 @X0 1 e@2165 ]
[; ;cms79f5139.h: 432: volatile bit EEDATH5 @ ((unsigned)&EEDATH*8)+5;
"433
[v _EEDATH4 `Vb ~T0 @X0 1 e@2164 ]
[; ;cms79f5139.h: 433: volatile bit EEDATH4 @ ((unsigned)&EEDATH*8)+4;
"434
[v _EEDATH3 `Vb ~T0 @X0 1 e@2163 ]
[; ;cms79f5139.h: 434: volatile bit EEDATH3 @ ((unsigned)&EEDATH*8)+3;
"435
[v _EEDATH2 `Vb ~T0 @X0 1 e@2162 ]
[; ;cms79f5139.h: 435: volatile bit EEDATH2 @ ((unsigned)&EEDATH*8)+2;
"436
[v _EEDATH1 `Vb ~T0 @X0 1 e@2161 ]
[; ;cms79f5139.h: 436: volatile bit EEDATH1 @ ((unsigned)&EEDATH*8)+1;
"437
[v _EEDATH0 `Vb ~T0 @X0 1 e@2160 ]
[; ;cms79f5139.h: 437: volatile bit EEDATH0 @ ((unsigned)&EEDATH*8)+0;
"441
[v _EEADRH3 `Vb ~T0 @X0 1 e@2171 ]
[; ;cms79f5139.h: 441: volatile bit EEADRH3 @ ((unsigned)&EEADRH*8)+3;
"442
[v _EEADRH2 `Vb ~T0 @X0 1 e@2170 ]
[; ;cms79f5139.h: 442: volatile bit EEADRH2 @ ((unsigned)&EEADRH*8)+2;
"443
[v _EEADRH1 `Vb ~T0 @X0 1 e@2169 ]
[; ;cms79f5139.h: 443: volatile bit EEADRH1 @ ((unsigned)&EEADRH*8)+1;
"444
[v _EEADRH0 `Vb ~T0 @X0 1 e@2168 ]
[; ;cms79f5139.h: 444: volatile bit EEADRH0 @ ((unsigned)&EEADRH*8)+0;
"448
[v _PWMD19 `Vb ~T0 @X0 1 e@2277 ]
[; ;cms79f5139.h: 448: volatile bit PWMD19 @ ((unsigned)&PWMD01H*8)+5;
"449
[v _PWMD18 `Vb ~T0 @X0 1 e@2276 ]
[; ;cms79f5139.h: 449: volatile bit PWMD18 @ ((unsigned)&PWMD01H*8)+4;
"450
[v _PWMD09 `Vb ~T0 @X0 1 e@2273 ]
[; ;cms79f5139.h: 450: volatile bit PWMD09 @ ((unsigned)&PWMD01H*8)+1;
"451
[v _PWMD08 `Vb ~T0 @X0 1 e@2272 ]
[; ;cms79f5139.h: 451: volatile bit PWMD08 @ ((unsigned)&PWMD01H*8)+0;
"455
[v _PWMD39 `Vb ~T0 @X0 1 e@2285 ]
[; ;cms79f5139.h: 455: volatile bit PWMD39 @ ((unsigned)&PWMD23H*8)+5;
"456
[v _PWMD38 `Vb ~T0 @X0 1 e@2284 ]
[; ;cms79f5139.h: 456: volatile bit PWMD38 @ ((unsigned)&PWMD23H*8)+4;
"457
[v _PWMD29 `Vb ~T0 @X0 1 e@2281 ]
[; ;cms79f5139.h: 457: volatile bit PWMD29 @ ((unsigned)&PWMD23H*8)+1;
"458
[v _PWMD28 `Vb ~T0 @X0 1 e@2280 ]
[; ;cms79f5139.h: 458: volatile bit PWMD28 @ ((unsigned)&PWMD23H*8)+0;
"462
[v _ANS7 `Vb ~T0 @X0 1 e@3143 ]
[; ;cms79f5139.h: 462: volatile bit ANS7 @ ((unsigned)&ANSEL*8)+7;
"463
[v _ANS6 `Vb ~T0 @X0 1 e@3142 ]
[; ;cms79f5139.h: 463: volatile bit ANS6 @ ((unsigned)&ANSEL*8)+6;
"464
[v _ANS5 `Vb ~T0 @X0 1 e@3141 ]
[; ;cms79f5139.h: 464: volatile bit ANS5 @ ((unsigned)&ANSEL*8)+5;
"465
[v _ANS4 `Vb ~T0 @X0 1 e@3140 ]
[; ;cms79f5139.h: 465: volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;
"466
[v _ANS3 `Vb ~T0 @X0 1 e@3139 ]
[; ;cms79f5139.h: 466: volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
"467
[v _ANS2 `Vb ~T0 @X0 1 e@3138 ]
[; ;cms79f5139.h: 467: volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
"468
[v _ANS1 `Vb ~T0 @X0 1 e@3137 ]
[; ;cms79f5139.h: 468: volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;
"472
[v _ANS13 `Vb ~T0 @X0 1 e@3149 ]
[; ;cms79f5139.h: 472: volatile bit ANS13 @ ((unsigned)&ANSELH*8)+5;
"473
[v _ANS12 `Vb ~T0 @X0 1 e@3148 ]
[; ;cms79f5139.h: 473: volatile bit ANS12 @ ((unsigned)&ANSELH*8)+4;
"474
[v _ANS11 `Vb ~T0 @X0 1 e@3147 ]
[; ;cms79f5139.h: 474: volatile bit ANS11 @ ((unsigned)&ANSELH*8)+3;
"475
[v _ANS10 `Vb ~T0 @X0 1 e@3146 ]
[; ;cms79f5139.h: 475: volatile bit ANS10 @ ((unsigned)&ANSELH*8)+2;
"476
[v _ANS9 `Vb ~T0 @X0 1 e@3145 ]
[; ;cms79f5139.h: 476: volatile bit ANS9 @ ((unsigned)&ANSELH*8)+1;
"477
[v _ANS8 `Vb ~T0 @X0 1 e@3144 ]
[; ;cms79f5139.h: 477: volatile bit ANS8 @ ((unsigned)&ANSELH*8)+0;
"481
[v _EEPGD `Vb ~T0 @X0 1 e@3175 ]
[; ;cms79f5139.h: 481: volatile bit EEPGD @ ((unsigned)&EECON1*8)+7;
"482
[v _WRERR `Vb ~T0 @X0 1 e@3171 ]
[; ;cms79f5139.h: 482: volatile bit WRERR @ ((unsigned)&EECON1*8)+3;
"483
[v _WREN `Vb ~T0 @X0 1 e@3170 ]
[; ;cms79f5139.h: 483: volatile bit WREN @ ((unsigned)&EECON1*8)+2;
"484
[v _WR `Vb ~T0 @X0 1 e@3169 ]
[; ;cms79f5139.h: 484: volatile bit WR @ ((unsigned)&EECON1*8)+1;
"485
[v _RD `Vb ~T0 @X0 1 e@3168 ]
[; ;cms79f5139.h: 485: volatile bit RD @ ((unsigned)&EECON1*8)+0;
"489
[v _WPUA7 `Vb ~T0 @X0 1 e@3191 ]
[; ;cms79f5139.h: 489: volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;
"490
[v _WPUA6 `Vb ~T0 @X0 1 e@3190 ]
[; ;cms79f5139.h: 490: volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
"491
[v _WPUA5 `Vb ~T0 @X0 1 e@3189 ]
[; ;cms79f5139.h: 491: volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
"492
[v _WPUA4 `Vb ~T0 @X0 1 e@3188 ]
[; ;cms79f5139.h: 492: volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
"493
[v _WPUA3 `Vb ~T0 @X0 1 e@3187 ]
[; ;cms79f5139.h: 493: volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
"494
[v _WPUA2 `Vb ~T0 @X0 1 e@3186 ]
[; ;cms79f5139.h: 494: volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
"495
[v _WPUA1 `Vb ~T0 @X0 1 e@3185 ]
[; ;cms79f5139.h: 495: volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
"496
[v _WPUA0 `Vb ~T0 @X0 1 e@3184 ]
[; ;cms79f5139.h: 496: volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
[; ;cms.h: 28: extern void __nop(void);
[; ;cms.h: 76: extern unsigned int flash_read(unsigned short addr);
[; ;cms.h: 150: extern __nonreentrant void _delay(unsigned long);
[; ;cms.h: 184: extern unsigned char __resetbits;
[; ;cms.h: 185: extern __bit __powerdown;
[; ;cms.h: 186: extern __bit __timeout;
[; ;delay.h: 8: void Delay(unsigned int dtemp);
[; ;delay.h: 9: void Delay_nms (unsigned int inittempl);
"7 C:\mcuproject\scm\xfx\追频+干烧检水-24V2.4M(0818-A)\追频+干烧检水-24V2.4M(0904)\追频+干烧检水-24V2.4M - 副本\WHQ_TP_ZPGS.h
[p n 752,759,520 ]
[; ;WHQ_TP_ZPGS.h: 11: extern volatile unsigned char cur_addat;
[; ;WHQ_TP_ZPGS.h: 12: extern unsigned int pwmdisp;
[; ;WHQ_TP_ZPGS.h: 13: extern unsigned int xldisp;
[; ;WHQ_TP_ZPGS.h: 17: extern unsigned char Test_Pwm(void);
[; ;WHQ_TP_ZPGS.h: 25: extern void Set_Pwm_Onoff(unsigned char fun);
"179
[v _pfg_select `Cuc ~T0 @X0 1 e ]
[i _pfg_select
-> -> 2 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 179: const unsigned char pfg_select = 2;
"181
[v _Cur_Adcon `Cuc ~T0 @X0 1 e ]
[i _Cur_Adcon
-> << -> 1 `i -> 2 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 181: const unsigned char Cur_Adcon = 1<<2;
"183
[v _PwmFst `Cuc ~T0 @X0 1 e ]
[i _PwmFst
-> -> 250 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 183: const unsigned char PwmFst = 250;
"184
[v _PwmLst `Cuc ~T0 @X0 1 e ]
[i _PwmLst
-> -> 250 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 184: const unsigned char PwmLst = 250;
"186
[v _Curlimitf `Cuc ~T0 @X0 1 e ]
[i _Curlimitf
-> -> 1 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 186: const unsigned char Curlimitf = 1;
"187
[v _Curlimitl `Cuc ~T0 @X0 1 e ]
[i _Curlimitl
-> -> 5 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 187: const unsigned char Curlimitl = 5;
"189
[v _Pwmmaxc `Cuc ~T0 @X0 1 e ]
[i _Pwmmaxc
-> -> 48 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 189: const unsigned char Pwmmaxc = 48;
"190
[v _Pwmcyl `Cuc ~T0 @X0 1 e ]
[i _Pwmcyl
-> -> 24 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 190: const unsigned char Pwmcyl = 24;
"192
[v _Curlmtl `Cuc ~T0 @X0 1 e ]
[i _Curlmtl
-> -> 5 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 192: const unsigned char Curlmtl = 5;
"193
[v _Curlmth `Cuc ~T0 @X0 1 e ]
[i _Curlmth
-> -> 6 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 193: const unsigned char Curlmth = 6;
"194
[v _Kj_Fre `Cuc ~T0 @X0 1 e ]
[i _Kj_Fre
-> -> 1 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 194: const unsigned char Kj_Fre = 1;
"195
[v _curset `Cuc ~T0 @X0 1 e ]
[i _curset
-> -> 30 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 195: const unsigned char curset = 30;
"197
[v _D_En `Cuc ~T0 @X0 1 e ]
[i _D_En
-> -> 0 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 197: const unsigned char D_En = 0;
"198
[v _Drange `Cuc ~T0 @X0 1 e ]
[i _Drange
-> -> 16 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 198: const unsigned char Drange = 16;
"199
[v _Dbujin `Cuc ~T0 @X0 1 e ]
[i _Dbujin
-> -> 8 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 199: const unsigned char Dbujin = 0B00001000;
"200
[v _Djiange `Cuc ~T0 @X0 1 e ]
[i _Djiange
-> -> 2 `i `uc
]
[; ;WHQ_TP_ZPGS.h: 200: const unsigned char Djiange = 0B00000010;
[; ;WHQ_Sender.h: 10: void WHQ_SenderLoop();
"8 C:\mcuproject\scm\xfx\追频+干烧检水-24V2.4M(0818-A)\追频+干烧检水-24V2.4M(0904)\追频+干烧检水-24V2.4M - 副本\iic_soft.h
[v _I2C_SCL_IO `Vb ~T0 @X0 1 e@1074 ]
[; ;iic_soft.h: 8: volatile bit I2C_SCL_IO @((unsigned)&TRISB*8)+2;
"9
[v _I2C_SDA_IO `Vb ~T0 @X0 1 e@1075 ]
[; ;iic_soft.h: 9: volatile bit I2C_SDA_IO @((unsigned)&TRISB*8)+3;
[; ;iic_soft.h: 11: unsigned char I2C_Read1bYTE(unsigned char ack);
[; ;iic_soft.h: 12: unsigned char I2C_Write1bYTE(unsigned char data);
[; ;iic_soft.h: 13: void I2C_WriteStop();
[; ;iic_soft.h: 14: void I2C_WriteStart();
[; ;iic_soft.h: 15: void I2C_WaitMoment();
[; ;WHQ_Sender.h: 21: typedef int s32;
[; ;WHQ_Sender.h: 22: typedef short int s16;
[; ;WHQ_Sender.h: 23: typedef char s8;
[; ;WHQ_Sender.h: 25: typedef unsigned int u32;
[; ;WHQ_Sender.h: 26: typedef unsigned short int u16;
[; ;WHQ_Sender.h: 27: typedef unsigned char u8;
[; ;WHQ_Sender.h: 38: typedef struct _PackHeader
[; ;WHQ_Sender.h: 39: {
[; ;WHQ_Sender.h: 40: u8 length;
[; ;WHQ_Sender.h: 41: union
[; ;WHQ_Sender.h: 42: {
[; ;WHQ_Sender.h: 43: u16 mask;
[; ;WHQ_Sender.h: 44: struct
[; ;WHQ_Sender.h: 45: {
[; ;WHQ_Sender.h: 46: u8 packIdx : 4;
[; ;WHQ_Sender.h: 47: u8 packIdxMax : 4;
[; ;WHQ_Sender.h: 48: u8 typeId;
[; ;WHQ_Sender.h: 49: }m;
[; ;WHQ_Sender.h: 50: };
[; ;WHQ_Sender.h: 51: }PackHeader;
[; ;main.c: 23: typedef unsigned int u16t;
[; ;main.c: 24: typedef unsigned char u8t;
"26 C:\mcuproject\scm\xfx\追频+干烧检水-24V2.4M(0818-A)\追频+干烧检水-24V2.4M(0904)\追频+干烧检水-24V2.4M - 副本\main.c
[v _tcount `Vuc ~T0 @X0 1 e ]
[; ;main.c: 26: volatile unsigned char tcount;
"27
[v _errf `Vb ~T0 @X0 1 e ]
[; ;main.c: 27: volatile bit errf;
"28
[v _errff `Vb ~T0 @X0 1 e ]
[; ;main.c: 28: volatile bit errff;
"29
[v _onoff `Vb ~T0 @X0 1 e ]
[; ;main.c: 29: volatile bit onoff;
"30
[v _AD_Result `Vui ~T0 @X0 1 e ]
[; ;main.c: 30: volatile unsigned int AD_Result;
"31
[v _currDuty `Vuc ~T0 @X0 1 e ]
[; ;main.c: 31: volatile unsigned char currDuty;
"32
[v _addTime `Vuc ~T0 @X0 1 e ]
[; ;main.c: 32: volatile unsigned char addTime;
"33
[v _subTime `Vuc ~T0 @X0 1 e ]
[; ;main.c: 33: volatile unsigned char subTime;
"34
[v _keyCount `uc ~T0 @X0 1 e ]
[; ;main.c: 34: unsigned char keyCount;
"35
[v _whFlag `uc ~T0 @X0 1 e ]
[i _whFlag
-> -> 0 `i `uc
]
[; ;main.c: 35: u8t whFlag = 0;
"36
[v _Recebuffer `uc ~T0 @X0 -> 4 `i e ]
[; ;main.c: 36: unsigned char Recebuffer[4];
"37
[v _rececount `uc ~T0 @X0 1 e ]
[i _rececount
-> -> 0 `i `uc
]
[; ;main.c: 37: u8t rececount = 0;
"38
[v _revFlagTime `uc ~T0 @X0 1 e ]
[i _revFlagTime
-> -> 0 `i `uc
]
[; ;main.c: 38: u8t revFlagTime = 0;
"39
[v _processFlag `uc ~T0 @X0 1 e ]
[i _processFlag
-> -> 0 `i `uc
]
[; ;main.c: 39: u8t processFlag = 0;
"40
[v _led1Step `uc ~T0 @X0 1 e ]
[i _led1Step
-> -> 0 `i `uc
]
[; ;main.c: 40: u8t led1Step = 0;
"41
[v _led2Step `uc ~T0 @X0 1 e ]
[i _led2Step
-> -> 0 `i `uc
]
[; ;main.c: 41: u8t led2Step = 0;
"42
[v _chrgStep `uc ~T0 @X0 1 e ]
[i _chrgStep
-> -> 0 `i `uc
]
[; ;main.c: 42: u8t chrgStep = 0;
"43
[v _redDuty `uc ~T0 @X0 1 e ]
[i _redDuty
-> -> 0 `i `uc
]
[; ;main.c: 43: u8t redDuty = 0;
"44
[v _greenDuty `uc ~T0 @X0 1 e ]
[i _greenDuty
-> -> 0 `i `uc
]
[; ;main.c: 44: u8t greenDuty = 0;
"45
[v _blueDuty `uc ~T0 @X0 1 e ]
[i _blueDuty
-> -> 0 `i `uc
]
[; ;main.c: 45: u8t blueDuty = 0;
"46
[v _curLedCnt `uc ~T0 @X0 1 e ]
[i _curLedCnt
-> -> 0 `i `uc
]
[; ;main.c: 46: u8t curLedCnt = 0;
"47
[v _cRedDuty `uc ~T0 @X0 1 e ]
[i _cRedDuty
-> -> 0 `i `uc
]
[; ;main.c: 47: u8t cRedDuty = 0;
"48
[v _cGreenDuty `uc ~T0 @X0 1 e ]
[i _cGreenDuty
-> -> 0 `i `uc
]
[; ;main.c: 48: u8t cGreenDuty = 0;
"49
[v _cBlueDuty `uc ~T0 @X0 1 e ]
[i _cBlueDuty
-> -> 0 `i `uc
]
[; ;main.c: 49: u8t cBlueDuty = 0;
"50
[v _revTime `uc ~T0 @X0 1 e ]
[i _revTime
-> -> 0 `i `uc
]
[; ;main.c: 50: u8t revTime = 0;
"51
[v _startTime `uc ~T0 @X0 1 e ]
[i _startTime
-> -> 0 `i `uc
]
[; ;main.c: 51: u8t startTime = 0;
"52
[v _count2s `uc ~T0 @X0 1 e ]
[i _count2s
-> -> 0 `i `uc
]
[; ;main.c: 52: u8t count2s = 0;
"53
[v _colorStep `uc ~T0 @X0 1 e ]
[i _colorStep
-> -> 0 `i `uc
]
[; ;main.c: 53: u8t colorStep = 0;
"54
[v _count2 `uc ~T0 @X0 1 e ]
[i _count2
-> -> 0 `i `uc
]
[; ;main.c: 54: u8t count2 = 0;
"55
[v _lastRed `uc ~T0 @X0 1 e ]
[i _lastRed
-> -> 0 `i `uc
]
[; ;main.c: 55: u8t lastRed = 0;
"56
[v _lastGreen `uc ~T0 @X0 1 e ]
[i _lastGreen
-> -> 0 `i `uc
]
[; ;main.c: 56: u8t lastGreen = 0;
"57
[v _lastBlue `uc ~T0 @X0 1 e ]
[i _lastBlue
-> -> 0 `i `uc
]
[; ;main.c: 57: u8t lastBlue = 0;
"58
[v _delayTime `uc ~T0 @X0 1 e ]
[i _delayTime
-> -> 0 `i `uc
]
[; ;main.c: 58: u8t delayTime = 0;
"59
[v _mClorStep `uc ~T0 @X0 1 e ]
[i _mClorStep
-> -> 0 `i `uc
]
[; ;main.c: 59: u8t mClorStep = 0;
"60
[v _ganshaoFlag `uc ~T0 @X0 1 e ]
[i _ganshaoFlag
-> -> 0 `i `uc
]
[; ;main.c: 60: u8t ganshaoFlag = 0;
"61
[v _clastRed `uc ~T0 @X0 1 e ]
[i _clastRed
-> -> 0 `i `uc
]
[; ;main.c: 61: u8t clastRed = 0;
"62
[v _clastGreen `uc ~T0 @X0 1 e ]
[i _clastGreen
-> -> 0 `i `uc
]
[; ;main.c: 62: u8t clastGreen = 0;
"63
[v _clastBlue `uc ~T0 @X0 1 e ]
[i _clastBlue
-> -> 0 `i `uc
]
[; ;main.c: 63: u8t clastBlue = 0;
"64
[v _cdelayTime `uc ~T0 @X0 1 e ]
[i _cdelayTime
-> -> 0 `i `uc
]
[; ;main.c: 64: u8t cdelayTime = 0;
"65
[v _cClorStep `uc ~T0 @X0 1 e ]
[i _cClorStep
-> -> 0 `i `uc
]
[; ;main.c: 65: u8t cClorStep = 0;
"66
[v _ganshaoTime `uc ~T0 @X0 1 e ]
[i _ganshaoTime
-> -> 0 `i `uc
]
[; ;main.c: 66: u8t ganshaoTime = 0;
"67
[v _ganshaoCheckTime `uc ~T0 @X0 1 e ]
[i _ganshaoCheckTime
-> -> 0 `i `uc
]
[; ;main.c: 67: u8t ganshaoCheckTime = 0;
"68
[v _tm2Flag `uc ~T0 @X0 1 e ]
[i _tm2Flag
-> -> 0 `i `uc
]
[; ;main.c: 68: u8t tm2Flag = 0;
"69
[v _count125us `uc ~T0 @X0 1 e ]
[i _count125us
-> -> 0 `i `uc
]
[; ;main.c: 69: u8t count125us = 0;
[; ;main.c: 71: void AD_Testing(unsigned char ad_fd,unsigned char ad_ch,unsigned char ad_lr);
[; ;main.c: 72: void Set_CCP_PWM();
[; ;main.c: 73: void keyCtr();
[; ;main.c: 74: void checkVoll();
[; ;main.c: 75: void closePWM();
[; ;main.c: 76: void Set_Usart_Async();
[; ;main.c: 77: void breathAddLed(u8t* ledDuty);
[; ;main.c: 78: void breathSubLed(u8t* ledDuty);
[; ;main.c: 79: void rgbShow();
[; ;main.c: 80: void colorCtr();
[; ;main.c: 81: void uartRevCtr();
[; ;main.c: 82: void checkLed();
[; ;main.c: 83: void rainbow();
[; ;main.c: 84: void rainbow2();
"93
[v _Init_ic `(v ~T0 @X0 1 ef ]
"94
{
[; ;main.c: 93: void Init_ic (void)
[; ;main.c: 94: {
[e :U _Init_ic ]
[f ]
[; ;main.c: 95: PORTA = 0;
"95
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 96: PORTB = 0;
"96
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 97: INTCON = 0xC0;
"97
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 98: PIR1 = 0;
"98
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 99: PIR2 = 0;
"99
[e = _PIR2 -> -> 0 `i `uc ]
[; ;main.c: 100: WDTCON = 0x01;
"100
[e = _WDTCON -> -> 1 `i `uc ]
[; ;main.c: 101: TRISA = 0x06;
"101
[e = _TRISA -> -> 6 `i `uc ]
[; ;main.c: 102: TRISB = 0x11;
"102
[e = _TRISB -> -> 17 `i `uc ]
[; ;main.c: 103: OPTION_REG = 0;
"103
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 104: OSCCON = 0x71;
"104
[e = _OSCCON -> -> 113 `i `uc ]
[; ;main.c: 105: PIE1 = 0;
"105
[e = _PIE1 -> -> 0 `i `uc ]
[; ;main.c: 106: PIE2 = 0;
"106
[e = _PIE2 -> -> 0 `i `uc ]
[; ;main.c: 107: IOCB = 0;
"107
[e = _IOCB -> -> 0 `i `uc ]
[; ;main.c: 108: WPUA = 0x20;
"108
[e = _WPUA -> -> 32 `i `uc ]
[; ;main.c: 109: WPUB = 0;
"109
[e = _WPUB -> -> 0 `i `uc ]
[; ;main.c: 110: }
"110
[e :UE 4 ]
}
"117
[v _Init_ram `(v ~T0 @X0 1 ef ]
"118
{
[; ;main.c: 117: void Init_ram (void)
[; ;main.c: 118: {
[e :U _Init_ram ]
[f ]
[; ;main.c: 119: PIE2 = 0;
"119
[e = _PIE2 -> -> 0 `i `uc ]
[; ;main.c: 120: PIE1 = 0B00000010;
"120
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 121: PR2 = 50;
"121
[e = _PR2 -> -> 50 `i `uc ]
[; ;main.c: 122: T2CON = 5;
"122
[e = _T2CON -> -> 5 `i `uc ]
[; ;main.c: 123: INTCON = 0XC0;
"123
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 124: onoff = 1;
"124
[e = _onoff -> -> 1 `i `b ]
[; ;main.c: 125: }
"125
[e :UE 5 ]
}
"132
[v _Sys_set `(v ~T0 @X0 1 ef ]
"133
{
[; ;main.c: 132: void Sys_set (void)
[; ;main.c: 133: {
[e :U _Sys_set ]
[f ]
[; ;main.c: 134: asm("clrwdt");
"134
[; <" clrwdt ;# ">
[; ;main.c: 135: WDTCON = 0x01;
"135
[e = _WDTCON -> -> 1 `i `uc ]
[; ;main.c: 136: TRISA = 0x06;
"136
[e = _TRISA -> -> 6 `i `uc ]
[; ;main.c: 137: TRISB = 0x11;
"137
[e = _TRISB -> -> 17 `i `uc ]
[; ;main.c: 138: OPTION_REG = 0;
"138
[e = _OPTION_REG -> -> 0 `i `uc ]
[; ;main.c: 139: PIE1 = 0B00000010;
"139
[e = _PIE1 -> -> 2 `i `uc ]
[; ;main.c: 140: PR2 = 50;
"140
[e = _PR2 -> -> 50 `i `uc ]
[; ;main.c: 141: INTCON = 0XC0;
"141
[e = _INTCON -> -> 192 `i `uc ]
[; ;main.c: 142: if(5 != T2CON)
"142
[e $ ! != -> 5 `i -> _T2CON `i 7  ]
[; ;main.c: 143: T2CON = 5;
"143
[e = _T2CON -> -> 5 `i `uc ]
[e :U 7 ]
[; ;main.c: 144: }
"144
[e :UE 6 ]
}
"152
[v _Pwm_Test `(v ~T0 @X0 1 ef ]
"153
{
[; ;main.c: 152: void Pwm_Test(void)
[; ;main.c: 153: {
[e :U _Pwm_Test ]
[f ]
"154
[v _templ `uc ~T0 @X0 1 a ]
[; ;main.c: 154: unsigned char templ;
[; ;main.c: 155: templ = Test_Pwm();
"155
[e = _templ ( _Test_Pwm ..  ]
[; ;main.c: 157: if(0x55 == templ)
"157
[e $ ! == -> 85 `i -> _templ `i 9  ]
[; ;main.c: 158: errf = 1;
"158
[e = _errf -> -> 1 `i `b ]
[e $U 10  ]
"159
[e :U 9 ]
[; ;main.c: 159: else if(0xff == templ)
[e $ ! == -> 255 `i -> _templ `i 11  ]
[; ;main.c: 160: errf = 1;
"160
[e = _errf -> -> 1 `i `b ]
[e :U 11 ]
"161
[e :U 10 ]
[; ;main.c: 161: }
[e :UE 8 ]
}
"169
[v _Set_Work `(v ~T0 @X0 1 ef ]
"170
{
[; ;main.c: 169: void Set_Work(void)
[; ;main.c: 170: {
[e :U _Set_Work ]
[f ]
[; ;main.c: 171: if(errf)
"171
[e $ ! _errf 13  ]
[; ;main.c: 172: {
"172
{
[; ;main.c: 173: errf = 0;
"173
[e = _errf -> -> 0 `i `b ]
[; ;main.c: 174: onoff = 0;
"174
[e = _onoff -> -> 0 `i `b ]
[; ;main.c: 175: ganshaoFlag = 1;
"175
[e = _ganshaoFlag -> -> 1 `i `uc ]
"176
}
[e :U 13 ]
[; ;main.c: 176: }
[; ;main.c: 178: }
"178
[e :UE 12 ]
}
[v $root$_time0 `(v ~T0 @X0 0 e ]
[v F782 `(v ~T0 @X0 1 tf ]
"183
[v _time0 `IF782 ~T0 @X0 1 e ]
"184
{
[; ;main.c: 183: void interrupt time0(void)
[; ;main.c: 184: {
[e :U _time0 ]
[f ]
[; ;main.c: 185: if(RCIF)
"185
[e $ ! _RCIF 15  ]
[; ;main.c: 186: {
"186
{
[; ;main.c: 188: revTime = 0;
"188
[e = _revTime -> -> 0 `i `uc ]
[; ;main.c: 189: Recebuffer[rececount] = RCREG;
"189
[e = *U + &U _Recebuffer * -> _rececount `ux -> -> # *U &U _Recebuffer `ui `ux _RCREG ]
[; ;main.c: 190: rececount++;
"190
[e ++ _rececount -> -> 1 `i `uc ]
[; ;main.c: 192: if(rececount >= 4)
"192
[e $ ! >= -> _rececount `i -> 4 `i 16  ]
[; ;main.c: 193: {
"193
{
[; ;main.c: 194: rececount = 0;
"194
[e = _rececount -> -> 0 `i `uc ]
"195
}
[e :U 16 ]
[; ;main.c: 195: }
[; ;main.c: 197: if(OERR)
"197
[e $ ! _OERR 17  ]
[; ;main.c: 198: {
"198
{
[; ;main.c: 199: CREN = 0;
"199
[e = _CREN -> -> 0 `i `b ]
[; ;main.c: 200: CREN = 1;
"200
[e = _CREN -> -> 1 `i `b ]
"201
}
[e :U 17 ]
"203
}
[e :U 15 ]
[; ;main.c: 201: }
[; ;main.c: 203: }
[; ;main.c: 205: if(TMR2IF)
"205
[e $ ! _TMR2IF 18  ]
[; ;main.c: 206: {
"206
{
[; ;main.c: 207: TMR2IF = 0;
"207
[e = _TMR2IF -> -> 0 `i `b ]
[; ;main.c: 208: tm2Flag = 1;
"208
[e = _tm2Flag -> -> 1 `i `uc ]
[; ;main.c: 209: if(++count125us > 4)
"209
[e $ ! > -> =+ _count125us -> -> 1 `i `uc `i -> 4 `i 19  ]
[; ;main.c: 210: {
"210
{
[; ;main.c: 211: count125us = 0;
"211
[e = _count125us -> -> 0 `i `uc ]
[; ;main.c: 212: tcount ++;
"212
[e ++ _tcount -> -> 1 `i `uc ]
[; ;main.c: 213: if(onoff)
"213
[e $ ! _onoff 20  ]
[; ;main.c: 214: {
"214
{
[; ;main.c: 215: Set_Pwm_Onoff(20);
"215
[e ( _Set_Pwm_Onoff (1 -> -> 20 `i `uc ]
"216
}
[; ;main.c: 216: }
[e $U 21  ]
"217
[e :U 20 ]
[; ;main.c: 217: else
[; ;main.c: 218: {
"218
{
[; ;main.c: 219: Set_Pwm_Onoff(0);
"219
[e ( _Set_Pwm_Onoff (1 -> -> 0 `i `uc ]
"220
}
[e :U 21 ]
"221
}
[e :U 19 ]
"222
}
[; ;main.c: 220: }
[; ;main.c: 221: }
[; ;main.c: 222: }
[e $U 22  ]
"223
[e :U 18 ]
[; ;main.c: 223: else
[; ;main.c: 224: {
"224
{
[; ;main.c: 225: PIR1 = 0;
"225
[e = _PIR1 -> -> 0 `i `uc ]
[; ;main.c: 226: PIR2 = 0;
"226
[e = _PIR2 -> -> 0 `i `uc ]
"227
}
[e :U 22 ]
[; ;main.c: 227: }
[; ;main.c: 230: }
"230
[e :UE 14 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"237
[v _main `(v ~T0 @X0 1 ef ]
"238
{
[; ;main.c: 237: void main(void)
[; ;main.c: 238: {
[e :U _main ]
[f ]
"239
[v F785 `ui ~T0 @X0 1 s sec ]
[; ;main.c: 239: static unsigned int sec;
[; ;main.c: 241: asm("clrwdt");
"241
[; <" clrwdt ;# ">
[; ;main.c: 242: Init_ic();
"242
[e ( _Init_ic ..  ]
[; ;main.c: 243: Delay_nms(200);
"243
[e ( _Delay_nms (1 -> -> 200 `i `ui ]
[; ;main.c: 244: Init_ram();
"244
[e ( _Init_ram ..  ]
[; ;main.c: 245: Set_Usart_Async();
"245
[e ( _Set_Usart_Async ..  ]
[; ;main.c: 246: whFlag = 1;
"246
[e = _whFlag -> -> 1 `i `uc ]
[; ;main.c: 247: led1Step = 3;
"247
[e = _led1Step -> -> 3 `i `uc ]
[; ;main.c: 248: led2Step = 3;
"248
[e = _led2Step -> -> 3 `i `uc ]
[; ;main.c: 249: startTime = 200;
"249
[e = _startTime -> -> 200 `i `uc ]
[; ;main.c: 250: while(1)
"250
[e :U 25 ]
[; ;main.c: 251: {
"251
{
[; ;main.c: 252: if(whFlag || startTime > 0)
"252
[e $ ! || != -> _whFlag `i -> -> -> 0 `i `uc `i > -> _startTime `i -> 0 `i 27  ]
[; ;main.c: 253: {
"253
{
[; ;main.c: 254: if(tm2Flag)
"254
[e $ ! != -> _tm2Flag `i -> -> -> 0 `i `uc `i 28  ]
[; ;main.c: 255: {
"255
{
[; ;main.c: 256: tm2Flag = 0;
"256
[e = _tm2Flag -> -> 0 `i `uc ]
[; ;main.c: 257: rgbShow();
"257
[e ( _rgbShow ..  ]
"258
}
[e :U 28 ]
"259
}
[e :U 27 ]
[; ;main.c: 258: }
[; ;main.c: 259: }
[; ;main.c: 260: if(tcount >= 40)
"260
[e $ ! >= -> _tcount `i -> 40 `i 29  ]
[; ;main.c: 261: {
"261
{
[; ;main.c: 262: tcount = 0;
"262
[e = _tcount -> -> 0 `i `uc ]
[; ;main.c: 263: Sys_set();
"263
[e ( _Sys_set ..  ]
[; ;main.c: 267: if(whFlag)
"267
[e $ ! != -> _whFlag `i -> -> -> 0 `i `uc `i 30  ]
[; ;main.c: 268: {
"268
{
[; ;main.c: 269: startTime = 0;
"269
[e = _startTime -> -> 0 `i `uc ]
[; ;main.c: 270: Set_Work();
"270
[e ( _Set_Work ..  ]
[; ;main.c: 271: onoff=1;
"271
[e = _onoff -> -> 1 `i `b ]
[; ;main.c: 272: AD_Testing(1,13,1);
"272
[e ( _AD_Testing (3 , , -> -> 1 `i `uc -> -> 13 `i `uc -> -> 1 `i `uc ]
[; ;main.c: 273: Set_CCP_PWM();
"273
[e ( _Set_CCP_PWM ..  ]
[; ;main.c: 274: checkVoll();
"274
[e ( _checkVoll ..  ]
[; ;main.c: 275: if(led1Step != 1)
"275
[e $ ! != -> _led1Step `i -> 1 `i 31  ]
[; ;main.c: 276: {
"276
{
[; ;main.c: 277: PORTA &= 0xF7;
"277
[e =& _PORTA -> -> 247 `i `uc ]
"278
}
[e :U 31 ]
[; ;main.c: 278: }
[; ;main.c: 279: if(++count2 > 1)
"279
[e $ ! > -> =+ _count2 -> -> 1 `i `uc `i -> 1 `i 32  ]
[; ;main.c: 280: {
"280
{
[; ;main.c: 281: count2 = 0;
"281
[e = _count2 -> -> 0 `i `uc ]
[; ;main.c: 282: colorCtr();
"282
[e ( _colorCtr ..  ]
"283
}
[e :U 32 ]
"284
}
[; ;main.c: 283: }
[; ;main.c: 284: }
[e $U 33  ]
"285
[e :U 30 ]
[; ;main.c: 285: else if(startTime == 0)
[e $ ! == -> _startTime `i -> 0 `i 34  ]
[; ;main.c: 286: {
"286
{
[; ;main.c: 287: closePWM();
"287
[e ( _closePWM ..  ]
[; ;main.c: 288: onoff=0;
"288
[e = _onoff -> -> 0 `i `b ]
[; ;main.c: 290: PORTA = 0x00;
"290
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 291: PORTB = 0x00;
"291
[e = _PORTB -> -> 0 `i `uc ]
"292
}
[e :U 34 ]
"293
[e :U 33 ]
[; ;main.c: 292: }
[; ;main.c: 293: Pwm_Test();
[e ( _Pwm_Test ..  ]
[; ;main.c: 294: uartRevCtr();
"294
[e ( _uartRevCtr ..  ]
[; ;main.c: 295: checkLed();
"295
[e ( _checkLed ..  ]
[; ;main.c: 296: if(ganshaoFlag)
"296
[e $ ! != -> _ganshaoFlag `i -> -> -> 0 `i `uc `i 35  ]
[; ;main.c: 297: {
"297
{
[; ;main.c: 298: PORTB &= 0xDF;
"298
[e =& _PORTB -> -> 223 `i `uc ]
"299
}
[; ;main.c: 299: }
[e $U 36  ]
"300
[e :U 35 ]
[; ;main.c: 300: else
[; ;main.c: 301: {
"301
{
[; ;main.c: 302: PORTB |= 0x20;
"302
[e =| _PORTB -> -> 32 `i `uc ]
"303
}
[e :U 36 ]
"305
}
[e :U 29 ]
"306
}
[e :U 24 ]
"250
[e $U 25  ]
[e :U 26 ]
[; ;main.c: 303: }
[; ;main.c: 305: }
[; ;main.c: 306: }
[; ;main.c: 307: }
"307
[e :UE 23 ]
}
"309
[v _checkLed `(v ~T0 @X0 1 ef ]
"310
{
[; ;main.c: 309: void checkLed()
[; ;main.c: 310: {
[e :U _checkLed ]
[f ]
[; ;main.c: 311: if(startTime > 0)
"311
[e $ ! > -> _startTime `i -> 0 `i 38  ]
[; ;main.c: 312: {
"312
{
[; ;main.c: 313: if(startTime > 150)
"313
[e $ ! > -> _startTime `i -> 150 `i 39  ]
[; ;main.c: 314: {
"314
{
[; ;main.c: 315: redDuty = 64;
"315
[e = _redDuty -> -> 64 `i `uc ]
[; ;main.c: 316: greenDuty = 0;
"316
[e = _greenDuty -> -> 0 `i `uc ]
[; ;main.c: 317: blueDuty = 0;
"317
[e = _blueDuty -> -> 0 `i `uc ]
[; ;main.c: 318: cRedDuty = 64;
"318
[e = _cRedDuty -> -> 64 `i `uc ]
[; ;main.c: 319: cGreenDuty = 0;
"319
[e = _cGreenDuty -> -> 0 `i `uc ]
[; ;main.c: 320: cBlueDuty = 0;
"320
[e = _cBlueDuty -> -> 0 `i `uc ]
"322
}
[; ;main.c: 322: }
[e $U 40  ]
"323
[e :U 39 ]
[; ;main.c: 323: else if(startTime > 100)
[e $ ! > -> _startTime `i -> 100 `i 41  ]
[; ;main.c: 324: {
"324
{
[; ;main.c: 325: redDuty = 0;
"325
[e = _redDuty -> -> 0 `i `uc ]
[; ;main.c: 326: greenDuty = 64;
"326
[e = _greenDuty -> -> 64 `i `uc ]
[; ;main.c: 327: blueDuty = 0;
"327
[e = _blueDuty -> -> 0 `i `uc ]
[; ;main.c: 328: cRedDuty = 0;
"328
[e = _cRedDuty -> -> 0 `i `uc ]
[; ;main.c: 329: cGreenDuty = 64;
"329
[e = _cGreenDuty -> -> 64 `i `uc ]
[; ;main.c: 330: cBlueDuty = 0;
"330
[e = _cBlueDuty -> -> 0 `i `uc ]
"331
}
[; ;main.c: 331: }
[e $U 42  ]
"332
[e :U 41 ]
[; ;main.c: 332: else if(startTime > 50)
[e $ ! > -> _startTime `i -> 50 `i 43  ]
[; ;main.c: 333: {
"333
{
[; ;main.c: 334: redDuty = 0;
"334
[e = _redDuty -> -> 0 `i `uc ]
[; ;main.c: 335: greenDuty = 0;
"335
[e = _greenDuty -> -> 0 `i `uc ]
[; ;main.c: 336: blueDuty = 64;
"336
[e = _blueDuty -> -> 64 `i `uc ]
[; ;main.c: 337: cRedDuty = 0;
"337
[e = _cRedDuty -> -> 0 `i `uc ]
[; ;main.c: 338: cGreenDuty = 0;
"338
[e = _cGreenDuty -> -> 0 `i `uc ]
[; ;main.c: 339: cBlueDuty = 64;
"339
[e = _cBlueDuty -> -> 64 `i `uc ]
"340
}
[; ;main.c: 340: }
[e $U 44  ]
"341
[e :U 43 ]
[; ;main.c: 341: else
[; ;main.c: 342: {
"342
{
[; ;main.c: 343: PORTA |= 0x08;
"343
[e =| _PORTA -> -> 8 `i `uc ]
"344
}
[e :U 44 ]
[e :U 42 ]
[e :U 40 ]
[; ;main.c: 344: }
[; ;main.c: 345: startTime--;
"345
[e -- _startTime -> -> 1 `i `uc ]
"346
}
[e :U 38 ]
[; ;main.c: 346: }
[; ;main.c: 347: }
"347
[e :UE 37 ]
}
"349
[v _uartRevCtr `(v ~T0 @X0 1 ef ]
"350
{
[; ;main.c: 349: void uartRevCtr()
[; ;main.c: 350: {
[e :U _uartRevCtr ]
[f ]
[; ;main.c: 351: if(++revTime > 10)
"351
[e $ ! > -> =+ _revTime -> -> 1 `i `uc `i -> 10 `i 46  ]
[; ;main.c: 352: {
"352
{
[; ;main.c: 353: revTime = 10;
"353
[e = _revTime -> -> 10 `i `uc ]
[; ;main.c: 354: if(whFlag != Recebuffer[0])
"354
[e $ ! != -> _whFlag `i -> *U + &U _Recebuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _Recebuffer `ui `ux `i 47  ]
[; ;main.c: 355: {
"355
{
[; ;main.c: 356: ganshaoFlag = 0;
"356
[e = _ganshaoFlag -> -> 0 `i `uc ]
"357
}
[e :U 47 ]
[; ;main.c: 357: }
[; ;main.c: 358: whFlag = Recebuffer[0];
"358
[e = _whFlag *U + &U _Recebuffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _Recebuffer `ui `ux ]
[; ;main.c: 359: if(Recebuffer[1] == 3 && led1Step != 3)
"359
[e $ ! && == -> *U + &U _Recebuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _Recebuffer `ui `ux `i -> 3 `i != -> _led1Step `i -> 3 `i 48  ]
[; ;main.c: 360: {
"360
{
[; ;main.c: 361: redDuty = 64;
"361
[e = _redDuty -> -> 64 `i `uc ]
[; ;main.c: 362: greenDuty = 64;
"362
[e = _greenDuty -> -> 64 `i `uc ]
[; ;main.c: 363: blueDuty = 64;
"363
[e = _blueDuty -> -> 64 `i `uc ]
[; ;main.c: 364: count2s = 0;
"364
[e = _count2s -> -> 0 `i `uc ]
"365
}
[e :U 48 ]
[; ;main.c: 365: }
[; ;main.c: 366: led1Step = Recebuffer[1];
"366
[e = _led1Step *U + &U _Recebuffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _Recebuffer `ui `ux ]
[; ;main.c: 367: if(Recebuffer[2] == 3 && led2Step != 3)
"367
[e $ ! && == -> *U + &U _Recebuffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Recebuffer `ui `ux `i -> 3 `i != -> _led2Step `i -> 3 `i 49  ]
[; ;main.c: 368: {
"368
{
[; ;main.c: 369: cRedDuty = 64;
"369
[e = _cRedDuty -> -> 64 `i `uc ]
[; ;main.c: 370: cGreenDuty = 64;
"370
[e = _cGreenDuty -> -> 64 `i `uc ]
[; ;main.c: 371: cBlueDuty = 64;
"371
[e = _cBlueDuty -> -> 64 `i `uc ]
[; ;main.c: 372: count2s = 0;
"372
[e = _count2s -> -> 0 `i `uc ]
"373
}
[e :U 49 ]
[; ;main.c: 373: }
[; ;main.c: 374: led2Step = Recebuffer[2];
"374
[e = _led2Step *U + &U _Recebuffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _Recebuffer `ui `ux ]
[; ;main.c: 375: chrgStep = Recebuffer[3];
"375
[e = _chrgStep *U + &U _Recebuffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _Recebuffer `ui `ux ]
[; ;main.c: 376: rececount = 0;
"376
[e = _rececount -> -> 0 `i `uc ]
"377
}
[e :U 46 ]
[; ;main.c: 377: }
[; ;main.c: 378: }
"378
[e :UE 45 ]
}
"391
[v _AD_Testing `(v ~T0 @X0 1 ef3`uc`uc`uc ]
"392
{
[; ;main.c: 391: void AD_Testing(unsigned char ad_fd,unsigned char ad_ch,unsigned char ad_lr)
[; ;main.c: 392: {
[e :U _AD_Testing ]
"391
[v _ad_fd `uc ~T0 @X0 1 r1 ]
[v _ad_ch `uc ~T0 @X0 1 r2 ]
[v _ad_lr `uc ~T0 @X0 1 r3 ]
"392
[f ]
"393
[v F789 `Vuc ~T0 @X0 1 s adtimes ]
"394
[v F790 `Vui ~T0 @X0 1 s admin ]
[v F791 `Vui ~T0 @X0 1 s admax ]
[v F792 `Vui ~T0 @X0 1 s adsum ]
"395
[v _data `Vui ~T0 @X0 1 a ]
"396
[v _i `Vuc ~T0 @X0 1 a ]
[; ;main.c: 393: static volatile unsigned char adtimes;
[; ;main.c: 394: static volatile unsigned int admin,admax,adsum;
[; ;main.c: 395: volatile unsigned int data;
[; ;main.c: 396: volatile unsigned char i = 0;
[e = _i -> -> 0 `i `uc ]
[; ;main.c: 399: if(!ad_lr)
"399
[e $ ! ! != -> _ad_lr `i -> -> -> 0 `i `uc `i 51  ]
[; ;main.c: 400: ADCON1 = 0;
"400
[e = _ADCON1 -> -> 0 `i `uc ]
[e $U 52  ]
"401
[e :U 51 ]
[; ;main.c: 401: else
[; ;main.c: 402: ADCON1 = 0x80;
"402
[e = _ADCON1 -> -> 128 `i `uc ]
[e :U 52 ]
[; ;main.c: 404: ADCON0 = 0;
"404
[e = _ADCON0 -> -> 0 `i `uc ]
[; ;main.c: 405: ADCON0 |= (unsigned char)(ad_fd << 6);
"405
[e =| _ADCON0 -> << -> _ad_fd `i -> 6 `i `uc ]
[; ;main.c: 406: ADCON0 |= (unsigned char)(ad_ch << 2);
"406
[e =| _ADCON0 -> << -> _ad_ch `i -> 2 `i `uc ]
[; ;main.c: 407: ADCON0 |= 0x01;
"407
[e =| _ADCON0 -> -> 1 `i `uc ]
[; ;main.c: 409: asm("nop");
"409
[; <" nop ;# ">
[; ;main.c: 410: asm("nop");
"410
[; <" nop ;# ">
[; ;main.c: 411: GODONE = 1;
"411
[e = _GODONE -> -> 1 `i `b ]
[; ;main.c: 413: while(GODONE)
"413
[e $U 53  ]
[e :U 54 ]
[; ;main.c: 414: {
"414
{
[; ;main.c: 415: asm("nop");
"415
[; <" nop ;# ">
[; ;main.c: 416: asm("nop");
"416
[; <" nop ;# ">
[; ;main.c: 417: if(0 == (--i))
"417
[e $ ! == -> 0 `i -> =- _i -> -> 1 `i `uc `i 56  ]
[; ;main.c: 418: return;
"418
[e $UE 50  ]
[e :U 56 ]
"419
}
[e :U 53 ]
"413
[e $ _GODONE 54  ]
[e :U 55 ]
[; ;main.c: 419: }
[; ;main.c: 421: if(!ad_lr)
"421
[e $ ! ! != -> _ad_lr `i -> -> -> 0 `i `uc `i 57  ]
[; ;main.c: 422: {
"422
{
[; ;main.c: 423: data = (unsigned int)(ADRESH<<4);
"423
[e = _data -> << -> _ADRESH `i -> 4 `i `ui ]
[; ;main.c: 424: data |= (unsigned int)(ADRESL>>4);
"424
[e =| _data -> >> -> _ADRESL `i -> 4 `i `ui ]
"425
}
[; ;main.c: 425: }
[e $U 58  ]
"426
[e :U 57 ]
[; ;main.c: 426: else
[; ;main.c: 427: {
"427
{
[; ;main.c: 428: data = (unsigned int)(ADRESH<<8);
"428
[e = _data -> << -> _ADRESH `i -> 8 `i `ui ]
[; ;main.c: 429: data |= (unsigned int)ADRESL;
"429
[e =| _data -> _ADRESL `ui ]
"430
}
[e :U 58 ]
[; ;main.c: 430: }
[; ;main.c: 432: if(0 == adtimes)
"432
[e $ ! == -> 0 `i -> F789 `i 59  ]
[; ;main.c: 433: {
"433
{
[; ;main.c: 434: admax = data;
"434
[e = F791 _data ]
[; ;main.c: 435: admin = data;
"435
[e = F790 _data ]
"436
}
[; ;main.c: 436: }
[e $U 60  ]
"437
[e :U 59 ]
[; ;main.c: 437: else if(data > admax)
[e $ ! > _data F791 61  ]
[; ;main.c: 438: {
"438
{
[; ;main.c: 439: admax = data;
"439
[e = F791 _data ]
"440
}
[; ;main.c: 440: }
[e $U 62  ]
"441
[e :U 61 ]
[; ;main.c: 441: else if(data < admin)
[e $ ! < _data F790 63  ]
[; ;main.c: 442: {
"442
{
[; ;main.c: 443: admin = data;
"443
[e = F790 _data ]
"444
}
[e :U 63 ]
"446
[e :U 62 ]
[e :U 60 ]
[; ;main.c: 444: }
[; ;main.c: 446: adsum += data;
[e =+ F792 _data ]
[; ;main.c: 447: if(++adtimes >= 10)
"447
[e $ ! >= -> =+ F789 -> -> 1 `i `uc `i -> 10 `i 64  ]
[; ;main.c: 448: {
"448
{
[; ;main.c: 449: adsum -= admax;
"449
[e =- F792 F791 ]
[; ;main.c: 450: adsum -= admin;
"450
[e =- F792 F790 ]
[; ;main.c: 452: AD_Result = adsum >> 3;
"452
[e = _AD_Result >> F792 -> 3 `i ]
[; ;main.c: 454: adsum = 0;
"454
[e = F792 -> -> 0 `i `ui ]
[; ;main.c: 455: admin = 0;
"455
[e = F790 -> -> 0 `i `ui ]
[; ;main.c: 456: admax = 0;
"456
[e = F791 -> -> 0 `i `ui ]
[; ;main.c: 457: adtimes = 0;
"457
[e = F789 -> -> 0 `i `uc ]
"458
}
[e :U 64 ]
[; ;main.c: 458: }
[; ;main.c: 459: }
"459
[e :UE 50 ]
}
"470
[v _Set_CCP_PWM `(v ~T0 @X0 1 ef ]
"471
{
[; ;main.c: 470: void Set_CCP_PWM()
[; ;main.c: 471: {
[e :U _Set_CCP_PWM ]
[f ]
[; ;main.c: 472: PWMTL = 108;
"472
[e = _PWMTL -> -> 108 `i `uc ]
[; ;main.c: 473: PWMTH = 0x00;
"473
[e = _PWMTH -> -> 0 `i `uc ]
[; ;main.c: 474: PWMT4L = 0x00;
"474
[e = _PWMT4L -> -> 0 `i `uc ]
[; ;main.c: 478: PWMD1L = currDuty;
"478
[e = _PWMD1L _currDuty ]
[; ;main.c: 479: PWMD01H = 0x00;
"479
[e = _PWMD01H -> -> 0 `i `uc ]
[; ;main.c: 482: PWM01DT = 0;
"482
[e = _PWM01DT -> -> 0 `i `uc ]
[; ;main.c: 483: PWM23DT = 0;
"483
[e = _PWM23DT -> -> 0 `i `uc ]
[; ;main.c: 485: PWMCON2 = 0B00000000;
"485
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 486: PWMCON1 = 0B00000000;
"486
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 487: PWMCON0 = 0B00000010;
"487
[e = _PWMCON0 -> -> 2 `i `uc ]
[; ;main.c: 489: }
"489
[e :UE 65 ]
}
"491
[v _closePWM `(v ~T0 @X0 1 ef ]
"492
{
[; ;main.c: 491: void closePWM()
[; ;main.c: 492: {
[e :U _closePWM ]
[f ]
[; ;main.c: 493: PWMD1L = 0;
"493
[e = _PWMD1L -> -> 0 `i `uc ]
[; ;main.c: 494: PWMD01H = 0x00;
"494
[e = _PWMD01H -> -> 0 `i `uc ]
[; ;main.c: 495: PWMCON2 = 0B00000000;
"495
[e = _PWMCON2 -> -> 0 `i `uc ]
[; ;main.c: 496: PWMCON1 = 0B00000000;
"496
[e = _PWMCON1 -> -> 0 `i `uc ]
[; ;main.c: 497: PWMCON0 = 0B00000000;
"497
[e = _PWMCON0 -> -> 0 `i `uc ]
[; ;main.c: 498: }
"498
[e :UE 66 ]
}
"501
[v _keyRead `(uc ~T0 @X0 1 ef1`uc ]
"502
{
[; ;main.c: 501: char keyRead(char keyStatus)
[; ;main.c: 502: {
[e :U _keyRead ]
"501
[v _keyStatus `uc ~T0 @X0 1 r1 ]
"502
[f ]
[; ;main.c: 503: if(keyStatus)
"503
[e $ ! != -> _keyStatus `i -> -> -> 0 `i `uc `i 68  ]
[; ;main.c: 504: {
"504
{
[; ;main.c: 505: keyCount++;
"505
[e ++ _keyCount -> -> 1 `i `uc ]
[; ;main.c: 506: if(keyCount >= 100)
"506
[e $ ! >= -> _keyCount `i -> 100 `i 69  ]
[; ;main.c: 507: {
"507
{
[; ;main.c: 508: keyCount = 100;
"508
[e = _keyCount -> -> 100 `i `uc ]
"509
}
[e :U 69 ]
"510
}
[; ;main.c: 509: }
[; ;main.c: 510: }
[e $U 70  ]
"511
[e :U 68 ]
[; ;main.c: 511: else
[; ;main.c: 512: {
"512
{
[; ;main.c: 513: if(keyCount >= 4)
"513
[e $ ! >= -> _keyCount `i -> 4 `i 71  ]
[; ;main.c: 514: {
"514
{
[; ;main.c: 515: keyCount = 0;
"515
[e = _keyCount -> -> 0 `i `uc ]
[; ;main.c: 516: return 1;
"516
[e ) -> -> 1 `i `uc ]
[e $UE 67  ]
"517
}
[e :U 71 ]
[; ;main.c: 517: }
[; ;main.c: 518: keyCount = 0;
"518
[e = _keyCount -> -> 0 `i `uc ]
"519
}
[e :U 70 ]
[; ;main.c: 519: }
[; ;main.c: 520: return 0;
"520
[e ) -> -> 0 `i `uc ]
[e $UE 67  ]
[; ;main.c: 521: }
"521
[e :UE 67 ]
}
"524
[v _keyCtr `(v ~T0 @X0 1 ef ]
"525
{
[; ;main.c: 524: void keyCtr()
[; ;main.c: 525: {
[e :U _keyCtr ]
[f ]
"526
[v _kclick `uc ~T0 @X0 1 a ]
[; ;main.c: 526: char kclick = keyRead(0x20 & (~PORTA));
[e = _kclick ( _keyRead (1 -> & -> 32 `i ~ -> _PORTA `i `uc ]
[; ;main.c: 527: if(kclick == 1)
"527
[e $ ! == -> _kclick `i -> 1 `i 73  ]
[; ;main.c: 528: {
"528
{
[; ;main.c: 529: if(whFlag)
"529
[e $ ! != -> _whFlag `i -> -> -> 0 `i `uc `i 74  ]
[; ;main.c: 530: {
"530
{
[; ;main.c: 531: whFlag = 0;
"531
[e = _whFlag -> -> 0 `i `uc ]
"532
}
[; ;main.c: 532: }
[e $U 75  ]
"533
[e :U 74 ]
[; ;main.c: 533: else
[; ;main.c: 534: {
"534
{
[; ;main.c: 535: whFlag = 1;
"535
[e = _whFlag -> -> 1 `i `uc ]
"536
}
[e :U 75 ]
"538
}
[e :U 73 ]
[; ;main.c: 536: }
[; ;main.c: 538: }
[; ;main.c: 540: }
"540
[e :UE 72 ]
}
"542
[v _checkVoll `(v ~T0 @X0 1 ef ]
"543
{
[; ;main.c: 542: void checkVoll()
[; ;main.c: 543: {
[e :U _checkVoll ]
[f ]
[; ;main.c: 544: if(AD_Result > 182)
"544
[e $ ! > _AD_Result -> -> 182 `i `ui 77  ]
[; ;main.c: 545: {
"545
{
[; ;main.c: 546: if(++addTime > 5)
"546
[e $ ! > -> =+ _addTime -> -> 1 `i `uc `i -> 5 `i 78  ]
[; ;main.c: 547: {
"547
{
[; ;main.c: 548: addTime = 0;
"548
[e = _addTime -> -> 0 `i `uc ]
[; ;main.c: 549: if(currDuty > 1)
"549
[e $ ! > -> _currDuty `i -> 1 `i 79  ]
[; ;main.c: 550: {
"550
{
[; ;main.c: 551: currDuty--;
"551
[e -- _currDuty -> -> 1 `i `uc ]
"552
}
[e :U 79 ]
"553
}
[e :U 78 ]
[; ;main.c: 552: }
[; ;main.c: 553: }
[; ;main.c: 554: subTime = 0;
"554
[e = _subTime -> -> 0 `i `uc ]
"555
}
[; ;main.c: 555: }
[e $U 80  ]
"556
[e :U 77 ]
[; ;main.c: 556: else if(AD_Result < 166)
[e $ ! < _AD_Result -> -> 166 `i `ui 81  ]
[; ;main.c: 557: {
"557
{
[; ;main.c: 558: if(++subTime > 5)
"558
[e $ ! > -> =+ _subTime -> -> 1 `i `uc `i -> 5 `i 82  ]
[; ;main.c: 559: {
"559
{
[; ;main.c: 560: if(currDuty < 74)
"560
[e $ ! < -> _currDuty `i -> 74 `i 83  ]
[; ;main.c: 561: {
"561
{
[; ;main.c: 562: currDuty++;
"562
[e ++ _currDuty -> -> 1 `i `uc ]
"563
}
[e :U 83 ]
"564
}
[e :U 82 ]
[; ;main.c: 563: }
[; ;main.c: 564: }
[; ;main.c: 565: addTime = 0;
"565
[e = _addTime -> -> 0 `i `uc ]
"566
}
[e :U 81 ]
"567
[e :U 80 ]
[; ;main.c: 566: }
[; ;main.c: 567: }
[e :UE 76 ]
}
"569
[v _colorCtr `(v ~T0 @X0 1 ef ]
"570
{
[; ;main.c: 569: void colorCtr()
[; ;main.c: 570: {
[e :U _colorCtr ]
[f ]
[; ;main.c: 572: if(++count2s > 3)
"572
[e $ ! > -> =+ _count2s -> -> 1 `i `uc `i -> 3 `i 85  ]
[; ;main.c: 573: {
"573
{
[; ;main.c: 574: count2s = 0;
"574
[e = _count2s -> -> 0 `i `uc ]
[; ;main.c: 575: if(led2Step == 3)
"575
[e $ ! == -> _led2Step `i -> 3 `i 86  ]
[; ;main.c: 576: {
"576
{
[; ;main.c: 577: rainbow2();
"577
[e ( _rainbow2 ..  ]
"578
}
[e :U 86 ]
[; ;main.c: 578: }
[; ;main.c: 579: if(led1Step == 3)
"579
[e $ ! == -> _led1Step `i -> 3 `i 87  ]
[; ;main.c: 580: {
"580
{
[; ;main.c: 581: rainbow();
"581
[e ( _rainbow ..  ]
"582
}
[e :U 87 ]
"583
}
[e :U 85 ]
[; ;main.c: 582: }
[; ;main.c: 583: }
[; ;main.c: 587: if(count2s < 125)
"587
[e $ ! < -> _count2s `i -> 125 `i 88  ]
[; ;main.c: 588: {
"588
{
[; ;main.c: 589: if(led2Step == 1)
"589
[e $ ! == -> _led2Step `i -> 1 `i 89  ]
[; ;main.c: 590: {
"590
{
[; ;main.c: 591: cRedDuty = 0;
"591
[e = _cRedDuty -> -> 0 `i `uc ]
[; ;main.c: 592: cBlueDuty = 0;
"592
[e = _cBlueDuty -> -> 0 `i `uc ]
[; ;main.c: 593: breathAddLed(&cGreenDuty);
"593
[e ( _breathAddLed (1 &U _cGreenDuty ]
"594
}
[; ;main.c: 594: }
[e $U 90  ]
"595
[e :U 89 ]
[; ;main.c: 595: else if(led2Step == 2)
[e $ ! == -> _led2Step `i -> 2 `i 91  ]
[; ;main.c: 596: {
"596
{
[; ;main.c: 597: cRedDuty = 0;
"597
[e = _cRedDuty -> -> 0 `i `uc ]
[; ;main.c: 598: cGreenDuty = 0;
"598
[e = _cGreenDuty -> -> 0 `i `uc ]
[; ;main.c: 599: breathAddLed(&cBlueDuty);
"599
[e ( _breathAddLed (1 &U _cBlueDuty ]
"600
}
[e :U 91 ]
"602
[e :U 90 ]
}
[; ;main.c: 600: }
[; ;main.c: 602: }
[e $U 92  ]
"603
[e :U 88 ]
[; ;main.c: 603: else
[; ;main.c: 604: {
"604
{
[; ;main.c: 605: if(led2Step == 1)
"605
[e $ ! == -> _led2Step `i -> 1 `i 93  ]
[; ;main.c: 606: {
"606
{
[; ;main.c: 607: cRedDuty = 0;
"607
[e = _cRedDuty -> -> 0 `i `uc ]
[; ;main.c: 608: cBlueDuty = 0;
"608
[e = _cBlueDuty -> -> 0 `i `uc ]
[; ;main.c: 609: breathSubLed(&cGreenDuty);
"609
[e ( _breathSubLed (1 &U _cGreenDuty ]
"610
}
[; ;main.c: 610: }
[e $U 94  ]
"611
[e :U 93 ]
[; ;main.c: 611: else if(led2Step == 2)
[e $ ! == -> _led2Step `i -> 2 `i 95  ]
[; ;main.c: 612: {
"612
{
[; ;main.c: 613: cRedDuty = 0;
"613
[e = _cRedDuty -> -> 0 `i `uc ]
[; ;main.c: 614: cGreenDuty = 0;
"614
[e = _cGreenDuty -> -> 0 `i `uc ]
[; ;main.c: 615: breathSubLed(&cBlueDuty);
"615
[e ( _breathSubLed (1 &U _cBlueDuty ]
"616
}
[e :U 95 ]
"618
[e :U 94 ]
}
[e :U 92 ]
[; ;main.c: 616: }
[; ;main.c: 618: }
[; ;main.c: 622: if(led1Step == 1)
"622
[e $ ! == -> _led1Step `i -> 1 `i 96  ]
[; ;main.c: 623: {
"623
{
[; ;main.c: 624: redDuty = 0;
"624
[e = _redDuty -> -> 0 `i `uc ]
[; ;main.c: 625: greenDuty = 0;
"625
[e = _greenDuty -> -> 0 `i `uc ]
[; ;main.c: 626: blueDuty = 0;
"626
[e = _blueDuty -> -> 0 `i `uc ]
[; ;main.c: 627: PORTA |= 0x08;
"627
[e =| _PORTA -> -> 8 `i `uc ]
"628
}
[; ;main.c: 628: }
[e $U 97  ]
"629
[e :U 96 ]
[; ;main.c: 629: else if(led1Step == 2)
[e $ ! == -> _led1Step `i -> 2 `i 98  ]
[; ;main.c: 630: {
"630
{
[; ;main.c: 631: redDuty = 46;
"631
[e = _redDuty -> -> 46 `i `uc ]
[; ;main.c: 632: greenDuty = 51;
"632
[e = _greenDuty -> -> 51 `i `uc ]
[; ;main.c: 633: blueDuty = 62;
"633
[e = _blueDuty -> -> 62 `i `uc ]
"634
}
[e :U 98 ]
"635
[e :U 97 ]
[; ;main.c: 634: }
[; ;main.c: 635: }
[e :UE 84 ]
}
"637
[v _rainbow2 `(v ~T0 @X0 1 ef ]
"638
{
[; ;main.c: 637: void rainbow2()
[; ;main.c: 638: {
[e :U _rainbow2 ]
[f ]
[; ;main.c: 640: if(cRedDuty > clastRed)
"640
[e $ ! > -> _cRedDuty `i -> _clastRed `i 100  ]
[; ;main.c: 641: cRedDuty--;
"641
[e -- _cRedDuty -> -> 1 `i `uc ]
[e :U 100 ]
[; ;main.c: 642: if(cGreenDuty > clastGreen)
"642
[e $ ! > -> _cGreenDuty `i -> _clastGreen `i 101  ]
[; ;main.c: 643: cGreenDuty--;
"643
[e -- _cGreenDuty -> -> 1 `i `uc ]
[e :U 101 ]
[; ;main.c: 644: if(cBlueDuty > clastBlue)
"644
[e $ ! > -> _cBlueDuty `i -> _clastBlue `i 102  ]
[; ;main.c: 645: cBlueDuty--;
"645
[e -- _cBlueDuty -> -> 1 `i `uc ]
[e :U 102 ]
[; ;main.c: 646: if(cRedDuty < clastRed)
"646
[e $ ! < -> _cRedDuty `i -> _clastRed `i 103  ]
[; ;main.c: 647: cRedDuty++;
"647
[e ++ _cRedDuty -> -> 1 `i `uc ]
[e :U 103 ]
[; ;main.c: 648: if(cGreenDuty < clastGreen)
"648
[e $ ! < -> _cGreenDuty `i -> _clastGreen `i 104  ]
[; ;main.c: 649: cGreenDuty++;
"649
[e ++ _cGreenDuty -> -> 1 `i `uc ]
[e :U 104 ]
[; ;main.c: 650: if(cBlueDuty < clastBlue)
"650
[e $ ! < -> _cBlueDuty `i -> _clastBlue `i 105  ]
[; ;main.c: 651: cBlueDuty++;
"651
[e ++ _cBlueDuty -> -> 1 `i `uc ]
[e :U 105 ]
[; ;main.c: 652: if(cdelayTime > 0)
"652
[e $ ! > -> _cdelayTime `i -> 0 `i 106  ]
[; ;main.c: 653: {
"653
{
[; ;main.c: 654: cdelayTime--;
"654
[e -- _cdelayTime -> -> 1 `i `uc ]
[; ;main.c: 655: return;
"655
[e $UE 99  ]
"656
}
[e :U 106 ]
[; ;main.c: 656: }
[; ;main.c: 657: if(cClorStep == 1)
"657
[e $ ! == -> _cClorStep `i -> 1 `i 107  ]
[; ;main.c: 658: {
"658
{
[; ;main.c: 659: clastRed = 64;
"659
[e = _clastRed -> -> 64 `i `uc ]
[; ;main.c: 660: clastGreen = 0;
"660
[e = _clastGreen -> -> 0 `i `uc ]
[; ;main.c: 661: clastBlue = 0;
"661
[e = _clastBlue -> -> 0 `i `uc ]
"663
}
[; ;main.c: 663: }
[e $U 108  ]
"664
[e :U 107 ]
[; ;main.c: 664: else if(cClorStep == 2)
[e $ ! == -> _cClorStep `i -> 2 `i 109  ]
[; ;main.c: 665: {
"665
{
[; ;main.c: 666: clastRed = 0;
"666
[e = _clastRed -> -> 0 `i `uc ]
[; ;main.c: 667: clastGreen = 0;
"667
[e = _clastGreen -> -> 0 `i `uc ]
[; ;main.c: 668: clastBlue = 64;
"668
[e = _clastBlue -> -> 64 `i `uc ]
"669
}
[; ;main.c: 669: }
[e $U 110  ]
"670
[e :U 109 ]
[; ;main.c: 670: else if(cClorStep == 3)
[e $ ! == -> _cClorStep `i -> 3 `i 111  ]
[; ;main.c: 671: {
"671
{
[; ;main.c: 672: clastRed = 0;
"672
[e = _clastRed -> -> 0 `i `uc ]
[; ;main.c: 673: clastGreen = 64;
"673
[e = _clastGreen -> -> 64 `i `uc ]
[; ;main.c: 674: clastBlue = 0;
"674
[e = _clastBlue -> -> 0 `i `uc ]
"675
}
[e :U 111 ]
"679
[e :U 110 ]
[e :U 108 ]
[; ;main.c: 675: }
[; ;main.c: 679: if(cRedDuty == clastRed && cBlueDuty == cBlueDuty && cGreenDuty == clastGreen)
[e $ ! && && == -> _cRedDuty `i -> _clastRed `i == -> _cBlueDuty `i -> _cBlueDuty `i == -> _cGreenDuty `i -> _clastGreen `i 112  ]
[; ;main.c: 680: {
"680
{
[; ;main.c: 681: if(++cClorStep > 3)
"681
[e $ ! > -> =+ _cClorStep -> -> 1 `i `uc `i -> 3 `i 113  ]
[; ;main.c: 682: {
"682
{
[; ;main.c: 683: cClorStep = 0;
"683
[e = _cClorStep -> -> 0 `i `uc ]
"684
}
[e :U 113 ]
[; ;main.c: 684: }
[; ;main.c: 685: if(cdelayTime == 0)
"685
[e $ ! == -> _cdelayTime `i -> 0 `i 114  ]
[; ;main.c: 686: cdelayTime = 5;
"686
[e = _cdelayTime -> -> 5 `i `uc ]
[e :U 114 ]
"687
}
[e :U 112 ]
[; ;main.c: 687: }
[; ;main.c: 688: }
"688
[e :UE 99 ]
}
"691
[v _rainbow `(v ~T0 @X0 1 ef ]
"692
{
[; ;main.c: 691: void rainbow()
[; ;main.c: 692: {
[e :U _rainbow ]
[f ]
[; ;main.c: 694: if(redDuty > lastRed)
"694
[e $ ! > -> _redDuty `i -> _lastRed `i 116  ]
[; ;main.c: 695: redDuty--;
"695
[e -- _redDuty -> -> 1 `i `uc ]
[e :U 116 ]
[; ;main.c: 696: if(greenDuty > lastGreen)
"696
[e $ ! > -> _greenDuty `i -> _lastGreen `i 117  ]
[; ;main.c: 697: greenDuty--;
"697
[e -- _greenDuty -> -> 1 `i `uc ]
[e :U 117 ]
[; ;main.c: 698: if(blueDuty > lastBlue)
"698
[e $ ! > -> _blueDuty `i -> _lastBlue `i 118  ]
[; ;main.c: 699: blueDuty--;
"699
[e -- _blueDuty -> -> 1 `i `uc ]
[e :U 118 ]
[; ;main.c: 700: if(redDuty < lastRed)
"700
[e $ ! < -> _redDuty `i -> _lastRed `i 119  ]
[; ;main.c: 701: redDuty++;
"701
[e ++ _redDuty -> -> 1 `i `uc ]
[e :U 119 ]
[; ;main.c: 702: if(greenDuty < lastGreen)
"702
[e $ ! < -> _greenDuty `i -> _lastGreen `i 120  ]
[; ;main.c: 703: greenDuty++;
"703
[e ++ _greenDuty -> -> 1 `i `uc ]
[e :U 120 ]
[; ;main.c: 704: if(blueDuty < lastBlue)
"704
[e $ ! < -> _blueDuty `i -> _lastBlue `i 121  ]
[; ;main.c: 705: blueDuty++;
"705
[e ++ _blueDuty -> -> 1 `i `uc ]
[e :U 121 ]
[; ;main.c: 706: if(delayTime > 0)
"706
[e $ ! > -> _delayTime `i -> 0 `i 122  ]
[; ;main.c: 707: {
"707
{
[; ;main.c: 708: delayTime--;
"708
[e -- _delayTime -> -> 1 `i `uc ]
[; ;main.c: 709: return;
"709
[e $UE 115  ]
"710
}
[e :U 122 ]
[; ;main.c: 710: }
[; ;main.c: 711: if(mClorStep == 1)
"711
[e $ ! == -> _mClorStep `i -> 1 `i 123  ]
[; ;main.c: 712: {
"712
{
[; ;main.c: 713: lastRed = 64;
"713
[e = _lastRed -> -> 64 `i `uc ]
[; ;main.c: 714: lastGreen = 0;
"714
[e = _lastGreen -> -> 0 `i `uc ]
[; ;main.c: 715: lastBlue = 0;
"715
[e = _lastBlue -> -> 0 `i `uc ]
"717
}
[; ;main.c: 717: }
[e $U 124  ]
"718
[e :U 123 ]
[; ;main.c: 718: else if(mClorStep == 2)
[e $ ! == -> _mClorStep `i -> 2 `i 125  ]
[; ;main.c: 719: {
"719
{
[; ;main.c: 720: lastRed = 0;
"720
[e = _lastRed -> -> 0 `i `uc ]
[; ;main.c: 721: lastGreen = 0;
"721
[e = _lastGreen -> -> 0 `i `uc ]
[; ;main.c: 722: lastBlue = 64;
"722
[e = _lastBlue -> -> 64 `i `uc ]
"723
}
[; ;main.c: 723: }
[e $U 126  ]
"724
[e :U 125 ]
[; ;main.c: 724: else if(mClorStep == 3)
[e $ ! == -> _mClorStep `i -> 3 `i 127  ]
[; ;main.c: 725: {
"725
{
[; ;main.c: 726: lastRed = 0;
"726
[e = _lastRed -> -> 0 `i `uc ]
[; ;main.c: 727: lastGreen = 64;
"727
[e = _lastGreen -> -> 64 `i `uc ]
[; ;main.c: 728: lastBlue = 0;
"728
[e = _lastBlue -> -> 0 `i `uc ]
"729
}
[e :U 127 ]
"732
[e :U 126 ]
[e :U 124 ]
[; ;main.c: 729: }
[; ;main.c: 732: if(redDuty == lastRed && blueDuty == lastBlue && greenDuty == lastGreen)
[e $ ! && && == -> _redDuty `i -> _lastRed `i == -> _blueDuty `i -> _lastBlue `i == -> _greenDuty `i -> _lastGreen `i 128  ]
[; ;main.c: 733: {
"733
{
[; ;main.c: 734: if(++mClorStep > 3)
"734
[e $ ! > -> =+ _mClorStep -> -> 1 `i `uc `i -> 3 `i 129  ]
[; ;main.c: 735: {
"735
{
[; ;main.c: 736: mClorStep = 0;
"736
[e = _mClorStep -> -> 0 `i `uc ]
"737
}
[e :U 129 ]
[; ;main.c: 737: }
[; ;main.c: 738: if(delayTime == 0)
"738
[e $ ! == -> _delayTime `i -> 0 `i 130  ]
[; ;main.c: 739: delayTime = 5;
"739
[e = _delayTime -> -> 5 `i `uc ]
[e :U 130 ]
"740
}
[e :U 128 ]
[; ;main.c: 740: }
[; ;main.c: 741: }
"741
[e :UE 115 ]
}
"744
[v _breathAddLed `(v ~T0 @X0 1 ef1`*uc ]
"745
{
[; ;main.c: 744: void breathAddLed(u8t* ledDuty)
[; ;main.c: 745: {
[e :U _breathAddLed ]
"744
[v _ledDuty `*uc ~T0 @X0 1 r1 ]
"745
[f ]
[; ;main.c: 746: if((*ledDuty) < 64)
"746
[e $ ! < -> *U _ledDuty `i -> 64 `i 132  ]
[; ;main.c: 747: {
"747
{
[; ;main.c: 748: (*ledDuty)++;
"748
[e ++ *U _ledDuty -> -> 1 `i `uc ]
"749
}
[e :U 132 ]
[; ;main.c: 749: }
[; ;main.c: 750: }
"750
[e :UE 131 ]
}
"752
[v _breathSubLed `(v ~T0 @X0 1 ef1`*uc ]
"753
{
[; ;main.c: 752: void breathSubLed(u8t* ledDuty)
[; ;main.c: 753: {
[e :U _breathSubLed ]
"752
[v _ledDuty `*uc ~T0 @X0 1 r1 ]
"753
[f ]
[; ;main.c: 754: if((*ledDuty) > 0)
"754
[e $ ! > -> *U _ledDuty `i -> 0 `i 134  ]
[; ;main.c: 755: {
"755
{
[; ;main.c: 756: (*ledDuty)--;
"756
[e -- *U _ledDuty -> -> 1 `i `uc ]
"757
}
[e :U 134 ]
[; ;main.c: 757: }
[; ;main.c: 758: }
"758
[e :UE 133 ]
}
"760
[v _rgbShow `(v ~T0 @X0 1 ef ]
"761
{
[; ;main.c: 760: void rgbShow()
[; ;main.c: 761: {
[e :U _rgbShow ]
[f ]
[; ;main.c: 762: if(++curLedCnt > 64)
"762
[e $ ! > -> =+ _curLedCnt -> -> 1 `i `uc `i -> 64 `i 136  ]
[; ;main.c: 763: {
"763
{
[; ;main.c: 764: curLedCnt = 0;
"764
[e = _curLedCnt -> -> 0 `i `uc ]
"765
}
[e :U 136 ]
[; ;main.c: 765: }
[; ;main.c: 766: if(redDuty <= curLedCnt)
"766
[e $ ! <= -> _redDuty `i -> _curLedCnt `i 137  ]
[; ;main.c: 767: {
"767
{
[; ;main.c: 768: PORTA &= 0xEF;
"768
[e =& _PORTA -> -> 239 `i `uc ]
"769
}
[; ;main.c: 769: }
[e $U 138  ]
"770
[e :U 137 ]
[; ;main.c: 770: else
[; ;main.c: 771: {
"771
{
[; ;main.c: 772: PORTA |= 0x10;
"772
[e =| _PORTA -> -> 16 `i `uc ]
"773
}
[e :U 138 ]
[; ;main.c: 773: }
[; ;main.c: 774: PORTA = PORTA;
"774
[e = _PORTA _PORTA ]
[; ;main.c: 775: if(greenDuty <= curLedCnt)
"775
[e $ ! <= -> _greenDuty `i -> _curLedCnt `i 139  ]
[; ;main.c: 776: {
"776
{
[; ;main.c: 777: PORTA &= 0xBF;
"777
[e =& _PORTA -> -> 191 `i `uc ]
"778
}
[; ;main.c: 778: }
[e $U 140  ]
"779
[e :U 139 ]
[; ;main.c: 779: else
[; ;main.c: 780: {
"780
{
[; ;main.c: 781: PORTA |= 0x40;
"781
[e =| _PORTA -> -> 64 `i `uc ]
"782
}
[e :U 140 ]
[; ;main.c: 782: }
[; ;main.c: 783: PORTA = PORTA;
"783
[e = _PORTA _PORTA ]
[; ;main.c: 784: if(blueDuty <= curLedCnt)
"784
[e $ ! <= -> _blueDuty `i -> _curLedCnt `i 141  ]
[; ;main.c: 785: {
"785
{
[; ;main.c: 786: PORTA &= 0xDF;
"786
[e =& _PORTA -> -> 223 `i `uc ]
"787
}
[; ;main.c: 787: }
[e $U 142  ]
"788
[e :U 141 ]
[; ;main.c: 788: else
[; ;main.c: 789: {
"789
{
[; ;main.c: 790: PORTA |= 0x20;
"790
[e =| _PORTA -> -> 32 `i `uc ]
"791
}
[e :U 142 ]
[; ;main.c: 791: }
[; ;main.c: 792: PORTA = PORTA;
"792
[e = _PORTA _PORTA ]
[; ;main.c: 793: if(cRedDuty <= curLedCnt)
"793
[e $ ! <= -> _cRedDuty `i -> _curLedCnt `i 143  ]
[; ;main.c: 794: {
"794
{
[; ;main.c: 795: PORTA &= 0x7F;
"795
[e =& _PORTA -> -> 127 `i `uc ]
"796
}
[; ;main.c: 796: }
[e $U 144  ]
"797
[e :U 143 ]
[; ;main.c: 797: else
[; ;main.c: 798: {
"798
{
[; ;main.c: 799: PORTA |= 0x80;
"799
[e =| _PORTA -> -> 128 `i `uc ]
"800
}
[e :U 144 ]
[; ;main.c: 800: }
[; ;main.c: 801: PORTA = PORTA;
"801
[e = _PORTA _PORTA ]
[; ;main.c: 802: if(cGreenDuty <= curLedCnt)
"802
[e $ ! <= -> _cGreenDuty `i -> _curLedCnt `i 145  ]
[; ;main.c: 803: {
"803
{
[; ;main.c: 804: PORTB &= 0xF7;
"804
[e =& _PORTB -> -> 247 `i `uc ]
"805
}
[; ;main.c: 805: }
[e $U 146  ]
"806
[e :U 145 ]
[; ;main.c: 806: else
[; ;main.c: 807: {
"807
{
[; ;main.c: 808: PORTB |= 0x08;
"808
[e =| _PORTB -> -> 8 `i `uc ]
"809
}
[e :U 146 ]
[; ;main.c: 809: }
[; ;main.c: 810: PORTB = PORTB;
"810
[e = _PORTB _PORTB ]
[; ;main.c: 811: if(cBlueDuty <= curLedCnt)
"811
[e $ ! <= -> _cBlueDuty `i -> _curLedCnt `i 147  ]
[; ;main.c: 812: {
"812
{
[; ;main.c: 813: PORTB &= 0xFB;
"813
[e =& _PORTB -> -> 251 `i `uc ]
"814
}
[; ;main.c: 814: }
[e $U 148  ]
"815
[e :U 147 ]
[; ;main.c: 815: else
[; ;main.c: 816: {
"816
{
[; ;main.c: 817: PORTB |= 0x04;
"817
[e =| _PORTB -> -> 4 `i `uc ]
"818
}
[e :U 148 ]
[; ;main.c: 818: }
[; ;main.c: 819: PORTB = PORTB;
"819
[e = _PORTB _PORTB ]
[; ;main.c: 820: }
"820
[e :UE 135 ]
}
"832
[v _Set_Usart_Async `(v ~T0 @X0 1 ef ]
"833
{
[; ;main.c: 832: void Set_Usart_Async()
[; ;main.c: 833: {
[e :U _Set_Usart_Async ]
[f ]
[; ;main.c: 834: SPBRG = 95;
"834
[e = _SPBRG -> -> 95 `i `uc ]
[; ;main.c: 836: SYNC = 0;
"836
[e = _SYNC -> -> 0 `i `b ]
[; ;main.c: 837: SCKP = 0;
"837
[e = _SCKP -> -> 0 `i `b ]
[; ;main.c: 839: SPEN = 1;
"839
[e = _SPEN -> -> 1 `i `b ]
[; ;main.c: 840: RCIE = 1;
"840
[e = _RCIE -> -> 1 `i `b ]
[; ;main.c: 841: TXIE = 0;
"841
[e = _TXIE -> -> 0 `i `b ]
[; ;main.c: 842: RX9EN = 0;
"842
[e = _RX9EN -> -> 0 `i `b ]
[; ;main.c: 843: TX9EN = 0;
"843
[e = _TX9EN -> -> 0 `i `b ]
[; ;main.c: 844: CREN = 1;
"844
[e = _CREN -> -> 1 `i `b ]
[; ;main.c: 845: TXEN = 1;
"845
[e = _TXEN -> -> 1 `i `b ]
[; ;main.c: 846: }
"846
[e :UE 149 ]
}
