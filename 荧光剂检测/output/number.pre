
# 1 "C:\mcuproject\scm\荧光剂检测\number.c"

# 26 "C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\htc.h"
extern const char __xc8_OPTIM_SPEED;

extern double __fpnormalize(double);


# 13 "C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\xc8debug.h"
#pragma intrinsic(__builtin_software_breakpoint)
extern void __builtin_software_breakpoint(void);

# 11 "C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\SC8P1713C.h"
volatile unsigned char INDF @ 0x000;
volatile unsigned char TMR0 @ 0x001;
volatile unsigned char PCL @ 0x002;
volatile unsigned char STATUS @ 0x003;
volatile unsigned char FLAGS @ 0x003;
volatile unsigned char FSR @ 0x004;
volatile unsigned char PORTA @ 0x005;
volatile unsigned char PORTB @ 0x006;
volatile unsigned char PORTC @ 0x007;


volatile unsigned char PORTE @ 0x009;
volatile unsigned char PCLATH @ 0x00A;
volatile unsigned char INTCON @ 0x00B;
volatile unsigned char PIR1 @ 0x00C;
volatile unsigned char PIR2 @ 0x00D;
volatile unsigned char TMR1L @ 0x00E;
volatile unsigned char TMR1H @ 0x00F;
volatile unsigned char T1CON @ 0x010;
volatile unsigned char TMR2 @ 0x011;
volatile unsigned char T2CON @ 0x012;


volatile unsigned char CCPR1L @ 0x015;
volatile unsigned char CCPR1H @ 0x016;
volatile unsigned char CCP1CON @ 0x017;

volatile unsigned char COMPCON @ 0x018;
volatile unsigned char COMPCON1 @ 0x019;


volatile unsigned char CCPR2L @ 0x01B;
volatile unsigned char CCPR2H @ 0x01C;
volatile unsigned char CCP2CON @ 0x01D;
volatile unsigned char ADRESH @ 0x01E;
volatile unsigned char ADCON0 @ 0x01F;


volatile unsigned char OPTION_REG @ 0x081;
volatile unsigned char TRISA @ 0x085;
volatile unsigned char TRISB @ 0x086;
volatile unsigned char TRISC @ 0x087;
volatile unsigned char TRISE @ 0x089;
volatile unsigned char PIE1 @ 0x08C;
volatile unsigned char PIE2 @ 0x08D;

volatile unsigned char OSCCON @ 0x08F;
volatile unsigned char OSCTUNE @ 0x090;

volatile unsigned char PR2 @ 0x092;


volatile unsigned char WPUB @ 0x095;
volatile unsigned char IOCB @ 0x096;

# 71
volatile unsigned char ADRESL @ 0x09E;
volatile unsigned char ADCON1 @ 0x09F;



volatile unsigned char WDTCON @ 0x105;

# 88
volatile unsigned char TABLE_SPH @ 0x110;
volatile unsigned char TABLE_SPL @ 0x111;
volatile unsigned char TABLE_DATAH @ 0x112;
volatile unsigned char KEYCON0 @ 0x113;
volatile unsigned char KEYCON1 @ 0x114;
volatile unsigned char KEYDATAL @ 0x115;
volatile unsigned char KEYDATAH @ 0x116;




volatile unsigned char WPUE @ 0x11A;
volatile unsigned char OPA0CON @ 0x11C;
volatile unsigned char OPA0ADJ @ 0x11D;



volatile unsigned char ANSEL @ 0x188;
volatile unsigned char ANSELH @ 0x189;



volatile unsigned char WPUA @ 0x18E;
volatile unsigned char WPUC @ 0x18F;

# 117
volatile unsigned char LCDCON0 @ 0x190;
volatile unsigned char LCDCON1 @ 0x191;

# 124
volatile unsigned char COMEN @ 0x197;



volatile bit CARRY @ ((unsigned)&STATUS*8)+0;
volatile bit DC @ ((unsigned)&STATUS*8)+1;
volatile bit ZERO @ ((unsigned)&STATUS*8)+2;
volatile bit PD @ ((unsigned)&STATUS*8)+3;
volatile bit TO @ ((unsigned)&STATUS*8)+4;
volatile bit IRP @ ((unsigned)&STATUS*8)+7;


volatile bit RA0 @ ((unsigned)&PORTA*8)+0;
volatile bit RA1 @ ((unsigned)&PORTA*8)+1;
volatile bit RA2 @ ((unsigned)&PORTA*8)+2;
volatile bit RA3 @ ((unsigned)&PORTA*8)+3;
volatile bit RA4 @ ((unsigned)&PORTA*8)+4;
volatile bit RA5 @ ((unsigned)&PORTA*8)+5;
volatile bit RA6 @ ((unsigned)&PORTA*8)+6;
volatile bit RA7 @ ((unsigned)&PORTA*8)+7;


volatile bit RB0 @ ((unsigned)&PORTB*8)+0;
volatile bit RB1 @ ((unsigned)&PORTB*8)+1;
volatile bit RB2 @ ((unsigned)&PORTB*8)+2;
volatile bit RB3 @ ((unsigned)&PORTB*8)+3;
volatile bit RB4 @ ((unsigned)&PORTB*8)+4;
volatile bit RB5 @ ((unsigned)&PORTB*8)+5;
volatile bit RB6 @ ((unsigned)&PORTB*8)+6;
volatile bit RB7 @ ((unsigned)&PORTB*8)+7;


volatile bit RC0 @ ((unsigned)&PORTC*8)+0;
volatile bit RC1 @ ((unsigned)&PORTC*8)+1;
volatile bit RC2 @ ((unsigned)&PORTC*8)+2;
volatile bit RC3 @ ((unsigned)&PORTC*8)+3;
volatile bit RC4 @ ((unsigned)&PORTC*8)+4;
volatile bit RC5 @ ((unsigned)&PORTC*8)+5;
volatile bit RC6 @ ((unsigned)&PORTC*8)+6;
volatile bit RC7 @ ((unsigned)&PORTC*8)+7;


volatile bit RE0 @ ((unsigned)&PORTE*8)+0;
volatile bit RE1 @ ((unsigned)&PORTE*8)+1;
volatile bit RE2 @ ((unsigned)&PORTE*8)+2;
volatile bit RE3 @ ((unsigned)&PORTE*8)+3;


volatile bit RBIF @ ((unsigned)&INTCON*8)+0;

volatile bit RABIF @ ((unsigned)&INTCON*8)+0;
volatile bit INTF @ ((unsigned)&INTCON*8)+1;
volatile bit T0IF @ ((unsigned)&INTCON*8)+2;
volatile bit RBIE @ ((unsigned)&INTCON*8)+3;

volatile bit RABIE @ ((unsigned)&INTCON*8)+3;
volatile bit INTE @ ((unsigned)&INTCON*8)+4;
volatile bit T0IE @ ((unsigned)&INTCON*8)+5;
volatile bit PEIE @ ((unsigned)&INTCON*8)+6;
volatile bit GIE @ ((unsigned)&INTCON*8)+7;


volatile bit TMR1IF @ ((unsigned)&PIR1*8)+0;
volatile bit TMR2IF @ ((unsigned)&PIR1*8)+1;
volatile bit CCP1IF @ ((unsigned)&PIR1*8)+2;
volatile bit SSPIF @ ((unsigned)&PIR1*8)+3;
volatile bit TXIF @ ((unsigned)&PIR1*8)+4;
volatile bit RCIF @ ((unsigned)&PIR1*8)+5;
volatile bit ADIF @ ((unsigned)&PIR1*8)+6;


volatile bit CCP2IF @ ((unsigned)&PIR2*8)+0;
volatile bit BCLIF @ ((unsigned)&PIR2*8)+3;
volatile bit EEIF @ ((unsigned)&PIR2*8)+4;
volatile bit C1IF @ ((unsigned)&PIR2*8)+5;
volatile bit C2IF @ ((unsigned)&PIR2*8)+6;


volatile bit TMR1ON @ ((unsigned)&T1CON*8)+0;
volatile bit TMR1CS @ ((unsigned)&T1CON*8)+1;
volatile bit T1SYNC @ ((unsigned)&T1CON*8)+2;
volatile bit T1OSCEN @ ((unsigned)&T1CON*8)+3;
volatile bit T1CKPS0 @ ((unsigned)&T1CON*8)+4;
volatile bit T1CKPS1 @ ((unsigned)&T1CON*8)+5;
volatile bit TMR1GE @ ((unsigned)&T1CON*8)+6;
volatile bit T1GINV @ ((unsigned)&T1CON*8)+7;


volatile bit T2CKPS0 @ ((unsigned)&T2CON*8)+0;
volatile bit T2CKPS1 @ ((unsigned)&T2CON*8)+1;
volatile bit TMR2ON @ ((unsigned)&T2CON*8)+2;
volatile bit TOUTPS0 @ ((unsigned)&T2CON*8)+3;
volatile bit TOUTPS1 @ ((unsigned)&T2CON*8)+4;
volatile bit TOUTPS2 @ ((unsigned)&T2CON*8)+5;
volatile bit TOUTPS3 @ ((unsigned)&T2CON*8)+6;



volatile bit CCP1M0 @ ((unsigned)&CCP1CON*8)+0;
volatile bit CCP1M1 @ ((unsigned)&CCP1CON*8)+1;
volatile bit CCP1M2 @ ((unsigned)&CCP1CON*8)+2;
volatile bit CCP1M3 @ ((unsigned)&CCP1CON*8)+3;
volatile bit DC1B0 @ ((unsigned)&CCP1CON*8)+4;
volatile bit DC1B1 @ ((unsigned)&CCP1CON*8)+5;
volatile bit P1M0 @ ((unsigned)&CCP1CON*8)+6;
volatile bit P1M1 @ ((unsigned)&CCP1CON*8)+7;


volatile bit CCP2M0 @ ((unsigned)&CCP2CON*8)+0;
volatile bit CCP2M1 @ ((unsigned)&CCP2CON*8)+1;
volatile bit CCP2M2 @ ((unsigned)&CCP2CON*8)+2;
volatile bit CCP2M3 @ ((unsigned)&CCP2CON*8)+3;
volatile bit DC2B0 @ ((unsigned)&CCP2CON*8)+4;
volatile bit DC2B1 @ ((unsigned)&CCP2CON*8)+5;
volatile bit CCP2IN0 @ ((unsigned)&CCP2CON*8)+6;
volatile bit CCP2IN1 @ ((unsigned)&CCP2CON*8)+7;


volatile bit ADON @ ((unsigned)&ADCON0*8)+0;
volatile bit GODONE @ ((unsigned)&ADCON0*8)+1;
volatile bit CHS0 @ ((unsigned)&ADCON0*8)+2;
volatile bit CHS1 @ ((unsigned)&ADCON0*8)+3;
volatile bit CHS2 @ ((unsigned)&ADCON0*8)+4;
volatile bit CHS3 @ ((unsigned)&ADCON0*8)+5;
volatile bit ADCS0 @ ((unsigned)&ADCON0*8)+6;
volatile bit ADCS1 @ ((unsigned)&ADCON0*8)+7;


volatile bit PS0 @ ((unsigned)&OPTION_REG*8)+0;
volatile bit PS1 @ ((unsigned)&OPTION_REG*8)+1;
volatile bit PS2 @ ((unsigned)&OPTION_REG*8)+2;
volatile bit PSA @ ((unsigned)&OPTION_REG*8)+3;
volatile bit T0SE @ ((unsigned)&OPTION_REG*8)+4;
volatile bit T0CS @ ((unsigned)&OPTION_REG*8)+5;
volatile bit INTEDG @ ((unsigned)&OPTION_REG*8)+6;
volatile bit RBPU @ ((unsigned)&OPTION_REG*8)+7;

volatile bit RABPU @ ((unsigned)&OPTION_REG*8)+7;


volatile bit TRISA0 @ ((unsigned)&TRISA*8)+0;
volatile bit TRISA1 @ ((unsigned)&TRISA*8)+1;
volatile bit TRISA2 @ ((unsigned)&TRISA*8)+2;
volatile bit TRISA3 @ ((unsigned)&TRISA*8)+3;
volatile bit TRISA4 @ ((unsigned)&TRISA*8)+4;
volatile bit TRISA5 @ ((unsigned)&TRISA*8)+5;
volatile bit TRISA6 @ ((unsigned)&TRISA*8)+6;
volatile bit TRISA7 @ ((unsigned)&TRISA*8)+7;


volatile bit TRISB0 @ ((unsigned)&TRISB*8)+0;
volatile bit TRISB1 @ ((unsigned)&TRISB*8)+1;
volatile bit TRISB2 @ ((unsigned)&TRISB*8)+2;
volatile bit TRISB3 @ ((unsigned)&TRISB*8)+3;
volatile bit TRISB4 @ ((unsigned)&TRISB*8)+4;
volatile bit TRISB5 @ ((unsigned)&TRISB*8)+5;
volatile bit TRISB6 @ ((unsigned)&TRISB*8)+6;
volatile bit TRISB7 @ ((unsigned)&TRISB*8)+7;


volatile bit TRISC0 @ ((unsigned)&TRISC*8)+0;
volatile bit TRISC1 @ ((unsigned)&TRISC*8)+1;
volatile bit TRISC2 @ ((unsigned)&TRISC*8)+2;
volatile bit TRISC3 @ ((unsigned)&TRISC*8)+3;
volatile bit TRISC4 @ ((unsigned)&TRISC*8)+4;
volatile bit TRISC5 @ ((unsigned)&TRISC*8)+5;
volatile bit TRISC6 @ ((unsigned)&TRISC*8)+6;
volatile bit TRISC7 @ ((unsigned)&TRISC*8)+7;



volatile bit TRISE0 @ ((unsigned)&TRISE*8)+0;
volatile bit TRISE1 @ ((unsigned)&TRISE*8)+1;
volatile bit TRISE2 @ ((unsigned)&TRISE*8)+2;
volatile bit TRISE3 @ ((unsigned)&TRISE*8)+3;


volatile bit TMR1IE @ ((unsigned)&PIE1*8)+0;
volatile bit TMR2IE @ ((unsigned)&PIE1*8)+1;
volatile bit CCP1IE @ ((unsigned)&PIE1*8)+2;
volatile bit SSPIE @ ((unsigned)&PIE1*8)+3;
volatile bit TXIE @ ((unsigned)&PIE1*8)+4;
volatile bit RCIE @ ((unsigned)&PIE1*8)+5;
volatile bit ADIE @ ((unsigned)&PIE1*8)+6;


volatile bit CCP2IE @ ((unsigned)&PIE2*8)+0;
volatile bit BCLIE @ ((unsigned)&PIE2*8)+3;
volatile bit EEIE @ ((unsigned)&PIE2*8)+4;
volatile bit C1IE @ ((unsigned)&PIE2*8)+5;
volatile bit C2IE @ ((unsigned)&PIE2*8)+6;



volatile bit SCS @ ((unsigned)&OSCCON*8)+0;
volatile bit IRCF0 @ ((unsigned)&OSCCON*8)+4;
volatile bit IRCF1 @ ((unsigned)&OSCCON*8)+5;
volatile bit IRCF2 @ ((unsigned)&OSCCON*8)+6;


volatile bit TUN0 @ ((unsigned)&OSCTUNE*8)+0;
volatile bit TUN1 @ ((unsigned)&OSCTUNE*8)+1;
volatile bit TUN2 @ ((unsigned)&OSCTUNE*8)+2;
volatile bit TUN3 @ ((unsigned)&OSCTUNE*8)+3;
volatile bit TUN4 @ ((unsigned)&OSCTUNE*8)+4;


volatile bit WPUA0 @ ((unsigned)&WPUA*8)+0;
volatile bit WPUA1 @ ((unsigned)&WPUA*8)+1;
volatile bit WPUA2 @ ((unsigned)&WPUA*8)+2;
volatile bit WPUA3 @ ((unsigned)&WPUA*8)+3;
volatile bit WPUA4 @ ((unsigned)&WPUA*8)+4;
volatile bit WPUA5 @ ((unsigned)&WPUA*8)+5;
volatile bit WPUA6 @ ((unsigned)&WPUA*8)+6;
volatile bit WPUA7 @ ((unsigned)&WPUA*8)+7;


volatile bit WPUB0 @ ((unsigned)&WPUB*8)+0;
volatile bit WPUB1 @ ((unsigned)&WPUB*8)+1;
volatile bit WPUB2 @ ((unsigned)&WPUB*8)+2;
volatile bit WPUB3 @ ((unsigned)&WPUB*8)+3;
volatile bit WPUB4 @ ((unsigned)&WPUB*8)+4;
volatile bit WPUB5 @ ((unsigned)&WPUB*8)+5;
volatile bit WPUB6 @ ((unsigned)&WPUB*8)+6;
volatile bit WPUB7 @ ((unsigned)&WPUB*8)+7;


volatile bit WPUC0 @ ((unsigned)&WPUC*8)+0;
volatile bit WPUC1 @ ((unsigned)&WPUC*8)+1;
volatile bit WPUC2 @ ((unsigned)&WPUC*8)+2;
volatile bit WPUC3 @ ((unsigned)&WPUC*8)+3;
volatile bit WPUC4 @ ((unsigned)&WPUC*8)+4;
volatile bit WPUC5 @ ((unsigned)&WPUC*8)+5;
volatile bit WPUC6 @ ((unsigned)&WPUC*8)+6;


volatile bit WPUE0 @ ((unsigned)&WPUE*8)+0;
volatile bit WPUE1 @ ((unsigned)&WPUE*8)+1;
volatile bit WPUE2 @ ((unsigned)&WPUE*8)+2;
volatile bit WPUE3 @ ((unsigned)&WPUE*8)+3;


volatile bit IOCB0 @ ((unsigned)&IOCB*8)+0;
volatile bit IOCB1 @ ((unsigned)&IOCB*8)+1;
volatile bit IOCB2 @ ((unsigned)&IOCB*8)+2;
volatile bit IOCB3 @ ((unsigned)&IOCB*8)+3;
volatile bit IOCB4 @ ((unsigned)&IOCB*8)+4;
volatile bit IOCB5 @ ((unsigned)&IOCB*8)+5;
volatile bit IOCB6 @ ((unsigned)&IOCB*8)+6;
volatile bit IOCB7 @ ((unsigned)&IOCB*8)+7;

# 389
volatile bit ADFM @ ((unsigned)&ADCON1*8)+7;


volatile bit WDTPS0 @ ((unsigned)&WDTCON*8)+1;
volatile bit WDTPS1 @ ((unsigned)&WDTCON*8)+2;
volatile bit WDTPS2 @ ((unsigned)&WDTCON*8)+3;
volatile bit WDTPS3 @ ((unsigned)&WDTCON*8)+4;




volatile bit ANS0 @ ((unsigned)&ANSEL*8)+0;
volatile bit ANS1 @ ((unsigned)&ANSEL*8)+1;
volatile bit ANS2 @ ((unsigned)&ANSEL*8)+2;
volatile bit ANS3 @ ((unsigned)&ANSEL*8)+3;
volatile bit ANS4 @ ((unsigned)&ANSEL*8)+4;
volatile bit ANS5 @ ((unsigned)&ANSEL*8)+5;
volatile bit ANS6 @ ((unsigned)&ANSEL*8)+6;
volatile bit ANS7 @ ((unsigned)&ANSEL*8)+7;


volatile bit ANS8 @ ((unsigned)&ANSELH*8)+0;
volatile bit ANS9 @ ((unsigned)&ANSELH*8)+1;
volatile bit ANS10 @ ((unsigned)&ANSELH*8)+2;
volatile bit ANS11 @ ((unsigned)&ANSELH*8)+3;
volatile bit ANS12 @ ((unsigned)&ANSELH*8)+4;
volatile bit ANS13 @ ((unsigned)&ANSELH*8)+5;


# 27 "C:\工具\单片机学习资料\SC8P\SCMCU_IDE_V2.00.07\data\include\sc.h"
#pragma intrinsic(__nop)
extern void __nop(void);

# 76
extern unsigned int flash_read(unsigned short addr);


# 149
#pragma intrinsic(_delay)
extern __nonreentrant void _delay(unsigned long);

# 184
extern unsigned char __resetbits;
extern __bit __powerdown;
extern __bit __timeout;

# 5 "C:\mcuproject\scm\荧光剂检测\adc.h"
volatile unsigned int adresult;
unsigned char readVrefADC();
unsigned int ADC_Sample(unsigned char adch);
void DelayXms(unsigned char x);
unsigned int ADC_Result(unsigned char adch);

# 7 "C:\mcuproject\scm\荧光剂检测\number.h"
void showNub(char hight,char low);
void setHightOutput(char outPut);
void setlowOutput(char outPut);
void setOutput(char outPut);
void setInput();
void showNubGewei(char num);
void showNubGewei2(char index);
void showNubShiwei(char num);
void showNubShiwei2(char index);
void showNubBaiwei(char num);
void showNubBaiwei2(char index);
void DP();
void TITLE();
void WU();
void RUO();
void ZHONG();
void QIANG();

void A1();
void B1();
void C1();
void D1();
void E1();
void F1();
void G1();

void A2();
void B2();
void C2();
void D2();
void E2();
void F2();
void G2();

void A3();
void B3();
void C3();
void D3();
void E3();
void F3();
void G3();

void delayms(unsigned char time);
void setLow();
void low4(char bai,char shi,char ge,char h6,char h123);
void low3(char bai,char shi,char ge,char h5);
void low2(char bai,char shi,char ge,char h4);
void low1(char bai,char shi,char ge,char dp,char h3);

# 5 "C:\mcuproject\scm\荧光剂检测\number.c"
void showNubShiwei(char num)
{
for(char i=0;i<7;i++)
{
if((num >> i) & 0x01)
showNubShiwei2(i);
else
setInput();
}
}


void showNubShiwei2(char index)
{
switch(index)
{
case 0:
A2();
break;
case 1:
B2();
break;
case 2:
C2();
break;
case 3:
D2();
break;
case 4:
E2();
break;
case 5:
F2();
break;
case 6:
G2();
break;
}
}

void showNubGewei(char num)
{
for(char i=0;i<8;i++)
{
if((num >> i) & 0x01)
showNubGewei2(i);
else
setInput();
}
}


void showNubGewei2(char index)
{
switch(index)
{
case 0:
A3();
break;
case 1:
B3();
break;
case 2:
C3();
break;
case 3:
D3();
break;
case 4:
E3();
break;
case 5:
F3();
break;
case 6:
G3();
break;
}
}


void showNubBaiwei(char num)
{
for(char i=0;i<8;i++)
{
if((num >> i) & 0x01)
showNubBaiwei2(i);
else
setInput();
}
}


void showNubBaiwei2(char index)
{
switch(index)
{
case 0:
A1();
break;
case 1:
B1();
break;
case 2:
C1();
break;
case 3:
D1();
break;
case 4:
E1();
break;
case 5:
F1();
break;
case 6:
G1();
break;
}
}

void A1()
{
showNub(6,4);
}

void B1()
{
showNub(7,4);
}

void C1()
{
showNub(7,2);
}

void D1()
{
showNub(6,1);
}

void E1()
{
showNub(6,2);
}

void F1()
{
showNub(6,3);
}

void G1()
{
showNub(7,3);
}

void A2()
{
showNub(8,4);
}

void B2()
{
showNub(9,4);
}

void C2()
{
showNub(9,2);
}

void D2()
{
showNub(8,1);
}

void E2()
{
showNub(8,2);
}

void F2()
{
showNub(8,3);
}

void G2()
{
showNub(9,3);
}

void A3()
{
showNub(10,4);
}

void B3()
{
showNub(11,4);
}

void C3()
{
showNub(11,2);
}

void D3()
{
showNub(10,1);
}

void E3()
{
showNub(10,2);
}

void F3()
{
showNub(10,3);
}

void G3()
{
showNub(11,3);
}

void DP()
{

setInput();
setOutput(1);
setOutput(7);
setHightOutput(7);
setlowOutput(1);
delayms(15);
PORTC &= 0xFE;
asm("clrwdt");
}

void TITLE()
{
setInput();
setOutput(4);
setlowOutput(4);
setOutput(5);
setHightOutput(5);
delayms(15);
asm("clrwdt");
setInput();
}

void WU()
{
showNub(12,1);
setInput();
}

void RUO()
{
showNub(12,2);
}

void ZHONG()
{
showNub(12,3);
}

void QIANG()
{
showNub(12,4);
}


void showNub(char hight,char low)
{
setInput();
delayms(2);
setOutput(low);
setOutput(hight);
setlowOutput(low);
setHightOutput(hight);
delayms(15);
asm("clrwdt");
}



void setHightOutput(char outPut)
{
switch(outPut)
{
case 12:
PORTA |= 0x80;
break;
case 11:
PORTA |= 0x04;
break;
case 10:
PORTA |= 0x10;
break;
case 9:
PORTB |= 0x02;
break;
case 8:
PORTC |= 0x04;
break;
case 7:
PORTC |= 0x01;
break;
case 6:
PORTC |= 0x02;
break;
case 5:
PORTC |= 0x08;
break;
case 4:
PORTA |= 0x20;
break;
case 3:
PORTA |= 0x08;
break;
case 2:
PORTA |= 0x02;
break;
case 1:
PORTA |= 0x40;
break;
}
}


void setlowOutput(char outPut)
{
switch(outPut)
{
case 12:
PORTA &= 0x7F;
break;
case 11:
PORTA &= 0xFB;
break;
case 10:
PORTA &= 0xEF;
break;
case 9:
PORTB &= 0xFD;
break;
case 8:
PORTC &= 0xFB;
break;
case 7:
PORTC &= 0xFE;
break;
case 6:
PORTC &= 0xFD;
break;
case 5:
PORTC &= 0xF7;
break;
case 4:
PORTA &= 0xDF;
break;
case 3:
PORTA &= 0xF7;
break;
case 2:
PORTA &= 0xFD;
break;
case 1:
PORTC &= 0xFE;
PORTA &= 0xBF;
break;
}
}


void setOutput(char outPut)
{
switch(outPut)
{
case 12:
TRISA &= 0x7F;
break;
case 11:
TRISA &= 0xFB;
break;
case 10:
TRISA &= 0xEF;
break;
case 9:
TRISB &= 0xFD;
break;
case 8:
TRISC &= 0xFB;
break;
case 7:
TRISC &= 0xFE;
break;
case 6:
TRISC &= 0xFD;
break;
case 5:
TRISC &= 0xF7;
break;
case 4:
TRISA &= 0xDF;
break;
case 3:
TRISA &= 0xF7;
break;
case 2:
TRISA &= 0xFD;
break;
case 1:
TRISA &= 0xBF;
break;
}
}

void setInput()
{
TRISA = 0xFF;
PORTA |= 0xFF;
TRISB |= 0xC2;
PORTB = 0xC2;
TRISC |= 0x0F;
PORTC = 0x0F;
PORTA;
PORTB;
PORTC;
}


void low1(char bai,char shi,char ge,char dp,char h3)
{
setLow();
setlowOutput(1);
if((bai >> 3) & 0x01)
{
setOutput(6);
setHightOutput(6);
}
if((shi >> 3) & 0x01)
{
setOutput(8);
setHightOutput(8);
}
if((ge >> 3) & 0x01)
{
setOutput(10);
setHightOutput(10);
}
if(dp)
{
setOutput(7);
setHightOutput(7);
}
if(h3)
{
setOutput(12);
setHightOutput(12);
}
delayms(15);

}

void low2(char bai,char shi,char ge,char h4)
{
TRISA = 0x00;
setLow();
setlowOutput(2);
if((bai >> 2) & 0x01)
{
setOutput(7);
setHightOutput(7);
}
if((shi >> 2) & 0x01)
{
setOutput(9);
setHightOutput(9);
}
if((ge >> 2) & 0x01)
{
setOutput(11);
setHightOutput(11);
}

if((bai >> 4) & 0x01)
{
setOutput(6);
setHightOutput(6);
}
if((shi >> 4) & 0x01)
{
setOutput(8);
setHightOutput(8);
}
if((ge >> 4) & 0x01)
{
setOutput(10);
setHightOutput(10);
}
if(h4)
{
setOutput(12);
setHightOutput(12);
}
delayms(15);
}

void low3(char bai,char shi,char ge,char h5)
{
TRISA = 0x00;
setLow();
setlowOutput(3);
if((bai >> 5) & 0x01)
{
setOutput(6);
setHightOutput(6);
}
if((shi >> 5) & 0x01)
{
setOutput(8);
setHightOutput(8);
}
if((ge >> 5) & 0x01)
{
setOutput(10);
setHightOutput(10);
}

if((bai >> 6) & 0x01)
{
setOutput(7);
setHightOutput(7);
}
if((shi >> 6) & 0x01)
{
setOutput(9);
setHightOutput(9);
}
if((ge >> 6) & 0x01)
{
setOutput(11);
setHightOutput(11);
}
if(h5)
{
setOutput(12);
setHightOutput(12);
}
delayms(15);
}

void low4(char bai,char shi,char ge,char h6,char h123)
{
TRISA = 0x00;
setLow();
setlowOutput(4);

if((bai >> 0) & 0x01)
{
setOutput(6);
setHightOutput(6);
}
if((shi >> 0) & 0x01)
{
setOutput(8);
setHightOutput(8);
}
if((ge >> 0) & 0x01)
{
setOutput(10);
setHightOutput(10);
}

if((bai >> 1) & 0x01)
{
setOutput(7);
setHightOutput(7);
}
if((shi >> 1) & 0x01)
{
setOutput(9);
setHightOutput(9);
}
if((ge >> 1) & 0x01)
{
setOutput(11);
setHightOutput(11);
}
if(h6)
{
setOutput(12);
setHightOutput(12);
}
if(h123)
{
setOutput(5);
setHightOutput(5);
}
delayms(15);
}

void setLow()
{
TRISA = 0x00;
TRISB = 0x00;
TRISC = 0x00;
setHightOutput(1);
setHightOutput(2);
setHightOutput(3);
setHightOutput(4);
setlowOutput(5);
setlowOutput(6);
setlowOutput(7);
setlowOutput(8);
setlowOutput(9);
setlowOutput(10);
setlowOutput(11);
setlowOutput(12);
}




void delayms(unsigned char time)
{
for(unsigned char i=0;i<time;i++);
}

