

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 21 00:25:44 2020

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	SC8P1713S
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	pa_nodes0,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	text0
    57  0000                     __ptext0:	
    58  001F                     _ADCON0	set	31
    59  001E                     _ADRESH	set	30
    60  000B                     _INTCON	set	11
    61  0007                     _PORTC	set	7
    62  0006                     _PORTB	set	6
    63  0005                     _PORTA	set	5
    64  0001                     _TMR0	set	1
    65  00F9                     _GODONE	set	249
    66  005A                     _T0IF	set	90
    67  0058                     _RBIF	set	88
    68  009F                     _ADCON1	set	159
    69  009E                     _ADRESL	set	158
    70  0096                     _IOCB	set	150
    71  0095                     _WPUB	set	149
    72  008F                     _OSCCON	set	143
    73  0087                     _TRISC	set	135
    74  0086                     _TRISB	set	134
    75  0085                     _TRISA	set	133
    76  0081                     _OPTION_REG	set	129
    77  011A                     _WPUE	set	282
    78  018F                     _WPUC	set	399
    79  018E                     _WPUA	set	398
    80  0188                     _ANSEL	set	392
    81                           
    82                           	psect	cinit
    83  000B                     start_initialization:	
    84                           ; #config settings
    85                           
    86  000B                     __initialization:	
    87                           
    88                           ; Clear objects allocated to COMMON
    89  000B  01F9               	clrf	__pbssCOMMON& (0+127)
    90  000C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
    91  000D  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
    92                           
    93                           ; Clear objects allocated to BANK0
    94  000E  1283               	bcf	3,5	;RP0=0, select bank0
    95  000F  1303               	bcf	3,6	;RP1=0, select bank0
    96  0010  01A6               	clrf	__pbssBANK0& (0+127)
    97  0011                     end_of_initialization:	
    98                           ;End of C runtime variable initialization code
    99                           
   100  0011                     __end_of__initialization:	
   101  0011  0183               	clrf	3
   102  0012  2813               	ljmp	_main	;jump to C main() function
   103                           
   104                           	psect	bssCOMMON
   105  0079                     __pbssCOMMON:	
   106  0079                     _adresult:	
   107  0079                     	ds	2
   108  007B                     _intCount:	
   109  007B                     	ds	1
   110                           
   111                           	psect	bssBANK0
   112  0026                     __pbssBANK0:	
   113  0026                     _intFlag:	
   114  0026                     	ds	1
   115                           
   116                           	psect	cstackCOMMON
   117  0070                     __pcstackCOMMON:	
   118  0070                     ?_initConfig:	
   119  0070                     ?_DelayXms:	
   120                           ; 1 bytes @ 0x0
   121                           
   122  0070                     ?_Timer0_Isr:	
   123                           ; 1 bytes @ 0x0
   124                           
   125  0070                     ??_Timer0_Isr:	
   126                           ; 1 bytes @ 0x0
   127                           
   128  0070                     ?_main:	
   129                           ; 1 bytes @ 0x0
   130                           
   131                           
   132                           ; 1 bytes @ 0x0
   133  0070                     	ds	2
   134  0072                     ??_initConfig:	
   135  0072                     ??_DelayXms:	
   136                           ; 1 bytes @ 0x2
   137                           
   138  0072                     ?_ADC_Result:	
   139                           ; 1 bytes @ 0x2
   140                           
   141  0072                     ?___wmul:	
   142                           ; 2 bytes @ 0x2
   143                           
   144  0072                     ?___lwdiv:	
   145                           ; 2 bytes @ 0x2
   146                           
   147  0072                     DelayXms@x:	
   148                           ; 2 bytes @ 0x2
   149                           
   150  0072                     ___wmul@multiplier:	
   151                           ; 1 bytes @ 0x2
   152                           
   153  0072                     ___lwdiv@divisor:	
   154                           ; 2 bytes @ 0x2
   155                           
   156                           
   157                           ; 2 bytes @ 0x2
   158  0072                     	ds	1
   159  0073                     DelayXms@i:	
   160                           
   161                           ; 1 bytes @ 0x3
   162  0073                     	ds	1
   163  0074                     ??_ADC_Result:	
   164  0074                     DelayXms@j:	
   165                           ; 1 bytes @ 0x4
   166                           
   167  0074                     ___wmul@multiplicand:	
   168                           ; 1 bytes @ 0x4
   169                           
   170  0074                     ___lwdiv@dividend:	
   171                           ; 2 bytes @ 0x4
   172                           
   173                           
   174                           ; 2 bytes @ 0x4
   175  0074                     	ds	1
   176  0075                     ADC_Result@adch:	
   177                           
   178                           ; 1 bytes @ 0x5
   179  0075                     	ds	1
   180  0076                     ??___wmul:	
   181  0076                     ??___lwdiv:	
   182                           ; 1 bytes @ 0x6
   183                           
   184  0076                     ADC_Result@i:	
   185                           ; 1 bytes @ 0x6
   186                           
   187  0076                     ___wmul@product:	
   188                           ; 1 bytes @ 0x6
   189                           
   190  0076                     ___lwdiv@quotient:	
   191                           ; 2 bytes @ 0x6
   192                           
   193                           
   194                           ; 2 bytes @ 0x6
   195  0076                     	ds	1
   196  0077                     ADC_Result@tempResult:	
   197                           
   198                           ; 2 bytes @ 0x7
   199  0077                     	ds	1
   200  0078                     ___lwdiv@counter:	
   201                           
   202                           ; 1 bytes @ 0x8
   203  0078                     	ds	1
   204  0079                     ??_main:	
   205                           
   206                           	psect	cstackBANK0
   207  0020                     __pcstackBANK0:	
   208                           ; 1 bytes @ 0x9
   209                           
   210  0020                     main@av:	
   211                           
   212                           ; 2 bytes @ 0x0
   213  0020                     	ds	2
   214  0022                     main@res2:	
   215                           
   216                           ; 2 bytes @ 0x2
   217  0022                     	ds	2
   218  0024                     main@res:	
   219                           
   220                           ; 2 bytes @ 0x4
   221  0024                     	ds	2
   222                           
   223                           	psect	maintext
   224  0013                     __pmaintext:	
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 36 in file "C:\mcuproject\scm\Ó«¹â¼Á¼ì²â\main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;  res             2    4[BANK0 ] unsigned int 
   235 ;;  res2            2    2[BANK0 ] unsigned int 
   236 ;;  av              2    0[BANK0 ] unsigned int 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2, status,0, pclath, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : B00/0
   243 ;;		On exit  : 300/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1
   246 ;;      Params:         0       0       0
   247 ;;      Locals:         0       6       0
   248 ;;      Temps:          0       0       0
   249 ;;      Totals:         0       6       0
   250 ;;Total ram usage:        6 bytes
   251 ;; Hardware stack levels required when called:    2
   252 ;; This function calls:
   253 ;;		_ADC_Result
   254 ;;		_DelayXms
   255 ;;		___lwdiv
   256 ;;		___wmul
   257 ;;		_initConfig
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           
   264                           ;psect for function _main
   265  0013                     _main:	
   266                           
   267                           ;main.c: 38: initConfig();
   268                           
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   271  0013  20A8               	fcall	_initConfig
   272  0014                     l563:	
   273                           ;main.c: 39: for(;;)
   274                           
   275  0014  0064               	clrwdt	;# 
   276                           
   277                           ;main.c: 42: if(intFlag == 0)
   278  0015  1283               	bcf	3,5	;RP0=0, select bank0
   279  0016  1303               	bcf	3,6	;RP1=0, select bank0
   280  0017  0826               	movf	_intFlag,w
   281  0018  1903               	btfsc	3,2
   282  0019  2814               	goto	l563
   283  001A  3002               	movlw	2
   284                           
   285                           ;main.c: 44: intFlag = 0;
   286  001B  01A6               	clrf	_intFlag
   287                           
   288                           ;main.c: 45: TRISA = 0x02;
   289  001C  1683               	bsf	3,5	;RP0=1, select bank1
   290  001D  0085               	movwf	5	;volatile
   291                           
   292                           ;main.c: 46: ANSEL = 0x02;
   293  001E  1703               	bsf	3,6	;RP1=1, select bank3
   294  001F  0088               	movwf	8	;volatile
   295                           
   296                           ;main.c: 47: uint16 res = ADC_Result(0x0F);
   297  0020  300F               	movlw	15
   298  0021  2050               	fcall	_ADC_Result
   299  0022  0873               	movf	?_ADC_Result+1,w
   300  0023  1283               	bcf	3,5	;RP0=0, select bank0
   301  0024  00A5               	movwf	main@res+1
   302  0025  0872               	movf	?_ADC_Result,w
   303  0026  00A4               	movwf	main@res
   304                           
   305                           ;main.c: 48: uint16 av = 6000/res;
   306  0027  0825               	movf	main@res+1,w
   307  0028  00F3               	movwf	___lwdiv@divisor+1
   308  0029  0824               	movf	main@res,w
   309  002A  00F2               	movwf	___lwdiv@divisor
   310  002B  3070               	movlw	112
   311  002C  00F4               	movwf	___lwdiv@dividend
   312  002D  3017               	movlw	23
   313  002E  00F5               	movwf	___lwdiv@dividend+1
   314  002F  207E               	fcall	___lwdiv
   315  0030  0873               	movf	?___lwdiv+1,w
   316  0031  00A1               	movwf	main@av+1
   317  0032  0872               	movf	?___lwdiv,w
   318  0033  00A0               	movwf	main@av
   319                           
   320                           ;main.c: 50: DelayXms(50);
   321  0034  3032               	movlw	50
   322  0035  20FA               	fcall	_DelayXms
   323                           
   324                           ;main.c: 51: res2 = ADC_Result(0x01);
   325  0036  3001               	movlw	1
   326  0037  2050               	fcall	_ADC_Result
   327  0038  0873               	movf	?_ADC_Result+1,w
   328  0039  1283               	bcf	3,5	;RP0=0, select bank0
   329  003A  00A3               	movwf	main@res2+1
   330  003B  0872               	movf	?_ADC_Result,w
   331  003C  00A2               	movwf	main@res2
   332                           
   333                           ;main.c: 52: res = res2 * av;
   334  003D  0823               	movf	main@res2+1,w
   335  003E  00F3               	movwf	___wmul@multiplier+1
   336  003F  0822               	movf	main@res2,w
   337  0040  00F2               	movwf	___wmul@multiplier
   338  0041  0821               	movf	main@av+1,w
   339  0042  00F5               	movwf	___wmul@multiplicand+1
   340  0043  0820               	movf	main@av,w
   341  0044  00F4               	movwf	___wmul@multiplicand
   342  0045  20CA               	fcall	___wmul
   343  0046  0873               	movf	?___wmul+1,w
   344  0047  00A5               	movwf	main@res+1
   345  0048  0872               	movf	?___wmul,w
   346  0049  00A4               	movwf	main@res
   347                           
   348                           ;main.c: 53: if(res > 29000)
   349  004A  3071               	movlw	113
   350  004B  0225               	subwf	main@res+1,w
   351  004C  3049               	movlw	73
   352  004D  1903               	skipnz
   353  004E  0224               	subwf	main@res,w
   354  004F  2814               	goto	l563
   355  0050                     __end_of_main:	
   356                           
   357                           	psect	text1
   358  00A8                     __ptext1:	
   359 ;; *************** function _initConfig *****************
   360 ;; Defined at:
   361 ;;		line 61 in file "C:\mcuproject\scm\Ó«¹â¼Á¼ì²â\main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2
   370 ;; Tracked objects:
   371 ;;		On entry : B00/0
   372 ;;		On exit  : 300/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1
   375 ;;      Params:         0       0       0
   376 ;;      Locals:         0       0       0
   377 ;;      Temps:          0       0       0
   378 ;;      Totals:         0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; Hardware stack levels required when called:    1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_main
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _initConfig
   391  00A8                     _initConfig:	
   392                           
   393                           ;main.c: 63: PORTA = 0x00;
   394                           
   395                           ;incstack = 0
   396                           ; Regs used in _initConfig: [wreg+status,2]
   397  00A8  0185               	clrf	5	;volatile
   398                           
   399                           ;main.c: 64: PORTB = 0x00;
   400  00A9  0186               	clrf	6	;volatile
   401                           
   402                           ;main.c: 65: PORTC = 0x00;
   403  00AA  0187               	clrf	7	;volatile
   404                           
   405                           ;main.c: 66: TRISA = 0;
   406  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   407  00AC  0185               	clrf	5	;volatile
   408                           
   409                           ;main.c: 67: TRISB = 0;
   410  00AD  0186               	clrf	6	;volatile
   411                           
   412                           ;main.c: 68: TRISC = 0;
   413  00AE  0187               	clrf	7	;volatile
   414                           
   415                           ;main.c: 69: WPUA = 0x00;
   416  00AF  1703               	bsf	3,6	;RP1=1, select bank3
   417  00B0  018E               	clrf	14	;volatile
   418                           
   419                           ;main.c: 70: WPUB = 0x00;
   420  00B1  1303               	bcf	3,6	;RP1=0, select bank1
   421  00B2  0195               	clrf	21	;volatile
   422                           
   423                           ;main.c: 71: WPUC = 0x00;
   424  00B3  1703               	bsf	3,6	;RP1=1, select bank3
   425  00B4  018F               	clrf	15	;volatile
   426                           
   427                           ;main.c: 72: WPUE = 0x00;
   428  00B5  1283               	bcf	3,5	;RP0=0, select bank2
   429  00B6  019A               	clrf	26	;volatile
   430                           
   431                           ;main.c: 73: PORTA = 0x00;
   432  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   433  00B8  0185               	clrf	5	;volatile
   434                           
   435                           ;main.c: 74: PORTB = 0x00;
   436  00B9  0186               	clrf	6	;volatile
   437                           
   438                           ;main.c: 75: PORTC = 0x00;
   439  00BA  0187               	clrf	7	;volatile
   440                           
   441                           ;main.c: 76: IOCB = 0x00;
   442  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   443  00BC  0196               	clrf	22	;volatile
   444  00BD  0000               	nop	;# 
   445  00BE  0064               	clrwdt	;# 
   446                           
   447                           ;main.c: 81: INTCON = 0;
   448  00BF  018B               	clrf	11	;volatile
   449                           
   450                           ;main.c: 82: OSCCON = 0X71;
   451  00C0  3071               	movlw	113
   452  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   453  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   454  00C3  008F               	movwf	15	;volatile
   455                           
   456                           ;main.c: 83: OPTION_REG = 0x00;
   457  00C4  0181               	clrf	1	;volatile
   458                           
   459                           ;main.c: 85: TMR0 = 0;
   460  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   461  00C6  0181               	clrf	1	;volatile
   462                           
   463                           ;main.c: 86: INTCON = 0xE0;
   464  00C7  30E0               	movlw	224
   465  00C8  008B               	movwf	11	;volatile
   466  00C9  0008               	return
   467  00CA                     __end_of_initConfig:	
   468                           
   469                           	psect	text2
   470  00CA                     __ptext2:	
   471 ;; *************** function ___wmul *****************
   472 ;; Defined at:
   473 ;;		line 15 in file "C:\¹¤¾ß\µ¥Æ¬»úÑ§Ï°×ÊÁÏ\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\Umul16.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  multiplier      2    2[COMMON] unsigned int 
   476 ;;  multiplicand    2    4[COMMON] unsigned int 
   477 ;; Auto vars:     Size  Location     Type
   478 ;;  product         2    6[COMMON] unsigned int 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  2    2[COMMON] unsigned int 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0
   483 ;; Tracked objects:
   484 ;;		On entry : 300/0
   485 ;;		On exit  : 300/0
   486 ;;		Unchanged: 300/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1
   488 ;;      Params:         4       0       0
   489 ;;      Locals:         2       0       0
   490 ;;      Temps:          0       0       0
   491 ;;      Totals:         6       0       0
   492 ;;Total ram usage:        6 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function ___wmul
   504  00CA                     ___wmul:	
   505                           
   506                           ;incstack = 0
   507                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   508  00CA  01F6               	clrf	___wmul@product
   509  00CB  01F7               	clrf	___wmul@product+1
   510  00CC                     l2438:	
   511  00CC  1C72               	btfss	___wmul@multiplier,0
   512  00CD  28D4               	goto	l2442
   513  00CE  0874               	movf	___wmul@multiplicand,w
   514  00CF  07F6               	addwf	___wmul@product,f
   515  00D0  1803               	skipnc
   516  00D1  0AF7               	incf	___wmul@product+1,f
   517  00D2  0875               	movf	___wmul@multiplicand+1,w
   518  00D3  07F7               	addwf	___wmul@product+1,f
   519  00D4                     l2442:	
   520  00D4  1003               	clrc
   521  00D5  0DF4               	rlf	___wmul@multiplicand,f
   522  00D6  0DF5               	rlf	___wmul@multiplicand+1,f
   523  00D7  1003               	clrc
   524  00D8  0CF3               	rrf	___wmul@multiplier+1,f
   525  00D9  0CF2               	rrf	___wmul@multiplier,f
   526  00DA  0872               	movf	___wmul@multiplier,w
   527  00DB  0473               	iorwf	___wmul@multiplier+1,w
   528  00DC  1D03               	btfss	3,2
   529  00DD  28CC               	goto	l2438
   530  00DE  0877               	movf	___wmul@product+1,w
   531  00DF  00F3               	movwf	?___wmul+1
   532  00E0  0876               	movf	___wmul@product,w
   533  00E1  00F2               	movwf	?___wmul
   534  00E2  0008               	return
   535  00E3                     __end_of___wmul:	
   536                           
   537                           	psect	text3
   538  007E                     __ptext3:	
   539 ;; *************** function ___lwdiv *****************
   540 ;; Defined at:
   541 ;;		line 6 in file "C:\¹¤¾ß\µ¥Æ¬»úÑ§Ï°×ÊÁÏ\SC8P\SCMCU_IDE_V2.00.07\data\sources\common\lwdiv.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;  divisor         2    2[COMMON] unsigned int 
   544 ;;  dividend        2    4[COMMON] unsigned int 
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  quotient        2    6[COMMON] unsigned int 
   547 ;;  counter         1    8[COMMON] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  2    2[COMMON] unsigned int 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0
   552 ;; Tracked objects:
   553 ;;		On entry : 300/0
   554 ;;		On exit  : 300/0
   555 ;;		Unchanged: 300/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1
   557 ;;      Params:         4       0       0
   558 ;;      Locals:         3       0       0
   559 ;;      Temps:          0       0       0
   560 ;;      Totals:         7       0       0
   561 ;;Total ram usage:        7 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    1
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function ___lwdiv
   573  007E                     ___lwdiv:	
   574                           
   575                           ;incstack = 0
   576                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   577  007E  01F6               	clrf	___lwdiv@quotient
   578  007F  01F7               	clrf	___lwdiv@quotient+1
   579  0080  0872               	movf	___lwdiv@divisor,w
   580  0081  0473               	iorwf	___lwdiv@divisor+1,w
   581  0082  1903               	btfsc	3,2
   582  0083  28A3               	goto	l2474
   583  0084  01F8               	clrf	___lwdiv@counter
   584  0085                     L1:	
   585  0085  0AF8               	incf	___lwdiv@counter,f
   586  0086  1BF3               	btfsc	___lwdiv@divisor+1,7
   587  0087  288C               	goto	l2462
   588  0088  1003               	clrc
   589  0089  0DF2               	rlf	___lwdiv@divisor,f
   590  008A  0DF3               	rlf	___lwdiv@divisor+1,f
   591  008B  2885               	goto	L1
   592  008C                     l2462:	
   593  008C  1003               	clrc
   594  008D  0DF6               	rlf	___lwdiv@quotient,f
   595  008E  0DF7               	rlf	___lwdiv@quotient+1,f
   596  008F  0873               	movf	___lwdiv@divisor+1,w
   597  0090  0275               	subwf	___lwdiv@dividend+1,w
   598  0091  1D03               	skipz
   599  0092  2895               	goto	u265
   600  0093  0872               	movf	___lwdiv@divisor,w
   601  0094  0274               	subwf	___lwdiv@dividend,w
   602  0095                     u265:	
   603  0095  1C03               	skipc
   604  0096  289F               	goto	L2
   605  0097  0872               	movf	___lwdiv@divisor,w
   606  0098  02F4               	subwf	___lwdiv@dividend,f
   607  0099  0873               	movf	___lwdiv@divisor+1,w
   608  009A  1C03               	skipc
   609  009B  03F5               	decf	___lwdiv@dividend+1,f
   610  009C  02F5               	subwf	___lwdiv@dividend+1,f
   611  009D  1476               	bsf	___lwdiv@quotient,0
   612  009E  1003               	clrc
   613  009F                     L2:	
   614  009F  0CF3               	rrf	___lwdiv@divisor+1,f
   615  00A0  0CF2               	rrf	___lwdiv@divisor,f
   616  00A1  0BF8               	decfsz	___lwdiv@counter,f
   617  00A2  288C               	goto	l2462
   618  00A3                     l2474:	
   619  00A3  0877               	movf	___lwdiv@quotient+1,w
   620  00A4  00F3               	movwf	?___lwdiv+1
   621  00A5  0876               	movf	___lwdiv@quotient,w
   622  00A6  00F2               	movwf	?___lwdiv
   623  00A7  0008               	return
   624  00A8                     __end_of___lwdiv:	
   625                           
   626                           	psect	text4
   627  00FA                     __ptext4:	
   628 ;; *************** function _DelayXms *****************
   629 ;; Defined at:
   630 ;;		line 85 in file "C:\mcuproject\scm\Ó«¹â¼Á¼ì²â\adc.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  x               1    wreg     unsigned char 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  x               1    2[COMMON] unsigned char 
   635 ;;  j               1    4[COMMON] unsigned char 
   636 ;;  i               1    3[COMMON] unsigned char 
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		wreg, status,2, status,0
   641 ;; Tracked objects:
   642 ;;		On entry : 300/0
   643 ;;		On exit  : 300/0
   644 ;;		Unchanged: 300/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1
   646 ;;      Params:         0       0       0
   647 ;;      Locals:         3       0       0
   648 ;;      Temps:          0       0       0
   649 ;;      Totals:         3       0       0
   650 ;;Total ram usage:        3 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    1
   653 ;; This function calls:
   654 ;;		Nothing
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _DelayXms
   662  00FA                     _DelayXms:	
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in _DelayXms: [wreg+status,2+status,0]
   666                           ;DelayXms@x stored from wreg
   667  00FA  00F2               	movwf	DelayXms@x
   668                           
   669                           ;adc.c: 87: unsigned char i,j;
   670                           ;adc.c: 88: for(i=x;i>0;i--)
   671  00FB  00F3               	movwf	DelayXms@i
   672  00FC                     l2418:	
   673  00FC  0873               	movf	DelayXms@i,w
   674  00FD  1903               	btfsc	3,2
   675  00FE  0008               	return
   676                           
   677                           ;adc.c: 89: for(j=153;j>0;j--);
   678  00FF  3099               	movlw	153
   679  0100  00F4               	movwf	DelayXms@j
   680  0101                     l2428:	
   681  0101  0BF4               	decfsz	DelayXms@j,f
   682  0102  2901               	goto	l2428
   683  0103  03F3               	decf	DelayXms@i,f
   684  0104  28FC               	goto	l2418
   685  0105                     __end_of_DelayXms:	
   686                           
   687                           	psect	text5
   688  0050                     __ptext5:	
   689 ;; *************** function _ADC_Result *****************
   690 ;; Defined at:
   691 ;;		line 59 in file "C:\mcuproject\scm\Ó«¹â¼Á¼ì²â\adc.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  adch            1    wreg     unsigned char 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  adch            1    5[COMMON] unsigned char 
   696 ;;  tempResult      2    7[COMMON] unsigned int 
   697 ;;  i               1    6[COMMON] unsigned char 
   698 ;; Return value:  Size  Location     Type
   699 ;;                  2    2[COMMON] unsigned int 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0
   702 ;; Tracked objects:
   703 ;;		On entry : 0/300
   704 ;;		On exit  : 200/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMMON   BANK0   BANK1
   707 ;;      Params:         2       0       0
   708 ;;      Locals:         4       0       0
   709 ;;      Temps:          1       0       0
   710 ;;      Totals:         7       0       0
   711 ;;Total ram usage:        7 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _ADC_Result
   723  0050                     _ADC_Result:	
   724                           
   725                           ;incstack = 0
   726                           ; Regs used in _ADC_Result: [wreg+status,2+status,0]
   727                           ;ADC_Result@adch stored from wreg
   728  0050  00F5               	movwf	ADC_Result@adch
   729                           
   730                           ;adc.c: 61: ADCON1 = 0x80;
   731  0051  3080               	movlw	128
   732  0052  1683               	bsf	3,5	;RP0=1, select bank1
   733  0053  1303               	bcf	3,6	;RP1=0, select bank1
   734  0054  009F               	movwf	31	;volatile
   735                           
   736                           ;adc.c: 62: ADCON0 = 0X41 | (adch << 2);
   737  0055  0875               	movf	ADC_Result@adch,w
   738  0056  00F4               	movwf	??_ADC_Result
   739  0057  3001               	movlw	1
   740  0058  1003               	clrc
   741  0059                     L3:	
   742  0059  0DF4               	rlf	??_ADC_Result,f
   743  005A  3EFF               	addlw	-1
   744  005B  1003               	clrc
   745  005C  1D03               	skipz
   746  005D  2859               	goto	L3
   747  005E  0D74               	rlf	??_ADC_Result,w
   748  005F  3841               	iorlw	65
   749  0060  1283               	bcf	3,5	;RP0=0, select bank0
   750  0061  009F               	movwf	31	;volatile
   751  0062  0000               	nop	;# 
   752  0063  0000               	nop	;# 
   753                           
   754                           ;adc.c: 65: GODONE = 1;
   755  0064  1283               	bcf	3,5	;RP0=0, select bank0
   756  0065  1303               	bcf	3,6	;RP1=0, select bank0
   757  0066  149F               	bsf	31,1	;volatile
   758                           
   759                           ;adc.c: 67: unsigned char i = 0;
   760  0067  01F6               	clrf	ADC_Result@i
   761  0068                     l1136:	
   762                           ;adc.c: 68: while(GODONE)
   763                           
   764  0068  1C9F               	btfss	31,1	;volatile
   765  0069  286F               	goto	l2412
   766                           
   767                           ;adc.c: 69: {
   768                           ;adc.c: 70: if(0 == (--i))
   769  006A  0BF6               	decfsz	ADC_Result@i,f
   770  006B  2868               	goto	l1136
   771                           
   772                           ;adc.c: 71: return 0;
   773  006C  01F2               	clrf	?_ADC_Result
   774  006D  01F3               	clrf	?_ADC_Result+1
   775  006E  0008               	return
   776  006F                     l2412:	
   777                           
   778                           ;adc.c: 72: }
   779                           ;adc.c: 73: unsigned int tempResult = ADRESH;
   780  006F  081E               	movf	30,w	;volatile
   781  0070  00F7               	movwf	ADC_Result@tempResult
   782  0071  01F8               	clrf	ADC_Result@tempResult+1
   783                           
   784                           ;adc.c: 74: tempResult <<= 8;
   785  0072  00F8               	movwf	ADC_Result@tempResult+1
   786  0073  01F7               	clrf	ADC_Result@tempResult
   787                           
   788                           ;adc.c: 75: tempResult += ADRESL;
   789  0074  1683               	bsf	3,5	;RP0=1, select bank1
   790  0075  081E               	movf	30,w	;volatile
   791  0076  07F7               	addwf	ADC_Result@tempResult,f
   792  0077  1803               	skipnc
   793  0078  0AF8               	incf	ADC_Result@tempResult+1,f
   794                           
   795                           ;adc.c: 76: return tempResult;
   796  0079  0878               	movf	ADC_Result@tempResult+1,w
   797  007A  00F3               	movwf	?_ADC_Result+1
   798  007B  0877               	movf	ADC_Result@tempResult,w
   799  007C  00F2               	movwf	?_ADC_Result
   800  007D  0008               	return
   801  007E                     __end_of_ADC_Result:	
   802                           
   803                           	psect	text6
   804  00E3                     __ptext6:	
   805 ;; *************** function _Timer0_Isr *****************
   806 ;; Defined at:
   807 ;;		line 15 in file "C:\mcuproject\scm\Ó«¹â¼Á¼ì²â\main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  1    wreg      void 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0
   816 ;; Tracked objects:
   817 ;;		On entry : 0/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1
   821 ;;      Params:         0       0       0
   822 ;;      Locals:         0       0       0
   823 ;;      Temps:          2       0       0
   824 ;;      Totals:         2       0       0
   825 ;;Total ram usage:        2 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		Interrupt level 1
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _Timer0_Isr
   836  00E3                     _Timer0_Isr:	
   837                           
   838                           ;main.c: 16: if (T0IF)
   839  00E3  1D0B               	btfss	11,2	;volatile
   840  00E4  28F1               	goto	i1l555
   841                           
   842                           ;main.c: 17: {
   843                           ;main.c: 20: TMR0 += 155;
   844  00E5  309B               	movlw	155
   845  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   846  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   847  00E8  0781               	addwf	1,f	;volatile
   848                           
   849                           ;main.c: 22: if(++intCount >= 100)
   850  00E9  3064               	movlw	100
   851  00EA  0AFB               	incf	_intCount,f
   852  00EB  027B               	subwf	_intCount,w
   853  00EC  1C03               	skipc
   854  00ED  28F0               	goto	i1l556
   855                           
   856                           ;main.c: 23: {
   857                           ;main.c: 24: intFlag = 1;
   858  00EE  01A6               	clrf	_intFlag
   859  00EF  0AA6               	incf	_intFlag,f
   860  00F0                     i1l556:	
   861                           
   862                           ;main.c: 25: }
   863                           ;main.c: 27: T0IF = 0;
   864  00F0  110B               	bcf	11,2	;volatile
   865  00F1                     i1l555:	
   866                           
   867                           ;main.c: 28: }
   868                           ;main.c: 30: if (RBIF) {
   869  00F1  180B               	btfsc	11,0	;volatile
   870                           
   871                           ;main.c: 31: RBIF = 0;
   872  00F2  100B               	bcf	11,0	;volatile
   873  00F3  0871               	movf	??_Timer0_Isr+1,w
   874  00F4  008A               	movwf	10
   875  00F5  0E70               	swapf	??_Timer0_Isr^(0+-128),w
   876  00F6  0083               	movwf	3
   877  00F7  0EFE               	swapf	126,f
   878  00F8  0E7E               	swapf	126,w
   879  00F9  0009               	retfie
   880  00FA                     __end_of_Timer0_Isr:	
   881  007E                     btemp	set	126	;btemp
   882  007E                     wtemp0	set	126
   883                           
   884                           	psect	intentry
   885  0004                     __pintentry:	
   886                           ;incstack = 0
   887                           ; Regs used in _Timer0_Isr: [wreg+status,2+status,0]
   888                           
   889  0004                     interrupt_function:	
   890  007E                     saved_w	set	btemp
   891  0004  00FE               	movwf	btemp
   892  0005  0E03               	swapf	3,w
   893  0006  00F0               	movwf	??_Timer0_Isr
   894  0007  080A               	movf	10,w
   895  0008  00F1               	movwf	??_Timer0_Isr+1
   896  0009  28E3               	ljmp	_Timer0_Isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80      6       7
    BANK1            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Result
    _main->___lwdiv

Critical Paths under _Timer0_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Timer0_Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Timer0_Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     744
                                              0 BANK0      6     6      0
                         _ADC_Result
                           _DelayXms
                            ___lwdiv
                             ___wmul
                         _initConfig
 ---------------------------------------------------------------------------------
 (1) _initConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     198
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     268
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _DelayXms                                             3     3      0     114
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Result                                           7     5      2      70
                                              2 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _Timer0_Isr                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Result
   _DelayXms
   ___lwdiv
   ___wmul
   _initConfig

 _Timer0_Isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
DATA                 0      0      13       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 21 00:25:44 2020

    ___wmul@multiplicand 0074                      l563 0014                      u265 0095  
    __size_of_ADC_Result 002E                     l1136 0068                     l2412 006F  
                   l2418 00FC                     l2442 00D4                     l2428 0101  
                   l2462 008C                     l2438 00CC                     l2474 00A3  
                   _T0IF 005A                     _IOCB 0096                     _RBIF 0058  
                   _TMR0 0001                     _WPUA 018E                     _WPUB 0095  
                   _WPUC 018F                     _WPUE 011A                     _main 0013  
                   btemp 007E                     start 000A                    ?_main 0070  
                  _ANSEL 0188          __end_of___lwdiv 00A8                    i1l555 00F1  
                  i1l556 00F0                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    pclath 000A                    status 0003  
                  wtemp0 007E         __end_of_DelayXms 0105          __initialization 000B  
           __end_of_main 0050                   ??_main 0079                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
                 _GODONE 00F9                   _INTCON 000B                   _OSCCON 008F  
           ??_ADC_Result 0074               _Timer0_Isr 00E3                   ___wmul 00CA  
              ??___lwdiv 0076                   main@av 0020       __end_of_ADC_Result 007E  
                 saved_w 007E  __end_of__initialization 0011           __pcstackCOMMON 0070  
              ?_DelayXms 0070               __pbssBANK0 0026              ?_Timer0_Isr 0070  
             __pmaintext 0013                  ?___wmul 0072               __pintentry 0004  
             ??_DelayXms 0072               _initConfig 00A8          __size_of___wmul 0019  
                ___lwdiv 007E                  __ptext0 0000                  __ptext1 00A8  
                __ptext2 00CA                  __ptext3 007E                  __ptext4 00FA  
                __ptext5 0050                  __ptext6 00E3                  _intFlag 0026  
    __size_of_Timer0_Isr 0017                  main@res 0024     end_of_initialization 0011  
              DelayXms@i 0073                DelayXms@j 0074                DelayXms@x 0072  
            ?_initConfig 0070           __end_of___wmul 00E3      start_initialization 000B  
      __size_of_DelayXms 000B             ??_Timer0_Isr 0070                 ??___wmul 0076  
            __pbssCOMMON 0079                ___latbits 0000            __pcstackBANK0 0020  
    __size_of_initConfig 0022       __end_of_Timer0_Isr 00FA         ___lwdiv@dividend 0074  
               ?___lwdiv 0072         ___lwdiv@quotient 0076        interrupt_function 0004  
         ___wmul@product 0076              ADC_Result@i 0076        ___wmul@multiplier 0072  
         ADC_Result@adch 0075                 _DelayXms 00FA               _ADC_Result 0050  
           ??_initConfig 0072         __size_of___lwdiv 002A                 _adresult 0079  
        ___lwdiv@divisor 0072          ___lwdiv@counter 0078       __end_of_initConfig 00CA  
               _intCount 007B            __size_of_main 003D                 main@res2 0022  
               intlevel1 0000              ?_ADC_Result 0072     ADC_Result@tempResult 0077  
             _OPTION_REG 0081  
